@&#MAIN-TITLE@&#Motorcycle graph enumeration from quadrilateral meshes for reverse engineering

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Motorcycle graphs of a given quadrilateral mesh are enumerated.


                        
                        
                           
                           Optimum motorcycle graph is found for reverse engineering.


                        
                        
                           
                           Highly curved parts of models are placed on motorcycle edges wherever possible.


                        
                        
                           
                           Mesh is cut into several sub-meshes.


                        
                        
                           
                           Enumeration is performed in each sub-mesh separately.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Semi-regular quadrilateral mesh

Motorcycle graph

Mesh segmentation

Reverse engineering

@&#ABSTRACT@&#


               
               
                  Recently proposed quad-meshing techniques allow the generation of high-quality semi-regular quadrilateral meshes. This paper outlines the generation of quadrilateral segments using such meshes. Quadrilateral segments are advantageous in reverse engineering because they do not require surface trimming or surface parameterization. The motorcycle graph algorithm of Eppstein et al. produces the motorcycle graph of a given quadrilateral mesh consisting of quadrilateral segments. These graphs are preferable to base complexes, because the mesh can be represented with a smaller number of segments, as T-joints (where the intersection of two neighboring segments does not involve the whole edge or the vertex) are allowed in quadrilateral segmentation.
                  The proposed approach in this study enumerates all motorcycle graphs of a given quadrilateral mesh and optimum graph for reverse engineering is then selected. Due to the high computational cost of enumerating all these graphs, the mesh is cut into several sub-meshes whose motorcycle graphs are enumerated separately. The optimum graph is then selected based on a cost function that produces low values for graphs whose edges trace a large number of highly curved regions in the model. By applying several successive enumeration steps for each sub-mesh, a motorcycle graph for the given mesh is found. We also outline a method for the extraction of feature curves (sets of highly curved edges) and their integration into the proposed algorithm. Quadrilateral segments generated using the proposed techniques are validated by B-spline surfaces.
               
            

@&#INTRODUCTION@&#

Recently developed quad-meshing techniques can be used to generate high-quality quadrilateral meshes based on user-specified quality constraints. Such meshes are used in various applications such as mesh compression, texture mapping, surface modeling and finite element simulation. A quadrilateral mesh 
                        Q
                        
                           〈
                           V
                           ,
                           E
                           ,
                           F
                           〉
                        
                      consists of a set of quadrilateral faces 
                        F
                      with edges 
                        E
                      and vertices 
                        V
                     . Quadrilateral segments are defined on 
                        Q
                      as quadrilateral regions with four corners and four boundaries. In other words, they are isomorphic to an 
                        a
                        ,
                        b
                     -grid which is a mesh of unit squares in the rectangle 
                        
                           {
                           
                              (
                              x
                              ,
                              y
                              )
                           
                           |
                           0
                           ≤
                           x
                           ≤
                           a
                           ,
                           0
                           ≤
                           y
                           ≤
                           b
                           }
                        
                     . In this paper, quadrilateral segmentation is used to describe a partitioning of a quadrilateral mesh with quadrilateral segments. The left image of Fig. 1
                     (a) shows a quadrilateral segmentation featuring several quadrilateral segments with boundaries in red and corners in blue. The right image depicts a quadrilateral segment consisting of regularly arranged quadrilateral faces.


                     Motorcycle graphs were first presented in continuous settings and can be used to compute straight skeletons of polygons  [1,2]. Later, Eppstein et al.  [3] extended this concept to discrete settings (i.e., quadrilateral meshes) in order to generate canonical quadrilateral segmentation (i.e., meshes with the same connectivity that always generate the same quadrilateral segmentation). This paper highlights the concept of motorcycle graphs as a means of generating quadrilateral segments and describes a novel algorithm that enumerates all motorcycle graphs of a given quadrilateral mesh so that one of them can be used for a specific application based on the criteria provided. In this approach, the method of Bommes et al.  [4] is used to generate a semi-regular quadrilateral mesh consisting of quadrilateral elements whose vertices mostly have a valence of four (ordinary vertices), while the others have other valences (extraordinary vertices).

This paper also outlines a methodology for the determination of an optimal motorcycle graph for a given quadrilateral mesh to support reverse engineering. As the placement of highly-curved regions on quadrilateral segment boundaries is a common practice in surface modeling applications, the cost formula introduced for optimum motorcycle graph selection produces small values for motorcycle graphs whose edges trace a large number of highly curved regions of the model. Additionally, feature curves (i.e., sets of highly curved edges) that are very difficult to capture with motorcycle graph edges are also extracted and integrated into the enumeration algorithm. Because of high computational cost of the enumeration algorithm, a more efficient enumeration method (in terms of computational cost) is also proposed. Mesh is cut into several sub-meshes and the optimal motorcycle graph in each sub-mesh is found. By applying successive enumeration steps, a motorcycle graph of a given mesh with proximity to the global optimum is obtained. Enumerating all motorcycle graphs of a Beetle model shown in Fig. 1(b), (c) takes several days according to our tests. Using the proposed approach in this paper, the enumeration takes about one second (see the solution in Fig. 1(c)).

This paper is organized as follows: Section  2 outlines related works, Section  3 details the motorcycle graph enumeration algorithm, Section  4 describes a quadrilateral segmentation technique for reverse engineering based on the enumeration algorithm in Section  3, Section  5 discusses the study’s experiments, and Section  6 concludes the work.

@&#RELATED WORKS@&#

The work reported here is related to quadrilateral meshing and mesh segmentation. Selected previous works are covered in this section.

As the use of quadrilateral meshes is very common in a variety of computer graphics applications, quad-meshing has been studied in detail for a number of years. Recently proposed state-of-the-art techniques can be used to produce high-quality quadrilateral meshes whose elements are oriented according to principal curvature directions with good element quality such as square faces. Two review papers  [5,6] have detailed quad-meshing methods comprehensively. Early approaches  [7,8] define the quadrangulation problem based on the anisotropy of the given object. By tracing lines on the model using principal curvature directions, a quadrilateral mesh is generated from a triangular mesh. Rather than consisting of pure quadrilateral elements, the mesh generated also has triangular faces. The mixed-integer quadrangulation method  [4] was motivated by the difficulty of defining principal curvature directions in spherical and flat parts as described in  [7]. Accordingly, only certain principal curvature directions are utilized and are interpolated all over the mesh. Quadrangulation is performed using these directions. Quadrilateral meshes generated using this method consist of only quadrilateral elements, most of which are non-degenerated. We also utilize quadrilateral mesh generated using this method. Other recently proposed methods  [9–19] can also be applied to produce pure triangle-free quadrilateral meshes using various techniques.

Recent works  [20–26] have focused on structure optimization of quadrilateral meshes with the aim of placing extraordinary vertices in appropriate positions to simplify the base complex of the mesh. Myles et al.  [22] discussed the alignment problem for extraordinary vertices and simply updated the positions of extraordinary vertices in the parametric domain, thereby achieving a simpler quadrilateral segment layout. In  [23], the presence of helical structures in the model is highlighted as a problem of extraordinary vertex alignment. These structures start from an extraordinary vertex, make several turns around the model and stop at extraordinary vertices, thereby producing a not simple quadrilateral segment layout. They are removed by changing the local connectivity using Grid-Preserving operators. In a very recent method proposed in  [26], a dual layout is first constructed from curvature-guided crossing loops on the surface, and a quadrilateral mesh is then generated using this layout. The question of how the global structure of quadrilateral meshes can be simplified more remains an ongoing issue, and the proposal of new techniques is expected in the future.

Mesh segmentation has a long history in the graphics community, and numerous related literature surveys have been conducted  [27,28]. A wide variety of algorithms have been proposed for this problem, based on watershed analysis  [29,30] hierarchical clustering  [30], min-cut/max-flow  [31], surface approximation  [32], primitive-based clustering  [33,34], fuzzy clustering and minimum cuts  [35], surface construction  [36,37] and other approaches. Quadrilateral mesh segmentation algorithms are briefly discussed in the following sub-section.

Using quadrilateral meshes for quadrilateral segmentation is easier than using arbitrary meshes because they have well-arranged structures such that their elements are oriented according to the min/max curvature directions of the model. Obtaining quadrilateral segmentation from these meshes is also trivial. However, the amount of work conducted on quadrilateral segmentation to date has been limited. The motorcycle graph algorithm of Eppstein et al.  [3] segments a given quadrilateral mesh into quadrilateral segments whose extraordinary vertices are removed by placing them on the boundary. Myles et al.  [22] proposed a method for achieving quadrilateral segmentation from initial quadrilateral segmentation by changing the quadrilateral segment configuration using local operations. Gunpinar et al.  [38] introducedbi-monotone (quasi-quadrilateral) segments that can capture feature curves that are not aligned with parameter 
                              u
                              –
                              v
                            directions, and therefore appropriate for 
                              B
                           -spline surface fitting. Additionally, the feature-aware algorithm  [39] proposed by Gunpinar et al. generates quadrilateral segmentation using an approach in which paths are greedily flipped to improve the initial path layout. Note that the approaches  [20,23,21,24–26] all produce quadrilateral segments from a quadrilateral mesh. They are free from T-junctions different from the proposed method in this paper and the methods  [3,22]. Once T-junctions are allowed, a smaller number of quadrilateral segments can represent the mesh which is important for reverse engineering applications. On the other hand, it causes the set of possible applications (such as subdivision surfaces) to shrink.

The objective of the method here is similar to those of the segmentation approaches outlined in  [3,22,38,39]. As quadrilateral segmentation generated using the motorcycle graph algorithm  [3] is canonical, the same motorcycle graph is always generated from a given mesh. In the technique outlined here, numerous motorcycle graphs of a given mesh are enumerated, and one suitable for reverse engineering is selected. This method produces a better quadrilateral segmentation than the motorcycle graph algorithm. With the approaches described in  [22,39], a quadrilateral segmentation is achieved by minimizing the values of the cost functions provided. In both approaches, the initial quadrilateral segment layout is changed by greedily applying geometrical operators. As a result, several layout configurations are obtained and one of them is determined as the final configuration. These methods involve performing searches in narrow spaces due to the use of greedy techniques, and the solutions may converge to a local optimum. However, with the algorithm proposed in this paper, a solution is sought in a rather wider space due to the enumeration technique used, and a better quadrilateral segmentation can thus be achieved. The drawback of the enumeration technique is the significant processing time involvement. For this reason, the mesh is cut into several sub-meshes and the enumeration algorithm is applied to each one. In this step, the parameter 
                              χ
                            introduced for the Mesh-Cut (as described in Section  4.2.1) needs to be carefully adjusted. Otherwise, a large number of sub-meshes with narrow search spaces may be formed, and a solution far from the global optimum may be obtained. To capture feature curves that are not aligned with parameter 
                              u
                              –
                              v
                            directions, the use of bi-monotone segments  [38] is much more advantageous than the use of quadrilateral segments as adopted in  [39] and the approach outlined in this paper. As the proposed technique involves enumerating numerous motorcycle graphs for a given quadrilateral mesh, it results in a better quadrilateral segmentation (where more highly-curved regions are placed on quadrilateral segment boundaries) than approaches  [38,39], in which greedy techniques are used for the same purpose.

In the approach by Eppstein et al.  [3], edges are traced on a quadrilateral mesh 
                           Q
                         by moving particles to generate tracks. The particles are placed on extraordinary vertices and moved outward from these vertices along one edge one by one. When a particle reaches an ordinary vertex, it continues to move straight along its opposite edge. Particles stop when they reach extraordinary vertices or at the mesh boundary, and the edges they trace generate tracks on 
                           Q
                        . Such tracks form separatrices, and their union is known as a base complex (Fig. 2
                        (a), red). For meshes without boundaries, a particle starting at an extraordinary vertex 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                         ends at another extraordinary vertex 
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                        , while one starting at 
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                         ends at 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                        . These two particles trace two separatrices between 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                         in opposite directions. Note that separatrices are directed in this work.

The following rules are added to the above particle tracing for motorcycle graph generation  [3]: particles stop if they meet already traced vertices. When two particles meet simultaneously at a vertex, the particle clockwise from the right angle formed by the tracks of two particles stops, while the other one keeps going.

The tracks generate quadrilateral segments under these rules. The graph structure of such segments is known as motorcycle graph as proposed by Eppstein et al.  [3]. These graphs have different topological structures to those of base complexes. T-joints can be seen in motorcycle graphs such that the intersection of two neighboring segments is not the whole edge or the vertex. Allowing T-joints in this way makes it possible to represent the mesh with a smaller number of segments.

The notations described here are based on a quadrilateral mesh that is homeomorphic to a two-manifold without a boundary. Fig. 3
                         shows two separatrices and their local coordinate systems with notations. Here let the 
                           i
                        th separatrix in a base complex be called 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         (in blue). The vertex on 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         whose local coordinate on 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         is 
                           j
                         is denoted as vertex(
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        , 
                           j
                        ), and opp(
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        ) (in red) is the index of the opposite separatrix of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        . left(
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        , 
                           j
                        ) (in green) and right(
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        , 
                           j
                        ) (in light blue) are the indices of the left and right separatrices of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         at vertex(
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        , 
                           j
                        ) which should be an internal vertex of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        . The local coordinate on 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         of vertex 
                           v
                         is denoted as 
                           
                              
                                 
                                    coord
                                 
                              
                              
                                 i
                              
                           
                           
                              (
                              v
                              )
                           
                        , where 
                           v
                         is a vertex of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        . 
                           
                              length
                           
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is the length of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         which is the total number of vertices in 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         minus one.

The 1D local coordinate system for the separatrix 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         is based on the notations provided, and the position (coordinate) of a particle on 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         is represented by integer 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                        . The initial endpoint of the separatrix 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         has the coordinate 0 in the coordinate system of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        , and its terminal endpoint has the coordinate 
                           
                              length
                           
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        . The coordinate value of a point increases by one when it moves to the next vertex away from the origin.

Suppose that the input base complex has 
                           n
                         separatrices, and a particle is placed on each one. Let the 
                           i
                        th particle be called as 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         which starts at the initial endpoint of the separatrix 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and moves along 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         until it is stopped. The point at which a particle stops is called the crashing point. The crashing point of 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         is denoted as 
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                        . The track of 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        , denoted as 
                           
                              
                                 T
                              
                              
                                 i
                              
                           
                        , is the path on 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         starting at the initial endpoint of 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                         and ending at the crashing point 
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                        . If each particle track 
                           
                              
                                 T
                              
                              
                                 i
                              
                           
                         satisfies the following conditions, the set of particle tracks 
                           
                              
                                 
                                    {
                                    
                                       
                                          T
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 n
                              
                           
                         is considered valid: 
                           
                              A1.
                              (No overlapping tracks.) 
                                    
                                       
                                          
                                       
                                    
                                 .

(No crossing tracks.) For each internal vertex 
                                    v
                                  of 
                                    
                                       
                                          T
                                       
                                       
                                          i
                                       
                                    
                                 ,
                                    
                                       
                                          
                                       
                                    
                                  and 
                                    
                                       
                                          
                                       
                                    
                                 , where 
                                    j
                                    =
                                    
                                       
                                          
                                             coord
                                          
                                       
                                       
                                          i
                                       
                                    
                                    
                                       (
                                       v
                                       )
                                    
                                 .

(No inactive particles.) If 
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    0
                                 , then 
                                    
                                       
                                          
                                       
                                    
                                 .

(No dangling tracks, no L-junctions.) If 
                                    0
                                    <
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    <
                                    
                                       length
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    −
                                    
                                       
                                          x
                                       
                                       
                                          
                                             opp
                                          
                                          
                                             (
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                       
                                    
                                 , then one of the following holds (
                                    j
                                    =
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                 ). 
                                    
                                       (1)
                                       
                                          
                                             
                                                
                                                   
                                                
                                             
                                          .


                                          
                                             
                                                
                                                   
                                                
                                             
                                           and 
                                             
                                                
                                                   
                                                
                                             
                                          .


                                          
                                             
                                                
                                                   
                                                
                                             
                                           and
                                             
                                                
                                                   
                                                
                                             
                                          .


                                          
                                             
                                                
                                                   
                                                
                                             
                                          and 
                                             
                                                
                                                   
                                                
                                             
                                          .

Let particles move at different speeds. The order of arrival at vertices changes, and thus the resulting motorcycle graphs also change. Fig. 2(b) shows four different motorcycle graphs generated from the same quadrilateral mesh (a), all of which are structured. All of these graphs can be enumerated so that the optimum one for some criterion can be selected from them. As particle tracks determine this graph, particles need to be placed in appropriate positions to prevent invalid results such as non-motorcycle graphs. These positions must be at the vertices of the base complex.

Let the input base complex have 
                           n
                         separatrices. As motorcycle graphs are formed by valid tracks that can be represented by the local coordinates of their crashing points, they can be enumerated by enumerating the coordinates 
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 x
                              
                              
                                 n
                              
                           
                        . A naive method for enumerating valid tracks is to first enumerate all coordinate combinations and then filter out invalid tracks. This enumeration can be performed using a simple recursive procedure:


                        
                           
                              
                           
                        
                     

However, this naive method is inefficient because a large number of invalid tracks are unnecessarily enumerated before being eventually filtered out. The next section describes a method for avoiding such inefficiency.

To efficiently enumerate motorcycle graphs, it is important to avoid invalid tracks. This is achieved by maintaining lower and upper bounds of coordinates to enforce validity conditions (A1)–(A4). The basic structure of this enumeration is the same as that of the naive method, and a recursive procedure is used to enumerate the coordinates. The difference is that the lower and upper bounds of the coordinates are maintained, and these bounds are used to prevent unnecessary enumeration. Let 
                              
                                 
                                    L
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    U
                                 
                                 
                                    i
                                 
                              
                            denote the lower and upper bounds of coordinate 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           , respectively. The modified version of EnumerateCoordinates is as follows:


                           
                              
                                 
                              
                           
                        

To enforce the validity conditions, the lower and upper bounds are updated in the following way, which is simply derived from (A1)–(A4): 
                              
                                 B1.
                                 (Preventing overlapping tracks.) Suppose coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                    . The upper bound 
                                       
                                          
                                             U
                                          
                                          
                                             
                                                opp
                                             
                                             
                                                (
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                          
                                       
                                     is updated to 
                                       
                                          length
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       −
                                       j
                                    .

(Preventing crossing tracks). Suppose coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                    . For 
                                       k
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       j
                                       −
                                       1
                                    , 
                                       
                                          
                                             U
                                          
                                          
                                             l
                                          
                                       
                                     is updated to 
                                       
                                          
                                             
                                                coord
                                             
                                          
                                          
                                             l
                                          
                                       
                                       
                                          (
                                          v
                                          )
                                       
                                     and 
                                       
                                          
                                             U
                                          
                                          
                                             r
                                          
                                       
                                     to 
                                       
                                          
                                             
                                                coord
                                             
                                          
                                          
                                             r
                                          
                                       
                                       
                                          (
                                          v
                                          )
                                       
                                    , where 
                                       v
                                       =
                                       
                                          vertex
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                    , 
                                       l
                                       =
                                       
                                          left
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                     and 
                                       r
                                       =
                                       
                                          right
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                    .

(Preventing inactive particles.) Suppose the coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 0. The lower bound 
                                       
                                          
                                             L
                                          
                                          
                                             
                                                opp
                                             
                                             
                                                (
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                          
                                       
                                     is updated to 
                                       
                                          length
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    .

(Preventing dangling tracks and L-junctions). Suppose the coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                       
                                       
                                          (
                                          0
                                          <
                                          j
                                          <
                                          
                                             length
                                          
                                          
                                             (
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          )
                                       
                                    . Let 
                                       v
                                       =
                                       
                                          vertex
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                    , 
                                       l
                                       =
                                       
                                          left
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                     and 
                                       r
                                       =
                                       
                                          right
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                    . There are four cases. 
                                       
                                          (1)
                                          Both 
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      
                                                         opp
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                              and 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      
                                                         opp
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                              are updated to 
                                                
                                                   length
                                                
                                                
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                −
                                                j
                                             .


                                             
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      
                                                         opp
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                              is updated to 
                                                
                                                   length
                                                
                                                
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                −
                                                j
                                                −
                                                1
                                             . 
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      l
                                                   
                                                
                                              is updated to 
                                                
                                                   
                                                      
                                                         coord
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                                +
                                                1
                                             .


                                             
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      
                                                         opp
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                              is updated to 
                                                
                                                   length
                                                
                                                
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                −
                                                j
                                                −
                                                1
                                             . 
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      r
                                                   
                                                
                                              is updated to 
                                                
                                                   
                                                      
                                                         coord
                                                      
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                                +
                                                1
                                             .


                                             
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      
                                                         opp
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                              is updated to 
                                                
                                                   length
                                                
                                                
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                −
                                                j
                                                −
                                                1
                                             . Both 
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      l
                                                   
                                                
                                              and 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      l
                                                   
                                                
                                              are updated to 
                                                
                                                   
                                                      
                                                         coord
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                             , and both 
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      r
                                                   
                                                
                                              and 
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      r
                                                   
                                                
                                              are updated to 
                                                
                                                   
                                                      
                                                         coord
                                                      
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                             .

The modified version of Enumerate(
                              i
                              ,
                              n
                           ) is written below. The cases of 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                            and 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 length
                              
                              
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            are excluded from the for-loop iteration because the track 
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                            can neither be a dangling track nor have an L-junction. For sake of simplicity, these cases are not shown in the below pseudo code. The bounds are updated according to (B3) for 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                            and according to (B1) and (B2) for 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 length
                              
                              
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           . In the loop body, the update methods of (B1) and (B2) are first applied, and the bounds are then updated. A recursive call is made to Enumerate(
                              i
                              +
                              1
                           , 
                              n
                           ) using each of (B4-1), (B4-2), (B4-3) and (B4-4); therefore the loop body has four enumeration branches. In the pseudo code, 
                              ς
                            refers to the set of lower and upper bounds 
                              
                                 
                                    
                                       {
                                       
                                          
                                             L
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             U
                                          
                                          
                                             i
                                          
                                       
                                       }
                                    
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                            for particles, and the values for these sets are denoted as 
                              
                                 
                                    ψ
                                 
                                 
                                    t
                                 
                              
                           , where 
                              t
                              =
                              0
                              ,
                              1
                              ,
                              …
                              ,
                              5
                           .


                           
                              
                                 
                              
                           
                        

The lower and upper bounds are said to be consistent when each lower bound is lower than or equal to the corresponding upper bound. If the bounds are not consistent, there are no valid tracks in that enumeration branch. Whenever bounds are updated, consistency is checked; if the check fails, enumeration is stopped for that branch. Maintaining the lower and upper bounds requires some care. When the coordinate 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                            is set to 
                              j
                           , 
                              
                                 
                                    L
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    U
                                 
                                 
                                    i
                                 
                              
                            are also set to 
                              j
                            to facilitate bound consistency checking. If the new bound is weaker than the old one after updating, the old one is kept. Restoring a bound means setting it back to the old one (i.e., that before the update). To efficiently support update and restore operations, stacks are used to represent bounds.

The previous algorithm succeeds in (duplication-free) enumeration of particle tracks without invalid ones. However, the algorithm is still inefficient from the viewpoint of motorcycle graph enumeration: it generates duplicate motorcycle graphs, as different particle tracks can form the same motorcycle graph (Fig. 5). To improve the efficiency, duplications are reduced by avoiding enumeration of particle tracks with a certain property. Note that, since our application does not require duplication-free enumeration, we do not aim to remove duplications completely.

Suppose a pair of opposite particles 
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    p
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                            collide and stop at the same vertex 
                              v
                           . If 
                              v
                            is an internal vertex of separatrix 
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                           , we call it a crack between tracks 
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    T
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                           . In Fig. 5(a)–(c), there is a crack between the horizontal tracks. But, in Fig. 5(d)–(e), since the common crashing point of the two particles on the horizontal separatrices is not an internal vertex of the separatrix, there is no crack. Suppose that there is a crack between 
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    T
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                           , and let 
                              j
                            be the local coordinate of the crack on 
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                           . If particle 
                              
                                 
                                    p
                                 
                                 
                                    
                                       left
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       j
                                       )
                                    
                                 
                              
                            (or 
                              
                                 
                                    p
                                 
                                 
                                    
                                       right
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       j
                                       )
                                    
                                 
                              
                           ) goes beyond the crack, the crack is called penetrated; otherwise it is called non-penetrated. Fig. 6
                            shows penetrated and non-penetrated cracks.

Let 
                              
                                 
                                    T
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    T
                                 
                                 
                                    n
                                 
                              
                            be valid tracks. Suppose that there is a non-penetrated crack between tracks 
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    T
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                           . By changing the position of the common crashing point of particles 
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    p
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                            to an endpoint of 
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                            (i.e. setting 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                            and 
                              
                                 
                                    x
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                              =
                              
                                 length
                              
                              
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           , or 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 length
                              
                              
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            and 
                              
                                 
                                    x
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                              =
                              0
                           ), the crack between 
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    T
                                 
                                 
                                    
                                       opp
                                    
                                    
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                            can be removed. The validity of the tracks and the motorcycle graph formed by them are not changed by this operation. All non-penetrated cracks can be removed by the repeated application of the operation, and the motorcycle graph does not change during this process. This indicates that, for any valid tracks that have non-penetrated cracks, there exist valid tracks that have the same motorcycle graph and that do not have non-penetrated cracks.

Thus, for motorcycle graph enumeration, it is not necessary to enumerate tracks that have non-penetrated cracks. To skip enumeration of these tracks, the update rule (B4) is modified as follows:
                              
                                 
                                    
                                       
                                          B
                                       
                                       
                                          
                                             4
                                          
                                          
                                             ′
                                          
                                       
                                    .
                                 (Preventing dangling tracks and L-junctions). Suppose that the coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                       
                                       
                                          (
                                          0
                                          <
                                          j
                                          <
                                          
                                             length
                                          
                                          
                                             (
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          )
                                       
                                    . Let 
                                       v
                                       =
                                       
                                          vertex
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                    , 
                                       l
                                       =
                                       
                                          left
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                     and 
                                       r
                                       =
                                       
                                          right
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                    . There are two cases.
                                       
                                          (1)
                                          
                                             
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      l
                                                   
                                                
                                              is updated to 
                                                
                                                   
                                                      
                                                         coord
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                                +
                                                1
                                             .


                                             
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      r
                                                   
                                                
                                              is updated to 
                                                
                                                   
                                                      
                                                         coord
                                                      
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                                +
                                                1
                                             .

The speed-up achieved using the Improved Algorithm (in Section  3.3.2) is quantified for a torus model as shown in Fig. 7
                           (a), whose base complex has 68 vertices, 68 quadrilateral faces and 32 undirected separatrices. Computation for this model takes 
                              1525.2
                              
                              
                                 s
                              
                            using the enumeration algorithm described in Section  3.3.1 and just 
                              44.467
                              
                              
                                 s
                              
                            with the Improved Algorithm. These times were measured on a PC with an Intel Core i7 2.6 GHz processor 16 GB of memory using single-threaded implementation.

The objective of the algorithm described in this section is to find the optimal motorcycle graph for reverse engineering by enumerating all motorcycle graphs of a given quadrilateral mesh. Due to the high computational cost of the enumeration algorithm outlined in Section  3, a more efficient enumeration method is proposed in Section  4.2. The cost formula introduced in Section  4.1 includes a criterion (capture of features) for the segments, which is a common practice in surface modeling applications: Segment boundaries should pass through feature regions (such as highly curved parts) of the mesh. Section  4.3 outlines a method for the extraction of feature curves (sets of highly curved edges) and their integration into the proposed algorithm.

Various cost functions can be introduced for use in the selection of optimum quadrilateral segmentation appropriate for reverse engineering applications. A cost formula is chosen which is the same as that of Gunpinar et al.’s work  [39]. This formula produces small values for graphs whose edges trace a large number of highly curved regions of the model and therefore favors placing highly curved edges in the mesh to the segment boundaries as many as possible.

A set of quadrilateral segments can be obtained from a set of particle tracks (
                           
                              {
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              }
                           
                        ). The unsigned dihedral angle 
                           θ
                           
                              (
                              e
                              )
                           
                           ,
                           
                           
                              (
                              0
                              ≤
                              θ
                              
                                 (
                                 e
                                 )
                              
                              ≤
                              π
                              )
                           
                         of the edge 
                           e
                         is the angle between the normal vectors of its adjacent faces. The normal vector for a quadrilateral face is computed by averaging normal vectors of its two triangles. 
                           θ
                           
                              (
                              e
                              )
                           
                         is 0 for a flat edge with two flat faces and shows large values for sharp edges. In this study, the dihedral angle is chosen as a geometric criterion because of its low computation cost.

The cost function 
                           F
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         of the particle track 
                           
                              
                                 T
                              
                              
                                 i
                              
                           
                         is defined to give a low-cost value for a particle track of edges with large dihedral angles. 
                           F
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is defined as 
                           F
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           −
                           C
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           +
                           α
                           D
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        . 
                           C
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           θ
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         is simply the sum of all dihedral angles for the edges of 
                           
                              
                                 T
                              
                              
                                 i
                              
                           
                         and 
                           D
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 
                                    
                                       e
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           d
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              )
                           
                        , where 
                           d
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         is 0 if 
                           θ
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              )
                           
                           ≥
                           ϵ
                        , and is 1. The parameter 
                           ϵ
                         is set to 1.0 for the drill hole and bottle models, and to 0.2 for the Beetle and rockerarm models. According to our experience, fine-tuning of this parameter results in the generation of similar quadrilateral segmentations. 
                           D
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is introduced because particle tracks that are less curved and longer have a lower cost without it. Such tracks are therefore not desirable. A set of particle tracks 
                           
                              {
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              }
                           
                         that minimizes the global cost 
                           
                              
                                 G
                              
                              
                                 T
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 i
                              
                           
                           F
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is sought. 
                           α
                         can be set to 1 in order to assign equal weights to the terms 
                           C
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         and 
                           D
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        . However, it is set to 0.4 to give greater weight to the term 
                           C
                           
                              (
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        , as tracing of highly-curved regions in the model is favored.

Suppose that there are 
                           n
                         particles each with 
                           c
                         candidate positions, and the naive method described in Section  3.3 enumerates 
                           
                              
                                 c
                              
                              
                                 n
                              
                           
                         number of particle positions. For the motorcycle graph enumeration, this number will be smaller because motorcycle graphs are restricted. However, as the number is still exponential, the enumeration has high computational cost, particularly with meshes for which the base complex is not simple. To simplify the motorcycle graph enumeration problem and speed up its resolution, our main approach involves dividing a given mesh into sub-meshes to allow separate enumeration of their motorcycle graphs and then selecting optimum graphs for each sub-mesh. These motorcycle graphs are then merged to generate one for the whole mesh. Fig. 15 shows base complexes (a), (c) of a drill hole model. After the mesh is cut into sub-meshes, 8 sub-meshes are generated from the initial model. The total number of ordinary junctions is reduced to 45 from 1344.

With a mesh cut into sub-meshes, it is obvious that the optimum motorcycle graph of the mesh may not be found. If the absolute optimum solution is needed, the enumeration algorithm should be directly applied without applying cut-and-merge-based enumeration, which has high computational cost. However, based on the outcomes of this study’s experiments, the motorcycle graphs generated with the cut-and-merge-based enumeration are suitable for reverse engineering and they can be considered to approximate a global solution.

In this step, sub-meshes with simpler underlying base complexes are generated from a given quadrilateral mesh using the minimum cut algorithm of Boykov et al.  [31], and any separatrices with helical structures are also eliminated. A weighted graph 
                              G
                              
                                 〈
                                 V
                                 ,
                                 E
                                 〉
                              
                            is constructed using vertex and edge elements of the quadrilateral mesh 
                              Q
                              
                                 〈
                                 V
                                 ,
                                 E
                                 ,
                                 F
                                 〉
                              
                           , where undirected edges in 
                              E
                            connect the set of nodes in 
                              V
                           . The terminals source and sink, which are two different vertices in 
                              V
                           , are first found, and the minimum cut separating these terminals is then computed. The cut divides the mesh 
                              Q
                            into two sub-meshes. In order to avoid the generation of short cuts where one sub-mesh is large and the other is very small, the energy function is designed based on Golovinskiy et al.’s work  [40], which favors the generation of sub-meshes with largely similar areas. This algorithm is applied repeatedly until sub-meshes with the desired level of base complex simplicity are obtained.


                           Selection of terminals: to generate sub-meshes with well-simplified base complexes, source and sink vertices of a cut should be appropriately selected. The basic idea behind such a selection is to enable the separation of extraordinary vertices in a given mesh (or sub-mesh) as equally as possible by finding appropriate positions for the source and the sink because the complexity of a base complex is related to the locations and the number of these extraordinary vertices, at which the separatrices of a base complex start and end. Accordingly, cutting is desirable if the resulting sub-meshes contain almost equal numbers of extraordinary vertices. Fig. 8
                            shows base complexes with separatrices depicted in various colors. Two different cuts (in red) are obtained for different settings of the source (green sphere) and sink (blue sphere) terminals. The base complexes of sub-meshes in the latter (c) are much simplifier than those in the former (b) such that the total number of ordinary junctions in the base complexes is further reduced.

Irregular vertices in the mesh are used to compute the source and sink terminals. The irregular vertex pair 
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              –
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                            (see Fig. 9
                           ) furthest apart is first found by checking distances between all irregular vertices (in red) in the mesh (boundaries in black). All irregular vertices are then grouped into two according to their distances to 
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                           . The geodesic distance is used for these computations. Finally, the center of the two groups is calculated and the two mesh vertices closest to it are assigned as the source and sink terminals. Fig. 9 shows source (green sphere) and sink (blue sphere) vertices computed using this approach, which enables almost-equal separation of irregular vertices and produces a simpler base complex after cutting.


                           Energy function: the two-terminal graph constructed is segmented into two sub-graphs by finding a cut that minimizes the following energy function:
                              
                                 
                                    E
                                    
                                       (
                                       L
                                       )
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          p
                                          ∈
                                          V
                                       
                                    
                                    
                                       
                                          G
                                       
                                       
                                          p
                                       
                                    
                                    
                                       (
                                       
                                          
                                             L
                                          
                                          
                                             p
                                          
                                       
                                       )
                                    
                                    +
                                    λ
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             (
                                             p
                                             ,
                                             q
                                             )
                                          
                                          ∈
                                          N
                                       
                                    
                                    f
                                    
                                       (
                                       
                                          
                                             L
                                          
                                          
                                             p
                                          
                                       
                                       ,
                                       
                                          
                                             L
                                          
                                          
                                             q
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                            where 
                              λ
                            is to set to 1 to assign equal weights to the terms 
                              
                                 
                                    G
                                 
                                 
                                    p
                                 
                              
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                            and 
                              f
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       q
                                    
                                 
                                 )
                              
                           , and fine-tuning of the parameter 
                              λ
                            generates the similar cuts according to our experience. 
                              L
                              =
                              
                                 {
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 |
                                 p
                                 ∈
                                 V
                                 }
                              
                            is a labeling of the mesh vertices 
                              V
                            where 
                              
                                 
                                    L
                                 
                                 
                                    p
                                 
                              
                              ∈
                              
                                 {
                                 S
                                 ,
                                 T
                                 }
                              
                            denotes a label given to a vertex. If the vertex 
                              p
                            is assigned to the source terminal side, 
                              
                                 
                                    L
                                 
                                 
                                    p
                                 
                              
                              =
                              S
                           . Otherwise, 
                              
                                 
                                    L
                                 
                                 
                                    p
                                 
                              
                              =
                              T
                           . 
                              
                                 
                                    G
                                 
                                 
                                    p
                                 
                              
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                            is a data penalty function and 
                              f
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       q
                                    
                                 
                                 )
                              
                            reflects the interaction potential between all pairs of 1-ring neighboring vertices where 
                              N
                            represents a set of all of these pairs. 
                              f
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       q
                                    
                                 
                                 )
                              
                            is set to 1 if 
                              
                                 
                                    L
                                 
                                 
                                    p
                                 
                              
                              ≠
                              
                                 
                                    L
                                 
                                 
                                    q
                                 
                              
                           ; otherwise, it is 0.

From each vertex in 
                              V
                            to both the source and sink terminals, a penalty cost 
                              
                                 
                                    G
                                 
                                 
                                    p
                                 
                              
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                            is assigned as follows: 
                              
                                 
                                    
                                       
                                          G
                                       
                                       
                                          p
                                       
                                    
                                    
                                       (
                                       
                                          
                                             L
                                          
                                          
                                             p
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      h
                                                   
                                                
                                                
                                                if  
                                                D
                                                
                                                   (
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   ,
                                                   p
                                                   )
                                                
                                                ≤
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ;
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      l
                                                   
                                                
                                                +
                                                ν
                                                
                                                   (
                                                   
                                                      
                                                         m
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   −
                                                   D
                                                   
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            p
                                                         
                                                      
                                                      ,
                                                      p
                                                      )
                                                   
                                                   )
                                                
                                                
                                                if  
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      1
                                                   
                                                
                                                <
                                                D
                                                
                                                   (
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         P
                                                      
                                                   
                                                   ,
                                                   p
                                                   )
                                                
                                                ≤
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ;
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      l
                                                   
                                                
                                                
                                                if  
                                                D
                                                
                                                   (
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   ,
                                                   p
                                                   )
                                                
                                                >
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                            where 
                              D
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       P
                                    
                                 
                                 ,
                                 p
                                 )
                              
                              =
                              1
                              −
                              
                                 (
                                 
                                    dst
                                 
                                 
                                    (
                                    
                                       
                                          L
                                       
                                       
                                          P
                                       
                                    
                                    ,
                                    p
                                    )
                                 
                                 /
                                 
                                    (
                                    
                                       dst
                                    
                                    
                                       (
                                       S
                                       ,
                                       p
                                       )
                                    
                                    +
                                    
                                       dst
                                    
                                    
                                       (
                                       T
                                       ,
                                       p
                                       )
                                    
                                    )
                                 
                                 )
                              
                            varying between 0 and 1, and 
                              ν
                              =
                              
                                 (
                                 
                                    
                                       W
                                    
                                    
                                       h
                                    
                                 
                                 −
                                 
                                    
                                       W
                                    
                                    
                                       l
                                    
                                 
                                 )
                              
                              /
                              
                                 (
                                 
                                    
                                       m
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 
                                    
                                       m
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                           . 
                              
                                 dst
                              
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       P
                                    
                                 
                                 ,
                                 p
                                 )
                              
                            is the geodesic distance between vertex 
                              p
                            and the source terminal when 
                              
                                 
                                    L
                                 
                                 
                                    P
                                 
                              
                              =
                              S
                            or the sink terminal when 
                              
                                 
                                    L
                                 
                                 
                                    P
                                 
                              
                              =
                              T
                           . This formula favors cutting that is not very close to either of the source or sink terminals. In this way, short cuts are avoided and cuts that are equi-distant from terminals are promoted. In this study, the coefficients are set to 
                              
                                 
                                    W
                                 
                                 
                                    h
                                 
                              
                              =
                              80
                           , 
                              
                                 
                                    W
                                 
                                 
                                    l
                                 
                              
                              =
                              1
                           , 
                              
                                 
                                    m
                                 
                                 
                                    1
                                 
                              
                              =
                              0.4
                            and 
                              
                                 
                                    m
                                 
                                 
                                    2
                                 
                              
                              =
                              0.5
                           . It is recommended to set 
                              
                                 
                                    m
                                 
                                 
                                    2
                                 
                              
                            to 0.5 which favors cuts that are equi-distant from terminals, and if 
                              D
                              
                                 (
                                 
                                    
                                       L
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 p
                                 )
                              
                              ≤
                              0.4
                           , it is penalized with a high-cost 
                              
                                 
                                    W
                                 
                                 
                                    h
                                 
                              
                           . The authors have found that fine-tuning of the parameters 
                              
                                 
                                    W
                                 
                                 
                                    h
                                 
                              
                           , 
                              
                                 
                                    W
                                 
                                 
                                    l
                                 
                              
                           , 
                              
                                 
                                    m
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    m
                                 
                                 
                                    2
                                 
                              
                            results in the generation of similar cuts.

To favor equal separation of extraordinary vertices, penalties are imposed on such vertices when they are not assigned to their previously determined terminal group (see “Selection of Terminals”). Recall that extraordinary vertices are classified into two groups shown with encircled ellipses in Fig. 9(b) (the source group in light green and the sink group in light blue). For an extraordinary vertex previously determined to be the source (or sink) group, the value 
                              D
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             P
                                          
                                       
                                    
                                 
                                 ,
                                 p
                                 )
                              
                            is updated as 1 so that separation of this vertex from the source (or sink) group is penalized.


                           Number of cuts: the previously explained graph cut algorithm segments a given mesh into two sub-meshes. The base complexes of these sub-meshes are computed separately to be much simpler than that of the initial mesh, and the number of junctions where separatrices meet is thus drastically reduced. However, cutting the mesh only once is not generally enough to obtain the desired level of base complex simplicity. In such cases, it is necessary to apply the graph cut algorithm several times until all sub-meshes obtained have the desired level of base complex simplicity.

Complexity of a given base complex depends on the number of motorcycle graphs of its quadrilateral mesh. As it is not easy to accurately find the number of motorcycle graphs of a given quadrilateral mesh without applying the enumeration algorithm, a naive approach is chosen to compute quasi-complexity of the base complex. In the technique reported here, particle candidate positions (junctions) where two separatrices meet are used to determine the number of cuts. Particles can reside only on these positions during the enumeration step. Fig. 10
                            shows candidate positions for the particles 
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                            in a sub-mesh (boundaries are shown in red) such that 
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                            has two candidate positions while 
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                            has three. Let there be a sub-mesh 
                              S
                            with 
                              m
                            particles, and 
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                            is the number of candidate positions for particle 
                              i
                           . The quasi-complexity 
                              U
                            of 
                              S
                            is computed as 
                              U
                              =
                              
                                 
                                    c
                                 
                                 
                                    1
                                 
                              
                              ⋅
                              
                                 
                                    c
                                 
                                 
                                    2
                                 
                              
                              ⋅
                              …
                              ⋅
                              
                                 
                                    c
                                 
                                 
                                    m
                                 
                              
                           . As the value of 
                              U
                            can become very large, it is simplified using a logarithm such that 
                              U
                              =
                              
                                 
                                    log
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    1
                                 
                              
                              +
                              
                                 
                                    log
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    2
                                 
                              
                              +
                              ⋯
                              +
                              
                                 
                                    log
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    m
                                 
                              
                           . The 
                              U
                            value of each sub-mesh should be smaller than parameter 
                              χ
                           ; otherwise the sub-meshes will be segmented into two using the graph-cut algorithm until sub-meshes with 
                              U
                            values smaller than 
                              χ
                            are obtained. It is recommended to set 
                              χ
                            parameter between 20 and 60 which is assigned as 20, 40 and 60 during experiments. Otherwise, processing may take a large amount of time. It is observed that fine-tuning of the 
                              χ
                            parameter does not affect the results.


                           Results: Fig. 11
                            shows cuts generated (boundaries shown in various colors) for different test models with placed particles in red. The total number of ordinary junctions (
                              
                                 
                                    n
                                 
                                 
                                    j
                                 
                              
                           ) in the base complexes and the number of sub-meshes (
                              
                                 
                                    n
                                 
                                 
                                    G
                                 
                              
                           ) before (Original) and after (
                              χ
                              =
                              40
                              ,
                              20
                           ) applying the Mesh Cut algorithm are detailed in Table 1
                           . The number of ordinary junctions drastically decreases after applying the proposed cut algorithm, and this number falls even further for smaller 
                              χ
                            values so that base complexes become less complex. It should be noted that the drill hole and rockerarm models have a high number of ordinary junctions in their initial base complexes due to the presence of helical structures as shown in Fig. 15. Cutting the mesh into two sub-meshes eliminates the complexity resulting from these structures.

The enumeration algorithm detailed in Section  3 works for a quadrilateral mesh homeomorphic to a two-manifold without boundary. A sub-mesh may have two types of boundary after applying the Mesh-Cut algorithm: Mesh boundary (like in the Beetle model) or Cut boundary (see cuts in Fig. 11). The Mesh-Cut algorithm separates the vertices in the mesh into two groups and the generated cuts may pass through some faces which will not be assigned as the elements of two generated sub-meshes. Let 
                              o
                            sub-meshes 
                              
                                 
                                    B
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    B
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    B
                                 
                                 
                                    o
                                 
                              
                            be generated after cutting. A sub-mesh 
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                            has the vertices 
                              
                                 
                                    V
                                 
                                 
                                    i
                                 
                              
                              ⊂
                              V
                           , the edges 
                              
                                 
                                    E
                                 
                                 
                                    i
                                 
                              
                              ⊂
                              E
                            and the faces 
                              
                                 
                                    F
                                 
                                 
                                    i
                                 
                              
                              ⊂
                              F
                            where 
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                              ∪
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                              ∪
                              ⋯
                              ∪
                              
                                 
                                    V
                                 
                                 
                                    o
                                 
                              
                              =
                              V
                           , 
                              
                                 
                                    E
                                 
                                 
                                    1
                                 
                              
                              ∪
                              
                                 
                                    E
                                 
                                 
                                    2
                                 
                              
                              ∪
                              ⋯
                              ∪
                              
                                 
                                    E
                                 
                                 
                                    o
                                 
                              
                              ≠
                              E
                            and 
                              
                                 
                                    F
                                 
                                 
                                    1
                                 
                              
                              ∪
                              
                                 
                                    F
                                 
                                 
                                    2
                                 
                              
                              ∪
                              ⋯
                              ∪
                              
                                 
                                    F
                                 
                                 
                                    o
                                 
                              
                              ≠
                              F
                           . Neighboring vertices of 
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                            are the vertices in 1-ring neighborhood that are elements of another sub-mesh 
                              
                                 
                                    B
                                 
                                 
                                    j
                                 
                              
                              
                              
                                 (
                                 j
                                 ≠
                                 i
                                 )
                              
                           . Note that a vertex on the boundary is an extraordinary vertex whose valence is at least four.

While computing base complex of a sub-mesh, separatrices are formed that start from extraordinary vertices and can end at extraordinary vertices, Mesh boundary vertices or neighboring vertices. Motorcycle graph enumeration for a sub-mesh is performed to obtain particle tracks using its base complex in a similar way explained in Section  3 and the particle candidate positions can be intersection vertices of separatrices, extraordinary vertices, Mesh boundary vertices or neighboring vertices. The motorcycle graph of a sub-mesh is the union of the obtained particle tracks after the enumeration. However, some separatrices in a sub-mesh may not have their opposite, left or right separatrices. Accordingly, the update rules (B1), (B2), (B3) and (
                              
                                 B
                              
                              
                                 
                                    4
                                 
                                 
                                    ′
                                 
                              
                           ) should be customized for these separatrices (not for others).
                              
                                 B1.
                                 (Preventing overlapping tracks.) Suppose coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                    . No need to update 
                                       
                                          
                                             L
                                          
                                          
                                             
                                                opp
                                             
                                             
                                                (
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                          
                                       
                                     if separatrix 
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                     does not have opposite separatrix (
                                       
                                          opp
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    ).

(Preventing crossing tracks). Suppose coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                    . For 
                                       k
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       j
                                       −
                                       1
                                    , no need to update 
                                       
                                          
                                             U
                                          
                                          
                                             l
                                          
                                       
                                     if separatrix 
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                     does not have 
                                       
                                          left
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                    , where 
                                       v
                                       =
                                       
                                          vertex
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                    , 
                                       l
                                       =
                                       
                                          left
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                     and 
                                       r
                                       =
                                       
                                          right
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                    . Similarly, no need to update 
                                       
                                          
                                             U
                                          
                                          
                                             r
                                          
                                       
                                     if separatrix 
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                     does not have 
                                       
                                          right
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          k
                                          )
                                       
                                    .

(Preventing inactive particles.) No recursive call needed if separatrix 
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                     does not have opposite separatrix.

(Preventing dangling tracks and L-junctions). Suppose coordinate 
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                     is set to 
                                       j
                                       
                                       
                                          (
                                          0
                                          <
                                          j
                                          <
                                          
                                             length
                                          
                                          
                                             (
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          )
                                       
                                    . Let 
                                       v
                                       =
                                       
                                          vertex
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                    , 
                                       l
                                       =
                                       
                                          left
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                     and 
                                       r
                                       =
                                       
                                          right
                                       
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          j
                                          )
                                       
                                    . 
                                       
                                          (1)
                                          No recursive call needed for separatrix 
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                   
                                                
                                              with no 
                                                
                                                   left
                                                
                                                
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   k
                                                   )
                                                
                                             .

No recursive call needed for separatrix 
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                   
                                                
                                              with no 
                                                
                                                   right
                                                
                                                
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   k
                                                   )
                                                
                                             .

Motorcycle graphs of the obtained sub-meshes are enumerated using the Partial MC Generator and the Complete MC Generator and finally a graph representing a motorcycle graph for the whole mesh is obtained. Selection of the optimum graph for each sub-mesh is based on a cost function which will also be described here.


                           Partial MC Generator (PMG): the main aim here is to find the optimum motorcycle graph for each sub-mesh by applying the enumeration algorithm in Section  3. After the enumeration, the optimum graph is selected, and some particles in this graph go beyond the cut which are called as free particles while others stop inside the sub-mesh. Fig. 12
                            shows the cuts (in red) and enumeration for the sub-meshes 
                              
                                 
                                    S
                                 
                                 
                                    A
                                 
                              
                            and 
                              
                                 
                                    S
                                 
                                 
                                    B
                                 
                              
                           . The tracks of free particles are marked with black circles (b) and are thickened, and the tracks of others are marked with blue circles (b). For the next enumeration performed in another sub-mesh, free particles are also used in base complex computation. Namely, free particles of 
                              
                                 
                                    S
                                 
                                 
                                    A
                                 
                              
                            (b) are also taken into account when the base complex of 
                              
                                 
                                    S
                                 
                                 
                                    B
                                 
                              
                            is computed (marked with red circles (c)). In this way, particles with dangling tracks go further and stop (d).


                           Complete MC Generator (CMG): the union of optimum graphs after applying PMG may not represent a motorcycle graph when the whole mesh is considered. Therefore, CMG is implemented to perform successive enumeration steps in sub-meshes separately until a motorcycle graph for the whole mesh is obtained. The same methodology as that for the PMG is used for the CMG, but only certain particles are considered during the enumeration step. These are free particles and linked particles, which are those to be included in the enumeration with free particles to avoid the generation of invalid motorcycle tracks. In Fig. 13
                           (b), particles with tracks shown in orange, pink, purple, gray and blue colors are linked particles.


                           Fig. 13(a) shows an invalid motorcycle graph consisting of particle tracks. The particle track shown in light green is that of a free particle which should be positioned after performing enumeration in the sub-mesh (boundaries shown in red). The base complex is computed using this free particle and related particles, whose separatrices traced are shown with dashed lines (b). The particle candidate positions that are used for the enumeration are marked with black dots. The tracks of other particles (tracks marked with solid lines) do not need to be considered during the enumeration process. Starting with such a base complex, enumeration is performed and the optimum motorcycle graph is selected from among those enumerated. Fig. 13(c) shows the motorcycle graph generated after several successive enumeration steps. As mentioned in the previous paragraph, such successive steps are performed until a motorcycle graph for the whole mesh is obtained. It should be noted that the CMG may not always converge to a valid motorcycle graph for the whole mesh; that is free particles may always be present after enumerations. However, no such cases were observed in the experiments of this study. To overcome this convergence problem, various naive approaches can be proposed. After detecting repetitive segment configurations causing unconvergence, free particles in each configuration are extended to obtain a motorcycle graph for the whole mesh. The optimum motorcycle graph can then be chosen.

Extraordinary vertices are not always connected to or near the highly curved regions. As a result, these regions inevitably reside inside the generated quadrilateral segments of motorcycle graph. For reverse engineering applications such as surface modeling, it is crucial to locate as many such regions as possible on segment boundaries. After the highly-curved regions that are very difficult to capture with the particles placed on extraordinary vertices have been detected and extracted, and additional particles are placed on these curves to enable them to be traced. These particles are then integrated to the motorcycle graph enumeration algorithm in the same way as particles located on extraordinary vertices.

The highly-curved regions mentioned above are called as feature curves, and have three main properties:
                           
                              •
                              They are sets of highly curved connected edges in the same parametric direction. In other words, all these connected edges have dihedral angles (in radian) greater than the flatness threshold 
                                    ρ
                                 . Setting 
                                    ρ
                                  to smaller values results in the generation of numerous feature curves, which may be undesirable. The value is therefore set between 0.4 and 0.5 in the study’s experiments.

They have appropriate lengths (i.e., number of quadrilateral edges) to avoid the extraction of short curves. Feature curves with length less than the threshold 
                                    τ
                                  are discarded. Model resolution and feature curves present in the model determine the value of 
                                    τ
                                 . Smaller values are set for the Beetle and bottle models, which contain short feature curves.

They are not close to extraordinary vertices. To control proximity, the parameter 
                                    ζ
                                  is introduced so that the number of edges in the same parametric direction should exceed 
                                    ζ
                                  from end points of an extracted feature curve to any extraordinary vertex. In this way, feature curves that are very difficult to capture with particles placed on extraordinary vertices can be detected. The results of our experiments suggest that fine-tuning of 
                                    ζ
                                  does not significantly affect extracted feature curves.


                        Fig. 14
                         shows extracted feature curves. The drill hole model has only one feature curve, the Beetle model has five, the bottle model has twelve and the rockerarm model has three. After this extraction, two particles moving in opposite directions (b) are inserted next to the middle of the feature curve. The parameter values used during our experiments are shown in Table 2
                        . In this step, it is also possible to utilize sophisticated algorithms for feature curve extraction and the feature curves extracted using other methods can be integrated into the proposed framework once their edges are aligned in the same parametric direction. The insertion of the feature curves can be reduced by utilizing more sophisticated surface fitting algorithms that inserts knots near the feature curves. Note that the mixed-integer quadrangulation technique  [4] of Bommes et al. smoothens the given mesh during quadrangulation so that mesh noise is reduced. It can therefore be assumed that there is no significant noise in the quadrilateral mesh taken as input in the proposed method.

@&#RESULTS AND DISCUSSION@&#


                     Fig. 15
                      illustrates the flow of the proposed algorithm. We apply this algorithm to the following five quadrilateral mesh models in the experiments reported here: a drill hole, a rockerarm, a Beetle, a bottle and a block. This section covers the results for different cut parameter (
                        χ
                     ) values, comparison with existing quadrilateral segmentation techniques, the number of motorcycle graphs generated during the enumeration step, the computational time taken for each model, a flat boundary removal technique, generated 
                        B
                     -spline surface models and deviations of generated surfaces from the original quadrilateral meshes. Fig. 16
                      illustrates the motorcycle graph enumeration steps for a Beetle model that has four sub-meshes after 
                        χ
                      is set to 60. A motorcycle graph of a given mesh is generated by performing enumeration twice for each sub-mesh.


                     Experiments: as seen from Figs. 15 and 17–19
                     
                     
                     , a large number of highly curved edges in the models are placed on segment boundaries (shown in various colors). It can be seen that highly curved edges in Fig. 17(b) marked with black round dots cannot be traced by any particle when 
                        χ
                      is set to 20, but can be traced when 
                        χ
                        =
                        40
                     . Assigning smaller values for 
                        χ
                      cuts the mesh into more sub-meshes, thereby reducing the solution space and making solutions farther from the global optimum solution. The cut (in brown) marked with red circle does not allow the particle (track marked with a black circle) to go further and trace highly curved edges (marked with black round dots). Another comparison is made for the proposed algorithm (b) and the motorcycle graph algorithm  [3] (c). Highly curved edges (marked with a black circle in (c)) are not placed on segment boundaries.

As detailed in the feature curve integration algorithm, it is crucial to place particles on highly curved regions that cannot be traced by particles placed on extraordinary vertices. Fig. 18(a) shows such a case for the bottle model. A large number of highly curved edges (marked with black circles) can be seen inside the generated segments, which is problematic for 
                        B
                     -spline surface fitting. The feature curve integration step improves the quality of quadrilateral segmentation (b) for reverse engineering applications.

Different quadrilateral segmentations are obtained when 
                        χ
                      is set to 20, 40 and 60 as shown in Fig. 19(a)–(c). However, highly curved edges in the model are captured for all these 
                        χ
                      settings. The quadrilateral segments generated using the motorcycle graph algorithm  [3] (d), method of  [22] ((e), for their particular choice of thresholds), method of Campen et al.  [26] ((f), for their particular choice of thresholds) and method of Bommes et al.  [19] ((g), for their particular choice of thresholds) have highly curved edges seen in the inner regions (marked with black circles) which may not be generally preferable for surface fitting in practice. Quadrilateral segments generated using other methods  [23,25] also contain these highly curved edges as far as their images shown in the papers are concerned. Recall that T-junctions do not exist in the partitions of  [25,23,26], whereas they exist in that of  [22,3] and the proposed method.


                     Computational time: a PC having Intel Core i5 650 3.2 GHz processor and 16 GB memory is used for the experiments in this study and the implementation is single-threaded. Table 6 shows the computational time taken for each model. The processing time for the Mesh-Cut algorithm depends on the 
                        χ
                      setting and is much longer for smaller values because the mesh is cut into a large number of sub-meshes. Computation of the geodesic distance from each vertex in the mesh to the source and sink terminals dominates the processing time in this step. The motorcycle graph enumeration step also depends on the 
                        χ
                      settings, and the computational cost is higher for greater values because a large number of graphs are enumerated. As an example, for the rockerarm model with 
                        χ
                        =
                        60
                     , 340, 396, 807 motorcycle graphs were enumerated at a time cost of more than eight hours. However, the test results indicate that better solutions (with minimum cost) were obtained with large 
                        χ
                      values (compare the costs of rockerarm with 
                        χ
                        =
                        20
                        ,
                        40
                        ,
                        60
                      and the Beetle with 
                        χ
                        =
                        20
                        ,
                        40
                     ). For the drill hole and bottle models, the results are very similar when 
                        χ
                      is set to 20, 40 or 60. Assigning large values such as 80 for 
                        χ
                      results in such a high computational cost that the graph enumeration step takes a large amount of time.


                     Flat boundary removal: to achieve a quadrilateral segmentation with much greater compactness (i.e., fewer segments), flat (less-curved) boundaries are removed using a naive approach. Any particle tracks with a cost exceeding the user-defined parameter 
                        η
                      are removed (
                        η
                        =
                        1
                      for the drill hole and bottle models, and 
                        η
                        =
                        −
                        3
                      for the rockerarm and Beetle models). A greedy removal process is applied in which tracks are sorted in decreasing order of cost and those with higher cost are removed first. If non-quadrilateral segments occur during this process, removal is not performed. The images on the top of Fig. 20
                     (a) show the models after this process.


                     
                        
                           
                        
                     
                  

By removing a path, the shape of the boundary may become worse in terms of the reverse engineering. An additional criterion called as the boundary smoothness criterion is considered during the removal process. If a sharp corner (like a kink) occurs on the boundary after this process, the removal is discarded. We simply check the angle between two neighboring edges (in red and orange on the right image) of the first and last edge (in black) in the paths. If this angle is larger than parameter 
                        P
                      (set to 25°), removal is discarded. Otherwise, it is performed. Bottom images of Fig. 20(a) show partitions when the boundary smoothness criterion is used. As a part of the future work, we will investigate algorithms considering several criteria during the removal process. The parameters 
                        η
                      and 
                        P
                      are not sensitive to small changes.


                     
                        B
                     -spline surfaces: without the parameterization step, 
                        B
                     -spline surfaces can be generated as they intrinsically have parameter 
                        u
                        –
                        v
                      values. Each segment is fitted with uniform bi-cubic 
                        B
                     -spline surfaces, and segments have data points regularly located in the 
                        u
                        –
                        v
                      direction. Two-stage curve blending is performed such that data in each 
                        u
                      direction are blended to form a curve, and these curves are then blended to form a surface.

Let a quadrilateral segment have 
                        
                           (
                           m
                           +
                           1
                           )
                        
                        ×
                        
                           (
                           n
                           +
                           1
                           )
                        
                      data points 
                        
                           
                              P
                           
                           
                              i
                              ,
                              j
                           
                        
                      where 
                        0
                        ≤
                        i
                        ≤
                        m
                      and 
                        0
                        ≤
                        j
                        ≤
                        n
                      representing indices of columns and rows respectively. The following linear system is first solved under the free-end condition to obtain control points 
                        
                           〈
                           
                              
                                 C
                              
                              
                                 0
                                 ,
                                 j
                              
                           
                           ,
                           
                              
                                 C
                              
                              
                                 1
                                 ,
                                 j
                              
                           
                           ,
                           
                              
                                 C
                              
                              
                                 2
                                 ,
                                 j
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 C
                              
                              
                                 m
                                 +
                                 1
                                 ,
                                 j
                              
                           
                           ,
                           
                              
                                 C
                              
                              
                                 m
                                 +
                                 2
                                 ,
                                 j
                              
                           
                           〉
                        
                     :
                        
                           
                              
                                 [
                                 
                                    
                                       
                                          1
                                       
                                       
                                          −
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          4
                                       
                                       
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          4
                                       
                                       
                                          1
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋱
                                       
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          4
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          −
                                          1
                                       
                                       
                                          1
                                       
                                    
                                 
                                 ]
                              
                              ×
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                0
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                1
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                2
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                m
                                                +
                                                1
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                m
                                                +
                                                2
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                 
                                 ]
                              
                              =
                              
                                 [
                                 
                                    
                                       
                                          0
                                       
                                    
                                    
                                       
                                          6
                                          
                                             
                                                P
                                             
                                             
                                                0
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          6
                                          
                                             
                                                P
                                             
                                             
                                                1
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          6
                                          
                                             
                                                P
                                             
                                             
                                                m
                                                +
                                                1
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          0
                                       
                                    
                                 
                                 ]
                              
                              .
                           
                        
                      The obtained control points 
                        
                           
                              C
                           
                           
                              i
                              ,
                              j
                           
                        
                      are again blended for all columns by solving the following linear system under the free-end condition to obtain final control points 
                        
                           〈
                           
                              
                                 V
                              
                              
                                 i
                                 ,
                                 0
                              
                           
                           ,
                           
                              
                                 V
                              
                              
                                 i
                                 ,
                                 1
                              
                           
                           ,
                           
                              
                                 V
                              
                              
                                 i
                                 ,
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 V
                              
                              
                                 i
                                 ,
                                 n
                                 +
                                 1
                              
                           
                           ,
                           
                              
                                 V
                              
                              
                                 i
                                 ,
                                 n
                                 +
                                 2
                              
                           
                           〉
                        
                      of uniform cubic 
                        B
                     -spline surface: 
                        
                           
                              
                                 [
                                 
                                    
                                       
                                          1
                                       
                                       
                                          −
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          4
                                       
                                       
                                          1
                                       
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          4
                                       
                                       
                                          1
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋱
                                       
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                       
                                          1
                                       
                                       
                                          4
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          ⋯
                                       
                                       
                                          0
                                       
                                       
                                          0
                                       
                                       
                                          −
                                          1
                                       
                                       
                                          1
                                       
                                    
                                 
                                 ]
                              
                              ×
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                i
                                                ,
                                                0
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                i
                                                ,
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                i
                                                ,
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                i
                                                ,
                                                n
                                                +
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                i
                                                ,
                                                n
                                                +
                                                2
                                             
                                          
                                       
                                    
                                 
                                 ]
                              
                              =
                              
                                 [
                                 
                                    
                                       
                                          0
                                       
                                    
                                    
                                       
                                          6
                                          
                                             
                                                C
                                             
                                             
                                                i
                                                ,
                                                0
                                             
                                          
                                       
                                    
                                    
                                       
                                          6
                                          
                                             
                                                C
                                             
                                             
                                                i
                                                ,
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          6
                                          
                                             
                                                C
                                             
                                             
                                                i
                                                ,
                                                n
                                             
                                          
                                       
                                    
                                    
                                       
                                          0
                                       
                                    
                                 
                                 ]
                              
                              .
                           
                        
                     
                  


                     Figs. 20(b) and 15(g) show 
                        B
                     -spline surfaces for segments generated using the proposed algorithm. Deviation of the generated surfaces from the original quadrilateral mesh is shown in Fig. 21
                     . Less deviation occurs with segments generated using the proposed algorithm (PA) than with those generated using the bi-monotone segment generation method  [38] (for the particular choice of thresholds used in the paper) and the motorcycle graph (MC) algorithm  [3].


                     Comparison with existing techniques: approaches with functions similar to that of the proposed method have been reported by Myles et al.  [22] and Gunpinar et al.  [39]. In the former, highly curved regions are implicitly placed on quadrilateral segment boundaries. Due to the methodologies used in the approach, highly-curved regions are sometimes seen within the boundaries of these segments (see Fig. 19(e)). As the geometric error (i.e., 
                        
                           
                              ϵ
                           
                           
                              P
                           
                        
                     ) is measured as an area-weighted error during T-mesh optimization, the geometric constraint parameter (i.e., 
                        
                           
                              ϵ
                           
                           
                              0
                           
                        
                     ) also works as an area-weighted quantity. It is considered difficult to control ordinary (non-area-weighted) geometric error by specifying an area-weighted error, which in turn makes the placement of highly-curved regions on boundaries difficult. The precise surface approximation error is also not utilized because of its computational complexity. Instead, a simple Bezier curve network fit is used to approximate the per-patch error, which additionally makes it more difficult to control the exact geometric error. As shown by the images in  [22], an undesirably large number of quadrilateral segments is needed to capture all highly curved regions in the model. This stems from the energy formula utilized, which favors square quadrilateral segments based on the perimeter-area ratio. In contrast, quadrilateral segment shapes are determined from feature curves in the proposed algorithm, and elongated features (such as fillets) can therefore be captured by a single quadrilateral segment. The proposed method is based on motorcycle graphs, which have the potential advantage of theoretically guaranteed coarseness shown by Eppstein et al. (i.e. the number of patches in motorcycle graphs is within a constant factor of the optimum).

The proposed method and the technique of Gunpinar et al.  [39] can be compared in terms of the cost value of the quadrilateral segmentation generated. The parameters in the headers of Table 3
                      (
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    P
                                    F
                                 
                              
                           
                        
                     , 
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    20
                                 
                              
                           
                        
                      and 
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    40
                                 
                              
                           
                        
                     ) refer to the global cost for the quadrilateral segments obtained using  [39], and for that of the proposed method with 
                        χ
                        =
                        20
                      and 
                        χ
                        =
                        40
                     , respectively. All values are obtained without using the feature curve integration algorithm because both techniques involve slightly different methodologies for feature curve detection. The proposed algorithm with 
                        χ
                        =
                        40
                      allows a lower quadrilateral segmentation cost than Gunpinar et al.’s technique  [39] thanks to its enumeration algorithm, which looks for an optimum motorcycle graph over a wider solution space rather than utilizing a greedy local path flipping operator. For the 
                        χ
                        =
                        20
                      setting, the quadrilateral segmentation generated for some test models has a higher cost than those obtained with Gunpinar et al.’s technique  [39] as this 
                        χ
                      setting leads to the formation of large numbers of sub-meshes with narrower search spaces. Fig. 22
                      shows quadrilateral segments generated using both techniques. The proposed algorithm exhibits better performance in terms of capturing and placing highly-curved parts on quadrilateral segment boundaries as shown by the black circles.


                     Comparison of results with optimum solutions: the results of quadrilateral segmentation using the proposed enumeration algorithm as described in Section  4 with the Mesh-Cut algorithm are here compared with those obtained without the Mesh-Cut algorithm (full enumeration). A block model generated using  [19], a partial Beetle model obtained using  [4] and a partial drill hole model generated using  [23] are tested using a PC with an Intel Core i5 3230 2.6 GHz processor and 8 GB of memory. As seen from Fig. 23
                     , the results of both approaches are similar. Table 4
                      lists the costs of the quadrilateral segmentations obtained and the related processing times. It can be seen that the enumeration algorithm with the Mesh-Cut algorithm is very efficient in terms of the time required for computation, and the solutions obtained converge or are very close to global optimum when 
                        χ
                      has larger values. By way of example, full enumeration takes almost five days for the partial drill hole model, and a global optimum solution is obtained. The same solution is reached when the proposed enumeration algorithm is used with the Mesh-Cut algorithm (
                        χ
                        =
                        60
                     ), and the computational time is about five seconds. The proposed algorithm is used without the feature curve integration algorithm for the block model, and highly-curved regions (shown by black dots) are not captured with the motorcycle edges (edges shown by yellow dashes are less curved). The processing time for full enumeration of the block model is less than two hours. This is because its base complex is much coarser than the other models in this paper, with the mean and maximum lengths of separatrices being 1.46 and 3, respectively. Note that it may not always be possible to obtain a quadrilateral segmentation that converges or is very close to the global optimum when the Mesh-Cut algorithm is used.


                     Evaluation of various cuts: the enumeration algorithm described in Section  4.2.2 is used with two Mesh-Cut algorithms different from the one outlined in Section  4.2.1, and the quadrilateral segmentations generated are analyzed. The two proposed Mesh-Cut algorithms set source and sink terminals differently so that cuts differing from those produced using the algorithm described in Section  4.2.1 are generated. After terminals are assigned, the same energy function is utilized for these two algorithms. In the first algorithm, the source and sink terminals are selected as the farthest vertices in a mesh or sub-mesh that will be cut into two in the next step. The convex hull of the mesh or sub-mesh is used in order to reduce computational complexity for farthest pair computation, and terminal vertices are found. Fig. 24
                     (a) shows a cut and terminal vertices generated using this method for a drill hole model. In the second algorithm, three different cuts (see CutX, CutY and CutZ in Fig. 24(b), (c) and (d), respectively) are generated using the bounding box (BB) of the model. For example, the source and sink terminals used for the computation of CutX are the vertices closest to Xmax and Xmin, which are the center vertices on the BB walls as shown in Fig. 24(b). The terminals used for the computation of CutY and CutZ are selected in a similar way. One of these three cuts is selected as the final cut that generates sub-meshes with less complicated base complexities (see quasi-complexity 
                        U
                      in Section  4.2.1). Two sub-meshes are generated after a cut operation, and the one with a more complicated base complex is chosen for comparison of the base complexes obtained after the application of these three cuts.


                     Fig. 25
                      shows the quadrilateral segmentations obtained after applying the enumeration algorithm to the sub-meshes generated using these Mesh-Cut algorithms. Table 5
                      shows the cost values (
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    20
                                 
                              
                           
                        
                     , 
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    o
                                    1
                                 
                              
                           
                        
                     , 
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    o
                                    2
                                 
                              
                           
                        
                     , respectively) observed when the enumeration algorithm is used with the Mesh-Cut algorithm as described in Section  4.2.1 and when two different Mesh-Cut methods are utilized (with a setting of 
                        χ
                        =
                        20
                     ). Although generally similar cost values are obtained, a smaller value is achieved for 
                        
                           
                              G
                           
                           
                              
                                 
                                    T
                                 
                                 
                                    o
                                    2
                                 
                              
                           
                        
                      in the rockerarm model. The position of the cuts obtained affects the quadrilateral segmentation generated. In the top-right image of Fig. 25(c), the particle track shown in orange (indicated with an arrow) cannot grow because of the cut in blue, and highly-curved edges shown with dashed lines are not traced. The same track grows through these highly curved edges if the cut does not cross them (see the bottom-right image in Fig. 25(c)). However, it is not always possible to obtain such cuts due to the presence of large numbers of feature curves in the model. According to our experiments, the most significant way of generating a higher-quality quadrilateral segmentation is to set larger values for 
                        χ
                      in the Mesh-Cut step, which leads to the generation of sub-meshes with wider search spaces (see Figs. 17 and 19).
                  


                     Parameter tuning: several parameter tuning experiments are carried out to verify the parameters presented in this paper. Fig. 26
                     (a) shows a rockerarm model with extracted feature curves indicated in blue for different parameter settings. Setting higher flatness values enables extraction limited to more highly-curved feature curves. The feature curve shown by the black circle in the middle right image of Fig. 26(c) cannot be traced when 
                        ρ
                      is set to 0.6, but is traced when 
                        ρ
                        =
                        0.45
                      (see the left- and middle-right images of Fig. 26(a)). Setting the threshold 
                        τ
                      to smaller values enables extraction of shorter feature curves. The middle-left image of Fig. 26(a) shows feature curves (depicted by black circles) captured when 
                        τ
                      is set to 15 but not captured when 
                        τ
                        =
                        30
                      (see the left- and middle- left images of Fig. 26(a)). Similar feature curves are obtained when setting the parameter 
                        ζ
                      to 30 and 100 (see the images on the left and right of Fig. 26(a)). According to our experience, parameter tuning for 
                        ρ
                     , 
                        τ
                      and 
                        ζ
                      is not very sensitive to small changes, and very similar feature curves are therefore detected with these parameter settings.


                     Fig. 26(b) shows drill hole model parameter settings for the cost function parameters 
                        α
                      and 
                        ϵ
                     . Setting 
                        ϵ
                      to 0.2 results in the generation of quadrilateral segmentation whose boundaries consist of less curved longer paths as shown by the black circle in the middle-image of Fig. 26(b) (compare the left and middle images of Fig. 26(b)). Similar segmentation is obtained when 
                        α
                      is set to 1.0 (see the right and middle images of Fig. 26(b)). The parameters 
                        α
                      and 
                        ϵ
                      are not very sensitive to small changes according to our experiments. The energy function utilized in the Mesh-Cut algorithm is based on Golovinskiy et al.’s work  [40]. Readers should refer to the “Min Cuts” part of the paper for the parameter settings of this graph cut-based algorithm.


                     Limitations: the quality of quadrilateral segmentation is heavily dependent on the quality of the quadrilateral mesh input. In other words, if there are too many extraordinary vertices in the mesh, applying the proposed method will result in the generation of an undesirably large number of quadrilateral segments. Another limitation is that the proposed algorithm finds only local optimal solutions due to the exponential complexity of the exhaustive search required to find global optimal solutions. The complexity is exponential to the number of extraordinary vertices or those of particle tracks between them. The enumeration algorithm takes huge amount of time for some complex cases and cannot be practically applied even with parallel implementation in certain situations.

This paper proposes an algorithm to enable the generation of quadrilateral segmentation from given semi-regular quadrilateral meshes. The main approach involves enumerating all the motorcycle graphs of a given mesh so that the optimum one (based on a cost function) can be selected. As the computational cost of enumerating all graphs is high, the proposal includes the use of the Mesh-Cut algorithm to cut the mesh into several sub-meshes, and graphs are then enumerated separately for each sub-mesh. Using a feature curve integration algorithm, highly curved edges that are very difficult to trace with the particles placed on the extraordinary vertices can be traced. The experiments showed that the proposed approach generates segments with highly curved edges on their boundaries. These are considered useful for reverse engineering applications.

The proposed algorithm can be enhanced in several ways. Generation of favorable sub-meshes for reverse engineering will be investigated. To achieve this, criteria other than equal separation of extraordinary vertices may be considered in the Mesh-Cut algorithm. The use of mobile cuts whose positions change after each enumeration step may also be worthwhile which may generate a better quadrilateral segmentation. The use of cuts composed of separatrices will also be studied. Other cost function(s) (that can be used in the selection of enumerated graphs) directly related to 
                        B
                     -spline surface quality and better flat boundary removal algorithms will also be investigated. Finally, segments generated using the proposed algorithm will be validated using T-spline surfaces  [41].

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank the RWTH Computer Graphics Group for making the OpenFlipper framework available and David Bommes for providing the quadrilateral mesh models tested in this study.

@&#REFERENCES@&#

