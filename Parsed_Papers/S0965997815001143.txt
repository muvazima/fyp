@&#MAIN-TITLE@&#Intermediate model based efficient and integrated multidisciplinary simulation data visualization for simulation information reuse

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An intermediate model is designed for multidisciplinary simulation data integration.


                        
                        
                           
                           The hybrid mesh size field controls the generation of intermediate mesh model.


                        
                        
                           
                           Several strategies are proposed to improve the data transmission efficiency.


                        
                        
                           
                           A content-based retrieval method is developed to find simulation models rapidly.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Intermediate model

Hybrid mesh size field

Data filtering and compression

Simulation model descriptor

Mapping and interpolation algorithm

Similarity assessment

@&#ABSTRACT@&#


               
               
                  The efficient and integrated visualization and reuse of multidisciplinary simulation data are imperative for the development of complex products. However, it is not a trivial task for designers to efficiently acquire, view and then reuse simulation data to improve the product design process. The challenge is that simulation data are always too huge to be transferred and retrieved quickly and they tend to be heterogeneous and tool-specific due to the lack of a uniform representation. In this study, an approach of intermediate model based efficient and integrated visualization of multidisciplinary simulation data for simulation information reuse is proposed to address the above issues. Firstly, the intermediate model based integrated model framework is designed to support the uniform modeling and integrated visualization of multidisciplinary simulation data. Then, the intermediate mesh model is constructed based on the hybrid mesh size (HMS) field to achieve the uniform representation of multidisciplinary simulation data with high-fidelity. Thirdly, a series of strategies such as coarse filtering, fine filtering for incremental transmission and data compression are proposed to improve data transmission efficiency. Moreover, a simulation model descriptor (SMD) based similarity assessment method is developed to support the efficient retrieval of simulation models for reuse. Finally, several experiments are conducted to demonstrate the feasibility and effectiveness of the proposed model and methods.
               
            

@&#INTRODUCTION@&#

Simulation-based design has become the mainstream product development process to reduce the development costs, shorten the time to market and improve the quality and performance of products, which are the key factors for achieving competitive advantages [1–3]. Generally, the simulation activities are conducted in multiple domains such as structural field analysis, flow field analysis, thermal field analysis and so on. Thus various systems are involved including Ansys, Abaqus and MSC Nastran, etc. [4]. This leads to a growing number of simulation data and thus raises the issue of effective and efficient management of massive simulation data.

To the authors' knowledge, it is still difficult for engineering designers to efficiently acquire, view and then reuse simulation data to improve the product design process. The reason is three-fold. (1) Firstly, it is very useful to reuse historical simulation data to guide current product simulation task. However, it is difficult for the analyzer to efficiently find similar simulation cases from the huge model sets as they are distributed and independent and there is a lack of unified organization and management. (2) Secondly, the simulation models and data obtained using different simulation systems tend to be heterogeneous and tool-specific, which still cannot be visualized and reused by designers since the related simulation systems may not be available in the design department with the consideration of cost. In most cases, they should be visualized in a common platform-independent environment or even the design environment without loss of accuracy to facilitate simulation results viewing and decision making. As a result, the effective sharing and integrated visualization of heterogeneous simulation results remain relatively inefficient due to the lack of a uniform and accurate representation of multidisciplinary simulation data. (3) Thirdly, product design and simulation are quite often undertaken in different departments, even off-site in most companies. Moreover, the simulation data files of complex products are very huge. The magnitude is usually GB or even TB. Therefore, it is difficult to acquire them rapidly due to the large data file sizes and low data transmission efficiency.

Based on the above analysis, an intermediate model based integrated visualization method is proposed in this study to enable the efficient and effective acquisition, visualization and reuse of multidisciplinary heterogeneous simulation data to support product development. The rest of the paper is organized as follows. Section 2 introduces the related work. The specific integrated model framework based on the intermediate model is given in Section 3 as well as a method overview. Section 4 mainly describes how to construct the intermediate mesh model based on the hybrid mesh size (HMS) field to support the uniform representation of multidisciplinary simulation data and thus to enable the integrated visualization. A series of efficient data transmission methods such as coarse filtering, fine filtering for incremental transmission and data compression based on fast Fourier transform (FFT) and an efficient simulation model retrieval method based on the simulation model descriptor (SMD) are described in Sections 5 and 6 respectively. Section 7 presents several experiments and relevant discussions. Finally, the main conclusions and future work are given in Section 8.

@&#RELATED WORK@&#

The effective sharing, integrated visualization and reuse of multidisciplinary simulation data are crucial for complex product development. However, the exchange and integrated visualization of simulation data remain relatively inefficient as the formats of simulation data of different CAE systems are quite different and tool-specific. Therefore, a lot of previous research efforts have been focused on the standardization of heterogeneous simulation data formats and data exchange methodologies to facilitate efficient viewing and reuse by designers. The standard for exchange for product model data (STEP) [5] AP209 [6] has been proposed to enable CAE data exchange for various systems, which specifies formats for the data associated with simulation software and is suitable for dealing with analytical information [7]. Many studies demonstrate the feasibility of simulation data exchange using the AP209 [8–10]. However, as a standard protocol, it accommodates all the data from both computer-aided design (CAD) and computer-aided engineering (CAE), which easily increases the sizes of data files and thus makes it difficult to be exchanged efficiently. Therefore, additional work should be done to apply it to specific applications. Several studies have been conducted to minimize the data file sizes by lightening CAE data.

Park and Kim [11] presented a sharable, neutral format, namely practical post-analysis (PAM), which allowed the efficient sharing and visualization of the finite element analysis (FEA) data through a hierarchical data management within a single structure in a collaborative design process. It achieves substantial data compression by storing only essential FE information and is efficient for visualizing heterogeneous analytic results by using a modified scene graph data structure. However, the translated mesh information is still relatively large though it has been compressed. In addition, this work is mainly focused on efficient data exchange and cannot achieve the integrated visualization of multidisciplinary simulation data with high-fidelity. In order to enhance the exchangeability of multidisciplinary simulation data in the collaborative environment, Cho et al. [12] proposed a data representation which covered most of the typical CAE data in a unified manner to reduce the size of simulation files. They suggested an extended integrated engineering data (BST) based on their previous work. The resulting FEA data become more convenient to store and share for engineers working in an integrated manner since size reduction happens when simulation data is converted to BST data. But further studies on more diverse simulation types and integrated visualization of multidisciplinary simulation data should be conducted. Song et al. [13] presented a CAE data exchange method, which relied on heterogeneous CAE systems, a virtual reality system, and a lightweight CAE middleware called CAE2VR for the effective sharing of geometric and analysis data. However, the CAE data can be visualized only in a VR system or in a VRML Web browser.

As mentioned above, the intermediate model is critical to realize the uniform representation and efficient modeling of multidisciplinary heterogeneous simulation data, some research has been done in this area. Liu et al. [14] presented a novel method of integration and visualization of simulation data of multiple physical fields by the coupling of geometrical and physical information of heterogeneous simulation mesh models and the interpolation of simulation results. The integrated visualization of multidisciplinary simulation data can be achieved through the transitional mesh, but it is relatively complicated to construct the transitional mesh and reconstruct the geometric models. Zhang et al. [15] developed a platform RotorMSI (rotor multidisciplinary simulation integration) by a proposing multidisciplinary simulation integration (MSI) framework and flow model to support multidisciplinary process integration and resource sharing of the rotor blade design process. However, this platform is only applicable to the helicopter design enterprises since the method developed is particularly focused on motor design. Moreover, it is difficult to obtain the integrated visual effects of multidisciplinary simulation since the simulation results of different disciplines are visualized separately. Gujarathi and Ma [16,17] proposed a CAD/CAE integration method using a common data model (CDM) that contains all the required parametric information for both CAD modeling and CAE analysis. CDM is connected with the design models and expert knowledge with any KBE implementation via a programmed design management structure. However, a knowledge-based software tool including part template and library needs to be developed to deal with more diverse design problems. Hamri and Drieux [18–20] proposed a software environment for CAD/CAE integration by introducing a mixed shape representation. It mainly consists of a B-Rep non-uniform rational B-splines (NURBS) topology, a facetted model and a high level topology (HLT). This approach improves the robustness of various processes involved in FEA model preparation from CAD data and makes the overall conversion more efficient. However, all the research mentioned above either paid more attention to the integration of CAD and CAE or focused on the simulation data exchange. The efficient sharing, integrated visualization and effective reuse of multidisciplinary simulation data is still an open problem to be researched. This research is precisely motivated by this gap and aims to develop a methodology to realize the platform-independent and integrated visualization of multidisciplinary simulation results with high-fidelity efficiently and effectively.

In order to support the efficient and effective acquisition, visualization and reuse of multidisciplinary simulation data, an intermediate model based integrated model framework is proposed, as shown in Fig. 1
                        
                        . The details are explained below.

                           
                              (1)
                              Generally, a product is an assembly, which is composed of multiple sub-assemblies and parts. Each assembly is composed of multiple parts as well. Assembly, sub-assembly or part is a design object, which corresponds to an original CAD model. Generally, the simplified models after dimensional reduction and detail removal based on different simulation requirements are more suitable for specific simulations, as they provide the simulation results more rapidly without significant loss of accuracy. Therefore, the original CAD model should be simplified before its meshing and subsequent simulation.

Each design object corresponds to multiple simulation types and each type corresponds to multiple simulations with different simulation information. In order to effectively handle different types of models and data derived from different simulations, a simulation version management model is proposed and organized into a hierarchical tree structure. It is easy to manage and trace the simulation information at the expense of the complexity of a tree structure as the model clearly describes the sequences and sources of different simulation versions. In addition, the SMD is computed to represent the model signature for similarity assessment to support the rapid retrieval of simulation models.

The integrated visualization and reuse of multidisciplinary simulation data are relatively inefficient due to the fact that the simplified models, mesh models and simulation data of different disciplines for the same product are heterogeneous and tool-specific. Therefore, the proposed intermediate model which provides a uniform and accurate representation of multidisciplinary simulation data is critical in the integrated model framework. More details will be given in the following section.

Based on the above analysis, the key issues that need to be addressed are: (1) how to construct the intermediate model to represent multidisciplinary simulation results with high-fidelity; (2) how to enable designers to quickly acquire the simulation results of multiple disciplines to help them make their decisions; (3) how to achieve the rapid retrieval of simulation models, and thus to reuse historical simulation data to guide current product simulation task.

To address the above issues, an intermediate model based efficient and integrated visualization of multidisciplinary heterogeneous simulation data method is proposed. The specific process, as illustrated in Fig. 2, is explained as follows:

Step 1: Efficient retrieval of simulation models. A content-based retrieval method, i.e., SMD based similarity assessment method is introduced in this work to achieve the rapid retrieval of simulation models and thus to help the analyzer conduct current simulation task by reusing historical simulation data.

Step 2: Generation of the intermediate model. Specifically, the intermediate model, which is generated based on the HMS field control, is proposed to support the uniform and accurate representation of multidisciplinary simulation data. Meanwhile, the mapping and interpolation relationships between the intermediate mesh model and multiple heterogeneous simulation mesh models are established to achieve the intermediate simulation results for platform- independent and integrated visualization.

Step 3: Efficient transmission of simulation data. A series of strategies including coarse filtering, fine filtering for incremental transmission and data compression based on FFT are developed to improve the data transmission efficiency, and thus to enable designers to rapidly acquire and then accurately view simulation results to refine product design.

Based on the above analysis, designers can efficiently acquire simulation data and conduct simulation tasks by using the proposed model and methods. Meanwhile, following the efficient data transmission, the high-fidelity visualization of multidisciplinary simulation results based on the intermediate model can be implemented in the CAD environments by using appropriate visualization techniques. In this case, engineering designers can make their decisions to refine the product design and repeat the above process until a satisfactory design is obtained.

As mentioned above, the simplified models and mesh models of different disciplines for the same product are heterogeneous and tool-specific due to the difference of simulation tools and purposes. The platform-independent and integrated visualization of multidisciplinary simulation results remain relatively inefficient due to the lack of a uniform representation of heterogeneous simulation data for multiple disciplines. This also impedes designers to make their decisions about how to refine the design in the next step since they cannot view multidisciplinary simulation results conveniently and efficiently. The intermediate mesh based model is a feasible solution for this problem. It is noteworthy that the objective of intermediate mesh generation here is quite different from that of the existing methods. For most of the existing methods, the generated meshes are used for FEA. How to improve the mesh quality and thus the analysis accuracy are the main objectives. However, the objective in this work is to share the existing multidisciplinary simulation results with high-fidelity with a common platform-independent mode. Therefore, how to minimize the errors between the existing simulation meshes of different disciplines of simulation and the proposed uniform intermediate mesh is the objective of this study.

The intuitive way is taking the original CAD model as the intermediate model and then meshing it to obtain the corresponding intermediate mesh model. However, there are some deficiencies for this method. On the one hand, the selected intermediate model is not simple enough. Generally, the original CAD model should be simplified to satisfy specific requirements of different simulations before performing meshing on it. Moreover, the simplification strategies vary for different disciplines. Therefore, a uniform intermediate simplified model should be generated by ignoring the unnecessary details. On the other hand, the accuracy of multidisciplinary simulation results, particularly the critical regions, cannot be guaranteed by using the direct intermediate mesh model. The accuracy of the simulation data to some extent can be determined by the intermediate mesh distribution. However, the above direct intermediate mesh model is too arbitrary to fully consider all the critical regions of multiple disciplines. Therefore, the meshes in the critical regions should be denser than those of other regions to ensure the fidelity of multidisciplinary simulation results.

Based on the above analysis, an intermediate model which supports the platform-independent and integrated visualization of multidisciplinary simulation data is critical and should satisfy the following requirements. (1) It should be as simple as possible while without losing any critical simulation results of different disciplines. (2) Adequate detailed information should be preserved to ensure the fidelity of multidisciplinary simulation results. (3) Meanwhile, the mesh cannot be too dense with the consideration of computational efficiency. Here, the common simplification operations obtained by analyzing the simplified geometric models for different simulation requirements are executed on the original CAD model to obtain the appropriate intermediate simplified model. Since the generation of intermediate simplified model is relatively simple, the focus is given on how to construct the intermediate mesh model to obtain the sharable and integrated multidisciplinary simulation results with high-fidelity.

Based on the above analysis, the intermediate mesh model is used for achieving multidisciplinary simulation results with high-fidelity. Hence, how to keep the fidelity of multiple simulation results is important. This means that the mesh size, quantity and distribution should be considered at the same time to fully reflect the requirements of different disciplines, especially their critical regions. Currently, the dominating mesh formats are tetrahedron and hexahedron. The generation methods of tetrahedral mesh are relatively mature, convenient and fast whereas the hexahedral mesh behaves better in terms of the computation accuracy and the mesh quality. Importantly, the former can deal with complicated models with arbitrary geometry and topology. Therefore, the tetrahedral mesh is adopted for the generation of the initial intermediate mesh model. After that, the HMS field based method with the consideration of multiple simulation mesh models is proposed to generate the refined intermediate mesh model which is used to obtain the sharable and integrated visualization and thus to facilitate the efficient sharing of multidisciplinary simulation data with high-fidelity.

Since the mesh model information can be reflected through its mesh size field [21–24], the mesh distribution can be described by its mesh size function, such as a scale function or a Riemannian metric field. As a result, an HMS field based method, which considers distributions of multiple simulation mesh models is proposed here to describe the distribution of the intermediate mesh model.

In this study, the mesh size for a specific node is defined by the weighted average of the edges connected to it as follows:

                              
                                 (1)
                                 
                                    
                                       
                                          L
                                          
                                             a
                                             v
                                             g
                                          
                                       
                                       
                                          (
                                          P
                                          )
                                       
                                       
                                       =
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          N
                                       
                                       
                                          ω
                                          i
                                       
                                       
                                       ×
                                       
                                       
                                          L
                                          i
                                       
                                    
                                 
                              
                           
                           
                              
                                 (2)
                                 
                                    
                                       
                                          ω
                                          i
                                       
                                       
                                       =
                                       
                                       
                                          
                                             L
                                             i
                                          
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                L
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        


                           Lavg
                           (P) is the size for node P; N is the number of edges connecting to P; and Li
                            and ωi
                            are the length and weight of the i-th edge connecting to P. According to Eqs. (1) and (2), all the node sizes in the intermediate mesh model can be computed to obtain the entire mesh size field. Then, the key problem is how to devise the HMS field based on the mesh size fields of multiple mesh models, which can be formalized as follows:

Given the mesh size field 
                              
                                 
                                    h
                                    i
                                 
                                 
                                    (
                                    x
                                    )
                                 
                                 ,
                                 i
                                 =
                                 1
                                 ,
                                 
                                 2
                                 ,
                                 
                                 …
                                 
                                 ,
                                 
                                 n
                                 ,
                                 
                              
                           the HMS field can be defined as follows:

                              
                                 (3)
                                 
                                    
                                       
                                          h
                                          
                                             m
                                             i
                                             x
                                          
                                       
                                       
                                          (
                                          x
                                          )
                                       
                                       =
                                       m
                                       i
                                       
                                          n
                                          
                                             i
                                             =
                                             1
                                             ,
                                             
                                             …
                                             
                                             ,
                                             
                                             n
                                          
                                       
                                       
                                          (
                                          
                                             
                                                h
                                                i
                                             
                                             
                                                (
                                                x
                                                )
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           where, hmix
                           (x) is the HMS field, which is computed by taking the minimum values of all the node sizes at the same positions as the hybrid node sizes. Based on the above definition, the HMS field can be achieved through the following three steps:

Step 1: Compute the bounding box of the intermediate simplified model and obtain its lower left corner (Xmin, Ymin, Zmin
                           ) and its upper right corner (Xmax, Ymax, Zmax
                           ). For each element of all the simulation mesh models, take the smallest length GriCellSize of element edge as a unit to construct the indexes for all the nodes and elements. Therefore, the size of the index matrix IndexMatrix[Xsize
                           ][Ysize
                           ][Zsize
                           ] is defined as follows:

                              
                                 (4)
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      X
                                                      
                                                         s
                                                         i
                                                         z
                                                         e
                                                      
                                                   
                                                   
                                                   =
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            X
                                                            
                                                               m
                                                               a
                                                               x
                                                            
                                                         
                                                         −
                                                         
                                                         
                                                            X
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   G
                                                   r
                                                   i
                                                   C
                                                   e
                                                   l
                                                   l
                                                   S
                                                   i
                                                   z
                                                   e
                                                   +
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      Y
                                                      
                                                         s
                                                         i
                                                         z
                                                         e
                                                      
                                                   
                                                   
                                                   =
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            Y
                                                            
                                                               m
                                                               a
                                                               x
                                                            
                                                         
                                                         −
                                                         
                                                         
                                                            Y
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   G
                                                   r
                                                   i
                                                   C
                                                   e
                                                   l
                                                   l
                                                   S
                                                   i
                                                   z
                                                   e
                                                   +
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      Z
                                                      
                                                         s
                                                         i
                                                         z
                                                         e
                                                      
                                                   
                                                   
                                                   =
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            Z
                                                            
                                                               m
                                                               a
                                                               x
                                                            
                                                         
                                                         −
                                                         
                                                         
                                                            Z
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   G
                                                   r
                                                   i
                                                   C
                                                   e
                                                   l
                                                   l
                                                   S
                                                   i
                                                   z
                                                   e
                                                   +
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

As a result, for each node P(X, Y, Z), its corresponding index (i, j, k) is computed as follows:

                              
                                 (5)
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   i
                                                   
                                                   =
                                                   
                                                   
                                                      (
                                                      
                                                         X
                                                         −
                                                         
                                                         
                                                            X
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   G
                                                   r
                                                   i
                                                   C
                                                   e
                                                   l
                                                   l
                                                   S
                                                   i
                                                   z
                                                   e
                                                
                                             
                                          
                                          
                                             
                                                
                                                   j
                                                   
                                                   =
                                                   
                                                   
                                                      (
                                                      
                                                         Y
                                                         −
                                                         
                                                         
                                                            Y
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   G
                                                   r
                                                   i
                                                   C
                                                   e
                                                   l
                                                   l
                                                   S
                                                   i
                                                   z
                                                   e
                                                
                                             
                                          
                                          
                                             
                                                
                                                   k
                                                   
                                                   =
                                                   
                                                   
                                                      (
                                                      
                                                         Z
                                                         −
                                                         
                                                         
                                                            Z
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   /
                                                   G
                                                   r
                                                   i
                                                   C
                                                   e
                                                   l
                                                   l
                                                   S
                                                   i
                                                   z
                                                   e
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Then, the
                            index information of all the nodes in the intermediate model can be computed based on Eq. (5).

Step 2: For each simulation mesh model, its corresponding mesh size field can be obtained using the following steps:

                              
                                 (a)
                                 Computation of mesh node size. For each node in the mesh model, compute its size based on Eqs. (1) and (2).

Computation of discrete node size. For each element in the mesh model, take the cell size GriCellSize as a unit and discretize it. Suppose that the longest edge size of the element is Lmax
                                    , the discrete number of segments (Sag) is:
                                       
                                          (6)
                                          
                                             
                                                S
                                                a
                                                g
                                                
                                                =
                                                
                                                
                                                   L
                                                   
                                                      m
                                                      a
                                                      x
                                                   
                                                
                                                /
                                                G
                                                r
                                                i
                                                C
                                                e
                                                l
                                                l
                                                S
                                                i
                                                z
                                                e
                                                +
                                                1
                                             
                                          
                                       
                                    
                                 

After that, the discretized node size is computed based on the barycentric coordinate equation [25].

Computation of node index. Compute the node index based on Eq. (5). Set the node size and index information for all the mesh nodes and discrete nodes of the simulation mesh model.

Step 3: Compute the HMS field by synthesizing the simulation mesh size fields of different disciplines. Take the minimum values of all the node sizes at the same positions as the final hybrid node sizes based on Eq. (3).

The mesh size control means to ensure that the mesh size satisfies the requirements of the predefined mesh size function by adding or deleting elements, which are mainly comprised of mesh coarsening and refinement. The objective of mesh size control is to minimize the size deviation between the initial mesh model and the final mesh model. Specifically, the HMS control based intermediate mesh model generation is to change the topology and geometry of the initial mesh model by mesh refinement to satisfy the requirements of the HMS field. Ideally, the final refined intermediate mesh model should be able to simultaneously approximate all the involved simulation mesh models as much as possible while maintaining all of their mesh size fields, especially their critical regions, to facilitate the subsequent accurate mesh mapping and interpolation to achieve the intermediate simulation results with high-fidelity.

Based on the above analysis, the intermediate mesh model refinement algorithm is conducted after the generation of the initial intermediate mesh model, as shown in Algorithm 1. In the algorithm description, Lavg
                            is the node size of current node Ni; Lmix
                            is the hybrid node size at the corresponding position; and Lmax
                            is the longest edge connected to Ni
                           . Steps 1 and 2 indicate that the mesh refinement and information update is conducted if Lavg
                            is larger than Lmix
                            for each node in the Minitial. Steps 3–8 describe how to create the refinement node Nnew
                            based on the magnitude relationship between Lmax
                            and Lmix
                           . As shown in Fig. 3a, if Lmix
                            < 0.5*Lmax, as Lmax
                            is relatively large, create the new node Nnew
                            at the position Lmix
                            of Lmax
                            connected to Ni. Otherwise, create the new node at the midpoint of Lmax
                           , as shown in Fig. 3b.

The above refinement strategy can reduce the refinement operations by avoiding repeated division. Steps 9–14 describe how to update the information of all the related nodes and elements after mesh refinement. As shown in Fig. 3c, for the element NiNjNkNo
                            or Eori
                            that contains Lmax
                           , the remaining nodes that do not belong to Lmax
                            are Nk
                            and No
                           . The original element Eori
                            is split into two elements Eori
                            and Enew
                            after the connection between the remaining nodes and the new node Nnew
                           . Since the original element Eori
                            is changed, the related node's element list should be updated accordingly. For example, add Enew
                            to the element list of the remaining nodes Nk
                            and No
                           . However, another node Nj
                            of Lmax
                            remains unchanged. In addition, delete Eori
                            from, and add Enew
                            to, the element list of Ni
                           . Moreover, the new node's element list should include both Eori
                            and Enew
                           . Finally, the related node size of all the updated elements will be re-computed. The above process will be iterated until the refined intermediate mesh model satisfies the requirements of the HMS field.

After the intermediate mesh model is generated, the mapping and interpolation relationship between the model and the simulation mesh models of different disciplines should be established to obtain the intermediate simulation results from it. Specially, two strategies, namely indexing and parallel computing, are designed to improve the computational efficiency. Moreover, the obtained intermediate simulation results should be evaluated to demonstrate the fidelity of the intermediate model. The specific flow chart of the computation and evaluation of the intermediate simulation results is shown in Fig. 4.
                           
                        

In this study, four kinds of the mapping relationship including node–vertex mapping, node–edge mapping, node–face mapping and node–volume mapping are proposed to facilitate the accurate construction of the simulation data mapping and interpolation relationship. The mapping algorithm can be realized by analyzing the specific position relationship between the intermediate mesh nodes and those of the corresponding simulation mesh elements. Meanwhile, the index for the mesh node as mentioned above is used to narrow down the element detection range to improve the computational efficiency. Specifically, if the distance between the intermediate node and one of the element nodes is less than a predefined threshold, it is node–vertex mapping. Otherwise, determine whether the node is on an edge, or a face, or in an element sequentially. Accordingly, the mapping relationship is node–edge, node–face or node–volume mapping, respectively.

After that, an interpolation method [25] is used to achieve the simulation results of the intermediate model based on the constructed mapping relationship. The employed interpolation strategies are correspondingly four kinds as well, namely node–vertex, node-edge, node–face and node–volume interpolation. Note that the mapping and interpolation computation for each node is independent and unrelated, which is suitable for parallel processing. In this case, parallel computing strategy is further considered to improve the computational efficiency, and thus to obtain the intermediate simulation results quickly since the scale of the intermediate mesh model is huge for complex product. Specifically, all the node mapping and interpolation computation are conducted in separate processors after all the nodes are divided into a certain number of groups according to the number of processors.

It is necessary to evaluate the numerical error of the obtained intermediate simulation results to demonstrate the fidelity of the intermediate model. Therefore, two evaluation indictors, namely the error percentage (EP) and statistical error percentage (SEP), are proposed and defined as follows:

                              
                                 (7)
                                 
                                    
                                       E
                                       P
                                       
                                       =
                                       
                                       
                                          
                                             |
                                             
                                                (
                                                
                                                   
                                                      V
                                                      
                                                         a
                                                         c
                                                         t
                                                         u
                                                         a
                                                         l
                                                      
                                                   
                                                   −
                                                   
                                                   
                                                      V
                                                      
                                                         e
                                                         x
                                                         p
                                                         e
                                                         c
                                                         t
                                                         e
                                                         d
                                                      
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                          
                                             V
                                             
                                                a
                                                c
                                                t
                                                u
                                                a
                                                l
                                             
                                          
                                       
                                       
                                       ×
                                       100
                                       %
                                    
                                 
                              
                           where, Vactual
                            and Vexpected
                            denote the actual value and interpolated value of each simulation node, respectively. Moreover, Vexpected
                            is computed by conducting a reverse mapping and interpolation from the intermediate mesh model to each simulation models of different disciplines.

For the i-th given error interval [EPimin
                           , EPimax
                           ] of N intervals, its SEP is computed as:

                              
                                 (8)
                                 
                                    
                                       S
                                       E
                                       
                                          P
                                          i
                                       
                                       
                                       =
                                       
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          k
                                       
                                       g
                                       
                                       
                                          (
                                          
                                             E
                                             
                                                P
                                                j
                                             
                                          
                                          )
                                       
                                       /
                                       k
                                    
                                 
                              
                           
                        

Specifically, if EPj
                            ∈ [EPimin
                           , EPimax
                           ], g (EPj
                           ) is equal to 1. Otherwise, it is set to be 0. The parameter k represents the node number of the corresponding simulation mesh model. The SEP is devised to analyze the numerical error more clearly as the mesh nodes number is huge for complex products.

As mentioned above, it is not a trivial task for designers to rapidly acquire and then view the simulation results to support the product design process as the simulation data of complex products are too huge to be transferred quickly. However, not all the information in simulation models is useful for decision-making. In addition, even though simulation data are in essence heterogeneous and tool-specific, generally they can be divided into two different kinds. One is the geometry-related information including nodes, elements and related topology connection of a mesh model. The other is simulation-related information including boundary conditions, load cases, intermediate calculation process and simulation results and so on. Therefore, the necessary and useful simulation data can be filtered and compressed before transmission by excluding the unnecessary information. In this study, an efficient simulation data transmission method based on the coarse filtering, fine filtering for incremental transmission and data compression strategies is proposed, which can be achieved through the following three steps:

                        
                           (1)
                           Coarse filtering of simulation data.

Fine filtering of simulation data for incremental transmission.

Compression of simulation data based on FFT.

Generally, multiple simulation activities are involved in the development of complex products for performance verification, and thus a variety of simulation data is generated. For example, the stress and strain information is generated during the process of structural field analysis, which focuses on the regions that are stress concentration to test the product strength. Similarly, thermal field analysis concerns the area sensitive to temperature changes to verify whether the product is heat-resistant. In most cases, the raw simulation information could be extracted from the native CAD/CAE files by using the specific APIs (Application Programming Interfaces) of various CAE systems.

However, since not all the information contained in simulation data is useful to designers, it is reasonable to extract necessary data to minimize the simulation data size to be transferred. As a result, a series of coarse filters are defined hierarchically with the consideration that different simulation processes contain different information contents and different designers may be interested in different aspects of the simulation results. As shown in Fig. 5
                        , some basic filters are defined based on the customized development program or script template, which can extract the concerned information in accordance with specific requirements, and then they can be combined to satisfy more diverse requirements. With the help of various types of coarse filters, some useless information, such as load cases, boundary conditions, etc. are excluded. Meanwhile, the concerned simulation information which is used to evaluate and verify product performance can be obtained through the above pre-customized development program or script template of different CAE systems.

Even though the size of the simulation data file can be greatly reduced after being filtered by the above-defined coarse filters, the transmission efficiency may be still inefficient if the simulation data file is extremely large. For example, it is common that the native simulation data can be as large as 1TB or more when computational fluid dynamics (CFD) is conducted for a complex model. There are still 5G simulation data that needs to be transferred even if the filter ratio is as high as 5/1000. The transmission time is still intolerable with the consideration of existing network performance. Therefore, further methods for efficient data transmission should be researched.

Actually, designers cannot immediately view all the information inside and outside of the simulation model when they check the simulation results. Generally, they observe the external simulation results first. Then, some key internal simulation results on critical sections will be further considered if the external simulation results seem to be satisfactory and then the whole interior. Based on the above observation, an incremental transmission method is proposed in this study based on a fine filter in which the external simulation information, simulation information on critical sections and the internal simulation information are transferred progressively.

It is noteworthy that the key problem is how to determine whether the nodes and elements are located on the external, critical sections or internal of the model. This can be solved by classifying them when the intermediate mesh model is generated. Specifically, the intermediate mesh nodes can be divided into 3 classes: (a) external nodes on the model surfaces; (b) section nodes on the critical sections and (c) internal nodes in the model. For the nodes of class (b), the critical section should be defined first. Then the section nodes and elements can be constructed based on the intersection information between the critical section and mesh elements. Based on the incremental transmission strategy, the data transmission efficiency can be further improved.

Indeed, even with the incremental transmission strategy, simulation data to be transferred at each step is still large, especially for the internal simulation data of a complex product. Therefore, an FFT based data compression method [26–28] is proposed to further reduce the filtered simulation data and thus to improve the data transmission efficiency. After being transferred, the compressed data can be recovered by the inverse fast Fourier transform (IFFT).

The original simulation results obtained from the above two steps can be considered as a one-dimensional discrete signal due to the fact that the simulation results are discrete values on mesh nodes or elements. In this study, the discrete Fourier transform (DFT) [29,30] is adopted to achieve data compression. The FFT is applied to compute the DFT and its reverse to improve the computational efficiency. Specifically, the DFT and its reverse transform are defined as follows:

                              
                                 (9)
                                 
                                    
                                       F
                                       
                                          (
                                          u
                                          )
                                       
                                       =
                                       
                                       
                                          ∑
                                          
                                             n
                                             =
                                             0
                                          
                                          
                                             N
                                             −
                                             1
                                          
                                       
                                       f
                                       
                                          (
                                          n
                                          )
                                       
                                       
                                          e
                                          
                                             −
                                             i
                                             
                                                
                                                   2
                                                   π
                                                
                                                N
                                             
                                             u
                                             n
                                          
                                       
                                       ,
                                       
                                       u
                                       =
                                       0
                                       ,
                                       1
                                       ,
                                       
                                       …
                                       
                                       ,
                                       
                                       N
                                       −
                                       1
                                    
                                 
                              
                           
                           
                              
                                 (10)
                                 
                                    
                                       f
                                       
                                          (
                                          n
                                          )
                                       
                                       =
                                       
                                       
                                          1
                                          N
                                       
                                       
                                          ∑
                                          
                                             u
                                             =
                                             0
                                          
                                          
                                             N
                                             −
                                             1
                                          
                                       
                                       F
                                       
                                          (
                                          u
                                          )
                                       
                                       
                                          e
                                          
                                             i
                                             
                                                
                                                   2
                                                   π
                                                
                                                N
                                             
                                             u
                                             n
                                          
                                       
                                       ,
                                       
                                       n
                                       =
                                       0
                                       ,
                                       1
                                       ,
                                       
                                       …
                                       
                                       ,
                                       
                                       N
                                       −
                                       1
                                    
                                 
                              
                           
                        

In the above equations, f(n) and F(u) represent the original data signal and its transform result; n is the discrete variable; u is the discrete frequency variable and N is the length of the discrete signal.

Based on the above analysis, taking the thermal field simulation result of the section in the container part as the original data, the overall flow chart of the FFT based simulation data compression is shown in Fig. 6.
                           
                        

In order to evaluate the performance of the above simulation data compression method, the data compression ratio (DCR), data distortion ratio (DDR) and statistical data distortion ratio (SDDR) factors are defined as the evaluation criteria:

                              
                                 (a)
                                 DCR: for the original data signal f(n) of size N, if its size becomes M after compression, the DCR is defined as follows:
                                       
                                          (11)
                                          
                                             
                                                DCR
                                                =
                                                
                                                   (
                                                   
                                                      N
                                                      −
                                                      M
                                                   
                                                   )
                                                
                                                /
                                                N
                                                
                                                ×
                                                100
                                                %
                                             
                                          
                                       
                                    
                                 

It can be inferred from the definition that the larger the DCR, the better the data compression effect.

DDR: for the original data signal f(n) and the recovered data signal f′(n), the DDR is defined as follows:
                                       
                                          (12)
                                          
                                             
                                                
                                                   DDR
                                                   
                                                
                                                =
                                                
                                                
                                                   
                                                      |
                                                      
                                                         f
                                                         
                                                            (
                                                            n
                                                            )
                                                         
                                                         −
                                                         
                                                         
                                                            f
                                                            ′
                                                         
                                                         
                                                            (
                                                            n
                                                            )
                                                         
                                                      
                                                      |
                                                   
                                                   
                                                      f
                                                      
                                                         (
                                                         n
                                                         )
                                                      
                                                   
                                                
                                                
                                                ×
                                                100
                                                %
                                             
                                          
                                       
                                    
                                 

Based on the above equation, the closer the recovered signal and original signal, the smaller the DDR and the more accurate the data recovered.

SDDR: for the i-th given DDR interval [DDRimin
                                    , DDRimax
                                    ] of all the intervals, its SDDR is computed as follows:
                                       
                                          (13)
                                          
                                             
                                                S
                                                D
                                                D
                                                
                                                   R
                                                   i
                                                
                                                
                                                =
                                                
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                g
                                                
                                                
                                                   (
                                                   
                                                      D
                                                      D
                                                      
                                                         R
                                                         j
                                                      
                                                   
                                                   )
                                                
                                                /
                                                N
                                             
                                          
                                       
                                    
                                 

Similarly, if DDRj
                            ∈ [DDRimin
                           ,  DDRimax
                           ], g(DDRj
                           ) is equal to 1. Otherwise, it is set to be 0. The SDDR is selected to better evaluate the data distortion since the data signal size is usually large, especially for the internal simulation results of a complex product.

After the efficient transmission and recovery of the simulation data, the focus is then given on how to present the simulation results in the CAD environment for designers. Based on the analysis of the above filters, the visualization techniques including scalar field visualization and vector field visualization can be chosen and applied [11,14,25,31] to achieve more appropriate visualization when the corresponding simulation results are transferred to the CAD environment efficiently.

The motivation for simulation model retrieval is to search the existing similar simulation cases quickly to help the analyzer complete a simulation task. For a novice or even a skilled analyzer, the existing simulation cases may be very helpful for his/her current simulation task. However, it is difficult for the analyzer to efficiently find similar cases from the huge model sets. To address this issue, a content-based retrieval method is introduced in this study [32,33], i.e., an SMD based similarity assessment method is proposed to support the rapid retrieval of simulation models, and thus to help the analyzer conduct simulation task by reusing historical simulation data to speed up the simulation process, which can be achieved through two steps: (1) computation of the SMD and (2) similarity assessment of simulation models. Note that the reuse of historical simulation data currently is manually implemented through the analysis of retrieved similar simulation cases.

The key idea for content-based retrieval is to transform an arbitrary simulation model into a parameterized model descriptor that can be compared with each other. Different from the mesh models, the information of simulation models include two different parts: the geometric-related information and the simulation-related information. Both of them should be considered when the parameterized model descriptor, i.e. SMD, is computed to fully represent the simulation model.

Some research has been done about how to construct the shape descriptor for mesh models. In this study, the shape signatures proposed by Osada et al. [34] is adopted to measure the geometric-related information due to its simplicity, efficiency and discriminative capability. Its key idea is to represent the signature of an object as a shape distribution function. Specially, D2, which represents the Euclidean distance between any two nodes on the surface of the simulation mesh model, is selected as the shape function. Moreover, the simulation type, mesh type, material type, boundary condition type and load type are selected to measure the simulation-related information. Once the SMD is defined as a combination of the above two kinds of information, the computation of SMD for each simulation model is described as follows:

Step 1: Computation of the geometric-related descriptor. The specific computation process can be achieved as follows:

                           
                              (a)
                              Compute the Euclidean distances between any surface nodes of simulation mesh model and denote the maximum, minimum and average distance as Lmax, Lmin
                                  and Lavg
                                  respectively. All the distances should be normalized to facilitate the following similarity assessment between different simulation mesh models. For each distance Li
                                 , it is normalized to 
                                    
                                       L
                                       i
                                       *
                                    
                                  using the following equation:
                                    
                                       (14)
                                       
                                          
                                             
                                                L
                                                i
                                                *
                                             
                                             =
                                             
                                             
                                                (
                                                
                                                   
                                                      L
                                                      i
                                                   
                                                   −
                                                   
                                                      L
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                   
                                                
                                                )
                                             
                                             /
                                             
                                                (
                                                
                                                   
                                                      L
                                                      
                                                         m
                                                         a
                                                         x
                                                      
                                                   
                                                   −
                                                   
                                                      L
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              

Construct the distance probability distribution histogram for each interval 
                                    
                                       
                                          [
                                          
                                             L
                                             
                                                m
                                                i
                                                n
                                             
                                             *
                                          
                                          +
                                          
                                             (
                                             
                                                i
                                                −
                                                1
                                             
                                             )
                                          
                                          *
                                          
                                             (
                                             
                                                (
                                                
                                                   
                                                      L
                                                      
                                                         m
                                                         a
                                                         x
                                                      
                                                      *
                                                   
                                                   −
                                                   
                                                      L
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                      *
                                                   
                                                
                                                )
                                                /
                                                N
                                             
                                             )
                                          
                                          ,
                                          
                                             L
                                             
                                                m
                                                i
                                                n
                                             
                                             *
                                          
                                          +
                                          i
                                          *
                                          
                                             (
                                             
                                                (
                                                
                                                   
                                                      L
                                                      
                                                         m
                                                         a
                                                         x
                                                      
                                                      *
                                                   
                                                   −
                                                   
                                                      L
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                      *
                                                   
                                                
                                                )
                                                /
                                                N
                                             
                                             )
                                          
                                          ]
                                       
                                       
                                       
                                          (
                                          
                                             i
                                             =
                                             1
                                             ,
                                             
                                             2
                                             ,
                                             
                                             …
                                             
                                             ,
                                             
                                             N
                                          
                                          )
                                       
                                    
                                 . Then, the geometric-related descriptor can be represented as 
                                    
                                       G
                                       (
                                       
                                          
                                             p
                                             1
                                          
                                          ,
                                          
                                             p
                                             2
                                          
                                          ,
                                          
                                          …
                                          
                                          ,
                                          
                                          
                                             p
                                             N
                                          
                                       
                                       )
                                    
                                 . In this expression, pi
                                  denotes the probability of the i-th distance interval.

Step 2: Computation of the simulation-related descriptor. Firstly, assign a unique and fixed identifier for each of the simulation type (Isim
                        ), mesh type (Imesh
                        ), material type (Imat
                        ), boundary condition type (Ibc
                        ) and load type (Iload
                        ) in the database. Then, extract and mark them from the simulation data file and compute the simulation-related descriptor as a combination of identifiers of each data type S(Isim, Imesh, Imat, Ibc, Iload
                        ).

Based on the computed SMDs, the similarity between simulation models can be evaluated. The evaluation process is conducted in two steps. The first is to evaluate the geometric-related similarity. There are many ways to compare two functions f and g representing probability distributions [35]. In this study, Minkowski L
                        1 norm for the probability distribution vector is used. Suppose that 
                           
                              
                                 G
                                 A
                              
                              
                                 (
                                 
                                    
                                       P
                                       
                                          A
                                          1
                                       
                                    
                                    ,
                                    
                                       P
                                       
                                          A
                                          2
                                       
                                    
                                    ,
                                    
                                    …
                                    
                                    ,
                                    
                                    
                                       P
                                       
                                          A
                                          N
                                       
                                    
                                 
                                 )
                              
                           
                         and 
                           
                              
                                 G
                                 B
                              
                              
                                 (
                                 
                                    
                                       P
                                       
                                          B
                                          1
                                       
                                    
                                    ,
                                    
                                       P
                                       
                                          B
                                          2
                                       
                                    
                                    ,
                                    
                                    …
                                    
                                    ,
                                    
                                    
                                       P
                                       
                                          B
                                          N
                                       
                                    
                                 
                                 )
                              
                           
                         are the geometric-related SMDs of simulation models A and B respectively. The Minkowski distance between the two geometric-related SMDs is computed as follows:

                           
                              (15)
                              
                                 
                                    D
                                    
                                       (
                                       
                                          
                                             G
                                             A
                                          
                                          ,
                                          
                                             G
                                             B
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       |
                                       
                                          
                                             P
                                             
                                                A
                                                k
                                             
                                          
                                          −
                                          
                                             P
                                             
                                                B
                                                K
                                             
                                          
                                       
                                       |
                                    
                                 
                              
                           
                        
                     

It can be seen from the above equation that, the smaller the Minkowski distance, the more similar the two simulation models in comparison. The second is to evaluate the simulation-related similarity. Similarly, suppose that SA
                        (IAsim, IAmesh, IAmat, IAbc, IAload
                        ) and SB
                        (IBsim
                        , IBmesh, IBmat, IBbce, IBload
                        ) are the simulation-related SMDs of simulation models A and B respectively. The similarity value can be computed as follows:

                           
                              (16)
                              
                                 
                                    
                                       
                                          
                                             R
                                             
                                                (
                                                
                                                   
                                                      S
                                                      A
                                                   
                                                   ,
                                                   
                                                      S
                                                      B
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                S
                                                A
                                             
                                             
                                             ∧
                                             
                                             
                                                S
                                                B
                                             
                                             
                                                =
                                                
                                                (
                                             
                                             
                                                I
                                                
                                                   A
                                                   s
                                                   i
                                                   m
                                                
                                             
                                             ∧
                                             
                                                I
                                                
                                                   B
                                                   s
                                                   i
                                                   m
                                                
                                             
                                             ,
                                             
                                             
                                                I
                                                
                                                   A
                                                   m
                                                   e
                                                   s
                                                   h
                                                
                                             
                                             ∧
                                             
                                                I
                                                
                                                   B
                                                   m
                                                   e
                                                   s
                                                   h
                                                
                                             
                                             ,
                                             
                                             
                                                I
                                                
                                                   A
                                                   m
                                                   a
                                                   t
                                                
                                             
                                             ∧
                                             
                                                I
                                                
                                                   B
                                                   m
                                                   a
                                                   t
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                I
                                                
                                                   A
                                                   b
                                                   c
                                                
                                             
                                             ∧
                                             
                                                I
                                                
                                                   B
                                                   b
                                                   c
                                                
                                             
                                             ,
                                             
                                             
                                                I
                                                
                                                   A
                                                   l
                                                   o
                                                   a
                                                   d
                                                
                                             
                                             ∧
                                             
                                                I
                                                
                                                   B
                                                   l
                                                   o
                                                   a
                                                   d
                                                
                                             
                                             
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Here, for each component value in the result vector R(SA, SB
                        ), ‘0’ and ‘1’ indicate whether the data types are the same or not, respectively.

Based on the above analysis, similar simulation models can be retrieved quickly since the content-based retrieval method converts the model matching problem into a problem of SMD similarity assessment of simulation models, thus greatly reducing retrieval complexity and improving retrieval efficiency.

The proposed method is implemented in a CAD platform, namely CATIA, with the help of Microsoft visual studio 2008 and MATLAB R2014a. Two commercial CAE systems are chosen for various types of simulations: Abaqus for structural field simulation and Ansys for thermal field simulation. To demonstrate the performance of the proposed method, four groups of experiments are conducted as follows. The first is about the demonstration of whole process. The second and the third are the visualization and numerical error analysis of the intermediate simulation results and the data filtering and compression performance analysis respectively. And the last one is about simulation model retrieval.

The whole process of the intermediate model generation and efficient transmission of a part named cabinet is shown in Fig. 7. Firstly, the original CAD model is simplified and meshed to obtain the initial intermediate mesh model. Then it is refined and adjusted based on the HMS field control to generate the final refined intermediate mesh model, as shown in Step (3). The mapping and interpolation computation are executed between the intermediate mesh model and those of Abaqus and Ansys to obtain the intermediate simulation results. Finally, after a series of strategies in Step (5) such as coarse filtering, fine filtering and data compression based on FFT, the obtained simulation results on the intermediate model are transferred efficiently through the incremental transmission and then the platform-independent and integrated visualization of the simulation results with high-fidelity are obtained in CATIA, as shown in Step (6). For the integrated visualization, red is used to represent temperature change of the thermal field analysis in Ansys, green is used to display the stress change of the structural field analysis in Abaqus.

In order to demonstrate the performance of the proposed intermediate model, several experiments including the simulation results visualization and numerical error analysis are conducted. Specifically, the cabinet part and the container part are selected as the test objects. Table 1
                         shows the statistical results of the numerical error of the two parts. It can be seen from Table 1 that the simulation results on the refined intermediate mesh model are significantly more accurate than those on the initial intermediate mesh model. For example, for the cabinet part, the SEP for structural field analysis in Abaqus is increased from 76.97% to 84.16% in [0, 5%], and that for thermal field analysis is increased from 85.67% to 91.70% in [0, 0.15%]. As a result, the refined intermediate mesh model achieves a better performance with a high average SEP (87.93%). The reason is that the smaller the EP is, the larger the SEP in the small error interval is, and thus the more accurate the intermediate simulation results are. The statistical results are similar for the container part in Table 1.
                        
                         Since little work has been done in the integrated visualization and numerical error analysis, only the work in [14] is taken as a comparison in this study to demonstrate the performance of the proposed intermediate model based efficient and integrated visualization method. The method in [14] achieves a relatively worse performance based on the interpolation error results (as shown in [14, Fig. 3.]), as the numerical error results are relatively larger than those in Table 1.
                     

Furthermore, the visualization results of the cabinet part and the container part are shown in Figs. 8–11
                        . Each part is conducted with 2 different experiments on the initial intermediate mesh model and the refined intermediate mesh model, respectively. It can be seen from the figures that the visual effects of the refined intermediate mesh models are relatively better than those of the initial intermediate mesh model as well. Additionally, the visual effects are consistent with the statistical results in Table 1 as well.

To further demonstrate the advantages of the refined intermediate mesh model, especially for the local critical regions, the local evaluation experiment of thermal field analysis of the container part is conducted and analyzed. As shown in Fig. 11, the refined intermediate mesh model achieves a relatively better visual effect on the upper surface of the container part. Indeed, it can be inferred from the local evaluation experiment that the local simulation results of the refined intermediate mesh model are more accurate as it is generated based on the HMS field control and more mesh nodes are located on the critical regions, i.e., the upper surface. It can be seen from Fig. 12
                        , for the local region, i.e., the upper surface, the SEP is increased from 87.22% to 93.50% in [0, 0.15%]. Based on the above analysis, the refined intermediate mesh model can simultaneously represent multidisciplinary simulation results with high-fidelity for both the global and local accuracy evaluation.

To verify the performance of the data filtering and compression strategies, two experiments are conducted. Firstly, for the data filtering experiment, the related performance analysis results are listed in Table 2.
                        
                     

In the table, the leftmost column shows the screenshots of the test parts taken from CATIA. The sizes of the original data files and compressed files by ZIP tools are given in the third and fourth columns. The fifth column is the data sizes after coarse and fine filtering. It can be seen from the table that the filtering ratio is dramatically perfect since it can be as high as 99.989%. The simulation data can be reduced greatly after the coarse filtering, especially for the thermal field analysis in Ansys. The incremental transmission based on the fine filtering can further improve the transmission efficiency, especially for the complicated models since they have more internal nodes. For instance, the filter ratio of the container part for the structural field analysis is increased from 94.295% to 97.677% through the incremental transmission strategy.

To demonstrate the advantages of the proposed data filtering strategies, the compression approach proposed in [11] is introduced as a method in comparison. Samples of the translated results, showing the compression ratios possible with PAM, are listed in [11, Table 4]. The compression ratio ranges from 85.4% to 99.5% for different simulation models. Overall, PAM had a better compression ratio, especially in the case of large sized analytic models such as solid and fluid analytical models in comparison with some popular commercial formats, CEI Ensight and GLView VTFx formats and so on. However, the filtering ratios in Table 2, which range from 97.677% to 99.989%, are higher in the experiments conducted. As a result, the proposed strategies including coarse filtering and fine filtering in this study, achieve a better filter or compression ratio by comparing the experimental results. Note that the FFT based simulation data compression method, which can further reduce the data file sizes, is not involved in the data filtering experiment.

Secondly, the FFT based simulation data compression experiment is conducted to explore the data compression performance. It can be inferred from the definitions of DCR and DDR, the DDR is closely related to DCR for the FFT based data compression method. In order to evaluate the performance of the data compression strategy, the part container is used as an example to explore the relationship between DDR and DCR. By adjusting DCR from 0% to 100%, 21 experiments are conducted and the related results are shown in Fig. 13
                        
                        . It can be seen from the figure that with the increase of DCR, the DDR in the small accuracy range of the recovered data is correspondingly decreased. For example, if the DCR is equal to 15%, the statistics percentage of DDR, i.e., SDDR, in [0, 1%] is nearly 90%. The corresponding SDDR decreased to 40% when the DCR is 95%. Moreover, when the DCR is increased from 30% to 60%, the SDDR changed little in [0, 1%]. However, it is reduced a lot when the DCR is larger. As a result, the compression performance is improved at the expense of the decrease in the data accuracy. Based on the above analysis, with the help of the FFT based data compression method, the simulation data to be transferred at each step can be further compressed with a certain loss of accuracy. The compression ratio should be determined by the tradeoff between the data accuracy and transmission efficiency in accordance with the actual requirements.

As mentioned above, the motivation of simulation model retrieval is to provide a tool to find similar simulation models from the database to help simulation staff to conduct current simulation work. As a result, in order to test the effectiveness of the SMD based model retrieval method, a series of model retrieval experiments are conducted. In this study, the SMDs of a total of 535 simulation models, which are composed of 18 kinds of CAD models, as shown in Fig. 14, are computed and stored in the model database.

The retrieval results of six query models based on the proposed method are listed in Table 3
                        . In the table, the leftmost column shows the query models randomly selected by the user, while the columns on the right show the five most similar models in the simulation model database. The Minkowski distance, which represents the similarity between the query model and all the other models in the database, is given below each similar model. It can be seen from the table that most of the similar models in the database can be retrieved, such as the part of piston, nut, spring, coupling and so on. However, different kinds of models with shapes greatly resembling each other can also be retrieved, for example, two flange parts in the 4th and 5th columns are retrieved for the query of the part gearbox. The reason is that semantic information is not involved during the similarity assessment of the geometric-related descriptor. Moreover, the similarity assessment of simulation-related descriptor can further determine the required model based on the comparison of simulation information, such as simulation type, mesh type, material type, boundary condition type, load type and so on.

It is noteworthy that most of the time was spent on the computation of SMDs for all the models in the database for the proposed method, which can be conducted offline. The similarity assessment is almost instantaneous after the SMD of the query model is computed. Moreover, more sophisticated strategies, such as indexing and parallel computing should be considered to improve the interactive performance when the database becomes large.

@&#CONCLUSIONS AND FUTURE WORK@&#

In order to support designers to efficiently acquire and accurately view the simulation data to improve the product development process, an intermediate model based efficient and integrated visualization of multidisciplinary simulation data method is proposed for simulation information reuse. The novelty of the research is summarized as follows:

                        
                           (1)
                           An intermediate model, which is generated based on the HMS field control, is proposed to support the uniform and accurate representation of multidisciplinary simulation data. Its main advantage is that it can eliminate the dependencies of simulation result visualization on specific simulation tools and achieve both platform-independent and integrated visualization with high-fidelity.

The mapping and interpolation algorithm between the intermediate mesh model and heterogeneous simulation mesh models of multiple disciplines is proposed and implemented to achieve the simulation results on the intermediate model for platform-independent and integrated visualization. Additionally, to accelerate the computational efficiency, two strategies, i.e., indexing and parallel computing are deliberately devised.

A series of strategies including coarse filtering, fine filtering for incremental transmission and data compression based on FFT are developed to improve the data transmission efficiency, so as to enable designers to rapidly acquire and then accurately view the simulation results based on the intermediate model to make their decisions to refine the product design solutions.

A content-based retrieval method is introduced in this study, i.e., SMD based similarity assessment method is proposed to achieve the rapid retrieval of simulation models and thus to help the analyzer conduct simulation task by reusing historical simulation data.

However, there are still some deficiencies in the proposed approach. The mesh size function in this study is relatively simple and rough. More precise mesh size functions need to be defined. Further research about the compression of simulation process data should also be considered. Moreover, more commercial systems and simulation types should be involved in the future. And the dimensional reduction for the simulation models will be also considered in the future. In addition, more semantic information should be considered in the computation of the SMD. Currently, the simulation data reuse is manually implemented and more intelligent reuse methods will be also studied and developed in the future.

@&#ACKNOWLEDGMENT@&#

The authors appreciate the financial supports from the NSF of China (61173126, 61572427), the 863 High-Technology Project of China (2011AA100804), Key Project of Science and Technology (2014C01052) and NSF of Zhejiang Province (LY12F02004).

@&#REFERENCES@&#

