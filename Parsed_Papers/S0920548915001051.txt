@&#MAIN-TITLE@&#A novel blood pressure verification system for home care

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The proposed system immediately generates an alarm upon detection of abnormal vital signs, building a personal blood pressure system based on HLFPN.


                        
                        
                           
                           A fuzzy blood pressure system using an Android system on the HMI-6410S integrated biomedical-electronic platform by DMATEK has been constructed.


                        
                        
                           
                           Bluetooth communication technology and the measuring equipment with various sensors enable the proposed system to be applied to real-time tele-home care.


                        
                        
                           
                           The proposed system also assists the patients in being aware of their daily physiological changes, helping them keep tracking and self-managing their health conditions, and preventing any further illness.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Fuzzy analytic hierarchical process (FAHP)

Blood pressure control

Real-time home care

Petri nets

@&#ABSTRACT@&#


               
               
                  Since the human resource-intensive traditional medical care practices often lack consideration of natural human reasoning, they follow procedural knowledge as the knowledge base, and therefore, they lack precision of knowledge description. In order to reduce dependency upon human resources and quickly and accurately discern a patient's health condition, we have constructed a fuzzy blood pressure verification system, which consists of an intelligent mobile device integrated with fuzzy comparison and a fuzzy analytic hierarchical process. This personalized and humane blood pressure verification system can provide assistance for the health and safety of the elderly. In stage one, the system development involves computation of the hierarchical levels of patient's various physiological data using the fuzzy analytic hierarchical process (FAHP). In stage two, a fuzzy blood pressure verification system was constructed using the fuzzy analytic hierarchical process and high-level fuzzy Petri nets. Plotting functionality was added for the convenience of observing the blood pressure trends in patient records in the database system. Upon detection of an abnormal physiological signal from a patient, the intelligent mobile system can generate an alarm, thereby facilitating real-time home care.
               
            

@&#INTRODUCTION@&#

As information technology advances rapidly and the quality of life needs to be improved, the humanist and intelligent living spaces are becoming a reality. People who require care, such as the elderly and those people suffering from chronic illness, require daily monitoring of blood pressure, heart rate, and body temperature. Given the trend of aging populations combined with declining birth rates observed in recent decades, the current working forces are faced with an ever-growing burden of providing care for the elderly [3,4,10,20]. Humanist and intelligent home care technology has been replacing the traditional hands-on aged care by combining the aged care with monitoring and information technology. This enables home care to be flexible, intelligent [9], and compassionate, in the hope that individual health awareness can be raised, medical expenditure can be lowered, and the quality of health care can be increased [1,2,3].

A fuzzy verification system allows users to verify a rule class that is a collection of knowledge about a specific problem. When the estimation of a specific problem is performed, the specific rule class can be appointed as the knowledge base, with environment or any other factors relevant to the problem as additional rules. Fuzzy estimation works well based on the degree of certainty [2,20]. In such an estimation model, the certainty of a rule represents a change in the possibility of the fact post estimation [7]. The possibility of a fact is recalculated based on its original possibility and the degree of certainty in a rule. We have used this approach for designing the blood pressure verification system.

The current research report shows that half of the top ten causes of death in Taiwan are related to hypertension, making it a serious health risk [7,12,13,19]. On this basis, the main purposes of this paper include the following:
                        
                           1.
                           using results of the fuzzy analytic hierarchical process as a basis for tele-home care, generating alarms, and notifying the patient's family when the patient's blood pressure becomes abnormal;

adding functionality of plotting to the database to allow comprehensive monitoring of the patient's physiological changes;

combining the experimental results with intelligent devices, creating a knowledge system that closely resembles human thinking, thereby realizing humanistic health care.

The remained sections of this paper are organized as follows: Section 2 discusses the definition of a home care system, blood pressure and cardiovascular conditions, and a high-level fuzzy Petri net (HLFPN). Section 3 describes the methods of creating a fuzzy blood pressure analysis system using the fuzzy analytic hierarchical process (FAHP) combined with the HLFPN. The system transmits pulse and blood pressure data gathered by the blood pressure monitoring and management system. In Section 4, the structure and operating steps of the implementation in experiments are explained, followed by a discussion of experimental results from diastolic pressure measurements, and comparisons after connecting with an intelligent device. In Section 5, the results from all of the preceding sections are summarized and a conclusion is given. Suggestions for the follow-up research are also proposed.

@&#LITERATURE REVIEW@&#

In this section, first of all, the definition and measurement methods of blood pressure are presented. Finally, the knowledge verification and the definition of high-level fuzzy Petri nets are discussed [6,10].

The blood pressure measuring devices can be divided into two major categories, namely, invasive and non-invasive. During a routine medical examination, the blood pressure is usually measured using either the auscultatory method or the oscillometric method, both of which are non-invasive. This measuring method is normally carried out in hospitals; however, now that basic cardiovascular status assessment can be performed at home, personal health can be better guaranteed. The device developed in this study adopts the architecture of an electronic blood pressure machine, manipulates values captured by the built-in pressure sensor, and then transfers them to a desktop computer, using Bluetooth, RS 232, or 3G protocols and standards, to be plotted. Those data items that cannot be captured from a standard home device such as blood oxygen and blood oxygen levels can be captured by our device. Using our device, the patient is able to perform basic cardiovascular status assessment at home with ease, promoting early detection and helping the family control cardiovascular disease.

The report by the Joint National Committee regarding the prevention, evaluation, and treatment of high blood pressure [14] has determined that the optimal range for blood pressure for an adult over the age of 18 is below 120mmHg for systolic pressure and below 80mmHg for diastolic pressure, while the measurements below 130 and 85mmHg, respectively, are considered to be normal. Systolic pressure between 130 and 139mmHg and diastolic pressure between 85 and 89mmHg are considered to be high-normal. Collectively, the systolic pressures below 140mmHg and diastolic pressure below 90mmHg are considered to be within a normal range, as shown in Table 1
                         
                        [6,15]. The traditional binary logic only allows these values to be interpreted as yes/no or true/false scenarios, determining if a patient's hypertension is severe enough to require medical care, to take medication, or is within the normal range.

In the fuzzy expert system, the conditions and conclusion of a fuzzy rule may incorporate descriptive semantics like those used in natural language, such as “more,” “quite,” “very,” “slightly,” and “extremely.” Use of such semantics allows much more appropriate fuzzy descriptions to be achieved, such as “very big,” “big,” “slightly big,” “medium,” “slightly small,” “small,” “very small,” “ideal blood pressure,” “normal pressure,” “high-normal pressure,” “mild hypertension,” “moderate hypertension,” and “severe hypertension” [11,12,23].

Like the neural network, the fuzzy Petri net (FPN) model can be used to describe the representation of knowledge structure using Petri nets, and the mechanism of inference using fuzzy theory [5,9,11,16,21]. In recent years, the study of knowledge verification using Petri nets among rule-based expert systems has gained increasing attention. Petri nets are a graphical and mathematical tool applied in many areas of research for information processing. The advantages of a rule-based Petri net system are that it provides an ideal platform for analysis and graphical presentation, representing rules in a structural way, deducing the process of inference, and then allowing the dependency relationships between rules to be clearly understood [4]. As a result, many academics have proposed their own customized Petri net models to describe the rule-based system. At the same time, many studies on the applications of fuzzy reasoning have been published [8]. The traditional Petri nets have been extended to become an FPN model and a high-Level petri net (HLPN) model [21]. The HLPN provides a solid definition for the model design, analysis, and verification of parallel systems, which fuzzy Petri nets lack. Therefore, the consolidation of the two models, allowing reuse, reliability, expandability, and variability of existing data, acts as a complete mechanism for system design, analysis, and verification [22].

Twelve sample data sets to compare the time of sorting blood pressure by HLPN model with that by HLFPN (high-level fuzzy Petri nets) model under the same condition are adopted. In Table 2
                        , assuming the blood pressure is 115, the average sorting time used by HLFPN is 0.949second and the sorting time used by HLPN is 1.507second, we can clearly see that the HLFPN model performs much better than the HLPN model.

There are two machine learning methods, namely, supervised learning and unsupervised learning 
                        [17,18]. Supervised learning is constantly to modify the weight in the neural network. Through the process, we hope the actual output results to fit with the expected (desired) results. It will modify the deviation between the neural network input and expected output value by giving an input value and expected output value until the deviation gets smaller than a limit value or the weight stops changing. Unsupervised learning only providing the input data does not require the expected output data, which means that it does not require error messages to improve the output of the neural network and to determine the classification by only input data. So the unsupervised learning is usually used to sort classifications, and supervised neural network is used to model training. In this paper, an unsupervised learning method in the fuzzy blood pressure analysis system to classify the input data directly to sort the subjects was used.

In this section, the second major learning paradigm, i.e. an unsupervised learning scheme, in which no feedback comes from the environment to show what the desired outputs of a network should be or whether they are correct or not, is discussed. The HLFPN model must train itself to capture any relationship of interests from the input data and transform the captured relationships into outputs.

INPUT: Mem(pi) or fuzzy sets, ∀pi ∈ IP, where IP denotes a set of input places.

OUTPUT: Mem(pi) or fuzzy sets, ∀pi ∈ OP, where OP denotes a set of output places.

PROCEDURE:
                              
                                 
                                    Step 1: Initially, assume that only the Mem(pi
                                    )'s in the propositions operating on input variables are available. Consequently, the initial marking function is
                                       
                                          
                                             M
                                             
                                                
                                                   p
                                                   i
                                                
                                             
                                             =
                                             0
                                             ,
                                             
                                             if
                                             
                                             
                                                p
                                                i
                                             
                                             ∉
                                             I
                                             P
                                             ;
                                          
                                       
                                    
                                    
                                       
                                          
                                             M
                                             
                                                
                                                   p
                                                   i
                                                
                                             
                                             =
                                             the
                                             
                                             number
                                             
                                             of
                                             
                                             input
                                             
                                             data
                                             
                                             items
                                             ,
                                             
                                             if
                                             
                                             
                                                p
                                                i
                                             
                                             ∈
                                             I
                                             P
                                             .
                                          
                                       
                                    
                                 


                                    Step 2: ∀t j
                                     ∈ PR, compute V(t j
                                    )=
                                    Wa
                                    
                                    ×
                                    Wc
                                    
                                    =[wa1 wa2
                                    …wam
                                    ]T ∧ [wc1 wc2
                                    …wcn
                                    ], where PR denotes a set of production rules; V(t j
                                    ) is a fuzzy relation between the antecedent and consequent of rule tj
                                    ; Wa
                                    
                                    ={wa1
                                    ,wa2
                                    ,…,wam
                                    } is a fuzzy set for the antecedent; and Wc
                                    
                                    ={wc1
                                    ,wc2
                                    ,…,wcn
                                    } is a fuzzy set for the consequent.


                                    Step 3: Input a data pattern and fire the enabled transitions. Let tj
                                     be any enabled transition. Then we get tj
                                     ∈ T, ∀pk
                                     ∈ I(tj
                                    ), M(pk
                                    )=the number of input data items.


                                    Step 4: For every input variable I, its associated possibility difference is computed by δ
                                    =
                                    Wa-input
                                       −Wa
                                    , where Wa-input
                                     denotes a vector of input data items at antecedent.


                                    Step 5: ∀ transition tj
                                    , if δ
                                    >0, then Wa′
                                    =
                                    Wa
                                    
                                    +α | δ |; if δ
                                    ≤0, then Wa′
                                    =
                                    Wa
                                    , where α is a learning constant and | δ | denotes the absolute values of vector δ. Compute Wc
                                    ′=
                                    Wa
                                    ′ o V(tj
                                    ).


                                    Step 6: ∀t j
                                     ∈ PR, compute V(t j
                                    )′=
                                    Wa
                                    ′×
                                    Wc
                                    ′.


                                    Step 7: Go back to Step 3, while ∃ tj
                                     ∈ T (a set of transitions), M(pi
                                    )=the number of input data items, ∀pi
                                     ∈ I(tj
                                    ); that is, while the enabled transitions still remain.


                                    Step 8: ∀ output place op ∈ OP, output its Wc
                                    ′.


                                    Step 9: Repeat the above steps until all the input data patterns are terminated.

Many of the body's physiological signs can be reflected in quantified blood pressure, which is therefore a good indicator of overall health status. The fuzzy blood pressure analysis system (FBPAS) analyzes physiological measurements such as pulse and blood pressure using a fuzzy analytic hierarchical process with Petri nets. The analysis results are then sent to a management system. When the patient's physiological signals are abnormal, the system is able to notify the patient based on not only analysis of the measurements but also blood pressure trends in the data collected in the long term. The patient is therefore aware of his/her own status of health at all times. Chronic illness sufferers are able to benefit from real-time physiological assessments and professional consultations in the comfort of their living room, greatly reducing transportation efforts for both the patient and their physicians.

The system firstly collects various physiological data from the patient and consolidates them with historical data. These data are then fuzzified using the fuzzy number construction process, before a user's analysis report is generated using the fuzzy inference mechanism. The user's analysis report includes blood pressure analysis, pulse analysis, and exception alerts. A fuzzy blood pressure verification system consists of three parts, namely, the “fuzzy number construction process,” the “fuzzy analytic hierarchical process (FAHP),” and the “fuzzy inference mechanism,” as shown in Fig. 1
                        .

A medical database is constructed before carrying out the fuzzy number construction process. Two tasks are involved in gathering data for the medical database, including the relevant patient history and physiological data to be evaluated. The patient's history represents the data collected over a considerable period of time and is pre-stored in the medical database. Any new data must be referenced with the patient's history before being entered into the database so the fuzzy number construction process can be established.

The FAHP includes the following steps:
                           
                              
                                 Step 1: Constructing a hierarchical architecture

The first task in the hierarchical analysis is defining the problem, which is “systolic and diastolic pressures.” After consolidating the medical history regarding the patient's blood pressure, a “blood pressure hierarchy” may be constructed, as shown in Fig. 2
                                 .

The hierarchical analysis process is divided into three levels and eight criteria. The first level is the final goal; the second level is the severity of blood pressure, including NOR (normotensive), MIL (mild hypertension), MOD (moderate hypertension), and SEV (severe hypertension); the third level consists of detailed criteria that are aggregates of the broader upper criteria, including SNOR (somewhat normotensive), SMIL (somewhat mild hypertension), SMOD (somewhat moderate hypertension), and SSEV (somewhat severe hypertension). The second-level criteria are defined in Table 3
                                 , and the third-level criteria are defined in Table 4
                                 .


                                 Step 2: Fuzzy analysis process

For the purpose of real-time response, the membership function adopted for this study is a triangular fuzzy function, Ã=(a
                                 1,a
                                 2,a
                                 3,), where a
                                 1 is the leftmost point, a
                                 2 is the central point, and a
                                 3 is the rightmost point of a triangle. The eight membership functions are shown in Fig. 3
                                 .

The criteria in the above-stated hierarchy are used to transform discrete input values to linguistic variables that correspond to the triangular membership function, as shown in Table 5
                        . The computer determines the hierarchical level to which the medical database within the knowledge base belongs. The decision-making unit then executes the fuzzy inference process, as shown in Fig. 4
                        .

The fuzzy inference processor imitates human reasoning using fuzzy logic. It manipulates fuzzy input variables using the appropriate linguistic rules in the fuzzy rule base. Fuzzy outputs are thereby generated. The fuzzy processes differ according to the blood pressure classification. As shown in Fig. 5
                        , two possible paths exist after the user has logged into the FBPAS.

As path one is for the existing patients, the patient enters data that are compared with data from the medical database in order to determine whether the patient's blood pressure is within the normal range or not. Path two is for new patients for whom there is no pre-existing data in the medical database. The new patient's data items are categorized according to benchmarks set up in the database. After transformation via fuzzy associative memory (FAM), the criteria for new patients are shown in Table 6
                        . The criteria for existing patients are listed in Table 7
                        . FAM categorizes the data for an existing patient stored in the database into SNOR, NOR, SMIL, MIL, SMOD, MOD, SSEV, and SEV. The input data items entered by the patient are compared with the existing patient data items to determine whether the patient's blood pressure is within the normal range or not. The input data can belong to any of the following four categories: DATANOR, DATAMIL, DATAMOD, and DATASEV.

As a result, 8×3
                        =
                        24 rules can be constructed to create a fuzzy rule base for an existing patient, listed as R1 to R24 in Table 8
                        . Each rule has discrete definition for its input and output, depending on which kind of data the input value is closer to, in terms of percentage, after comparing with the existing database.

The FAM allows five categories of data for a new patient, including SLOW, SNOR, SMIL, SMOD, and SSEV. The input data items entered by the patient are compared with benchmark data to determine whether the patient's blood pressure is within the normal range or not. The input data items can belong to any of the following four categories: NOR, MIL, MOD, and SEV. A new patient can then be classified into the following eight categories: SNOR, NOR, SMIL, MIL, SMOD, MOD, SSEV, and SEV. It is shown in Table 6 that new patients usually have normal blood pressure. The blood pressures close to the origin of locus and close to the origin are both classified as SNOR, those distant from the point of origin are NOR. If the mild hypertension is entered, it is classified as SMIL if close to the origin of locus, NOR if close to the point of origin, and MIL if distant from the point of origin. If the moderate hypertension is entered, it is classified as SMOD if close to the origin of locus, MIL if close to the point of origin, and MOD if distant from the point of origin. If the severe hypertension is entered, it is classified as SEV if close to the origin of locus, SSEV if close to the point of origin, and SEV if distant from the point of origin.

According to Table 7, when the existing patient enters SNOR, the patient's blood pressure is completely normal and is classified as NOR if very close to the origin of locus. The closer to the point of origin, the healthier the patient is and the data are classified as NOR. If the data are far away from the point of origin, the patient may be suffering from mild hypertension, which is classified as MIL, and the system will alert the patient accordingly. If SMIL is entered, the patient is suffering from somewhat hypertension, if very close to the origin locus, the patient belongs to the NOR category within somewhat mild hypertension; the closer to the point of origin, the closer the patient's blood pressure to normotensive; the more distant from the point of origin, the closer the patient's blood pressure to moderate hypertension, or MOD, which will cause the system to generate an appropriate alarm.

To reduce time needed to classify the blood pressure of a new patient, we adopted an unsupervised learning approach using HLFPN, which automatically determines the level the patient belongs to in the hierarchy based on the relationship between input and output data after applying the criteria listed in Table 6. This allows the time required for repeated classification at each level to be reduced. As a result, listed as R25 to R32, shown in Table 9
                           . Rules R25 to R32 can be described in the form of HLFPN, which illustrates an example of the simple HLFPN model representing the above eight rules. In the HLFPN model, SLOW, SNOR, SMIL, SMOD, SSEV are input places; NOR, MIL, MOD, SEV are transitions; SNOR, NOR, SMIL, MIL, SMOD, MOD, SSEV, SEV are output places. SLOW, SNOR, SMIL, SMOD, and SSEV are input places, assigned as P1 to P5, respectively. NOR, MIL, MOD, and SEV are transition places; SNOR, NOR, SMIL, MIL, SMOD, MOD, SSEV, and SEV are output places, assigned as P6 to P13, respectively.

This simple example is used to demonstrate the above model, assuming the value for the input diastolic pressure is 93, the membership values for each input are P1
                           =
                           NULL, P2
                           =
                           93, P3
                           =93, P4
                           =93, and P5
                           =
                           NULL, as shown in Fig. 6
                           , and the respective output markings after firing the transition are the following:
                              
                                 
                                    Marking
                                    
                                       M
                                    
                                    :
                                    
                                       
                                          P
                                          1
                                          ,
                                          
                                          P
                                          2
                                          ,
                                          
                                          P
                                          3
                                          ,
                                          
                                          P
                                          4
                                          ,
                                          
                                          P
                                          5
                                          ,
                                          
                                          P
                                          6
                                          ,
                                          
                                          P
                                          7
                                          ,
                                          
                                          P
                                          8
                                          ,
                                          
                                          P
                                          9
                                          ,
                                          
                                          P
                                          10
                                          ,
                                          
                                          P
                                          11
                                          ,
                                          
                                          P
                                          12
                                          ,
                                          
                                          P
                                          13
                                       
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       M
                                       0
                                    
                                    =
                                    
                                       
                                          0
                                          ,
                                          
                                          1
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                       
                                    
                                    
                                       
                                          T
                                          1
                                          ,
                                          
                                          T
                                          2
                                       
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       M
                                       1
                                    
                                    =
                                    
                                       
                                          0
                                          ,
                                          
                                          1
                                          ,
                                          
                                          1
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                       
                                    
                                    
                                       
                                          T
                                          1
                                          ,
                                          
                                          T
                                          2
                                          ,
                                          
                                          T
                                          3
                                       
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       M
                                       2
                                    
                                    =
                                    
                                       
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                       
                                    
                                    
                                       
                                          T
                                          1
                                          ,
                                          
                                          T
                                          2
                                       
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       M
                                       3
                                    
                                    =
                                    
                                       
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          1
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                          ,
                                          
                                          0
                                       
                                    
                                    
                                       
                                          T
                                          1
                                       
                                    
                                 
                              
                           
                        

If the values for firing the transition are T1
                           =0.21, T2
                           =0.21, T3
                           =
                           NULL, and T4
                           =
                           NULL, then the firing path for the output must be T1, yielding the final output P8
                           =
                           SMIL, as shown in Fig. 7
                           .

In this paper, a fuzzy blood pressure monitoring system suitable for home care was proposed. Demands for long-term care are increasing continuously as the society ages, making utilization of tele-home care a growing trend. An increasing number of intelligent devices combined with a biomedical module are able to assist home care givers in providing even better care and improving quality of life. Using a cellphone or home computer, the home care giver or patient can receive data from a remote biomedical module via the Internet followed by a discussion of experimental results from diastolic pressure measurements and comparisons after connecting with an intelligent device.

The main focus for this study is to increase executability using the fuzzy analytic hierarchical process (FAHP) combined with HLFPN. In the past, when the hierarchical analytic process was used, two comparisons must be made. The first comparison determines the first hierarchical level as shown in Fig. 2, and the results of the first level analysis are used for the analysis for the second level of hierarchy as shown in Fig. 2. The time complexity is therefore O(N
                        2) (Table 10
                        ). The number of rules, N, is stored in an N-slot array, resulting in the space complexity O(N).

The fuzzy inference processor imitates human reasoning using fuzzy logic. It manipulates fuzzy input variables using appropriate linguistic rules from the fuzzy rule base, thereby generating fuzzy outputs. In this study, we aim to optimize fuzzy processing using a recursive and dynamic method, which allows repeatedly computing to be avoided after exchanging space for time. A table is constructed to store all of the interim parameters during the computing process. Conclusions of problems are used to compute the unsolved problems.

When analyzing time complexity for the FAHP, let X and Y denote length and width (as shown in Figs. 4 and 5), respectively. The time required to solve each problem is O(1), and can be achieved by solving each problem as two sub-problems. There are a total of X
                        ×
                        Y problems, requiring O(XY) amount of time, forming a two-dimensional array.

If only the solution to one specific problem (as opposed to all problems) is to be computed, a one-dimensional array is needed, that is, O(min(X,Y)) amount of space. In this study, we have increased executability using the FAHP combined with Petri nets. In other words, in terms of time complexity, each problem depends on a smaller problem making the execution time for each problem O(1). 
                           N
                         problems will require O(N) time. If each problem can be divided into O(D) sub-problems, such that each problem is solved by solving O(D) sub-problems, and there are O(N) sub-problems in total, the overall time complexity is O(N
                        ×
                        D
                        ×
                        1).

As shown in Fig. 6, the O(D) sub-problems are P1 to P5. R25 to R32 are all of the sub-problems, O(N), which result in a single conclusion after passing through 
                           T
                         (a set of transitions). Therefore, time complexity is O(N
                        ×
                        D
                        ×
                        1). Assuming the conclusions to all problems are contained in the table and there is sufficient amount of memory, the time required to save and extract the conclusion to a single problem is O(1).

Space complexity must be calculated during the existence of sub-problems. During computation, the sub-problems which are no longer needed do not need to be kept in the table and the memory occupied by them can be released or reused, thus reducing the overall space complexity. If all of the sub-problems are kept, then the space complexity is O(N).

The graphical user interface (GUI) in MATLAB to build a control panel for detecting physiological signals via a serial RS 232 interface has been used. The electrical signals including electrocardiogram, blood pressure, and pulse are transformed into quantifiable values and manipulated to yield characteristic parameters for the ECG.

The blood pressure measuring system was constructed upon the HMI-6410S integrated biomedical-electronic platform by DMATEK, and the measured data sets were input to the database via wireless RS 232 Bluetooth. The patient wears a pressure cuff on the wrist of one arm and presses the hand bulb with the other hand. When the pressure in the cuff exceeds the patient's blood pressure, the pressure sensor connected to the other end of the cuff will detect the systolic and diastolic pressure from the flowing blood, i.e. the pulse. The integrated biomedical-electronic platform reads and stores these values in the database. Data items are then extracted from the blood pressure module using MATLAB and are displayed on an oscilloscope. In Fig. 8
                           , peak A of a wave occurs at 0.49seconds and peak B is the trough. C is the peak for the next wave, occurring at 1.05seconds. Therefore, the pulse has a period of 560ms. Using MATLAB's built-in interpretation algorithm, we have obtained the following blood pressure and pulse data:
                              
                                 ■
                                 Number of beats: 60×1000/560=107beats/minute

Systolic pressure: 1.98V×70mmHg/V=138.6mmHg

Diastolic pressure: 1.33V×70mmHg/V=93.1mmHg

Using the “Physiological Signal Display Window,” the user can choose the means of measurement, read the measured values, observe waveforms, analyze and calculate the values for characteristic parameters. Six criteria exist in the medical database, as shown in Fig. 9
                           , including SLOW (severe hypotension), SNOR (somewhat normotensive), SMIL (somewhat mild hypertension), SMOD (somewhat moderate hypertension), SSEV (somewhat severe hypertension), and SEV (severe hypertension). According to these criteria, the data entered by the patient can be evaluated for the normality of his/her blood pressure depending on the types of data: NOR (normotensive), MIL (mild hypertension), MOD (moderate hypertension), or SEV (severe hypertension).

After entering the command “FUZZY” in MATLAB's command menu, the GUI for the blood pressure verification system appears. Using the fuzzy inference system (FIS), the editor can construct an FIS document. Mamdani's max–min fuzzy inference method is adopted for both the fuzzy inference and the defuzzification. Under the SIMULINK environment, dragging and connecting relevant modules into the window can generate the fuzzy control simulation system as shown in Fig. 10
                           . The relevant patient's historical data items stored in the medical database are used for reference. Once the new data items are entered, the system makes a comparison between the new and the old data to set up the “fuzzy number construction process.”

In this study, a fuzzy blood pressure system using an Android system on the HMI-6410S integrated biomedical-electronic platform by DMATEK has been constructed, as shown in Fig. 11
                        . Bluetooth communication technology, various sensors, and measuring equipment enable the system to be applied to tele-home care.

The Bluetooth module used in the experiment has a serial port interface. When powered on, the module stays in an idle mode until it is found by and coupled with another Bluetooth module. After an SPP service is established with the remote Bluetooth module, our Bluetooth module will spontaneously transmit data received from the serial interface to the remote Bluetooth module, and transmit the data to a relevant device via the serial link. The remote Bluetooth module can be of various types. Once the SDK development is completed, it can be installed under HTC Wildfire and be devised with a Bluetooth system to take part in tele-home care.

The rule base produces the results for analysis. Whether this analysis is within the assessable range or not depends on the pulse pressure and the normal values of blood pressure. If assessable, the results are compared with data in the database to determine which level in the hierarchy of the patient's blood pressure it belongs to, and the patient is informed of the need to seek medical care. Otherwise, the system displays an error message and informs the patient that the blood pressure needs to be re-measured. The difference between systolic and diastolic pressures is called the pulse pressure. A normal pulse pressure is between 30 and 50mmHg. A pulse pressure lower than 30mmHg is a low one, and that higher than 50mmHg is a high one. Both conditions are indicators for illness.

After the executable file in “biomedical systems.jps” is stored on the smartphone and the application of biomedical systems is launched, the smartphone will enter the startup screen as shown in Fig. 12
                            when the phone's connection and executable program are verified. The screen of a home care system shows 3seconds after a successful verification. Two buttons “Exit” and “Start” exist on the screen of a home care system. Pressing “Exit” can exit the application software system, as shown in Fig. 13
                           .

Selecting “Start” will open the hardware selection screen with the following hardware options: Bluetooth, Zigbee Point to Point, ZigBee Net, and RS 232, as shown in Fig. 14
                           . The Bluetooth connection is selected for an intelligent mobile device and the device will start to scan for hardware as shown in Fig. 15
                           . The screen of a fuzzy blood pressure system will display after scanning is completed as shown in Fig. 16
                           .

After the measurements are assessed by fuzzy comparisons, the results are shown to the user and the system will indicate whether the user should attend a clinic or not, as shown in Fig. 17
                           . In addition to such notifications, the message box on which the assessment results are displayed has an “OK” button. Pressing the “OK” button not only recognizes that the message has been read, but also automatically sends text messages to the patient's family, as shown in Fig. 18
                           , in order to minimize possible delay in the patient seeking medical care. The fuzzy blood pressure system cannot be shut down without the “OK” button being pressed, to ensure that the patient's family will be notified and the assessment results will be read.

@&#DISCUSSION@&#

An increasing number of home care products are becoming available, most of which allow the inhabitants of a digital home to make judgments based on technical information, without taking into consideration natural human reasoning. This paper presents a new idea to use fuzzy logic theory in the home care system, combining experimental results with intelligent devices, creating a knowledge-based system that closely resembles human thinking, thereby realizing humanistic health care. The existing home care systems can just show the measurement results on the intelligent phone, but in this paper, the proposed intelligent fuzzy blood pressure system of home care can not only show the measurement results but also proceed the human-being measurement and analysis, then send the analysis results to the patients and their family. A home-style personalized blood pressure verification system has been truly developed and a comparison with the existing home care system has been made, as shown in Table 11
                        .

@&#CONCLUSION@&#

In this paper, a fuzzy blood pressure verification system used to evaluate blood pressure has been successfully proposed. Many of body's vital signs can be reflected in quantified blood pressure, which is therefore a good indicator of overall health status. The FBPAS analyzes physiological measurements such as pulse and blood pressure using a fuzzy analytic hierarchical process with HLFPN. A fuzzy logic controller based on MATLAB's fuzzy toolbox is used to simulate the FBPAS. The resulting fuzzy blood pressure values are transferred to a fuzzy rule base on an Android 2.2 platform, where the measurements are conducted through a graphical user interface. The results of the analysis and the raw pulse and blood pressure measurements are transmitted to a management system to form a fuzzy blood pressure analysis system. There are three contributions stated as follows:
                        
                           (1)
                           Humanistic and intelligent home care practices will gradually replace the traditional hands-on approaches to medical care. Personal medical records are used as a basis for the knowledge system, making the description of knowledge adaptable to different individuals such as members of a family with different blood pressures. The system immediately generates an alarm upon detection of abnormal vital signs, building a personal blood pressure system.

A fuzzy blood pressure system using an Android system on the HMI-6410S integrated biomedical-electronic platform by DMATEK has been constructed. Bluetooth communication technology and the measuring equipment with various sensors enable the proposed system to be applied to real-time tele-home care and achieve effective extraction, correct transmission, and all-round monitoring.

Functionalities of the system, at this stage, include extraction of physiological signals such as systolic pressure, diastolic pressure, and average pressure, emergency assistance requests from the patient, signaling abnormality alarms, and setting reminders for checkups. The proposed system also assists the patients in being aware of their daily physiological changes, helping them keep tracking and self-managing their health conditions, and preventing any further illness.

The future goal is to apply the proposed approach to a more variety of health conditions, such as liver function, diabetes, cholesterol, and carcinogens, or to join a larger medical database system during different time periods and make the proposed system more complete by integrating it with cloud computing.

@&#ACKNOWLEDGMENTS@&#

The authors are very grateful to the anonymous reviewers for their constructive comments which have improved the quality of this paper. This work was supported by the Ministry of Science and Technology, Taiwan, under grant MOST 103-2221-E-305-015.

@&#REFERENCES@&#

