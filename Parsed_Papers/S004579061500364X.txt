@&#MAIN-TITLE@&#A chaos-based image encryption algorithm with simple logical functions

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Proposed an effective chaotic encryption scheme based on confusion and diffusion principles.


                        
                        
                           
                           Introduced bitwise circular rotation operation to increase plaintext sensitivity.


                        
                        
                           
                           Proposed an effective encryption scheme with two independent chaotic functions to increase computing ability.


                        
                        
                           
                           Test results indicate that the proposed encryption method is more secure and fast.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Image encryption

Chaos

Low entropy

Security analysis

@&#ABSTRACT@&#


               
               
                  This paper proposes an effective chaos-based encryption algorithm specialised for images. A system of two independent chaotic functions with high sensitivity to initial states, is utilised to sufficiently apply confusion and diffusion principles for images with any entropy. One of the functions is used for shuffling pixel positions while the other for changing the values of pixels. In the resulting new pixel organisation, adjacent pixels with naturally close values will take on considerably different values, making it difficult to crack the encrypted image. To increase resistance of the system to differential attacks, some logical operations such as exclusive-or and circular rotation are used to spread the effect of a slight change in single pixel intensity of plain image over many pixels in cipher-image. A variety of analyses and tests has been carried out to prove the security and the validity of the algorithm. Even with low entropy images the proposed algorithm has been proved to be more secure and faster than the previous algorithms.
               
            

@&#INTRODUCTION@&#

Since there has been a rapid advance in computing technology, developing effective techniques for secure storing and transmitting digital image data has become an important issue for researches. Applications especially for secure image storage and communication require image data production against unauthorised users. Whenever an image has to be employed in an application, image security becomes a crucial concept. In the last decade, many different encryption algorithms relied on diverse principles have been published in the literature [1]. Due to the specific characteristics of chaotic systems, chaos based encryption methods seem to be more efficient for practical use regarding reasonable speed, high security and complexity [2].

It is expected from an ideal cipher to fulfill some fundamental cryptographic requirements as confusion, diffusion, and randomness. Chaotic systems offer advantages of random behaviour and greater sensitivity to initial conditions, so introduce very large space to resist brute force attacks. Since digital images inherently have redundant data, high similarity for neighbouring pixels, and less sensitivity to a tiny change in pixel attribute, the security requirements of digital images increase the importance of chaos based encryption methods [3,5].

Based on the above discussion, an enhanced chaotic system with two Logistic Maps is proposed in this paper. The first Logistic Map is used to scramble the plain image for reducing correlation between adjacent pixels. So, statistical analysis becomes difficult to crack the cipher image. The purpose of the second Logistic Map is to further increase the confusion by changing the pixels’ values (i.e. decreasing the relationship between the plain image and the cipher image). In addition, the second Logistic Map makes it possible for the image data with any entropy structure to be securely encrypted. In order to reflect the influence of slight change in single pixel intensity of plain image on larger number of pixels in cipher-image, some logical operations such as XOR and circular rotation are exploited with the proposed algorithm.

The main improvements of this paper can be summed up as: (1) to better shuffle the plain image for encryption, only two chaotic Logistic Maps are used together with some logical operations, (2) to get more uniform histogram for low entropy images, disruption of plain image is achieved in only a few rounds, (3) to resist differential attacks, the influence of one bit change in single pixel is spread over many pixels with the logical operations mentioned above.

@&#RELATED WORKS@&#

Chaotic systems have attracted attention of many researchers due to their inherent features such as ergodicity and pseudo-randomness, sensitivity to initial conditions and control parameters. Chaos-based encryption algorithms have been widely used for image encryption [1,2,4–9,11] because they are easy to be realised compared with traditional crypto-systems such as AES, DES etc. [12].

One of the most cited image encryption schemes is offered by [13] which proposes permutation and diffusion processes governed by 2D map and 1D chaotic maps respectively. In the study Fridrich first discretized Baker-map, then extended it to three dimensions and composed it with a simple diffusion mechanism. Subsequent proposed works in the field [10,11] are highly influenced by this work .

In [10] it is proposed a chaos-based image encryption algorithm with variable control parameters derived from plain-image in order to improve resistance to all known attacks. They used three maps namely Standard map, Cat map and Baker map in the permutation stage of their algorithm to compare performances of each map. Their work resulted in higher security and faster encryption speed for practical applications.

In [7] it is proposed chaos based symmetric block cipher composed of a confusion process based on chaotic standard map, a diffusion function and a key generator for encrypting large volume data sets. Their algorithm reportedly has satisfactory security level and short run times.

In [5] a new symmetric chaotic encryption based on bit level permutation was proposed by using Logistic Map. This study has achieved required security level consecutively running many rounds of diffusion and confusion processes, but resulting in longer processing time and heavy computational load.

In this paper, inspired by the [5] a novel chaotic image encryption scheme with two Logistic Maps is proposed. The proposed scheme performs diffusion process faster and more effectively by figuring on the previously encrypted byte for the encryption of next byte and rotating the resulting byte to get more complex disruption on the pixel. So a slight change in plain-image results in substantially different cipher image in much shorter time.

The paper is organized as follows: Section 2 introduces the proposed encryption system including description of encryption/decryption algorithm. In Section 3, security analysis, speed performance, complexity analyses of the proposed algorithm and the results of these analyses are given in detail. Section 3 finally concludes the paper.

The proposed scheme uses an iterative process to encrypt a sequence of bytes which is the 1D transformed version of the 2D original image. Two independent chaotic functions are used as given in Eqs. (2) and (3). One of them is used to permute pixel positions while the other used to change intensity values of pixels. These functions together ensure confusion and diffusion operations required for encryption. The algorithm is also supported with some logical operations to further increase security and to decrease encryption time.

In the present study, a chaotic function known as Logistic Map is used:

                           
                              (1)
                              
                                 
                                    f
                                    (
                                    x
                                    )
                                    =
                                    λ
                                    x
                                    (
                                    1
                                    −
                                    x
                                    )
                                    ,
                                    3.57
                                    <
                                    λ
                                    <
                                    4
                                    .
                                 
                              
                           
                        Chaotic behaviour of the function depends entirely on the value of λ, which is constrained to the range of (3.99,4) to make the function operate in the most chaotic region. Bifurcation diagram of the Logistic Map is given in Fig. 1
                        . It can be seen from Fig. 1 that as the value of λ approaches to 4, the output of the function takes on more distinct values ranging from 0 to 1. Discrete form of the chaotic function used is given in Eqs. (2) and (3). Our aim for using Logistic Map is to benefit from its well-known chaotic behaviour to perform more complex pixel permutation, namely better diffusion operation. One of the functions is used to find new positions of the pixels while the other operates to modify their intensities.

In the presented crypto-system, two separate Logistic Maps are utilised for both encryption and decryption processes. The Logistic Maps are given in Eqs. (2) and (3) where 
                           
                              x
                              
                                 i
                                 +
                                 1
                              
                           
                         and 
                           
                              y
                              
                                 i
                                 +
                                 1
                              
                           
                         are state values with 
                           
                              i
                              =
                              0
                              ,
                              1
                              ,
                              2
                              ,
                              …
                           
                        ; λ
                        1and λ
                        2 are the parameters determining chaotic behaviour of the maps and used as a part of the keys in the crypto-system.

                           
                              (2)
                              
                                 
                                    
                                       x
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    =
                                    
                                       λ
                                       1
                                    
                                    
                                       x
                                       i
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          x
                                          i
                                       
                                       )
                                    
                                    ,
                                    i
                                    ≥
                                    0
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       y
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    =
                                    
                                       λ
                                       2
                                    
                                    
                                       y
                                       i
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          y
                                          i
                                       
                                       )
                                    
                                    ,
                                    i
                                    ≥
                                    0
                                 
                              
                           
                        
                     


                        x
                        0 and y
                        0, are called initial seeds and take on the real numbers between 0 and 1. By iterating the Eqs. (2) and (3), the various values of 
                           
                              x
                              
                                 i
                                 +
                                 1
                              
                           
                         and 
                           
                              y
                              
                                 i
                                 +
                                 1
                              
                           
                         are generated between 0 and 1. Eq. (2) is used for the purpose of permuting pixel locations while Eq. (3) modifying the pixel intensity values. The encryption algorithm consists of the following steps:

Step 1: Pixel intensities of original image I of size M × N are arranged as a one-dimensional array P of length 
                           
                              L
                              =
                              M
                              ×
                              N
                              ,
                           
                         each element of which is one byte long.

Step 2: Two initial seed sequences {
                           
                              
                                 x
                                 0
                                 1
                              
                              ,
                           
                        ..., 
                           
                              x
                              0
                              R
                           
                        }, {
                           
                              
                                 y
                                 0
                                 1
                              
                              ,
                           
                        ..., 
                           
                              y
                              0
                              R
                           
                        } of the used chaotic functions are keys of the proposed crypto-system, chosen to be ∈ (0,1) where Ris the number of encryption/decryption rounds.

Step 3: First δr
                         iterations of Eqs. (2) and (3) are discarded in each round to get rid of the transient effect of the chaotic functions [10]. r is the round loop variable, 
                           
                              r
                              =
                              1
                              ,
                              2
                              ,
                              3
                              ,
                              …
                              ,
                              R
                           
                        . The choice of δr
                         value, which is also a secret key, is recommended to be in the range (300, 600). Upper bound of this range enlarges the key space but prolongs the encryption/decryption time.

Step 4: Elements of the array P are handled sequentially using a loop variable i, ranging from 1 to 
                           
                              L
                              −
                              2
                           
                        . Pixel extracted sequentially from Pis XORed with the value of the pixel pointed by the second term of the Eq. (4).

                           
                              (4)
                              
                                 
                                    
                                       V
                                       1
                                    
                                    =
                                    
                                       P
                                       r
                                    
                                    
                                       [
                                       i
                                       ]
                                    
                                    ⊕
                                    
                                       P
                                       r
                                    
                                    
                                       [
                                       i
                                       +
                                       f
                                       l
                                       o
                                       o
                                       r
                                       
                                          (
                                          α
                                          
                                             x
                                             
                                                i
                                                +
                                                1
                                             
                                             r
                                          
                                          )
                                       
                                       m
                                       o
                                       d
                                       
                                       S
                                       ]
                                    
                                 
                              
                           
                        The constant α is set to 1015 and used to scale 
                           
                              x
                              
                                 i
                                 +
                                 1
                              
                              r
                           
                         and 
                           
                              y
                              
                                 i
                                 +
                                 1
                              
                              r
                           
                        . Sis a variable depending on i and set to be 
                           
                              L
                              −
                              i
                           
                        . Thus, the pixel pointed by 
                           
                              (
                              i
                              +
                              f
                              l
                              o
                              o
                              r
                              
                                 (
                                 α
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                    
                                    r
                                 
                                 )
                              
                              m
                              o
                              d
                              
                              S
                              )
                           
                         corresponds to a pixel location that is always beyond the pixel location i.

Step 5: Result of Eq. (3) is mapped to 0–255. The mapped value is then XORed with V
                        1 , which yields V
                        2 .

                           
                              (5)
                              
                                 
                                    
                                       V
                                       2
                                    
                                    =
                                    
                                       V
                                       1
                                    
                                    ⊕
                                    
                                       [
                                       f
                                       l
                                       o
                                       o
                                       r
                                       
                                          (
                                          α
                                          
                                             y
                                             
                                                i
                                                +
                                                1
                                             
                                             r
                                          
                                          )
                                       
                                       m
                                       o
                                       d
                                       
                                       256
                                       ]
                                    
                                 
                              
                           
                        The above operation is useful and necessary to realize diffusion process effectively, and makes the histogram more uniform for resultant cipher image even in a few rounds. With logical XOR operation of pixel value with that produced by the chaotic function in Eq. (3), cipher image becomes substantially different from the original image. The same is valid for the images even with low entropy.

Step 6: V
                        2 is XORed with the value of the previously ciphered byte as

                           
                              (6)
                              
                                 
                                    
                                    
                                       V
                                       3
                                    
                                    =
                                    
                                       V
                                       2
                                    
                                    ⊕
                                    
                                       P
                                       r
                                    
                                    
                                       [
                                       
                                       i
                                       −
                                       1
                                       ]
                                    
                                 
                              
                           
                        
                     

Step 7: The value 
                           
                              α
                              
                                 y
                                 
                                    i
                                    +
                                    1
                                 
                                 r
                              
                           
                         is mapped to the number ranging from 1 to 8 to determine how many times the left circular rotations of V
                        3 should be repeated through itself, yielding V
                        4
                        
                           
                              (7)
                              
                                 
                                    
                                    
                                       V
                                       4
                                    
                                    =
                                    L
                                    e
                                    f
                                    t
                                    C
                                    i
                                    r
                                    c
                                    u
                                    l
                                    a
                                    r
                                    R
                                    o
                                    t
                                    a
                                    t
                                    e
                                    
                                       (
                                       
                                          V
                                          3
                                       
                                       ,
                                       
                                          (
                                          1
                                          +
                                          f
                                          l
                                          o
                                          o
                                          r
                                          
                                             [
                                             
                                             α
                                             
                                                y
                                                
                                                   i
                                                   +
                                                   1
                                                
                                                r
                                             
                                             
                                             ]
                                          
                                          
                                          m
                                          o
                                          d
                                          
                                          8
                                          
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        Steps 6 and 7 are together utilised to considerably increase the plaintext sensitivity to prevent chosen and known plaintext attacks.

Step 8: The following operations are necessary to enable the above steps to take effect.

                           
                              (8)
                              
                                 
                                    
                                    
                                       P
                                       r
                                    
                                    
                                       [
                                       
                                       
                                          (
                                          i
                                          +
                                          f
                                          l
                                          o
                                          o
                                          r
                                          
                                             (
                                             α
                                             
                                                x
                                                
                                                   i
                                                   +
                                                   1
                                                
                                                r
                                             
                                             )
                                          
                                          )
                                       
                                       
                                       
                                       m
                                       o
                                       d
                                       
                                       S
                                       
                                       ]
                                    
                                    =
                                    
                                       P
                                       r
                                    
                                    
                                       [
                                       
                                       i
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                    
                                       P
                                       r
                                    
                                    
                                       [
                                       
                                       i
                                       
                                       ]
                                    
                                    =
                                    
                                       V
                                       4
                                    
                                 
                              
                           
                        
                     

Step 9: Steps 3–8 are repeated until the penultimate byte of the byte array Pr
                         has been reached. The operations so far constitute one round of the encryption process.

Step 10: If R is chosen larger than one, then current encrypted byte array Pr
                         is regarded as an input byte array for the next encryption round. So, after incrementing r , the following assignment is done.

                           
                              (10)
                              
                                 
                                    
                                    
                                       P
                                       r
                                    
                                    =
                                    
                                       P
                                       
                                          r
                                          −
                                          1
                                       
                                    
                                 
                              
                           
                        After the final round, one dimensional byte vector PR
                         is the ultimate encrypted image vector IE
                        . The number of rounds is chosen according to desired security criterion. Eventually encrypted byte array PR
                         is generated using a key-stream consisted of R set of quintuple (x
                        0, y
                        0, λ
                        1, λ
                        2, δ). The flowchart of the encryption process is incorporated to better clarify the operation of the algorithm, Fig. 2
                        . Decryption process performs in reverse order the R set of quintuple (x
                        0, y
                        0, λ
                        1, λ
                        2, δ). Values of 
                           
                              x
                              
                                 i
                                 +
                                 1
                              
                           
                         and 
                           
                              y
                              
                                 i
                                 +
                                 1
                              
                           
                         for 
                           
                              i
                              =
                              0
                              ,
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              L
                              −
                              2
                           
                         in the encryption are recalculated in the decryption and saved as two separate vectors. Then, a loop through the encrypted byte sequence PR
                         from the end to the start is performed by making operations similar to those required in the encryption process. Encryption and decryption schemes are introduced in Algorithms 1
                         and 2
                        , respectively.

Encrypted image must be invulnerable to statistical attacks in cryptographic applications. Randomness is not only important for PRNGs(Pseudo Random Number Generators) but also for cipher-text generation [14]. For this reason, randomness of resultant encrypted image is evaluated using NIST(National Institute of Standards and Technology) statistical randomness test suite [15]. The test significance level p is desired to be above 0,01 for each test in order to accept the randomness of bit sequences. NIST randomness test results for gray scale Lena image of size 512 × 512 is given in Table 1
                        .

An image with low entropy (∼0.037) depicted in Fig. 3
                        (a) is chosen to be able to compare our results with those in [5]. In the case where the algorithm offered in [5] is applied for a single round, encrypted image shown in Fig. 3(d) is still of low entropy (∼0.491). However, the proposed algorithm produces cipher images with high entropy (∼7.979) for the same image, as shown in Fig. 3(b). Histograms of these two encrypted images, shown in Fig. 3(c) and (e), concrete the idea given above.

In order to better exhibit the ability of the proposed algorithm, the gray scale Lena image of size 512 × 512, with high entropy is encrypted for single round. The results obtained for correlation and histogram of the test image given in Fig. 4
                         are fascinating.

When correlation of original image in Fig. 4(e) is compared with that of the encrypted image in Fig. 4(f), it can be seen that the latter is nearing to zero and so its histogram becomes almost uniform. The correlation and entropy values of Fig. 4(a) and (b) are given in Tables 2
                         and 3
                        , respectively. Ideal entropy value for gray scale images of 256-level is 8 and can be calculated using Eq. (11) 
                        [6]. As is evident in Table 3, entropy obtained even from single round encryption is 7.999324 which is very close to the ideal value.

                           
                              (11)
                              
                                 
                                    
                                    H
                                    
                                       (
                                       s
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          0
                                       
                                       
                                          
                                             2
                                             N
                                          
                                          −
                                          1
                                       
                                    
                                    
                                       P
                                       
                                          (
                                          
                                             S
                                             i
                                          
                                          )
                                       
                                       
                                          log
                                          2
                                       
                                       
                                          1
                                          
                                             P
                                             (
                                             
                                                S
                                                i
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        where N is the gray level 
                           
                              (
                              N
                              =
                              8
                              )
                              ,
                           
                         and Si
                         is the percentage of pixels being of value i. In Fig. 5
                         analysis of some well known images withdrawn from [16] has been shown.

Round number in an encryption system is an important factor that affects the system security. An increase in the round number raises the number of keys and thus enlarges the key space of the system. Taking today′s computer speeds into consideration, a key space of smaller than 2128 is not adequately secure [5]. In this study, there is a key-stream consisted of R set of quintuple (x
                        0, y
                        0, λ
                        1, λ
                        2, δ) where seeds are, 
                           
                              
                                 x
                                 0
                                 r
                              
                              ,
                              
                                 y
                                 0
                                 r
                              
                              ∈
                              
                                 (
                                 0
                                 ,
                                 1
                                 )
                              
                              ,
                           
                         parameters, 
                           
                              
                                 λ
                                 1
                                 r
                              
                              ,
                              
                                 λ
                                 2
                                 r
                              
                              ∈
                              
                                 (
                                 3.99
                                 ,
                                 4
                                 )
                              
                           
                         and idle iteration number δr
                         ∈ (300, 600). Precision of floating point numbers are chosen as 
                           
                              10
                              
                                 −
                                 15
                              
                           
                         to comply with IEEE floating point standard. Taking into consideration the possibility of each element of the quintuple, the key space can be calculated by multiplication of the possibilities as 9 · 1014 · 9 · 1014 · 1013 · 1013 · 300 for each round. Minimum security criterion for key space is given as follows

                           
                              (12)
                              
                                 
                                    
                                    
                                       
                                          (
                                          9
                                          ·
                                          
                                             10
                                             14
                                          
                                          ·
                                          9
                                          ·
                                          
                                             10
                                             14
                                          
                                          ·
                                          
                                             10
                                             13
                                          
                                          ·
                                          
                                             10
                                             13
                                          
                                          ·
                                          300
                                          )
                                       
                                       R
                                    
                                    >
                                    
                                       2
                                       128
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                    ∼
                                    
                                       
                                          (
                                          
                                             2
                                             
                                                193.95
                                             
                                          
                                          )
                                       
                                       R
                                    
                                    >
                                    
                                       2
                                       128
                                    
                                 
                              
                           
                        
                     

where R denotes round number. In order to make brute force attacks infeasible, it has been proven that the proposed system satisfies the above criterion even for single round. Key space refers to the size of the key used for encryption. Larger key space makes the brute-force attacks difficult. With little increase in the computational load the algorithm creates approximately 2582 different keys in three rounds. This shows that the proposed algorithm is invulnerable to brute-force attacks.

A robust encryption system must be highly sensitive to the encryption keys. Even a single bit change in the encryption keys must generate completely different cipher images. In order to analytically investigate key sensitivity, CDR (Ciphertext Difference Rate) has been calculated using Eqs. (14)–19 from the study in [7]. The factors affecting key space are (x, y, λ
                        1, λ
                        2, δ) in Eqs. (2) and (3). In this quintuple δ represents idle iteration count to avoid the transient effect. Thus the following five different tests are carried out for the five factors each of which is updated by ± ΔK as indicated below, ( ± ΔK represents the smallest change which was applied to the related quintuple member. Since x, y, λ
                        1, λ
                        2 are of double precision ± ΔK is chosen to be 
                           
                              ±
                              
                                 10
                                 
                                    −
                                    15
                                 
                              
                           
                        . Since δis of integer type ± ΔK is chosen ± 1.)

                           
                              (1)
                              
                                 x
                                 0 is changed from 0.809946815070828 to, 
                                    
                                       
                                          x
                                          
                                             0
                                             +
                                          
                                       
                                       =
                                       
                                          x
                                          0
                                       
                                       +
                                       Δ
                                       K
                                       ,
                                    
                                  and 
                                    
                                       
                                          x
                                          
                                             0
                                             −
                                          
                                       
                                       =
                                       
                                          x
                                          0
                                       
                                       −
                                       Δ
                                       K
                                       ,
                                    
                                  for 
                                    
                                       Δ
                                       K
                                       =
                                       
                                          10
                                          
                                             −
                                             15
                                          
                                       
                                    
                                 
                              


                                 y
                                 0 is changed from 0.637809292155302 to, 
                                    
                                       
                                          y
                                          
                                             0
                                             +
                                          
                                       
                                       =
                                       
                                          y
                                          0
                                       
                                       +
                                       Δ
                                       K
                                       ,
                                    
                                  and 
                                    
                                       
                                          y
                                          
                                             0
                                             −
                                          
                                       
                                       =
                                       
                                          y
                                          0
                                       
                                       −
                                       Δ
                                       K
                                       ,
                                    
                                  for 
                                    
                                       Δ
                                       K
                                       =
                                       
                                          10
                                          
                                             −
                                             15
                                          
                                       
                                    
                                 
                              


                                 λ
                                 1 is changed from 3.998980689220633 to, 
                                    
                                       
                                          λ
                                          
                                             1
                                             +
                                          
                                       
                                       =
                                       
                                          λ
                                          1
                                       
                                       +
                                       Δ
                                       K
                                       ,
                                    
                                  and 
                                    
                                       
                                          λ
                                          
                                             1
                                             −
                                          
                                       
                                       =
                                       
                                          λ
                                          1
                                       
                                       −
                                       Δ
                                       K
                                       ,
                                    
                                  for 
                                    
                                       Δ
                                       K
                                       =
                                       
                                          10
                                          
                                             −
                                             15
                                          
                                       
                                    
                                 
                              


                                 λ
                                 2 is changed from 3.996218211929365 to, 
                                    
                                       
                                          λ
                                          
                                             2
                                             +
                                          
                                       
                                       =
                                       
                                          λ
                                          2
                                       
                                       +
                                       Δ
                                       K
                                       ,
                                    
                                  and 
                                    
                                       
                                          λ
                                          
                                             2
                                             −
                                          
                                       
                                       =
                                       
                                          λ
                                          2
                                       
                                       −
                                       Δ
                                       K
                                       ,
                                    
                                  for 
                                    
                                       Δ
                                       K
                                       =
                                       
                                          10
                                          
                                             −
                                             15
                                          
                                       
                                    
                                 
                              


                                 δ is changed from 424 to, 
                                    
                                       
                                          δ
                                          +
                                       
                                       =
                                       δ
                                       +
                                       Δ
                                       K
                                       ,
                                    
                                  and 
                                    
                                       
                                          δ
                                          −
                                       
                                       =
                                       δ
                                       −
                                       Δ
                                       K
                                       ,
                                    
                                  for 
                                    
                                       Δ
                                       K
                                       =
                                       1
                                    
                                 
                              

Accordingly to calculate the cipher images Y, Y
                        1 and Y
                        2 for factor x
                        0, we use initial values 
                           
                              
                                 x
                                 0
                              
                              =
                              0.809946815070828
                              ,
                           
                        
                        
                           
                              
                                 x
                                 
                                    0
                                    +
                                 
                              
                              =
                              0.809946815070829
                              ,
                           
                        
                        
                           
                              
                                 x
                                 
                                    0
                                    −
                                 
                              
                              =
                              0.809946815070827
                           
                         respectively. The resulting values are then substituted in the Eq. (19), and the CDR value is found to be around 99,60% for single round. Values over 99% can be considered acceptable key sensitivity according to [7, 11]. For the rest of the factors affecting key sensitivity CDR values are as in Table 4
                        . It can be concluded from Table 4 that the proposed crypto-system has key sensitivity over the desired threshold even for single round.

Minor changes in the plain image should create substantially different cipher-images in order to provide high security. Adding this feature makes the system unvulnerable to differential attacks. In order to test the effects of one-bit change on the plain image, two common measures are used, namely number of pixel change rate (NPCR) and unified average changing intensity (UACI) [3]:

                           
                              (20)
                              
                                 
                                    
                                    N
                                    P
                                    C
                                    R
                                    =
                                    
                                       
                                          D
                                          i
                                          f
                                          f
                                          (
                                          
                                             C
                                             1
                                          
                                          ,
                                          
                                             C
                                             2
                                          
                                          )
                                       
                                       
                                          W
                                          ·
                                          H
                                       
                                    
                                    ·
                                    100
                                    %
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                    U
                                    A
                                    C
                                    I
                                    =
                                    
                                       1
                                       
                                          W
                                          ·
                                          H
                                       
                                    
                                    
                                       (
                                       
                                          
                                             ∑
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                          
                                             
                                                
                                                   C
                                                   1
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                ,
                                                
                                                   C
                                                   2
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                             
                                             255
                                          
                                       
                                       )
                                    
                                    ·
                                    100
                                    %
                                 
                              
                           
                        where C
                        1 and C
                        2 denotes two cipher images whose corresponding plain images only have a slight difference, e.g. one bit. W and H are width and height of cipher-image respectively. C
                        1(i, j) and C
                        2(i, j) are gray-scale colour values of pixels at positions (i, j) of C
                        1 and C
                        2. Several tests have been performed on four different images for rounds 
                           
                              R
                              =
                              1
                              ,
                              2
                              ,
                              6
                              ,
                              15
                              ,
                           
                         and 23. Test results are given in Table 5
                        . It can be seen from the results that operation of only two rounds is enough to achieve a good performance such as NCPR > 0.996 and UACI > 0.333. The performance makes the algorithm robust to differential attacks.

In addition to security factor, run-time is also important for a good encryption algorithm. Encryption and decryption durations of the proposed algorithm are analysed for images with different sizes and compared with previous studies presented in [5,17]. The results are tabulated in Table 6
                        . A computer with 8GB of RAM memory Intel Core i7 3630QM (2.4GHz) processor running on the Windows 8 operating system is used for calculations. As shown in Table 6, when the encryption durations of the proposed algorithm and the ones given in the related references are compared for similar size of key-space approximately 2600, the proposed algorithm seems to be superior.

Since the early studies of image encryption use different computing systems, performance comparisons of the algorithms present in literature become difficult. We use some metrics to introduce computational complexity. Two metrics used include Encryption Throughput (ET) in MBps and Number of Cycles (NC) related to a crypto-system with acceptable NCPR and UACI values. Four different encryption algorithms are evaluated in terms of these metrics in Table 7
                        . It can be seen from the table that smallest NC values is with the proposed scheme, that is nearly thirty times faster than the one given in [5], and 3 times faster than the one given in [9]. The results indicate that the proposed scheme is suitable for applications running at real-time rates.

We introduced some experimental results of our algorithm in comparison with some previous works. To better clarify this comparison, we evaluate the proposed algorithm with theoretical aspects. In terms of big-O notation the complexities of encryption algorithms given in Table 8
                         are very close to each other. They mainly differ in the variety of and the number of operations used in confusion and diffusion processes. Therefore the operation counts related to several encryption schemes are tabulated in Table 8 in order to compare the proposed algorithm with the others given in [5,9]. As can be seen, our algorithm requires less operations than their competitors to achieve the same NCPR and UACI values given in Table 7. For example, our algorithm never uses trigonometric operations which require much more time than the other operations. Also Francois’s, 2012 [5] scheme needs much more multiplication/division and addition/subtraction operations than proposed scheme. It seems that the proposed algorithm becomes superior to the competitors in many aspects.

@&#CONCLUSION@&#

An effective image encryption algorithm with two independent chaotic functions allowing parallel computing is presented to enhance the diffusion and confusion functions. For low entropy plain images, which maintain their properties throughout many encryption rounds, a second chaotic function is incorporated to generate random numbers exploited together with exclusive-or operations for perturbing the integrity of such images even in first round. To increase the resistance of the crypto-system to differential attacks, the value of previously encrypted pixel is employed in the encryption of current pixel by exclusive-or and circular rotation operations. The resulting cipher-images indicates that these operations are effective for diffusing an infinitesimal change in single pixel intensity of plain image on many pixels in cipher-image. The complexity analyses shown prove that the proposed scheme requires less operations than the compared algorithms regarding key space, security and encryption speed. A variety of analyses and tests, such as statistical analysis, key-sensitivity and key-space analysis, plain-image sensitivity analysis, and speed test have been carried out to present the security and the validity of the proposed algorithm. The proposed algorithm is suitable for parallel computing in two aspects. First, two independent chaotic functions are to be calculated separately without waiting for one another. Secondly, some equations in the algorithm can be converted into a form to be calculated by integer arithmetic.

@&#ACKNOWLEDGEMENTS@&#

We thank to Assoc. Prof. Dr. D. Turgay Altilar for his valuable assistance and comments on the scheme. We also thank to Fatih Tanrıverdi for proofreading our paper. Especially we would like to thank to anonymous Computers and Electrical Engineering referees for their helpful comments which significantly improved our paper.

@&#REFERENCES@&#

