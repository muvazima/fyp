@&#MAIN-TITLE@&#An interoperability model for ultra large scale systems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We provide a maturity model for interoperability of ultra large scale systems.


                        
                        
                           
                           We provide a framework for interoperability of ultra large scale systems.


                        
                        
                           
                           Increasing interoperability of component systems in ultra large scale systems.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Ultra large scale systems

Interoperability

Maturity model

Framework

Technical

Syntactic

Semantic

Organizational

@&#ABSTRACT@&#


               
               
                  Ultra large scale systems are a new generation of distributed software system that are composed of various changing, inconsistent or even conflicting components that are distributed in a wide domain. Some important characteristics of these systems include their very large size, global geographical distribution, operational and managerial independence of their member systems. The main function of these systems arises from the interoperability between their components. Nowadays one of the most important challenges facing ultra large scale systems is the interoperability of their component systems. Interoperability is the ability by which system elements can exchange and understand the information required with each other. This paper aims to solve the mentioned challenge, which is divided into two main parts. In the first part, this paper presents a maturity model for the interoperability of ultra large scale systems, by using the interoperability level of the component system of one ultra large scale system its maturity level can be determined. In the second part, by proposing a framework we try to increase the interoperability of the component systems in ultra large scale systems based on the interoperability maturity levels determined in the first part. Consequently their interoperability is improved.
               
            

@&#INTRODUCTION@&#

The Software Engineering Institute of Carnegie Mellon University introduced ultra large scale systems in 2006. Systems with ultra large scale are a new generation of software system containing various, changing, inconsistent or even conflicting elements. Global information network, Army’s combat systems, future telecommunication networks, Internet, e-government, healthcare systems are some examples of such systems.

One ultra large scale system is composed of a set of operationally and managerially independent systems whose interaction forms an ultra large scale system. The functions of such a system are very diverse, even more than the total functions of its component systems. Component systems are heterogeneous, changing and inconsistent, and are created by different people using different programming languages, in different conditions and are tuned for various platforms. Therefore, generally, an ultra large scale system has the following characteristics:
                        
                           •
                           Is evolved gradually.

Its component systems are operationally and managerially independent.

Its component systems are heterogeneous, changing and inconsistent.

Its component systems are distributed all over the world.

People and users can have a role as elements of the system.

Failures are unpreventable and are converted to the norm.

Its development and evolution continuously take place while it is operating and they should not stop the overall operation of the system.

In order to develop a coalition among component systems in such a system, the available interoperability method should be strengthened or new methods should be proposed for this purpose. By interoperability, we mean the ability by which the elements of a system can exchange and understand the required information with each other. Interoperability causes the elements of a system to achieve a common understanding of each other and the environmental condition.

The available interoperability methods usually provide interoperation in the form of standard protocols and pre-defined compositions. Usually, at the time of programming, the programmer knows with which components and systems his program must interoperate and also the protocol for establishing communication. Finding the required systems, components, applications and services is performed during implementation and the interoperation mechanism is developed based on how communication protocols and interfaces are defined; runtime requirements are rarely taken into account.

Ultra large scale systems are very dynamic, and, at runtime, their component systems may change, destroy or relinquish their tasks temporarily or permanently to others. New elements with better services may enter the system. It is also possible that some constraining policies are applied to maintain service quality due to higher aggregation and traffic. What is important is that all elements be aware of these continuous and dynamic changes and adapt to the new condition without any disturbance in the overall function of the system. For this purpose, it should:
                        
                           •
                           Be possible for systems to search and find services without human interference.

Be possible for the mechanism of interoperation among the systems to be modified according to the changes.

Be possible for the systems and users to find a set of components and establish a relation between them to achieve a special goal.

In order to provide the mentioned items it should be possible to describe the characteristics and abilities of the elements in an unambiguous way that is translatable for a computer. Also, it should be possible for all the involved elements to define themselves using a common terminology; this means that the common conceptual interoperation between the elements of the system should be strengthened. Accordingly, one objective of this paper is to improve the available interoperation mechanisms or even introducing new mechanisms for taking a step towards the mentioned goals and meeting them.

Nowadays, one of the most significant challenges facing ultra large scale systems is the interoperability of their components. Several models have been presented for improving the interoperability, the most important of which is the levels of information systems interoperability model. Each model is applicable for a special kind of system, and, as yet, there is no model for improving the interoperability of ultra large scale systems that considers the characteristics of such systems.

Thus, aiming at addressing the above challenge, this paper is divided into two main parts. In the first part, which is called by the author “interoperability assessment of ultra large scale systems”, a maturity model is presented for the interoperability of ultra large scale systems, in which the interoperability of each element of an ultra large scale system can be assessed and its maturity level determined.

In the second part, using interoperability technologies, one framework is presented for the interoperability among the component systems of an ultra large scale system, through which the interoperability of the component systems can be improved based on the interoperability maturity level that was determined in the first part. Then ultra large scale systems are completely defined and their characteristics are described. In part 3, some definitions of interoperability and its different models are presented. Related work to interoperability maturity is discussed in part 4. In part 5, available interoperability technologies are introduced and some weak and strong points are listed for each one. In part 6, one interoperability maturity model for ultra large scale systems is presented and the interoperability framework is discussed in part 7. Finally, in the last part, a conclusion is formulated.

As inferred from the name ‘ultra large scale systems’, this type of system includes those whose scale and size are far beyond today’s systems [1]. Their large scale is investigable by different measures: number of lines of code; number of employed people; amount of data stored, accessed, and refined; number of connections and interdependencies among software components; and number of hardware elements, etc.

The scale in ultra large scale systems changes everything [1]. These systems are necessarily decentralized; are used and developed by many stakeholders with conflicting needs; evolve continuously; contain heterogeneous components; people are not just users, but elements of the system; and software and hardware failures are the norm rather than the exception. Also, ultra large scale systems are used simultaneously and require new methods for control. These characteristics make the use of appropriate practices for usage, production, deployment, management, documentation and evolution of such systems inevitable [2–5].

Ultra large scale systems, in contrast to today’s systems, are as cities in contrast to buildings. They are considered as a sort of ecosystem. Their scale includes boundaries far beyond the Internet.

One way to understand the difference between traditional systems and ultra large scale systems is by comparing buildings with cities. The designing and building of most of today’s large systems is comparable to the design and construction of a single, large building with an infrastructure system (such as power or water distribution). In contrast, ultra large scale systems are as complex as cities. As mentioned, an ultra large scale system contains a set of component systems. Therefore, generally, it can be stated that 
                        
                           S
                           =
                           {
                           
                              
                                 S
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 S
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 S
                              
                              
                                 n
                              
                           
                           }
                        
                      where 
                        
                           S
                        
                      is an ultra large scale system and 
                        
                           
                              
                                 S
                              
                              
                                 1
                              
                           
                        
                      to 
                        
                           
                              
                                 S
                              
                              
                                 n
                              
                           
                        
                      are system components of an ultra large scale system.

Ultra large scale systems have some characteristics that mainly result from the scale of such systems. The main characteristics of ultra large scale systems is their very large size according to different measures, such as the number of lines of code; number or amount of data stored, accessed, manipulated, and refined; number of connections and interdependencies among software components; and number of hardware elements, etc.

The characteristics of ultra large scale systems that mainly results from the scale of these systems include:


                        Decentralization: The scale of ultra large scale systems means that they will necessarily be decentralized in a variety of ways – decentralized data, development, evolution, and operational control.


                        Inherently conflicting, unknowable, and diverse requirements: ultra large scale systems will be developed and used by a wide variety of stakeholders with unavoidably different, conflicting, complex, and changing needs.


                        Continuous evolution and deployment: There will be an increasing need to integrate new capabilities into an ultra large scale system while it is operating. New and different capabilities will be deployed, and unused capabilities will be dropped; the system will be evolving not in phases, but continuously.


                        Heterogeneous, inconsistent, and changing elements: An ultra large scale system will not be constructed from uniform parts: there will be some misfits, especially as the system is extended and repaired.


                        Erosion of the people/system boundary: People will not just be users of an ultra large scale system; they will be elements of the system, affecting its overall emergent behavior.


                        Normal failures: Software and hardware failures will be the norm rather than the exception.


                        New paradigms for acquisition and policy: The acquisition of an ultra large scale system will be simultaneous with the operation of the system and require new methods for control.

Ultra large scale systems have some characteristics in common with today’s systems of systems (SoSs). A class of systems of systems, known as virtual systems of systems based on the management control that is possible, is the closest to ultra large scale systems. This class of systems of systems is defined as follows:

“Virtual systems lack a centralized management. In addition, there is no agreement on the purposes of this class of systems of systems. The behavior of elements of this system is extensive, aggregated and may lead to desirable results, so supersystems should rely on other mechanisms other than localization to achieve desirable results.”

Therefore, generally, it can be cited that 
                           
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                              =
                              {
                              
                                 
                                    C
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    C
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    C
                                 
                                 
                                    n
                                 
                              
                              }
                           
                         where 
                           
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                           
                         is a component system of ultra large scale systems and 
                           
                              
                                 
                                    C
                                 
                                 
                                    1
                                 
                              
                           
                         to Cn
                         denote the properties of that component system.

Interoperability has been a topic of concern for at least 30years. It is a property that refers to the ability of different systems and organization to work together.

Numerous definitions have been given for interoperability. A number of reports and technical papers offer definitions of interoperability. For instance, the following four definitions of interoperability have been given by IEEE [6]: (1) “The ability of two or more systems or elements to exchange information and to use the information that have been exchanged”; (2) “The capability for units of equipment to work efficiently together to provide useful functions”; (3) “The capability – promoted but not guaranteed – achieved through joint conformance with a given set of standards, that enables heterogeneous equipments, generally built by various vendors, to work together in a network environment”; (4) “The ability of two or more systems or components to exchange and use the exchanged information in a heterogeneous network”.

The US Department of Defense also introduces multiple definitions of interoperability, some of which incorporate the IEEE definitions: (1) “The ability of systems, units, or forces to provide services to and accept services from other systems, units, or forces, and to use the services so exchanged to enable them to operate effectively together” [7]; (2) “The condition achieved among communications-electronics systems or items of communications-electronics systems equipment when information or services can be exchanged directly and satisfactorily between them and/or their users. The degree of interoperability should be defined when referring to specific cases” [8]; (3) (a) “Ability of information systems to communicate with each other and exchange information. (b) Conditions, achieved in varying levels, when information systems and/or their components can exchange information directly and satisfactorily among them. (c) The ability to operate software and exchange information in a heterogeneous network (i.e., one large network made up of several different local area networks). (d) Systems or programs capable of exchanging information and operating together effectively” [9].

According to [10–17], there are four types of interoperability. The interoperability types are technical, syntactic, semantic, and organizational interoperability.


                        Technical interoperability: technical interoperability is achieved among communications-electronics systems or items of communications-electronic equipment when services or information could be exchanged directly and satisfactorily between them and their users. In referring to specific cases, the interoperability degree must be defined [18].

Syntactic interoperability is defined as the ability to exchange data. Syntactic interoperability is generally associated with data formats. The messages transferred by communication protocols should possess a well-defined syntax and encoding, even if only in the form of bit-tables [19].

Semantic interoperability is defined as the ability to operate on that data according to agreed-upon semantics [20]. Semantic interoperability is normally related to the definition of content, and deals with the human rather than machine interpretation of this content. Thus, interoperability at this level denotes that a common understanding exists between people regarding the definition of the content (information) being exchanged [19,21,22].


                        Organizational interoperability: this interoperability type concerns the definition of authority and responsibility with the intention that interoperability could happen under good conditions [23–25].

Abstract models create many values in every field of technology and engineering, and have been used extensively in software engineering [26–28].

In the context of software systems interoperability, defining the interoperability model has many advantages including defining and analyzing key areas and parameters of interoperability, defining and determining interoperability maturity level and creating a methodology and common structure for the interoperability of software systems.

@&#RELATED WORK@&#

According to the importance of interoperability models, this section describes several abstract models of interoperability.

The Levels of Information Systems Interoperability (LISI) model was developed by the US Department of Defense C4ISR Working Group [29]. LISI is perhaps the most widely recognized maturity model of interoperability. Even though it was developed in 1998, LISI continues to be referenced today.

The first three columns of the LISI maturity model provide identification information for the interoperability level and sub-levels, and the next four columns associate the specific contributions of the Procedures, Applications, Infrastructure, and Data attributes to each level. Major thresholds are crossed in order to transition from one broad maturity level to the next; whereas, minor interoperability thresholds exist between the sub-levels of a given level.

The LISI focuses on the increasing levels of sophistication of systems interoperability. The five levels (0–4) of interoperability are defined [29]:


                        Level 0 – Isolated Interoperability in a Manual Environment: The isolated interoperability level includes a wide range of standalone or isolated systems. No connection is directly allowable within these systems, and their interface is manual. This interoperability level contains manual data integration and extraction between multiple systems.


                        Level 1 – Connected Interoperability in a Peer-to-Peer Environment: Interoperability in the connected level depends on the electronic connection between systems with some form of simple electronic data exchange. At this level, shared data types are homogeneous, such as simple text email, graphics, and voice, and the capacity for information fusing for the decision makers is minimal.


                        Level 2 – Functional Interoperability in a Distributed Environment: At the functional interoperability level, systems are located on local network areas that permit data to pass from one system to another. Increasingly sophisticated media exchanges are provided at this level, and systems share logical data models with each other. At the functional interoperability level, heterogeneous data that are in a simple information format are combined together, and the fused information is shared between functions and systems.


                        Level 3 – Domain-Based Interoperability in an Integrated Environment: At the domain-based interoperability level, the connection between systems is via wide area networks (WANs) that permit several users data access. At this level, independent applications exchange information with each other using agreed upon domain data models. Systems in the domain based interoperability level support group collaboration in information combination, and are permitted to implement business rules and processes to facilitate direct database-to-database interactions.


                        Level 4 – Enterprise-Based Interoperability in a Universal Environment: At the enterprise-based interoperability level, systems are allowed to use a distributed global information space across multiple domains. At this level, complex data could be accessed by multiple users at the same time, and applications and data are shared totally and could be distributed to support fused information. In addition, it is possible to have advanced forms of collaboration at this level. Common data interpretation is applied across the entire enterprise regardless of the format.

Within a level, LISI identifies additional factors that influence the ability of systems to interoperate. These factors comprise four attributes: Procedures, Applications, Infrastructure, and Data (PAID) [29].


                        Procedures attributes include numerous forms of operational controls and documented guidance that influence all aspects of system integration, development, and operational functionality. The procedure attribute addresses the architecture guidance and standards, policies and procedures, and doctrine that enable information exchanges between systems.


                        Applications attributes include the system mission, which is the fundamental purpose of system building and the functional requirements of the system. This attribute indicates applications that permit processing, exchange, and manipulation.


                        Infrastructure attributes in which the establishment and use of a connection among applications or systems is supported. This attribute includes the environments enabling the interaction, such as system services, networks, and hardware.


                        Data attributes focus on the information processes of the system, and contain both data format (syntax) and the content or meaning (semantics). This data attribute of interoperability includes protocols and formats enabling information and data interchanges.

The LISI maturity Model provides the essential evaluation detail needed to determine an interoperability profile and metric. It does not prescribe the particular technical implementations for attaining a level or sub-level; instead, the model highlights the capabilities that are acceptable to the using enterprise as reflected in documents, such as technical architectures and common operating environment specifications, and in de facto operational environments. Fig. 1
                         shows the LISI maturity Model.

In 1998, the organizational interoperability maturity model was developed [23]. This model extends the LISI model into the more abstract layers of command and control support. Describing the ability to interoperate, five levels of organizational maturity are defined in this model. Fig. 2
                         illustrates the organizational interoperability maturity model in detail [23].


                        Level 0 – Independent: The interaction between independent organizations are described at this level of interoperability. This interoperability level includes the organizations that normally could work without any interaction except that provided by personal contact. This level also contains the organizations that do not share common purposes or goals, but that might need to interoperate in scenarios with no precedent. Unanticipated and unplanned arrangements occur at this interoperability level. Although no formal frameworks are prepared at this level, communications are possible through personal contact in meetings, fax, and telephone.


                        Level 1 – Ad hoc: Only a few of the organizational frameworks are in a position that could support ad hoc arrangements at this interoperability level. A set of guidelines are provided to explain how interoperability will take place, but basically specific arrangements remain unplanned. At this organizational interoperability level, there are some overarching shared goals, however, the aspirations of individual organizations take precedence, and the organizations remain totally distinct.


                        Level 2 – Collaborative: At this organizational level of interoperability, the recognized frameworks are prepared to support interoperability, and also shared goals are identified. In addition, roles and responsibilities are allocated as part of on-going responsibilities, although the organizations are still distinct. Knowledge sharing and training occur at the collaborative organizational interoperability level. However, home organizations’ frameworks still contain a significant influence.


                        Level 3 – Integrated: This interoperability level includes shared goals and value systems, a common understanding and a preparedness to interoperate, as a detailed doctrine there is significant experience in using it. The frameworks in the integrated level of organizational interoperability are prepared and practiced, although, there are residual attachments to a home organization so far.


                        Level 4 – Unified: This interoperability level shares the organizational goals, value systems, command structure/style, and knowledge bases across the system. In the unified level of organizational interoperability, the organization is interoperating on a continuing basis. This level is considered as the ideal level since there is no impediment in the organizational framework for complete and full interoperation. The unified level of organizational interoperability is only likely to happen in very homogeneous organizations.

Preparedness, Understanding, Command Style, and Ethos, which are the four enabling attributes that have been identified for the organizational interoperability, are defined as follows [23]:


                        Preparedness: The preparedness of the organization to interoperate is described by this attribute. This attribute is made up of training, experience, and doctrine.


                        Understanding: The amount of communication and sharing of information and knowledge in the organization, and the way information is used are measured by the understanding attribute.


                        Command style: The command style attribute describes the management and command style of the organization, on the way decisions are made, and the way roles and responsibilities are assigned.


                        Ethos: The goals and aspirations of the organization, the culture and value systems of the organization, and the level of trust in the organizations are related to the ethos attribute.

Several researchers have reviewed the organizational interoperability maturity model since its initial introduction [10,24,30–32].


                        Fig. 3
                         illustrates the layers of coalition interoperability model introduced by Tolk in 2003 [33]. In the layers of coalition interoperability model, there is a continuum between operational and technical interoperability rather than a distinct breakpoint between them. In this model, the interface between operational interoperability and technical interoperability is made at the knowledge/awareness layer.

Nine interoperability layers are defined in the layers of coalition interoperability model. The four lower levels of the layers of coalition interoperability model deal with technical interoperability. The knowledge/awareness level offers a transition between the organizational and technical interoperability, represented by the top four levels. Briefly, each interoperability level is explained as follows [33]:


                        Physical interoperability: The Physical Interoperability layer relates to the physical connection of systems to the network and the procedures of information interchanges.


                        Protocol interoperability: The Protocol Interoperability layer refers to the protocols for communication with other capabilities using the network.


                        Data/object model interoperability: The Data/Object Model Interoperability layer includes the standard data elements and meta-data for information interchanges.


                        Information interoperability: The Information Interoperability layer contains the dynamic information that could be mapped between the systems, and the cause and effect of harmonization of the information.


                        Knowledge/awareness: The Knowledge/Awareness layer includes the common operational picture, collaboration tools, and harmonized views of operation.


                        Aligned procedures: The Aligned Procedures layer relates to the tactics that are aligned across organizations, and supported by knowledge and data bases, models, simulations, with the tactical communication infrastructure available.


                        Aligned operations: The Aligned Operations layer includes the aligned procedures that are applicable at the operational/tactical level.


                        Harmonized strategy/doctrines: In the Harmonized Strategy/Doctrines layer, the aligned operations are applicable. Partners’ social and cultural backgrounds are aligned.


                        Political objectives: The Political Objectives layer refers to the partner share of the same political objectives and values of the coalition.


                        Fig. 4
                         shows the levels of conceptual interoperability model published in 2003 [34]. This model addresses the levels of conceptual interoperability that goes beyond the technical models, such as the levels of information systems interoperability model [29]. The intention of this model is to be a bridge between the technical design and the conceptual design. The focus lies in the data that is required to be interchanged, and the available interface documentation. The levels of conceptual interoperability model levels are defined as follows [34]:


                        Level 0 – System specific data: This level contains black box components with no shared data or interoperability.


                        Level 1 – Documented data: This level includes shared protocols among systems with accessible data through the interfaces.


                        Level 2 – Aligned static data: At this level, the common reference model is described with the unambiguous meaning of data. At this level, systems are considered as black boxes with standard interfaces. Although, having a common reference model, the same data could be interpreted differently in diverse systems.


                        Level 3 – Aligned dynamic data: At this level, data use is defined using methods of software engineering, such as Unified Modeling Language (UML). This permits visibility into the way data is managed within the systems. However, systems with the same data and interfaces could have different expectations and assumptions regarding the data.


                        Level 4 – Harmonized data: At this level, Non-obvious semantic connections are made apparent by the use of a documented conceptual model underlying components. This goes ahead of Level 3, since the assumptions regarding to data are made apparent.

The levels of conceptual interoperability model indicates that with the aim of achieving the highest interoperability level, the assumptions underlying how systems interpret data have to be made transparently. Although this model was developed for the simulation domain, the basic premises apply to many complex sets of interoperating systems.

The European Commission elaborated upon the enterprise interoperability maturity model through the ATHENA IP (Advanced Technologies for interoperability of Heterogeneous Enterprise Networks and their Applications Integrated Project) [35–37].

In the enterprise interoperability maturity model, a set of maturity levels, and a set of areas of concern are defined (see Fig. 5
                        ). Each area of concern would be defined by a set of objectives and goals relevant to the interoperability and collaboration issues. Depending on the absence or presence of the maturity indicators, the interoperability and collaboration maturity level would be defined for each area of concern. With the intention of achieving a certain maturity level, each indicator is required to fulfill the threshold states or values that are specified for the relevant maturity level. Simultaneously, if the company aims to attain the next maturity level, the To-Be status needs to be considered [37,38].

The six areas of concern in the enterprise interoperability maturity model are defined as follows [36,37]:


                        Business strategy and processes: The Business Strategy and Processes cover the alignment, improvement, execution, specification, and identification of business strategy and processes. To achieve interoperability in this area of concern, it requires improving the collaborative processes for several units inside the organization in addition to the external entities.


                        Organization and Competences: The Organization and Competences cover the improvement, enactment, specification and identification of the organizational structure containing the skills and knowledge of the identified players. To achieve interoperability in this area of concern, it requires identifying the external entities to collaborate with each other, specifying the networked organization topology, as well as its improvement and deployment.


                        Products and Services: The Products and Services cover the design, specification, and identification of the organization’s products and services, its lifecycle strategy and the quality characteristics. Achieving interoperability in this area of concern requires identifying new opportunities, and specifying the same aspects for new products and services that make use of networked technologies for its delivery: e-Products and e-Services.


                        Systems and Technology: The Systems and Technology cover the improvement, maintenance, operation, acquisition/construction, design, specification, and identification of enterprise systems. This contains the establishment of links and traceability to enterprise models, which, at best, are self-controlled. Achieving interoperability in this area of concern requires research and evolution of enterprise systems to apply innovative technologies that foster interoperability.


                        Legal Environment, Security and Trust: The Legal Environment, Security and Trust cover the identification of legal, trust and security requirements, because of collaborating with external entities, and the provision of solutions to manage these aspects that are a key for interoperability.


                        Enterprise Modeling: All of the areas of concern that were identified previously are directly affected by aspects of an all embracing sixth area of concern. The Enterprise Modeling covers the improvement, application, construction, and specification of the enterprise models, which contains supporting activities for the enterprise modeling, such as identifying the appropriate languages and meta-models, infrastructure, methodologies, organization (skills and people), and so on. Moreover, it deals with the interoperability within the enterprise models.

The five maturity levels of the enterprise interoperability maturity model are identified as follows [36,37]:


                        Performed: At the Performed maturity level, enterprise modeling and collaboration is done, but in an ad hoc approach. Collaborations are done between the organization, and external entities (customers, administration, suppliers), although the relationships are not planned thoughtfully. At this level, usually, collaborative processes and tasks exceed the schedule and budget. In addition, their past success could not be repeated, and the potential of the technology is not used properly.


                        Modeled: At the Modeled maturity level, the enterprise modeling and collaboration is done similarly each time, and the technique has been found to be applicable. At this level, the defined approaches and meta-models are applied. Additionally, responsibilities are defined, the enterprise model is understood by people, and they are familiar with its execution. In addition, in order to collaborate, network technologies are used.


                        Integrated: At the Integrated maturity level, the enterprise modeling process has been formally documented, communicated and is used consistently. At this level, organizations use a defined infrastructure and methodology for the enterprise modeling, the different dimensions are integrated among themselves and the model is traceable to the enterprise systems; there is a knowledge base used for improving the models. Furthermore, business collaboration is facilitated via interoperability technologies using the standards and externalization of part of the enterprise models.


                        Interoperable: At the Interoperable maturity level, dynamic interoperability, adaptation to changes, and external entities evolution are supported by enterprise models. At this level, the people’s workplace is seamlessly adapted to the enterprise model. The results (for the involved people and organizations) and the process metrics are defined as a basis for continuous improvement.


                        Optimizing: At the Optimizing maturity level, the enterprise models permits the organization to adapt and react to changes in the business environment in a responsive, flexible and agile manner. At this level, enterprise systems are systematically traced to enterprise models, and innovative technologies are continuously researched and applied to improve interoperability. The use of enterprise modeling could be contributed at the Optimizing maturity level to achieve the overall goals of the involved organization, people, or unit.

The interoperability models that have been studied only cover a special range of technical, syntactic, and organizational interoperability. The proposed interoperability model for ultra large scale systems such as the existing interoperability models covers technical, syntactic, and organizational interoperability. In addition, the proposed interoperability model for ultra large scale systems goes a step beyond to cover concerns relating to semantic interoperability and keeps the system interoperable. Therefore, the proposed ultra large scale interoperability model develops previous models by the addition of semantic aspects. As mentioned previously, today more emphasis is given to semantic interoperability, which is an important part of interoperability in order to have a common understanding among systems. The reasons for semantic interoperability among component systems of an ultra large scale system are: a) increasing the possibility of searching, finding and combining services for systems, and b) adapting the way systems interact to changes. For this aim, the means should be provided for defining and describing characteristics and abilities of systems in an unambiguous and translatable way using a common terminology. In Table 1
                        , the interoperability models are compared with the proposed interoperability model for ultra large scale systems.

As stated earlier, this paper includes two main parts. In the first part (Section 5.1) one maturity model is presented for interoperability of ultra large scale systems. Using this model the interoperability level of component systems of an ultra large scale system can be assessed and their maturity level can be determined. In the next part (Section 5.2) one framework is proposed, in which the interoperability of component systems can be increased based on the interoperability maturity level determined in the first part.

The process of defining an interoperability maturity model for ultra large scale systems is demonstrated in Fig. 6
                        . The process defined in the Fig. 6 guides us toward an interoperability maturity model for ultra large scale systems in high level. In continue of this section, ultra large scale systems interoperability maturity model definition process is explained in details in five steps.


                        Fig. 7
                         describes each step of the process in details. The first step in the process of defining an interoperability maturity model for ultra large scale systems is to define an interoperability architecture model. The interoperability architecture model presents the fundamental elements of the model and the relationships among them. The interoperability architecture model is defined using a metamodel.

As mentioned in Section 3.1, there are four types of interoperability. The interoperability types are technical, syntactic, semantic, and organizational interoperability. All types of interoperability must be covered by the interoperability maturity model. As described in Section 4.6. The existing interoperability models only cover a special range of technical, syntactic, and organizational interoperability. The proposed interoperability model for ultra large scale systems such as the existing interoperability models covers technical, syntactic, and organizational interoperability. In addition, the proposed interoperability model for ultra large scale systems goes a step beyond to cover concerns relating to semantic interoperability and keeps the system interoperable. Therefore, the proposed ultra large scale interoperability model develops previous models by the addition of semantic aspects. Therefore in the next step, all types of required interoperability extracted from the Literature Review, are defined in the interoperability maturity model which is presented for ultra large scale systems as ultra large scale systems interoperability domains.

In the third step, interoperability maturity levels and interoperability maturity parameters of ultra large scale systems are extracted using the literature review. Each level is identified by a number (0, 1, 2, 3, or 4). The level is further identified by the general nature of the interoperability (Default, Initiating, Enabling, Integrating, and Interoperating) [39–41]. In the fourth step, the matrix of interoperability maturity model can be defined for ultra large scale systems. The matrix of interoperability maturity model is presented in two stages, first as a high level and then in detail. Finally in the fifth step, the scoring method proposed in the interoperability maturity model is defined for assessing the interoperability maturity level of each interoperability domain in ultra large scale systems. As it is shown in Fig. 7, the interoperability maturity level of the current status and target status of each ultra large scale system can be calculated and determined using the interoperability maturity model and scoring method.

This section describes the ultra large scale Systems interoperability maturity model architecture. The architecture presents the fundamental elements of the model and the relationships among them. This material is provided to explain the structure of the model itself and the key properties of its design [39].


                           Fig. 8
                            describes the ultra large scale systems interoperability maturity model metamodel (a model of a model) as a Unified Modeling Language (UML) class diagram. Each class represents an important element of the ultra large scale systems interoperability maturity model. Relationships show how the elements are related, including the multiplicities involved in those relationships. Each element is elaborated upon in the following sections.

According to Section 3.1 and CEN/ISO 11354, required interoperability domains for systems are: technical interoperability, syntactic interoperability, semantic interoperability, and organizational interoperability. Therefore, these interoperability domains must be considered and covered in interoperability maturity levels for ultra large scale systems. Fig. 9
                            shows the diverse interoperability domains that are needed to achieve interoperability in ultra large scale systems.

The proposed interoperability maturity model for ultra large scale systems should support and consider the interoperability domains mentioned in Fig. 9. Fig. 10
                            demonstrates the required interoperability domains for interoperability between system A and system B.

Thus, generally, it can be stated that 
                              
                                 ULSSIMM
                                 =
                                 {
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       3
                                    
                                 
                                 ,
                                 
                                    
                                       D
                                    
                                    
                                       4
                                    
                                 
                                 }
                              
                            where 
                              
                                 ULSSIMM
                              
                            is the proposed interoperability maturity model for ultra large scale systems and variables 
                              
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                              
                            to 
                              
                                 
                                    
                                       D
                                    
                                    
                                       4
                                    
                                 
                              
                            represent required interoperability domains in ultra large scale systems, which include technical, syntactic, semantic and organizational interoperability.

The ultra large scale Systems Interoperability Maturity Model provides a common basis for requirements definition and for incremental system improvements. The ultra large scale Systems Interoperability Maturity Model identifies the stages through which systems should logically progress, or “mature,” in order to improve their capabilities to interoperate. The interoperability maturity levels defined by ultra large scale systems Interoperability Maturity Model are illustrated in Fig. 11
                           . Each level is identified by a number (0, 1, 2, 3, or 4). The level is further identified by the general nature of the interoperability (Default, Initiating, Enabling, Integrating, and Interoperating) [39–41]. The right column provides a brief description of each level.

In this step, the systems are in the first stages of becoming familiar with interoperability concepts and some measures are taken for establishing interoperability. Some experimental activities are performed towards interoperability and main interoperability technologies are investigated and examined. The purpose of this step is research and experiment and if it leads to the desired results, the next step will begin.

In this step, the initial steps for establishing interoperability are taken and systems are oriented toward the interoperability objectives. For this purpose, resources are managed at the technical and systematic level, and standards and policies are devised at the organizational level to establish interoperability. Also, systematic services are defined and designed for establishing interoperability and some mechanisms are defined and executed for the creation of new samples of services.

This level of interoperability maturity level focuses on enabling interoperability. At this level, interoperable systems are implemented and deployed, data are managed and business processes are performed in technical and organizational domains of interoperability. Mechanisms for easier search and calling of present services are defined and their specifications are determined.

At this level of maturity, security is established in the technical domain and services are managed and monitored in the organizational domain. The services are coordinated at the systematic level and service repairmen mechanisms are implemented when failure occurs and clients become aware of service changes.

At this level, which is the last level of interoperability maturity levels, interoperability services are published and resources are managed during runtime. At this level, services are dynamically managed, and, in order to completely establish interoperability, some agreements are made between service providers and clients.

Generally, it can be cited that 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    {
                                    
                                       
                                          L
                                       
                                       
                                          0
                                       
                                    
                                    ,
                                    
                                       
                                          L
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          L
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          L
                                       
                                       
                                          3
                                       
                                    
                                    ,
                                    
                                       
                                          L
                                       
                                       
                                          4
                                       
                                    
                                    }
                                 
                               where 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          i
                                       
                                    
                                 
                               represents a specific domain of interoperability maturity model and variables 
                                 
                                    
                                       
                                          L
                                       
                                       
                                          0
                                       
                                    
                                 
                               to 
                                 
                                    
                                       
                                          L
                                       
                                       
                                          4
                                       
                                    
                                 
                               denote interoperability maturity levels, which are defined in the proposed interoperability maturity model for ultra large scale systems.

Therefore, the ultra large scale systems interoperability maturity model considers five increasing levels of sophistication regarding system interaction and the ability of the system to exchange and share information and services [39–41] (see Fig. 12
                              ). Each higher level represents a demonstrable increase in capability over the previous level of system-to-system interaction.

Concerning the general approach of this paper, which considers the assessment of ultra large scale systems interoperability, some requirements of ultra large scale systems that are relevant to interoperability must be considered. These requirements are:
                              
                                 •
                                 In an ultra large scale system, at every moment a system may be added, changed or modified. In such an environment component systems must become aware of these changes and change their cooperation based on the new condition. For this purpose, it must be possible to change the interoperation among systems according to the new condition.

Despite the dynamic and continuous change, systems efficiency must be maintained. This needs the provision of searching new systems for replacement.

If the service used by a system changes, the system must adapt to this change.

In order to fulfill these requirements, the component systems of an ultra large scale system should be able to:

Find and search desired services without human interference.

Modify its interaction mechanism according to changes.

Find a chain of components and makes achieving goals possible by establishing the relation among them.

Therefore, the interoperability maturity model must address and assess all the above requirements. Table 2
                            shows the proposed interoperability maturity level for ultra large scale systems. In this interoperability maturity model, items that must be assessed for each interoperability domain at each maturity level are expressed.

Therefore, it can be said that 
                              
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       n
                                    
                                 
                                 }
                              
                            Where 
                              
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                 
                              
                            represents the 
                              
                                 
                                    
                                       i
                                    
                                    
                                       th
                                    
                                 
                              
                            maturity level of interoperability maturity model and variables 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            to 
                              
                                 
                                    
                                       P
                                    
                                    
                                       n
                                    
                                 
                              
                            denote the defined large parameters at the ith maturity level of the proposed interoperability maturity model for the ultra large scale systems.


                           Table 3
                            shows the proposed interoperability maturity model for the ultra large scale systems, which was demonstrated earlier at high level (Table 2), with more detail. In this table, predefined parameters for each interoperability domain at each level are divided into more detailed, specific sub-parameters. During the assessment process of the interoperability maturity model using the proposed model, each sub-parameter at each level must be evaluated.

Therefore, generally it can be stated that 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       in
                                    
                                 
                                 }
                              
                            Where 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                              
                            denotes the 
                              
                                 
                                    
                                       i
                                    
                                    
                                       th
                                    
                                 
                              
                            parameter at one level of interoperability maturity and 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       1
                                    
                                 
                              
                            to 
                              
                                 
                                    
                                       P
                                    
                                    
                                       in
                                    
                                 
                              
                            are sub-parameters defined within the proposed interoperability maturity for ultra large scale systems. In the following, parameters and sub-parameters for each interoperability domain at each interoperability level are described.

Resource Management: At this level of maturity model, resource management must be implemented for establishing interoperability among heterogeneous resources by following some standards and protocols. Resources include software systems and database. Resource management initially makes coordinating and sharing resources possible, and, in the next step, it provides access and resources for systems and clients.


                              Data management: At this level of maturity model, data management is evaluated. Data management includes storing, accessing and transferring data that must be studied and assessed in this step.


                              Security: At this level, items pertaining to security are evaluated. These items include:
                                 
                                    •
                                    
                                       Authentication and authorization: Authentication mechanisms are required so that the identity of individuals and services can be established. Service providers must implement authorization mechanisms to enforce policy over how each service can be used. The Grid system should follow each domain’s security policies and also may have to identify users’ security policies. Authorization should accommodate various access control models and implementations.


                                       Delegation: Mechanisms that allow for the delegation of access rights from service requestors to service providers are required. The risk of misuse of delegated rights must be minimized, for example, by restricting the rights transferred through delegation to the intended job and limiting their lifetime.


                                       Security policy exchange: Service requestors and providers should be able to exchange dynamically security policy information to establish a negotiated security context between them.


                              Runtime resource management: At this level, activities related to runtime resource management are provided in a dynamic environment. These activities include adding, changing and removing a new resource during runtime.


                              Service definition and design: At this level, system services are defined and designed completely as an independent service or a combination of available services based on requirements. These services are defined and designed that they not only meet the needs of their direct applicants but they can also be used and called upon by other services. For this purpose, service planner models are an appropriate model, which include definition and description of the required services, using available languages. The planner must also analyses how services are implemented and determine how they are created. In addition, in this step, service indices, such as security, accessibility, efficiency and reliability are investigated and the service design and definition process is completed. For this purpose, the architecture or service quality planner decides the details of the service constraints and how they are deployed and implemented and also determines the method for achieving quality indices. Therefore, generally, in this step, system services definition and design and system services quality design are assessed.


                              Service Implementation and Deployment: In this step, it is checked that the services are implemented and deployed according to the models produced in the previous steps. In the context of service implementation, subjects, such as configuration, version management and service satisfaction, must be addressed. Checking the fulfillment of service quality needs, such as reliability, security and efficiency is one task of this step. Activities related to test and production of test packages are studied before deployment of services.


                              Service orchestration and service coordination: Some services can be created through the call of other services without implementation. This activity is completely different to the activities related to the design and implementation. Firstly, the call of services for the creation of new services is defined independently of the design case, and, secondly, until the base services are designed and implemented, defining services orchestration is not possible. Although, services orchestration is both cost effective and timesaving, this composition services needs special requirements because a strong relation and connection exists with other services, and important issues must be addressed so that the client does not discriminate between these services and base services. The mentioned cases are assessed at level 3 of syntactic interoperability.


                              Service publication: When the service design and implementation are finished, they are published. For this, initially, service files, such as service description file and service interface (connector) description file are published and become accessible to clients. Then descriptions of technical and nontechnical services must be determined. There are various classifications of services according to their type and technical specification. These specifications are published and documented such that applicants can easily detect and call their desired services. Therefore, at level 4 of syntactic interoperability, the mentioned cases are assessed.


                              Dynamic service creation: At this level of semantic interoperability, it is checked whether mechanisms for creation of new samples of services during runtime have been defined and also the management of new samples of services during runtime are assessed.


                              Discovery: At this level, it is checked whether the mechanisms for searching available services and services specifications have been defined and determined such that their calling becomes easier.


                              Lifetime management and notification: Some mechanisms must be defined for repairing services and their failures and also for informing clients about changes in services condition. These are assessed at this level.


                              Dynamic service management: At this level, services are managed dynamically. This means that, at this level, actions such as dynamic service search and dynamic and automatic service call and combination, are taken automatically, and for this purpose, ontologies concept and language are used.


                              Quality of service assurance: This level includes agreements between service publishers and receivers and covers different aspects, such as reliability, security and efficiency. Some measurable indicators should be provided for the reliability of each service. For example, 99% service accessibility can be one appropriate indicator. Another indicator is message delivery assurance at once. Identity verification and license check are two main indicators of service security. Identity verification is for checking the license of an agent that demands service and is usually done through identification and password control. License check controls access level and licenses of the agent whose identity has been verified. One indicator of efficiency, which is very important is response time, i.e. the time after which the server responds to the request. Another efficiency indicator is operational power, which is the number of responses for each service per unit time. These cases are assessed at the first level of Organizational interoperability.


                              Business process management: At this level, business process management is studied. Business processes management includes the description, analysis, execution and monitoring of business processes. Combining available processes for creation of a new process is assessed at this level.


                              Service monitoring and management: At this level, services monitoring and management and services adjustment are assessed. Services monitoring and management includes monitoring and controlling services, analyzing reports and statistics and continuous coordination of services according to the service level agreement. Services adjustment refers to adjusting the services to eliminate defects and improve the efficiency indicators. The data required for this purpose are obtained from the previous steps.


                              Interoperability standards and policy: Finally, at this level, interoperability standards, policies and perspective of the organization are defined and devised.

In this section, the method of scoring in the proposed model for evaluating interoperability maturity is described [39]. Scoring was performed as follows:

when parameters and sub-parameters defined in the proposed model were evaluated, a score between 0 and 1 was allocated for each interoperability domain at each level, such that if there is a sub-parameter, the score will be 1, in the case of no sub-parameter, the score is 0 and in the case of an incomplete sub-parameter, the score is a number between zero and one. Then the sum of the scores is divided by the number of available sub-parameters in each level to obtain the total score for each level [39].

Corresponding to the score of each level of interoperability domain, one color (gray, red, yellow and green) is allocated to each level of interoperability domain. Table 4
                            shows how these colors are set [39].

Therefore, its mathematical representation is:
                              
                                 
                                    
                                       
                                          
                                             For
                                             (
                                             
                                                
                                                   D
                                                
                                                
                                                   i
                                                
                                             
                                             =
                                             1
                                             ;
                                             
                                                
                                                   D
                                                
                                                
                                                   i
                                                
                                             
                                             <
                                             =
                                             n
                                             ;
                                             
                                                
                                                   D
                                                
                                                
                                                   i
                                                
                                             
                                             +
                                             +
                                             )
                                             {
                                          
                                       
                                       
                                          
                                             For
                                             (
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             =
                                             0
                                             ;
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             <
                                             =
                                             m
                                             ;
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             +
                                             +
                                             )
                                          
                                       
                                       
                                          
                                             PR
                                             (
                                             
                                                
                                                   D
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                             =
                                             (
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      t
                                                   
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   k
                                                
                                             
                                             |
                                             
                                                
                                                   P
                                                
                                                
                                                   k
                                                
                                             
                                             ∈
                                             PR
                                             (
                                             
                                                
                                                   D
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             
                                                
                                                   L
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                             )
                                             /
                                             t
                                             }
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       D
                                    
                                    
                                       i
                                    
                                 
                              
                            represent 
                              
                                 
                                    
                                       i
                                    
                                    
                                       th
                                    
                                 
                              
                            interoperability domain, 
                              
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                 
                              
                            denotes 
                              
                                 
                                    
                                       j
                                    
                                    
                                       th
                                    
                                 
                              
                            interoperability level and ordered pair 
                              
                                 PR
                                 (
                                 
                                    
                                       D
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                            is the final score of level 
                              
                                 
                                    
                                       L
                                    
                                    
                                       j
                                    
                                 
                              
                            of domain 
                              
                                 
                                    
                                       D
                                    
                                    
                                       i
                                    
                                 
                              
                            in the proposed interoperability maturity model for ultra large scale systems.

By calculating the final score of each interoperability level for each interoperability domain, the current interoperability status of one system can be determined. The system interoperability level in each interoperability domain is determined in a way that if a green color is allocated to the system at that interoperability maturity level or a lower level, that level is the system interoperability level at that interoperability domain. In other words, the level to which the green color is allocated in the assessment process is considered as the system interoperability maturity level. This procedure is performed for all interoperability domains to determine the system current interoperability status, as shown in Fig. 13
                           .

As seen in Fig. 14
                           , when the system interoperability current status is determined using the proposed interoperability maturity level and desired interoperability status is extracted, the difference between the current status and the desired status can be specified and the transition process for moving from the current status to the desired status can be demonstrated.

In this section, an interoperability framework for ultra large scale systems is presented. Using the proposed framework can improve the interoperability of ultra large scale systems. In order to improve interoperability of ultra large scale systems, available technologies that meet interoperability requirements must be used. Therefore, the first step in the presentation of the interoperability framework is identifying available technologies based on which the interoperability framework can be founded. The process of defining the proposed ultra large scale systems interoperability framework is demonstrated in Fig. 15
                        .

Generally, in order to have an interoperable system or increase the interoperability maturity level of a system and reach the desired interoperability status, the available approaches must be employed. Today, from the technology perspective, there are many approaches for fulfilling interoperability requirements in constructing software systems. Each approach has its own advantages and disadvantages from the interoperability perspective. Therefore, in order to meet the interoperability requirements of ultra large scale systems, appropriate technologies for interoperability must be identified among available technologies and they must be employed. Grid technology can be taken into account as an appropriate infrastructure for ultra large scale systems. The dynamic connection between diverse and various systems in this infrastructure corresponds to the dynamic interoperation among heterogeneous and diverse systems in ultra large scale systems. The global geographical distribution of this class of grid makes it appropriate for the global and very extensive scale ultra large scale systems. Since OGSA is based on web services, it inherits all its advantages from interoperability. In addition, the ability to search service and manage life cycle is added to it, which helps its evolution while it is operating. One important advantage of OGSA is the introduction of the services grid. Ultra large scale services are very dynamic and services addition, elimination and modification take place while it is operating. Web service is not as dynamic as ultra large scale systems while services grid can be added or eliminated during runtime. However, as mentioned previously, OGSA has some problems in the context of semantic interoperability. In a way, while there is no common ontology for describing services, the implementation of semantic interoperability is difficult.

In this section, an interoperability framework is given for establishing or improving interoperability in ultra large scale systems according to appropriate selected technologies at each interoperability level and for all types of interoperability. This ultra large scale systems interoperability framework can be used in constructing a new system or component system to establish or improve interoperability. As shown in Table 5
                           , the presented ultra large scale systems interoperability framework is based on the proposed interoperability maturity model, and, separately, gives a solution for each parameter of the proposed maturity model based on appropriate technologies.

In this section, given solutions for all interoperability domains in the presented ultra large scale systems interoperability framework are described.

At the first level of technical interoperability, resources are managed using Virtual Organization of Open Grid Service Architecture to establish interoperability among heterogeneous resources. The resource management includes coordinating and sharing and searching resources and access to resources. At level 2, data are stored, accessed and transferred using OGSA-Data Access and Integration (OGSA-DAI) technology. At level 3, resource security is established using OGSA Security Services and Web Services Security (WS-Security), and, finally, at the fourth level of technical interoperability, resource management is provided during runtime in a dynamic environment using OGSA (Grid Service). The activities include adding a new resource, changing a present system and eliminating a resource during runtime.

At level 1 of syntactic interoperability, services are defined as web services and using Web Service Modeling (WSML) technology, web services are modeled and designed and Web Service Policy, Web Service Security and Web Services Reliable Messaging can be used for designing services quality. At level 2, Web Service Definition Language (WSDL) and Simple Object Access Protocol (SOAP) can be used for implementation of services and Web Service Definition Language (WSDL) can be employed for deployment of services. At level 3, Business Process Execution Language (BPEL) and Web Service Choreography Description Language (WS-CDL) can be used for Service Orchestration and Service Choreography, respectively. Also WS-Coordination (WS-Transaction, WS-Business Activity) can be utilized for Service Coordination. Eventually, at level 4, Universal Description, Discovery and Integration (UDDI) can be used to publish services.

Semantic interoperability is one of the most important types of interoperability. In order to improve the ability of searching and combining services for systems and adapt the interaction between them to changes, semantic interoperability must be established among services which form the system.

For this purpose, means must be provided to describe services properties and abilities in unambiguous, computer-interpretable form and also the opportunity must be provided for service providers to define their services using a terminology common to both services users and providers.

For example, in SOA, developers have no practical control plan for the services they use and the services are continuously added or eliminated. In such an environment, what happens if a service used by a user is eliminated, is replaced by a better, more efficient service or its interface changes? Dynamic searching and combination of services can be used for solving this problem. One usable approach for this aim is ontologies.

Ontology web language for services is an OWL based language, which is created for describing web service properties and abilities in unambiguous, computer-interpretable form and provides the opportunity for service providers to define their services based on ontologies. This language presents service inputs and outputs and required preconditions and post-conditions for their calling based on ontology. OWL ontologies, classify the concepts of a domain into hierarchies that are interpretable for computers.

The Ontology Web Language for Services (OWL-S) is an OWL based language which gives the opportunity to service providers to describe service inputs and outputs and preconditions and post conditions for their call based on ontology. OWL-S helps software users and applications to search, call and combine their desired services automatically.

At the first level of semantic interoperability, Open Grid Service Architecture (Dynamic Service Creation) can be used in Dynamic Service Creation. At level 2, OGSA (Discovery) can be employed in Discovery. At level 3, in order to establish lifetime management, Open Grid Service Architecture (Lifetime Management) can be used. Also Open Grid Service Architecture (Notification) can be used for Notification. At level four, OWL Web Ontology Language for Services (OWL-S) can be employed for Dynamic Service Discovery, Invocation and Composition.

At the first level of organizational interoperability, Web Service Level Agreement (WSLA) can be used for Service level Agreement and OGSA (Service level attainment) and OGSA (Migration) can be employed for Service level attainment and Migration, respectively. At the second level, Business Process Modeling Notation (BPMN), Business Process Modeling Notation (BPMN) and XML Process Definition Language (XPDL) can be applied for Business Process Description, Business Process Modeling and Workflow, respectively. At level three, Business Process Execution Language (BPEL) can be utilized for Service Monitoring, Management and Tuning. At level four, there is no need to use a special technology for Interoperability Standards, Policy and Vision.

@&#EVALUATION@&#

In this section, the presented ultra large scale systems interoperability maturity model, and ultra large scale systems interoperability framework are evaluated. In order to evaluate the maturity model and the framework, Malaysian Healthcare system, which is representative (or sample) of an ultra large scale system, is selected as the case study [1]. Malaysia generally has an efficient and widespread system of health care, operating a two-tier health care system consisting of both a government-run universal Healthcare system and a co-existing private Healthcare system. Healthcare in Malaysia is mainly under the responsibility of the government’s Ministry of Health. Moreover, the evaluation of ultra large scale systems interoperability maturity model, and ultra large scale systems interoperability framework is offered separately.

The electronic prescription system of the Malaysian Healthcare system was assessed using the proposed interoperability maturity model. The results for each interoperability domain are shown in Table 6
                        . As it is observed, the results obtained from interoperability maturity assessment using the proposed interoperability maturity model can be used to analyze the current status of interoperability. By knowing the strengths and weaknesses of interoperability and demonstrating the target status of interoperability for the system, interoperability maturity levels can be taken for improving and increasing interoperability. Therefore, the proposed interoperability maturity model can be used to identify which aspect of interoperability is weak, and requires improvement.

In this section, the validity of the presented framework for establishing or improving interoperability in ultra large scale systems is assessed using the Malaysian Healthcare system. In order to assess the validity of the presented interoperability framework, the steps below must be pursued respectively:
                           
                              1.
                              Assessing and determining the interoperability maturity level for each interoperability domain based on the proposed interoperability maturity model (before using the proposed interoperability framework).

Using the mentioned technologies in the presented framework to improve the system interoperability.

Further Assessing and determining the interoperability maturity level for each interoperability domain based on the proposed interoperability maturity model (after using the proposed interoperability framework).

If the system interoperability maturity level in each interoperability domain increases after following the above mentioned steps, it shows that the interoperability framework improves the system interoperability maturity levels, and, consequently, its validity is affirmed.

In this section, the Malaysian Healthcare system is conducted to assess the validity of the presented interoperability framework. For this aim, the electronic prescription system of the Malaysian Healthcare system is selected. The results of the assessment and determination of the interoperability maturity level in each interoperability domain in the electronic prescription system before using the framework is shown in Fig. 16
                        .

When the interoperability maturity levels of the selected system are determined and assessed, the presented framework is used, and the mentioned technologies are applied. Then the interoperability maturity levels are assessed again. The assessment result after using the presented interoperability framework is shown in Fig. 17
                        .

As seen in Fig. 18
                        , a comparison of the results obtained from the assessment of the interoperability maturity levels before and after using the presented interoperability framework reveals that the proposed framework increases the interoperability maturity levels of the electronic prescription system. Consequently, this case study proves the validity of the proposed interoperability framework for ultra large scale systems.

Ten systems (Electronic Health Records System, Clinical System, Medical Imaging (IS Radiology) System, Operation System, Home Care System, Clinical Decision Support System, Human Resources System, Partners HealthCare System, Finance System, and Administration System) of the Malaysian Healthcare system were selected and the interoperability maturity model and interoperability framework were applied on them to assess the accuracy and precision of the proposed interoperability maturity model and the proposed interoperability framework for ultra large scale systems. Assessment steps of the interoperability maturity model and interoperability framework are respectively as follows:

Firstly, to determine the status of interoperability domains in the Malaysian health care systems before using the proposed interoperability framework, the interoperability maturity model is applied to these systems. The achieved results for the interoperability parameters of ultra large scale systems maturity model before using the proposed interoperability framework for each system of Malaysian health care systems are shown in Table 7
                        .

The obtained results for interoperability domains in the Malaysian health care systems before using the proposed interoperability framework are shown separately for each system in Table 8
                        .

The obtained results of interoperability maturity level for each interoperability domain in the Malaysian health care systems before using the proposed interoperability framework are shown in Fig. 19
                        .

Secondly, due to the planned interoperability status for the Malaysian health care systems, the interoperability framework is applied to the Malaysian health care systems to increase the interoperability maturity levels of interoperability domains.

Thirdly, to determine the status of interoperability domains in the Malaysian health care systems after using the proposed interoperability framework, the interoperability maturity model is applied to these systems. The achieved results for the interoperability parameters of ultra large scale systems maturity model after using the proposed interoperability framework for each system of Malaysian health care systems are shown in Table 9
                        .

The obtained results for each interoperability domain in the Malaysian health care systems after using the proposed interoperability framework are shown separately in Table 10
                        .

The obtained results of evaluating interoperability maturity level for each interoperability domain in the Malaysian health care systems after using the proposed interoperability framework are shown in Fig. 20
                        .

The difference of technical interoperability in the Malaysian health care systems before and after using the proposed interoperability framework is shown in Fig. 21
                        .


                        Fig. 22
                         illustrates the difference of syntactic interoperability in the Malaysian health care systems before and after using the proposed interoperability framework.

The difference of semantic interoperability in the Malaysian health care systems before and after using the proposed interoperability framework is presented in Fig. 23
                        .


                        Fig. 24
                         demonstrates the difference of organizational interoperability in the Malaysian health care systems before and after using the proposed interoperability framework.

The obtained results (Figs. 21–24) show that using the proposed interoperability framework increases the interoperability maturity level of technical interoperability, syntactic interoperability, semantic interoperability, and organizational interoperability in the Malaysian health care systems.

The difference of interoperability in the Malaysian health care systems before and after using the proposed interoperability framework is shown in Fig. 25
                        .


                        Fig. 25 shows that using the proposed interoperability framework increases the interoperability status in the Malaysian health care systems. The interoperability status of the Malaysian health care systems which are ultra large scale systems can be achieved by the interoperability maturity model. So we can conclude that the objectives of this paper are to present an interoperability maturity model for determining the status of interoperability in ultra large scale systems and an interoperability framework for increasing the interoperability (increasing the interoperability maturity level for each interoperability domain) of ultra large scale systems are achieved.

@&#CONCLUSION@&#

In this paper, initially, an interoperability maturity model was presented for ultra large scale systems. Using this model, the interoperability maturity levels of ultra large scale systems can be assessed and their maturity levels, from an interoperability perspective, can be identified. For this purpose, the interoperability maturity levels and required interoperability domains for ultra large scale systems were initially described. Then, the parameters and sub-parameters needed for assessment of interoperability at each maturity level of interoperability were defined for each interoperability domain, and, finally, the scoring method in the interoperability assessment process and method of assessment and extraction of current and desired interoperability status was described.

In the next step of this paper, one interoperability framework was proposed. Since this framework is based on interoperability technologies, it can improve component system interoperability in ultra large scale systems. To do so, initially, the interoperability technologies were studied and the most appropriate technology that can meet ultra large scale systems requirements was selected for each interoperability domain. Finally, an appropriate technology was presented to cover all the present sub-parameters in the interoperability maturity model.

Future research and developments on the interoperability of ultra large scale systems, initially, future platforms for implementation and deployment of ultra large scale systems must be taken into account. For example, the author believes that cloud computing in respect of its properties and capabilities, can be an appropriate platform for the implementation of ultra large scale systems. Therefore, providing solutions for interoperability of ultra large scale systems on cloud computing platforms can be important for future study on the interoperability of ultra large scale systems.

@&#ACKNOWLEDGEMENT@&#

This research is funded by the University of Malaya Research Grant (UMRG) RG055-11ICT “A New Maturity Model for Evaluating Interoperability of Ultra Large Scale Systems”.

@&#REFERENCES@&#

