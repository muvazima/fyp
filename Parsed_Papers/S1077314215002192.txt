@&#MAIN-TITLE@&#Localizing activity groups in videos

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A latent graphical model integrating multi-target tracking, group discovery, and activity recognition is proposed.


                        
                        
                           
                           Performance of activity recognition improves when multi-target tracking and group clustering are incorporated.


                        
                        
                           
                           Group activities are better recognized based on the structured relations within the group and group–group compatibilities.


                        
                        
                           
                           Increasing the connectivity of different groups improves the overall performance.


                        
                        
                           
                           Incorporating activity information leads to robust group localization in the video.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Activity recognition

Latent graph model

Group activity

@&#ABSTRACT@&#


               
               
                  Beyond recognizing actions of individuals, activity group localization in videos aims to localize groups of persons in spatiotemporal spaces and recognize what activity the group performs. In this paper, we propose a latent graph model to simultaneously address the problem of multi-target tracking, group discovery and activity recognition. Our key insight is to exploit the contextual relations among people. We present them as a latent relational graph, which hierarchically encodes the association potentials between tracklets, intra-group interactions, correlations, and inter-group compatibilities. Our model is capable of propagating multiple evidences among different layers of the latent graph. Particularly, associated tracklets assist accurate group discovery, activity recognition can benefit from knowing the whole structured groups, and the group and activity information in turn provides strong cues for establishing coherent associations between tracklets. Experiments on five datasets demonstrate that our model achieves both significant improvements in activity group localization and competitive performance on activity recognition.
               
            

@&#INTRODUCTION@&#

Vision-based human action and activity analysis have attracted much attention in computer vision literature. While recent work typically concentrates on activity recognition of a single person [1,2] or a pair of persons [3–8] in short videos or still images, there is an increasing demand for developing principled approaches to interpret long videos of complex scenes where many people are engaged in various co-occurring activities. In those scenarios, we observe that group activities, i.e. multiple persons performing collective activities in groups, is more common, with typical examples like: shopper queuing in a shopping store to get checked, pedestrians crossing a road, and friends talking together with their kids playing around. In this paper, we go beyond just recognizing each individual’s activity, but seek to simultaneously recognize and localize group activities in videos. We present this problem as activity group localization. In this paper, an activity group is defined as a spatiotemporal group of several people performing collective activities. As shown in Fig. 1, given a video, we localize two activity groups, including a walking group and a talking group. Activity group localization is of great importance since it provides a basis for high level applications such as semantic video indexing, video summarization, and video classification to name a few.

Two tasks are involved in this problem. The first is activity recognition. However, recognizing group activities is more complex than recognizing individual activities since they often depend on interactions among participants. One common approach is to incorporate contextual information, for example, to develop contextual descriptors for individuals that characterize what others nearby are doing [9–11] or to jointly infer actions, interactions and activities of all individuals in the scene [12–14]. The second is group localization in a video, which requires tracking persons in the video and further assigning persons to unknown number of groups. It is rather challenging mainly because multi-target tracking in complex scenes is difficult due to occlusions, false detections and background clutter. Moreover, clustering persons into groups based on only trajectory distance is inadequate, since activity groups also share activity potentials. One direct example is that two people waiting for a green light and then crossing the road form two activity groups rather than one.

In this paper, we seek to jointly solve these two tasks by exploiting the relations among people. Such relations not only characterize interactions between persons like facing to each other in talking groups, but also include some correlations of primitive actions, motions, and poses among people in the same group such as spreading legs in walking groups. We also explore the relations between two groups, which encode the compatibility of the groups and the scene. For example, a dancing group is more likely to be co-exist with a walking group other than a queuing group. Our hypothesis is that these relations can provide key evidences to group localization as well as group activity recognition. As shown in Fig. 1, it is difficult to identify activity groups based on the observations from each individual. However, if we observe them in a pairwise manner, we can discover that there are a strong interaction facing to each other between two people and correlations spreading legs among multiple people, thus we can cluster them into two different groups. In addition, knowing the relations within the group enables classifying activities on the level of discriminative interactions and correlations rather than the whole appearances, which is intuitively more sensible. For example, two groups can be localized in Fig. 1(b), then based on their intra-group relations and inter-group compatibilities, we can further infer the activities of two groups are walking and talking, respectively. Moreover, the structured groups provide useful contextual cues for multi-target tracking, which leads to more accurate trajectories that in turn assist the relation mining among people. Therefore, we treat these relations as latent variables, and propose a latent graph model to jointly associate fragmented trajectories (tracklets) into trajectories, cluster trajectories into groups, and assign activity labels to groups.

The main contributions of our work can be summarized in four-fold: (i) we propose a latent graph model to localize activity groups by jointly addressing the problems of multi-target tracking, group discovery, and activity recognition. (ii) We explore two types of contextual relations, including intra-group relations and inter-group relations. We validate their effectiveness on group localization as well as collective activity recognition. (iii) We propose a novel hierarchial relational graph to describe all relations among people. This relational graph is dynamically inferred to produce the optimal activity groups.

The rest of this paper is organized as follows: Section 2 reviews the previous work. Section 3 presents our latent graph model for activity group localization. The details of learning and inference are given in Sections 4 and 5. Section 6 shows our experimental results. Section 7 concludes our paper.

@&#RELATED WORK@&#

In the last decade, a significant effort has been made to understand human activities at different levels of granularity. There has been quite a lot of works focusing on single-person action recognition [1,2,15–17], interactive activity between a person and objects [18–21], or pair-activities between two persons [3–8]. A very good summary on the activity recognition techniques is given in a survey paper [22].

Recognition of group activities is about inferring the collective activity of a group of persons, which is very challenging due to the complex interactions between persons in the scene. Although there has been some works on modeling high-level group activities [23–26], they mainly focus on specific activities with clear structural information such as parade activity or aggressive events in prison. In this paper, we focus on activities performed by varying numbers of persons that co-occur in realistic scenarios. As actions of individuals in these activities are often interrelated, the contextual information that describes what others are doing in the scene becomes critical. Therefore a number of works have been devoted to exploiting the contextual information. Some attempts to propose contextual descriptors for individual person. For example, Lan et al. [11] propose Action Context descriptor that concatenates action scores of all individuals near the anchor person. Choi et al. [9,10] develop Spatio-Temporal Local descriptor to characterize the relative motion and distribution of persons in the surrounding area. These descriptors prove effective on describing collective behavior compared to traditional descriptors like HOG feature [27]. Rather than recognizing activity of individuals in isolation, Lan et al. [11,13] model the compatibility of the activities and observations of all persons in the scene to jointly infer them. In [28], they argue that group activity is often defined by semi-local characteristics and interactions, and attempt to recognize activities by learning the latent activity constituents that are meaningful for the collective activity. In our work [29], we model the relations among participants to discover activity groups in video segments. [30] attempts to discover groups of people that are performing group activities in one single image. Unlike all the above approaches that are restricted to modeling contextual information in either one single frame or several consecutive frames, our approach seeks to discover collective activity groups that are long both in spatial and in temporal ranges by integrating tracking, group detection with activity recognition.

There are some works [31–33] that take the advantage of spatiotemporal information in the video to assist recognition of group activities. Ni et al. [34] model local causality information from each track, each pair of tracks and each group of tracks to recognize group activities. Ryoo and Aggarwal [35] represent group activity as a stochastic collection of individual activities. But both of them assume that the trajectories are available and reliable. Recent works on group activity recognition aims to jointly solve the problems of group activity recognition and person tracking [36–39]. Khamis et al. [39] combine per-track and per-frame cues for activity recognition and person tracking. In [38], they formulate multi-target tracking and activity recognition into a constrained minimum cost flow problem. Choi and Savarese [36,37] leverage target interactions for guiding target associations, and utilize a hierarchical model to infer activities of different levels. Amer and Todorovic [40] use a chain model designed on spatiotemporal locations to infer activities. In [12] and [41], they introduce a three-layered AND-OR graph to decompose group activities into different granularities including atomic actions, pairwise interactions and group activities. A recent work of them [42] formulates a deep Hierarchical Random Field model to capture long-range and higher-order dependencies in spatiotemporal spaces. In this paper, we not only integrate multi-target tracking with group activity recognition, but also emphasize intra-group relations and inter-group relations, which are critical for collective activity recognition and can further assist tracking.

Our work is also related to discovering groups in videos. In [43], they cluster persons to groups based on the contextual spatial pyramid descriptor. [30] utilizes relative poses and positions in 3D to segment people into semantically meaningful groups. However, both of them localize groups in still images. Several recent works [44–47] attempt to combine group discovery and group tracking to find trajectory groups. Our work mainly differs in the aspect that we emphasize on activity group localization in videos.

Our model localizes activity groups by simultaneously associating person tracklets, clustering associated tracks into groups, and estimating activities of the clustered groups. Given a video, we first extract a set of tracklets. Based on these tracklets, we unify group localization and activity recognition in a framework by inferring the relations among tracklets. In particular, as shown in Fig. 2(a) and (b), three kinds of relations are exploited. The first is the relation between two tracklets, indicating that they correspond to the same target. By inferring this kind of relations, tracklets can be associated into tracks. Two types of contextual relations are explored: (i) intra-group relation is defined on a pair of associated tracks, indicating that they belong to the same group. It models the interaction or correlation within a group in terms of the activity label of the group and trajectory distance. Based on these relations, we can obtain groups as sets of tracks connected by intra-group relations. (ii) Inter-group relation characterizes the co-occurrence between the activities of two groups in the scene as well as their relative spatiotemporal configurations. In this way, all these relations can be formed as a hierarchical graph. Note that the graph of each layer is not independent. Specifically, changing the graph configuration of tracklet leads to different person tracks in the graph of tracks. Likewise, changing the configuration of tracks graph would affect activity estimation on the group level. The updated activities and groups can in turn assist the inferring of the tracklet graph. In other words, this hierarchial graph is capable of iteratively propagating the information among tracklet association, tracks clustering and activity estimation. We treat this relational graph as a latent variable, and model the compatibility of tracklets, associated tracks, clustered groups and activity labels assigned to the groups.

The graph model is shown in Fig. 2(c). Given a video, we first extract a set of tracklets (the details are described in the experiments section). Let 
                           
                              x
                              =
                              (
                              
                                 x
                                 1
                              
                              ,
                              
                                 x
                                 2
                              
                              ,
                              …
                              ,
                              
                                 x
                                 m
                              
                              )
                           
                         be the m tracklets, our goal is to discover the groups 
                           
                              y
                              =
                              (
                              
                                 y
                                 1
                              
                              ,
                              
                                 y
                                 2
                              
                              ,
                              …
                              ,
                              
                                 y
                                 n
                              
                              )
                           
                         with activity labels of the groups 
                           
                              a
                              =
                              (
                              
                                 a
                                 1
                              
                              ,
                              
                                 a
                                 2
                              
                              ,
                              …
                              ,
                              
                                 a
                                 n
                              
                              )
                              ,
                           
                         where yi
                         is a m dimensional vector with elements yik
                         ∈ {0, 1} indicating whether the kth person belongs to the group yi
                         or not. Since each tracklet should be and only be clustered into one group, so 
                           
                              
                                 ∑
                                 i
                              
                              
                                 y
                                 i
                              
                              =
                              
                                 1
                                 m
                              
                              ,
                           
                         where 1
                           m
                         is a m-dimensional vector with all elements equal 1, and for each pair of group yi
                         and group yj
                         (i ≠ j), 
                           
                              
                                 y
                                 i
                              
                              
                                 y
                                 j
                                 T
                              
                              =
                              0
                           
                        . Let 
                           A
                         be the set of all possible activity labels, ai
                         ∈ A. In this work, we attempt to assign activity label to each spatiotemporal group other than individuals. So each tracklet is assigned to the activity label of the group that it belongs to.

We denote the hierarchical graph as 
                           
                              G
                              =
                              (
                              
                                 G
                                 x
                              
                              ,
                              
                                 G
                                 t
                              
                              ,
                              
                                 G
                                 g
                              
                              )
                              ,
                           
                         where 
                           
                              
                                 G
                                 x
                              
                              ,
                           
                        
                        
                           
                              
                                 G
                                 t
                              
                              ,
                           
                        
                        
                           
                              G
                              g
                           
                         represent the relational graph of tracklets, person tracks and groups, respectively. 
                           
                              
                                 G
                                 x
                              
                              =
                              
                                 (
                                 x
                                 ,
                                 
                                    E
                                    x
                                 
                                 )
                              
                              ,
                           
                        
                        
                           
                              
                                 G
                                 t
                              
                              =
                              
                                 (
                                 T
                                 ,
                                 
                                    E
                                    t
                                 
                                 )
                              
                              ,
                           
                        
                        
                           
                              
                                 G
                                 g
                              
                              =
                              
                                 (
                                 g
                                 ,
                                 
                                    E
                                    g
                                 
                                 )
                              
                              ,
                           
                        
                        
                           T
                         denotes the associated tracks, and g represents the clustered groups. 
                           
                              
                                 E
                                 x
                              
                              ,
                           
                        
                        
                           
                              
                                 E
                                 t
                              
                              ,
                           
                         and 
                           
                              E
                              g
                           
                         are the connections between them.

We formulate the activity group localization problem in an energy maximization framework, with an overall energy function 
                           
                              F
                              (
                              x
                              ,
                              G
                              ,
                              y
                              ,
                              a
                              )
                           
                        . This energy function measures the compatibility among activity groups (y, a), graph structure 
                           G
                         and tracklets x. In particular, three kinds of potentials are modeled including intra-group potentials, inter-group potentials and association potentials. It is calculated as follows:

                           
                              (1)
                              
                                 
                                    
                                       
                                          F
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      E
                                                      t
                                                   
                                                
                                             
                                             
                                                F
                                                T
                                                a
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                ,
                                                
                                                   T
                                                   j
                                                
                                                ,
                                                
                                                   a
                                                   T
                                                
                                                )
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      E
                                                      t
                                                   
                                                
                                             
                                             
                                                F
                                                T
                                                c
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                ,
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      E
                                                      g
                                                   
                                                
                                             
                                             
                                                F
                                                y
                                                a
                                             
                                             
                                                (
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   j
                                                
                                                ,
                                                
                                                   a
                                                   i
                                                
                                                ,
                                                
                                                   a
                                                   j
                                                
                                                )
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      E
                                                      g
                                                   
                                                
                                             
                                             
                                                F
                                                y
                                                c
                                             
                                             
                                                (
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   j
                                                
                                                )
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      E
                                                      a
                                                   
                                                
                                             
                                             
                                                F
                                                x
                                             
                                             
                                                (
                                                
                                                   x
                                                   i
                                                
                                                ,
                                                
                                                   x
                                                   j
                                                
                                                ,
                                                y
                                                ,
                                                a
                                                )
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        
                           
                              
                                 F
                                 t
                                 a
                              
                              
                                 (
                                 ·
                                 )
                              
                           
                         and 
                           
                              
                                 F
                                 t
                                 c
                              
                              
                                 (
                                 ·
                                 )
                              
                           
                         characterize intra-group potentials between two person tracks, while 
                           
                              
                                 F
                                 g
                                 a
                              
                              
                                 (
                                 ·
                                 )
                              
                           
                         and 
                           
                              
                                 F
                                 g
                                 c
                              
                              
                                 (
                                 ·
                                 )
                              
                           
                         encode inter-group potentials between two groups, Fx
                        (·) represents the association potential. The details of them are described in the following.


                        Intra-group action potential
                        
                           
                              
                                 F
                                 T
                                 a
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 ,
                                 
                                    a
                                    T
                                 
                                 )
                              
                           
                         
                        : For two person tracks 
                           
                              T
                              i
                           
                         and 
                           
                              T
                              j
                           
                         in the same group, this term measures the compatibility of track 
                           
                              
                                 T
                                 i
                              
                              ,
                           
                         track 
                           
                              T
                              j
                           
                         and the activity label 
                           
                              a
                              T
                           
                         of the group they belong to. It is parameterized on the intra-group action feature 
                           
                              
                                 ϕ
                                 0
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 )
                              
                              ,
                           
                         which encodes interaction and correlation between tracks 
                           
                              T
                              i
                           
                         and 
                           
                              T
                              j
                           
                        :

                           
                              (2)
                              
                                 
                                    
                                       F
                                       T
                                       a
                                    
                                    
                                       (
                                       
                                          T
                                          i
                                       
                                       ,
                                       
                                          T
                                          j
                                       
                                       ,
                                       
                                          a
                                          T
                                       
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          b
                                          ∈
                                          A
                                       
                                    
                                    
                                       
                                          w
                                          
                                             0
                                             ,
                                             b
                                          
                                          T
                                       
                                       
                                          ϕ
                                          0
                                       
                                       
                                          (
                                          
                                             T
                                             i
                                          
                                          ,
                                          
                                             T
                                             j
                                          
                                          )
                                       
                                       1
                                       
                                          (
                                          
                                             a
                                             T
                                          
                                          =
                                          b
                                          )
                                       
                                    
                                    ,
                                 
                              
                           
                        where w
                        0, b
                         is the vector of model weights for each class of activity, 
                           
                              1
                              (
                              ·
                              )
                           
                         is the indicator function.


                        Intra-group context potential
                        
                           
                              
                                 F
                                 T
                                 c
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 )
                              
                           
                         
                        : It models the relative motion and distance between two person tracks 
                           
                              T
                              i
                           
                         and 
                           
                              T
                              j
                           
                        . The relative motion and distance are encoded by the intra-group context feature 
                           
                              
                                 ϕ
                                 1
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 )
                              
                              ,
                           
                         and this potential is parameterized as:

                           
                              (3)
                              
                                 
                                    
                                       F
                                       
                                          c
                                          t
                                       
                                    
                                    
                                       (
                                       
                                          T
                                          i
                                       
                                       ,
                                       
                                          T
                                          j
                                       
                                       )
                                    
                                    =
                                    
                                       w
                                       1
                                       T
                                    
                                    
                                       ϕ
                                       1
                                    
                                    
                                       (
                                       
                                          T
                                          i
                                       
                                       ,
                                       
                                          T
                                          j
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        
                     


                        Inter-group action potential
                        
                           
                              
                                 F
                                 y
                                 a
                              
                              
                                 (
                                 
                                    y
                                    i
                                 
                                 ,
                                 
                                    y
                                    j
                                 
                                 ,
                                 
                                    a
                                    i
                                 
                                 ,
                                 
                                    a
                                    j
                                 
                                 )
                              
                           
                         
                        : It characterizes the compatibility of two activity groups in the scene in terms of their activity labels ai, aj
                         and inter-group action feature ϕ
                        2(yi, yj
                        ):

                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                F
                                                y
                                                a
                                             
                                             
                                                (
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   j
                                                
                                                ,
                                                
                                                   a
                                                   i
                                                
                                                ,
                                                
                                                   a
                                                   j
                                                
                                                )
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                             
                                             
                                             
                                             =
                                             
                                                ∑
                                                
                                                   b
                                                   ,
                                                   c
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                
                                                   w
                                                   
                                                      2
                                                      ,
                                                      b
                                                      c
                                                   
                                                   T
                                                
                                                
                                                   ϕ
                                                   2
                                                
                                                
                                                   (
                                                   
                                                      y
                                                      i
                                                   
                                                   ,
                                                   
                                                      y
                                                      j
                                                   
                                                   )
                                                
                                                1
                                                
                                                   (
                                                   
                                                      a
                                                      i
                                                   
                                                   =
                                                   b
                                                   )
                                                
                                                1
                                                
                                                   (
                                                   
                                                      a
                                                      j
                                                   
                                                   =
                                                   c
                                                   )
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Inter-group context potential
                        
                           
                              
                                 F
                                 y
                                 c
                              
                              
                                 (
                                 
                                    y
                                    i
                                 
                                 ,
                                 
                                    y
                                    j
                                 
                                 )
                              
                           
                         
                        : It models the compatibility of two activity groups based on relative motion and distance, which are encoded by the inter-group context feature ϕ
                        3(yi, yj
                        ):

                           
                              (5)
                              
                                 
                                    
                                       F
                                       y
                                       c
                                    
                                    
                                       (
                                       
                                          y
                                          i
                                       
                                       ,
                                       
                                          y
                                          j
                                       
                                       )
                                    
                                    =
                                    
                                       w
                                       3
                                       T
                                    
                                    
                                       ϕ
                                       3
                                    
                                    
                                       (
                                       
                                          y
                                          i
                                       
                                       ,
                                       
                                          y
                                          j
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        
                     


                        Association potential Fx
                        (xi, xj
                        , y, a) : This represents the score of associating tracklet xi
                         to tracklet xj
                        . We not only consider the observations derived from appearance similarity and motion cues, but also leverage the contextual information provided by activity groups (y, a) to make target association more robust. Assume tracklet xi
                         and xj
                         belong to activity groups (yi, ai
                        ) and (yj, aj
                        ) respectively (Fig. 3
                        ), since associating xi
                         to xj
                         suggests that two groups are very likely to be temporal matched, then selecting a match hypothesis for tracklet xi
                         should take the activity group into consideration. To be compatible with the links between xi
                         and xj
                        , their activity labels ai
                         and aj
                         should be the same, and the two groups yi
                         and yj
                         should share similar motion, appearance and spatiotemporal configuration. We encode such contextual information as well as traditional match cues by the association feature ϕ
                        4(xi, xj
                        , y, a), and then Fx
                        (xi, xj
                        , y, a) can be modeled as:

                           
                              (6)
                              
                                 
                                    
                                       F
                                       x
                                    
                                    
                                       (
                                       
                                          x
                                          i
                                       
                                       ,
                                       
                                          x
                                          j
                                       
                                       ,
                                       y
                                       ,
                                       a
                                       )
                                    
                                    =
                                    
                                       w
                                       4
                                       T
                                    
                                    
                                       ϕ
                                       4
                                    
                                    
                                       (
                                       
                                          x
                                          i
                                       
                                       ,
                                       
                                          x
                                          j
                                       
                                       ,
                                       y
                                       ,
                                       a
                                       )
                                    
                                    .
                                 
                              
                           
                        
                     

The energy function 
                           
                              F
                              (
                              x
                              ,
                              G
                              ,
                              y
                              ,
                              a
                              )
                           
                         in Eq. (1) now can be rewritten as the linear product of model weights w and the feature vector 
                           
                              ψ
                              (
                              x
                              ,
                              G
                              ,
                              y
                              ,
                              a
                              )
                           
                        :

                           
                              (7)
                              
                                 
                                    F
                                    
                                       (
                                       x
                                       ,
                                       G
                                       ,
                                       y
                                       ,
                                       a
                                       )
                                    
                                    =
                                    
                                       w
                                       T
                                    
                                    ψ
                                    
                                       (
                                       x
                                       ,
                                       G
                                       ,
                                       y
                                       ,
                                       a
                                       )
                                    
                                    ,
                                 
                              
                           
                        where w is the concatenation of parameters w
                        0, w
                        1, w
                        2, w
                        3, and w
                        4, and 
                           
                              ψ
                              (
                              x
                              ,
                              G
                              ,
                              y
                              ,
                              a
                              )
                           
                         is a vector composed of feature descriptors ϕ
                        0, ϕ
                        1, ϕ
                        2, ϕ
                        3, and ϕ
                        4. Details of these features are introduced in Section 3.2. We can formalize the learning of this model in a max-margin framework. Then given the learned parameters w, the optimal assignment of (y, a) for x can be inferred by maximizing this energy function 
                           
                              F
                              (
                              x
                              ,
                              G
                              ,
                              y
                              ,
                              a
                              )
                           
                        .

In this section, we introduce the action and context feature descriptors used in Eq. (1), including intra-group action descriptor, intra-group context descriptor, inter-group action descriptor, inter-group context descriptor and association descriptor.


                        Intra-group action feature descriptor
                        
                           
                              
                                 ϕ
                                 0
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 )
                              
                           
                        
                        : This feature encodes the action potentials of two associated tracks within a group. We first compute an action feature f for a track. Specifically, assume there are in total N detections in the track, for each detection, we compute the Action Context (AC) descriptors [11]. The action feature is calculated by max-pooling all N AC descriptors. Then based on the action features, we compute 
                           
                              
                                 ϕ
                                 0
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 )
                              
                           
                         as:

                           
                              (8)
                              
                                 
                                    
                                       ϕ
                                       0
                                    
                                    
                                       (
                                       
                                          T
                                          i
                                       
                                       ,
                                       
                                          T
                                          j
                                       
                                       )
                                    
                                    =
                                    
                                       [
                                       
                                          f
                                          
                                             i
                                             ,
                                             1
                                          
                                       
                                       +
                                       
                                          f
                                          
                                             j
                                             ,
                                             1
                                          
                                       
                                       
                                       ,
                                       
                                       …
                                       
                                       ,
                                       
                                       
                                          f
                                          
                                             i
                                             ,
                                             n
                                          
                                       
                                       +
                                       
                                          f
                                          
                                             j
                                             ,
                                             n
                                          
                                       
                                       ,
                                       
                                       
                                          f
                                          
                                             i
                                             ,
                                             1
                                          
                                       
                                       ·
                                       
                                          f
                                          
                                             j
                                             ,
                                             1
                                          
                                       
                                       
                                       ,
                                       
                                       …
                                       
                                       ,
                                       
                                       
                                          f
                                          
                                             i
                                             ,
                                             n
                                          
                                       
                                       ·
                                       
                                          f
                                          
                                             j
                                             ,
                                             n
                                          
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        where f
                        
                           i, k
                         is the kth value in the action feature f of the track 
                           
                              T
                              i
                           
                        .


                        Intra-group context feature descriptor
                        
                           
                              
                                 ϕ
                                 1
                              
                              
                                 (
                                 
                                    T
                                    i
                                 
                                 ,
                                 
                                    T
                                    j
                                 
                                 )
                              
                           
                        
                        : Features that capture the spatial and temporal relationships between tracks are defined as intra-group context features. This descriptor is a combination of three parts {ψl, ψv, ψt
                        }:

                           
                              •
                              
                                 ψl
                                  is the relative distance feature that captures the distance difference of a pair of tracks. For two tracks 
                                    
                                       T
                                       i
                                    
                                  and 
                                    
                                       
                                          T
                                          j
                                       
                                       ,
                                    
                                  assume they overlap for Lij
                                  frames. If Lij
                                  > 0, which means that they co-present in these Lij
                                  frames, we calculate the spatial distance as 
                                    
                                       
                                          ∥
                                       
                                       
                                          s
                                          i
                                          t
                                       
                                       −
                                       
                                          s
                                          j
                                          t
                                       
                                       
                                          ∥
                                          /
                                       
                                       
                                          (
                                          
                                             r
                                             i
                                             t
                                          
                                          +
                                          
                                             r
                                             j
                                             t
                                          
                                          )
                                       
                                       ,
                                    
                                  where s denotes the center of the bounding box, and r denotes the area of the bounding box. Instead of directly using the distance, we quantize the distance into several bins, and calculate ψl
                                  as the normalized histogram over Lij
                                  frames.


                                 ψv
                                  is the relative motion feature. Similar to the calculation of ψl
                                 , we compute the velocity difference as 
                                    
                                       
                                          ∥
                                       
                                       
                                          ν
                                          i
                                          t
                                       
                                       −
                                       
                                          ν
                                          j
                                          t
                                       
                                       
                                          ∥
                                          /
                                       
                                       
                                          (
                                          
                                             ν
                                             i
                                             2
                                          
                                          +
                                          
                                             ν
                                             j
                                             2
                                          
                                          )
                                       
                                       ,
                                    
                                  where ν represents the velocity. We quantize them and represent ψv
                                  as a histogram of velocity difference.


                                 ψt
                                  characterizes the temporal overlap between two tracks. We use Li, Lj
                                  and Lij
                                  to denote the length of track 
                                    
                                       
                                          T
                                          i
                                       
                                       ,
                                    
                                 
                                 
                                    
                                       T
                                       j
                                    
                                  and their overlapped length, respectively. ψt
                                  is a one dimensional vector, which is computed as 
                                    
                                       
                                          L
                                          
                                             i
                                             j
                                          
                                       
                                       /
                                       
                                          (
                                          
                                             L
                                             i
                                          
                                          +
                                          
                                             L
                                             j
                                          
                                          −
                                          
                                             L
                                             
                                                i
                                                j
                                             
                                          
                                          )
                                       
                                    
                                 .


                        Inter-group action feature descriptor ϕ
                        2(yi, yj
                        ): Inter-group action feature descriptor characterizes action potentials between two groups. For each pair of tracks 
                           
                              (
                              
                                 T
                                 i
                              
                              ,
                              
                                 T
                                 j
                              
                              )
                              ,
                           
                         where 
                           
                              T
                              i
                           
                         comes from group yi
                         and 
                           
                              T
                              j
                           
                         comes from group yj
                        , we can compute the corresponding action features f
                        
                           i
                         and f
                        
                           j
                        , and then obtain 
                           
                              
                                 f
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 |
                                 
                                    f
                                    i
                                 
                                 −
                                 
                                    f
                                    j
                                 
                                 |
                              
                           
                        . The final inter-group action feature descriptor ϕ
                        2(yi, yj
                        ) is calculated by max-pooling all f
                        
                           ij
                        .


                        Inter-group context feature descriptor ϕ
                        3(yi, yj
                        ): Similar to the definition of intra-group context descriptor, this feature encodes the relative motion, distance and velocity between two groups. For a pair of tracks 
                           
                              (
                              
                                 T
                                 i
                              
                              ,
                              
                                 T
                                 j
                              
                              )
                              ,
                           
                         where 
                           
                              T
                              i
                           
                         comes from group yi
                         and 
                           
                              T
                              j
                           
                         comes from group yj
                        , if they are temporally overlapped, we calculate the relative distance descriptor ψl
                         and motion descriptor ψv
                        . The final inter-group context feature is a combination of relative distance descriptor and relative motion descriptor that are average pooled over all possible track pairs.


                        Association descriptor ϕ
                        4(xi, xj
                        , y, a): This descriptor not only includes multiple match features like appearance similarity and motion difference, but also contains contextual feature derived from activity groups. Assume tracklet xi
                         and xj
                         come from activity group (yi, ai
                        ) and (yj, aj
                        ) respectively, this descriptor is composed of several feature vectors: (i) the relative distance descriptor and motion descriptor, the calculations of them are similar to the calculation in Intra-group context feature descriptor, only differ in the way that they are normalized histograms of distances between the last Δt frames of xi
                         and the first Δt frames of xj
                        . (ii) The appearance similarity descriptor, which is computed as the averaged difference of HOG feature [27] vectors and color histograms. (iii) Contextual descriptor, this descriptor encodes the similarity of two groups. We concatenate the difference of HOG features, motion feature, group size and group distance as the contextual descriptor.

A remaining issue is how we determine the structure of the graph 
                           
                              G
                              ,
                           
                         i.e., how to connect person tracks within each group, and how to connect groups in the scene. For our application, a good graph structure turns out to be crucial since it determines the quality of clustered groups, which is also important for both target association and group activity recognition. Ideally, we would employ a fully connected graph for both the track graph 
                           
                              G
                              t
                           
                         and the group graph 
                           
                              
                                 G
                                 g
                              
                              ,
                           
                         but this would make the inference intractable.

We observe that within each group, not all links are discriminative, and also not all persons strongly relate to one another. Therefore, we assume that in each group every person closely coordinates with only one another, i.e. a tree structure. As for inter-group relations, since some high-level contextual information such as activity co-occurrences can be better characterized by inter-group relations, we employ a star graph for the group relational graph 
                           
                              G
                              g
                           
                        . In the star graph, every group that is within a spatiotemporal range to the anchor one is connected.

Given the model parameter w, the inference problem is to find the optimal groups 
                        
                           y
                           ^
                        
                      along with the corresponding activity labels 
                        
                           a
                           ^
                        
                      for a set of tracklets x. The inference problem can be written as:

                        
                           (9)
                           
                              
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       a
                                       ^
                                    
                                    )
                                 
                                 =
                                 arg
                                 
                                    max
                                    
                                       y
                                       ,
                                       a
                                       ,
                                       G
                                    
                                 
                                 F
                                 
                                    (
                                    x
                                    ,
                                    G
                                    ,
                                    y
                                    ,
                                    a
                                    )
                                 
                                 .
                              
                           
                        
                     
                  

Groups y, graph structure 
                        G
                      and activities a are not independent with each other. As noted in the previous section, we can associate tracklets to obtain person tracks 
                        
                           T
                           ,
                        
                      then by clustering these tracks, groups y are generated, and the final activities a can be estimated for each group, which in turn guide the tracklet association. So we divide the optimization of Eq. (9) into three steps and solve them iteratively:


                     Step 1: Tracklet association: Supposing the activities a and the groups y fixed, we perform tracklet association:

                        
                           (10)
                           
                              
                                 
                                    
                                       
                                          
                                             T
                                             ^
                                          
                                          =
                                          arg
                                          
                                             max
                                             G
                                          
                                          
                                             ∑
                                             
                                                i
                                                ,
                                                j
                                                ∈
                                                
                                                   E
                                                   a
                                                
                                             
                                          
                                          
                                             F
                                             x
                                          
                                          
                                             (
                                             
                                                x
                                                i
                                             
                                             ,
                                             
                                                x
                                                j
                                             
                                             ,
                                             y
                                             ,
                                             a
                                             )
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

Given the activities a, the groups y and the model parameter w, then for each match hypothesis (xi, xj
                     ), we can obtain an association score 
                        
                           
                              c
                              
                                 i
                                 j
                              
                           
                           =
                           −
                           
                              F
                              x
                           
                           
                              (
                              
                                 x
                                 i
                              
                              ,
                              
                                 x
                                 j
                              
                              ,
                              y
                              ,
                              a
                              )
                           
                        
                     . We use fij
                      ∈ {0, 1} to denote whether tracklet xi
                      and xj
                      are connected or not. Then the association problem can be transformed into a min-cost flow problem:

                        
                           (11)
                           
                              
                                 
                                    
                                       
                                          
                                             f
                                             ^
                                          
                                          =
                                          arg
                                          
                                             min
                                             f
                                          
                                          
                                             ∑
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             c
                                             
                                                i
                                                j
                                             
                                          
                                          ·
                                          
                                             f
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          s
                                          .
                                          t
                                          .
                                          
                                          
                                             f
                                             
                                                i
                                                j
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          ,
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                             ∑
                                             k
                                          
                                          
                                             f
                                             
                                                i
                                                k
                                             
                                          
                                          =
                                          
                                             ∑
                                             k
                                          
                                          
                                             f
                                             
                                                k
                                                i
                                             
                                          
                                          =
                                          1
                                          ,
                                          ∀
                                          
                                             x
                                             i
                                          
                                          ≠
                                          s
                                          ,
                                          t
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where s and t are the virtual source node and sink node, the constraints restrict the flow to satisfy the association constraint. We further restrict for each match hypothesis that they have to be within a spatiotemporal range and have the same activity label, thus largely limiting the number of potential hypothesis. This problem can be efficiently solved by binary integer programming. Once the flow variables f is specified, we can easily obtain the person tracks.


                     Step 2: Person track clustering; Supposing the activities a and the person tracks 
                        T
                      fixed, we perform clustering by optimizing:

                        
                           (12)
                           
                              
                                 
                                    
                                       
                                          
                                             y
                                             ^
                                          
                                          =
                                          arg
                                          
                                             max
                                             G
                                          
                                          {
                                          
                                             ∑
                                             
                                                i
                                                ,
                                                j
                                                ∈
                                                
                                                   E
                                                   t
                                                
                                             
                                          
                                          
                                             [
                                             
                                                F
                                                T
                                                a
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                ,
                                                
                                                   T
                                                   j
                                                
                                                ,
                                                
                                                   a
                                                   T
                                                
                                                )
                                             
                                             +
                                             
                                                F
                                                T
                                                c
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                ,
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             ]
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          +
                                          
                                             ∑
                                             
                                                i
                                                ,
                                                j
                                                ∈
                                                
                                                   E
                                                   g
                                                
                                             
                                          
                                          
                                             [
                                             
                                                F
                                                y
                                                a
                                             
                                             
                                                (
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   j
                                                
                                                ,
                                                
                                                   a
                                                   i
                                                
                                                ,
                                                
                                                   a
                                                   j
                                                
                                                )
                                             
                                             +
                                             
                                                F
                                                y
                                                c
                                             
                                             
                                                (
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   j
                                                
                                                )
                                             
                                             ]
                                          
                                          }
                                          .
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Given associated tracks from Step 1, we aim to cluster tracks 
                        T
                      into groups. Note that we only consider clustering person tracks with the same activity labels. As stated in Section 3.3, we restrict the track–track structure to be a tree, and the group–group structure to be a star graph, therefore the key step here is to connect proper tracks that is compatible with the merged groups. For a potential link hypothesis 
                        
                           (
                           
                              T
                              i
                           
                           ,
                           
                              T
                              j
                           
                           )
                           ,
                        
                      assume yi
                      and yj
                      are the corresponding belonged groups and yij
                      denotes the merged group of yi
                      and yj
                     , then we can compute the variation of the energy denoted as ΔF if these two tracks are connected:

                        
                           (13)
                           
                              
                                 Δ
                                 F
                                 =
                                 
                                    F
                                    T
                                 
                                 +
                                 
                                    F
                                    
                                       y
                                       
                                          i
                                          j
                                       
                                    
                                 
                                 −
                                 
                                    F
                                    
                                       y
                                       i
                                    
                                 
                                 −
                                 
                                    F
                                    
                                       y
                                       j
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              F
                              T
                           
                           =
                           
                              F
                              T
                              a
                           
                           
                              (
                              
                                 T
                                 i
                              
                              ,
                              
                                 T
                                 j
                              
                              ,
                              
                                 a
                                 T
                              
                              )
                           
                           +
                           
                              F
                              T
                              c
                           
                           
                              (
                              
                                 T
                                 i
                              
                              ,
                              
                                 T
                                 j
                              
                              )
                           
                           ,
                        
                      representing the intra-group potentials introduced by linking them, and 
                        
                           F
                           
                              y
                              i
                           
                        
                     
                     
                        
                           =
                           
                              ∑
                              
                                 i
                                 ,
                                 j
                                 ∈
                                 
                                    E
                                    g
                                 
                              
                           
                           
                              [
                              
                                 F
                                 y
                                 a
                              
                              
                                 (
                                 
                                    y
                                    i
                                 
                                 ,
                                 
                                    y
                                    j
                                 
                                 ,
                                 
                                    a
                                    i
                                 
                                 ,
                                 
                                    a
                                    j
                                 
                                 )
                              
                              +
                              
                                 F
                                 y
                                 c
                              
                              
                                 (
                                 
                                    y
                                    i
                                 
                                 ,
                                 
                                    y
                                    j
                                 
                                 )
                              
                              ]
                           
                           ,
                        
                      denoting all inter-group potentials related to group yi
                     . In this way, a positive ΔF suggests some interactions or correlations between these two tracks, while a negative one indicates that it is very likely they are from different groups. Therefore, we optimize the equation in (12) by iteratively linking two person tracks from different groups that have the maximum positive ΔF.


                     Step 3: Activity recognition: Supposing graph structure 
                        G
                      and groups y fixed, optimize the activities a.

                        
                           (14)
                           
                              
                                 
                                    a
                                    ^
                                 
                                 =
                                 arg
                                 
                                    max
                                    a
                                 
                                 
                                    {
                                    
                                       ∑
                                       
                                          i
                                          ,
                                          j
                                          ∈
                                          
                                             E
                                             g
                                          
                                       
                                    
                                    
                                       F
                                       y
                                       a
                                    
                                    
                                       (
                                       
                                          y
                                          i
                                       
                                       ,
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          a
                                          i
                                       
                                       ,
                                       
                                          a
                                          j
                                       
                                       )
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          ,
                                          j
                                          ∈
                                          
                                             E
                                             t
                                          
                                       
                                    
                                    
                                       F
                                       T
                                       a
                                    
                                    
                                       (
                                       
                                          T
                                          i
                                       
                                       ,
                                       
                                          T
                                          j
                                       
                                       ,
                                       
                                          a
                                          T
                                       
                                       )
                                    
                                    }
                                 
                              
                           
                        
                     
                  

The complexity of inferring activities a is related to the number of groups n. If n is small, then we can perform an exact inference by enumerating all possible configurations of a, otherwise, the exact inference is intractable. In this case, since the activities a are estimated on the relational graph, we employ a belief propagation algorithm to approximately solve it. Particularly, we iteratively optimize one activity given all the other variables until converged.

Given a set of N training videos (x
                     
                        n
                     , y
                     
                        n
                     , a
                     
                        n
                     ), 
                        
                           (
                           n
                           =
                           1
                           ,
                           …
                           ,
                           N
                           )
                           ,
                        
                      where x is a set of extracted tracklets, and (y, a) is the labeled activity groups. Note that we only label whether the tracklet belongs to the group or not, but do not intend to label which tracklet should be associated to. The association relations between tracklets are latent variables, which are dynamically inferred. We train the model parameter w to obtain the correct groups y and activity labels a. We adopt the latent SVM [48] formulation to train this model, which in our case can be written as follows:

                        
                           (15)
                           
                              
                                 
                                    
                                       
                                          w
                                          *
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          arg
                                          
                                             min
                                             w
                                          
                                          {
                                          
                                             1
                                             2
                                          
                                          
                                             ∥
                                             w
                                             |
                                          
                                          
                                             
                                                |
                                             
                                             2
                                          
                                          −
                                          C
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                             
                                                w
                                                T
                                             
                                             ψ
                                             
                                                (
                                                
                                                   x
                                                   i
                                                
                                                ,
                                                
                                                   G
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   a
                                                   i
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          
                                          C
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                             max
                                             
                                                (
                                                
                                                   y
                                                   ^
                                                
                                                ,
                                                
                                                   G
                                                   ^
                                                
                                                ,
                                                
                                                   
                                                      a
                                                      )
                                                   
                                                   ^
                                                
                                             
                                          
                                          
                                             [
                                             
                                                w
                                                T
                                             
                                             ψ
                                             
                                                (
                                                
                                                   x
                                                   i
                                                
                                                ,
                                                
                                                   
                                                      
                                                         G
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                ,
                                                
                                                   
                                                      
                                                         y
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                ,
                                                
                                                   
                                                      
                                                         a
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                )
                                             
                                             +
                                             Δ
                                             
                                                (
                                                
                                                   y
                                                   i
                                                
                                                ,
                                                
                                                   
                                                      y
                                                      ^
                                                   
                                                   i
                                                
                                                ,
                                                
                                                   
                                                      G
                                                      ^
                                                   
                                                   i
                                                
                                                ,
                                                
                                                   a
                                                   i
                                                
                                                ,
                                                
                                                   
                                                      a
                                                      ^
                                                   
                                                   i
                                                
                                                )
                                             
                                             ]
                                          
                                          }
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where C controls the tradeoff betwen the errors in the training model and margin maximization, and 
                        
                           Δ
                           
                              (
                              y
                              ,
                              
                                 y
                                 ^
                              
                              ,
                              
                                 G
                                 ^
                              
                              ,
                              a
                              ,
                              
                                 a
                                 ^
                              
                              )
                           
                        
                      is the loss function. Naturally, this function need penalize both incorrect groups and incorrect activity labels. We define it as follows:

                        
                           (16)
                           
                              
                                 
                                    
                                       
                                          Δ
                                          (
                                          y
                                          ,
                                          
                                             y
                                             ^
                                          
                                          ,
                                          
                                             G
                                             ^
                                          
                                          ,
                                          a
                                          ,
                                          
                                             a
                                             ^
                                          
                                          )
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             n
                                             
                                                (
                                                y
                                                )
                                             
                                             −
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      E
                                                      x
                                                   
                                                
                                             
                                             
                                                l
                                                x
                                             
                                             
                                                (
                                                y
                                                ,
                                                a
                                                ,
                                                
                                                   x
                                                   i
                                                
                                                ,
                                                
                                                   x
                                                   j
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          −
                                          
                                             ∑
                                             
                                                i
                                                ,
                                                j
                                                ∈
                                                
                                                   E
                                                   t
                                                
                                             
                                          
                                          
                                             l
                                             t
                                          
                                          
                                             (
                                             y
                                             ,
                                             a
                                             ,
                                             
                                                T
                                                i
                                             
                                             ,
                                             
                                                T
                                                j
                                             
                                             )
                                          
                                          ,
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                       
                                    
                                 
                              
                           
                        
                     where n(y) is the difference of the number of nodes and the number of groups. The function 
                        
                           
                              l
                              x
                           
                           
                              (
                              y
                              ,
                              a
                              ,
                              
                                 a
                                 ^
                              
                              ,
                              
                                 x
                                 i
                              
                              ,
                              
                                 x
                                 j
                              
                              )
                           
                        
                      returns 1 if tracklet xi
                      and xj
                      belong to the same group with the correct activity, otherwise returns 
                        
                           −
                           1
                        
                     . Similarly, 
                        
                           
                              l
                              t
                           
                           
                              (
                              y
                              ,
                              a
                              ,
                              
                                 T
                                 i
                              
                              ,
                              
                                 T
                                 j
                              
                              )
                           
                        
                      returns 1 when all tracklets within the tracks 
                        
                           T
                           i
                        
                      and 
                        
                           T
                           j
                        
                      belong to the same group with the correct activity, otherwise returns 
                        
                           −
                           1
                        
                     . It is easy to show that such a loss function equals zero if and only if the individuals are clustered into correct groups and with correct activities.

@&#EXPERIMENTS@&#

In this section, we present our experiments on five datasets, and evaluate our approach in two aspects: activity recognition and activity group localization.

We evaluate our method on two Collective Activity Datasets from [9,10], New Collective Activity Dataset [36], UCLA Courtyard Dataset [12], and a newly recorded Touring Collective Dataset collected by ourselves. Unlike other datasets such as CAVIAR, KTH, UIUC, or UT-Interaction that contain either a single person or a few numbers of people performing activities in unnatural and constrained scenes, these public datasets capture various types of co-occurring collective activities under realistic conditions, thus are very suitable for evaluating our group activity localization.


                           Collective Activity Datasets can be splitted into two parts. The first one consists of 44 video clips, in which five activities are defined: crossing, walking, queuing, talking and waiting. The second is an extended dataset of the first one, which includes two more classes of dancing and jogging but removes the ill-defined walking class. Therefore, there are six types of activities in the second dataset. We refer these two Collective Activity Datasets as 5-class CAD and 6-class CAD, respectively. The annotations of bounding boxes of each person with poses and activity classes are provided every 10th frame. Since in this paper, we focus on localizing activity groups based on tracklets, we first apply the detector-based tracker in [49] to these two datasets to generate tracklets, and then annotate the group label of each tracklet. The activity of each group is labeled according to datasets’ annotations. Since previous works adopt different ways of training/testing scheme as well as the calculation of the activity classification accuracy, for fair comparisons, we adopt their respective experimental setups and report corresponding results.


                           New Collective Activity Dataset (New-CAD) is composed of 32 videos showing 6 collective activities: gathering, talking, dismissal, walking, chasing and queuing. The group labels are annotated for each tracklets obtained by our tracker [49] while the group activity type is labeled according to the activity annotations provided by Choi and Savarese [36]. The dataset is divided into 3 subsets, and we use 2/3 for training and the remaining 1/3 for testing as described in [36].


                           UCLA Courtyard Dataset (UCLA-CD) consists of a 106 min, 30 fps, 2560 × 1920-resolution video footage. Different from the previous three datasets, there are multiple co-occurring activity groups in the scene and it provides annotations of locations of activity groups. In this dataset, 6 group activities are defined: walking, standing, discussing, sitting, waiting, and guided tour). Since the scene is quite complex, we not only apply the tracker in [49] to generate tracklets, but also use the background subtraction in [50] to first obtain the foreground objects, and then associate them based on spatial locations and appearance similarity (HOG [27]) to obtain foreground tracklets. We use half of the dataset for training and the other half for testing.


                           Touring Collective Dataset (Tour-CD) is composed of 52 video clips, each having 800 to 1000 frames. Typical collective activities include walking, bicycling, taking photos, standing, and talking. This dataset is captured in outdoor touring environments, showing multiple concurrent events with long spatial and temporal ranges. Using the tracker in [49] and background subtraction method in [50] to obtain tracklets, we annotate the group label for each tracklet and the activity type for each group. We split the dataset into four subsets and perform a 4-fold training and testing.

We stress that our objective is to localize activity groups, and to demonstrate the effectiveness of our approach, two aspects are evaluated: activity recognition and group localization. For activity recognition evaluation, the classification accuracies of group activity are calculated on the 5-class CAD, 6-class CAD and New-CAD according to the public annotations. On the UCLA-CD, we follow the method in [41] and evaluate group activity detection performance in terms of precision and false positive rate. In addition, 4560 frames are selected from Tour-CD including 5067 walking people, 3126 bicycling people, 3228 taking photos people, 3850 standing people, 3027 talking people. We assign each individual with the same activity label of the group it belongs to, and calculate a per-person activity classification accuracy. As for the evaluation of activity group localization, we compute a ratio of the intersection and union of the detected and ground-truth bounding boxes in all frames of the spatiotemporal group. A correct activity group is declared if the activity label is correct, and the ratio exceeds 0.5.

We analyze the behavior of our model by disabling the connectivity between various variables of the relational graph. To further demonstrate the performance of our relational structure, we construct three baselines with different graph structures representing relations among people. As shown in Fig. 4, unary person links each person to its neighbors within an Euclidean distance. sparse link adopts the structure proposed in [13]. In particular, they tend to find sparse but important links between persons by maximizing the summation of all pairwise activity potential under a maximum limitation of each vertex’s degree. Unary group models intra-group relations as a tree, but ignores the relations among groups. All of these three baselines adopt a structured SVM framework based on the intra-group action feature descriptor (Section 3.2). Since tracklet association is not integrated in the baselines, the feature is computed over tracklets rather than person tracks.


                           Table 1
                            summarizes the results (we report the overall
                            accuracy). Our full model achieves the best performances. We observe a large performance degradation when the links between groups are removed, which suggests the importance of modeling inter-group compatibilities. Our model significantly outperforms all baselines with respect to all the five datasets. The unary person model is almost unachievable, especially in a more complex scenario of the UCLA-CD and Tour-CD. This can be attributed to the unstructured context, drawing all persons nearby as context information introduces much noise as well as irrelevant persons. Compared to the unary person model, unary group model and sparse link model achieve a large improvement, which further proves the effect of modeling the relations among participants. We can also see that sparse link has a  7% higher performance compared to unary group model. It is quite reasonable, since unary group model imposes quite a few links on the relations while sparse link model might find multiple important pairwise relations. In comparisons to these three baselines, our full model has a significant boost of performance, showing the advantage of integrating groups into activity recognition and modeling pairwise group relations.

Since inter-group relations prove important for group activity recognition, we further analyze the model by varying the spatiotemporal range for the star graph that represents inter-group relations. The results are shown in Fig. 7
                           . It is obvious that a larger range would lead to more connections between groups, which can thus obtain more accurate results. But on the other hand, it would also increase the difficulty of inference due to the complex graph structure.

We also give the learnt pairwise weights across different activity groups and the confusion matrixes in Figs. 5 and 6. The learnt weights are able to
                           
                            characterize some scene information, which further demonstrates the benefits of including pairwise group relations. For example, walking groups are more likely to be co-existed with crossing groups, while queuing groups tend to appear alone. Standing groups have high co-occurrences with taking photos groups, which is reasonable since standing people often are waiting to take photos of the scenery.

We make quantitative comparisons with other state-of-the-art approaches on the four public datasets, including the hierarchical random field method in [42], a spatiotemporal AND-OR graph model in [41], a hierarchical graph model integrating tracking, interaction, atomic activity and group activity in [36], a joint tracking and recognition model in [38], and a discriminative latent model in [13].

For fair comparisons, we adopt three different training/testing schemes as well as the evaluation strategies used in the literature on the 5-class CAD. Choi et al. [9,10] and Khamis et al. [38,39] adopt a leave-one-video-out training/testing scheme and evaluate per-person collective activity classification. Amer et al. [12,41] use all 75 video clips from 5-class CAD and 6-class CAD (walking activity is not removed), and then use 2/3 and 1/3 of the videos from each class for training and testing. In addition, works in [11,13,36,42] train the model on three forth of the dataset, test on the remaining fourth and evaluate per-frame collective activity classification (they assign each frame into one of the five activity labels, by taking the majority of actions of persons in that frame). We therefore run our full model using leave-one-video-out (full-1), three-fold (full-3), and four-fold (full-4) schemes respectively. For the other three datasets, we adopt their respective validation schemes.


                           Tables 2 and 3 summarize the comparisons of our model with other methods on 5-class CAD, 6-class CAD, and New-CAD. We can see that, our approach outperforms the methods in [13,36,39,41] and achieves competitive results with the recent work in [42]. Specifically, our model obtains a per-person accuracy of 76.8% and 87.9% on the 5-class CAD and 6-class CAD, which is superior than 72.0% and 85.8% reported in [39] and 74.4% in [36]. On the 5-class CAD and New-CAD, we report 89.4% and 87.5% accuracies, about 2% higher compared to AND-OR graph models in [12] and [41]. Our model does not perform as well as HiRF [42] on the 5-class CAD. We believe this is because this dataset mostly shows one single activity group per video (only walking co-exists with other types of activities, but walking is ill-defined). Consequently, group–group relations are not properly integrated and cannot help to improve the performance (sometimes learned inter-group relations like walking to crossing even hurt the performance). However, on the New-CD that shows multiple concurrent events, our approach can achieve competitive results (87.5% compared to 87.3% reported in [42]). We also give the precision and false positive rate of UCLA-CD in Table 4, we can see that our model can achieve a better performance than the AND-OR graph model in [41].

To demonstrate the effective of our model in a more complex scenario, we re-implement the adaptive structured latent SVM method in [13], and achieve 63.2% accuracy on Tour-CD, which is 9.9% lower than our performance.

In this part, we evaluate our model for the task of activity
                        
                        
                         group localization. In order to investigate the capability of our model to localize activity groups, we construct two step-wise baselines: (a) we estimate the activity label of each person (use the re-implemented version of [13] based on the action feature of tracklets), followed by a mean-shift clustering algorithm (activity-cluster), and (b) we remove all terms that related to activities in Eq. (1), to formulate a clustering method based on only the contextual feature descriptors, and then use a multi-class SVM to classify the activity of each group using the max-pooled AC descriptors within each group (cluster-activity).

As Fig. 8 shows, our model achieves a significant improvement with respect to all activity groups over [43] as well as two baselines. Such good performance resides in not only explicit activity inference but also the pairwise group relations modeling. The first baseline is a conventional step-wise method to localize activity groups. It clearly suffers from the unreliable activity recognition. The second baseline, on the other hand, attempts to first cluster the groups and then to recognize their respective activities, of which the poor performance implies that clustering on visual cues is not sufficient. By incorporating activity recognition, in some way, our model helps to identify discriminative part of the group with respect to its activity.

We visualize the activity group localization results and the learned structure among participants in Figs. 9–11. Some interesting inner group tree structures are learnt, like a chain structure which connects all people for queuing activity, one or two connections between people facing each other for talking and short links between people nearby having similar standing pose for waiting. As can be seen from Fig. 9, this kind of structure reveals some discriminative relations (e.g. facing each other links in talking) and disregards irrelevant ones, and also mitigates the impact from occlusions by only linking the overlapped person to another person (e.g. overlapped person in crossing). Furthermore, our model, unlike previous approaches that often attempt to recognize the dominant activities, favors seeing different activity groups, thus can effectively disambiguate non-dominant activities such as person walking by a talking scenario and is more suitable for complex scenes.

@&#CONCLUSIONS@&#

In this paper, we aim at activity group localization in videos, which includes two distinct but related tasks: group localization and activity recognition. Instead of solving them in isolation, we seek to simultaneously associate tracklets, cluster person tracks, and recognize activities on the spatiotemporal group level. A hierarchical relational graph that encodes rich relations among people is proposed to unify all these tasks, which is dynamically inferred in our model.

We demonstrated that the incorporation of group information and tracklet association helps to classify group activities, and it is especially useful for structure-rich activities. With context structured by the relational graph, our proposed model can achieve competitive results comparing with the state-of-the-art approaches using three different validation schemes. In turn, the activity group localization accuracy is also significantly improved by jointly inferring the activities. Experiments on five datasets show that our model is capable of observing some high-level co-occurrences of different groups with respect to their activity labels, and some promising structures within an activity group can be learnt as well.

@&#ACKNOWLEDGMENTS@&#

This work is supported in part by the 973 Program of China under Grant No. 2011CB302203.

@&#REFERENCES@&#

