@&#MAIN-TITLE@&#Shared RFID ownership transfer protocols

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a shared RFID ownership transfer protocol without the trusted third party.


                        
                        
                           
                           A group of users can share the ownership of a tag with high security.


                        
                        
                           
                           The group key size is constant regardless of the number of group users.


                        
                        
                           
                           We provide the formal definition of shared ownership transfer system.


                        
                        
                           
                           We prove the security of the shared ownership transfer protocol.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

RFID security

Ownership transfer

Security protocol

@&#ABSTRACT@&#


               
               
                  Radio Frequency Identification (RFID) has been widely adopted in practice for objects identification. The ownership of an object can be represented by the ownership of the RFID tag attached to the object. An ownership could be shared among different parties and should be transferable. Although many RFID ownership transfer protocols were proposed, a shared ownership transfer protocol remains as a daunting task with absence of a trusted party. In this paper, we propose the first provably secure shared ownership transfer protocol, which requires merely hashing computations and has a constant key size.
               
            

@&#INTRODUCTION@&#

A Radio Frequency Identification (RFID) tag could be owned by two parties. As an example, two people jointly own (and hence, share the ownership of) a car with an RFID tag. Either of them can show the partial ownership of the car, but neither of them can sell the car without the agreement of the other, since he/she is not entitled to sell the car solely based on his/her will, without the other party's consent. Unfortunately, traditional RFID ownership transfer (ROT for short) protocols (e.g., [6,5,14,7,12]) do not capture this kind of application. We call an RFID ownership transfer protocol, which supports multiple owners as a shared RFID ownership transfer (SROT for short) protocol.

Intuitionally, an SROT protocol consists of two phases, namely ownership verification and ownership transfer. In the first phase, the current owners jointly prove their ownership of the tag and the potential (new) owners verify the ownership proof. If the verification outputs true, subsequently they request an ownership transfer in the second phase. Upon the completion of a successful transfer, the current owners become previous owners and cannot interpret any further communications of the tag anymore. The new owners become current owners of the tag. The SROT protocol provides the forward secrecy, which means that the current owner cannot recover the previous communication flows.

SROT protocols should possess three properties: secure ownership, exclusive ownership and secure ownership transfer 
                     [3]. These properties are also considered in ROT, but the attackers of SROT protocols are more powerful than the attackers of ROT protocols, where a dishonest subgroup of current owners can launch collusion attacks.

Passive RFID tags have a very limited computational power. Usually, a tag can only cope with symmetric-key cryptography. The size of non-volatile memory of a tag is normally only several hundred bits; therefore it is not possible to store cryptographic keys for each owner. The power of tag is also not sufficient to support a large memory. Furthermore, passive tags are not tamper-resistant. An attacker can physically disclose a tag and read/write its internal state.

The ownership transfer protocols for RFID systems can be modeled using either a trusted third party (TTP) based model or two-party model [17]. In the TTP based model, the solution is trivial, since the proof of ownership can be provided by the TTP, who can even transfer the ownership to new owners on behalf of current owners. However, this system model requires the availability of TTP, which can interact with owner and tag, during the ownership transfer (e.g., [13,9]). This model is undesired due to the scalability problem, because a TTP may need to simultaneously participate in a number of ownership transfers. To eliminate this problem, we adopt an extended two-party model. In this model, there are two types of owners, namely the current owner and the new owner. Specifically, it does not require the presence of TTP and supports multiple current/new owners.

In symmetric-key based single-owner ownership transfer protocols, the owner shares an authentication key with the tag. In a multi-owner scenario, each valid owner also shares an authentication key with the tag, while we found some new security issues:
                           
                              1.
                              
                                 Collusion attack: A trivial solution for multi-owner ownership transfer is that owners share the same key with the tag. However, a dishonest owner can use the knowledge of key to change the secret of tag without the agreement of other owners, therefore, he can claim that he is the only owner of the tag. We consider that at most n
                                 −1 dishonest owners could launch such an attack, where n is the number of owners.


                                 Key size: To resist the collusion attack in the extended two-party model, each owner can share a separate key with the tag. However, the number of keys to be stored on the tag could become a burden to the tag.


                                 Computational capacity: An alternative solution to collusion attacks is to adopt public key cryptography, which allows the keys to be accumulated into a constant size. Unfortunately, it is too heavy to passive tags.


                                 Corruption attack: Most (passive) tags are not tamper-resistant. A powerful attacker can read the state of a tag [18,22]. It is particularly a problem if only the symmetric key cryptography is applied.

We propose the first shared RFID ownership transfer protocol based on the extended two-party model. It does not require a trusted third party and therefore differs from the shared ownership transfer protocol described in [10].

We provide the formal definition of shared ownership transfer and its security model, which captures active attacks such as the collusion attack and corruption attack. Any attack to the SROT protocols could be considered in a collusion fashion. We prove that our protocol is secure in our security model.

In our protocol, the keys stored in a tag have a constant size regardless of the number of owners. It only needs to execute the hashing calculation (e.g., [19]).

Our protocol is secure against corruption attacks. We adopt both symmetric and asymmetric key cryptographic algorithms in order to achieve the desirable security. The computationally more powerful owners are responsible for the computation of asymmetric key cryptography, while the tags only require handling very light hashing operations [5].

The rest of this paper is organized as follows. In Section 2, we review related work in the literature. The mathematical preliminaries and notions are given in Section 3. The system model and the definition of SROT protocols are presented in Section 4. In Section 5, we describe the concrete construction of our protocol. A security model of SROT protocols is given in Section 6, followed by the security proof in Section 7. Section 8 concludes the paper.

@&#RELATED WORK@&#

Saito, Imamoto and Sakurai [17] proposed an RFID ownership transfer protocol in the two-party model, where the protocol assumes the current owner and the new owner who plays an ownership transfer game with the tag. The communication between owner and tag is assumed in a backward channel [23]. However, this assumption is questionable in that the adversary can eavesdrop the channel in a sufficient short range [17].

Another two-party ownership transfer protocol, based on [21], was introduced by Song [20]. The protocol intends to satisfy privacy and security requirements of ownership transfer. It reduces the cost of tag's computation and tag's non-volatile memory. Unfortunately, several attacks were found [4,16,15]. In addition, once a tag is compromised, its privacy and security are totally broken.

An ownership transfer protocol using both symmetric and asymmetric cryptography was put forth by Elkhiyaoui, Blass and Molva [5]. Each owner has a public/private key pair and a symmetric key which is shared with the tag. During a tag authentication process, the private key is used to decrypt ciphertext received from the tag. The tag will be accepted if the related plaintext matches that on the database. A feature of this scheme is that the tag does not have to deal with asymmetric computations. However, the privacy of tag is vulnerable if the adversary is one of previous owners [1].

Kapoor, Zhou and Piramuthu [10] presented a solution of shared ownership transfer with a TTP. A group of owners share the same authentication key with the tag and the tag also shares a key, which is unknown to owners, with the TTP. During the period of ownership transfer, the TTP needs to interact with the tag and update the tag key for a group of new owners. It is insecure against the corruption attack described in Section 1.1. The authors also proposed an ownership sharing protocol in the two-party model. Current owners share the ownership of tag with new owners so that both current owners and new owners can access the tag after a “transfer”. Since owners share the same authentication key, a subgroup of owners can launch a collusion attack against other owners.

We give the definitions of some mathematical preliminaries and notions which will be used throughout this paper.

Let 
                           
                              G
                              1
                           
                        , 
                           
                              G
                              2
                           
                         and 
                           
                              G
                              T
                           
                         be three multiplicative cyclic groups of the same prime order p. g and h are generators of 
                           
                              G
                              1
                           
                         and 
                           
                              G
                              2
                           
                        , respectively. The map 
                           e
                           :
                           
                              G
                              1
                           
                           ×
                           
                              G
                              2
                           
                           →
                           
                              G
                              T
                           
                         is a bilinear mapping (pairing).

Let ψ be a computable isomorphism from 
                           
                              G
                              2
                           
                         to 
                           
                              G
                              1
                           
                         that ψ(h)=
                        g. A bilinear pairing satisfies the properties as follows:
                           
                              •
                              Bilinearity: for all 
                                    g
                                    ∈
                                    
                                       G
                                       1
                                    
                                 , 
                                    h
                                    ∈
                                    
                                       G
                                       2
                                    
                                  and a,b
                                 ∈ℤ
                                    p
                                 
                                 ⁎, we have the equation e(g
                                 
                                    a
                                 ,h
                                 
                                    b
                                 )=
                                 e(g,h)
                                    ab
                                 .

Non-degeneracy: for all 
                                    g
                                    ∈
                                    
                                       G
                                       1
                                    
                                 , 
                                    h
                                    ∈
                                    
                                       G
                                       2
                                    
                                 , if g, h are generators respectively, we have e(g,h)≠1 is a generator of 
                                    
                                       G
                                       T
                                    
                                 .

Efficiency: There is an efficient algorithm to calculate e(g,h) for all 
                                    g
                                    ∈
                                    
                                       G
                                       1
                                    
                                 , 
                                    h
                                    ∈
                                    
                                       G
                                       2
                                    
                                 .


                        
                           Definition 1
                           Merkle tree


                           
                              A binary Merkle tree based on a hash function H is a binary tree which satisfies the following conditions:
                                 
                                    •
                                    
                                       For each label L of a leaf, there is a preimage m, such that L
                                       =
                                       H(m).


                                       For each label N of an intermediate node, it is a hashing of its left L
                                       1 
                                       and right L
                                       2 
                                       children, such that N
                                       =
                                       H(L
                                       1,L
                                       2).


                              We say that a path 
                              
                                 P
                                 =
                                 
                                    
                                       L
                                       1
                                    
                                    
                                       N
                                       0
                                    
                                    
                                       N
                                       1
                                    
                                    ⋯
                                    
                                       N
                                       i
                                    
                                 
                               
                              is a sibling path of a leaf L
                              1 
                              if it consists of labels of all siblings of nodes on the path from L
                              1 
                              to the root, where i is the height of the Merkle tree, and the root value of Merkle tree is the same as the value computed on 
                              
                                 P
                              .


                        
                           Definition 3
                           Preimage resistant assumption


                           
                              Given a hash function H, for any input message m that h
                              =
                              H(m), we say that H is preimage resistant if there is no PPT algorithm 
                              
                                 A
                               
                              can find the message m with advantage at least ε, which is negligible.

The BLS signature scheme [2] is briefly summarized as follows,
                           
                              •
                              BLS.KeyGen: Randomly select 
                                    x
                                    
                                       ←
                                       $
                                    
                                    
                                       ℤ
                                       p
                                       *
                                    
                                  and compute gx
                                 . The public/private key pair is (pk,sk)=(g
                                 
                                    x
                                 ,x).


                                 
                                    B
                                    L
                                    S
                                    .
                                    S
                                    i
                                    g
                                 : Given a message m
                                 ∈{0,1}*, compute signature σ
                                 =
                                 H(m)
                                    x
                                 , where H is a full-domain hash function defined in the BLS scheme.

BLS.Verify: Given a message–signature pair (m,σ) and a public key pk, check 
                                    e
                                    
                                       
                                          p
                                          k
                                          ,
                                          H
                                          
                                             m
                                          
                                       
                                    
                                    
                                       =
                                       ?
                                    
                                    e
                                    
                                       g
                                       σ
                                    
                                 .

The notations used in this paper are depicted in Table 1
                        .

In this section, we present the formal definition of SROT protocols in the extended two-party model.

A shared RFID ownership transfer scheme defines the following components: Tags, Previous Owners, Current Owners and New Owners. According to the knowledge of tag's secret, an owner can be considered as a previous owner, current owner or new owner in different periods.
                        
                           •
                           
                              Tags Ti
                              : A low-cost device which has a small storage and restricted computational capacity. A tag stores its current state si
                               in a non-volatile memory and can handle hashing.


                              Previous Owners 
                              
                                 
                                    O
                                    t
                                    p
                                 
                              : 
                                 
                                    O
                                    t
                                    p
                                 
                               is a set of previous owners of the tag Ti
                              . A previous owner is the one who previously has a partial ownership of the tag or a full ownership if there is only one owner.


                              Current Owners 
                              
                                 
                                    O
                                    t
                                    c
                                 
                              : 
                                 
                                    O
                                    t
                                    c
                                 
                               is a set of current owners of the tag Ti
                              . Each current owner shares the same long-term authentication key K which allows O
                              
                                 t,i
                              
                              
                                 c
                               to generate temporary keys and prove its partial ownership and authenticate tag Ti
                              . All current owners can cooperatively transfer the full ownership to a new owner.


                              New Owners 
                              
                                 
                                    O
                                    t
                                    n
                                 
                              : 
                                 
                                    O
                                    t
                                    n
                                 
                               is a set of new owners who intend to obtain the full ownership of tag Ti
                               from the current owners. A new owner O
                              
                                 t,i
                              
                              
                                 n
                               challenges all current owners to get the proof of ownership of Ti
                               and requires the full ownership transfer. A new owner can update the long-term key once the transfer is completed.

A shared ownership transfer is run among the target tag, current owners and new owners. Current owners initiate a tag with the agreement of a shared state. A new owner sends the ownership transfer request and checks the current ownership prior to playing the transfer. Since owners are normally powerful roles, a secure communication channel is supported during the communication between owners. Our scheme consists of nine algorithms: system setup (Setup), key generation (KeyGen), tag initiation (TagInit), temporary key generation (TKGen), partial ownership prove (PartProve), full ownership prove (FullProve), ownership verify (Verify), ownership transfer (Transfer) and key update (KeyUpd). Current owners, new owners and the tag run the above algorithms as described in Fig. 1
                     . The definition of algorithms are depicted as follows.
                        
                           •
                           
                              
                                 S
                                 e
                                 tup
                                 
                                    λ
                                 
                                 →
                                 params
                              : On input a system security parameter λ, the algorithm outputs a set of public system parameters params.


                              
                                 K
                                 e
                                 y
                                 G
                                 e
                                 n
                                 
                                    
                                       params
                                       ,
                                       I
                                       
                                          D
                                          t
                                       
                                       ,
                                       
                                          O
                                          t
                                          c
                                       
                                    
                                 
                                 →
                                 
                                    K
                                    
                                       K
                                       u
                                    
                                    
                                       
                                          s
                                          
                                             k
                                             i
                                          
                                       
                                    
                                    
                                       
                                          A
                                          i
                                       
                                    
                                 
                              : On input public system parameters params, an identity IDt
                               of a tag and a set of current owners 
                                 
                                    O
                                    t
                                    c
                                 
                              , the algorithm outputs a long-term authentication key K, an update key Ku
                              , a set of private keys {ski
                              } and a set of auxiliary parameters {Ai
                              } of proof of ownership. It is run by the current owners.


                              
                                 TagI
                                 n
                                 it
                                 
                                    
                                       T
                                       ,
                                       K
                                       ,
                                       
                                          K
                                          u
                                       
                                       ,
                                       I
                                       
                                          D
                                          t
                                       
                                    
                                 
                                 →
                                 s
                              : On input a tag T, a long-term authentication key K, an update key Ku
                               and an identity IDt
                               of T, the algorithm outputs and stores the state s on tag T. It is run by the current owners.


                              
                                 T
                                 K
                                 G
                                 e
                                 n
                                 
                                    T
                                    
                                       O
                                       
                                          t
                                          ,
                                          i
                                       
                                       c
                                    
                                    K
                                    
                                       A
                                       i
                                    
                                 
                                 →
                                 
                                    
                                       L
                                       
                                          i
                                          ,
                                          1
                                       
                                       ′
                                    
                                    
                                       K
                                       T
                                    
                                 
                              : On input a tag T, a current owner O
                              
                                 t,i
                              
                              
                                 c
                              , a long-term authentication key K and auxiliary parameters Ai
                              , the algorithm outputs a pair (
                                 
                                    L
                                    
                                       i
                                       ,
                                       1
                                    
                                    ′
                                 
                              ,K
                              
                                 T
                              ), where KT
                               is a temporary authentication key. It is run by the tag and a current owner.


                              
                                 PartPorv
                                 e
                                 
                                    
                                       T
                                       ,
                                       
                                          O
                                          
                                             t
                                             ,
                                             i
                                          
                                          c
                                       
                                       ,
                                       
                                          O
                                          n
                                       
                                       ,
                                       K
                                       ,
                                       I
                                       
                                          D
                                          t
                                       
                                       ,
                                       s
                                       
                                          k
                                          i
                                       
                                       ,
                                       
                                          A
                                          i
                                       
                                    
                                 
                                 →
                                 σ
                              : On input a tag T, a current owner O
                              
                                 t,i
                              
                              
                                 c
                              , a set of new owners 
                                 
                                    O
                                    n
                                 
                              , a long-term authentication key K, a tag's identity IDt
                              , a private key ski
                               and auxiliary parameters Ai
                              , the algorithm outputs a proof σ of partial ownership of T. It is run by a tag, a current owner and new owners.


                              
                                 FullProv
                                 e
                                 
                                    
                                       T
                                       ,
                                       
                                          O
                                          t
                                          c
                                       
                                       ,
                                       
                                          O
                                          n
                                       
                                       ,
                                       K
                                       ,
                                       I
                                       
                                          D
                                          t
                                       
                                       ,
                                       
                                          
                                             s
                                             
                                                k
                                                i
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             A
                                             i
                                          
                                       
                                    
                                 
                                 →
                                 Σ
                              : On input a tag T, a set of current owners 
                                 
                                    O
                                    t
                                    c
                                 
                              , a set of new owners 
                                 
                                    O
                                    n
                                 
                              , a long-term authentication key K, an identity IDt
                               of T, a set of private keys {ski
                              } and a set of auxiliary parameters {Ai
                              }, the algorithm outputs a full ownership proof Σ of the tag. It is run by a tag, current owners and new owners.


                              
                                 V
                                 e
                                 rify
                                 
                                    
                                       T
                                       ,
                                       
                                          O
                                          n
                                       
                                       ,
                                       σ
                                       ,
                                       I
                                       
                                          D
                                          t
                                       
                                    
                                 
                                 →
                                 
                                    0
                                    ,
                                    1
                                 
                              : On input a tag T, a proof σ of partial ownership of T, a set of new owners 
                                 
                                    O
                                    n
                                 
                              , an identity IDt
                               of tag, the algorithm outputs 1 if the proof is valid, outputs 0 otherwise. It is run by a tag and new owners.


                              
                                 T
                                 r
                                 a
                                 n
                                 s
                                 f
                                 e
                                 r
                                 
                                    T
                                    
                                       O
                                       t
                                       c
                                    
                                    
                                       O
                                       n
                                    
                                    K
                                    
                                       K
                                       u
                                    
                                    
                                       
                                          s
                                          
                                             k
                                             i
                                          
                                       
                                    
                                    
                                       
                                          A
                                          i
                                       
                                    
                                 
                                 →
                                 
                                    R
                                    
                                       O
                                       t
                                       n
                                    
                                 
                              : On input a tag T, a set of current owners 
                                 
                                    O
                                    t
                                    c
                                 
                              , a set of new owners 
                                 
                                    O
                                    n
                                 
                              , a long-term authentication key K, an update key Ku
                              , a set of private keys {ski
                              } and a set of auxiliary parameters {Ai
                              } of the proof of ownership, the algorithm outputs a record of full ownership transfer R and transfers the ownership to new owners 
                                 
                                    O
                                    t
                                    n
                                 
                              . It is run by a tag, current owners and new owners.


                              
                                 K
                                 e
                                 yUpd
                                 
                                    T
                                    
                                       O
                                       t
                                       c
                                    
                                    K
                                    
                                       K
                                       u
                                    
                                    
                                       
                                          s
                                          
                                             k
                                             i
                                          
                                       
                                    
                                    
                                       
                                          A
                                          i
                                       
                                    
                                 
                                 →
                                 
                                    
                                       
                                          K
                                          ′
                                       
                                       
                                          K
                                          u
                                          ′
                                       
                                       
                                          
                                             s
                                             
                                                k
                                                i
                                                ′
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             A
                                             i
                                             ′
                                          
                                       
                                    
                                 
                              : On input a tag T, a set of current owners 
                                 
                                    O
                                    t
                                    c
                                 
                              , a long-term authentication key K, an update key Ku
                              , a set of private keys {ski
                              } and a set of auxiliary parameters {Ai
                              } of the proof of ownership, the algorithm outputs a new long-term authentication key K′, a new update key K
                              
                                 u
                              ′, a new set of private keys {sk
                              
                                 i
                              
                              ′} and a new set of auxiliary parameters {A
                              
                                 i
                              
                              ′} of proof of ownership. It is run by a tag and current owners.

The concrete construction of our protocol is presented in this section. The construction in Section 5.1 shows the situation that there are only two owners for a single tag, while our protocol is extendible to a current owner group which contains 1,2,⋯,n owners.


                        
                           
                              •
                              Setup: Select two cryptographic hash functions H
                                 1
                                 :{0,1}*→{0,1}
                                    l
                                  and 
                                    
                                       H
                                       2
                                    
                                    :
                                    
                                       G
                                       2
                                    
                                    ×
                                    ℕ
                                    ×
                                    
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                       
                                       *
                                    
                                    →
                                    
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                       
                                       l
                                    
                                 , where l is a security parameter. 
                                    H
                                    :
                                    
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                       
                                       *
                                    
                                    →
                                    
                                       G
                                       1
                                    
                                  is a hash function defined in the BLS signature scheme. Let e be a bilinear map such that 
                                    e
                                    :
                                    
                                       G
                                       1
                                    
                                    ×
                                    
                                       G
                                       2
                                    
                                    →
                                    
                                       G
                                       T
                                    
                                 . g is a random generator of group 
                                    
                                       G
                                       2
                                    
                                 . The public system parameters params are 
                                    
                                       
                                          H
                                          1
                                       
                                       
                                          H
                                          2
                                       
                                       H
                                       
                                          G
                                          1
                                       
                                       
                                          G
                                          2
                                       
                                       
                                          G
                                          T
                                       
                                       e
                                       g
                                    
                                 .

KeyGen: To simplify the algorithm, we show the key generation for two owners. Each current owner O
                                 
                                    t,i
                                 
                                 
                                    c
                                  randomly chooses a key K
                                 
                                    i
                                 , where K
                                 
                                    i
                                 
                                 ∈{0,1}
                                    l
                                 , and run the algorithm BLS.KeyGen to generate a key pair 
                                    
                                       
                                          g
                                          
                                             a
                                             i
                                          
                                       
                                       
                                          a
                                          i
                                       
                                    
                                 , where a
                                 
                                    i
                                 
                                 ∈ℤ
                                    p
                                 
                                 ⁎. Sets the private key sk
                                 
                                    i
                                  as (K
                                 
                                    i
                                 ,a
                                 
                                    i
                                 ) and the verification key 
                                    v
                                    
                                       k
                                       i
                                    
                                    =
                                    
                                       g
                                       
                                          a
                                          i
                                       
                                    
                                 . O
                                 
                                    t,i
                                 
                                 
                                    c
                                  computes two leaves L
                                 
                                    i,1 and L
                                 
                                    i,2, such that
                                    
                                       
                                          
                                             L
                                             
                                                i
                                                ,
                                                1
                                             
                                          
                                          =
                                          
                                             H
                                             1
                                          
                                          
                                             
                                                K
                                                i
                                             
                                          
                                          ,
                                          
                                          
                                             L
                                             
                                                i
                                                ,
                                                2
                                             
                                          
                                          =
                                          
                                             H
                                             2
                                          
                                          
                                             
                                                v
                                                
                                                   k
                                                   i
                                                
                                                ,
                                                
                                                   N
                                                   o
                                                
                                                ,
                                                I
                                                
                                                   D
                                                   t
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 where N
                                 
                                    o
                                 
                                 ∈ℕ is the number of current owners and IDt
                                  is the identity of tag. O
                                 
                                    t,i
                                 
                                 
                                    c
                                  broadcasts a tuple (vk
                                 
                                    i
                                 ,L
                                 
                                    i,1,L
                                 
                                    i,2) to other owners. On receiving a broadcast, an owner verifies
                                    
                                       
                                          
                                             L
                                             
                                                i
                                                ,
                                                2
                                             
                                          
                                          
                                             =
                                             ?
                                          
                                          
                                             H
                                             2
                                          
                                          
                                             
                                                v
                                                
                                                   k
                                                   i
                                                
                                                ,
                                                
                                                   N
                                                   o
                                                
                                                ,
                                                I
                                                
                                                   D
                                                   t
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              

If the equation holds, the owner accepts the tuple, otherwise reject. Then, O
                        
                           t,i
                        
                        
                           c
                         builds a Merkle tree 
                           M
                         depicted as in Fig. 2
                        , where K
                        =
                        H
                        1(N
                        1,1‖N
                        1,2), and computes an update key 
                           
                              K
                              u
                           
                           =
                           
                              L
                              
                                 1
                                 ,
                                 1
                              
                           
                           ⊕
                           ⋯
                           ⊕
                           
                              L
                              
                                 
                                    N
                                    o
                                 
                                 ,
                                 1
                              
                           
                        . Let 
                           
                              P
                              i
                           
                         be the sibling path of L
                        
                           i,1 and set auxiliary parameter 
                           
                              A
                              i
                           
                           =
                           
                              
                                 v
                                 
                                    k
                                    i
                                 
                                 ,
                                 
                                    N
                                    o
                                 
                                 ,
                                 
                                    P
                                    i
                                 
                                 ,
                                 M
                              
                           
                        . It outputs a tuple (K,K
                        
                           u
                        ,{sk
                        
                           i
                        },{A
                        
                           i
                        }). Although Fig. 2 shows a key construction for two owners, the algorithm can generate a key for any number of owners. Depending on the value of N
                        
                           o
                        , there are two cases:
                           
                              –
                              
                                 N
                                 
                                    o
                                 
                                 =2
                                    n
                                 , n
                                 ∈ℕ: Each owner generates a Merkle tree on input a set of leaves {(L
                                 
                                    i,1,L
                                 
                                    i,2)}, where i
                                 =1,2,⋯,2
                                    n
                                 .

2
                                    n
                                 
                                 <
                                 N
                                 
                                    o
                                 
                                 <2
                                    n
                                    +1, n
                                 ∈ℕ: Each owner generates the common leaves as follows
                                    
                                       
                                          
                                             L
                                             
                                                i
                                                ,
                                                1
                                             
                                          
                                          =
                                          
                                             H
                                             1
                                          
                                          
                                             
                                                I
                                                
                                                   D
                                                   t
                                                
                                             
                                          
                                          ,
                                          
                                          
                                             L
                                             
                                                i
                                                ,
                                                2
                                             
                                          
                                          =
                                          
                                             H
                                             2
                                          
                                          
                                             
                                                g
                                                ,
                                                
                                                   N
                                                   o
                                                
                                                ,
                                                I
                                                
                                                   D
                                                   t
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 where i
                                 =
                                 N
                                 
                                    o
                                 
                                 +1,⋯,2
                                    n
                                    +1. We call such a pair of common leaves (L
                                 
                                    i,1,L
                                 
                                    i,2) as an ownership pad. Note that there is no owner occupies an ownership pad.

TagInit: Set the tag's state s
                                 =(K,K
                                 
                                    u
                                 ,ID
                                 
                                    t
                                 ) and store s in the tag. Any current owner can initiate the tag while other owners need to verify the state. If any owner complains that s is not as expected, the initialization should be run again.

TKGen: To generate a temporary authentication key KT
                                 , a current owner sends an encrypted sibling path to tag T. If the provided sibling path 
                                    
                                       P
                                       i
                                    
                                    =
                                    
                                       
                                          L
                                          
                                             i
                                             ,
                                             1
                                          
                                       
                                       
                                          L
                                          
                                             i
                                             ,
                                             2
                                          
                                       
                                       
                                          N
                                          
                                             1
                                             ,
                                             j
                                          
                                       
                                       K
                                    
                                 , where j
                                 =1 or j
                                 =2, is valid, the tag challenges a random number to the owner. Then, the current owner creates and responds a new key KT
                                  to the tag. T accepts the key if the response is authenticated. The algorithm outputs a pair (L
                                 
                                    i,1
                                 ′,K
                                 
                                    T
                                 ). Details are depicted in Fig. 3
                                 .

PartProve: To prove a partial ownership of a tag, a new owner O
                                 
                                    i
                                 
                                 
                                    n
                                  challenges a current owner O
                                 
                                    t,i
                                 
                                 
                                    c
                                 . There are two phases in partial ownership proof. In phase 1, O
                                 
                                    t,i
                                 
                                 
                                    c
                                  runs the algorithm TKGen with target tag T and outputs (L
                                 
                                    i,1
                                 ′,K
                                 
                                    T
                                 ). KT
                                  is a one-time authentication key which is erased from the tag after the next successful tag authentication. In phase 2, upon receiving a challenge m, O
                                 
                                    t,i
                                 
                                 
                                    c
                                  generates a signature by using BLS.Sign. The algorithm outputs a partial ownership proof σ. Details are depicted as in Fig. 4
                                 .

FullProve: To prove the full ownership of the tag, all owners individually prove the partial ownership by running PartProve algorithm.

Verify: To verify a proof of partial ownership of a tag, the new owner firstly checks the validity of the signature. If it is valid, the new owner computes the key KT
                                  and uses it to authenticate the tag. The partial ownership is accepted if the authentication succeeds and outputs 1; otherwise rejects and outputs 0. Details of partial ownership verification are described in Fig. 5
                                 . If the new owner requests to check the full ownership, he should verify all the partial ownerships. If proofs are valid, new owners accept and output 1, otherwise reject and output 0.

Transfer: To transfer the full ownership to new owners, current owners run the algorithm KeyUpd on input (K,K
                                 
                                    u
                                 ,{K
                                 
                                    i
                                 },{A
                                 
                                    i
                                 }) and collect outputs (K′,K
                                 
                                    u
                                 ′,{K
                                 
                                    i
                                 
                                 ′},{A
                                 
                                    i
                                 
                                 ′}). Then each current owner O
                                 
                                    t,i
                                 
                                 
                                    c
                                  securely transfers a tuple (K′,K
                                 
                                    u
                                 ′,K
                                 
                                    i
                                 
                                 ′,A
                                 
                                    i
                                 
                                 ′) to new owners. We denote R is a record of full ownership transfer, where R
                                 =(K′,K
                                 
                                    u
                                 ′,{K
                                 
                                    i
                                 
                                 ′},{A
                                 
                                    i
                                 
                                 ′}).

KeyUpd: To update a long-term authentication key of a tag, all current owners need to respectively interact with the tag. During the key update, we assume that a communication between the tag and an owner is in an isolated environment so that no other current owners can eavesdrop the communication flows. First, current owners generate a new long-term authentication key K′ and an update key K
                                 
                                    u
                                 ′ by running the algorithm KeyGen. Then, they run the key update algorithm as shown in Fig. 6
                                 .

A current owner maintains both the old key K and the new key K′ since: 1) it allows the current owner to authenticate the tag during the period when other owners have not agreed the update and 2) it can also resist the desynchronized attack.

@&#DISCUSSION@&#

In the temporary key generation, a current owner should present a valid sibling path to the tag. For n owners, a tag only needs to do ⌊log
                        2
                        n⌋+1 hashing computations in the path checking. At the initiation, a tag stores two keys, namely a long-term authentication key K and an update key K
                        
                           u
                        . During the protocol execution, a tag stores two more keys K
                        
                           v
                         and U. Hence, there are at most four keys, which could be 128-bit [19] each, stored in a non-volatile memory. Table 2
                         shows the computational cost and the key size of proposed protocol.

We generate a public/private key pair in algorithm KeyGen, while an owner could use the same public/private key pair for all his tags. Hence, a record of ownership transfer does not contain the private key of owner. The applied BLS signature scheme is substitutable by any other secure digital signature schemes.

The ownership transfer can be cancelled if any owner denies the request. It is unnecessary to let all owners simultaneously transfer the ownership. Instead they could handle the transfer separately in any sequence.

The security challenges of shared RFID ownership transfer protocols are different from the security challenges of traditional ownership transfer protocols, where each tag has a single owner at one time. A significant security concern beyond the normal (single-owner) RFID ownership transfer protocol is the collusion attack. That is, the attack is mounted by a subset of current owners. Since each owner possesses a part of the secret of tag, we argue that the collusion attack is stronger than attacks which are attempted by adversaries who are not current owners. Thus, we only consider the collusion-style attacks in this section.

We define a set of oracles and two collusion-style adversaries who respectively aim at two different goals. In the particular attack, the ability of an adversary is regarded as the actions executed by oracle calls.
                           Definition 4
                           Oracles


                           
                              The adversary plays with a challenger by given public information of the system and the following oracles.
                                 
                                    •
                                    SetupOwner(ID
                                       
                                          o
                                       )→
                                       O: Taking as input an owner's identity ID
                                       
                                          o
                                       , it creates an owner O.


                                       TagInit(ID
                                       
                                          t
                                       ,{ID
                                       
                                          i
                                       
                                       
                                          o
                                       })→({(vk
                                       
                                          i
                                       ,sk
                                       
                                          i
                                       )},T): Taking as input a tag's identity ID
                                       
                                          t
                                        and a set of identities {ID
                                       
                                          i
                                       
                                       
                                          o
                                       } of current owners, it runs the algorithm KeyGen to output a set of key pairs {(vk
                                       
                                          i
                                       ,sk
                                       
                                          i
                                       )}, and run the algorithm TagInit to output the tag T.


                                       TKGen(ID
                                       
                                          t
                                       ,ID
                                       
                                          o
                                       )→(L
                                       
                                          i,1
                                       ′,K
                                       
                                          T
                                       ): Taking as input a tag's identity ID
                                       
                                          t
                                        and a current owner ID
                                       
                                          o
                                       , it outputs a pair (L
                                       
                                          i,1
                                       ′,K
                                       
                                          T
                                       ) and stores the temporary authentication key KT
                                        into the tag.


                                       CorruptTag(ID
                                       
                                          t
                                       )→
                                       s: Taking as input a tag T's identity ID
                                       
                                          t
                                       , it outputs the complete internal state s of the tag. Note that the oracle does not destroy the tag and the tag is available in future communications.


                                       CorruptOwner(ID
                                       
                                          o
                                       ,ID
                                       
                                          t
                                       )→(sk,A): Taking as input an owner's identity ID
                                       
                                          o
                                        and a tag's identity ID
                                       
                                          t
                                       , it outputs the private key sk and the auxiliary parameters A of owner of tag T.


                                       PartProve(ID
                                       
                                          o
                                       ,ID
                                       
                                          t
                                       ,m
                                       
                                          i
                                       )→
                                       σ: Taking as input an owner's identity ID
                                       
                                          o
                                       , a tag's identity ID
                                       
                                          t
                                        and a challenge mi
                                       , it outputs a partial ownership proof σ of the tag.


                                       KeyUpd(ID
                                       
                                          i
                                       
                                       
                                          t
                                       )→{0,1}: Taking as input a tag's identity ID
                                       
                                          i
                                       
                                       
                                          t
                                       , it updates the keys of the tag and the keys of tag's current owners.


                                       Transfer(ID
                                       
                                          t
                                       ,{ID
                                       
                                          c
                                       },{ID
                                       
                                          n
                                       })→{ID
                                       
                                          n
                                       }: Taking as input a tag's identity ID
                                       
                                          t
                                       , a set of identities {ID
                                       
                                          c
                                       } of current owners and a set of identities {ID
                                       
                                          n
                                       } of new owners, it transfers the full ownership of tag T to new owners.


                              The adversary is defined by the oracle calls and the goal of the experiment.
                                 
                                    •
                                    Type I Adversary 
                                          
                                             
                                                A
                                                I
                                             
                                          
                                       : is allowed to query all above oracles except PartProve. This adversary is assumed that it has passed the full ownership verification. It aims to transfer the full ownership of the tag to new owners without agreement of all current owners.

Type II Adversary 
                                          
                                             
                                                A
                                                
                                                   I
                                                   I
                                                
                                             
                                          
                                       : is allowed to query all above oracles except Transfer. It aims to output a partial ownership proof of a target tag that it cannot be detected during the ownership verification.

The security model of shared ownership transfer protocols is similar to the security model of conventional ownership transfer protocols defined in [11]. The main difference of the two models is that the adversary of our security model can launch collusion attacks where some of current owners might be dishonest. There are two security models defined in two different experiments, respectively. In an experiment, the ability of a particular adversary is captured by a set of oracle calls and rules of interactions. Each experiment is played between the adversary and the challenger that an adversary issues oracle queries and challenger outputs simulation of oracles. We denote the security parameters r, s, n and 
                           S
                        , such that r is the number of owner initiations, s is the number of oracle calls, n is the number of tag initiations and 
                           S
                         is the shared RFID ownership transfer system. The security of a shared RFID ownership transfer protocol is evaluated under both experiments and we say it is insecure if any adversary succeeds in either experiment. Notice that the experiments in this section are defined for the protocols which do not employ trusted third parties.

Type I adversary is a person who attempts to cooperate at most n
                           −1 current owners to transfer the full ownership of a tag without agreement of at least one honest owner. 
                              
                                 A
                                 I
                              
                            interacts with the challenger via oracle calls and outputs a record R* of the transfer. 
                              
                                 A
                                 I
                              
                            succeeds if the record is valid. The details are described as experiment 
                              Ex
                              
                                 p
                                 
                                    
                                       A
                                       I
                                    
                                    ,
                                    S
                                 
                                 secure
                              
                              
                                 r
                                 s
                                 n
                              
                            in Fig. 7
                           .
                              Definition 6
                              
                                 A shared RFID ownership transfer protocol is (r,s,n,ϵ)-secure against the Type I attack, if any PPT adversary 
                                 
                                    
                                       A
                                       I
                                    
                                  
                                 who succeeds in the experiment 
                                 
                                    Ex
                                    
                                       p
                                       
                                          
                                             A
                                             I
                                          
                                          ,
                                          S
                                       
                                       secure
                                    
                                    
                                       r
                                       s
                                       n
                                    
                                  
                                 has advantage
                                 
                                    
                                       
                                          Pr
                                          
                                             
                                                success
                                                ←
                                                Ex
                                                
                                                   p
                                                   
                                                      
                                                         A
                                                         I
                                                      
                                                      ,
                                                      S
                                                   
                                                   secure
                                                
                                                
                                                   r
                                                   s
                                                   n
                                                
                                             
                                          
                                          ≤
                                          ϵ
                                          ,
                                       
                                    
                                 where ϵ is negligible.

Type II adversary is a person who attempts to cooperate at most n
                           −1 current owners to prove partial ownership of a tag. 
                              
                                 A
                                 
                                    I
                                    I
                                 
                              
                            interacts with the challenger via oracle calls and outputs a partial proof σ* of ownership of target tag. 
                              
                                 A
                                 
                                    I
                                    I
                                 
                              
                            succeeds if the proof is valid. The details are described as in experiment 
                              Ex
                              
                                 p
                                 
                                    
                                       A
                                       2
                                    
                                    ,
                                    S
                                 
                                 secure
                              
                              
                                 r
                                 s
                                 n
                              
                            in Fig. 8
                           .
                              Definition 7
                              
                                 A shared RFID ownership transfer protocol is (r,s,n,ϵ)-secure against the Type II attack, if any PPT adversary 
                                 
                                    
                                       A
                                       
                                          I
                                          I
                                       
                                    
                                  
                                 who succeeds in the experiment 
                                 
                                    Ex
                                    
                                       p
                                       
                                          
                                             A
                                             
                                                I
                                                I
                                             
                                          
                                          ,
                                          S
                                       
                                       secure
                                    
                                    
                                       r
                                       s
                                       n
                                    
                                  
                                 has advantage
                                 
                                    
                                       
                                          Pr
                                          
                                             
                                                success
                                                ←
                                                Ex
                                                
                                                   p
                                                   
                                                      
                                                         A
                                                         
                                                            I
                                                            I
                                                         
                                                      
                                                      ,
                                                      S
                                                   
                                                   secure
                                                
                                                
                                                   r
                                                   s
                                                   n
                                                
                                             
                                          
                                          ≤
                                          ϵ
                                          ,
                                       
                                    
                                 where ϵ is negligible.

A shared RFID ownership transfer protocol is secure if it is against two types of attacks defined in Section 6. We analyze the security of our proposed protocol in both of above two experiments. Without loss of generality, the security proofs in this section is in the case where the number of shared owners is k, such that k
                     ≥2.
                        Theorem 1
                        
                           Our shared RFID ownership transfer protocol is (r,s,n,ϵ)-secure against the Type I attack if the hash function H
                           1 
                           is preimage resistant.


                           Suppose that there is a Type I adversary 
                           
                              
                                 A
                                 I
                              
                            
                           who can (r,s,n,ϵ)-break our shared ownership transfer protocol in experiment 
                           
                              Ex
                              
                                 p
                                 
                                    
                                       A
                                       I
                                    
                                    ,
                                    S
                                 
                                 secure
                              
                              
                                 r
                                 s
                                 n
                              
                           . We can construct an algorithm 
                           
                              B
                           , which is run by the challenger, to break the preimage security of underlying hash function H
                           1 
                           of the protocol. 
                              B
                            
                           sets up the Type I security experiment and interacts with 
                           
                              
                                 A
                                 I
                              
                           . It answers the oracle queries as follows.
                              
                                 •
                                 Setup: 
                                       B
                                     sets g as a generator of a group 
                                       
                                          G
                                          2
                                       
                                    . Let two hash functions be H
                                    1
                                    :{0,1}*→{0,1}
                                       l
                                     and 
                                       
                                          H
                                          2
                                       
                                       :
                                       
                                          G
                                          2
                                       
                                       ×
                                       ℕ
                                       ×
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                          *
                                       
                                       →
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                          l
                                       
                                    . It gives public parameters params to the adversary. 
                                       B
                                     maintains a database D
                                    ={<
                                    ID
                                    
                                       o
                                    ,ID
                                    
                                       t
                                    ,c,sk,A
                                    >}, which is initially empty.

SetupOwner: On input query an identity ID
                                    
                                       i
                                    
                                    
                                       o
                                    , 
                                       B
                                     creates an owner O
                                    
                                       i
                                     if the item <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,⋅,⋅,⋅,⋅> is not in the database D and adds <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,⋅,⋅,⋅,⋅> into the database.

TagInit: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                     and a set of identities {ID
                                    
                                       i
                                    
                                    
                                       o
                                    } of owners, 
                                       B
                                     runs the algorithm KeyGen to output 
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                          
                                             
                                                s
                                                
                                                   k
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                A
                                                i
                                             
                                          
                                       
                                     and sets the tag's state as 
                                       
                                          c
                                          i
                                       
                                       =
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                       
                                    . It adds items {<
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    
                                    >} in to the database D.

TKGen: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                     and an owner's identity ID
                                    
                                       i
                                    
                                    
                                       o
                                    , if the item <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,⋅,⋅,⋅> does not exist in database, 
                                       B
                                     returns ⊥, otherwise retrieves the item. 
                                       B
                                     randomly chooses L
                                    
                                       i,1
                                    ′
                                    ∈{0,1}
                                       l
                                     and computes K
                                    
                                       T
                                    
                                    =
                                    H
                                    1(L
                                    
                                       i,1
                                    ′||L
                                    
                                       i,2). 
                                       B
                                     sets the tag's state 
                                       
                                          c
                                          i
                                       
                                       =
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                          
                                             K
                                             T
                                          
                                       
                                     and returns (L
                                    
                                       i,1
                                    ′,K
                                    
                                       T
                                    ) to adversary and updates <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    
                                    > in D.

CorruptTag: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , 
                                       B
                                     retrieves the item <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    
                                    > if it appears in the database. Otherwise, 
                                       B
                                     firstly runs the algorithm TagInit. It returns c
                                    
                                       i
                                     to the adversary.

CorruptOwner: On input query an owner's identity ID
                                    
                                       i
                                    
                                    
                                       o
                                     and a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , 
                                       B
                                     returns ⊥ if <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    
                                    > is not in database, otherwise, 
                                       B
                                     retrieves it and returns (sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    ) to adversary.

KeyUpd: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , if ID
                                    
                                       i
                                    
                                    
                                       t
                                     does not exist in database, 
                                       B
                                     returns 0. Otherwise, 
                                       B
                                     retrieves all items such that <⋅,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,⋅,⋅,⋅> from D. Then, it runs the algorithm KeyUdp to output new keys (K′,K′,{K
                                    
                                       i
                                    
                                    ′},{A
                                    
                                       i
                                    
                                    ′}). 
                                       B
                                     updates the items and returns 1.

Transfer: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , a set of identities {ID
                                    
                                       i
                                    
                                    
                                       c
                                    } of current owner and a set of identities ID
                                    
                                       o
                                     of owners, 
                                       B
                                     retrieves items <
                                    ID
                                    
                                       i
                                    
                                    
                                       c
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,⋅,⋅,⋅> and sets the full ownership transfer record 
                                       
                                          R
                                          i
                                       
                                       =
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                          
                                             
                                                s
                                                
                                                   k
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                A
                                                i
                                             
                                          
                                       
                                    , then deletes all such items. 
                                       B
                                     runs the algorithm TagInit on input new owners' identities {ID
                                    
                                       i
                                    
                                    
                                       o
                                    } and tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                     and sets {ID
                                    
                                       i
                                    
                                    
                                       n
                                    }={ID
                                    
                                       i
                                    
                                    
                                       o
                                    }. 
                                       B
                                     returns (R
                                    
                                       i
                                    ,{ID
                                    
                                       i
                                    
                                    
                                       n
                                    }) to the adversary.

Forge: In the end of the experiment, the adversary 
                                       
                                          A
                                          I
                                       
                                     succeeds if he outputs a target tag's full ownership transfer record R*=(K*,U*,{sk
                                    
                                       i
                                    
                                    ⁎},{A
                                    
                                       i
                                    
                                    ⁎}) which satisfies the conditions:
                                       
                                          1.
                                          
                                             
                                                Transfer
                                                
                                                   
                                                      T
                                                      *
                                                   
                                                   
                                                      O
                                                      t
                                                      
                                                         c
                                                         *
                                                      
                                                   
                                                   
                                                      O
                                                      
                                                         n
                                                         *
                                                      
                                                   
                                                
                                                ↛
                                                
                                                   
                                                      O
                                                      t
                                                      
                                                         n
                                                         *
                                                      
                                                   
                                                   
                                                      R
                                                      *
                                                   
                                                
                                                ;
                                             
                                          


                                             
                                                ∃
                                                
                                                   O
                                                   
                                                      t
                                                      ,
                                                      i
                                                   
                                                   
                                                      c
                                                      *
                                                   
                                                
                                                ∈
                                                
                                                   O
                                                   t
                                                   
                                                      c
                                                      *
                                                   
                                                
                                                ,
                                                s
                                                .
                                                t
                                                .
                                                CorruptOwner
                                                
                                                   
                                                      I
                                                      
                                                         D
                                                         i
                                                         *
                                                      
                                                      ,
                                                      
                                                         T
                                                         *
                                                      
                                                   
                                                
                                                ↛
                                                
                                                   
                                                      s
                                                      
                                                         k
                                                         i
                                                         *
                                                      
                                                      ,
                                                      
                                                         A
                                                         i
                                                         *
                                                      
                                                   
                                                
                                                ;
                                             
                                          


                                             
                                                KeyUpd
                                                
                                                   
                                                      T
                                                      *
                                                   
                                                   
                                                      O
                                                      t
                                                      
                                                         n
                                                         *
                                                      
                                                   
                                                   
                                                      K
                                                      *
                                                   
                                                   
                                                      K
                                                      u
                                                      *
                                                   
                                                   
                                                      
                                                         s
                                                         
                                                            k
                                                            i
                                                            *
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         A
                                                         i
                                                         *
                                                      
                                                   
                                                
                                                →
                                                
                                                   
                                                      
                                                         K
                                                         *
                                                      
                                                      ′
                                                   
                                                   
                                                      
                                                         K
                                                         u
                                                         *
                                                      
                                                      ′
                                                   
                                                   
                                                      
                                                         s
                                                         
                                                            
                                                               k
                                                               i
                                                               *
                                                            
                                                            ′
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            A
                                                            i
                                                            *
                                                         
                                                         ′
                                                      
                                                   
                                                
                                             .

Then, 
                        B
                      can use 
                        
                           A
                           I
                        
                      to find the preimage of hash function H
                     1 since 
                        
                           A
                           I
                        
                      success implies that he outputs a preimage K
                     
                        i
                     
                     ⁎
                     ∈
                     sk
                     
                        i
                     
                     ⁎, such that H
                     1(K
                     
                        i
                     
                     ⁎)=
                     L
                     
                        i,1
                     ⁎, L
                     
                        i,1
                     ⁎
                     ∈
                     A
                     
                        i
                     
                     ⁎. It is contradicted with the preimage resistant assumption of H
                     1. Therefore, the proposed protocol is secure against the Type I attack.
                        Theorem 2
                        
                           Our shared RFID ownership transfer protocol is (r,s,n,ϵ)-secure against the Type II attack if the BLS signature is secure and the Merkle-tree lemma holds.


                           Suppose that there is a Type II adversary 
                           
                              
                                 A
                                 
                                    I
                                    I
                                 
                              
                            
                           who can (r,s,n,ϵ)-break our shared ownership transfer protocol in experiment 
                           
                              Ex
                              
                                 p
                                 
                                    
                                       A
                                       
                                          I
                                          I
                                       
                                    
                                    ,
                                    S
                                 
                                 secure
                              
                              
                                 r
                                 s
                                 n
                              
                           . We can construct an algorithm 
                           
                              B
                           , which is run by the challenger, to forge a valid instance of BLS signature or to output a valid sibling path of the Merkle tree, such that it does not appear in the tree. 
                              B
                            
                           sets up the Type II security experiment and interacts with 
                           
                              
                                 A
                                 
                                    I
                                    I
                                 
                              
                           . It simulates and answers oracle queries as follows.
                              
                                 •
                                 Setup 
                                       B
                                    : Sets the simulation parameters as in the simulation of BLS signature in [2]. Then, 
                                       B
                                     chooses two hash functions, such that H
                                    1
                                    :{0,1}*→{0,1}
                                       l
                                    , 
                                       
                                          H
                                          2
                                       
                                       :
                                       
                                          G
                                          2
                                       
                                       ×
                                       ℕ
                                       ×
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                          *
                                       
                                       →
                                       
                                          
                                             0
                                             ,
                                             1
                                          
                                          l
                                       
                                    . It gives public parameters to the adversary and maintains a database D
                                    ={<
                                    ID
                                    
                                       o
                                    ,ID
                                    
                                       t
                                    ,c,sk,A,coin
                                    ={0,1}>}, which is initially empty.

SetupOwner: On input query an identity ID
                                    
                                       i
                                    
                                    
                                       o
                                    , if ID
                                    
                                       i
                                    
                                    
                                       o
                                     does not appear in the database D, 
                                       B
                                     creates an owner O
                                    
                                       i
                                     and adds the item <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,⋅,⋅,⋅,⋅,⋅> into D. Otherwise, 
                                       B
                                     ignores the request.

TagInit: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                     and a set of current identities {ID
                                    
                                       i
                                    
                                    
                                       o
                                    } of current owners, 
                                       B
                                     randomly picks an index i
                                    ∈
                                    n, where n is the number of submitted current owners. For the i th owner, 
                                       B
                                     firstly runs the algorithm Oracle. Setup to output a public/private key pair (vk
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ). Then, 
                                       B
                                     follows the algorithm KeyGen, except the public/private key generation, to output 
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                          
                                             
                                                s
                                                
                                                   k
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                A
                                                i
                                             
                                          
                                       
                                    . 
                                       B
                                     sets the tag's state 
                                       
                                          c
                                          i
                                       
                                       =
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                       
                                    , coin
                                    
                                       i
                                    
                                    =0, and adds {<
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    ,0 >} into D. For other n
                                    −1 owners, 
                                       B
                                     runs the algorithm KeyGen to output 
                                       
                                          
                                             K
                                             j
                                          
                                          
                                             K
                                             
                                                u
                                                j
                                             
                                          
                                          
                                             
                                                s
                                                
                                                   k
                                                   j
                                                
                                             
                                          
                                          
                                             
                                                A
                                                j
                                             
                                          
                                       
                                     and sets the tag's state c
                                    
                                       j
                                    
                                    =
                                    c
                                    
                                       i
                                    , coin
                                    
                                       j
                                    
                                    =1, where j
                                    ∈
                                    n, j
                                    ≠
                                    i. It adds items such that {<
                                    ID
                                    
                                       j
                                    
                                    
                                       o
                                    ,ID
                                    
                                       j
                                    
                                    
                                       t
                                    ,c
                                    
                                       j
                                    ,sk
                                    
                                       j
                                    ,A
                                    
                                       j
                                    ,1>} into the database D.

TKGen: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                     and an owner's identity ID
                                    
                                       i
                                    
                                    
                                       o
                                    , if the item <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,⋅,⋅,⋅,⋅> does not in D, 
                                       B
                                     returns ⊥, otherwise retrieves the item. 
                                       B
                                     then randomly picks L
                                    
                                       i,1
                                    ′
                                    ∈{0,1}
                                       l
                                     and computes K
                                    
                                       T
                                    
                                    =
                                    H
                                    1(L
                                    
                                       i,1
                                    ′||L
                                    
                                       i,2). Then, 
                                       B
                                     sets the tag's state 
                                       
                                          c
                                          i
                                       
                                       =
                                       
                                          
                                             K
                                             i
                                          
                                          
                                             K
                                             
                                                u
                                                i
                                             
                                          
                                          
                                             K
                                             T
                                          
                                       
                                     and returns (L
                                    
                                       i,1
                                    ′,K
                                    
                                       T
                                    ) to adversary and updates <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    , ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,⋅,⋅,⋅> in D.

CorruptTag: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , if ID
                                    
                                       i
                                    
                                    
                                       t
                                     is not in D, 
                                       B
                                     runs the algorithm TagInit first. Then, 
                                       B
                                     retrieves the item <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    ,coin
                                    
                                       i
                                    
                                    > and returns c
                                    
                                       i
                                     to the adversary.

CorruptOwner: On input query an owner's identity ID
                                    
                                       i
                                    
                                    
                                       o
                                     and a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , 
                                       B
                                     returns ⊥ if <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    ,coin
                                    
                                       i
                                    
                                    > does not appear in the database D. If coin
                                    
                                       i
                                    
                                    =0, 
                                       B
                                     aborts the simulation and returns ⊥, otherwise, 
                                       B
                                     retrieves the item and returns (sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    ) to adversary.

KeyUpd: On input query a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                    , if ID
                                    
                                       i
                                    
                                    
                                       t
                                     does not exist in database, 
                                       B
                                     returns 0. Otherwise, 
                                       B
                                     retrieves all items such that <⋅,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,⋅,⋅,⋅,⋅> from D. Then, it runs the algorithm KeyUdp to output new keys (K′,K′,{K
                                    
                                       i
                                    
                                    ′},{A
                                    
                                       i
                                    
                                    ′}). 
                                       B
                                     updates the items and returns 1.

PartProve: On input query an owner's identity ID
                                    
                                       i
                                    
                                    
                                       o
                                    , a tag's identity ID
                                    
                                       i
                                    
                                    
                                       t
                                     and a challenge m
                                    
                                       i
                                    , 
                                       B
                                     retrieves <
                                    ID
                                    
                                       i
                                    
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ,c
                                    
                                       i
                                    ,sk
                                    
                                       i
                                    ,A
                                    
                                       i
                                    ,coin
                                    
                                       i
                                    
                                    > if it appears in D. If coin
                                    =1, 
                                       B
                                     runs the algorithm BLS.Sign to output a signature V
                                    
                                       i
                                    , otherwise, 
                                       B
                                     submits (m
                                    
                                       i
                                    ,ID
                                    
                                       i
                                    
                                    
                                       o
                                    ) to the oracle Oracle.Sign and obtains an output signature V
                                    
                                       i
                                    . Then, 
                                       B
                                     calls the oracle TKGen to get (L
                                    
                                       i,1
                                    ′,K
                                    
                                       T
                                    ). It sets σ
                                    
                                       i
                                    
                                    =(L
                                    
                                       i,1
                                    ′,vk
                                    
                                       i
                                    ,V
                                    
                                       i
                                    ,N
                                    
                                       o
                                    ,ID
                                    
                                       i
                                    
                                    
                                       t
                                    ) as a partial ownership proof of ID
                                    
                                       i
                                    
                                    
                                       o
                                     and returns it to adversary.

Forge: At the end of the experiment, the adversary 
                                       
                                          A
                                          
                                             I
                                             I
                                          
                                       
                                     succeeds if he can output a target tag's partial ownership proof 
                                       
                                          σ
                                          *
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      L
                                                      ′
                                                   
                                                   ∗
                                                
                                                
                                                   i
                                                   ,
                                                   1
                                                
                                             
                                             ,
                                             v
                                             
                                                k
                                                i
                                                *
                                             
                                             ,
                                             
                                                V
                                                i
                                                *
                                             
                                             ,
                                             
                                                N
                                                o
                                                *
                                             
                                             ,
                                             I
                                             
                                                D
                                                i
                                                
                                                   t
                                                   *
                                                
                                             
                                          
                                       
                                     which satisfies the conditions:
                                       
                                          1.
                                          
                                             
                                                ∃
                                                
                                                   O
                                                   
                                                      t
                                                      ,
                                                      i
                                                   
                                                   
                                                      c
                                                      *
                                                   
                                                
                                                ∈
                                                
                                                   O
                                                   t
                                                   
                                                      c
                                                      *
                                                   
                                                
                                             , s.
                                             t.
                                             CorruptOwner(ID
                                             
                                                i
                                             
                                             
                                                o
                                                ⁎,ID
                                             
                                                i
                                             
                                             
                                                t
                                                ⁎)↛(sk
                                             
                                                i
                                             
                                             ⁎,A
                                             
                                                i
                                             
                                             ⁎);


                                             PartProve(ID
                                             
                                                i
                                             
                                             
                                                o
                                                ⁎,ID
                                             
                                                i
                                             
                                             
                                                t
                                                ⁎,m
                                             
                                                i
                                             
                                             ⁎)↛
                                             σ*;


                                             
                                                Verify
                                                
                                                   
                                                      
                                                         T
                                                         *
                                                      
                                                      ,
                                                      
                                                         O
                                                         
                                                            n
                                                            *
                                                         
                                                      
                                                      ,
                                                      
                                                         σ
                                                         *
                                                      
                                                      ,
                                                      I
                                                      
                                                         D
                                                         i
                                                         
                                                            t
                                                            *
                                                         
                                                      
                                                   
                                                
                                                →
                                                1
                                             .

Then, 
                        B
                      can use 
                        
                           A
                           
                              I
                              I
                           
                        
                      to output a sibling path of Merkle tree 
                        M
                     * since a valid forgery of K
                     
                        T
                     
                     ⁎ implies that 
                        
                           A
                           
                              I
                              I
                           
                        
                      can output a valid sibling path to convince the tag. Otherwise, it can output a valid forgery of BLS signature and solve its underlying problem if O
                     
                        t,i
                     
                     
                        c
                        ⁎ is the owner who has the record <
                     ID
                     
                        i
                     
                     
                        o
                        ⁎,ID
                     
                        i
                     
                     
                        t
                        ⁎,c
                     
                        i
                     
                     ⁎,sk
                     
                        i
                     
                     ⁎,A
                     
                        i
                     
                     ⁎,0> in the database. It is contradicted with the Merkle-tree lemma [8] and the security of BLS signature. Hence, the proposed protocol is secure against the Type II attack.

@&#CONCLUSION@&#

A shared ownership transfer protocol in the extended two-party system model has been proposed assuming the absence of TTP. Our protocol only requires a tag to store keys with a constant size in order to prove the ownership of a group of owners. We provided the formal definition of shared ownership transfer and proved that our protocol is secure against various attacks including collusion attacks.

@&#ACKNOWLEDGEMENT@&#

This work is supported by the Australian Research Council Discovery Project DP110101951.

@&#REFERENCES@&#

