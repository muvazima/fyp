@&#MAIN-TITLE@&#Developing taxonomy for the domain ontology of construction contractual semantics: A case study on the AIA A201 document

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An ontological model is developed from definitions found in a contract.


                        
                        
                           
                           A synthesized methodology for taxonomies for contractual semantics is established.


                        
                        
                           
                           The taxonomy is validated using a case study for a standard construction contract.


                        
                        
                           
                           Developed enhanced ontology-based application for sharing contract domain knowledge.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Ontology

Semantics

Taxonomy

Contractual management

Construction claims

@&#ABSTRACT@&#


               
               
                  In construction contractual management, sharing experts’ domain knowledge through ontology is a good way to narrow the knowledge gap between the domain experts and the construction team. However, little work has been done on ontology taxonomy development in this domain. Based on a literature review on sharing domain knowledge, taxonomy development methods and the essence of construction contracts, this study proposes a synthesized methodology for taxonomy development in the domain of construction contractual semantics. This methodology is based on an ontological model extracted from definitions found in the contract, and uses common root concepts as the initial root concept classes, and includes the iterative development and competency questions approaches as well. In the case study, using the research results from pilot studies, the proposed methodology was applied to the AIA A201 General Conditions of the Contract for Construction (2007) document at the textual level. As a result, a taxonomy was developed which was used to determine the validity of the proposed methodology. The taxonomy development methodology and the developed taxonomy itself are both valuable contributions in the quest to further develop ontology-based applications for sharing domain knowledge about construction contract semantics.
               
            

@&#INTRODUCTION@&#

The development of more sophisticated buildings and building systems has led to more complex and consequently, more risky projects in the Architecture/Engineering/Construction (AEC) industry. This trend has made project contract management much more difficult, and consequently, claims and legal issues have become more and more unpreventable due to the increasing complexity and uncertainty involved in construction projects [25]. Further, for the project contractual parties, the performance of contract management duties and avoidance of contractual claims have an important impact on project success. Contract management requires domain experts’ with comprehensive contract knowledge and professional insight. However, due to the restrictions of the project jobsite, a knowledge gap exists between the domain experts and the construction project team. For example, in practice, the personnel given the role for managing claims are in most cases, because of the uncertainty of a claim arising, selected in an ad-hoc manner, as opposed to having dedicated personnel in that role similar to estimators, planners and accountants [45]. Therefore, it is fairly common to find that in most cases, these claim clerks are lacking in claim-related professional knowledge and experience and consequently substantial errors and omissions often occur in the claim preparation process. For example, an inexperienced clerk might easily miss or ignore some facts or proofs which can have impacts on the outcome of certain type of claim cases. Those mistakes usually lead to a loss of the claim. In other words, the aforementioned knowledge gap heavily impacts the performance of project contract management duties. Narrowing this knowledge gap, by representing the experts’ knowledge through ontology and sharing it with the contract management team is a good way to solve this problem [34]. At the initial phase of building this domain ontology, a solid taxonomy is necessary to classify and organize the related concepts in the contractual relationships between project parties. Currently, there exist some legal ontologies at the general level, however, little work has been done on building the taxonomy for the domain construction claim analysis. Considering the significant amount of particular engineering and management background knowledge involved, which is out of the boundary of purely general law, the existing legal ontologies have very limited applicability in this scenario. Therefore, the decision was made to start with creating a domain taxonomy from scratch for this study.

According to the conceptualization process in the two prevailing ontology developing methodologies [38,17], the task following the building of a glossary of terms is building a concept taxonomy (often referred to as “define the classes and the class hierarchy”). This task is the most important one in the ontology development process, since taxonomy is a Knowledge Organization System (KOS) serving as the “backbone” of the domain knowledge for organizing concepts. To develop the taxonomy for the domain knowledge of construction contractual semantics, this study proposes a synthesized methodology. This taxonomy development methodology starts from an ontological model generalized from fundamental contract law principles; and then utilizes the common major root concepts to categorize the concepts that appear in the target contract documents. In order to preserve the capability to collaborate with other taxonomies, the major root concepts used in popular top level taxonomies and/or classifications (e.g. IFC) are utilized to initialize the development of this taxonomy. In order to determine the scope limitations of the taxonomy and to assure consistency of its terms, the following two approaches are also used: competency questioning [22] and iterative development [21]. Finally, the validity of the proposed methodology is tested through a case study that applies it to the textual content of the clauses of the AIA A201 General Conditions of the Contract for Construction document [1]. Furthermore, based on the taxonomy developed in this research, together with a rule-based NLP methodology, a particular application was developed to semantically interpret impact factors for construction claim cases.

@&#LITERATURE REVIEW@&#

In the construction arena, one of the traditional methods for sharing the domain knowledge about contractual issues is by using expert systems (ES). Based on the theories about knowledge representation and logic reasoning, mainly production systems and frames, ES can present and reuse domain knowledge to some extent. To be specific, with the development of expert systems in the 1980s, a great number of studies on the application of expert systems in construction contract and claim analysis were conducted from the mid1980s to the mid1990s. Table 1
                         shows a brief timeline of these expert systems that was developed based on an extensive literature review.

Almost all of the ES are rule-based and make use of the logic reasoning relationship among concepts. However, due the disadvantages of its knowledge representation theories, this methodology has shortcomings related to representing and sharing domain knowledge. The knowledge representation level achieved by ES is too shallow to reach the level of being semantically accessible and interpretable by machine. This shallowness mainly manifests itself in the inability of representing the concepts themselves. All of these ES do not represent knowledge from the base level of legal concepts that govern litigation outcomes [33]. To make up for this defect, the common practice used with ES is to just throw this problem back at the user by simply asking the user to figure out the concept interpretation and judgment. However, this practice makes it necessary for those using these so-called expert systems to be real experts, which defeats the purpose of using an expert system [8].

The reason for this shallowness is that common-sense knowledge can be difficult to represent in ES [19]. Some measure of common sense knowledge can be represented but it must be done explicitly. However, one would have to explicitly enter all such knowledge, which can be impractical in most situations. The reason behind this problem is the absence of a global language which allows the knowledge bases to be shared by all systems. With a global language, the lack of implicit knowledge deemed as “common sense” in one domain can be fulfilled by sharing the explicit “non-common sense” knowledge in the other domains. Just like the explanation about the relationship between ontologies and expert systems from W3C, it is somewhat parallel to the relation between the Web and hypertext community – based on some of the same motivations, but with a very different architecture that drastically changes the ways in which the technology can be deployed. Later, even though the agent-based approach was proposed in the negotiation of construction claims, the importance of domain ontology for knowledge was also emphasized [39]. All of these problems show the necessity of using ontology and its ability to share domain knowledge in the area of construction contracts and claims. It is necessary to clarify that although ES and ontologies are different things and not exactly counterparts, in terms of solving the problems of sharing domain experts’ knowledge, they both serve as influential methodologies chronologically.

A meaningful result of the development of ES in the Artificial Intelligence realm in the 1980s is that, capturing knowledge for a powerful knowledge-based system has become more and more important, which has led to the initial usage of the term ontology to refer to the modeled body of knowledge. Gruber [20] first coined the term “ontology”. After that, a large body of knowledge regarding ontology from theory to methodology has been developed.

As far as the methodology for building ontology is concerned the first guidelines for developing ontologies, ENTERPRISE Ontology and TOVE (Toronto Virtual Enterprise), were proposed by Uschold [43] and Grüninger and Fox [22] respectively and refined later [43,44]. However, these guidelines were only applicable to the case studies involved and did not set a standard for all situations.

Depending on the characteristics of different domain areas, the process of building ontologies can vary. Subsequently, additional theories about the methodology of ontology building were developed based on different domains. The influential ones include: KACTUS methodology [7,24] for reuse of knowledge about technical system during their life-cycle in the manufacturing and engineering domains; IDEF5 (Integrated Definition for Ontology Description Capture Method) method to develop and maintain usable, accurate, domain ontologies in software engineering [5]; METHONTOLOGY for building ontology for chemistry knowledge [29,30]; guideline and methodology from natural language based SENSUS Ontology for machine translation [41]; On-To-Knowledge methodology for knowledge management systems [40]; Noy and McGuinness’ methodology [38] consisting of seven steps.

However, in almost all of the influential ontology developing methodologies mentioned above, taxonomy (or class hierarchy) is an indispensable part for organizing concepts contained in a body of knowledge. A taxonomy is a kind of controlled vocabulary known as Knowledge Organizing System (or Knowledge Organizing Scheme), which allows for the organization of concepts into concept schemes. In addition, it is also possible to indicate relationships between the terms contained in the scheme. The advantages of this knowledge organizing scheme in facilitating ontology-based applications include: making searches more robust by related words matching instead of simple keywords matching; more intelligent browsing interfaces by following the hierarchy structure and by exploring broader/narrower terms; promoting reuse of knowledge and facilitating data interoperability through formally organizing domain knowledge [49].

Based on a literature review of taxonomy development in the engineering management area, it was determined that the methodology of content analysis is often used in finding a taxonomy from a large amount of textual materials [10,18]. Content analysis (or textual analysis) is a methodology in the social sciences for studying the content of communication. It gained popularity in the 1960s. Krippendorff [27] defined content analysis as “a research technique for making replicable and valid inferences from texts (or other meaningful mater) to the contexts of their use.” Typically, taxonomy studies using content analysis are mainly focused on determining the presence of certain words or concepts within texts or sets of texts, and then quantifying and analyzing the presence, meanings and relationships of such words and concepts to make inferences about the information in order to classify those words and concepts. However, this method has a large dependency on the text material selected which would bias the result. To minimize this bias, the application of content analysis needs a huge amount of literature sources (e.g. books, journals, documents, web pages etc.) to achieve adequate comprehensiveness.

To weaken the bias in the empirical approach discussed above, some other way of identifying taxonomy incorporating more theoretical concerns is needed. In the domain of knowledge management in construction, Lima et al. [28] developed the Knowledge Management (KM) environment, e-CKMI, tailored for the Building and Construction (BC) sector in Europe. As a part of it, the e-COGNOS project addressed the need for developing domain taxonomy for construction concepts [13]. Besides the use of a search engine to find the frequency of concepts/terms, other tools and practices adopted include, briefly, using a process-oriented ontological model, which is an architecture of how the world (in a domain) behaves (or becomes) [12], allowing utilization of already existing classification systems (BS6100, MasterFormat, and UniClass), and involvement of domain experts in intensive interviews, as well as the use of iterative development and competency questions. These tools and practices contribute to constructing taxonomy in a more theoretical sense, which makes the results more convincing and solid, compared to solely using content analysis.

Considering the compatibility and reusability of the taxonomy to be developed, several influential conceptual models and taxonomies previously developed in the context of AEC processes were reviewed. The aim of this review was to identify some commonly used root concepts to initiate the conceptualization process for the desired taxonomy.

Luiten et al. [31] developed the conceptual model of IRMA, an Information Reference Model for Architecture, Engineering and Construction (1993). IRMA identifies and formalizes some of the key concepts of projects (such as physical components, activities, and resources) and it shows the relationships between them. This model was developed by combining features from four previously developed conceptual models. The four models were: (1) Unified Approach Model as a generic model for modeling all kinds of construction information would facilitate the integration of different information technology applications from very diverse domains, such as CAD, and project management [6]; (2) General Construction Object Model, GenCOM, developed to improve the integration of project management software using standard object-oriented models of construction projects [14,15]; (3) Building Project Model (BPM) developed by Luiten [32] to provide a conceptual model that integrates product, activity, and resource information; and (4) the information/integration for construction, ICON, project [4] for investigating the feasibility of establishing a framework for integrating information systems in the construction industry. IRMA was developed, based on these four model, as a new conceptual project model which identifies the central objects in AEC projects. Although IRMA was intended more as a reference and comparison tool than an end product, it has served as a useful vehicle for further conceptual development [16].

Besides the conceptual models, the largest and perhaps the most significant product modeling standardization effort is the ISO Standard 10303, “Standard for The Exchange of Product Model Data”, or STEP (ISO 1994; NPDERC 1995). It was jointly developed by numerous organizations to provide a computer-interpretable unambiguous method for exchanging product data to and from any system. Furthermore, based on the ISO 10303, IFC (Industry Foundation Classes), as the data model for describing building and construction industry data was developed, and it was registered as ISO 16739:2013 IFC defines an entity-relationship model consisting of several hundred entities organized into an object-based inheritance hierarchy. At the most abstract level, IFC divides all entities into rooted and non-rooted entities. Rooted entities derive from ifcRoot which is subdivided into three abstract concepts: object definitions, relationships and property sets. Among these three, ifcObjectDefinitions captures tangible object occurrence and types and are further subdivided into six fundamental concepts: ifcActor, ifcControl, ifcGroup, ifcProduct, ifcProcess, and ifcResource [9]. These entity classes capture the core concepts in the construction process. In addition, ISO 12006-2 and 12006-3 are important standards for structuring information of construction. ISO 12006-2 is also known as OmniClass and ISO 12006-3 specifies a language-independent information model which can be used for the development of dictionaries used to store or provide information about construction works.

Additionally, with reference to the conceptual and data model mentioned above, a domain taxonomy for construction concepts was developed [13]. This taxonomy uses seven major domains to classify construction concepts: Process, Product, Project, Actor, Resource, Technical Topics, and Systems. The first five domains are very common in most taxonomies [23]. They are clearly present in IFC and many of the construction classifications (OCG and the Building Catalogue, for example). Based on this taxonomy and other ones, El-Diraby developed Domain Ontology for Construction Knowledge (DOCK) [12] which continues to use that taxonomy and its major root concepts.

@&#METHODOLOGY@&#

Since taxonomy is a concept scheme for organizing terms and concepts in a domain knowledge, the scheme needs to utilize some relationships among the concepts to organize them. Although the taxonomy for ontology development is not exactly the same as in designing classes and relations in object-oriented programming, some important features are shared by these two, like encapsulation, inheritance, and polymorphism. For example, the most common taxonomic relations, “Subclass-Of” comes from inheritance, and “Is-a” comes from polymorphism. Using these relationships, eventually, all the concepts can be categorized into a tree structure. The concept tree consists of several major root concepts (or root concept classes) that form its main branches. These major root concepts contain all the other specific concepts as their sub-concepts. The major root concepts themselves are at the top level of the whole taxonomy, and no concepts can contain them. However, this is not the end, because there still is a need to organize these major root concepts. The scheme (also referred to as top level scheme), needed for this organization, is able to describe the core semantics of what the target ontology is. Particularly, in our case, the target ontology is about the knowledge domain of construction contractual semantics. Thus, the top level scheme focus on describing the essence of the construction contract and the top level scheme for organizing the major root concepts is defined as the ontological model behind the taxonomy. To obtain the ontological model in our case, the legal fundamentals of contract was studied.

The law applicable to construction projects falls into three major categories: contract, tort, and statutory/regulatory [42]. However, since this study mainly focuses on contractual management issues, only contract law will be studied. Traditionally, the definition used for a contract comes from Restatement (Second) of Contracts [26] which defines a contract as “a promise or set of promises, for the breach of which the law gives a remedy, or the performance of which the law in some way recognizes as a duty”. Thus, a contract is basically a set of promises made by one party to another party, and vice versa. Further, it also defines “breach of contract” as the result when one party fails in some respect to do what that party has agreed to do, without excuse or justification. In the context of construction, a breach of contract may be instantiated. For example, as a contractor’s failure to complete the work on time, or failure to achieve the required performance of the work; likewise, if an owner unjustifiably fails to make periodic contractual payments to the contractor as portions of the work are completed, that failure constitutes a breach of contact. Therefore, from the definitions of “contract” and “breach of contract”, a naïve ontological model for the taxonomy of construction contractual domain knowledge can be defined as “When a project party unjustifiably fails to fulfill its contractual promises (obligations), a breach of contract occurs, which entitles the other project party to a corresponding remedy”.

Besides the concern for the contract itself, since the context is the construction industry, the taxonomy development work took into consideration the scheme and content of some commonly existing taxonomies and classifications. Particularly, classification systems about the product model and/or process model (e.g. IFC and MasterFormat) provide us with existing external taxonomies to use when there is a need to refer to certain objects which belong to the product or process model. Thus, it is valuable to integrate existing classification systems in order to make the desired taxonomy work together with them.

Based on the common concepts in existing conceptual models and taxonomies for AEC area and considering the context of this study, it was decided that five major root concepts are selected and used for the taxonomy development. Specifically, the five major root concepts are: Project, Actor, Product, Process, and Resource. According to the ontological model defined above, these five concepts are included in the semantics of this model, whereas all the other concepts that are not included are deemed as irrelevant and are ignored. Further, these five concepts are the most common and essential ones among all the concepts in the reviewed models and taxonomies. In conceptual models and taxonomies, each of these major root concepts has different sub-concepts as its descendants. Although these taxonomies using the five major root concepts are not specifically designed for the domain of construction contract and claims, it is assumed that they could be used as a reliable basis for initializing the concept classification work and be able to be adapted and modified later on to meet the desired taxonomy’s needs.

To control the scope of the ontology, the method of Competency Questions [22] is adopted in this study. This is a way to determine the scope of an ontology by compiling a list of questions that a body of knowledge based on the ontology should be able to answer. Since the scope of ontology is controlled by the taxonomy, this method is applied during the taxonomy development phase.

Competency questions are a set of consistent questions that the ontology developer has to ask and adhere to upon the development of each phase. These questions are designed for testing the ontology limits during the ontology-design process. In practice, the competency questions used to determine the ontology’s limit include:
                           
                              •
                              Does the ontology contain enough information to answer these types of (competency) questions?

Do the answers require a particular level of detail or representation of a particular area?

In this study, since the taxonomy is developed from the textual content of the contract clauses, a vast amount of details is easily encountered. Developers encountering too much details in the textual content, could have a lot of trouble extracting target concepts from the texts and could very likely get lost. To deal with this problem, the necessity of applying competency questions becomes more obvious. The competency questions can serve as the benchmark for testing a candidate concept’s relevance to the target taxonomy and consequently control the taxonomy scope. Particularly, if it has to use a candidate concept for answering the competency questions, then that candidate concept is deemed as the target concept which should be encompassed in the taxonomy somewhere; if not, then it is an irrelevant or over-detailed concept which should be discarded. By using this testing process, the developer can maintain control over the scope of the target taxonomy and prevent deviations from the original expected scope.

Additionally, in the whole process of ontology development, the importance of the iterative development approach is proposed and emphasized by many ontologists [20,21,38,49]. More specifically, an initial ontology is created in a rough first pass and it is then revised and refined, with the details provided and filled out. Subsequently, the initial version of the ontology is tested and evaluated in applications, and discussed with domain experts. Similarly, the revised version is put back through the previous cycle for more fine-tuning. As the skeleton of the ontology, the taxonomy development work also follows this iterative development approach.

This iterative development has to be included in the taxonomy development process. The reason is that at the beginning of the first round of the classification, as the concept classes are short of instances to give the developer more sense and reference about the semantics, it is often hard to decide on the affiliation of a given concept to a certain concepts class, e.g., some concepts may seem to fit in more than one class, or a concept may look irrelevant to any class. As a result, after the first round, quite a few concepts could be left without any class affiliations. But, as more instances have been assigned to concept classes, it become easier to reconsider the affiliation of yet unassigned concepts. This explains why it is necessary to adopt an iterative development strategy in this process, because iterative development allows for adjusting or updating the classification from an overall perspective which makes the taxonomy more consistent and integrated.

In summary, all of the methods and approaches described in this section constitute a synthesized taxonomy development methodology. In the next section, this methodology will be used in a case study to test its validity and to help modify it through the analysis of problems encountered in practice.

To identify the taxonomy for the domain knowledge of construction contractual semantics, the American Institute of Architects (AIA) Document A201-2007, General Conditions of the Contract for Construction [1] was selected as the knowledge source because:
                           
                              •
                              AIA Documents as standard forms of contract are widely accepted and used in the construction industry. Thus, it could be deemed as a well shared domain knowledge source by the AEC community. A taxonomy developed based on this standard form can be beneficial to all its users.

AIA documents have evolved over almost 125years through numerous editions to become benchmark documents expressing the contractual relationships between construction parties [3]. During this long history, they have been through numerous revisions, which make them one of the most reliable knowledge sources in construction contractual domain.

As integral part of the prime owner-contractor agreement, the general conditions of the A201 Document set forth the responsibilities of the owner, contractor and architect during construction [2]. So, the contractual relationships regulated by the AIA A201-2007 Document falls exactly within the scope of this research.

The AIA A201 Document has a total of 330 terms listed in its Index section. These terms are called “Index” terms and provide a good initial source for taxonomy development. A pilot study was conducted by Niu and Issa [35] and a glossary of the “Index” terms was collected and reorganized. An excerpt of the glossary of reorganized “Index” terms is shown in Table 2
                        .

Although the “Index” terms provide a good reference, a considerable number of them are not suitable as ready to be classified target concepts. For example, the interchangeable terms (e.g. “Completion, Substantial” and “Substantial Completion” are the same), are terms used as a reading guide without any real semantics (e.g. Basic Definitions, Capitalization, and Interpretation), and these terms contain a cluster of concepts and relations, like a “block” rather than one single term (e.g. like the form of “Conditions related to …”). Additionally, some terms deemed as “attributes” instead of “concepts” (there are 37 terms deemed as attributes, e.g. Representation, Effective date of insurance) were also excluded from the target concepts. All of those unqualified terms were trimmed off from the initial 330 terms, which left 253 qualified terms as concepts ready for classification.

In another pilot study based on these qualified “Index” terms, Niu and Issa [36] developed an initial taxonomy with eight top-level root concepts and the ontological model was also modified from the naïve one. The resulting ontological model with the major root concepts is:
                           
                              •
                              “Within the confines of the 
                                    Environment
                                 , a set of 
                                    Actors
                                  are to produce 
                                    Products
                                  with 
                                    Resource
                                  consumption, in which their 
                                    Behavior
                                  should follow certain 
                                    Processes
                                  based on the 
                                    Promises
                                  they made, otherwise a 
                                    Remedy
                                  should be granted to make up for the extra 
                                    Resource
                                  use if the Actors’ 
                                    Behavior
                                  is not excusable.”

This ontological model integrates the contract’s definition as its framework and the inductive root concept classes as its elements. It provides a fundamental understanding of the construction contract’s core semantics.

The “Index” terms are good enough for developing the top level of the taxonomy, however, they are not suitable for the further development of more specific concepts, because most of them are considered as quite abstract and general. Especially since there exists a significant portion of “block” terms containing a cluster of concepts and relations. Additionally, among the top level concept classes of the taxonomy developed in the pilot study, some classes (e.g. Promise, Behavior and Product) contained a very large amount of concepts which needed further classification into a more detailed hierarchy. Therefore, to address that problem in this study, the test object was changed from the “Index” terms to the text of the AIA A201-2007 clauses.

Completing this case study required several steps. First the meaning of all the contract clauses were read and well understood by the developers. Then, based on the modified ontological model and the eight major root concepts from the pilot study [36], as well as the basic knowledge representation model of “Subject-Predicate-Object” from the ontology description language, the meaning of the text of each of the contractual clauses was analyzed and the corresponding concepts in it were identified. Note that in this step, it is necessary to tell the difference between a “concept” and the “attributes/properties” of a concept, and although the attributes/properties of a concept are also a crucial part of semantic modeling, here the focus is only on extracting the concepts from the text and ignoring the concepts’ attributes, in order to avoid unnecessary confusion.

Once the concepts are identified from the text of the clause, each concept was put into the appropriate root concept class and the clause’s code was recorded as the provenance information. The process was executed on one clause at a time, and then the same process was repeated on the subsequent clauses. With the progress of this development process, more concepts were accumulated under each root concept class. Using these accumulated concepts it became easier to identify the nuances among those concepts and to create appropriate intermediate concept classes to further classify those concepts. This process followed the middle-out approach for taxonomy development [44]. Note that, for this case study, the scope of the work was limited to the first three Articles (General Provisions, Owner and Contractor) of the General Conditions of the AIA A201 Document for demonstration purposes. Because the contractual relationship between the owner and contractor is a core and typical part of the AIA A201 Document, and it provided enough data for a good illustration of the application and validation of the proposed methodology.

The Ontology Annotation Tool (OAT) in GATE (General Architecture for Text Engineering) was found to be an efficient tool in completing the data processing task. GATE is a Java suite of tools originally developed by the University of Sheffield which is widely used for Natural Language Processing (NLP) tasks. OAT is a GATE plugin which enables a user to manually annotate a text with respect to one or more ontologies. The OAT tool supports annotation with information about the ontology classes, instances and properties [11].

In our case, since we are concerned with developing the taxonomy, the goal is to annotate a concept and link it to the class it belongs to. To be specific, both the AIA A201 Document PDF file and the initial taxonomy .owl file are first loaded into GATE Developer. Then the OAT interface is opened, the document and taxonomy are shown side-by-side (see Fig. 1
                        ). In this user interface, a concept in a clause’ text content can be easily annotated with a link to a class in the taxonomy, and the different links are color coded to distinguish them from each other. With this feature, the above mentioned data processing procedure for the case study can be easily implemented. OAT’s juxtaposition of both text and class hierarchy, and its enabling of links between concepts and classes productively facilitates to a large extent the building of the text-based taxonomy.

@&#RESULTS@&#

The final results of this whole taxonomy development process are shown in Fig. 2
                        . The explanation of the major root concept classes and the sub-concept classes are as follows:
                           
                              •
                              
                                 Environment which emphasizes the things out of the project Actors’ control, and which could substantially affect the execution of the Contract. It has three major sub-concepts:
                                    
                                       Legal environment (e.g. applicable laws, statutes, ordinances, codes, rules and regulations, and lawful orders of public authorities).

Physical environment (e.g. site conditions, existing construction).

Force majeure (e.g. weather delay, labor dispute).


                                 Actor includes all the major players involved in the contract. This class include the sub-concepts:
                                    
                                       Party (e.g. Contractor’s superintendent, Architect’s project representative), organization (e.g. contractors).

Agent (e.g. Owner’s authorized representative, Contractor’s authorized representative, superintendent).

Non-party (e.g. government agencies, municipality).

Role (e.g. Initial decision maker, Surety).


                                 Product means all the needed items to be provided by a certain Actor as required by the contract. It may include tangible construction products (like a building, or a bridge), necessary construction activities to produce the construction products, and related service required by the contract. All of these products require a certain amount of Resource consumption. In short, the Product class has three sub-concepts:
                                    
                                       Document (e.g. Instruments of service, submittals, schedules, evidence, record).

Construction Work (e.g. the Project, the Work, construction or operations).

Service (e.g. access to work, design service).


                                 Resource is an entity that has value, requires effort to obtain, and is something indispensable, i.e. without which certain needed work cannot be properly performed by an Actor. Resource is usually classified into five sub-concepts. In addition to the usual five of Labor, Materials, Equipment, Time and Money, four more were added:
                                    
                                       Labor (e.g. carpenters, masons).

Materials (e.g. plywood, cement, concrete).

Equipment (e.g. crane, scaffold).

Time (e.g. work day).

Money (e.g. dollars).

Information (e.g. information for preparing a mechanic’s lien, information under the Owner’s control and relevant to the Contractor’s performance of the Work).

Service (e.g. service under the Owner’s control and relevant to the Contractor’s performance of the Work).

Facility (e.g. water, heat, utilities, transportation, and other facilities).

Authorization (e.g. approvals, easements, assessments and charges required for construction, use or occupancy of permanent structures or for permanent changes in existing facilities).


                                 Behavior represents the actions and/or inactions of the Actors which may lead to certain contractual consequences. Instances of action are commonly verbs in the clauses, which are abundant; whereas the number of instances of inaction is limited.
                                    
                                       Action (e.g. authorize, execute, etc.).

Inaction (e.g. fail to, withhold, delay, ignore, etc.).


                                 Process contains certain procedures that should be followed by Actors for certain activities. It can be divided into four sub-concepts:
                                    
                                       Administration Process (e.g. Communications facilitating contract administration).

Legal Process (e.g. Meditation, Arbitration).

Construction Process (e.g. Construction means, methods, techniques, sequences).

Time process (e.g. bids are received, award of the Contract, commencement of the Work).


                                 Promise is about the contractual relationships among certain Actors. It is the core part of the whole taxonomy, so it has a more complicated structure than others. Specifically, Promise consists of three sub-concepts, and each one can be further classified into several sub-sub-concepts:
                                    
                                       Contractual Relationship
                                             
                                                –
                                                Right (e.g. copyright, ownership, mechanic’s lien right, right to stop the Work).

Entitlement (e.g. reply on the accuracy, increase in Contract Sum or extension of Contract Time, Change Order, reimbursement).

Authority (e.g. consent, enforce obligation against).

Obligation (e.g. report promptly, reasonable infer, secure and pay, indemnification).

Responsibility (e.g. jobsite safety, loss and damage, warranty, acts and omission of agent).

Liability (e.g. pay avoidable costs and damages, loss caused by patent or copyright infringement).

Manipulation
                                             
                                                –
                                                Exception (e.g. damage or defect caused by abuse, improper or insufficient maintenance).

Condition (e.g. failure of payment, material change in the Work).

Limitation (e.g. extent of indemnification).

Documentation (e.g. Contract Documents, Change Orders, Construction Change Directives).


                                 Remedy is deemed as a makeup for extra and excusable Resource consumption. Simply, it is mainly instantiated as:
                                    
                                       Contract Time.

Contract Sum.

Indemnification.

Compared with the taxonomy based on the “Index” terms of the AIA A201 Document [36], this taxonomy based on the text of the clauses keeps the eight root concept classes, but has a more specific and more detailed hierarchy of the sub-concepts under each root concepts classes. Especially, for some root concept classes which contain a large number of concepts, like Promises, substantial in-depth classification was done; and some more sub-concept classes were added into some root concepts, like Resource, Actors and Process. Meanwhile, note that the ontological model for the taxonomy, as marked by the dash box in Fig. 3
                        , is still the one developed in the pilot study without any changes, since the root concept classes are intact. Moreover, using the contractual clauses’ textual content as the test object instead of the “Index” terms, avoids dealing with the problem of “block” terms, and allows the conceptualization work to be performed on a more detailed and finer level. This also gives the conceptualization a stronger capability for expressing the semantics from the very base level.

During the completion of this case study, when conceptualizing the semantics in the textual content of the clauses, too many details and fineness was encountered making it difficult to determine which concept needed to be added to the classification scheme. Particularly, sometimes it was difficult to identify and extract a concept from a group of sentences or a paragraph in a contractual clause, and thus to determine the concept classification scheme.

The method of competency questions was used to solve this problem. When the developer feels lost in facing too much detail, the competency questions work as a criteria for testing the boundary of the necessary level of detail that the expected ontology should reach. For instance, to trim off the irrelevant content, the question of “Is this concept closely related to the root concepts in the ontological model?” can be used as a benchmark. As a result, the AIA A201 contractual clauses like 1.3 Capitalization and 1.4 Interpretation can be easily identified as irrelevant ones and ignored with confidence. Also by applying the set of questions “Is this concept more like a class or a specific instance? Is it meaningful to let it have any further subclasses?” the level of detail can be controlled. For example, when considering the AIA A201 2.1.2 clause about the Owner’s furnishing of information for the Contractor’s mechanic’s lien, this kind of information can be considered as a resource in the ontological model, but the specific parts of the information were taken as instances and were not worthy of being assigned further subclasses. Thus, only the concept of “information for mechanic’s lien” was selected for inclusion in the taxonomy as a subclass of Resource, but its specific parts were excluded.

The preceding is an example is of the process for testing and controlling the boundary of the detailed level of the taxonomy by using competency questions. The details beyond the boundary determined by the competency questions are considered as surplus and should be just ignored in order to reduce confusion. So, the use of competency questions is emphasized throughout the case study.

In completing the case study (using the process described under the Data Processing section), it was found that the structure of some contractual clauses can be very complicated, and some concept classes are difficult to be defined and verbose descriptions are needed to express them clearly in English. However, the semantic modeling primitives provided by the ontology description language of RDF (Resource Description Framework) [47], RDFS (RDF Schema) [46] and OWL (Web Ontology Language) [48] were able to deal with these issues quite effectively. The following are just a few examples of how these are dealt with in the case study.
                           Example 1
                           In the AIA 201 Document clause 3.12.8, dealing with the “deviation existing between approved submittals and the Contract Documents”, there is a default priority of the two in terms of the requirements to be complied with. For this situation, the type resource of rdf:Seq, one of the RDF Containers available in RDF 1.1 specification 2014 [47], is a suitable construct to express this kind of priority, since it represents a group of resources or literals in a certain order. This ordered group allows the user to determine the importance of any one of the resources with respect to the others, e.g. Contract Documents are more important than the Approved Submittals.

In RDFS, the property of rdfs:subClassOf can be used multiple times when defining a class. So, all the base classes introduced by rdfs:subClassOf will be ANDed together to create the new classes. This feature allows multi-inheritance, which exists a lot in the construction contractual semantics. Under the Contractual Relationship class Promise (see Fig. 3), many concepts could be under both the authority and obligation classes. For example, the “Architect’s enforcing the obligation against the Contractor”, is the Architect’s authority since there is no direct contractual relationship between the Architect and Contractor, while at the same time it is also an obligation of the Architect. There are quite a few concepts with multi-inheritance under the Contractual Relationship class and these concepts can be expressed well by the primitives of RDFS.

As illustrated in these examples, the ease of expressing the complicated concepts in contract clauses by the semantic modeling primitives of the ontology description language provides a foundation for better domain knowledge representation. In addition, when performing the conceptualization development, being aware of the semantic modeling primitives’ features will appreciably benefit the developer in identifying the underlying semantic structure in the textual material. Note that these examples are proposed to indicate the potential of the ontology description language for expressing certain complex concepts in AIA A201 contract clauses. Its full implementation needs more studies in the future and is not within the scope of this study.

Based on the ontological model, the taxonomy developed extracts the relevant concepts and organizes them systematically. It can serve as a structure for tracking concepts involved in contract management. The developed taxonomy, with more subclasses, instances and attributes added to enrich its semantic, can be used to develop an ontology which can provide more practical functionalities. For example, as shown in Fig. 3, the concept class “Contract Documents”, based on its definition in AIA A201 clause 1.1.1, can be further developed into seven subclasses “Agreement”, “Conditions”, “Drawings”, “Modifications”, “Addenda”, “Specifications” and “other document”. All of them inherit the attributes of “Contract Document”. Then if a specific instance is encountered, e.g. “Drawing A502, Exterior Doors and Windows Details”, it will be identified as an instance of “Drawings” [37]. Because of the inheritance in the taxonomy, the subclass “Drawing” inherits the predefined attribute of “being legally binding” from its parent class “Contract Document”. Thus, that piece of knowledge about the attribute of that specific instance can be obtained through this process. That explains how the taxonomy can make contributions to provide knowledge support in a particular application.

However, to implement the full effectiveness of ontology in a practical application for assisting contract management, other important technologies are also needed to allow the available knowledge to be properly utilized. For example, in order to achieve full effectiveness of ontology, focusing on the area of text processing to assist claim analysis, a rule-based NLP framework with ontology support has been proposed and a series of pilot studies has been conducted by Niu and Issa [34]. Under this framework, a particular application was developed. A rule-based NLP methodology for semantically interpreting impact factors for construction claim cases was proposed and developed [37]. Based on the available NLP techniques and domain ontologies, this methodology utilizes a rule-based mechanism to capture the mapping from textual elements to ontology entities. In this way, the support of domain ontology is provided to enhance the performance of the impact factor interpretation process in the text. Also, it was found that this methodology can be implemented by the deployment of GATE Developer (General Architecture for Text Engineering) and Protégé. Further, a case study focusing on the type of DSC (Differing Site Conditions) Type I claims was designed and conducted. In this case study, real-world litigation cases from legal databases were collected as data. The proposed rule-based NLP methodology, supported by ontology, identified facts from the text to achieve the goal of semantic interpretation of impact factors associated with DSC claims. For the validation part, the automatically generated result was compared to the “gold standard” developed by professional construction claims attorneys. Finally, a satisfactory degree of agreement between the two was found and the result was accepted. It should be emphasized that in this specific application, the ontology was developed from the taxonomy created herein, which provided the necessary knowledge support for the key tasks in this application.

@&#SUMMARY@&#

In summary, a case study involving the AIA A201 Document was used to validate the proposed taxonomy development methodology for analyzing the textual content of contractual clauses. Additionally, through the analysis of the results, it was found that the taxonomy has a more detailed and finer structure than the one previously developed [36] based on the “Index” terms for the pilot study. The original ontological model is still valid for the newly developed taxonomy, since the root concept classes remained intact.

@&#CONCLUSION@&#

The proposed taxonomy development methodology (including an ontological model, common major root concepts from existing taxonomies, as well as the iterative approach and competency questions) is capable of guiding the taxonomy development process for the domain of construction contractual semantics. The validity of the proposed methodology was verified by the taxonomy developed from the case study.

Furthermore, although as noted previously, the methodology has some limitations, both the taxonomy development methodology and the taxonomy itself provide the bases for further ontology development in the domain of construction contractual semantics. The rest of the tasks in the ontology development for construction claims can proceed from this taxonomy, including defining the ad hoc relationships and attributes of concepts. Once the ontology is completed, the legal analysis for construction contractual claims can be realized through a framework prototype, as illustrated in Fig. 4
                     . The developed ontology contains the conceptualized and formalized domain knowledge about construction contractual claims. It works as a knowledge base to provide original and explicit knowledge support for this system. Based on the knowledge representation in the ontology, an inference engine can do the reasoning work under certain circumstances. The implicit knowledge can be obtained as a result of the reasoning and added to the ontology as an extended and derived knowledge support system and software agents can be used to complete certain concrete and real legal analysis related jobs by utilizing the knowledge support derived from the interaction between the ontology and the inference engine. The interactions among these three basic modules constitute the fundamental mechanism of the framework prototype used for providing legal analysis services in the domain of construction contractual claims. In particularly, this framework prototype for legal analysis can be used to develop a series of applications for the practice of construction contract and claim management. For example, a construction claim document production system can be developed by using the proposed ontology [34]. As noted earlier, by using ontology for representation of the domain knowledge, construction legal analysis and claim consulting can be better realized than by using the pure rule-based expert systems developed in 1980s-1990s. Furthermore, based on the rule-based NLP framework supported by ontology, a case study for implementation of the semantic interpretation of the impact factors in construction claim cases has been conducted [37]. In this case study, a Differing Site Conditions (DSC) Type I claim and its impact factors were chosen as the target to test the methodology. Through the combination of NLP, ontology as well as rule-based systems, the existence of impact factors in the text of a DSC Type I claim case history can be determined to improve the efficiency of legal analysis. Furthermore, the validity of the proposed framework was determined in that case study.

A taxonomy has been successfully developed using a case study in order to validate the proposed taxonomy development methodology. This taxonomy despite several limitations. First, it was only based on the first three articles out of the 15 in the AIA A201-2007 Document. Although these articles are enough to validate the concept classification scheme of the developed taxonomy, the classification is to some extent incomplete. By extending the proposed methodology to the full content of the AIA A201-2007 Document, an enriched taxonomy can be developed in the future. Future efforts should focus on developing a practical and feasible validation method. Since a taxonomy is a system for organizing concepts derived from professional expertise and insight, the validation method needs to focus on the interaction with domain experts as well as take into consideration legal case precedents. In closing, the developed taxonomy despite its limitations, has established a good foundation for further work to develop a comprehensive taxonomy to address actual construction contractual claim issues.

@&#REFERENCES@&#

