@&#MAIN-TITLE@&#Secure information embedding into 1D biomedical signals based on SPIHT

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A quality-preserving coding for 1D biomedical signals attaching metadata is proposed.


                        
                        
                           
                           It permits embedding a big amount of metadata with the SPIHT-coded signal.


                        
                        
                           
                           Security items are also embedded to provide security and Role-Based Access Control.


                        
                        
                           
                           High compression ratios (3–5) are achieved despite of the embedding.


                        
                        
                           
                           The overall delay of the encoding-access system is 2–3.3s in real-time transmission.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Biomedical signals

Distortion

E-health

Metadata embedding

Security

SPIHT

@&#ABSTRACT@&#


               
               
                  This paper proposes an encoding system for 1D biomedical signals that allows embedding metadata and provides security and privacy. The design is based on the analysis of requirements for secure and efficient storage, transmission and access to medical tests in e-health environment. This approach uses the 1D SPIHT algorithm to compress 1D biomedical signals with clinical quality, metadata embedding in the compressed domain to avoid extra distortion, digital signature to implement security and attribute-level encryption to support Role-Based Access Control. The implementation has been extensively tested using standard electrocardiogram and electroencephalogram databases (MIT-BIH Arrhythmia, MIT-BIH Compression and SCCN-EEG), demonstrating high embedding capacity (e.g. 3KB in resting ECGs, 200KB in stress tests, 30MB in ambulatory ECGs), short delays (2–3.3s in real-time transmission) and compression of the signal (by ≃3 in real-time transmission, by ≃5 in offline operation) despite of the embedding of security elements and metadata to enable e-health services.
               
            

@&#INTRODUCTION@&#

Medical tests need to evolve in the context of e-health [1] towards the new patient-centric paradigm of healthcare [2], which is supported by the Information and Communication Technologies (ICT). The core of these tests are biomedical signals (e.g. an electrocardiogram or an electroencephalogram), whose clinical meaning need to be complemented with additional information (annotations about the signal, personal data of the patient, his/her health status, allergies, medication) to enable his/her early diagnosis, continuous follow-up and customized care. To do so, and to guarantee adequate data availability (comprising secure and efficient storage, exchange and access), a method combining optimal encoding and protection of medical tests must be investigated. The resulting protected tests may facilitate the development of new secure ICT-based health services or the upgrade of existing (e.g. home monitoring, decision support systems, wearable sensor networks, e-prescribing [3]).

The requirements that digital medical tests must fulfill to fit the new e-health paradigm may be summarized as:
                        
                           •
                           
                              Information associated to the signal. Without appropriate data, identifying the signal and enabling its interpretation, medical tests may become useless. For this reason the information in medical tests must be arranged as metadata using some data structure and bound to the signal to difficult its lost.


                              Signal compression. Algorithms for signal compression remove redundancies contained by signals at different levels. These algorithms can be divided into two main categories: lossless, which retrieve the original signal; and lossy, which reach higher compression ratios than lossless at the cost of decreasing signal fidelity. The latter are more interesting since they permit saving much more bandwidth in transmission and disk space in storage. Nevertheless, in clinical applications the compression ratio must be limited by measurable quality parameters to hold the clinical meaning of the signal and avoid changing its diagnostic interpretation. Among lossy methods, there are three modalities [4]: direct methods (basing their detection of redundancies on direct analysis of the actual signal samples), transformation methods (mainly utilizing spectral and energy distribution analysis for detecting redundancies) and parameter extraction techniques (e.g. measurement of the probability distribution, subsequently utilized for classification based on a priori knowledge of the signal features). The second modality (e.g. discrete cosine transform [5], Karhunen-Loève transform [6], wavelets [7], etc.) generally yields better results, especially the wavelets, which provide a time–frequency representation of the signal with varying resolution for fine description in both domains. Furthermore, the wavelet coefficients can also be compressed by exploiting their similarity, as the SPIHT algorithm does [8], in order to increase the final compression ratio.


                              Security and privacy in storage and during transmission. Current legal regulations (the HIPAA [9], the PIPEDA [10], the LOPD [11], the Digital Signature Laws in several countries) demand that any personal health information must be protected, using adequate cryptographic means. The basic requirements are (1) encrypting all private data, (2) embedding a digital signature to verify data integrity and authenticate the signatory, and (3) encrypting the communications. Steganography may be used as a complement to introduce security or secret elements silently. Watermarking, marking all objects in the same way (e.g. to demonstrate ownership) and fingerprinting, marking each object specifically (e.g. to identify legitimate users) are the most typical applications of steganography.


                              Role-Based Access Control. E-health services operate in scenarios with a variety of different stakeholders: patients, relatives, paramedics, nurses, primary care doctors/general practitioners, surgeons, medical specialists and subspecialists, teachers and medical students, researchers, laboratories, insurance companies, governmental oversight agencies, and non-governmental oversight. For the same patient, the information that each user is allowed to access must depend on his role: e.g. if the patient has AIDS, the nurses and the paramedics need to know, but probably not the researchers using his/her medical tests. Attribute-level encryption and de-identification are effective ways to overcome this issue.


                              Low complexity encoding and short access time. Since the current tendency is building portable medical devices and wearable sensors, which often mount low power processors, the algorithms for encoding and protection should be as simple as possible to not overload them with complex calculations and reduce demand on the battery. Besides, fast execution and transmission are requirements to maintain availability of the test at good levels and allow real-time services.

There are many publications approaching these requisites separately (see for example [12–14] for signal compression, [15,16] for data embedding into signals and [17–21] for signal security). However, the aim of this work is to find an encoding and access system harmonizing compression, embedding and security. It will be focused on the case of 1D signals to facilitate the evaluation, but it could also be extended to signals of higher dimension. The rest of the paper is organized as follows. Section 2 depicts our proposal, which is evaluated in Section 3 with standard signal databases. The system implementation built for the evaluation is presented in Section 4. Finally the results are analyzed in Section 5, extracting conclusions and discussing future lines of work.

The outline of the new encoding and access architecture for 1D biomedical tests is represented in Fig. 1
                     . To fulfill the requirements in Section 1, it implements adequate methods for signal compression and embedding of additional measures, data of the patient and elements to provide security and privacy. The chosen compressor (Section 2.1) is not only fast and efficient but it also facilitates the embedding process (Section 2.2), in which security items are introduced together with the data (Section 2.3) to limit access to it. Real-time encoding and access is feasible since the encoder works with length-adjustable signal blocks (and additional measures) to constrain the delays, producing encoded units called signal registers. Then, these are sent to the Picture Archive and Communication System (PACS), whose admin checks their integrity and authenticity and accesses the private data of the patient. Next, the signal registers are stored according to the PACS data model (e.g. patient/study/series/instance like in DICOM [22]). When this test is requested to the PACS by a user, it will be sent preserving its encoding, which ensures that the user can access only those contents authorized by his/her professional role. Besides, the signal may also be reconstructed by any user knowing the compression method, even if the presence of the embedded data is ignored. Finally, users who know the encoding can always access the embedded additional measures and detect corruption of the signal or the contents.

The former experience of the authors with medical protocols [23–26] and ECG signals [27,28] and the opinion of three independent physicians has inspired this architecture.

Among the variety of general methods for biomedical signal compression, the combination of wavelets and SPIHT not only obtains good results, it is also simple and returns a bitframe which can be truncated at any point with progressive lossy to lossless quality. Another outstanding property is that large amounts of data can be embedded and retrieved from truncated SPIHT bitframes with simplicity and secrecy.

SPIHT was firstly presented in [8] as an efficient method for coding wavelet coefficients in image (2-D) compression. In [12] the algorithm was adapted to the one-dimensional (1-D) case and applied to ECG signals, revealing that it was very efficient in compression and in computation when compared with previous ECG compression methods. Besides the SPIHT algorithm accounted with several desirable properties: multiresolution scalability, progressive lossy to lossless coding, compatibility with lossless entropy coding, low complexity (use of simple operators), moderate memory usage and symmetric coding-decoding. These features motivated the later extension of the algorithm to the three-dimensional (3-D) [29] and four-dimensional (4-D) cases [30], and its successful VLSI implementation in silicon for ECG real-time compression in low-power applications [31].

The principles of the SPIHT algorithm are partial ordering of the transform coefficients by magnitude with a set partitioning sorting algorithm, ordered bit plane transmission and exploitation of self-similarity across different layers. By following these principles, the encoder always transmits the most significant bit to the decoder.

Basically the (1-D) algorithm uses a temporal orientation tree structure to define the temporal parent-offspring relations in the wavelet domain, across consecutive layers. The set partitioning rule creates subset of subband coefficients c
                           
                              i
                           , whose indices will be used together with the coefficient indices (referred to as points) to create and update three related lists: the list of insignificant points (LIP), the list of insignificant sets (LIS), and the list of significant points (LSP). The outline of the algorithm is as follows:
                              
                                 1.
                                 
                                    Initialization. Set the list of significant points (LSP) as empty. Set the roots of similarity trees in the list of insignificant points (LIP) and insignificant sets (LIS). Set the significance threshold 2
                                       n
                                     with n
                                    =⌊log
                                    2(max
                                    (i)∣c
                                    
                                       i
                                    )⌋.


                                    Sorting pass. Using the set partitioning algorithm distribute the appropriate indices of the coefficients to the LIP, LIS, and LSP.


                                    Refinement pass. For each entry in the LSP significant for higher n, send the nth most significant bit to the decoder.

Decrement n by one and return to step 2 until the specified bitrate or distortion is reached.

A more detailed explanation of the algorithm can be found in [12].

Before compressing, the original signal is divided into contiguous non-overlapping blocks to boost the compression, reduce memory demandings and allow real-time services. Adequate block length values, balancing bandwidth requirements and delays, are discussed in Section 3.3.

Bounding distortion using SPIHT is a simple task if we use the fact that the Euclidean norm, which is used to measure the error, is invariant to the wavelet transform (since it is a unitary transformation). Thus, guaranteeing reconstruction quality can be easily done by controlling the value of the coded coefficients and calculating some distortion measure to stop the coding process when the desired distortion level is reached [27,28]. This is detailed in Section 3.2.

The embedding and retrieval of metadata (e.g. data of the patient, additional measures of the test, security items) in the SPIHT domain presents great advantages: high capacity, very low complexity and controllable signal distortion. As illustrated in Fig. 2
                        , the metadata bits are placed after the SPIHT bitframe (to minimize distortion). These bits are kept for signal reconstruction, providing a common access to the signal regardless whether the user knows the encoding method (thus, the presence of additional contents) or just the compression algorithm, as illustrated in Fig. 1. The change in the quality of the reconstructed signal due to this extension of the SPIHT bitframe is low or moderate, as it will be shown in Section 3.3. Besides when it decreases, the SPIHT bitframe is progressively extended with new SPIHT bits until this negative effect is balanced out. It is not necessary to reconstruct the signal in the time domain to update the distortion when extending the SPIHT. This is feasible in the transform domain since the wavelet is a unitary transformation, and practical because the wavelet coefficients were already calculated for compression.

Organizing and protecting the metadata to be embedded within the signal registers (see Fig. 1) are basic requirements to guarantee that corruption of the signal or the metadata can be detected and that access to the latter is suitably controlled. Although the Cryptographic Message Syntax [32] (implemented by DICOM) provide the means to digitally sign, digest, authenticate or encrypt any digital content, it presents disadvantages that the signal registers must avoid: the syntax to protect each piece of data is not separated from it, control the access of different users is costly and it produces too much overhead.

The proposed encoding is depicted in Fig. 2 by means of an example. At the end of each signal register there is a tail, composed of two bytes, which points at the beginning of the secure frame to allow its retrieval. The secure frame is composed of:
                           
                              •
                              a recovery container (RC, mandatory in the first signal register), which includes the syntax necessary to make the content of each data container retrievable to targeted users (or to everybody);

data containers (1–6, optional), which include ciphered context-related metadata about the test (e.g. cont. 1: ECG delineation, cont. 2: allergies, cont. 3: patient ID, cont. 4: general data and health status of the patient); and

a Digital Signature (DS, mandatory), which allows the detection of tampering.

The 
                              recovery container
                           , depicted in Table 1
                           , details the symmetric (tag 3) and asymmetric elements (tag 0–2) combined in the protection scheme to obtain an optimum tradeoff security-performance. Tags 4–5 indicate the position of container 1 to allow public access and tag 6 contains the Private Access Table, which regulates the private access to the rest of containers (2–6).

The data containers
                           , as illustrated in Fig. 2, are ciphered independently with symmetric cryptography, which operates very fast. A secret key (ki) and a initialization vector (IV) are used for ciphering and deciphering, which provides confidentiality. The symmetric cipherer (Table 1: tag 3 – AES [36], Blowfish, RC6, Twofish or 3DES) operates in Output Feedback Mode (OFB), which makes cryptanalysis more difficult and does not require extra bytes for padding. The preferred cipherer is the standard AES, expected to remain secure beyond 2030 (according to NIST [33]) and faster than the rest in generation of keys and ciphering [34]. Asymmetric cryptography, which is safer and does not need previous key arrangements to start, is used to protect the symmetric key, position and length of each container (Table 1: tag 6), obtaining confidentiality and authentication. This uses a key pair (public key, private key) for ciphering and deciphering. Regarding algorithms, only the widespread RSA [37] is permitted, since its major competitor, elGamal, is not a standard and encrypts more slowly. The access procedure is as follows:
                              
                                 •
                                 For the non-confidential 
                                       container 1
                                    , its symmetric key (k1) and initialization vector (IV) are obtained from a public security element, the Digital Signature (DS) of the RC (Table 1: tag 2). The key corresponds to the first bits (e.g. for AES, from 1 to 256) and the IV to the following (e.g. for AES, from 257 to 384). The length (Table 1: tag 4) and position of this container are also public, it begins just after the RC in the first signal register and after the SPIHT bits in the remaining (Table 1: tag 5). Thus, this container can be accessed by anyone knowing this encoding.

For the confidential 
                                       containers 2–6
                                    , their symmetric keys (ki) and locations (positions and lengths) make private entries in the Private Access Table (PAT, Table 1: tag 6), encrypted with the public RSA key of the intended user/s. Each user decodes his/her entry in the PAT using his/her private key. The IV is the same as for container 1. There are noisy bytes preceding the containers to increase the cost of an attack due to the secrecy of their locations.

The Digital Signatures (DS) included in each signal register (Fig. 2) and in the RC (Table 1: tag 2) are used to check their integrity and authenticity. The DS are calculated by combining a safe hash function (Table 1: tag 1 – SHA2 512, SHA 1 or RIPEMD 160) which makes a digest of the RC/signal register, with a public-key algorithm, which encrypts the digest with the private key of the agent who protects the test (a person, a program or the signal acquisition device itself). At user’s side, each DS is verified by calculating the hash of the received RC/signal register and comparing it with the original hash, decrypted with the public key of the agent (extracted from his/her digital certificate, Table 1: tag 0). If they match the RC/signal register is valid, otherwise all signal registers/that signal register are refused. Regarding algorithms, RSA [37] is not allowed since the signatures are lengthy, DSA [38] is permitted since it is very extended and its signature is very compact (see Section 3.3), and ECDSA [39] is the preferred option since the signature length is the same as DSA and its key, and consequently its digital certificate, is much shorter (see Table 4).

Since biomedical tests may be requested for different uses (e.g. diagnosis, research, teaching), the implementation of a RBAC policy defining different access profiles is a smart way to fulfill the privacy principles of necessity of data processing and purpose binding. The agent (person, program or acquisition device) will assign a RBAC profile to each intended user, according to his/her professional role, to establish the contents of the test that he/she is allowed to access. These policies have gained attention in recent years and currently they are integrated in several medical standards (e.g. DICOM [40] and HL7 [41]).

As illustrated in Fig. 2, the proposed RBAC policy is defined on top of the formerly described container-level encryption, which already allowed different users to access different contents (placed into separated containers) of a signal register. A possible definition for the containers, integrating the most interesting contents included by major medical standards (DICOM [22], HL7 [42], SCP-ECG [43] and MFER [44]), would be:
                              
                                 •
                                 
                                    Container 1. This may include information concerning the acquisition session:
                                       
                                          –
                                          context-aware data (e.g. type of test: resting ECG, stress ECG, ambulatory ECG monitoring, intensive care monitoring);

environmental parameters (e.g. positioning, humidity, temperature);

parameters of the signal (e.g. sampling frequency, quantization bits, amplitude multiplier, applied filters);

additional data extracted after signal processing (e.g. delineation of fiducial points in an ECG record, intervals of likely seizure in EEGs);

periodic measures acquired in intensive care monitoring (e.g. non-invasive blood pressure – NiBP, temperature – Temp, blood oxygen saturation – SPO2, carbon dioxide – CO2, heart rate);

periodic measures acquired in stress tests (e.g. maximal oxygen consumption – VO2, heart rate, concentration of lactate in the blood, carbon dioxide production – VCO2, speed of the treadmill/power of the bicycle).


                                    Container 2. This may include the identification of the patient (e.g. name, surname, Social Security Number, Personal Health Record identifier), the physician/technician who acquires the signal, the acquiring and analyzing devices and the institution (and/or department) that leads the test.


                                    Container 3. This may include general data (e.g. age, height, weight) and health status of the patient (e.g. diseases, symptoms, previous diagnoses, observations).


                                    Container 4. This may include the allergies and current medication of the patient.


                                    Container 5. This may include sensitive diseases of the patient (e.g. AIDS, venereal diseases), not included in container 3 for confidentiality reasons.


                                    Container 6. This may include billing information of the medical test.

The corresponding RBAC profiles were defined after consulting medical experts and they aim at covering the spectrum of applications for tests in the e-health context:
                              
                                 0.
                                 Emergency care/surgery: access to signals, all personal and medical data of the patient, containers 1–5.

Diagnose (by the physician who interprets the test): access to signals, all personal and medical data, excluding sensitive diseases not related to the current test, containers 1–4.

Research or examination (by another physician caring for the patient): access to signals and medical data of the patient preserving his/her anonymity, containers 1, 3, 4.

Teaching: access to signals and general health status of the patient to enable correlations, containers 1, 3.

Billing: access to signals and information about the cost of the acquisition session, containers 1, 6.

Signals consultation: access to signals only and container 1. This profile is public, available to everyone.

Nonetheless, the proposed encoding can work with different number and alternative definitions of containers and RBAC profiles, it is not specifically intended for these examples only.

@&#EVALUATION@&#

The methods selected for signal compression (Section 2.1), metadata embedding (Section 2.2) and protection (Section 2.3) depend on several parameters (e.g. signal distortion threshold, signal block length, wavelet decomposition level, DS type) which must be studied and set up to ensure (a) user satisfaction: signal fidelity, low delays (to allow real-time operation), ease of use of the implementation (see Section 4) and (b) optimal system features: low bandwidth requirements, low overhead of the security elements and enough embedding capacity to include data produced in e-health services.

A variety of electrocardiograms (ECGs), commonly used for the detection and diagnosis of heart disease, and electroencephalograms (EEGs), relevant in applications such as brain-computer interfaces and the study of epilepsy and sleep disorders (insomnia, circadian rhythm disorders, parasomnia, etc.) are used to carry out all the parts of this evaluation.

Two well-known ECG databases have been used. The first one is the Massachusetts Institute of Technology (MIT)-Beth Israel Hospital (BIH) Arrhythmia [45]. This ECG database consists of 48 two-lead ECG registers of 30min duration. The sampling rate is 360 samples per second with a resolution of 11 bits per sample. Although the database was originally created as standard test material for the evaluation of arrhythmia detectors, this database is by far the most used to test and compare ECG compression algorithms. The second ECG database is MIT-BIH Compression [45]. It is composed of 168 two-lead ECG records of 20.48s duration. The sampling rate is 250 samples/s with a resolution of 12 bits per sample. This database was created to pose a variety of challenges for ECG compressors, in particular for lossy compression methods. Despite this fact, it is scarcely used to test the ECG compression algorithms, being relegated by MIT-BIH arrhythmia. Since these ECG databases are composed of two-lead recordings, the entire evaluation was run on both leads and the results represent the average.

For testing with EEGs we chose the STUDY dataset [46,47] from the Swartz Center for Computational Neuroscience (SCCN), composed of 10 recordings from 5 different subjects, with 61 channels per frame, 820 frames per epoch and 220–235 epochs. The sampling rate of these recordings is 200 samples/s and the resolution is 11 bits per sample.

Fidelity of a compressed signal is understood as the close similarity with respect to the original. In clinical applications, it is essential to measure the distance between both signals by means of some distortion measure and setting a quality threshold to regulate the compression process. Among the most widespread measures of signal distortion are:
                           
                              •
                              the Root Mean Square error (RMS), defined as
                                    
                                       (1)
                                       
                                          RMS
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            x
                                                            (
                                                            n
                                                            )
                                                            -
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  ̃
                                                               
                                                            
                                                            (
                                                            n
                                                            )
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                          and
                                       
                                    
                                 
                              

the Percentage RMS Distortion (PRD), defined as
                                    
                                       (2)
                                       
                                          PRD
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            n
                                                            =
                                                            1
                                                         
                                                         
                                                            N
                                                         
                                                      
                                                      
                                                         
                                                            (
                                                            x
                                                            (
                                                            n
                                                            )
                                                            -
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  ̃
                                                               
                                                            
                                                            (
                                                            n
                                                            )
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            n
                                                            =
                                                            1
                                                         
                                                         
                                                            N
                                                         
                                                      
                                                      
                                                         
                                                            (
                                                            x
                                                            (
                                                            n
                                                            )
                                                            -
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  ¯
                                                               
                                                            
                                                            )
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          ·
                                          100
                                          ,
                                       
                                    
                                 
                              

It can be observed in Eq. (1) how the amplitude range of the signal affects the measure: compressed signals constrained to lower amplitudes obtain lower RMS than those with higher amplitude and the same fidelity. The definition of PRD in Eq. (2) overcomes this issue because it uses a normalization which is independent from the amplitude of the signal (and from its DC level). Thus, our choice is using the PRD as the measure of signal distortion, since it allows much fairer comparisons.

Furthermore, the correlation between the PRD and the mean opinion score (MOS) of expert cardiologists, obtained through blind and semi blind tests, was studied by Zigel in [48]. One of the conclusions of that work was that all tested signals with PRD
                        <9% were considered as “good” or “very good” by the cardiologists. Thus, this value is used as quality threshold for ECG compression in our system. Similarly, other works relate PRD to EEG quality. In [49] it is suggested limiting PRD to 7% to maintain 99.5% of the signal energy, while in [50] it is proposed rising to 30% since this value allows a seizure detection rate of 90% to be reached in epilepsy monitoring (using REACT, a state-of-the-art algorithm). Among these two values, 7% is preferred since EEG records may be used in applications requiring higher quality than seizure detection. Fig. 3
                         shows two signals from our databases, an ECG and an EEG, which are compressed with the proposed thresholds and retain their main shapes accurately.

The delays of the proposed encoding and access system are estimated in Table 2
                        . The overall delay is mainly contributed by the latency of acquiring a signal block, expressible as:
                           
                              (3)
                              
                                 block
                                 
                                 length
                                 (
                                 s
                                 )
                                 =
                                 
                                    
                                       block
                                       
                                       length
                                       
                                       (
                                       #
                                       samples
                                       )
                                    
                                    
                                       sampling
                                       
                                       freq
                                       .
                                       
                                       (
                                       #
                                       samples
                                       /
                                       s
                                       )
                                    
                                 
                                 ,
                              
                           
                        In fact, in all the configurations presented this delay is much greater than the sum of delays of the remaining processes (see Table 2: subtotal). This enables real-time operation on the condition of signal blocks as short as possible to maintain the delay at acceptable levels.

The bandwidth required for the transmission of encoded ECG and EEG signals when embedding security elements (mandatory) and additional metadata (optional) is evaluated in Table 3
                        . Four observations were made. First, using long signal blocks produces a decrease in signal bandwidth requirements which stops at 4096 samples/block for ECGs, in the case of EEGs higher values can improve the compression at the cost of very high delays (>20.48s according to Eq. (3)). Long signal blocks allow more signal cycles to be included in a single block, lower frequencies obtain higher relevance and this benefits the sorting of the temporal orientation trees used by the 1D SPIHT, which increases the efficiency of the compression. Second, the signal bandwidth requirements increase slightly (⩽4%) when embedding a big amount of metadata (three last columns in Table 3). Nevertheless this only happens in the first signal register, since the rest do not include containers 2–6. Third, using long signal blocks dramatically reduces the metadata bandwidth requirements since, in each signal register, the size of the security elements with respect to the size of the encoded signal block is lower. Fourth, the encoded signal compresses the original (compression rate >1) despite embedding security elements and metadata. The only exception appears in the first signal register when using short signal blocks (512 samples/block) and embedding more than 3KB in containers 2–6.

The size of the contents arranged in secure frames and subsequently embedded within signal registers for the bandwidth evaluation above are depicted in Table 4
                        . The chosen agent’s certificate type for DS was ECDSA 239 and we considered the case of 5 users with RSA 1024 certificates when embedding containers 2–6. For ECGs, the container 1 included the signal delineation and additional measures obtained from a stress test (VO2, heart rate, concentration of lactate in the blood, VCO2 and speed of the treadmill). For EEGs, the container 1 included a likelihood measure for EEG seizure detection and additional monitoring measures (NiBP, Temp, SPO2, CO2 and heart rate). The ECG delineation consisted of the position of 15 fiducial points (wave onsets, peaks and offsets) per cardiac cycle, each point encoded with 2 bytes. EEG seizure detection likelihood was estimated every second and encoded using 1 byte. Each additional measure was recorded at 1 sample/s and encoded using 1 byte. For containers 2–6 we estimated that its overall size is around 3–10KB. Although they store a lot of different medical data (see Section 2.3:RBAC), most of it can be described by means of IDs.

As demonstrated above, the length of the signal block establishes a tradeoff between the system overall delay and the bandwidth required for the transmission. Therefore two different values are recommended according to the application.
                              
                                 •
                                 512 samples/block for real-time transmission, which yields acceptable delays (see Table 2: total) and low signal transmission rates (see Table 3): MIT-Arrhythmia (2s, 409bps/lead), MIT-Compression (2.7s, 309bps/lead), SCCN-EEG (3.3s, 474bps/channel).

4096 samples/block for offline transmission, which produces longer delays but more efficient signal transmission: MIT-Arrhythmia (12s, 373bps/lead), MIT-Compression (17s, 282bps/lead), SCCN-EEG (22.3s, 389bps/channel). Besides the metadata transmission rate is reduced to one eighth with this configuration.

The signal compression, described in Section 2.1, begins with the wavelet transformation of the signal block. The Coiflet filter with 12 coefficients was chosen for this transformation, since it obtains higher compression efficiency than others (e.g. Daubechies with 20 coefficients) and offers a good tradeoff between the number of operations and the quality of the reconstructed signal. The wavelet decomposition level was set to 6 because we observed that the compression efficiency improves notably until this level but not in the following.

The protection scheme, described in Section 2.3, introduces overhead due to the need of including a Digital Signature (DS) in each signal register (see Fig. 2). Several signature algorithms provide similar security with different DS length: DSA [38] (1024, 2048, 4096) and ECDSA [39] (192, 224, 339) generate signatures sized in the range [0.05,0.06] KB, while RSA [37] (1024, 2048, 4096) signatures result much longer {0.13, 0.26,0.51} KB. To reduce the overhead, only DSA and ECDSA signatures are allowed.

We define embedding capacity (EC) as the amount of metadata that can be embedded with our encoding method when using the same bandwidth as for transmitting the signal uncompressed. The EC
                        
                           i
                         (per lead/channel) of different ECG and EEG signals are shown in Table 5
                        . In most cases the overall EC (e.g. ⩾77.7MB in ambulatory recordings −25.9MB·3 leads- or ⩾2.15MB in stress tests −178.9KB ·12 leads) far exceeds the size that containers 1–6 require to enable e-health services, estimated in Table 4. The difference is what it is saved in transmission and storage, typically ≃70–80% of the original size.

Each signal register j from a lead/channel i has its own embedding capacity, EC
                        
                           ij
                         (depicted in Fig. 4
                        a), resulting from the difference between the sizes of the original signal block and the corresponding signal register (SPIHT bitframe, secure frame and tail). The EC
                        
                           i
                        (t) of a lead/channel i, illustrated in Fig. 4b, is the sum of the EC
                        
                           ij
                         of the blocks 1 to j transmitted/stored until t. The size of the RC, embedded in the first signal register, corresponds to the negative offset in Fig. 4b. The embedding capacity of a lead/channel can be approximated as:
                           
                              (4)
                              
                                 
                                    
                                       EC
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 (
                                 sampling
                                 
                                 freq
                                 ·
                                 bit
                                 
                                 res
                                 -
                                 compressed
                                 
                                 signal
                                 
                                 bitrate
                                 -
                                 
                                    
                                       size
                                       (
                                       DS
                                       )
                                    
                                    
                                       block
                                       
                                       length
                                    
                                 
                                 )
                                 ·
                                 t
                                 -
                                 size
                                 (
                                 RC
                                 )
                                 .
                              
                           
                        To build Table 5, we used this approximation. The sampling frequencies of the signals and their resolutions were consulted in Section 3.1, the compressed signal bitrates in Table 3, the size of the DS (we considered ECDSA 239) in Table 4 and the block length was calculated with Eq. (3).

The implementation of the encoding and access architecture, depicted in Figs. 1 and 2, is openly available at http://sourceforge.net/projects/pfmt/. It is divided into three modules: a standard 1D SPIHT coder-decoder (see Section 2.1), whose optimal parameters of (real-time/offline) operation were studied in Section 3.3; a Graphical User Interface (GUI) to build/access the secure frames and some simple codes to embed the secure frames and retrieve them from the signal registers (see Section 2.2).

As illustrated in Fig. 5
                     , the design of the GUI is rather simple and intuitive, to encourage the use even among users with little technical knowledge. It facilitates the encoding of additional measures and data of the patient in the corresponding containers, the assignment of role-based access profiles to intended users (physicians, researchers, teachers, etc.) and the protection of the resulting signal registers. All the corresponding operations of ciphering, deciphering, signing and checking are carried out by the GUI. However, some interaction is required:
                        
                           •
                           With the agent who encodes the signal registers, he/she must:
                                 
                                    1.
                                    load the SPIHT bitframes;

load the content of the data container/s (1–6), some may be empty;

load the certificates of the users and indicate their RBAC profiles (0–5);

load his/her digital certificate, if desired change the default hash function and the ciphering algorithm;

load his/her password-protected private key;

save the resulting signal registers.

With the user who accesses the signal registers, he/she must:
                                 
                                    1.
                                    load the signal registers;

export the Private Access Table to check his/her RBAC profile (if desired);

load his/her password-protected private key (only if he/she is allowed to access containers 2–6);

save the container/s that he/she is allowed to access.

These interactions with agents and users could be minimized by defining system configuration profiles. Due to the cryptographic operations involved, it is necessary that each agent and each user possess his/her own digital certificate (and the coupled password-protected private key). However, this requirement did not decrease the experience of the consulted physicians, who pointed out that the GUI was easy to handle. The certificates associated with electronic IDs are valid for this purpose.

@&#CONCLUSIONS@&#

The proposed encoding and access architecture for 1D biomedical signals looks for user satisfaction, since it guarantees clinical value of signals, permits real-time operation (overall delays about 2–3.3s) and can be easily handled by PACS and users through an intuitive interface that we provide. Besides, the system is very efficient and secure. It permits embedding large amounts of additional information within the signal (e.g. ≃3KB per lead in resting ECGs, ≃200KB per lead in stress tests, ≃30MB per lead in ambulatory ECGs), detecting corruption of the signal or the information and implementing different access levels for a variety of professional roles. The compression ratio achieved by the encoding is quite high, ranging from ≃3 in real-time transmission to ≃5 in offline operation, despite of the embedding of security elements and metadata to enable e-health services.

In addition, this architecture could be extended to biomedical signals of higher dimension (e.g. 2D: MRIs, TACs, 3D: echocardiograms), since the encoding relies on the SPIHT algorithm. This would only require changing to the adequate SPIHT modality (2D/3D), tuning the compression parameters and establishing the distortion threshold for each new type of signal. Regarding the protection scheme, although it is based on robust cryptographic elements we plan to add watermarks as a security supplement.

To sum up, this architecture fosters the secure and efficient storage, transmission and access to biomedical tests in healthcare environments. Furthermore, most of the system features (high signal compression with clinical quality, real-time operation, embedding within the signal, security with reduced overhead) are not currently supported by well-established signal standards (e.g. DICOM waveform 30, SCP-ECG), which makes it a promising alternative for the development of new and upgrade of existing e-health services.

@&#ACKNOWLEDGEMENTS@&#

This research work has been partially supported by Project TIN-2011-23792/TSI from the Ministerio de Economía y Competitividad (MINECO), the European Regional Development Fund (ERDF) and the European Social Fund (ESF).

@&#REFERENCES@&#

