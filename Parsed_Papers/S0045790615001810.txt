@&#MAIN-TITLE@&#Linear feature detection based on the multi-scale, multi-structuring element, grey-level hit-or-miss transform

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Multi-scale extension of multi-structuring elements for hit-or-miss transform.


                        
                        
                           
                           Utilizing the grey-level hit-or-miss transform for linear feature detection.


                        
                        
                           
                           Performing linear feature detection without thresholding.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Multi-scale

Hit-or-miss transform

Linear feature detection

Mathematical morphology

@&#ABSTRACT@&#


               
               
                  Detecting the linear features in an image is a key technology for different applications. In this paper, a simple and effective algorithm based on the hit-or-miss transform is proposed. To detect linear features with different directions, multi-structuring elements corresponding to different directions are constructed. To detect linear features with different widths, a multi-scale extension of the constructed multi-structuring elements is used. Then, the grey-level hit-or-miss transform that utilizes the constructed multi-scales of multi-structuring elements could effectively extract all of the possible linear features without thresholding. Therefore, after refining the extracted linear feature regions using three simple steps, the final linear features could be effectively detected. Experimental results on different images from different applications show that the proposed algorithm performs well for detecting linear features with different widths, different grey distributions and noises.
               
            

@&#INTRODUCTION@&#

Linear features in an image usually represent the important properties in different image-based applications, such as defect detection in industry [1], insect morphology analysis [2], and length measurement [3,4]. So, it is crucial to detect linear features in an image.

Linear features in an image are usually complicated, which make detection difficult. One effective algorithm should satisfactorily detect all of the possible linear features in different types of images. To detect linear features, several algorithms have been proposed. Radon and Hough transform based algorithms [5,6] have been used to detect straight lines, circles and ellipses, but they could not be easily generalized for detecting lines with arbitrary shapes. Empirical algorithms [1,7] usually use prior knowledge from the special type of detected linear features, and therefore, these algorithms could not detect all of the possible linear features in different types of images. Shortest path based methods [8,9] could only detect several linear features because of some special limitations; thus, they may be not effective for detecting all of the possible linear features in an image. To detect all of the possible linear features, thresholding methods [1,10], non-maximum suppression based methods [2] and edge detectors [1,11] have been used. Thresholding methods may be effective if the grey value distributions of the linear feature regions are very different from other regions. Non-maximum suppression-based methods and edge detectors may be sensitive to the noises in images or the grey variation of image regions.

Mathematical morphology has been widely used in different applications [12–24]. Among the morphological operators, the top-hat transform and grey-level hit-or-miss transform could be used to extract image regions with a similar shape to the used structuring element [13,17–24]. However, the performance of the top-hat transform based algorithm may be affected by thresholding in the post-processing procedure. Linear features are usually the regions with linear shape in an image. So, the grey-level hit-or-miss transform may also be used to detect linear features by utilizing the linear structuring element. Moreover, by appropriately constructing the hit-or-miss structuring elements, post-processing after the hit-or-miss transform for detecting the possible linear features may not need thresholding. Actually, because the perfect value for thresholding is important but difficult to determine, using the hit-or-miss transform for linear feature detection would simplify the detection procedure. Thus, a hit-or-miss transform based algorithm is proposed in this paper. The proposed algorithm is effective and simple. The main contributions of this paper are: (1) Utilizing the grey-level morphological hit-or-miss transform in the application of linear feature detection; and (2) proposing a simple but effective algorithm for linear feature detection without thresholding. In this algorithm, multi-structuring elements are constructed and used in the hit-or-miss transform to detect all of the possible linear features with different directions. Additionally, the multi-scales of the multi-structuring elements are designed and used in the hit-or-miss transform to detect all of the possible linear features with different widths. Moreover, no special information or properties of the original image is needed. Then, the proposed algorithm could be used in different types of images. Additionally, several simple operations are used to obtain the lines with the width of a single pixel to represent the final detected linear features. Experimental results on different types of images show that the proposed algorithm is effective.

This paper is organized as follows. Section 2 introduces the hit-or-miss transform. Section 3 presents the algorithm. Section 4 describes the experimental results, and Section 5 concludes the paper.

The definitions of the morphological operators in this section are from [12–24]. Suppose there is a Euclidean or digital space E (E
                     =
                     R
                     
                        n
                      or Z
                     
                        n
                     ). For a set 
                        
                           I
                           ⊂
                           E
                        
                     , 
                        
                           
                              
                                 I
                              
                              
                                 ˇ
                              
                           
                        
                     
                     ={−x|x
                     ∈
                     I} is the symmetrical of I. Ic
                        
                     =
                     E/I is the complement of I. Ip
                     
                     ={x
                     +
                     p|x
                     ∈
                     I} is the translate of I. 
                        
                           ϕ
                        
                      is a null set. Morphological operations are based on two sets: the image F and the structuring element B.

The dilation and erosion of image F by using structuring element B are defined using the Minkowski addition (denoted by 
                        
                           ⊕
                        
                     ) and subtraction (denoted by 
                        
                           ⊖
                        
                     ) as follows:
                        
                           (1)
                           
                              F
                              ⊕
                              B
                              =
                              
                                 
                                    
                                       ⋃
                                    
                                    
                                       b
                                       ∈
                                       B
                                    
                                 
                              
                              
                                 
                                    F
                                 
                                 
                                    b
                                 
                              
                              ,
                           
                        
                     
                     
                        
                           (2)
                           
                              F
                              ⊖
                              B
                              =
                              
                                 
                                    
                                       ⋂
                                    
                                    
                                       b
                                       ∈
                                       B
                                    
                                 
                              
                              
                                 
                                    F
                                 
                                 
                                    -
                                    b
                                 
                              
                              .
                           
                        
                     In the definitions of dilation and erosion, b is the pixel of B.

The hit-or-miss transform is defined based on dilation and erosion. In the hit-or-miss transform, a pair of structuring elements (denoted by A and B and 
                        
                           A
                           ∩
                           B
                           =
                           ϕ
                        
                     ) is used. A and B are the hit and miss structuring elements, which represent the foreground and background structuring elements, respectively. Using A and B, the hit-or-miss transform is defined as follows [12,22,24]:
                        
                           (3)
                           
                              F
                              ⊗
                              (
                              A
                              ,
                              B
                              )
                              =
                              (
                              F
                              ⊖
                              B
                              )
                              ∩
                              (
                              
                                 
                                    F
                                 
                                 
                                    c
                                 
                              
                              ⊕
                              B
                              )
                              .
                           
                        
                     
                     
                        
                           ⊗
                        
                      denotes the general definition of the hit-or-miss transform.

The hit-or-miss transform has been frequently used in binary image processing. In addition, it has been used to generalize the hit-or-miss transform for grey-level image analysis [12,22,24]. Suppose T represents the grey levels of an image, and TE
                      represents grey-level images E
                     →
                     T, denoted by F, G, …, respectively. Then, TE
                      is a complete lattice for the component-wise ordering F
                     ⩽
                     G, F
                     ∈
                     TE
                     , G
                     ∈
                     TE
                     . In this case, the grey dilation and erosion are defined by using Minkowski addition (
                        
                           ⊕
                        
                     ) and subtraction (
                        
                           ⊖
                        
                     ) as follows [12,22,24]:
                        
                           (4)
                           
                              F
                              ⊕
                              G
                              =
                              
                                 
                                    
                                       sup
                                    
                                    
                                       h
                                       ∈
                                       E
                                    
                                 
                              
                              (
                              F
                              (
                              p
                              -
                              h
                              )
                              +
                              G
                              (
                              h
                              )
                              )
                              ,
                           
                        
                     
                     
                        
                           (5)
                           
                              F
                              ⊖
                              G
                              =
                              
                                 
                                    inf
                                 
                                 
                                    h
                                    ∈
                                    E
                                 
                              
                              (
                              F
                              (
                              p
                              -
                              h
                              )
                              -
                              G
                              (
                              h
                              )
                              )
                              .
                           
                        
                     In image space, p and h represent the pixels in F and G, respectively.

Using the grey dilation and erosion, one grey-level hit-or-miss transform, denoted by HMT, is defined as follows [12,22,24].
                        
                           (6)
                           
                              HMT
                              (
                              p
                              )
                              =
                              
                                 max
                              
                              {
                              (
                              F
                              ⊖
                              A
                              )
                              (
                              p
                              )
                              -
                              (
                              F
                              ⊕
                              
                                 
                                    
                                       B
                                    
                                    
                                       ⌣
                                    
                                 
                              
                              )
                              (
                              p
                              )
                              ,
                              0
                              }
                              .
                           
                        
                     
                  

The hit-or-miss transform detects regions corresponding to the shape of the used structuring elements. Then, if the pair of structuring elements is reasonably designed, the hit-or-miss transform could detect linear features with shapes corresponding to the shape of the used structuring elements. To detect linear features at all directions, multi-structuring elements corresponding to different directions should be used.

In digital space, any linear feature could be approximately represented by lines in four directions: 0°, 45°, 90° and 135° [2,17,23]. Therefore, four pairs of structuring elements corresponding to four directions (0°, 45°, 90° and 135°) could be constructed and used. The hit structuring element A is used to represent the linear feature regions. Four hit structuring elements corresponding to four directions (0°, 45°, 90° and 135°) are demonstrated in Fig. 1
                           . The miss structuring element B represents the outer region of linear feature regions. Four miss structuring elements corresponding to four directions (0°, 45°, 90° and 135°) are demonstrated in Fig. 2
                           . Although these used structuring elements have similar shapes to [23], these structuring elements in this paper are used by the hit-or-miss transform and have different size relationships from [23]. Additionally, these structuring elements have multi-scale extensions in this paper.


                           nL is the length of the hit and miss structuring elements. nW is the width of the hit structuring element. nIW is the width of the inner region of the miss structuring element. nCW is the width of the outer region of the miss structuring element.

In digital space, the matrix expressions of the hit structuring element A
                           0 and the miss structuring element B
                           0 are as follows:
                              
                                 (7)
                                 
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           0
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           0
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           0
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           0
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        nW
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           0
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           0
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           0
                                                                        
                                                                        
                                                                           …
                                                                        
                                                                        
                                                                           0
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                ︷
                                             
                                          
                                       
                                       
                                          nL
                                       
                                    
                                    .
                                 
                              
                           
                           
                              
                                 (8)
                                 
                                    
                                       
                                          B
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        nCW
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       0
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       0
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       0
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       0
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        nIW
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       …
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        nCW
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                ︷
                                             
                                          
                                       
                                       
                                          nL
                                       
                                    
                                    .
                                 
                              
                           
                        

In the expressions, one represents the covered pixel by the structuring element. Zero represents the un-covered pixel by the structuring element. A
                           45, A
                           90 or A
                           135 is the result of the 45°, 90° or 135° rotation of A
                           0, respectively. B
                           45, B
                           90 or B
                           135 is the result of the 45°, 90° or 135° rotation of B
                           0, respectively.

Using structuring elements (A
                           0, B
                           0), the hit-or-miss transform detects linear features corresponding to direction 0° as follows. max represents the maximum operation.
                              
                                 (9)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    .
                                 
                              
                           
                        

Similarly, the detected linear features corresponding to directions 45°, 90° and 135° are as follows:
                              
                                 (10)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          45
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          45
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          45
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          45
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    ,
                                 
                              
                           
                           
                              
                                 (11)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          90
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          90
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          90
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          90
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    ,
                                 
                              
                           
                           
                              
                                 (12)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          135
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          135
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          135
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          135
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    .
                                 
                              
                           
                        

Combining the linear features of different directions would produce all of the possible linear features [2,17,23]. In this paper, we also use this method to combine the linear features of different directions. Then, the final result of the linear feature detection should be the combination of the results HMT0, HMT45, HMT90 and HMT135 at different directions (0°, 45°, 90° and 135°) as follows:
                              
                                 (13)
                                 
                                    L
                                    =
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    +
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          45
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          45
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    +
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          90
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          90
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    +
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          135
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          135
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    .
                                 
                              
                           
                        

Actually, linear features in images usually have different widths. One value of nIW will only extract linear features with width nIW. To extract all of the possible linear features with different widths, different scales of miss structuring elements B with different values of nIW should be used.

Suppose n scales should be used. The pair of structuring elements corresponding to direction 0° at scale i (1⩽
                           i
                           ⩽
                           n) is denoted by (A
                           0, B
                           (
                           
                              i
                           
                           , 0)). In addition, the width of miss structuring elements B
                           (
                           
                              i
                           
                           , 0), denoted by nIWi
                           , is nIWi
                              
                           =2×
                           i
                           +1. Then, the detected linear features corresponding to direction 0° at scale i are expressed as follows.
                              
                                 (14)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          0
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          0
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    .
                                 
                              
                           
                        

Similarly, the pairs of structuring elements corresponding to directions 45°, 90° and 135° at scale i (1⩽
                           i
                           ⩽
                           n) are denoted by (A
                           45, B
                           (
                           
                              i
                           
                           , 45)), (A
                           90, B
                           (
                           
                              i
                           
                           , 90)) and (A
                           135, B
                           (
                           
                              i
                           
                           , 135)), respectively. Then, the detected linear features corresponding to directions 45°, 90° and 135° at scale i are expressed as follows:
                              
                                 (15)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          45
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          45
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          45
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          45
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    ,
                                 
                              
                           
                           
                              
                                 (16)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          90
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          90
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          90
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          90
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    ,
                                 
                              
                           
                           
                              
                                 (17)
                                 
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          135
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          135
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    (
                                    F
                                    ⊖
                                    
                                       
                                          A
                                       
                                       
                                          135
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    -
                                    (
                                    F
                                    ⊕
                                    
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   ⌣
                                                
                                             
                                          
                                       
                                       
                                          (
                                          i
                                          ,
                                          135
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    ,
                                    0
                                    }
                                    ,
                                 
                              
                           
                        

So, the final detected linear features at scale i, denoted by Li
                           , are the combination of HMT(
                           
                              i
                           
                           , 0), HMT(
                           
                              i
                           
                           , 45), HMT(
                           
                              i
                           
                           , 90) and HMT(
                           
                              i
                           
                           , 135) as follows:
                              
                                 (18)
                                 
                                    
                                       
                                          L
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          0
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    +
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          45
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          45
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    +
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          90
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          90
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    +
                                    HMT
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          135
                                       
                                    
                                    ,
                                    
                                       
                                          B
                                       
                                       
                                          (
                                          i
                                          ,
                                          135
                                          )
                                       
                                    
                                    )
                                    (
                                    p
                                    )
                                    .
                                 
                              
                           
                        

Linear features are usually bright or dark regions in an image. The hit-or-miss transform is used to extract bright regions. However, if the linear features are dark regions in an image, the linear features will be bright regions in the complementary of the original image. Then, the complementary of the original image could be used. Therefore, only bright linear features are considered in this paper. In this case, the detected linear features at different scales should be bright regions, which means the final result of the detected linear features at all scales should be the maximum value of the detected results of all of the scales for each pixel. Then, the final detected result L could be expressed as follows.
                              
                                 (19)
                                 
                                    L
                                    =
                                    
                                       max
                                    
                                    (
                                    
                                       
                                          L
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          L
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          L
                                       
                                       
                                          n
                                       
                                    
                                    )
                                    .
                                 
                              
                           
                        

The implementation of the hit-or-miss transform using multi-scales of multi-structuring elements for linear feature detection is demonstrated in Fig. 3
                           .

After performing the hit-or-miss transform with multi-scales of multi-structuring elements, all of the pixels with grey values that are larger than zero should be the linear feature regions. However, because the linear feature regions usually have different widths or different grey distributions and some regions are very dim, the remaining linear feature regions may have some defects, such as breaking one linear feature into several parts and separating one linear feature into two linear features by isolating holes. To suppress these defects, a repairing step is used.

A morphological dilation operation could dilate binary image regions [12]. Then, the dilation operation could be used to connect the broken regions. However, dilation may also connect some very close regions that belong to different linear feature regions. To avoid this situation, the morphological thin operation [12] is performed first before the dilation operation. Thin operation could maintain the shape and the length of the linear feature regions while shrinking the regions. Then, the following dilation operation connects broken regions while avoiding the combination of the neighbouring linear feature regions. Because the dilation operation is used to connect the broken regions, the used structuring element should be small. Usually, the structuring element could be a square with size one.

Linear features are usually represented by lines with the width of a single pixel. After the repairing step, the detected linear features are binary linear feature regions. To obtain linear features represented by lines with the width of a single pixel, the morphological thin operation [12] is used. The final result of thin operation could effectively give the lines with the width of a single pixel.

After thin operation, there may be some very small line segments in the result image. These small line segments usually correspond to the noise regions of the original image, and they should be removed. Because these small line segments have very small lengths, they could be easily removed by comparing their lengths with a threshold T. If the length of one line is smaller than T, the corresponding line should be removed. T is used to remove small lines, which should be a small value. In this paper, T
                           =3. After this step, the final lines with the width of a single pixel represent the final detected linear features of the original image.

@&#EXPERIMENTAL RESULTS@&#

To verify the effective performance of the proposed algorithm, images from various applications are used in the experiment. The test image set contains more than 20 images, including biomedical images, wood images, skin images, and fingerprint images. Some examples of these images are shown in Figs. 6–11
                     
                     
                     
                     
                     
                     
                     
                     . In this paper, all of the colour images are converted to grey images. The parameters used in the proposed algorithm are nL
                     =5, nW
                     =1, nCW
                     =2, and n
                     =7.


                        n is the used number of scales in the multi-scale morphological theory based algorithms, which determines the size of the used structuring elements. For linear feature detection, thick linear features are detected by using structuring elements with a large size. Therefore, the number of scales n could be determined by the thickness of the linear features in an image. Usually, the linear features in an image are thin regions compared with other regions. This means that there is no need to use a very large number of scales. The proposed algorithm has been used to process different types of images for linear feature detection, and the effective results verified that using 5–8 scales is sufficient for most of the applications. In this paper, n
                        =7 scales are used. Moreover, a slight change in the number of scales would not affect the detection result.


                        Fig. 4 is an example of the result comparison when using different scale numbers. (a) is an original wood image with linear features. (b), (c), (d), (e) and (f) are the detection results of the proposed algorithm using n
                        =4, 5, 6, 7 and 8 scales, respectively. Fig. 4 shows that the sixth linear feature is obviously broken in the result when using 4 scales (Fig. 4(b)). Therefore, using 4 scales may not be sufficient. The results of using 5, 6, 7 and 8 scales could effectively display the linear features of the original image (Fig. 4(c)–(f)). In addition, these results are very similar. These results verified that using 5–8 scales could give a reasonable result, and a slight change in the number of scales would not heavily affect the final detection result.


                        Fig. 5 is another example of the result comparison when using different scale numbers. Many detected linear features are broken in the result when using 4 scales (Fig. 5(b)). Although there are some small broken linear features in the result when using 5 scales (Fig. 5(c)), the result is acceptable. The results of using 6, 7 and 8 scales (Fig. 5(d)–(f)) are effective. This example also verified that using 5–8 scales was effective for linear feature detection. Moreover, the results shown in Fig. 5(d)–(f) are very similar. So, a slight change in the number of scales would not heavily affect the final detection result.

In this paper, we use 7 scales. The proposed algorithm has been verified on different types of images. All of the experimental results verified that using n
                        =7 scales are effective for all of the images.


                        Figs. 6 and 7 list some detection results. Fig. 6 is an example of a biomedical image. (a) is the original image. (b) is the result of the hit-or-miss transform using multi-scales of multi-structuring elements. (c) is the result of repairing. (d) is the result of thin operation. (e) is the final result of the proposed algorithm. The linear features in the original image have different directions and widths. Additionally, the contrast of the linear features is not consistent. However, the hit-or-miss transform with multi-scales of multi-structuring elements could effectively identify all of the possible linear features that are shown in (b). After treating the pixels with non-zero grey values as linear feature regions and repairing these regions to refine the small defects, the linear feature regions are presented in (c). Then, these regions could be represented by using the lines given by the thin operation shown in (d). After deleting the very small lines, the final detected result clearly represents the linear features of the original image. This experiment shows that although the linear feature regions have different directions, widths and contrasts, the proposed algorithm could correctly detect most of the linear features. This is mainly because the multi-scales of the constructed multi-structuring elements are effectively used by the hit-or-miss transform. So, the following several simple post-processing steps could give an effective result.


                        Fig. 7 is an example of the neurite outgrowth image. Some linear feature regions are dim in the original image. In addition, the original image has many noise regions, especially at the bottom of the image. However, because of the constructed structuring elements and the followed simple post-processing steps, the proposed algorithm could correctly detect most of the linear features and satisfactorily suppress the noise regions.

These examples verified that the proposed algorithm could effectively detect different types of linear features with different directions, different widths and different grey distributions.

To perform the comparison, the effective and widely used multiple directional non-maximum suppression (MDNMS) based algorithm [2], Otsu’s thresholding method [1,5] and the Canny edge detector [1] are used. They are widely used region detection methods and could detect all of the possible linear feature regions in different types of images. Moreover, Otsu’s thresholding method and the Canny edge detector have been used in various applications or act as comparison methods for linear feature detection [1,5]. So, MDNMS, Otsu’s thresholding method and the Canny edge detector are chosen as the comparison methods.


                           Fig. 8 is an example of the brow skin image. The Canny edge detector detects many linear features. However, because the Canny edge detector mainly detects the linear features along the edge of linear regions, each linear feature region has two detected lines and some of the detected lines are noise regions. Although Otsu’s thresholding method detects some linear feature regions, many detected regions are not the real linear features because Otsu’s thresholding method detects linear features mainly based on the grey distributions. Additionally, some dim or unclear linear feature regions could not be detected by the Otsu’s thresholding method. MDNMS and the proposed algorithm could correctly detect most of the linear features. However, some small linear features are not detected or some linear features are not correctly linked by MDNMS. Based on the hit-or-miss transform with multi-scales of multi-structuring elements, the proposed algorithm could correctly detect most of the linear features. Therefore, the proposed algorithm achieves a better performance than other algorithms.


                           Fig. 9 is an example of the wood image. The wood textures are linear features with different line widths and grey distributions. The original image is not clear and contains noises. All of the algorithms could detect most of the linear features. However, because Otsu’s thresholding method gives the result based on the grey distribution and the Canny edge detector mainly detects the edge features, both the Otsu’s thresholding method and the Canny edge detector are sensitive to the noise and grey distribution. Thus, the results of the Otsu’s thresholding method and the Canny edge detector contain many noises. Additionally, MDNMS provides noise regions and could not completely detect some linear feature regions. Because of the hit-or-miss transform and the followed simple post-processing, the proposed algorithm correctly detects nearly all of the linear feature regions and provides few noise regions.


                           Fig. 10 is another example of the wood image. The linear features contain some unclear and dim wood textures. Because some wood textures are dim, Otsu’s thresholding method could not detect these dim linear features. Although MDNMS and the Canny edge detector detect most of the linear features of wood texture, several small linear regions and noise regions are also given. The proposed algorithm detects some very dim and small linear features, and the noise regions are well suppressed. These indicate that the proposed algorithm performs better than other algorithms.


                           Fig. 11 is an example of the fingerprint image. The linear features are rich, and there are some dim features and noises. Otsu’s thresholding method detects most of the linear features, but some linear feature regions are incorrectly combined or are not detected because the method is sensitive to the grey changes. Additionally, because the original image is not clear, the Canny edge detector, which is sensitive to noises, provides some noise regions. Although MDNMS correctly detects nearly all of the linear features, some small linear features along the correct linear features are incorrectly detected. Thus, MDNMS could not perform well for detecting the dim linear features. The proposed algorithm correctly detects nearly all of the linear features, and some noise regions are also suppressed. Therefore, the proposed algorithm performs well.

These examples verified that the proposed algorithm was effective for linear feature detection and performed better than some existing algorithms.

Technically, because it is very hard to count the pixels of linear features concisely, it is not easy to give a reasonable quantitative comparison. However, a quantitative comparison using the measures in [1] has still been given to show the effective performance of the proposed algorithm in this paper. Two well-used measures, denoted by Pc
                            and Pp
                           , are defined as follows [1].
                              
                                 (20)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          c
                                       
                                    
                                    ≈
                                    
                                       
                                          
                                             
                                                N
                                             
                                             
                                                c
                                             
                                          
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                           
                              
                                 (21)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          p
                                       
                                    
                                    ≈
                                    
                                       
                                          
                                             
                                                N
                                             
                                             
                                                c
                                             
                                          
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           In the definitions, Na
                            represents the length of all of the linear features of the original image. Nb
                            represents the length of all of the detected linear features by one algorithm. Nc
                            represents the length of the linear features that are correctly detected by the same algorithm.


                           Pc
                            represents the completeness of the detected linear features by one algorithm. Pp
                            represents the correctness of the detected linear features by the same algorithm. Larger values of Pc
                            and Pp
                            mean that the performance of the corresponding algorithm for the complete and correct detection of linear features is better.

Different images have been used to do the quantitative comparison. The mean value of the Pc
                            or Pp
                            values of each algorithm on these images for the overall quantitative comparison are shown in Table 1
                           . Table 1 shows that the Canny edge detector and the Otsu’s thresholding method could detect the linear features in images, but the completeness (Pc
                           ) of the detected linear features is still worse than the proposed algorithm. Additionally, the correctness (Pp
                           ) of the detected linear features may not be good compared to the proposed algorithm, which indicates that some of the detected linear features by the Canny edge detector and Otsu’s thresholding method are not correct. MDNMS gives reasonable values of completeness (Pc
                              
                           =95%) and correctness (Pp
                              
                           =91%) on these images, which verifies that MDNMS is effective for linear feature detection. However, Table 1 shows that the values for the completeness (Pc
                              
                           =97%) and correctness (Pp
                              
                           =96%) of the proposed algorithm are the best, which indicate that the proposed algorithm could correctly detect nearly all of the linear features and could perform the best among these algorithms.

It should be noted that although it is difficult to give a very concise quantitative comparison for linear feature detection, the results shown in Table 1 still verified that the proposed algorithm was effective for linear feature detection. These results give a similar conclusion to the qualitative comparison experiment. Moreover, the images used in this experiment are different images obtained from different applications. The effectiveness of the proposed algorithm on these images indicates that the proposed algorithm may be used in different applications.

@&#DISCUSSIONS@&#

There are several advantages in the proposed algorithm. First, the proposed algorithm is simple. Thresholding is usually needed for linear feature detection. However, the threshold value is not easy to determine. So, some complicated pre-processing or post-processing steps may be needed. The proposed algorithm does not need thresholding and could be simply implemented as a multi-scale hit-or-miss transform followed by some simple refinement steps. This paper gives a simple solution to avoid the thresholding problem. Second, the proposed algorithm is effective. The comparison results show that nearly all of the linear features could be correctly and completely detected. In addition, the performance outperforms several other algorithms. Thus, this paper gives an effective method for linear feature detection. Third, the proposed algorithm might be widely used in different applications. Different types of images from different applications have been used to verify the effectiveness of the proposed algorithm. In addition, the proposed algorithm does not need the special information of the image type. These mean the proposed algorithm is applicable for a wide area of applications.

Additionally, there is a disadvantage. Because the proposed algorithm uses the grey-level hit-or-miss transform to extract the protruding regions, heavy noises may affect the performance of the proposed algorithm. Actually, heavy noises may not always exist. In addition, there are usually not very heavy noises. Thus, the proposed algorithm could still be widely used in different applications.

In all, this paper demonstrates a simple and effective algorithm for linear feature detection.

@&#CONCLUSIONS@&#

Linear feature detection is one of the crucial techniques in image processing. Because linear feature regions in an image are usually complicated, it is difficult to detect all of the linear features. To effectively detect all of the linear features in different types of images, a grey-level hit-or-miss transform based algorithm without thresholding is proposed to solve this problem. The hit-or-miss transform could be used to detect image regions with a similar shape to the shape of the structuring elements. Because of the constructed multi-structuring elements in the hit-or-miss transform, the proposed algorithm could detect linear features with different directions. Additionally, because of the multi-scale extension of the multi-structuring elements in the hit-or-miss transform, the proposed algorithm could detect linear features with different widths. Moreover, the detected linear features are refined by using several simple operations without thresholding, which gives the lines with the width of a single pixel. These lines represent the final detected linear features. Therefore, the proposed algorithm is simple and effective. Experimental results have been performed on different types of images, which verified that the proposed algorithm could effectively detect linear features with different widths, different grey distributions and noises. This is useful for different applications, such as defect detection in industry, insect morphology analysis, and length measurement.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to thank the anonymous reviewers and editors for their very constructive comments. This work is partly supported by the National Natural Science Foundation of China (61271023), the Program for New Century Excellent Talents in University (NCET-13-0020), the R&D Program (2012BAH07B01), the Fundamental Research Funds for the Central Universities (YWF-14-YHXY-029, YWF-13-T-RSC-028, YWF-13-JQCJ-026, YWF-15-YHXY-022) and the Innovation Foundation of AVIC. The authors greatly appreciate Changming Sun at CMIS in Sydney, Australia for providing the original images used in Figs. 5–8 and 11 and for providing some comparison results. The authors would like to thank Dr. Yan Li at Peking University in Beijing, China, for many helpful discussions and comments.

@&#REFERENCES@&#

