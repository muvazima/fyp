@&#MAIN-TITLE@&#Understanding requirements of clinical data standards for developing interoperable knowledge-based DSS: A case study

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We identify and use 15 functional and non-functional criteria to evaluate standards.


                        
                        
                           
                           We define a methodology based on case-study analysis for the evaluation of the standards.


                        
                        
                           
                           Using a PHR as an intermediate system enables CDSS interoperability with data sources.


                        
                        
                           
                           An online appendix is provided to show the modeling of the case-study examples.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Data standards

Personal Health Record

Decision Support Systems

Interoperability

Knowledge representation

@&#ABSTRACT@&#


               
               
                  Knowledge-based Clinical Decision Support Systems (KB-DSSs) promise to provide patient-specific recommendations, generated by matching the KB with electronic patient data from various sources. The challenge of making KB-DSSs interoperable can be simplified by including those data sources into an integrated Personal Health Record (PHR). This paper aims to identify relevant criteria to support the evaluation of data standards for the PHR, following a case-study approach. 15 functional and non- functional criteria were identified and used to evaluate selected standards (HL7 CDA, HL7 vMR and openEHR). Our evaluation identifies their main advantages and disadvantages to support the development of interoperable, data-integrated KB-DSSs
               
            

@&#INTRODUCTION@&#

Different KB-DSSs have been developed to support the care process of a patient, from differential diagnosis [1] to treatment management. During the last two decades, many KB-DSSs have been developed as Computer-interpretable Guidelines (CIGs) represented in formalisms such as Asbru [2], GLIF [3], PROforma 
                     [4], SAGE [5] or GLARE [6] and enacted using their respective execution engines [7]. These tools have been created in order to provide real-time, knowledge-based decision support and recommendations to clinicians, based on the best known scientific evidence provided by clinical guidelines [8].

Despite the advances produced in this field, several barriers [9–11] have been identified for the adoption of KB-DSS as a supportive tool for physicians in their daily routine. Some of these barriers include (a) the lack of agreement on using the same standard controlled vocabulary for representing clinical concepts in healthcare information systems and (b) the difficulty of integrating KB-DSSs with the clinical workflow. Acknowledging the former barrier and focusing on aspects related to the latter, this paper investigates ways to represent and access patient data to support providing patient-specific KB-DSSs.

To emphasize the dependency of the KB-DSS on integration of data from multiple types and sources, we call these systems data-integrated KB-DSSs. Furthermore, healthcare IT systems need to be interoperable. Interoperability goes beyond the technical problem of data integration, and it has been defined [12] as a broad business requirement of systems in the healthcare sector to enable information exchange in a way (e.g., using standards that maintain security and privacy of the patient, etc.) that other systems – like KB-DSSs – can access patient data.

While data is stored in Electronic Health Records (EHRs)
                        2
                     
                     
                        2
                        We use the terms Electronic Health Records (EHRs) and Electronic Medical Records (EMRs) to express the same meaning along the paper.
                      it is not always integrated in a way that supports KB-DSS; the most common use of EHR data is not for automatic decision-support but for record-keeping, billing, and for enabling physicians to look at a patient's current test results, clinical history, etc. in order to reach a diagnosis and evaluation of patient state and provide treatment not based on a DSS. For prospective DSS, the data has to be structured, rather than be stored as free text or imaging data, such that formalized decision-criteria could be compared against it by the KB-DSS. Moreover, automated KB-DSS may require data arriving from different sources: e.g., not only findings about the patient arriving from EHRs but also bio-signals from wearable monitoring devices attached to the patients, and temporal abstractions discovered automatically by intelligent data analysis algorithms, which are usually not found in EHRs. In addition to prospective DSS, when KB-DSSs are used for retrospective guideline compliance analysis, the actions that were recommended for the patient by the DSS serve as another data source. Integrating these various sources of data into a medical record with a uniform format simplifies its processing by KB-DSS.

Some data-integrated KB-DSSs include the possibility to model patient data (e.g., GLIF [3], and SAGE [5]), but they do not present an integrative approach that guarantees independence from the ways in which EHRs store and exchange data with the KB-DSS. As pointed out by Sittig et al. [9], there is a need to “create a set of standards-based interfaces to externally maintained Clinical Decision Support services that any EHR could subscribe to”. The architectural idea proposed by Sittig et al. could be leveraged by introducing the correct interfaces between the different system components, thus separating the KB modeling step from the knowledge-to-data mapping, described in Section 2.1. Furthermore, one of the system components that may help making this architecture feasible is an integrated Personal Health Record (PHR), described in Section 2.2, which should have a standard data model suitable for the problems associated with the development of data-integrated KB-DSS.

The objectives of this paper are to identify relevant criteria that need to be considered when representing data in a PHR in a way that would ease data integration and decision support, and to describe our findings didactically, through a case study using selected standards. The rest of this paper is organized as follows. Section 2 describes background and related work. Section 3 describes the standards selected for evaluation, the case study examples, the evaluation criteria, and the evaluation process. Section 4 describes the evaluation results. Section 5 discusses limitations. Section 6 concludes the paper.

@&#BACKGROUND@&#

In this section we first describe the need for knowledge-to-data mappings. Then we introduce the benefits of using integrated Personal Health Records for data-integrated KB-DSS, and lastly we describe related works with similar requirements.

Clinical KB-DSS usually makes use of high-level clinical abstractions that need to be evaluated in order to provide a concrete recommendation. For example, the evaluation of the pregnancy condition of a patient is straightforward from a medical viewpoint, but it is not so trivial when a KB-DSS needs to infer it based on available EHR data. The inference is not trivial considering that data may be missing (e.g., doctors did not record a pregnancy diagnosis yet positive laboratory test results confirm pregnancy). Moreover, the data needed to make a single inference may reside in more than one data source, such as Electronic Medical Records (EMRs) but also user input to the KB-DSS, abstractions of bio-signal data from monitoring devices, patient-specific KB-DSS recommendations, and detected data patterns. When dealing with such diversity of possible data, it would not be feasible to represent all these cases as rules in the KB mainly because of low portability, complexity of maintenance and update. Following this idea, mappings between knowledge-based concepts and a common data model should be defined in a meta-language (e.g., an ontology), resolving the mapping during the KB-DSS' interpretation of decision criteria, as described in [13]. This approach for data integration is known in the database community as the Global-as-View approach [14].

Nonetheless, in order to address the decoupling from the KB-DSS to the data infrastructure, we need specific IT systems directed to store and represent the patient data, providing read and write access for external components, as described next.

Electronic patient data records have evolved from simple spreadsheets to fully integrated tools where different pieces of information about the patient are collected and semantically integrated into a Personal Health Record (PHR). When talking about the PHR in the rest of the paper, we refer to the fact that “it can be populated with patient information from a variety of sources… where the consumer can enter information into selected areas of the record” as described in the definition of an integrated PHR given by Detmer et al. [15]. Having read and write access to the target institution's EMR by a KB-DSS would be unlikely granted. Therefore, creating a specific PHR that contain only the needed data subset – with controlled access – would be more easily accepted by clinical IT staff.

The three main requirements are relevant for the integrated PHR design: the model for representation of data, the interfaces provided for external systems (e.g., data-to-knowledge interfaces between the PHR and KB-DSS and data-to-data interfaces between the PHR and the data sources), and the capabilities provided for querying and data management in a secure manner. For the two mentioned interfaces, a comprehensible and intuitive data model is needed for the involved stakeholders to work together and to correctly carry out this integration. At the same time, the information model selected must be able to represent all types of data needed, including recommendations given by the KB-DSS.

To support the exploitation of the solutions for integrating knowledge and data in data-integrated KB-DSS, we decided to search for relevant clinical data representation standards and to compare them against relevant criteria.

@&#RELATED WORK@&#

Some related works have been collected in Table 1
                         that helped us to identify and evaluate criteria for the data representation standards and to understand better how the standards have been used in other real research projects that share some of the goals that we pursue.

This section includes details about the clinical standards that were selected for evaluation, the case studies that drove the evaluation of the standards, and the set of criteria identified for evaluating the selected standards.


                     Fig. 1
                      shows the methodology followed through the paper by means of an object-process diagram using the Object Process Methodology (OPM) notation [41], where ovals depict processes and rectangles depict objects serving as input/output (connected to processes via arrows), or enablers of the process (connected via circular arrowhead). A literature review of the state-of-art clinical data standards and projects alike helped us to both identify criteria and select the standards for evaluation. Then several EMR experts have modeled representative clinical data examples with the selected standards. This modeling step and the initial literature review influenced the evaluation process, carried out against the identified criteria, which finally derived our evaluation results.

The standards that we consider are for representing individual information patterns, such as observations, medications, medical procedures recorded in hospital EMRs, structured user input, abstractions detected in patient data, and KB-DSS recommendations and events.
                           3
                        
                        
                           3
                           While signal data collected via sensors is another important data source, we have assumed that only temporal abstractions of such data or individual signal measurements would be stored in the PHR.
                         Although the standards selected differ in several ways, e.g. in data types and information structure, all are used for representing information in EMRs. Concretely, we have selected standards from two main organizations developing clinical data standards: HL7 and the openEHR initiative.

HL7 is one of the most well-known Standard Development Organization (SDO) in the healthcare IT market and its standards are commonly used by hospitals for messaging between different existing systems (e.g. HL7 v2.x messages, used in 95% of US healthcare organizations) and also used recently in European relevant initiatives (e.g., HL7's Clinical Document Architecture (CDA) is used in the epSOS project [38]). The healthcare data standards of HL7 are based on the Reference Information Model (RIM) [42]. This object-oriented model features entities (e.g., living subject, organization, place, material) in roles (e.g., patient, employee) participating in acts (e.g., observation about the patient, substance administration, patient encounter). As in all object-oriented models, the classes have attributes and are related to each other via relationships. The HL7 RIM was not designed as a standard for direct implementation but as a reference model, hence we do not compare it as a potential data standard and instead focus on CDA and the Virtual Medical Record (vMR) standards, which are based on the HL7 RIM.

OpenEHR is an international non-for-profit organization and online community providing the development of tools and specifications for EHR interoperability that is getting relevance in the field, influencing decisions of both HL7 and ISO/CEN 13606 (described below), and many other standard initiatives and groups, like the ISO/CEN TC-251, a technical committee responsible for developing Health ICT standards, or the new “Clinical Information Modeling Initiative” (CIMI) for developing Detailed Clinical Models (DCM).

Another important SDO is the European Commission, which is committed to deploy interoperable e-Health solutions, and the ISO/CEN 13606 norm [43] developed by ISO/CEN TC-251, is likely to become the reference framework for the interoperable exchange of EHR information in Europe. It is divided into five parts that provide the syntactic and semantic capabilities, as well as terminology, security [44] and interface considerations for the exchange of EHRs. This norm proposed the dual or two-level modeling approach, which separates the clinical knowledge level from a technical reference model. Its reference model is considered a subset of openEHR [45,46]. Hence, we are not evaluating ISO/CEN 13606 as a fourth data model, but only considering the compliance of the three selected standards (HL7 CDA, HL7 vMR, and openEHR) with the ISO/CEN 13606 dual modeling approach specified in 13606-2:2008 and its security concerns specified in 13606-4:2009.

The online appendix [47] provides many examples of use of the three selected standards for modeling our case study examples. Figs. 2–4
                        
                        
                         provide examples for representing data in HL7 vMR, HL7 CDA (we use the Oxygen editor 
                        [48] for hierarchical display of XML documents) and openEHR archetypes.
                           
                              •
                              The HL7 Virtual Medical Record [49] is an initiative developed by the HL7 Clinical Decision Support Working Group, which derives from mature academic research [50] and whose purpose is closest to our goal: to serve as a data model for EMR data used for KB-DSS purposes. A technology-neutral Domain Analysis Model (DAM V1) was released in September 2011 [51]. It constitutes a very comprehensible yet small set of classes with a fixed set of attributes identified after analyzing KB-DSS requirements [52]. These classes are organized in two axes, one to express the seven different types of information (patient–doctor encounters, goals, observations, procedures, problems, substance administrations and adverse events) and another that specifies the aim in the workflow process (proposal, order, scheduled, event/result, unconducted/undelivered/denied). Thus, Fig. 2 shows a procedure-proposal statement, which means that a KB-DSS generated a proposal for an appendectomy to take place.

The HL7 Clinical Document Architecture (CDA R2) [53] became an ANSI-approved standard in 2005. HL7 CDA has been developed to create XML clinical documents that structure documents and capture the concepts represented in them in a way that can then be shared between organizations or systems. Fig. 3 shows a fragment of a CDA representation documenting a patient's asthma in past medical history (SNOMED-CT codes are used to specify “Asthma”)

The openEHR specification [54,55] uses the dual modeling approach proposed by the ISO/CEN 13606 norm mentioned above. Archetypes are sets of data items that can be grouped to represent a specific clinical concept (e.g., blood pressure consisting of systolic and diastolic blood pressures) that can be partially re-used in different contexts, and that are defined at a higher level than the underlying reference model, using the Archetype Definition Language (ADL). The openEHR specification includes its own reference model [56] which supersedes and augments that of the original ISO/CEN 13606 norm, as stated in [45,46]. We used openEHR 1.0.2 release for our evaluation. Four different types of information can be represented in the openEHR reference model (observations, evaluations, instructions, and actions), and these can be grouped by means of the composition class, grouping them under sections. Data is organized around clinical concepts and modelers can flexibly decide which clinical information and constraints should be included as attributes of each archetype. Furthermore, archetype sections can be merged into new machine-interpretable structures known as “archetype templates”, required for specific use cases, such as screen forms, message types or reports. Fig. 4 depicts an openEHR archetype representing the measurement of serum urea level.

In this section we describe a case study in which we represented a set of representative examples of different data items needed for decision support using the different standards. Based on the examples, we evaluated these standards according to the criteria described in the next subsection. It is important to highlight that although the set of examples selected might not cover all the possible information patterns that need to be represented, they are representative of the many different kinds of data usually managed in decision support scenarios (qualitative and quantitative EMR data, data acquired from monitoring devices attached to the patient, abstractions, DSS recommendations), and are foreseeable to be stored as part of an integrated PHR that would be used in conjunction with any KB-DSS. This derives from the fact that not only the ability of the standards to express the different case study examples has been evaluated, but also other aspects related to how the standard facilitates the interoperability of a data-integrated KB-DSS. This set of examples follows:
                           
                              a.
                              EMR data (quantitative): Heart rate result of 60bpm measured on 19/12/2011.

EMR data (qualitative): Brother of patient X has a diagnosis of “myocardial infarction” recorded on 19/12/2011.

Monitoring devices data
                                    4
                                 
                                 
                                    4
                                    Standards for modeling of waveforms are beyond the scope of this paper and are briefly discussed in the Discussion section. In this paper we considered representing this kind of data as individual time-stamped observations.
                                 : Heart rate waveform: heart rate results recorded every second for 5min starting at 8a.m. on 19/12/2011.

Abstraction: Tachycardia (e.g., heart_rate>115bpm) during the interval of 8:00–8:30 on 19/12/2011.

Decision-support recommendations: (1) a recommendation given at 8am on 19/12/2011 to measure serum urea every 3days; (2) a recommendation given at 8am on 19/12/2011 to hospitalize patient now; (3) a recommendation given at 8am on 19/12/2011 to perform umbilical echo 2–3 times a week; (4) a recommendation given at 8am on 19/12/2011 to give Celestone 12mg 2 times daily for 2days.

After describing our case study, we introduce the criteria that we have used to compare the suitability of each standard for our goal.

We identified fifteen functional and non-functional requirements that the data representation standards would ideally need to fulfill for development of data-integrated KB-CDSS. Functional requirements describe the function of a system, whereas non-functional requirements are constraints on the functional requirements: how the system does functions, e.g. how quickly, how efficiently, and how easily from the user's perspective. Part of these criteria were derived from Eichelberg et al. [57], Kawamoto et al. [58], Garde et al. [59], and Iakovidis et al. [60]. Aspects related to usability, expressiveness and integration were derived from our experience in designing Clinical Decision Support software that needs to be integrated with PHR systems [13,61]. They concern three main aspects addressing the data representation in the PHR as well as its front-end interface to data and knowledge sources and back-end interfaces to the data representation selected as the logical data level of the PHR
                           5
                        
                        
                           5
                           We are concerned with the logical data model rather than the data persistence layer used to provide the underlying storage (e.g., relational database, XML forest, and object-oriented database).
                        :
                           
                              –
                              
                                 Expressiveness and completeness of the ability to represent diverse data types and the ability to extend the standard for new types of information where needed,


                                 Front-end considerations, concerned with the comprehension and usability by non-highly-technical people who need to understand the data that is represented in the PHR so that it could be mapped to its data sources (e.g., EMRs, monitoring devices) and to the knowledge base. This is needed by 1) the database administrators and expert clinicians at the hospitals that want to use KB-DSS and need to export their EMR data into the PHR and 2) the knowledge engineers who need to map knowledge contained in the KB to PHR data so it can be used by the KB-DSS, as explained in Section 2.1. These users form teams who cooperate to validate the correctness of mappings.


                                 Back-end considerations, concerned with how the storage of data should be addressed such that the PHR could securely store, query, and manage data, provide support for vocabularies, and facilitate the integration of front-ends with back-end.

These criteria are further described in the following subsections (the numbers in parenthesis are associated with the numbers used in the “specific issue” column in Table 2
                        ).

This category relates to both front-end and back-end considerations, as data representations need to be expressive and complete to support interfacing with different data repositories and KB-DSSs as well as to support storage of diverse data types in the PHR. This category includes the following functional requirements:
                              
                                 –
                                 Representation of diverse information patterns (1). Specifically we considered whether the standard could be expressive enough to represent all the information patterns identified in Section 3.2. These included 11 patterns, already explored for the same examples in a previous workshop paper [57].

This category includes the following functional requirements:
                              
                                 –
                                 Conceptual fitness (2). The ability and ease of a knowledge modeler to link the knowledge to the PHR depend on the fitness of the semantic level of the data model with clinical concepts used for decision support. It is important to consider typical scenarios of data integration with KB-DSS, where new hospitals using different EMRs can use the system. In this scenario, it is critical to think how to simplify the adoption of the system by the new customers. Here we assess two issues: (1) Data-to-data mapping: A close match between the standard's conceptual model and external data such as EMR would facilitate comprehension by stakeholders who would be involved in the process of defining these mappings to enable data integration; and (2) knowledge-to-data mappings: the alignment of the conceptual model of the standard with conceptual models of KB-DSSs would ease the work of developers of data-integrated KB-DSSs.

Ability to use different content formats for the source data (3). This includes a possible use of different content formats for the storage of data by the different data sources (e.g., representing EMR and signal data using XML, SQL, and object-oriented models) and the ease of importing/exporting this data format from external systems and devices. It also includes the support of multiple languages for the imported data.

Compatibility with the dual modeling approach (4). This includes the compatibility of the front-end interfaces with the ISO/CEN 13606 norm hence the level of support for dual modeling of clinical knowledge and technical data types, e.g., through archetypes.

This category includes the following functional requirements:
                              
                                 –
                                 Extensibility (5). To what extent is it possible to extend the selected standard in order to represent pieces of information that are not contemplated in the original schema of the standard.

Time for representing data (6). How much time does it take to represent new data with the standard, considering also how easy it was to use the chosen editing tools during the evaluation process (Section 3.4).

Learning curve (7). How difficult is the learning curve for the standard's conceptual model to represent the data, existence of associated training, and tools.

Querying data for CDS (8). This aims to evaluate how the standard is designed in order to interact with decision support components.

Support level of vocabularies (9). How the standard deals with the representation and use of different medical vocabularies (e.g. SNOMED-CT and RxNorm) for representing medical concepts.

The back-end category includes also the following non-functional criteria. First, some criteria for the provision of integration between back-end, front-end, and mediating components:
                              
                                 –
                                 Integration flexibility (10). How flexible is the standard for being adapted to diverse integration scenarios where source data existing in some proprietary formatted would need to be integrated with the PHR's selected standard; does it force the use of a content format; and does it provide any support to facilitate integration with other standards.

Back-end-front-end communication (11). How communication between both ends is achieved.

It also includes some criteria regarding security and privacy issues:
                              
                                 –
                                 Security: AAA (Authentication, Authorization, Audit Trail) and privacy (12). How does the standard support these specific issues, does the standard provide any reliable support for (partial) document authentication, secure document transport, changes and versioning auditing, controlled access to partial segments of sensible information, confidentiality levels, etc.

Non-functional requirements related to performance:
                              
                                 –
                                 Scalability (13). How the standard data/storage model is scalable to a large number of users or high volume of data.

Finally, some non-functional requirements regard existing experience and compatibility with actual systems:
                              
                                 –
                                 Industry experience (14). Known experiences in the industry are known about the standard.

Government experience (15). Known initiatives in governments are known about the standard.

Once we had identified the set of case study examples to represent, a team of four modelers (including the two authors of this paper) who are experienced in Electronic Health Records represented all of the case study examples using the different standard information models selected and using the different free edition tools that are known for each information model, if any. Hence, we analyzed the following models: a) CDA, b) the openEHR specification, and c) HL7 vMR. The tools used for representing were Eclipse Instance Editor [62] and Altova XML Editor [63] for option (a), LinkEHR archetype editor Lite edition [24] for option (b), and Protégé ontology editor [64] for option (c). Some of the modeling results of the case study examples using the five models are reported in an on-line appendix [47]. Such hands-on experience on the modeling of the set of examples with the corresponding tools grounded the process of rating the standards complemented by our literature review. This literature review included the works referred in Section 3.1 for each standard, the survey of EHR standards of [57], the works by Garde et al.[59] and Atalag et al. [65], and some other related works described in Table 1.

To rate the standards studied using the evaluation criteria, the same four modelers used template tables to rate (using natural language descriptions) each criterion for each standard. After this first evaluation, three on-line meetings were carried out to find a consensus on how to rate each combination (criterion-standard) using the next scale (see Table 2): the code (−) implies poor support, while (+) to (+++) is a scale that signifies a better degree of support. The code (?) means that the standard did not provide any concrete support, and would rely on specific implementation of the standard, so it was not possible to evaluate this criterion. Results of this evaluation are described next.

Following the modeling of the representative examples that we carried out [47] as described in the methodology diagram (Fig. 1), Table 2 presents the results of the standards' evaluation against the criteria specified in Section 3.3.

Due to the interrelation of many criteria in Table 2, instead of describing the table sequentially, we describe next the six main issues where relevant differences or similarities were found between the standards. Each issue groups several criteria together, referred in parenthesis after each item. This higher-level comparison will enable us to ascertain the main benefits and drawbacks of the standards assessed in a comprehensible manner.

All the evaluated standards were expressive enough to represent these data examples, including the 11 aspects addressed in Section 3.3.1. We indicated their expressiveness as ++ (rather than +++) because our set of examples may not be exhaustive. This indicates that the reference models selected were mature enough to represent the information. However, there was a difference in the ease of representation using the different standards, as described in item (c) below.

Knowledge-to-data and data-to-data mapping processes are made easier if the semantics of the PHR's standard data model are simple and clear for the stakeholders in charge and if they closely match the concept structure needed by the knowledge model of the KB-DSS; in this way, the PHR's data model does not include extra attributes that need to be examined by the knowledge engineers who create the KB and by the customer when mapping his EMR data repository and other external data to the PHR.

HL7 vMR outperforms CDA since, while they are both derived from the RIM [42], CDA lacks specific classes to represent a recommendation output by the system. On the other hand, the vMR represents a set of classes that are organized in a very comprehensible structure of well-documented classes related to the different kinds of information needed for providing decision support. The openEHR archetype specifications lack such predefined structure that is provided by the vMR classes. The archetype approach of including any clinical information needed in different foreseeable scenarios can be very useful in several situations, like derivation of domain-specific user interfaces aggregating different archetypes into one archetype template (see description of templates in Section 3.3.1). The fact that different archetypes can hold the same information item, the diverse structure that each archetype provides, and the large number of attributes of archetypes that were added to accommodate specific clinical scenarios, make it difficult for knowledge engineers and database administrators to map knowledge and data repositories to archetypes created by the openEHR community at large (see [13] for better understanding of how the knowledge-to-data mapping definition process is carried out). For example, in Fig. 4 we describe how a knowledge engineer that needs to use the serum urea level value (to define a mapping that will be used by the KB-DSS) is faced first with the fact that several archetypes may hold the serum urea value. First the knowledge engineer looks for “serum urea”, but no archetype is found. Then, he looks for both substrings, “serum” and “urea” (upper part of the figure), finding up to eight possible archetypes. We show the “lab_test-urea_and_electrolytes” archetype as a mind map, as captured from the openEHR Clinical Knowledge Manager (CKM) (middle part) and the corresponding values for a concrete test, including urea and others (bottom part), as shown in the Ocean Archetype Editor [66]. Fig. 5
                         shows two possible archetypes for the representation of a serum urea level test.

Some mappings require checking that the test was taken before a specific date. In Fig. 5 we can see that the urea value is easier to find on the archetype shown on the left, but the date is not part of the data, but part of the protocol section (see the bottom-left part of the figure). In the archetype on the right, a date for the result test exists in the data section, but also the test result name value should match a code for “serum urea”, and the serum urea value needs to be retrieved for a more generic “result value” attribute. So, a single mapping needs to be defined in different ways depending on the archetype chosen, as shown in Table 3
                        . This is in contrast to the single way of defining mappings between knowledge concepts and the vMR standard.

The selection of which archetype to use is not trivial for knowledge engineers, and neither is the task of scanning each potential archetype for specific data items, taking into account that archetypes are sets of many attributes, that sometimes embed links to other archetypes for specifications of concrete subsets of information (see cluster-type attributes in Fig. 5). We must highlight that for leveraging conceptual fitness in automated ways, i.e. with less interventions from stakeholders, terminology bindings that link the clinical information models with vocabulary ontologies would be needed, as proposed in [30–32]. In that sense, both the HL7 and the openEHR archetypes could use tools (for example ArchMS [33]) that support searching the correct data item in the information model for defining mappings.

With respect to the content format, the vMR is usually provided as XML Schema, but an object-oriented approach is also possible. OpenEHR archetypes are the most flexible because of their dual modeling approach, which provides technical flexibility to link high-level clinical information with any underlying reference model and storage schema. It has its own data-transport format (DADL) but it can also use XML and import or export data easily with the support of free tools like the open source tool Mirth Connect [67].

In the same way, openEHR includes the best mechanism for supporting multiple languages, including multi-language support in the archetype editor stored using the internal archetypes definition language (ADL). In addition, archetypes allow us to automatically derive domain-specific user interfaces aggregating different archetypes into one view.

While all the evaluated standards are expressive enough to represent the examples selected, our experience while doing the modeling has been that they differ with respect to ease of representation. In addition, the existent documentation available for each standard is also relevant for assessing the ease of data representation, or of data model extension if needed. Both HL7 and openEHR communities provide extensive training [68,69], wikis [49,70], and mailing lists [71,72].

As experienced modelers, our tests provided us the impression that the HL7 vMR outperformed the rest of the standards regarding the simplicity and straightforwardness of the documentation it provides, which might allow engineers that are not familiar with clinical knowledge to quickly understand and find how patient information is represented throughout its comprehensible set of classes.
                           6
                        
                        
                           6
                           Nonetheless, this is probably the most subjective criterion we identified and the simplicity of the learning curve should be further investigated under more extensive conditions.
                         This enables us to represent data directly using the back-end logical storage level or alternatively understand what parameters they need to pass to generic data integration methods implemented to store data items in the logical storage model, as described in [37]. However, we did not find any tool supporting the editing of vMR instances, so XML editors were needed, while the archetype editors explored were not known to generate instances following the openEHR XML Schema, but just editing the archetype structures (the commercial edition of LinkEHR seems to provide this capability though).

As for the extension of data models, openEHR provides easier ways to extend or constraint the data model, given its provision of the dual modeling approach and their neat tools for the definition of archetypes. Hiding the storage format from knowledge engineers can theoretically be done, exposing only archetypes expressed in ADL language that can be extended without knowledge of the lower storage level, which leaves the door open to many possible implementation of the storage model. However, this depends on implementation of a complete openEHR infrastructure that includes the storage and querying capabilities, which are provided free and straightforwardly for HL7 XML-based schemas using more standardized mechanisms (we should not forget that openEHR is not a formal standard).

The HL7 CDA presents a low adaptability to changes due to its deep hierarchical structure. This issue is also related with the high complexity for representing information using this data model. Regarding tools supporting CDA, there are several tools for editing such as the free MDHT editor [73] or the commercial Trifolia Workbench [74] from the Lantana consulting group and the C-CDA validator developed by the US ONC [75]. Lantana also provides a CDA quick start guide at its website (inside the “free tools” section), and HL7 provides several implementation guides [76].

This issue is related to specific needs of integration of the PHR with other systems such as KB-DSS. Several requirements are important for semantic integration. First, the need to agree between the different interconnected components on a specific medical terminology system makes it important to have a powerful mechanism for using terminologies (SNOMED-CT, RxNorm, etc.). For this requirement, openEHR archetypes provide a so-called “ontology section” able to specify terms of different controlled terminologies directly when defining archetypes, something that in the case of the HL7 standards is more complex technically.

A second important requirement is the provision of query technologies. This is important because for evaluation of clinical conditions specified in the KB, the PHR needs to provide a powerful way for querying patient data. Starting with the latter, the openEHR model is the only one that provides a specific language for querying, known as Archetype Query Language (AQL). This query language allows querying at the semantic level agnostic to the actual way in which data is stored on the logical storage level, but the problem is that is not a standard, just a technical proposal and there is no free and complete tools for testing it. On the other hand, querying data represented in HL7 standards depend on implementation of the storage model; the data can be queried by using XML query languages like XPATH or XQuery if the default XML Schema is used as back-end. In the case of openEHR this possibility also exists, since an XML Schema is freely available for the openEHR reference model [77], but the XML Schema is not so comprehensive and querying needs to be done in terms of archetype paths transformed to its XML representation. Our tests indicated that querying on HL7 data models is easier to implement at this moment. See also the “Discussion” section.

With respect to the integration of the PHR back-end and front-ends, we should refer again to the technical issues related to i) data-to-data mappings and ii) knowledge–data mappings.

For data-to-data mapping, it is relevant to evaluate what mechanisms provided by the back-end standard selected could leverage the integration of EMRs, monitoring devices data and user input data with the developed PHR data model. In this case, the official implementation guidelines to import and export HL7 v2.x messages to the vMR standard have been developed [78]. This is crucial, since using the vMR as a back-end information model will be simplified by means of these guidelines. User input data and abstractions detected over waveform data could also be easily exported using a HL7-based standard by the application used by the users or by intelligent data analysis components, respectively. Recommendations given by the KB-DSS could also be exported back into hospitals if needed. In the case that openEHR would be selected as back-end, data-to-data mappings could be leveraged by mapping functionalities demonstrated by the LinkEHR integration platform, as has been described already in the literature [23,24], but this integration is only provided with the commercial version of that tool.

With regard to the integration of the KB front-end with the PHR back-end standard selected (knowledge-to-data mapping), the main technical issue is the query technology, since data in the back-end needs to be retrieved for evaluation of inference criteria by the KB-DSS. This issue is discussed in item (d) above, where the AQL query language of the openEHR specification is theoretically advantageous by its independence of the storage format. In any case, two factors may affect this second integration need. First, the selected back-end standard may impose the use of a specific storage format (e.g., an XML schema). On the one hand, this forces the conversion of the different front-ends' formatted data into the selected standard. On the other hand developers could then implement compact PHR solutions based on already standardized technologies. This is the case of HL7 standards like CDA or the vMR that can provide out of the box solutions based on XML Schema and XQuery technologies.

A second factor is the capability of the back-end standard selected to follow the dual modeling approach proposed by the ISO/CEN 13606 norm, since implementing it will provide an external layer where archetypes can be queried without regard of which reference model or storage format is used. While HL7 v3 standards are able to provide two-level modeling through HL7 templates, openEHR is the original model from which ISO/CEN 13606 took this principle. The greatest advantage to use the openEHR specification is that complexity of external access to patient data coming from different data sources in different formats can be hidden behind the highest level of archetypes. Thus, clinical data models are expressed using ADL while queries are expressed using AQL at the archetype level, instead of querying at the data level. The two levels are mapped internally using an openEHR middleware. Nonetheless, evaluation of technical issues regarding the persistence model behind the archetype model needs to be carried out, but that is beyond the scope of this paper. The conclusion is that theoretically openEHR could be advantageous, but in practice the implementation of AQL for querying is not mature enough.

Finally, there are several non-functional aspects that are important to evaluate. The first is the management of security and privacy and the scalability of the standards. Despite the importance of these two requirements, neither openEHR nor HL7 standards provide full support or directions for them, leaving it as the responsibility of the concrete implementation. In this sense, the only standard that provides specific norms about security and privacy is the ISO/CEN 13606 norm. Therefore, as mentioned above, HL7 or openEHR vendors could decide to provide implementations that cover the security guidelines suggested by the ISO/CEN 13606 norm.

Second, the existing experience in industry and support by governments should also be considered. OpenEHR specifications are maturing, and implementations are finding its way in the industry, and also supported by some governments [79]. It is easy to build an ISO/CEN 13606 implementation on top of an openEHR implementation, because of the similar technical solutions. Still, HL7 v2.x is widely used in industry which is not the case yet of HL7 v3. However, several pilot projects have used HL7 v3.x models for connecting KB-DSS with EMRs [13,80], and CDA is also finding its market for exchange of clinical history between organizations.

@&#DISCUSSION@&#

Although several initiatives have been developed in recent years for the standardization of EHR data representation and exchange, not many have been created with the idea of supporting the integration of external KB-DSS. Several specific requirements exist for these systems that should not be ignored. This paper identifies standardization criteria for such systems, and provides a methodology based on a case study to evaluate different clinical data standards for the mentioned purpose. According to the evaluation results, the vMR standard has shown to be the best conceptual model in learning curve, easiness but also in practical implementation of query mechanisms while openEHR archetypes could yield the best technical solution for extension and constraint modeling, ISO/CEN 13606 support, multi-language support and medical vocabulary integration.

Because vMR and openEHR have complementary advantages, our future research will examine possible ways to combine them within the MobiGuide project. We could then reassess the evaluation criteria described in this paper for the combined data model.

@&#LIMITATIONS@&#

This study has some limitations. First, the set of examples evaluated in Section 3.2 is limited and covers a subset of possible use cases, although we have carried out extensive research for real deployment in the MobiGuide project (www.mobiguide-project.eu). Furthermore we recognize that some of the criteria evaluated for the standards lack full objectivity, like the “learning curve” and the “time to represent data”, given that the participants have substantial experience in medical information modeling. Testing these factors with inexperienced users would be desirable for the future.

Second, there are initiatives that are not contemplated in the study and are worth mentioning. The Integrating Healthcare Enterprise initiative (IHE) [81] has actually become a global non-profit initiative with regional/national branches. IHE provides recommendations focusing on how to use existing standards, which could be potentially useful as a guideline at the time of the implementation. IHE develops several domain-specific profiles related to the goals of this paper, e.g., the “Exchange of Personal Health Record Content” (XPHR) and the “Cross Enterprise Document Sharing” (XDS).

Third, we did not include assessment of standards to represent waveform data into the PHR, e.g., DICOM-ECG, HL7 aECG, HL7 PHMR, and X73 family of standards, like SCP-ECG. These are standards that are specifically designed to represent data produced by medical devices, which is not the main purpose of our study. KB-DSS can also be supported on the evaluation of abstractions over this waveform data, hence for KB-DSS purposes, the standards we have evaluated could be enough.

@&#CONCLUSIONS@&#

Finding suitable standards for representation of clinical data is a key aspect for achieving success in the promising area of Clinical Decision Support. The first contribution of this paper is the set of identified criteria that should be evaluated for this purpose, supporting a KB-DSS. The second contribution is the case-study based methodology described to evaluate such standards that could be applied in the same manner for projects that need to evaluate future standards. Finally, the results of the evaluation process carried out suggest the different alternatives existing in the market nowadays, and identify main advantages and disadvantages of the selected standards based on the selected criteria and our case study exploration. Showing our hands-on experience and discussing what we found beneficial as well as problematic have also raised driving items raised for innovators and entrepreneurs, opening possible doors of collaboration between standardization initiatives. The overarching aim of this study is to progress on the identification of challenges and possible solutions to make KB-DSS systems interoperable.

@&#ACKNOWLEDGMENTS@&#

This study was carried out as part of the MobiGuide project partially funded by the European Commission under the 7th Framework Program, grant #287811. We appreciate the cooperation of our colleagues in MobiGuide, Bert Verhees and Jan-Marc Verlinden (MEDvision360) and Carlos Marcos (Atos Spain).

@&#REFERENCES@&#

