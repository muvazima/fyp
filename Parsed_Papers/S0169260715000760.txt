@&#MAIN-TITLE@&#Predicting protein-binding RNA nucleotides with consideration of binding partners

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           A method to predict protein-binding sites in RNA from sequence data alone is proposed.


                        
                        
                           
                           Protein-binding sites in RNA are predicted with consideration of protein in addition to RNA.


                        
                        
                           
                           This is the first sequence-based prediction of protein-binding sites in RNA at the nucleotide-level.


                        
                        
                           
                           The prediction method achieved an accuracy of 79.2% and MCC of 0.48 in independent testing.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

RNA–protein interactions

Binding sites

Binding partners

Sequence-based prediction

@&#ABSTRACT@&#


               
               
                  In recent years several computational methods have been developed to predict RNA-binding sites in protein. Most of these methods do not consider interacting partners of a protein, so they predict the same RNA-binding sites for a given protein sequence even if the protein binds to different RNAs. Unlike the problem of predicting RNA-binding sites in protein, the problem of predicting protein-binding sites in RNA has received little attention mainly because it is much more difficult and shows a lower accuracy on average. In our previous study, we developed a method that predicts protein-binding nucleotides from an RNA sequence. In an effort to improve the prediction accuracy and usefulness of the previous method, we developed a new method that uses both RNA and protein sequence data. In this study, we identified effective features of RNA and protein molecules and developed a new support vector machine (SVM) model to predict protein-binding nucleotides from RNA and protein sequence data. The new model that used both protein and RNA sequence data achieved a sensitivity of 86.5%, a specificity of 86.2%, a positive predictive value (PPV) of 72.6%, a negative predictive value (NPV) of 93.8% and Matthews correlation coefficient (MCC) of 0.69 in a 10-fold cross validation; it achieved a sensitivity of 58.8%, a specificity of 87.4%, a PPV of 65.1%, a NPV of 84.2% and MCC of 0.48 in independent testing. For comparative purpose, we built another prediction model that used RNA sequence data alone and ran it on the same dataset. In a 10 fold-cross validation it achieved a sensitivity of 85.7%, a specificity of 80.5%, a PPV of 67.7%, a NPV of 92.2% and MCC of 0.63; in independent testing it achieved a sensitivity of 67.7%, a specificity of 78.8%, a PPV of 57.6%, a NPV of 85.2% and MCC of 0.45. In both cross-validations and independent testing, the new model that used both RNA and protein sequences showed a better performance than the model that used RNA sequence data alone in most performance measures. To the best of our knowledge, this is the first sequence-based prediction of protein-binding nucleotides in RNA which considers the binding partner of RNA. The new model will provide valuable information for designing biochemical experiments to find putative protein-binding sites in RNA with unknown structure.
               
            

@&#INTRODUCTION@&#

Interactions among proteins and RNAs play an important role in a variety of biological activities such as the post-transcriptional gene regulation, alternative splicing, translation, and infections by RNA viruses [1]. Despite advances in experimental techniques to probe molecular interactions, the mechanism of RNA–protein interactions is not fully understood. Thus, computational approaches to studying RNA–protein interactions and their interaction sites help understand the interaction mechanism and select the best possible activators and inhibitors in rational drug design. Computational methods to quantify and calculate structural and sequence features can also be useful for protein–RNA interaction models that depend on numerical parameters representing the features [2–5].

In recent years several computational methods have been applied to predict RNA-binding sites in proteins. For instance, RNABindR uses a naïve Bayes classifier to predict RNA-binding amino acids in a protein sequence [6]. catRAPID estimates the binding propensity of protein and RNA molecules by combining secondary structure, hydrogen bonding and van der Waals contributions [7]. Chen and Lim [8], and PPRint [9] use support vector machines (SVM) to predict RNA binding sites in a protein sequence. With an exception of catRAPID, these methods predict RNA binding sites in protein sequences rather than protein binding sites in RNA sequences, and do not consider interacting partners of a protein when predicting RNA-binding amino acids. Thus, they always predict the same binding sites for a given protein sequence even if the protein binds to different RNAs. catRAPID predicts protein–RNA binding sites at the level of sequence regions rather than at the level of amino acids and nucleotides and often predicts an entire RNA sequence as a binding site even for an RNA sequence of 50 or more nucleotides, so the resolution of binding sites predicted by catRAPID is low.

Predicting the protein-binding nucleotides is much more difficult than predicting the RNA-binding amino acids. One reason for this is that for a sequence of the same length there are fewer RNA sequence patterns than protein sequence patterns. Another reason is that nucleotides show much lower interaction propensities than amino acids in protein–RNA interactions. Thus, it is difficult to distinguish binding nucleotides from non-binding nucleotides.

In our previous study [10,11], we developed a redundancy removal method which removes redundant data in a training dataset based on sequence features instead of sequence similarities. The feature-based redundancy removal method constructs a redundancy-free, yet larger training dataset with representative sequence fragments than the standard sequence-based redundancy removal method. The prediction model trained with a dataset constructed by the feature-based redundancy removal method found protein-binding nucleotides with a reasonably good accuracy (86.4% in a 5-fold cross validation and 68.1% in independent testing). However, the model used RNA sequence data alone and did not use protein sequence data at all. As an extension of the previous study, the primary focus of this study is to predict protein-binding sites in RNA with consideration of a binding partner of RNA. This paper presents an improved method to solve the problem of predicting protein-binding nucleotides with consideration of a binding partner and comparative analysis of two methods for predicting protein-binding nucleotides from sequence data.

@&#METHODS@&#

The protein–RNA complexes used in this study were obtained from the Protein Data Bank (PDB) [12]. As of September 2013, there were a total of 668 protein–RNA complexes that were determined by X-ray crystallography with a resolution of 3.0Åor better. To construct a training dataset with representative samples, we removed the complexes that include ribosomal RNAs from the 668 protein–RNA complexes since a tiny fraction (about 2%) of nucleotides in ribosomal RNAs binds to proteins (Additional File 1). As a result, 542 protein–RNA complexes were left (Additional File 2).

Supplementary Additional Files 1 and 2 related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cmpb.2015.03.010.

Additional File 1: Average proportion of protein-binding nucleotides in ribosoma RNA sequences. 
                           
                              
                           
                        
                     

Additional File 2: List of 542 protein–RNA complexes used to construct datasets. 
                           
                              
                           
                        
                     

From the 542 protein–RNA complexes, we extracted 546 protein–RNA sequence pairs between 439 RNA sequences and 376 protein sequences. In order to reduce overlap between training and test datasets, we ran CD-HIT-EST [13] on our dataset and selected RNA sequences with a similarity of 80% or lower from other sequences and constructed test datasets with the RNA sequences (Fig. 1
                        ). The test dataset contained 155 RNA sequences and 130 protein sequences as interacting partners of the RNA sequences. The remaining 284 RNA sequences and 246 protein sequences were used to construct training datasets.

For comparative purposes we constructed two prediction models called M1 and M2 in this study. The model M1 uses both RNA and protein sequences and M2 uses RNA sequence alone. The training and test datasets for model M1 used exactly same RNA sequences as those for M2, but included additional information on protein which is not included in those for M2.

The test dataset for the model M1 contained 1848 protein-binding nucleotides and 4631 non-binding nucleotides in the 155 RNA sequences. The test dataset for the model M2 contained 1795 protein-binding nucleotides and 4235 non-binding nucleotides because binding sites of an RNA sequence with different binding partners (i.e., protein) are incorporated into the RNA sequence. A training dataset for M1 contained 2716 protein-binding nucleotides and 6432 non-binding nucleotides (the ratio of binding to non-binding nucleotides is 1:2.4). Another training dataset for M2 contained 2189 protein-binding nucleotides and 4588 non-binding nucleotides (the ratio of binding to non-binding nucleotides is 1:2.1). Although datasets for M1 and M2 were constructed from the same set of RNA sequences, the datasets for M1 contained more binding and non-binding nucleotides than those for M2 because M1 used additional features on protein sequences.

Several types of interactions are involved in protein–RNA interactions, and they contribute in varying degrees to protein–RNA interactions. Many methods that predict binding sites use the distance-based criteria for a binding site (e.g., atomic contacts between the partners within 5Å). Since our approach is a sequence-based prediction of protein-binding sites in RNA, we preferred interactions that contribute to protein–RNA interactions in a sequence-specific manner rather than in a non-sequence specific manner. In protein–RNA interactions, hydrogen bonding occurs in a sequence-specific manner, and is the most common type of interactions. In this study, we considered water bridges and hydrophobic interactions in addition to direct hydrogen bonds. Water bridges refer to water-mediated hydrogen bonds between protein and RNA, and play an important role in protein binding to nucleic acid. Hydrophobic interactions occur due to the change in entropy when non-polar groups are exposed to water. Different studies use slightly different definitions of hydrophobic interactions, but we adopted the definition of the Nucleic acid-Protein Interaction DataBase (NPIDB) [14] which uses the CluD program [15] to extract hydrophobic interactions from PDB files.

We define a protein–RNA binding site by three types of interactions: hydrogen bonds, water bridges and hydrophobic interactions. A nucleotide involved in at least one of the interactions is classified as a protein-binding site in RNA. For each of the 542 protein–RNA complexes, we obtained the three types of interactions from NPIDB and incorporated them into the RNA sequences of protein–RNA complexes.

For instance, the RNA chain D of 3LWO shown in Fig. 2
                         has 14 nucleotides (G3, C5, G17, U39, C41, G42, U44, C45, C52, C54, A55, C56, A57 and A58) interacting with protein via hydrogen bonding interactions, 1 nucleotide (G3) interacting with protein via water bridge interactions, and 6 nucleotides (U40, C41, A55, C56, A57 and A58) interacting with protein via hydrophobic interactions. The interactions of three types were merged into RNA chain D (Fig. 2). In addition, protein-binding sites in RNA were extracted separately for each binding partner (i.e., protein) of the RNA (see Fig. 3
                         for an example).

To generate diverse sequence patterns, we represented a sequence as a series of feature vectors using a sliding window method. Several features of RNA and protein sequences were represented in a feature vector. The features can be categorized into three types: (1) global features of RNA, (2) local features of RNA, and (3) partner features (see Fig. 4
                         for the structure of a feature vector).
                           
                              •
                              global features of RNA: information on the entire RNA sequence

local features of RNA: information on individual nucleotides or nucleotide triplets of RNA

partner features: information on the protein, which is the binding partner of RNA

The local features of RNA included two biochemical properties of nucleotides, the interaction propensity (IP) of a nucleotide triplet with 20 amino acids, and the nucleotide triplet composition. The molecular mass (M) and pKa value of each nucleotide were used to represent the biochemical properties of the nucleotide. The molecular mass (also called molecular weight) of a nucleotide is the sum of the atomic weights of all the atoms in the nucleotide. It is related to the volume of space that a nucleotide occupies in structures. The pKa value of a nucleotide determines the ionization state of a nucleotide, which play an important role in interaction with proteins as well as in the RNA structure and function. Since every nucleotide has a unique value of molecular mass and pKa value, they were used to represent the local features of the RNA sequence.

The IP of nucleotide triplets was computed from the structure data of protein–RNA complexes using a function developed in our previous studies [10,11]. For each RNA sequence fragment we computed the nucleotide triplet composition (TC), which indicates the frequencies of 64 (= 4×4×4) nucleotide triplets in the sequence fragment (Eq. (2)). In addition to the nucleotide triplet composition, a feature vector representing local features required 22×(window size) elements: one element for the molecular mass (M), one element for the pKa value, and 20 elements for the IP of a nucleotide triplet with 20 amino acids. A same nucleotide can have different interaction propensities with different neighbors or at different secondary structures. Our previous study [11] showed that nucleotide triplets are better than individual nucleotides in finding protein-binding sites in RNAs. As a single feature, the IP of nucleotide triplets showed the highest binding specificity.

Partner features included the sum of the normalized position of amino acids (NP) and the dipeptide composition (DC) of the protein. The normalized position of an amino acid at position i in a sequence of length N is its relative position (i.e., i/N) in the sequence. For each amino acid, we computed the sum of the normalized position of the amino acid by Eq. (3). The dipeptide composition (DC) represents the frequency of two consecutive amino acids in the protein sequence [16] (Eq. (4)). The partner features required a total of 420 elements, 20 for the NP and 400 (=20×20) the DC. Due to the protein features, identical RNA sequences can be encoded into different feature vectors if they interact with different protein sequences.


                        
                           
                              (1)
                              
                                 Nucleotide
                                 
                                 Composition
                                 
                                    
                                       (
                                       n
                                       )
                                    
                                    
                                       n
                                       ∈
                                       {
                                       A
                                       ,
                                       C
                                       ,
                                       G
                                       ,
                                       U
                                       }
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                       =
                                       n
                                    
                                    
                                       RNA
                                       
                                       Sequence
                                       
                                       Length
                                    
                                 
                                 Occurrence
                                 (
                                 n
                                 )
                              
                           
                        
                        
                           
                              (2)
                              
                                 Triplet
                                 
                                 Composition
                                 
                                    
                                       (
                                       t
                                       )
                                    
                                    
                                       t
                                       ∈
                                       {
                                       64
                                       
                                       triplets
                                       }
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       ,
                                       
                                          t
                                          i
                                       
                                       =
                                       t
                                    
                                    
                                       RNA
                                       
                                       Sequence
                                       
                                       Length
                                    
                                 
                                 Occurrence
                                 (
                                 t
                                 )
                              
                           
                        
                        
                           
                              (3)
                              
                                 Normalized
                                 
                                 Position
                                 
                                    
                                       (
                                       a
                                       )
                                    
                                    
                                       a
                                       ∈
                                       {
                                       20
                                       
                                       amino
                                       
                                       acids
                                       }
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       ,
                                       
                                          a
                                          j
                                       
                                       =
                                       a
                                    
                                    
                                       Protein
                                       
                                       Sequence
                                       
                                       Length
                                    
                                 
                                 
                                    
                                       Position
                                       (
                                       a
                                       )
                                    
                                    
                                       Sequence
                                       
                                       Length
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 Dipeptide
                                 
                                 Composition
                                 
                                    
                                       (
                                       d
                                       )
                                    
                                    
                                       d
                                       ∈
                                       {
                                       400
                                       
                                       dipeptides
                                       }
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       ,
                                       
                                          d
                                          j
                                       
                                       =
                                       d
                                    
                                    
                                       Protein
                                       
                                       Sequence
                                       
                                       Length
                                    
                                 
                                 Occurrence
                                 (
                                 d
                                 )
                              
                           
                        
                     

As the RNA sequence is scanned with a sliding window, a feature vector representing the middle nucleotide in the window is generated. A training dataset for M1 contained 9148 (=2716 protein-binding+6432 non-binding) nucleotides and a training dataset for M2 contained 6777 (=2189 protein-binding+4588 non-binding) nucleotides. If a window of 7 nucleotides is used, each of the 9148 training instances is represented in a feature vector of 643 elements for M1, and each of the 6777 training instances is represented in a feature vector of 223 elements for M2 (Fig. 4).

In our encoding scheme, a window of w nucleotides corresponds to overlapping w-2 triplets. The first and the last nucleotides of a window do not form a nucleotide triplet, so their IP values were set to 0 in a feature vector.

After RNA and protein sequences are represented into feature vectors, redundant feature vectors are removed by the feature-based redundancy removal method [10,11]. The training datasets constructed by this method are guaranteed to contain redundancy-free sequence fragments, each represented by a feature vector.

We built SVM models using the library for SVM (LIBSVM) [17] with the radial basis function (RBF) as a kernel since RBF is known to be better than linear and sigmoid kernels [18,19]. When training an SVM model with the RBF kernel, two parameter values are adjusted: cost (C) and gamma (γ). The parameter C trades off misclassification of training data against simplicity of the decision surface. The parameter γ represents the width of the RBF. To balance the ratio of binding nucleotides to non-binding nucleotides in the datasets, binding nucleotides were assigned a weight. We selected the best combination of parameter values of C, γ and weight of binding nucleotides by parameter optimization. All the results shown in this paper were obtained with C=1, γ
                        =0.03125 and weight of 4 for binding nucleotides.

@&#RESULTS AND DISCUSSION@&#

The performance of the prediction models was evaluated with respect to six measures: sensitivity, specificity, accuracy, positive predictive value (PPV), negative predictive value (NPV), and Matthews correlation coefficient (MCC), which are defined by Eqs. (5)–(10). In the following equations, the true positives (TP) are binding nucleotides that are correctly predicted as binding nucleotides, the true negatives (TN) are non-binding nucleotides that are correctly predicted as non-binding nucleotides, the false positives (FP) are non-binding nucleotides that are incorrectly predicted as binding nucleotides, and the false negatives (FN) are binding nucleotides that are incorrectly predicted as non-binding nucleotides.


                        
                           
                              (5)
                              
                                 Sensitivity
                                 =
                                 
                                    TP
                                    
                                       TP
                                       +
                                       FN
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 Specificity
                                 =
                                 
                                    TN
                                    
                                       TN
                                       +
                                       FP
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 Accuracy
                                 =
                                 
                                    
                                       TP
                                       +
                                       TN
                                    
                                    
                                       TP
                                       +
                                       FP
                                       +
                                       TN
                                       +
                                       FN
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 PPV
                                 =
                                 
                                    TP
                                    
                                       TP
                                       +
                                       FP
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 NPV
                                 =
                                 
                                    TN
                                    
                                       TN
                                       +
                                       FN
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 MCC
                                 =
                                 
                                    
                                       (
                                       TP
                                       ×
                                       TN
                                       )
                                       −
                                       (
                                       FP
                                       ×
                                       FN
                                       )
                                    
                                    
                                       
                                          
                                             (
                                             TP
                                             +
                                             FP
                                             )
                                             (
                                             TP
                                             +
                                             FN
                                             )
                                             (
                                             TN
                                             +
                                             FP
                                             )
                                             (
                                             TN
                                             +
                                             FN
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Sensitivity is the ratio of correctly predicted binding nucleotides to actual binding nucleotides. Specificity is the ratio of correctly predicted non-binding nucleotides to actual non-binding nucleotides. Accuracy is the ratio of correctly predicted nucleotides to all nucleotides. PPV measures the ratio of correctly predicted binding nucleotides to all nucleotides that are predicted as binding. NPV measures the ratio of correctly predicted non-binding nucleotides to all nucleotides that are predicted as non-binding. MCC indicates a correlation between the actual and predicted classifications and returns a score between −1 and 1. A coefficient of −1 indicates a total disagreement between prediction and observation, +1 indicates agreement, and 0 indicates completely random prediction.

In addition to the six measures, we also used a receiver operating characteristic (ROC) curve and the area under the ROC curve (AUC). An ROC curve plots the true positive rate (sensitivity) against the false positive rate (1-specificity) at various threshold settings. An AUC of 1 represents a perfect test, whereas an AUC of 0.5 represents a test with no ability to discriminate.

We performed a 10-fold cross validation with different window sizes, and both models showed the best performance with a window of 33 nucleotides. If an RNA sequence is shorter than the window size, null nucleotides are inserted into either end of the window (see Fig. 4 for an example). At this point, our method predicts protein-binding sites in RNA with 5–160 nucleotides, but there is no limitation on the protein sequence length.

The model M1 which used both RNA and protein sequences achieved a sensitivity of 86.5%, a specificity of 86.2%, an accuracy of 86.3%, a positive predictive value (PPV) of 72.6%, a negative predictive value (NPV) of 93.8% and a Matthews correlation coefficient (MCC) of 0.69. The model M2 which used RNA sequence alone showed a sensitivity of 85.7%, a specificity of 80.5%, an accuracy of 82.2%, a PPV of 67.7%, a NPV of 92.2% and a MCC of 0.63 (Tables 1
                         and 2
                        ).

For a more rigorous evaluation, we also tested the prediction models on independent datasets that were not used in training the models. The model that used both RNA and protein sequences achieved a sensitivity of 58.8%, a specificity of 87.4%, an accuracy of 79.2%, a PPV of 65.1%, a NPV of 84.2% and MCC of 0.48 with window of 33 nucleotides. The other model that used RNA sequence data only showed a sensitivity of 67.7%, a specificity of 78.8%, an accuracy of 75.5%, a PPV of 57.6%, a NPV of 85.2% and MCC of 0.45 (Tables 1 and 2).

The 10-fold cross validation was conducted on the window level (i.e., subsequences) after redundant windows were removed, whereas independent testing was performed on the whole sequence level. We removed all identical subsequences either from a same sequence or from different sequences by the feature-based redundancy removal method [10,11]. Thus, no redundant windows were used in the cross validation and the common problem in the interface prediction work that conducts a cross validation on the window level [20] did not occur in the cross validation. The independent testing which was conducted on the whole sequence level showed a reasonably high performance, although lower than that of the 10-fold cross validation. This indicates that the performance of the 10-fold cross validation is not spuriously high.

Comparison of a partner-specific and non-partner-specific prediction methods often requires to convert the output of one method to the other [21]. In our study, the model M1 is a partner-specific model and M2 is a non-partner-specific model. If RNA chains of a protein–RNA complex bind to different protein chains (i.e., RNA chains do not share a same protein chain as their binding partners), comparison of the two methods requires no conversion of their output. Consider an example of a protein–RNA complex (PDB ID: 2GJW, colored orange in Additional File 3). Two RNA chains E and F of the complex bind to different protein chains (A and B) in the complex, so the prediction results of the two models can be compared directly for each RNA chain with no conversion. In contrast, conversion of the output is required if a single RNA chain binds to multiple protein chains in a protein–RNA complex. In this case, we compared total counts of TP, TN, FP, and FN predicted by M1 for the RNA chain to those predicted by M2 for the same RNA chain. In the example of a protein–RNA complex (PDB ID: 2HVY, colored yellow in Additional File 3), RNA chain E binds to two proteins A and D. We examined the total counts of TP, TN, FP, and FN of M1 against those of M2 for a direct comparison of results of the two models for the RNA chain E.

Supplementary Additional File 3 related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cmpb.2015.03.010.

Additional File 3: Results of independent testing of models M1 and M2 for each. 
                           
                              
                           
                        
                     

Both in cross-validations and independent testing, the model M1 which used both protein and RNA sequence data showed a better performance than the model that used RNA sequence data alone. This shows the importance of the additional information on the binding partner of RNA. Fig. 5
                         shows the ROC curves and their area under the curve (AUC) of the models with a window of 33 nucleotides.

For comparative purposes, we tested our model M1 and the catRAPID fragments module [7] on a same dataset. Since the catRAPID fragments module requires an RNA sequence to have at least 50 nucleotides, we selected RNA sequences of 50 or more nucleotides from our test dataset. Many binding sites predicted by catRAPID showed low discriminative power (DP) values, which represents the confidence of the prediction. DP it measures the interaction propensity of a protein–RNA pair with respect to the training sets [7]. DP values above 50% indicate that the interaction is likely to take place, whereas DPs above 75% represent high-confidence predictions. Hence, we selected 11 binding sites with high confidence (DP ≥50%) for comparison with our model (Additional File 4). For all 11 RNA sequences with DP ≥50%, catRAPID predicted the entire RNA sequences as binding sites, so its performance was low (specificity=0, accuracy=21.43% and PPV=21.43%). In contrast, our model showed a much higher performance than catRAPID, except in sensitivity (sensitivity=40.21%, specificity=98.56%, accuracy=86.05%, PPV=88.37%, NPV=85.80% and MCC=0.536). However, the two methods have different prediction resolutions. Our method predicts binding sites at the nucleotide level, but catRAPID predicts binding sites at the sequence fragment level. Hence, direct comparison of their performances is not straightforward.

Supplementary Additional File 4 related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cmpb.2015.03.010.

Additional File 4: Testing results of our model M1 and the catRAPID fragments module on a same dataset. 
                           
                              
                           
                        
                     

Fermandez et al. [22] developed a method to predict RNA dinucleotide contacts in proteins, and showed that different prediction performances can be observed for different types of RNA (tRNA, rRNA, mRNA, viral RNA, and others). Their method was implemented as a web server called SRCPred which takes a protein sequence as input. SRCPred is different from our work in the sense that its main purpose is to predict RNA-binding sites in proteins whereas our work described in this paper is intended to predict protein-binding sites in RNAs. Nonetheless, we tested our model M1 on the dataset of SRCPred and evaluated our model using the same binding criteria as SRCPred for an unbiased comparison. The dataset of SRCPred contains 160 protein sequences, but some of them are included in the training dataset of our model M1. Hence, we removed the sequences and found RNA partners of the remaining protein sequences. Since M1 did not use ribosomal RNAs, we excluded pairs with ribosomal RNAs and obtained a total of 79 protein–RNA sequence pairs for testing M1. As mentioned above, we used the same criteria as SRCPred for protein–RNA binding sites for a fair comparison. A binding site (or contact) of SRCPred is defined by the distance <3.5Åbetween any atom in the protein and any atom of the RNA dinucleotide. In testing M1 on the 79 protein–RNA sequence pairs of SRCPred we obtained an AUC of 0.71, which is higher than the best AUC value of SRCPred (0.69) (see Fig. 6
                         of this paper and Fig. 5 of [22]). But, the AUC of 0.71 is lower than the AUC value of M1 obtained with its original test dataset (the weighted average of the AUC values in Table 3
                         is 0.81). This is because M1 was developed using binding criteria based on three types of interactions (hydrogen bonds, water bridges and hydrophobic interactions), but evaluated using different criteria which is based on the distance.

We also evaluated the prediction performance of M1 for four RNA types (mRNA, tRNA, viral RNA and others) of the test dataset of M1. As shown in Table 3, M1 exhibited slightly different performances for different types of RNA and the highest AUC value was observed for tRNA. The AUC values for the four RNA types range from 0.69 to 0.87, which are higher than the AUC values of SRCPred in the range [0.61, 0.84]. The results are different from SRCPred exhibited different performances for different types of RNA (tRNA, rRNA, mRNA, viral RNA, and others) [22].

To examine the stability of our model, we constructed a few more datasets. There were 155 RNA sequences in the original test dataset and 246 protein sequences in the training dataset. The first test dataset was constructed by pairing each of the 246 protein sequences in the training dataset with every RNA sequence in the test dataset. Among 38,130 (=246 × 155) protein–RNA sequence pairs, 106 pairs were identical with actual binding pairs. After removing the 106 pairs, the remaining 38,022 (=38,130–106) protein–RNA sequence pairs were treated as non-binding pairs when testing our model. Since there were no true positives and false negatives in the prediction results, we counted true negatives and false positives. With the new test dataset, our model showed a specificity of 84.03%, which is higher than the specificity of 75.8% with the original test dataset.

The second dataset was constructed by shuffling the binding partners of all RNA sequences while keeping the original binding and non-binding sites in all RNA sequences. New training and test datasets with the same number of sequences as those for the model M1 were constructed in the way described in Section 2.1 The results of a 10-fold cross validation and testing with the new datasets showed a lower performance than those with the original datasets. The results of the 10-fold cross validation and testing with the new datasets are available in Additional File 5.

Supplementary Additional File 5 related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cmpb.2015.03.010.

Additional File 5: Results of the 10-fold cross validation and testing with the new datasets constructed by shuffling binding partners of RNA. 
                           
                              
                           
                        
                     

The third dataset was constructed to analyze the effect of redundant protein sequences in the training and test datasets. From the original test dataset we removed protein sequences that were similar to any protein sequence in the training dataset with the similarity cutoff of 80%. As a result, a new test dataset has been reduced by half, which contained 72 RNA sequences and 71 protein sequences. With the new test dataset, the model M1 achieved a sensitivity of 58.4%, a specificity of 76.3%, an accuracy of 71.6%, PPV of 46.7%, NPV of 83.8% and MCC of 0.32, which are lower than those obtained with the original test dataset.

To evaluate the contribution of the features to the prediction performance, we tried the model M1 with six different features of RNA (Table 4
                        ). Among the six features, the IP of nucleotide triplets showed the best performance (a sensitivity of 85.1%, a specificity of 76.6%, a PPV of 63.5%, a NPV of 91.5% and MCC of 0.58).

The IP of nucleotide triplets used in the evaluation was calculated using the entire dataset, which included both training and test datasets since using a more extensive data could result in more accurate IP values for future prediction. For comparative purposes, we computed new IP values with the training dataset only, and tested the model M1 with the new IP values (results shown in Table 5
                        ). With the new IP, sensitivity and NPV have been decreased slightly, but specificity, accuracy, and PPV have been rather increased. There was no change in MCC. These results indicate that the IP values calculated with the training dataset only instead of the whole dataset had minor effect on the prediction performance.


                        Fig. 7
                         shows an example of predicting protein-binding nucleotides using both RNA and protein sequences. The protein–RNA complex 3HJW contains two protein chains with different amino acid sequences. Given a same RNA sequence with different binding partners (i.e., protein), the model predicted different binding sites in the same RNA sequence because the binding partners of RNA are different. In the structure drawing of Fig. 7, proteins that were specified as a binding partner of RNA in running the prediction model are represented by orange sticks (chain A in Fig. 7A and chain B in Fig. 7B).


                        Fig. 8
                         shows another example of predicting protein-binding nucleotides using the RNA sequence only of the same protein–RNA complex 3HJW. Since the binding partner of RNA was not specified, predicted protein-binding sites in the RNA sequence are different from those shown in Fig. 7, which were predicted with additional information on binding partners (i.e., protein).

@&#CONCLUSIONS@&#

So far many computational studies in protein–RNA interactions have focused on finding RNA-binding sites in protein instead of finding protein-binding sites in RNA because finding protein-binding sites in RNA is a more difficult problem and shows a lower accuracy on average. In our previous study we developed a method that predicts protein-binding nucleotides from a given RNA sequence. However, the model used RNA sequence data alone and did not use protein sequence data at all. In an effort to improve the prediction accuracy and usefulness of the previous method, we developed a new method that predicts protein-binding sites in RNA with consideration of a binding partner of RNA.

In this work we identified effective features of RNA and protein for predicting protein-binding nucleotides and developed a support vector machine (SVM) model to predict protein-binding nucleotides using RNA and protein sequences. For comparative purpose, we built another SVM model that predicted protein-binding nucleotides using an RNA sequence alone. The new model that used both RNA and protein sequences achieved a sensitivity of 86.5%, a specificity of 86.2%, a positive predictive value (PPV) of 72.6%, a negative predictive value (NPV) of 93.8% and a Matthews correlation coefficient (MCC) of 0.69 in a 10-fold cross validation. In independent testing, it achieved a sensitivity of 58.8%, a specificity of 87.4%, a PPV of 65.1%, a NPV of 84.2%, and MCC of 0.48. The other model that used RNA sequence alone showed a sensitivity of 85.7%, a specificity of 80.5%, a PPV of 67.7%, a NPV of 92.2% and MCC of 0.63 in a 10-fold cross validation, and a sensitivity of 67.7%, a specificity of 78.8%, a PPV of 57.6%, a NPV of 85.2% and MCC of 0.45 in independent testing (see the results section for details). Both in cross-validations and independent testing, the new model that used both RNA and protein sequences was better than the model that used an RNA sequence alone in most performance measures. The new model is also capable of predicting different binding sites for a given RNA sequence when its binding partner is changed.

To the best of our knowledge, the new model is the first attempt to predict protein-binding RNA nucleotides with consideration of the binding partner (i.e., protein) of RNA from sequence data only. The new model will be useful in guiding biochemical experiments to find protein-binding sites in RNA when sequences are the only available data.

@&#ACKNOWLEDGEMENTS@&#

This research was supported by Basic Science Research Program through the National Research Foundation (NRF) funded by the Ministry of Science, ICT & Future Planning (2012R1A1A3011982), and in part by the international cooperation program managed by NRF (2014K2A2A2000670) and the Technology Innovation Program (10049112, Development of the Validation System for Efficacy Studies using Mini Pigs) funded by the Ministry of Trade, industry & Energy of Korea. We thank Daesik Choi and Choongkeun Lee for their assistance during the revision of the paper.

@&#REFERENCES@&#

