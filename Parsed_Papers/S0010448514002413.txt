@&#MAIN-TITLE@&#Outlier detection for scanned point clouds using majority voting

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A robust method to detect and remove all types of outliers in scanned point clouds.


                        
                        
                           
                           Ability to preserve valid point clusters of small size.


                        
                        
                           
                           Effectiveness validated with a variety of scanned point clouds.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D Laser scanning

Point cloud

Outlier detection

Non-isolated outliers

Majority voting

Feature preservation

@&#ABSTRACT@&#


               
               
                  When scanning an object using a 3D laser scanner, the collected scanned point cloud is usually contaminated by numerous measurement outliers. These outliers can be sparse outliers, isolated or non-isolated outlier clusters. The non-isolated outlier clusters pose a great challenge to the development of an automatic outlier detection method since such outliers are attached to the scanned data points from the object surface and difficult to be distinguished from these valid surface measurement points. This paper presents an effective outlier detection method based on the principle of majority voting. The method is able to detect non-isolated outlier clusters as well as the other types of outliers in a scanned point cloud. The key component is a majority voting scheme that can cut the connection between non-isolated outlier clusters and the scanned surface so that non-isolated outliers become isolated. An expandable boundary criterion is also proposed to remove isolated outliers and preserve valid point clusters more reliably than a simple cluster size threshold. The effectiveness of the proposed method has been validated by comparing with several existing methods using a variety of scanned point clouds.
               
            

@&#INTRODUCTION@&#

Measurement outliers are inevitable by-products of 3D scanning. When scanning an object with complex geometry and varying surface reflectiveness, the collected scanned point cloud may contain extensive outliers, which are false measurement points not belonging to the scanned surface. Such erroneous data points pose some problematic issues to the applications of the scanned point cloud. In the context of quality inspection, outliers indicate abrupt large deviations from the reference design model and this may lead to false inspection result. In reverse engineering, since outliers can form dense clusters, they can lead to erroneous surface patches, known as ghost surfaces, which do not exist on the scanned object  [1]. Therefore, it is critical to detect and remove these measurement outliers as a preprocessing step. In comparison to the common tedious manual removal process, which is time consuming and relies on the operator’s experience, it is highly desirable to develop an automatic outlier detection and removal method. However, automatic and effective removal of measurement outliers is challenging since the scanned object surface model is unavailable and the estimate of the object surface shape would be inaccurate in the presence of extensive outliers.

From a local point density perspective, outliers in a scanned point cloud can be sparsely distributed or densely clustered. The dense outlier clusters can be further classified into isolated clusters and non-isolated clusters. The non-isolated outlier clusters seamlessly connect to the scanned object surface and cannot be separated using a simple distance criterion  [1]. Fig. 1
                      shows the three types of outliers present in a scanned point cloud from a gear. Because the surface is reflective and contains sharp features and concave geometry, extensive outliers are formed around these features due to the undesirable specular reflections, multi-path reflections and occlusions in the scanning process  [2]. Unlike scanning noise, which is commonly assumed to be randomly distributed, these outliers are systematic and can form ghost surfaces not part of the scanned object. To alleviate the effect of surface reflectiveness, it is common to spray the object with a thin layer of gray powder so that the resulting outliers would be less. However, such a treatment may introduce the issues of accuracy reduction and part contamination, and is inapplicable when scanning, for example, final machined parts, medical components, clean room parts, polished parts  [1]. Moreover, some industrial applications, such as in-process inspection, require parts being scanned in the mist of their manufacturing operations. In such situations, the extra process of spraying would not be ideal for productivity concern. Therefore, an effective method that can reliably detect outliers is definitely in great demand.

Many outlier removal methods have been proposed in the literature but they generally focus on a certain type of outliers and are inapplicable to other types of outliers. For example, methods to remove sparse outliers  [3,4] detect outliers based on low local point density and rely on the condition that the local neighborhood of each point contains sufficient data points. Such methods are unable to detect dense outlier clusters since the local neighborhood of each point in an outlier cluster still contain a good number of data points. To detect outlier clusters, existing methods  [5,6] segment a scanned point cloud into many clusters and then set small clusters as outliers, which will mistakenly remove good clusters with smaller numbers of data points. When non-isolated outlier clusters exist in the point cloud, these outliers will be indistinguishable and blend into the scanned object surface. To remove these non-isolated outliers, Shen et al.  [1] proposed a surface propagation method based on the assumption that outliers were randomly distributed and should not form smooth surface patches. However, such an assumption is not always valid in practice since non-isolated outlier clusters are in fact systematic and can actually form planar surface patches. Thus, non-isolated outliers remain undetected.

In this work, a comprehensive outlier detection method is developed to effectively identify sparse outliers, isolated outlier clusters, and non-isolated outlier clusters in scanned point clouds. Among the three types of outliers, non-isolated outlier clusters are the most challenging to detect since they are connected to the scanned surface and can even form planar patches. Common clustering methods will always end up with clusters in which non-isolated outliers are mixed together with good surface points. To address this issue, a majority voting based approach is proposed to reliably detect and transform non-isolated outlier clusters into isolated clusters. Then, an expandable boundary criterion is employed to remove all the sparse outliers and the isolated outlier clusters, as well as to preserve critical geometric features such as sharp edges.

Many methods have been proposed in the literature to detect sparse outliers, isolated outlier clusters, and non-isolated outlier clusters. Sparse outliers are erroneous measurement points with low local point density. Based on the assumption that the local point density of a scanned point cloud follows the Gaussian distribution, Rusu et al.  [3] proposed an efficient approach to detect sparse outliers, which correspond to low point densities. In practice, however, the scanned point cloud density for good surface points can be non-uniform and incomplete. For example, small subtle geometric features with color and reflectiveness variations are often sparsely sampled and would be falsely categorized as outliers. Sotoodeh  [2] proposed a density-based algorithm, which also encounters the similar issue since point density is insufficient to distinguish sparse outliers from sparse good points. Weyrich et al.  [4] applied three criteria to detect outliers in the neighborhood of each data point using user-specified parameters. For a point in a dense outlier cluster, its neighborhood does not contain sufficient good points and this makes this approach ineffective for outlier clusters.

For isolated outlier clusters, which have high point density and are relatively separated from the scanned surface, clustering techniques, such as spatial graphs  [6] and region growing  [5], have been adopted to classify the whole scanned point cloud into many clusters. Then, the small clusters are treated as outliers and removed. However, small good clusters due to insufficient sampling are removed as well. Moreover, a point cloud may have non-isolated outlier clusters that are not separable using a distance criterion. Therefore, clustering approaches will end up with some clusters where good points and outliers coexist. Recently, Wang et al.  [7] utilized a distance-based deviation factor to detect sparse outliers and then detected small outlier clusters using region growing. Unfortunately, non-isolated outlier clusters were not considered.

To detect non-isolated outliers, Shen et al.  [1] proposed an iterative surface propagation scheme based on the assumption that all outliers are randomly distributed so that they are hardly on the same plane. However, such an assumption is not always valid. The outliers caused by undesirable specular reflections are systematic and can form local planar patches with an offset from the scanned surface. As a result, these outliers will be mistakenly treated as regular points under the surface propagation scheme. Köhler et al.  [8] developed a special structured light scanning system with an aim to detect and remove outliers during object scanning through additional sensory information. The involved data processing algorithms are thus only applicable to the particular scanning system.

Many point cloud smoothing algorithms can be used to reduce outliers. In such a context, outliers are simply treated as points with large noise. For example, common moving least-squares methods  [9–11] can robustly project noisy points to the estimated surfaces in the presence of sparse outliers. However, such locally estimated surfaces can be biased towards outliers if the local neighborhood contains a large number of outliers from dense outlier clusters. Other smoothing techniques, such as Laplacian  [12], mean curvature flow  [13,14], bilateral filter  [15,16], anisotropic diffusion  [17], non-local denoising  [18] and statistical methods  [19,20] are all fundamentally based on the local neighborhood concept and may not work reliably among dense outlier clusters.

Detecting the non-isolated outlier clusters is challenging since these outliers are attached to the scanned surface and cannot be easily separated. Some non-isolated outlier clusters can even form smooth patches like good surface patches. To address this issue, a majority-voting scheme is proposed to cut the connections between non-isolated outlier clusters and the scanned surface so that the non-isolated outlier clusters become isolated.

The outlier connection regions where non-isolated outlier clusters are attached to the scanned surface should be identified first. Approximating local surface patches in such regions is generally unreliable due to the large shape variation caused by the attached non-isolated outlier clusters. In contrast, surface fitting on points in smooth surface regions with small shape variation is more trustworthy. Such points are referred to as regular points and can serve as references to estimate local surface geometry. To identify these regular points, this work adopts the surface variation concept  [21] and evaluates the variation in each point’s 
                           k
                        -nearest neighborhood using principal component analysis (PCA). Then, the bi-means clustering technique  [1] is utilized to classify the scanned point cloud into regular and irregular points.

Principal component analysis obtains a minimal ellipsoid enclosing the 
                           k
                        -nearest neighborhood 
                           P
                         of a point 
                           
                              p
                           
                        . Let 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ̄
                              
                           
                         be the centroid and 
                           C
                         the 3×3 covariance matrix of 
                           P
                         defined as
                           
                              (1)
                              
                                 C
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                      
                                                      
                                                         ̄
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                      
                                                      
                                                         ̄
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                      
                                                      
                                                         ̄
                                                      
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       T
                                    
                                 
                                 
                                    [
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   1
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   ̄
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   ̄
                                                
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   k
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   ̄
                                                
                                             
                                          
                                       
                                    
                                    ]
                                 
                                 
                                 
                                    
                                       
                                          p
                                       
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 P
                                 .
                              
                           
                         Then, the surface variation 
                           
                              
                                 σ
                              
                              
                                 n
                              
                           
                           
                              (
                              
                                 p
                              
                              )
                           
                         of 
                           
                              p
                           
                         is 
                           
                              (2)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       n
                                    
                                 
                                 
                                    (
                                    
                                       p
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             0
                                          
                                       
                                    
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             0
                                          
                                       
                                       +
                                       
                                          
                                             λ
                                          
                                          
                                             1
                                          
                                       
                                       +
                                       
                                          
                                             λ
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 λ
                              
                              
                                 0
                              
                           
                        , 
                           
                              
                                 λ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 λ
                              
                              
                                 2
                              
                           
                         are the eigenvalues of 
                           C
                         and 
                           
                              
                                 λ
                              
                              
                                 0
                              
                           
                           ≤
                           
                              
                                 λ
                              
                              
                                 1
                              
                           
                           ≤
                           
                              
                                 λ
                              
                              
                                 2
                              
                           
                        . In essence, 
                           
                              
                                 λ
                              
                              
                                 0
                              
                           
                        , 
                           
                              
                                 λ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 λ
                              
                              
                                 2
                              
                           
                         respectively represent the length of the three semi-principal axes of the ellipsoid in 3D.

Local surface variation can measure how closely a local neighborhood forms a smooth planar surface patch. To be extreme, a zero surface variation means the neighborhood forms a perfect plane. Fig. 2
                         illustrates the surface variations in a point’s neighborhood among various scenarios in 2D. Generally, a neighborhood in a smooth surface region with low curvature and low noise has small surface variation (Fig. 2(a)), whereas high curvature (Fig. 2(b)), sharp feature (Fig. 2(c)), high noise level (Fig. 2(d)), sparse outliers (Fig. 2(e)) and non-isolated outliers (Fig. 2(f)) can cause large surface variations. A small surface variation indicates that the neighborhood is regular and has high fidelity to represent the scanned surface. The associated point is thus regarded as a regular point that can serve as the reference to reliably approximate local surface and facilitate outlier detection.


                        Fig. 2(f) is a typical point in an outlier connection region with large surface variation and can be classified as an irregular point. Points in high-curvature regions, around sharp features, and with large noise are also irregular points. Outliers do not just occur in smooth surface regions as in Fig. 2(e) and (f). It is in fact more often to see outliers around surface regions with large shape variations such as sharp edges and holes rather than smooth surface regions. It will be more difficult to detect such outliers when they occur around high curvature and sharp feature regions (Fig. 2(b) and (c)).

Once the surface variation of each point is estimated, a histogram between point population and surface variation can be generated. According to Shen et al.  [1], the bi-means clustering approach can be used to classify the histogram into regular points (Fig. 2(a)) and irregular points (Fig. 2(b)–(f)). Bi-means clustering is a case of 
                           K
                        -means algorithm to cluster 
                           n
                         objects into 
                           k
                         clusters by minimizing the intra-cluster variance:
                           
                              (3)
                              
                                 min
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                       ∈
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          −
                                          
                                             
                                                μ
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                         where 
                           
                              
                                 μ
                              
                              
                                 i
                              
                           
                         is the mean of the 
                           i
                        th cluster 
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                        . The relevant parameters such as initial means are selected according to Shen et al.  [1].

This approach would classify points in high-curvature regions, sharp features, and the outlier connection regions as irregular points and points with low surface variations as regular points, which will then serve as references to remove outliers in the outlier connection regions. Take a slice of the scanned point cloud from a gear tooth as an example, Fig. 3
                        (a) shows the colored surface variation of each point. Points with large variations are classified as irregular points (red) in Fig. 3(b). The irregular points include outliers in the outlier connection regions (red box) as well as good surface points with high curvatures. The outliers should be removed without affecting the good surface points. It should be noted in Fig. 3(a) that not all regular points are part of the scanned surface. A portion of the non-isolated outlier cluster in the figure actually forms a planar patch and is also classified as regular points. In other words, for the outlier connection region in Fig. 3(a), its adjacent regular points include both good surface points and outliers. A majority voting scheme is proposed to deal with this ambiguous situation.

The effectiveness of the regular point separation process is essential to the success of the following majority voting scheme. Fig. 4
                         illustrates the surface variation and regular point separation results on some representative point clouds. The raw point cloud scanned from a Gear object (Fig. 4(a)) contains sharp features, noise and all kinds of outliers. As shown in the figure, points around sharp features and outlier connection regions are classified as irregular points (red) as expected. Note the highlighted outlier connection region in Fig. 4(a). This is where a non-isolated outlier cluster attaches to the scanned surface. Some outliers in the non-isolated outlier cluster can form a smooth patch and are thus classified as regular points (blue). For a point in the outlier connection region, its neighboring regular points can be good points from the scanned surface or outliers from the non-isolated outlier cluster. These regular points will serve as voters in majority voting to detect and remove outliers in the outlier connection region.

Regarding noise, for the Sheep point cloud in Fig. 4(b), it contains surfaces with varying curvatures but does not contain sharp features. Points in high curvature regions are classified as irregular points. Gaussian noise has also been superimposed onto the Sheep point cloud along random directions. The standard deviation of the noise, referred to as the noise level, is specified as a percentage of the diagonal length of the bounding box of the point cloud. In Fig. 4(c) (with 0.5% noise), points in high curvature regions are still classified as irregular points while some low curvature region points also become irregular points due to the large noise. This is acceptable for majority voting as long as the neighboring good regular points are sufficient. As the noise level increases, the irregular regions will grow and propagate and eventually make the majority voting unreliable due to lack of good regular points. Increasing the neighborhood size 
                           k
                         can compensate the noise to a certain degree at the expense of increased computational time.

Majority voting is a group decision-making scheme and has been found to be just as effective as other more complex schemes [22]. While widely used in pattern recognition and image analysis, majority voting has also been applied to 3D shape recognition [23,24] and urban scene classification  [25,26]. For an input sample, each classifier or voter produces a unique decision regarding the identity of the sample. Then, the identity is assigned according to what the majority of voters agree. It has been validated that the combined group decision is superior to that of individual voters, provided that all the voters have reasonable competence with high probability to make the correct decision.

In the context of outlier detection, the input samples are the irregular points and the identity of each irregular point is either a good point or an outlier. The regular points are deemed trustworthy and thus served as voters to make decisions on the irregular points. For each irregular point 
                           
                              p
                           
                        , only the neighboring regular points are selected as voters whereas regular points farther away from 
                           
                              p
                           
                         are ignored. Each voter makes a decision by evaluating how well the irregular point follows the local surface geometry of the voter. If the majority of neighboring regular points vote 
                           
                              p
                           
                         as an outlier, 
                           
                              p
                           
                         will be set as an outlier. The advantage of this simple majority voting scheme is that, even some neighboring regular points of 
                           
                              p
                           
                         are in fact outliers and falsely vote 
                           
                              p
                           
                         as a good point, a correct decision can still be made as long as the majority of voters vote correctly.

The majority voting procedure is illustrated in Fig. 5
                         using the point data inside the red box of Fig. 3(b). For an arbitrary irregular point 
                           
                              p
                           
                        , its neighborhood 
                           
                              Q
                           
                         encloses 
                           k
                        -nearest regular points as voters. Then, for each neighboring regular point 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                        , a local surface patch is fitted by the moving least-squares method  [9–11,27]. The local geometry at 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         can be treated as a height field over its tangent plane. A local bivariate polynomial can then be fitted to the spherical neighborhood 
                           
                              R
                           
                         of 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                        , where the radius is the distance between 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         and 
                           
                              p
                           
                        . Note that some neighboring regular points in 
                           
                              Q
                           
                         are outliers. A simple least-squares fitting of points in 
                           
                              R
                           
                         will thus be biased towards the outliers. To address this issue, a robust quadric surface fitting using iteratively re-weighted least squares (IRLSs)  [28] is adopted to penalize points with large fitted residuals (likely outliers) by assigning negligible weights and iteratively refine the surface fitting result.

To fit a quadric surface at 
                           
                              p
                           
                        , a local coordinate system should be constructed first. Here the three eigenvectors of the covariance matrix 
                           C
                         from PCA in Section  3.1 (three principal axes of the minimal ellipsoid enclosing the neighbors of 
                           
                              p
                           
                        ) can serve as the local frame at 
                           
                              p
                           
                        . 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ′
                              
                           
                        s neighbors can then be transformed into this frame. The local surface geometry around 
                           
                              p
                           
                         can be viewed as a height field over its tangent plane. The quadric surface is modeled as: 
                           
                              (4)
                              
                                 
                                    
                                       f
                                    
                                    
                                       β
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 =
                                 
                                    β
                                 
                                 ⋅
                                 
                                    
                                       
                                          x
                                       
                                    
                                    
                                       T
                                    
                                 
                              
                           
                         where 
                           
                              β
                           
                           =
                           
                              [
                              a
                              ,
                              b
                              ,
                              c
                              ,
                              d
                              ,
                              e
                              ,
                              f
                              ]
                           
                         is the coefficient vector and 
                           
                              x
                           
                           =
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              x
                              y
                              ,
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                              ,
                              x
                              ,
                              y
                              ,
                              1
                              ]
                           
                         is the quadric basis vector. To compensate noise and surface discontinuities, we adopt iteratively re-weighted least squares (IRLSs) to minimize the sum of weighted residuals along the local 
                           z
                        -axis in the following form: 
                           
                              (5)
                              
                                 
                                    
                                       
                                          argmin
                                       
                                    
                                    
                                       β
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                                 
                                    (
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 
                                    
                                       w
                                    
                                    
                                       x
                                    
                                 
                                 
                                    (
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 
                                    
                                       
                                          |
                                          
                                             
                                                f
                                             
                                             
                                                β
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      x
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          −
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                          
                                          |
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                         where 
                           
                              
                                 w
                              
                              
                                 d
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           =
                           exp
                           
                              (
                              −
                              
                                 
                                    
                                       ‖
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             i
                                          
                                       
                                       −
                                       
                                          x
                                       
                                       ‖
                                    
                                 
                                 
                                    2
                                 
                              
                              /
                              2
                              
                                 
                                    σ
                                 
                                 
                                    d
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and 
                           
                              
                                 w
                              
                              
                                 x
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           =
                           exp
                           
                              (
                              −
                              
                                 
                                    
                                       ‖
                                       
                                          
                                             f
                                          
                                          
                                             β
                                          
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   x
                                                
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       −
                                       
                                          
                                             z
                                          
                                          
                                             i
                                          
                                       
                                       ‖
                                    
                                 
                                 
                                    2
                                 
                              
                              /
                              2
                              
                                 
                                    σ
                                 
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         are Gaussian weight functions to penalize neighbors far from the point of interest and those with large fitted residuals. The bandwidths 
                           
                              
                                 σ
                              
                              
                                 d
                              
                           
                         and 
                           
                              
                                 σ
                              
                              
                                 x
                              
                           
                         as well as other relevant parameters are selected according to Fan et al.  [28].

In Fig. 5(a), the outlier cluster forms a branch from the scanned object surface and should be pruned. This raises the question whether the fitted surface is a good approximate of the object surface (green) or the branch (red dashed). It is assumed that non-isolated outliers, as they often do not follow the scanned object surface geometry, are simply attached to the scanned surface while the scanned surface varies more smoothly. Since iteratively reweighted least-squares fitting is good at approximating the low curvature-varying surface geometry, the green surface patch should be the fitted result as desired.

After fitting the quadric surface at 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                        , 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         will vote 
                           
                              p
                           
                         as a good point or an outlier based on whether 
                           
                              p
                           
                         falls within a set distance threshold from the fitted surface. For all the regular points in 
                           
                              R
                           
                        , the standard deviation 
                           
                              
                                 σ
                              
                              
                                 r
                              
                           
                         of the fitted residuals is calculated. Since these regular points follow the local surface geometry better than the irregular points, 
                           
                              
                                 σ
                              
                              
                                 r
                              
                           
                         represents a good estimate of the local scanning noise level without much interference from the potential outliers. So, if the fitted residual at 
                           
                              p
                           
                         is less than 
                           s
                           
                              
                                 σ
                              
                              
                                 r
                              
                           
                        , where 
                           s
                         a scalar, 
                           
                              p
                           
                         is considered as following the local surface geometry at 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         well. Otherwise, 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         votes 
                           
                              p
                           
                         as an outlier. A small 
                           s
                         is clearly aggressive and would treat noisy points as outliers. This will remove many good points in the connection region. A large 
                           s
                         is tolerant and would not make a clear cut between the non-isolated outliers and the scanned surface. It has been found from extensive tests that 
                           s
                           =
                           2
                         generally yields satisfactory results. It should be noted that the quadric surface fitting requires at least 6 points. So, if 
                           
                              R
                           
                         contains less than 6 neighboring points when 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         and 
                           
                              p
                           
                         are very close, 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 i
                              
                           
                         would simply vote 
                           
                              p
                           
                         as a good point due to the close proximity.

Regarding the tip points of sharp features, they correspond to shape discontinuity where two or more surface patches meet. If the fitted surface of each patch cannot extrapolate the tip points well, their fitted residuals are likely to be larger than the fitted residuals of adjacent regular points. In this case, if large noise is present around such tip points and cause large 
                           
                              
                                 σ
                              
                              
                                 r
                              
                           
                        , then the residuals of tip points are not significant and they can be preserved as good points. Otherwise, some tip points may be treated as outliers and removed. Again, a tradeoff in 
                           s
                         is needed to account for these scenarios.

The above procedure is to be conducted by each regular point in 
                           
                              Q
                           
                         and this allows each regular point to vote independently. Fig. 5(b) illustrates the voting result for 
                           
                              p
                           
                        . It can be seen that although 10 regular points in the outlier cluster vote 
                           
                              p
                           
                         as a good point, the majority of the voters vote 
                           
                              p
                           
                         as an outlier. Thus, 
                           
                              p
                           
                         is set as an outlier. If 
                           
                              p
                           
                         is a point closer to the center of the outlier cluster, the outliers will dominate the neighborhood 
                           
                              Q
                           
                         and 
                           
                              p
                           
                         will be set as a good point. This is in fact acceptable since the objective of the voting is simply to cut the connection of the non-isolated outlier cluster from the scanned surface and thus make it an isolated outlier cluster, which will then be removed in the subsequent step. If 
                           
                              p
                           
                         is a good point in the connection region, its neighboring points from the scanned object surface will dominate the neighborhood 
                           
                              Q
                           
                         and 
                           
                              p
                           
                         will be retained. The pseudocode of the majority voting procedure is shown in Algorithm 1. Typical implementation results are shown in Fig. 3(c) where the outliers in the connection region (red box) have been reliably removed so that the non-isolated outlier cluster becomes an isolated one. For the irregular regions with high curvatures (purple and green boxes), the voting procedure works well without any interference from the non-isolated outliers.


                        
                           
                              
                                 
                                 
                                    
                                       
                                          
                                             Algorithm 1
                                          . Non-isolated Outlier Detection Using Majority Voting
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                IR
                                             
                                             ←
                                           all irregular points
                                    
                                    
                                       
                                          for each 
                                             
                                                p
                                             
                                             ∈
                                             
                                                IR
                                             
                                             do
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                Q
                                             
                                             ←
                                           the 
                                             k
                                          -nearest regular points of 
                                             
                                                p
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          for each 
                                             
                                                
                                                   
                                                      q
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             
                                                Q
                                             
                                             do
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                R
                                             
                                             ←
                                           the neighboring point set of 
                                             
                                                
                                                   
                                                      q
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                           within distance of 
                                             
                                                ‖
                                                
                                                   p
                                                
                                                −
                                                
                                                   
                                                      
                                                         q
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ‖
                                             
                                          
                                       
                                    
                                    
                                       
                                           Fit a quadric surface on 
                                             
                                                R
                                             
                                           using IRLSs
                                    
                                    
                                       
                                           Get mean 
                                             
                                                
                                                   r
                                                
                                                
                                                   ̄
                                                
                                             
                                           and 
                                             
                                                
                                                   σ
                                                
                                                
                                                   r
                                                
                                             
                                           of the fitted residuals for all regular points in 
                                             
                                                R
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          if fitted residual of 
                                             
                                                p
                                             
                                             >
                                             
                                                
                                                   r
                                                
                                                
                                                   ̄
                                                
                                             
                                             +
                                             2
                                             
                                                
                                                   σ
                                                
                                                
                                                   r
                                                
                                             
                                             then
                                       
                                    
                                    
                                       
                                          
                                          
                                             V
                                             
                                                (
                                                
                                                   
                                                      
                                                         q
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   p
                                                
                                                )
                                             
                                             =
                                             1
                                             ,
                                             
                                                
                                                   
                                                      q
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                           voting 
                                             
                                                p
                                             
                                           as an outlier
                                    
                                    
                                       
                                          
                                          end if
                                       
                                    
                                    
                                       
                                          
                                          end for
                                       
                                    
                                    
                                       
                                          
                                          if sum of 
                                             V
                                             
                                                (
                                                
                                                   
                                                      
                                                         q
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   p
                                                
                                                )
                                             
                                             >
                                           size of 
                                             
                                                Q
                                             
                                             /
                                             2
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                p
                                             
                                           is an outlier
                                    
                                    
                                       
                                          
                                          else
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                p
                                             
                                           is a good point
                                    
                                    
                                       
                                          
                                          end if
                                       
                                    
                                    
                                       
                                          end for
                                       
                                    
                                    
                                       Remove all outliers in 
                                             
                                                IR
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The majority voting procedure presented above is robust because a few wrong votes will generally not alter the correct result, even when the voters include outliers. In contrast, the method by Shen et al.  [1] propagates surface patches from regular points, which could potentially include outliers. Fig. 6
                         shows the comparison of the outlier removal results for the Gear point cloud. The proposed method is seen to effectively remove the connections between the non-isolated outliers and the scanned surface even when points in some outlier clusters are deemed regular points. Meanwhile, the good irregular points around sharp features remain almost untouched.

The 
                           
                              Q
                           
                         neighborhood selection directly affects the overall performance of the outlier removal in the connection region. The surface variation of a point varies with the point’s 
                           k
                        -nearest neighborhood  [21]. A small 
                           k
                         is unable to classify sufficient outliers in connection regions as irregular points. On the contrary, a large 
                           k
                         leads to large regions of irregular points. Then, the closest regular points may be too far from the local geometry of the irregular points and this will aggressively remove irregular points as outliers. Good points in high-curvature regions may thus be mistakenly removed. As a compromise and from extensive tests, this work has adopted 
                           k
                           =
                           40
                         for surface variation estimation. Each irregular point then uses its 
                           k
                        -nearest regular points as voters in the majority voting procedure.

Regarding a small surface feature, if it is classified as irregular and very sparsely sampled, the 
                           k
                        -nearest neighbors of a feature point may belong to other surface patches than the feature of interest. Thus, the fitted surface for such a neighborhood may not approximate the feature geometry well and may vote the feature point as an outlier as illustrated in Fig. 7
                        (a) (regular point 
                           
                              q
                           
                         votes 
                           
                              p
                           
                         as an outlier). If the point density increases, the fitted surface can better approximate the feature geometry and thus preserve the feature point in Fig. 7(b) (regular point 
                           
                              q
                           
                         now votes 
                           
                              p
                           
                         as a good point). This work uses quadric surface fitting, which requires at least 6 points; therefore, a small feature is required to be adequately sampled so that its neighbors belong to the same surface feature. It is common practice in 3D scanning to perform an initial scan with moderate point density to capture the overall surface shape. A subsequent fine scan is then performed with high point density to capture specific features of interest  [1]. In this way, the densely sampled small features can be well kept during voting.

After cutting the connections between the non-isolated outliers and the scanned surface, the point cloud would only contain isolated outlier clusters and sparse outliers. Such a point cloud can be easily segmented through a region growing process  [5]. Starting from an arbitrary point as the seed for the initial region, it grows by enclosing adjacent points according to a pre-defined Euclidean distance threshold. Then, for each new point added to the region, its adjacent points within the threshold will be enclosed as well until no further points can be added. After forming one region, the same procedure is repeated until all the points have been visited. The point cloud is thus segmented into many clusters.

The distance threshold can be set according to the particular scanning setup parameters such as point spacing  [5]. If such information is unavailable, the threshold can also be set adaptively according to the overall point spacing distribution. For points within a cluster, the local point spacing is expected to be much smaller than that for points between clusters. Thus, the threshold has been set empirically as 
                           
                              
                                 d
                              
                              ¯
                           
                           +
                           2
                           σ
                        , where 
                           
                              
                                 d
                              
                              ¯
                           
                         is the average and 
                           σ
                         the standard deviation of the point spacing in the point cloud  [3]. According to the various scanning tests carried out in this work, this threshold setting has been demonstrated to be able to segment the scanned point cloud into many clusters and each cluster contains good points or outliers only. For surface regions with low point density, these regions are likely to be segmented into many small clusters. This is a minor issue as the low-point-density surface regions will still be preserved by a subsequent data processing step. Sparse outliers become small clusters as well and will be removed. As shown in Fig. 8
                        (a), a point cloud scanned from a digital camera has been segmented into many clusters. It should be noted that the spike-shaped outlier clusters around the camera lens (red box) are actually non-isolated. These non-isolated outlier clusters have become isolated after applying the majority voting procedure. Without cutting the outlier connections, these outliers are mixed into good point clusters.

After segmentation, the outlier clusters are to be removed. A straightforward way  [5] is to simply treat small clusters as outliers using a cluster size threshold. However, this criterion may mistakenly remove good small clusters from surface regions with low point density. As shown in Fig. 8(b), the number of scanned points for each camera button is not large and these scanned points form small clusters. A moderate cluster size threshold will falsely remove these good clusters. Meanwhile, some large outlier clusters remain undetected within the red box in Fig. 8(b). An aggressive strategy is to keep the largest cluster only, which will definitely remove good clusters, as indicated in Fig. 8(c). To address these issues, a novel expandable boundary criterion has been proposed to remove outlier clusters more reliably while preserving good clusters (Fig. 8(d)).

In an ideal scanning situation, an object surface should be sufficiently sampled and form only one good cluster. Due to factors such as surface reflectivity variation, color variation, detailed geometric features and occlusion due to concave geometry, the scanned point cloud often contains sparse points or holes in some surface regions, leading to many segmented patches instead of one ideal patch. Since these good clusters are still part of the scanned surface, they can be joined together by expanding the patch boundary of each cluster. On the contrary, outlier clusters would form arbitrary ghost surface patches that are not part of the scanned surface geometry and thus are less likely to be able to join with good clusters through expanding boundaries. Instead, they would intersect the good clusters when expanding their boundaries. This indicates that the surface patch boundary can be used to distinguish between good clusters and outlier clusters.

Given a point cluster, its boundary points can be identified by the largest open angle of a point’s neighborhood  [29]. Instead of using a global angle threshold, an adaptive boundary estimation approach is adopted in this work. A point is considered to be a boundary point if the largest open angle of its neighborhood is consistent when the neighborhood is expanded. More specifically, for an arbitrary point 
                           
                              p
                           
                         in a cluster, its initial small neighborhood of points, composed of typically 6-nearest neighboring points in the same cluster  [30], are projected onto the tangent plane at 
                           
                              p
                           
                         (estimated by PCA) to obtain the largest open angle 
                           α
                         as shown in Fig. 9
                        (a). Then, the neighboring points of each point in this initial neighborhood are added to expand the neighborhood and another largest open angle 
                           β
                         is obtained (Fig. 9(b)). Given the sides PA, PB of 
                           α
                         and PC, PD of 
                           β
                        , if PC is within 
                           α
                           /
                           4
                         of PA and PD is within 
                           α
                           /
                           4
                         of PB, the largest open angle 
                           β
                         for the expanded neighborhood is considered to be consistent with respect to the largest open angle 
                           α
                         for the initial neighborhood. Whenever this condition is met, 
                           
                              p
                           
                         is deemed as a boundary point. The neighborhood only needs to be expanded once according to our numerous test results. As for a small cluster with less than 6 points, it is considered as insufficient to represent a surface patch and thus no boundary is to be formed.

As described previously, good clusters can be connected by expanding their boundaries whereas outlier clusters do not have this property. Starting from a good cluster representing part of a scanned surface, other clusters can join this good cluster by checking boundaries. The first assumption is that the largest cluster is a good cluster if the point cloud is scanned from a single object. Given a good cluster 
                           
                              G
                           
                         and a candidate cluster 
                           
                              C
                           
                        , each boundary point 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 i
                              
                           
                         in 
                           
                              C
                           
                         can get its closest point 
                           
                              
                                 
                                    g
                                 
                              
                              
                                 j
                              
                           
                         in 
                           
                              G
                           
                        . If 
                           
                              
                                 
                                    g
                                 
                              
                              
                                 j
                              
                           
                         is also a boundary point in 
                           
                              G
                           
                           ,
                           
                              〈
                              
                                 
                                    
                                       c
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    
                                       g
                                    
                                 
                                 
                                    j
                                 
                              
                              〉
                           
                         is a boundary-to-boundary pair from 
                           
                              C
                           
                         to 
                           
                              G
                           
                        . If 
                           m
                         stands for the number of boundary-to-boundary pairs and 
                           n
                         the total number of boundary points in 
                           
                              C
                           
                        , 
                           r
                           
                              (
                              
                                 C
                              
                              ,
                              
                                 G
                              
                              )
                           
                           =
                           m
                           /
                           n
                         is the boundary-to-boundary ratio from 
                           
                              C
                           
                         to 
                           
                              G
                           
                        . If 
                           r
                           
                              (
                              
                                 C
                              
                              ,
                              
                                 G
                              
                              )
                           
                         is larger than an empirical threshold of 0.25 (from our extensive tests), 
                           
                              C
                           
                         is considered to be able to connect to 
                           
                              G
                           
                         through the expanded boundary. Otherwise, 
                           
                              C
                           
                         is taken as an outlier cluster. The detailed procedure is listed in the Algorithm 2.


                        
                           
                              
                                 
                                 
                                    
                                       
                                          
                                             Algorithm 2
                                          . Outlier Cluster Detection via the Expandable Boundary Criterion
                                       
                                    
                                 
                                 
                                    
                                       Identify boundary points for each cluster
                                    
                                    
                                       Good cluster group 
                                             
                                                GG
                                             
                                             ←
                                           the largest cluster
                                    
                                    
                                       Candidate clusters 
                                             
                                                CC
                                             
                                             ←
                                           the remaining clusters
                                    
                                    
                                       Sort 
                                             
                                                CC
                                             
                                           from closest to farthest by the minimum distance to 
                                             
                                                GG
                                             
                                          
                                       
                                    
                                    
                                       
                                          for each candidate cluster 
                                             
                                                C
                                             
                                             ∈
                                             
                                                CC
                                             
                                             do
                                       
                                    
                                    
                                       
                                          
                                          for each good cluster 
                                             
                                                G
                                             
                                             ∈
                                             
                                                GG
                                             
                                             do
                                       
                                    
                                    
                                       
                                           Get boundary-to-boundary ratio 
                                             r
                                             
                                                (
                                                
                                                   C
                                                
                                                ,
                                                
                                                   G
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          if   
                                             r
                                             
                                                (
                                                
                                                   C
                                                
                                                ,
                                                
                                                   G
                                                
                                                )
                                             
                                             >
                                             0.25
                                             then
                                       
                                    
                                    
                                       
                                           move 
                                             
                                                C
                                             
                                           to 
                                             
                                                GG
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          break
                                       
                                    
                                    
                                       
                                          
                                          end if
                                       
                                    
                                    
                                       
                                          end for
                                       
                                    
                                    
                                       
                                          end for
                                       
                                    
                                    
                                       Keep 
                                             
                                                GG
                                             
                                           and remove 
                                             
                                                CC
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Fig. 10
                         illustrates the presented outlier cluster removal procedure on a scanned point cloud of a camera. In Fig. 10(b), the points around the digit “4” on the camera casing (purple box) and a button (green box) are separated from the main camera surface due to low point density. These point clusters are able to join the main camera surface by expanding their boundaries. In contrast, the spike-shaped outlier cluster (red box) cannot join but can only intersect with the main camera surface. Thus, it is removed as an outlier cluster (Fig. 10(c)). The sparse outliers are also removed in a similar manner. Compared with the cluster size threshold criterion, which indiscriminately removes all small good clusters, the presented expandable boundary criterion is able to detect outlier clusters and preserve good small features much more reliably.

It should be noted that the boundary point estimation uses 6-nearest neighbors as the initial neighborhood and expands it once  [30]. In comparison with using a large neighborhood size, this approach can handle the thin structure issue as long as the 6-nearest point neighborhood of a point on one side of the thin structure does not enclose any point on the other side. In case where a thin structure is sparsely sampled and the above requirement is not met, the boundary-to-boundary ratio criterion will not be reliable due to some nearest neighbors found may lie on non-boundary regions but are close to the query point. As mentioned in Section  3.2, a fine scan is often required to densely sample the surface features of interest such as small features and thin structures so that a feature point’s neighbors can sufficiently and reliably represent its local geometry.

This section demonstrates the effectiveness of the proposed outlier detection method in processing real point cloud data sets collected by a high-precision LDI Surveyor laser scanning system or a low-cost Microsoft Kinect sensor. To be consistent with practical applications, the scans were done without spray coating the scanned object. To evaluate the outlier removal results, the accepted method of qualitative comparisons  [1] was adopted to visually inspect a processed point cloud data set after outlier removal against the original raw scanned point cloud.

When scanning the Gear object, which had many sharp features and was shiny around the teeth and inner ring, the raw scanned point cloud contained many sparse outliers, isolated outlier clusters and non-isolated outlier clusters. Moreover, some outlier clusters formed planar surface patches. The method by Weyrich et al.  [4] using plane fitting, miniball, and nearest-neighbor reciprocity (PMR), the method by Shen et al.  [1] using surface propagation (SP), and the method by Teutsch et al.  [5] using region growing (RG), were respectively used to detect each type of outliers for comparison purposes. The involved parameter values in these existing studies were manually adjusted to attain the best possible results while the proposed method in this paper used fixed parameter values as indicated in previous sections of this paper. Fig. 11
                         shows the comparison of the outlier detection results. The PMR method is only able to detect sparse outliers and fails to remove outlier clusters. The SP method iteratively propagates a surface from smooth regions and will mistakenly enclose non-isolated outliers when such outliers form smooth patches. The RG method segments the point cloud into many regions and can remove isolate outlier clusters as well as sparse outliers. Unfortunately, it fails in the presence of non-isolated outlier clusters. In general, the PMR method is designed to detect sparse outliers, the SP method targets non-isolated outlier clusters and the RG method focuses on isolated outlier clusters. These three methods can be combined and applied in sequence, referred to as the combined method in this work. Given a raw point cloud, the combined method uses the resulting point cloud from the PMR method as the input for the SP method and then feeds the resulting point cloud to the RG method in order to achieve the best overall result of detecting all the three kinds of outliers as shown in Fig. 11(e). Nonetheless, as long as non-isolated outlier clusters exist, even the combined approach will end up with some non-isolated outlier clusters mingled with good scanned points. In comparison, the proposed method using majority voting is able to effectively cut the connections between non-isolated outlier clusters and good surface points, even when the non-isolated clusters form smooth patches. These outliers are thus well separated from the good points and the good point clusters are well preserved using the expandable boundary criterion. The resulting point cloud shown in Fig. 11(f) does not contain noticeable outliers and good scanned points are almost untouched.

A raw point cloud scanned from the Digital Camera object with shiny surfaces and geometrically complex features was also tested. As shown in Fig. 12
                        (a), the raw point cloud contains some sparsely distributed good points (green box) due to fine features like buttons as well as extensive non-isolated outlier clusters like spikes around the lens region (red box). Since these spikes locate inside a concave surface, it is hard to manually select and remove them without affecting the nearby good points. Moreover, some of the spike-shaped outlier clusters are non-isolated and form planar patches with similar point density as that of nearby good points. The existing surface propagation method is likely to propagate from these smooth outlier patches. As a result, the processed point cloud using all the three existing methods combined, even only keeping the largest cluster, still contains non-isolated outlier clusters (red box in Fig. 12(b)). In contrast, the proposed method effectively removes these non-isolated outlier clusters via the majority voting scheme and well preserves the small good clusters via the expandable boundary criterion (Fig. 12(c)).

For a raw point cloud collected from the Ball-End Cutter object (Fig. 13
                        ), extensive outliers can be found around the cutting edges at the cutter tip due to their complex geometry and some outliers around the cutter cylindrical shank due to undesirable specular reflections. The proposed method still outperforms all the three existing methods combined. The proposed method was also tested on a Room point cloud captured from a room by a Microsoft Kinect sensor (Fig. 14
                        ). Since the room wall is relatively far from the Kinect sensor, the measured points are very noisy and contain many outliers. The proposed method is seen to be able to remove these outliers and preserve desired features quite satisfactorily.

The proposed method is a more comprehensive outlier removal method than the existing methods as it locally detects non-isolated outlier clusters and globally removes isolated sparse outliers and outlier clusters. The processed point cloud data after outlier removal can then be used for many subsequent applications such as quality inspection and surface reconstruction. For the surface reconstruction application, a robust implicit moving least-squares (RIMLS) method is adopted to locally approximate the scanned surface and to preserve sharp features  [11]. The required input normal vectors are estimated using the method of Wang et al.  [31]. Fig. 15
                         shows the reconstructed surfaces using the RIMLS method on the outlier-removed point clouds by the combined method (Fig. 11(e)) and the proposed method (Fig. 11(f)), respectively. The undetected non-isolated outlier clusters in Fig. 11(e) lead to ghost surface patches in the reconstructed surface (Fig. 15(a)), whereas the reconstructed surface benefits from the proposed method and a clean surface is obtained (Fig. 15(b)). This is because RIMLS locally approximates the surface patch for each point’s neighborhood. It produces ghost surface patches for non-isolated outlier clusters since their neighborhoods consist of dense outliers only. As non-isolated outlier clusters are very close to the scanned surface, the resulting ghost surface patches are attached to the scanned surface. Such ghost surface patches do not exist and are artifacts that significantly downgrade the quality of the reconstructed surface. Thanks to the majority voting scheme, non-isolated outlier clusters are effectively removed and the resulting reconstructed surface can represent the scanned surface with much higher fidelity without ghost surface patches.

The proposed algorithm has partially been coded to run in parallel since most steps such as principal component analysis, surface fitting and boundary estimation, can be conducted in each point’s neighborhood independently. Regarding the computational time, the implementation tests have been done with partial parallelization on a standard PC with Intel Core i5 at 3.30 GHz with quad cores and 2 GB RAM. Table 1
                         lists the sizes of the various test data sets and their corresponding computational time. It should be noted that a larger data set does not necessarily lead to longer computational time. The computational time for the majority voting depends on the number of irregular points to be voted whereas the computational time for the isolated outlier removal is related to the number of segmented point clusters. The quadric surface fitting in each point’s neighborhood is the most time consuming step in the overall algorithm. Although being robust to outliers, iteratively re-weighted least squares (IRLSs) for surface fitting is more time consuming than ordinary least squares. Meanwhile, it has been observed that, for a regular point around an irregular region, its local fitted surface may only vary a little when voting for different irregular points nearby. Thus, a potential way of reducing computational time is to update the previous fitted surface as needed instead of always estimating a new surface in such a situation.

@&#DISCUSSION@&#

As for the limitations, the proposed method builds on the premise that sufficient regular voters exist to detect the irregular points in the majority voting process. If such regular points are sparse or insufficient, the majority voting process will not work properly. For the scanned point cloud from the Elbow Pipe Joint object (Fig. 16
                        ), the threads were not sufficiently sampled. Although the result of the proposed method was still seen to be in general superior to that of the combined method, the majority voting process could not successfully detect all the non-isolated outlier clusters due to lack of neighboring regular points (circled in red in Fig. 16(d)). Also, some good point clusters (circled in green in Fig. 16(d)) were mistakenly removed since the boundary points could not be reliably detected, again due to insufficient data points.

The majority voting scheme is feasible for non-isolated outlier clusters. Typical sources of non-isolated outliers are probable specular reflections due to shiny scanned surfaces and multi-path reflections around concave geometry  [32]. Meanwhile, the large misalignment of the overlap regions between two range images may produce non-isolated outliers as well and should be recalibrated. One may ask if non-isolated outlier clusters can be caused by surface points with bias position errors. It has been reported that scanning view related factors such as incident angle  [33] and scanning orientation  [34] can cause bias position errors in a scanned point cloud. However, such systematic errors are relatively of small magnitude in comparison with outliers. For example, the small systematic errors due to scanning orientation  [34] are obscured by random noise and can usually be handled by error compensation  [33,34]. So, although being biased from the true surface, points with systematic scanning errors are still close to the scanned surface and can usually be compensated to become valid points, which are different from outliers that should be deleted.

The majority voting scheme is sensitive to point distribution by its nature. Points with high density will have strong influence on the majority voting result. To be more specific, for a point in an outlier connection region with large point density variation, it is quite rare that the point’s non-isolated outlier neighbors are denser than its surface neighbors. Nonetheless, under this situation, the majority voting will indeed favor non-isolated outliers. Therefore, the input point cloud is required to be relatively uniform with low density variation. This can be achieved by setting consistent point spacing parameters in the scanning setting or fast uniform resampling algorithms such as voxel grid filter  [35] as a pre-processing step. In case such pre-processing is inapplicable, resampling neighbors by discretizing the neighborhood ball of a point  [36] can also be used to alleviate the effect of density variation.

Regarding the proposed expandable boundary criterion, it has been demonstrated to be more effective than the cluster size threshold via testing on various scanned point clouds. Singular cases do exist, such as the outliers appearing around a main surface boundary due to boundary occlusion as circled in green in Fig. 14(b). However, according to numerous tests, such singular cases for the proposed criterion do not happen very often as compared to the cases for the cluster size criterion. So from a practical perspective, considering the rarity of existing methods to extract good clusters, the proposed criterion is still deemed an improved measure in comparison with the cluster size threshold.

@&#CONCLUSIONS@&#

A robust method has been presented in this paper to effectively detect all types of outliers in a scanned point cloud. The main feature of the developed method is the majority voting scheme to reliably remove the connections between non-isolated outlier clusters and the scanned object surface even when these outlier clusters form planar patches. The resulting point cloud then only contains isolated outlier clusters and sparse outliers, which are grouped into clusters. Instead of applying a cluster size threshold to indiscriminately remove all small clusters regardless they are composed of outliers or good points, an expandable boundary criterion is proposed to more reliably detect and remove the isolated outliers and preserve good points.

As demonstrated by a variety of case studies, the presented method is able to achieve superior results in detecting all three types of outliers and preserving distinct geometric features such as sharp edges in a scanned point cloud. Outliers are formed and known to be associated with each scan path. It is thus possible to identify the outliers via multiple or highly redundant scans for scan-path based scanning setups. The related investigation is underway and will be reported later.

@&#ACKNOWLEDGMENTS@&#

This work has been funded by the Natural Sciences and Engineering Research Council of Canada (NSERC) under the CANRIMT Strategic Network Grant. The authors wish to acknowledge the anonymous reviewers for their valuable comments that have led to the improved quality of this paper. Regarding the test data sets, the Room point cloud was downloaded from the Point Cloud Library (PCL) website. The Sheep point cloud was acquired from the web site of AIM@SHAPE Shape Repository. All the other data sets were actual scanned point clouds collected by an LDI WS-3040 laser scanning system available in our research laboratory.

@&#REFERENCES@&#

