@&#MAIN-TITLE@&#Hierarchical differential evolution for minimal cut sets identification: Application to nuclear safety systems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We identify minimal cut set (mcs) of coherent and non-coherent Fault Trees (FTs).


                        
                        
                           
                           We present a Hierarchical Differential Evolution (HDE) algorithm for mcs identification.


                        
                        
                           
                           Mcs identification is originally transformed into a hierarchical optimization problem.


                        
                        
                           
                           The HDE method is applied to the Reactor Protection System (RPS) of a PWR reactor.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Dynamic reliability

Minimal cut sets (mcs)

Fault Trees (FTs)

Hierarchical Differential Evolution (HDE)

@&#ABSTRACT@&#


               
               
                  In this paper, we present a Hierarchical Differential Evolution (HDE) algorithm for minimal cut set (mcs) identification of coherent and non-coherent Fault Trees (FTs). In realistic application of large-size systems, problems may be encountered in handling a large number of gates and events. In this work, to avoid any approximation, mcs identification is originally transformed into a hierarchical optimization problem, stated as the search for the minimum combination of cut sets that can guarantee the best coverage of all the minterms that make the system fail: during the first step of the iterative search, a multiple-population, parallel search policy is used to expedite the convergence of the second step of the exploration algorithm. The proposed hierarchical method is applied to the Reactor Protection System (RPS) of a Pressurized Water Reactor (PWR) and to the the Airlock System (AS) of a CANadian Deuterium Uranium (CANDU) reactor. Results are evaluated with respect to the accuracy and computational demand of the solution found.
               
            

@&#INTRODUCTION@&#

Fault Tree (FT) is a tool widely used in Probabilistic Safety Assessment (PSA) of Nuclear Power Plants (NPPs) (NASA, 2002; NUREG, 1983; Zio, 2007). Traditionally, FTs are used for quantifying various probabilistic measures (including probabilities and/or frequencies of sequences, safety margins, importance factors and sensitivity indices) (Borgonovo, 2010; Epstein & Rauzy, 2005; Gao, Cui, & Li, 2007; Høyland & Rausand, 1994; Kumamoto & Henley, 1996). The size of the system may challenge the FT analysis, in practical situations. For example, in the first case study considered in this work for the Reactor Protection System (RPS) of a Pressurized Water Reactor (PWR) with 12 components (Wash-1400, 1976), the minimal cut sets (mcs) identification problem gives rise to a FT structure function Φ composed by 212
                     =4096 minterms (products of the literals α representing each component state, α
                     =1 failed, α
                     =0 safe), 485,361 cut sets (combinations of components failures leading the system into failure) and a cut set chart (table with all minterms as columns and cut sets as rows) of 1,966,682,772 elements.

To overcome the problem, research efforts have developed in two directions: one looking for approximations of the probabilistic measures of interest obtained by considering only some selected mcs; another one developing computational methods to more efficiently assess the probabilistic measures from the exact mcs. One example of approximation consists in considering only small order mcs (i.e., mcs formed by a small number of elements) (Rauzy, 2001), which in principle capture the main part of the top-event probability. Another truncation process selects only the mcs with probability of occurrence larger than a given threshold. However, mcs truncation can have direct consequences on the safety level of the NPP, because it is not known how many are the mcs neglected (because of small order or probability) in the estimation of the risk/safety indicators of interest. For this reason, it has been pointed out that mcs exact identification (rather than truncation) is one of the technical issues to be tackled in the development of PSA for risk-informed decision making, e.g. for maintenance, service inspections and safety margins quantification in new NPPs design (Duflot, Bérenguer, Dieulle, & Vasseur, 2009; Fleming, 2003; Zio, Di Maio, & Tong, 2010).

A first attempt in developing computational methods for limiting the mcs combinatorial explosion of FTs without approximation has been to encode the Boolean formulae derived by the FTs into binary decision diagrams (BDDs) (Akers, 1978). One of the major advantages of a BDD is that it provides exact values for probabilistic measures and it does not need any kind of truncation or approximation. However, BDD is highly memory consuming and very large models are beyond capability (Rauzy & Dutuit, 1997). Another attempt for identifying mcs is the Dynamic Flowgraph Methodology (DFM), which is a directed graph-based approach to model and analyze the behavior of dynamic systems (Garrett, Guarro, & Apostolakis, 1995). The main drawback is scalability, in that realistic modeling causes a combinatorial explosion as the number of states in the system increases (Bjorkman, 2013). In order to tackle this challenge, a DFM has been solved by a BDD (based on meta-products or on zero-suppressed BDD) (Bjorkman, 2013). Also Petri nets suffer from the combinatorial explosion of the number of states, when applied to complex systems (Labeau, Smidts, & Swaminathan, 2000).

We propose a novel approach to tackle the issue of exact mcs identification of coherent and non-coherent FTs based on a Hierarchical Differential Evolution (HDE) algorithm. The Differential Evolution (DE) algorithm has been demonstrated to be an efficient, effective, fast and robust method for the identification of prime implicants (PIs) in simple non-coherent structure functions: a comparison with respect to a traditional analytical approach known as Quine–McCluskey algorithm and a Genetic Algorithm (GA) has been presented in Di Maio, Baronchelli, and Zio (Personal communication, 2013). In the present paper, DE is applied within a hierarchical scheme to deal with its computational limitations and avoid any approximation in the identification of mcs of complex coherent structure functions. With the proposed scheme, we look for the minimum combination of cut sets that can guarantee the best coverage of all the minterms that make the system fail: during the first step of the iteration process, a multiple-population, parallel search policy is implemented to expedite the convergence of the second step of the exploration algorithm.

The paper is organized as follows. Section 2 is devoted to recalling some basic terminology (FT, Boolean Formulae, coherent and non-coherent structure functions, minterms, etc.). In Section 3, the HDE technique for mcs identification is presented. In Section 4.1, it is applied to the FT of a Reactor Protection System (RPS) of a PWR and its results are compared with those obtained with a DE algorithm, whereas in Section 4.2 the results of the application of HDE to the Airlock System (AS) of a CANDU reactor are shown. Conclusions and remarks are given in Section 5.

In this section, we introduce the terminology used throughout the article with reference to FT analysis. The causal relations that lead to the FT top event can be described by a set of Boolean formulae built over a set of variables (literals) α
                     1,
                     α
                     2,
                     α
                     3,…,
                     αn
                     , and connectives (and, or, not, k-out-of-n), whose semantics are defined by means of truth tables. By manipulation of the truth tables, the top event can be expressed in terms of the n primary events (e.g., components failures in our case of interest). The simplest way to express the structure function Φ, which relates the top event to the primary events, is in terms of minimal cut sets (mcs) Π
                     ∗
                     ∊
                     Ω, where Ω is the whole set of cut sets. A mcs is an irreducible combination of primary events (cut set Π), which if all verified cause the top event to occur. Then, a mcs Π
                     ∗ is one of the 2
                        n
                      products of literals (minterms), whose occurrence ensures the failure of the system Φ(Π
                     ∗)=1, while no proper subset of Π
                     ∗ is a cut set (Epstein & Rauzy, 2005). A structure function Φ is coherent if it can be expressed without any Π
                     ∗ of complemented literals 
                        
                           
                              
                                 α
                              
                              
                                 ¯
                              
                           
                        
                     , non-coherent otherwise.

We treat the problem of mcs identification as a set covering problem (SCP) (Beasley & Chu, 1996). In the context of mcs identification, the SCP is the problem of covering each one of the minterms by a group of cut sets of minimal cost. We define the cost of a cut set Π as the number of literals α associated with system components included in the cut set (literal cost). Within the evolutionary optimization scheme here proposed, each solution of the SCP, 
                        
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ^
                                    
                                 
                              
                              
                                 opt
                              
                           
                        
                     , is represented by a specific combination of independent variables, or, mathematically speaking, by a R-dimensional vector 
                        
                           
                              
                                 x
                              
                              
                                 ¯
                              
                           
                           =
                           (
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 x
                              
                              
                                 R
                              
                           
                           )
                        
                      (hereafter called chromosome, within the jargon of the DE-optimization method adopted) where a value of 1 in the i-th vector position x
                     i implies that Πi
                      is chosen to be in the cover and vice versa a value of 0 (Sen, 1993). The total cost of each possible solution 
                        
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ^
                                    
                                 
                              
                              
                                 opt
                              
                           
                        
                      is defined as the combination of two parts: the literal cost of the cut sets selected to be in the cover and the cost associated with the number of faulty minterms left uncovered by the solution.

DE belongs to the class of Evolutionary Algorithms (EAs), which have proven effective in tackling optimization problems with high complexity, number of variables and dimensionality (Wang, Fu, & Menhas, 2010). DE search for the optimum entails three phases, called mutation, crossover and selection (Storn and Price, 1996; Holland, 1975).

In the mutation phase, for each r-th bit xr
                         of the NP chromosomes 
                           
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                              =
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    R
                                 
                              
                              )
                           
                         present in the population at the g-th generation, g
                        =1,2,…,
                        G, an estimation probability P(xr
                        ) is calculated:
                           
                              (1)
                              
                                 P
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       1
                                       +
                                       
                                          
                                             e
                                          
                                          
                                             -
                                             
                                                
                                                   2
                                                   b
                                                   [
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         r
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   +
                                                   F
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         r
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         r
                                                      
                                                      
                                                         m
                                                      
                                                   
                                                   )
                                                   -
                                                   0.5
                                                   ]
                                                
                                                
                                                   1
                                                   +
                                                   2
                                                   F
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where b is a positive real constant typically chosen ∈[6,9], F is a constant user-defined weighting factor typically chosen ∈[0,2] and 
                           
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                                 
                                    l
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                                 
                                    k
                                 
                              
                              
                              and
                              
                              
                                 
                                    x
                                 
                                 
                                    r
                                 
                                 
                                    m
                                 
                              
                           
                         are the r-th bit of three randomly chosen chromosomes with indexes l,
                        k,
                        m
                        ∊{1,2,…,
                        NP}. From the probability estimation vector 
                           
                              P
                              (
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                              )
                              =
                              (
                              P
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              )
                              ,
                              P
                              (
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                              ,
                              …
                              ,
                              P
                              (
                              
                                 
                                    x
                                 
                                 
                                    R
                                 
                              
                              )
                              )
                           
                        , the corresponding bits of the noisy vector 
                           
                              
                                 
                                    v
                                 
                                 
                                    ¯
                                 
                              
                           
                         of the current chromosome 
                           
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                           
                         are generated:
                           
                              (2)
                              
                                 
                                    
                                       v
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   if
                                                   
                                                   rand
                                                   ⩽
                                                   P
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         r
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where rand is a uniform random number in [0,1).

The r-th bit of the trial chromosome 
                           
                              
                                 
                                    u
                                 
                                 
                                    ¯
                                 
                              
                           
                         can be obtained by the crossover operator through Eq. (3):
                           
                              (3)
                              
                                 
                                    
                                       u
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         r
                                                      
                                                   
                                                
                                                
                                                   if
                                                   
                                                   rand
                                                   ⩽
                                                   CR
                                                   
                                                   or
                                                   
                                                   r
                                                   =
                                                   irand
                                                   (
                                                   R
                                                   )
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         r
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              CR
                              ∈
                              [
                              0
                              ,
                              1
                              ]
                           
                         is a control parameter which influences the probability for each r-th bit of 
                           
                              
                                 
                                    v
                                 
                                 
                                    ¯
                                 
                              
                           
                        to be selected, irand(R) is a uniform discrete random number from the set {1,2,…,
                        R}, where R is the length of the chromosome (i.e., the number of bits). Therefore, at least one bit of the trial chromosome 
                           
                              
                                 
                                    u
                                 
                                 
                                    ¯
                                 
                              
                           
                         is inherited from the mutant chromosome 
                           
                              
                                 
                                    v
                                 
                                 
                                    ¯
                                 
                              
                           
                         so that DE is able to avoid duplication of chromosomes 
                           
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                           
                         and effectively search within the neighborhood; this contributes to maintaining the diversity inside the perturbed population, shuffling old and new information, and also increases the probability of maintaining some good properties from 
                           
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                           
                        , avoiding drastic changes during the generation of new solution.

During the selection process, the population is modified by substitution. Referring to a minimization search, if the fitness of the trial chromosome 
                           
                              
                                 
                                    u
                                 
                                 
                                    ¯
                                 
                              
                           
                        , i.e., the total cost of all Π belonging to 
                           
                              
                                 
                                    u
                                 
                                 
                                    ¯
                                 
                              
                           
                        , is less than the fitness of 
                           
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                           
                        , the former will be a member of the g
                        +1-th generation replacing the latter, or the latter will be maintained, otherwise:
                           
                              (4)
                              
                                 
                                    
                                       x
                                    
                                    
                                       ¯
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   if fitness
                                                   
                                                   (
                                                   
                                                      
                                                         u
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                   <
                                                   fitness
                                                   
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        The fitness used in the DE applications that follow is called “One complement” fitness function (Shackleford et al., 2001): it accounts for the literal cost of the Π selected to be in the cover and the cost associated with the number of faulty minterms left uncovered. In particular, the cost of the trial chromosome 
                           
                              
                                 
                                    u
                                 
                                 
                                    ¯
                                 
                              
                           
                         is mapped into a binary number made up by two parts: the most important digits are determined as the complement to one of the uncovered faulty minterms, whereas the least important digits are determined as the complement to one of the sum of the costs of the cut sets included in the trial chromosome. In this way, a complete subset of cut sets that covers all faulty minterms has surely a larger fitness than any other incomplete subset. Moreover, since the selection criterion of DE is greedy, for sure the following generation is better than or at least equal to the previous generation.

The novelty of the Hierarchical Differential Evolution (HDE) here proposed for mcs identification, builds on the setting of a two-steps DE optimization. (The pseudocode is shown in Fig. 1
                        .) The first optimization is fed with subsets Γs
                        , s
                        =1,2,…,
                        S, of the whole set Ω of cut sets Π, where the s-th subset Γs
                         is generated by randomly assigning to it N cut sets Π of Ω in a way that each cut set belongs to only one subset, i.e., Γs
                        
                        ∩
                        Γp
                        
                        =∅ for s
                        ≠
                        p, and the union of all the subsets is equal to all the cut sets, i.e. 
                           
                              
                                 
                                    ∪
                                 
                                 
                                    s
                                    =
                                    1
                                 
                                 
                                    S
                                 
                              
                              
                                 
                                    Γ
                                 
                                 
                                    s
                                 
                              
                              =
                              Ω
                           
                        .

For each of the subsets Γs
                        , s
                        =1,2,…,
                        S,
                           
                              (1a)
                              we build a cut set chart, using all the minterms as columns and the cut sets Π belonging to Γs
                                  as rows

we build the cost vector, where to each Π is assigned its literal cost

we perform the DE optimization (Section 3.1)

we find the best chromosomes {Π}
                                    s
                                 .

The second DE optimization is performed on the new subset 
                           
                              
                                 
                                    ∪
                                 
                                 
                                    s
                                    =
                                    1
                                 
                                 
                                    S
                                 
                              
                              
                                 
                                    {
                                    Π
                                    }
                                 
                                 
                                    s
                                 
                              
                           
                         comprising all the cut sets included in the best chromosomes {Π}
                           s
                         found at the end of the first optimization. In detail,
                           
                              (1b)
                              we build a new cut set chart, using all the minterms as columns and the cut sets belonging to 
                                    
                                       
                                          
                                             ∪
                                          
                                          
                                             s
                                             =
                                             1
                                          
                                          
                                             S
                                          
                                       
                                       
                                          
                                             {
                                             Π
                                             }
                                          
                                          
                                             s
                                          
                                       
                                    
                                  as rows

we build a new cost vector where to each cut set belonging to 
                                    
                                       
                                          
                                             ∪
                                          
                                          
                                             s
                                             =
                                             1
                                          
                                          
                                             S
                                          
                                       
                                       
                                          
                                             {
                                             Π
                                             }
                                          
                                          
                                             s
                                          
                                       
                                    
                                  is assigned its literal cost

we perform the DE optimization (Section 3.1)

we find the mcs Π
                                 ∗ of the system.

Three performance indicators are used to judge the goodness of the results. In the evaluation, the optimizations are repeated a number of times (5 in our case), to account for the inherent stochasticity of the search algorithm. The three performance indicators are:
                           
                              –
                              Cpu: cpu time (expressed in seconds) necessary to converge to the solution 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   ^
                                                
                                             
                                          
                                          
                                             opt
                                          
                                       
                                    
                                 .

Success rate (Sr): percentage of trials for which the true optimum 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             opt
                                          
                                       
                                    
                                  is found.

Accuracy (λ): the larger λ, the larger the accuracy of the solution (Tvrdìk, 2006) as:

The procedure for mcs identification developed in Section 3 is here applied to the Reactor Protection System (RPS) of a Nuclear Power Plant (NPP) for the case of a small Loss of Coolant Accident (LOCA) (Marseguerra & Zio, 2004). The RPS is a multi-channel electrical alarm and actuating system that monitors the operation of the reactor. During normal control of the reactor, the rods are raised or lowered into the core by the use of magnetic jacks. Upon detection of an abnormal condition, RPS initiates counteracting actions to prevent a potentially unsafe condition: control rods are rapidly dropped into the core by removing the voltage to the magnetic jacks in order to allow the shutdown of the reactor. More precisely, control rod assemblies are dropped by removal of power through the opening of either the reactor trip breaker of Train A (RTA) or of the reactor trip breaker of Train B (RTB) (Marseguerra & Zio, 2004). The two trip breakers, connected in series, control the power provided by two motor generators connected in parallel. Each of them is bypassed by a special test breaker of the same type of the trip breakers, called bypass A (BYA) and bypass B (BYB), for RTA and RTB, respectively. The tripping signals which trip the breakers come from two relay logic trains which are identical in design, called Trip Train A (TrainA) and Trip Train B (TrainB). For prevention against possible interactions that may cause false scrams or failure to scram, the system trips on loss of electrical power and each trip channel is physically separated from the others and from other equipment (Schreiber & Theriault, 2009).

In this analysis, the top event of the RPS FT considered consists in at least 2 out of 48 rods failing to enter the core following a small LOCA, which leads to reactor scram (Wash-1400, 1976). The failed insertion of the control rod can be originated by a core distortion (CD) (e.g., a change of the channel geometry due to the swelling of the fuel cladding) or by a failure in the rod drop (RDF). Wire faults (WF) are lumped into a single fault and a common mode failure (CMF) is considered, involving several trip circuit breaker faults and wire faults on each branch of the redundant trip breaker system. Trip trains (TrainA and TrainB) can even independently fail to deliver the signal to the RPS trip breakers, while the trip breakers (RTA and RTB) can fail upon receipt of a valid signal (e.g. due to sticking of the undervoltage trip attachment), as their bypass trip breakers (BYA and BYB). Operators interference in the correct automatic operation is considered during testing or maintenance operations (TestA and TestB). Therefore, CD, RDF, WF, CMF, TrainA, TrainB, RTA, RTB, BYA, BYB, TestA and TestB are considered as basic failure events (Table 1
                        ). The structure function Φ for the considered RPS failure event gives rise to 4096 minterms (4052 leading the RPS into failure state) and 485,361 cut sets Π. Further details on the modeling assumptions, the detailed data for the reliability analysis and the FT for the considered top event can be found in Wash-1400 (1976). For the sake of clarity, in Fig. 2
                        , a sketch of the complete FR of the small LOCA for the RPS is provided.

The true solution 
                           
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    opt
                                 
                              
                           
                         that will be used for comparison in the following subsections, has been obtained by traditional consolidated algorithms in Wash-1400 (1976): it consists in 15 mcs Π
                        ∗ ({CD}, {RDF}, {WF}, {CMF}, {RTA, RTB}, {RTA, BYB}, {RTA, TrainB}, {RTB, BYA}, {RTB, TrainA}, {BYA, BYB}, {BYA, TrainB}, {BYB, TrainA}, {TrainA, TrainB}, {TrainA, TestB}, {TrainB, TestA}) (Marseguerra & Zio, 2004). Moreover, the results provided by the proposed HDE will be also compared with a DE approach (Di Maio et al., 2013, Personal communication), for showing the improved capabilities of the HDE with respect to similar algorithms.

We apply to the RPS case study the DE approach (Di Maio et al., 2013, Personal communication) with a “One complement” fitness function (Shackleford et al., 2001) embedded into the evolutionary algorithm: since the columns in the cut set chart are 4052 (that is, equal to the number of minterms leading the system into failure state) 12 bits code the maximum number of uncovered columns, whereas 22 bits code the literal cost part of the trial solution because the sum of the literal cost of all the 485,361 cut sets is equal to 3,936,648. In Fig. 3
                           , the calculation procedure of the “One complement” fitness function is shown for the best solution 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            of the RPS mcs identification problem: in this particular case, the uncovered columns are equal to zero, whereas the total cost of the best solution 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            is equal to 4·1+11·2=26 (i.e., 4 cut sets contain only one basic event and 11 contain 2 basic events); the complement to one of 0 on 12 bits is equal to 4095, and the complement to one of 26 on 22 bits is equal to 4,194,277; joining together the two parts of the fitness function gives a fitness value for 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            equal to 17,179,869,157.

In this application, parameters F and b (Eq. (1)) and CR (Eq. (3)) are set equal to the values reported in Table 2
                           .

The analysis is performed for a population size NP
                           =50, because this is the maximum value allowed by the computer memory constraints: the identification of the mcs for the RPS entails chromosomes of length R
                           =485,361 (i.e., the number of cut sets Π), and an allocated memory of NP
                           ×
                           R bits (equal to 24,268,050, in our case); any further increase in NP is not allowed by the Matlab® software used in this work to develop the DE and HDE. The only stopping criterion is the generation number G set equal to MAXGEN
                           =10,000. Performance indicators are the same introduced in Section 2 and are quantified on a set of 5 trials of optimization. Results of the DE optimizations are shown in Table 3
                           .

It is seen that in this real case with a large number of minterms and cut sets, DE is not capable of finding the true solution 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            (found in Wash-1400 (1976)) by traditional consolidated algorithms) among all the cut sets (Sr=0%), due to the hardware computational capability that limit the population size to NP
                           =50. To overcome this limitation, we apply HDE to the FT of the RPS.

In accordance with the procedural steps presented in Section 3.2 and Fig. 1, we partition Ω into S
                           =50 subsets Γs
                            (39 subsets composed by 9707 cut sets and 11 subsets composed by 9708 cut sets): the number of the cut sets belonging to each Γs
                            is chosen guided by the fact that the DE has shown good results (in terms of success rate (Sr)) when applied to cut sets groups smaller than 10,000 (Di Maio et al., 2013, Personal communication). For each Γs
                           , its cut set chart and its cost vector are built as shown in Section 3.2. When parameters F, b, CR are set as in Table 2, NP
                           =100 and MAXGEN
                           =1500, the total time approximately required for the first level optimization is 25,721 (seconds) on an Intel® Core™ i5.2500 CPU @3.30gigahertz.

The number of cut sets Π found by the first step of the optimization is 1510, among which the second step DE will search for the mcs Π
                           ∗. For this, the cut set chart and the cost vector associated to the new cut sets are defined as shown in Section 3.2. As for the first optimization step, the parameters F, b, CR are set equal to the values reported in Table 2, NP
                           =100 and MAXGEN
                           =1500. The mcs found by the HDE are the same as those reported in Marseguerra and Zio (2004), proving the HDE procedure effective in finding the mcs in large structure functions. The cpu time required for the second-step optimization is equal to 990.71 (seconds). Thus, the total time required by the HDE optimization is equal to 26,700 (seconds), much shorter than for the DE (Table 3).

For showing the better results of HDE with respect to DE, in Fig. 4
                           , the evolution of the difference Δ between the fitness values of 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            is shown on a semi-logarithmic plot. HDE shows superior convergence performance. In fact, in the first step of the optimization (continuous line with circles) it achieves better results than DE (continuous line with triangles) by resorting to a larger population for exploring a reduced and focused search space, whereas in the second step of the optimization (continuous line with stars) it explores an even more reduced search space made up of the selected best chromosomes 
                              
                                 
                                    
                                       ∪
                                    
                                    
                                       s
                                       =
                                       1
                                    
                                    
                                       S
                                    
                                 
                                 
                                    
                                       {
                                       Π
                                       }
                                    
                                    
                                       s
                                    
                                 
                              
                            reaching Δ
                           =0 in only 2200 generations. It is worth pointing out that, with respect to the accuracy of the solution found and the success rate of HDE (for a set of 5 trials), at the end of the first optimization stage it is meaningless to calculate Sr and λ, because the true solution 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            might not be included into the set of solutions {Π}
                              s
                            of the S subsets Γs
                           . On the other hand, at the end of the second optimization step, HDE provides Sr=100% and λ
                           =11.

In principle, the extension to a hierarchical, multi-step, DE-based algorithm for mcs identification is straightforward, allowing the treatment of very large systems. It is always feasible to group the possible solutions in different subgroups and then run a different optimization for each subgroup until the solution converges to the optimum of the fitness function. In other words, applying a hierarchical DE-based procedure, the NP-complete problem (Sen, 1993) associated to the mcs identification of a complex (even non-coherent) structure function can be tackled in such way that the computational complexity of the problem grows linearly with the number of subgroups dimension and not exponentially, as it is when resorting to the single DE optimization.

A second application of the HDE for mcs identification considers the FT developed for analyzing a scenario of a Design Basis Accident (DBA) occurred in 2011 in the Airlock System (AS) of a CANDU NPP (Di Maio et al., 2013; Lee & Lu, 2012). The AS is a safety system required to keep the pressure of the inner side of the reactor vault lower than the outer side in order to avoid the dispersion of contaminants out of the reactor bay, in case of accident. Therefore, the FT top event is the incapability of the AS to maintain the pressure boundary (Lee & Lu, 2012). The system consists of a vessel in the containment wall of the reactor vault, with two doors in order to allow the inspection of the vault: one door opens towards the inside of the reactor vault, the other towards the outside; so, at least one airlock door, whose seals are normally inflated via the air system, must be closed by a latch with sufficient pressure in the seals to fulfill its safety function. During the accident, the inflation of the seals is switched to the back-up air supply tank. Possible causes for the top event occurrence can be: the pressure equalizer valve fails (V1), doors fail to close because latches are not locked (D1) and seals are cracked or cannot be inflated (S1). The pressure equalizer valves are designed to equalize the pressure between the reactor bay and the service side and, therefore, to allow controlled flow between these two areas. The pressure equalization can fail due to gear box failure (G1) that may limit the vents from opening and closing, to the presence of leakages in the piping system (P1/P2) or to the failure of the exhaust pipe (E1). The airlock doors must be closed by a latch, otherwise the pressure equalizer valves and seals cannot be called in operation on demand. In addition, the possibility is considered that the back-up tank is already empty (T1) or fails to engage (T2) when the inflation of the seals is switched to the back-up air supply system. The basic failure events that can give rise to the AS failure are listed in Table 4
                        .

The FT for the DBA here considered is shown in Fig. 5
                         (Lee & Lu, 2012). The structure function expression is Φ
                        =[(G1 and E1) or ((T1 and (S1 or V1 or P1)) or (V1 or T2 or P2)) or D1]. There are 497 minterms leading to the system failure, 16,867 cut sets and 7 mcs Π∗
                        =({D1},{P2},{T2},{V1},{E1,G1},{P1,T1},{S1,T1}) as found in Lee and Lu (2012) by traditional consolidated algorithms for mcs identification.

In Fig. 6
                            the calculation procedure of the “One Complement” fitness function is shown for the best solution: in the problem of the AS of the CANDU, where the columns of its cut set chart are 497 (that is, equal to the number of minterms), 9 bits code the maximum number of uncovered columns, whereas the sum of the cost of all the 16,867 cut sets is equal to 103,298 so that 17 bits code the cost part of the trial solution. The uncovered columns are equal to zero, while the total cost of the best solution is equal to 10 (4 cut sets contain only one basic event and 3 contain 2 basic events); the complement to one of 0 on 9 bits is equal to 511, and the complement to one of 10 on 17 bits is equal to 131,061; joining together this two parts of the fitness function gives a fitness value for 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            equal to 67,108,853.

In the proposed two-step HDE framework, we have set the number of subsets Γs
                            equal to S
                           =10 and the number of minimal cut sets Π of Ω equal to N
                           =1687 for each s-th subset Γ. We perform the first-stage DE optimization with a population size equal to NP
                           =500 and stopping criterion “maximum number of generation”, MAXGEN
                           =700. The mean cpu time required for performing the optimization on a single s-th subset is equal to 607.20 (seconds). At this first optimization stage, the number of cut sets is 100 and the true solution 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            does not belong to any of the S subsets. However, it is worth pointing out that on Intel® Core™ i5.2500 CPU @3.30gigahertz the computational demand approximately required for the first step is 1214.40seconds.

We perform the second DE optimization comprising all the 100 cut sets included in the best individuals {Π}
                              s
                            found at the end of the first optimization. The population size equal to NP
                           =500 and MAXGEN
                           =200. The mcs found by the HDE are the same as those reported in Lee and Lu (2012), proving that the HDE is capable of identifying the exact mcs Π
                           ∗ of a complex system as the AS of a CANDU. The cpu time required for the second step optimization is equal to 19.76seconds making the total time required by the HDE optimization equal to 1233seconds.

For further comparison of the results with other similar algorithms, in Fig. 7
                            the faster convergence obtained by the HDE compared with DE with NP
                           =700 is shown: the faster evolution towards zero of the difference Δ between the fitness values of 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            of HDE highlights its superior performance. In fact, in the first step of the optimization (continuous line with circles) it achieves better results than DE (continuous line with triangles) by resorting to a larger population for exploring a reduced search space, whereas in the second step of the optimization (continuous line with stars) it explores an even more reduced search space made up of best individuals, reaching Δ
                           =0 in only 800 generations, whereas around 1550 generations are needed for DE such that Δ
                           =0. As a final remark, it is worth pointing out that, in this latter case, (i) the number of generations needed for Δ
                           =0 is much smaller than for the RPS case study of Section 4.1.2 and (ii) DE is still capable of finding the solution 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       opt
                                    
                                 
                              
                            of the mcs identification problem, whereas in Fig. 7 the unfeasibility of resorting to DE for the RPS case study is clear. This is due to the fact that the number of components of the RPS case study is larger than that of the AS here considered.

@&#CONCLUSIONS@&#

The exact identification of the mcs of FTs is an important task in PSA. It becomes non-trivial for systems that are composed by large numbers of components. In this paper, we have addressed this issue by proposing a novel HDE algorithm. This amounts to transferring the mcs identification into a hierarchical optimization problem: during the first step, a multiple-population, parallel DE search policy is used to expedite the convergence of a second step of DE exploration. The proposed method has been applied for the analysis of a RPS of a PWR and a AS of a CANDU. The superior HDE performance is evident when the number of basic events in the FT is large.

@&#REFERENCES@&#

