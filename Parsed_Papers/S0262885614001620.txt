@&#MAIN-TITLE@&#Multiview stereo and silhouette fusion via minimizing generalized reprojection error

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A generalized reprojection error is proposed to fuse stereo and silhouette cues.


                        
                        
                           
                           The method composes of convex optimization and mesh-based surface refinement.


                        
                        
                           
                           Insensitive to initialization and scalable for high-resolution reconstruction.


                        
                        
                           
                           Good performance for data with smooth texture and sparsely sampled viewpoints.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Multiview stereo

3D reconstruction

Silhouette fusion

Convex relaxation

Reprojection error

@&#ABSTRACT@&#


               
               
                  Accurate reconstruction of 3D geometrical shape from a set of calibrated 2D multiview images is an active yet challenging task in computer vision. The existing multiview stereo methods usually perform poorly in recovering deeply concave and thinly protruding structures, and suffer from several common problems like slow convergence, sensitivity to initial conditions, and high memory requirements. To address these issues, we propose a two-phase optimization method for generalized reprojection error minimization (TwGREM), where a generalized framework of reprojection error is proposed to integrate stereo and silhouette cues into a unified energy function. For the minimization of the function, we first introduce a convex relaxation on 3D volumetric grids which can be efficiently solved using variable splitting and Chambolle projection. Then, the resulting surface is parameterized as a triangle mesh and refined using surface evolution to obtain a high-quality 3D reconstruction. Our comparative experiments with several state-of-the-art methods show that the performance of TwGREM based 3D reconstruction is among the highest with respect to accuracy and efficiency, especially for data with smooth texture and sparsely sampled viewpoints.
               
            

@&#INTRODUCTION@&#

Accurate reconstruction of a 3D geometrical shape from a sequence of calibrated 2D images has many real world applications, such as augmented and mixed reality [1,45], urban reconstruction [2,46], object detection [3,47] and object recognition [4,48]. 3D reconstruction based on multiple images is an active field of research in computer vision [5,6,42] and has attracted considerable recent interest [40,41,43,44], due to its capability to produce high-quality reconstruction for indoor and outdoor scenes and drastically decreased cost in image acquisition by digital cameras and cellphones.

There are several image cues that can be utilized for multi-image based 3D reconstruction [7], such as texture, defocus, shading, stereo, and silhouette. Among them, stereo cues are the most common ones. The reconstruction based on stereo cues is also known as shape from stereo and multiview stereo. Based on the Lambertian reflectance model of illuminated surface [8], multiview stereo methods can infer a 3D shape by finding local correspondences among the input 2D images. However, due to noise, illumination variation, inaccurate camera calibration and/or lack of texture on the object, correspondences are often misidentified, resulting in degraded 3D reconstruction accuracy and sometimes unpleasant visual effect. Although the introduction of neighbor [9–11] or non-local information [12] may alleviate this problem, these remedies are inadequate in finding reliable correspondences for objects which do not contain sufficient textures. To solve this problem, energy minimization techniques based on weighted area function [13,14] have been proposed by adding surface smoothness as a regularization term. These techniques lead to compact and smooth surfaces and thus reduce outliers. However, regularization techniques lead to over-smoothed surfaces and thus generate artifacts in certain cases, such as objects with thin or protruding structures.

Another commonly used cue for 3D reconstruction is silhouette. The methods that use silhouette cues to recover 3D surfaces are called shape from silhouette. These methods [15–17] aim at reconstructing a visual hull by using multiple silhouette images. The visual hull is the intersection of the visual cones associated with all image silhouettes. For any 3D point inside the visual hull, its projected point in each 2D image is expected to be enclosed by the silhouette. Since the projections of thin or protruding structures are generally located on boundaries of silhouettes, such structures can be recovered in the boundaries of the visual hull. The quality of the visual hull is directly affected by the segmentation quality of the silhouettes. With recent advances in image segmentation methods, visual hull reconstruction has become increasingly accurate and robust. However, there are still problems using this approach, e.g., concavities in a shape cannot be reconstructed from the visual hull at all.

To recover deep concave, thin and protruding structures, we plan to take advantages of both stereo and silhouette-based techniques by integrating these cues in the process of reconstruction. The accuracy of 3D reconstruction not only depends on how the objective function is designed, but also depends on how the surface is represented. Volumetric based methods are capable of freely changing topology of surface and efficient for optimization, but the drawback is their high cost in memory for large volume data. The mesh based methods can represent high-resolution surface without large memory requirements, however, most of them are limited in handling topology changes and sensitive to initial condition. It is thus important to integrate the advantages of volumetric and mesh based methods. In this paper, we present an effective and accurate multiview reconstruction method based on a two-phase optimization for generalized reprojection error minimization (TwGREM). A generalized reprojection error is formulated to integrate stereo and silhouette consistencies into an energy function, which allows the recovery of concavities while preventing over-smoothing of protruding structures. By utilizing the advantages of the implicit and explicit representations of surfaces, a two-phase optimization method is used to minimize this function. In the first phase, with the implicit representation of surface on 3D volumetric grids and the convex relaxation technology, the method is robust against initial conditions and can be efficiently solved using variable splitting and Chambolle projection with freely changing surface topology. In the second phase, the result is further parameterized and refined on a triangle mesh to produce the high-quality reconstruction output.

The rest of the paper is organized as follows: the related work is reviewed in Section 2. The proposed TwGREM method is presented in Section 3, which includes main concepts of the method, formulation of an energy function, and energy optimization. Experimental results are analyzed in Section 4 before the paper is concluded in Section 5.

@&#RELATED WORK@&#

In some existing studies, the visual hull was used as an initial surface for optimization, and the constant balloon term was added to the energy function so as to penalize the over-smoothing of the surface [18,19]. However, the preference of large shape volumes of this method makes it difficult to reconstruct deep concavities. This problem can be addressed by replacing the constant balloon term with depth maps [20]. The stereo based method is used to compute depth maps on highly textured regions while the silhouette based method is used to compute depth maps on textureless and occluded regions. Then, these depth maps are merged into an energy function on 3D volumetric grids to optimize the final surface. The reconstruction process of this method is thus split into two sub-problems: computing depth maps and optimizing the energy function on the volumetric grids. However, noise and outliers in depth maps could be propagated to the final result. Liu et al. [39] proposed a depth map estimation and fusion method which uses both silhouette and epipolar geometry to constrain the search for admissible solutions. In particular, in their depth map estimation process, multiple starting points are selected for high-quality multi-scale variational depth estimation. However, the final models need to be generated via meshing point clouds using surface reconstruction algorithm. This may lead to an over-smoothing effect in some thinly protruding structures. Sinha et al. [21] proposed to use a graph cut framework to integrate both silhouette and stereo cues into in a single optimization formulation. Due to the reconstruction being computed on the volumetric grids, memory requirements increase rapidly as the grid resolution increases. The high memory requirements limit the utility of this method. Alternatively, one can dynamically integrate silhouette-aligning forces in each optimization step of stereo reconstruction. Kolev et al. [22] used a regional term on volumetric grids to enforce the silhouette constraint, which is similar to the Chan–Vese model in 2D/3D image segmentation [23,24]. This regional term can be updated during energy optimization, so the occluded regions can be determined based on currently estimated surface. Hernandez et al. [25] first used silhouette-aligning forces on the triangle mesh based deformable surface to provide a robust way to recover protruding structures with lower memory requirement. Since triangle mesh based surface representation may be trapped in local minima, the method needs a good initial condition which may not be attainable. Cremers et al. [26,27] reformulated a weighted area function model with silhouette constraints as a constrained convex optimization problem, which solves a convex function in the admissible convex domain. In order to implement the silhouette-aligning constraint, this method needs to compute the first and last voxels for ray-volume intersection along a visual ray in the preprocessing step and store them in lists. As a result, the size of such data structure and memory requirements grows significantly as the increase of the image resolution. By taking advantage of visibility variation in the derivatives of the reprojection error [28,29], stereo and silhouette consistencies can be naturally integrated. However, since these methods need to consider the variation of surface visibility, the models' complexity makes the optimization procedure susceptible to the local minimum problem.

@&#METHODS@&#

Inferring a 3D shape can be considered as an inverse problem of imaging. The aim of this problem is to reconstruct an object surface S from multiple 2D images observed in different views. In order to assess the quality of reconstruction, the observed images are reprojected via S to generate predicted images. The reprojection error between the observed and predicted images thus provides an effective measure of reconstruction quality and naturally formulates the reconstruction as a minimization problem. It has been shown [29] that this formulation with additional prior information of the surface, e.g., local smoothness, corresponds to the following Bayesian formulation:
                        
                           (1)
                           
                              P
                              
                                 
                                    S
                                    |
                                    D
                                 
                              
                              =
                              
                                 
                                    P
                                    
                                       
                                          D
                                          |
                                          S
                                       
                                    
                                    P
                                    
                                       S
                                    
                                 
                                 
                                    P
                                    
                                       D
                                    
                                 
                              
                           
                        
                     where S is the estimated surface and D is the set of observed images. P(D) only affects P(S|D) up to a scale, and Eq. (1) can thus be reformulated as: log(P(S|D))∝log(P(D|S))+log(P(S)). The log-likelihood term log(P(D|S)) measures the reprojection error, while log-prior term log(P(S)) is the regularization term reflecting the smoothness of the surface.

In the two-phase optimization method for generalized reprojection error minimization (TwGREM), we maximize the consistency between the original and predicted images by utilizing both stereo and silhouette information. Based on this concept, we redefine the reprojection error as a combination of two error components: a stereo reprojection error component and a silhouette reprojection error component.

As shown in Fig. 1(a), the stereo reprojection error is the same as the traditional reprojection error. The predicted image of an observed image is estimated by first projecting one of neighboring images to the reconstructed surface and then projecting back to the image space of this observed image. We refer to this set of projection operations as stereo reprojection, and this predicted image as stereo predicted image. The stereo reprojection error measures the inconsistency between the stereo predicted and the observed images.

Additionally, a set of predicted images are generated by projecting each image to the 3D scene and then projecting back to the same image space, as shown in Fig. 1(b). We refer to this set of projection operations as silhouette reprojection, and this predicted image as silhouette predicted image. The comparison between the silhouette predicted image and the silhouette image of the observed image define a different form of the reprojection error. The depth information cannot be estimated from this reprojection error, since no variation in viewpoints is presented. However, it can measure the consistency of reconstructed surface and silhouette images, indicating whether the reconstructed surface is over-smoothed, as shown in Fig. 2
                        . So, we define this reprojection error as silhouette reprojection error.

Introducing the silhouette reprojection error generalizes the traditional definition of reprojection error which is only defined on stereo image pairs. The generalized reprojection error is thus stereo reprojection error
                        +
                        silhouette reprojection error. Ideally, the minimum of generalized reprojection error can be reached if the estimated surface is the best-consistent with all stereo image pairs and silhouette images. The minimization of the generalized reprojection error can be cast as an energy minimization problem. First, an energy function is constructed based on the generalized reprojection error. Second, this energy function is minimized using a two-phase optimization procedure. Overall, the proposed TwGREM method is illustrated in Fig. 3
                        .

In this section, we define the stereo reprojection and silhouette reprojection errors and integrate them over all observed images to form a complete energy function.

The stereo reprojection error is defined between image stereo pairs. Let the 3D scene include both the target object and background. The background is assumed to be located at infinity, and ideally its radiance is totally black. Let the surfaces 
                              
                                 S
                                 ¯
                              
                              ⊂
                              
                                 ℝ
                                 3
                              
                            and S
                           ⊂ℝ3 be the ground truth and the reconstructed surface, respectively. Let I
                           
                              i
                           
                           :
                           Ω
                           
                              i
                           
                           ⊂
                           ℝ
                           2
                           →
                           ℝ
                           
                              m
                            be the observed image captured by camera i, where m
                           =1 for grayscale images, and m
                           =3 for color images. Let π
                           
                              i
                           
                           :
                           ℝ
                           3
                           →
                           Ω
                           
                              i
                            be a projection from 3D points x to 2D pixel p. Let π
                           
                              i,S
                           
                           −1
                           :
                           Ω
                           
                              i
                           
                           →
                           ℝ
                           3 be an inverse projection. Let S
                           
                              i
                           
                           =
                           π
                           
                              i,S
                           
                           −1(Ω
                           
                              i
                           ) be the visible part of S with respect to image Ii
                           . As illustrated in Fig. 4(a), for a pair of neighboring images Ii
                            and Ij
                           , the visible surfaces are Si
                            and Sj
                           , respectively, and their shared visible part is S
                           
                              ij
                           
                           =
                           S
                           
                              i
                           
                           ∩
                           S
                           
                              j
                           . For each 3D point x on S, we define a visible image subset Vx
                            in which visual rays connecting camera centers and x are not occluded by other parts of S (Fig. 4(b)).

Assuming Ii
                            is a reference image and Ij
                            is a neighboring image, a predicted image Î
                           
                              i,j,S
                            of Ii
                            is generated by first projecting Ij
                            to S, and then reprojecting onto Ii
                           . Obviously, the valid definition domain of predicted image is π
                           
                              i
                           (S
                           
                              ij
                           )⊂
                           ℝ
                           2, which are the image projections of shared visible surface S
                           
                              ij
                           .

Let δ(p) be the Kronecker delta that returns 1 for pixel p in the region π
                           
                              i
                           (S
                           
                              ij
                           ) and 0 otherwise. Let ρ
                           :
                           Ω
                           
                              i
                           
                           →
                           ℝ measures color consistency of reference image I
                           
                              i
                            and a predicted image Î
                           
                              i,j,S
                            with respect to a square window centered at pixel p. The energy function that measures stereo reprojection error can thus be written as:
                              
                                 (2)
                                 
                                    
                                       E
                                       
                                          i
                                          j
                                       
                                       stereo
                                    
                                    
                                       S
                                    
                                    =
                                    
                                       
                                          ∫
                                          
                                             Ω
                                             i
                                          
                                       
                                       
                                          δ
                                          
                                             p
                                          
                                       
                                    
                                    ρ
                                    
                                       
                                          
                                             I
                                             i
                                          
                                          
                                             p
                                          
                                          ,
                                          
                                             
                                                I
                                                ^
                                             
                                             
                                                i
                                                ,
                                                j
                                                ,
                                                S
                                             
                                          
                                          
                                             p
                                          
                                       
                                    
                                    d
                                    p
                                 
                              
                           where d
                           p is the area measure in the image plane, E
                           
                              ij
                           
                           
                              stereo
                           (S) measures the consistency of reconstructed 3D surface with respect to the observed image in the image pairs. When S
                           
                              m
                              +1 is closer to the ground truth surface than S
                           
                              m
                           , we have the inequality E
                           
                              ij
                           
                           
                              stereo
                           (S
                           
                              m
                              +1)<
                           E
                           
                              ij
                           
                           
                              stereo
                           (S
                           
                              m
                           ).

The silhouette image H
                           
                              i
                           
                           :
                           Ω
                           
                              i
                           
                           →{0,1} is a binary image whose value is assigned to 1 inside and on the silhouette and 0 otherwise. The predicted image Î
                           
                              i
                           
                           :
                           Ω
                           
                              i
                           
                           ⊂
                           ℝ
                           2 is obtained using silhouette reprojection as follows: visual rays emitted from camera center i is back-projected to the scene using 
                              
                                 
                                    π
                                    i
                                 
                                 
                                    −
                                    1
                                 
                              
                           . These visual rays may intersect either S or the background at infinity. If the ray intersects S, S will be colored by using image I
                           
                              i
                           . If the ray intersects the background, radiance of background is black by definition. Then, the projection from the scene to image I
                           
                              i
                            generates the predicted image Î
                           
                              i
                           .
                              
                                 (3)
                                 
                                    
                                       
                                          I
                                          ^
                                       
                                       i
                                    
                                    
                                       p
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            I
                                                            i
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               π
                                                               i
                                                            
                                                            
                                                               −
                                                               1
                                                            
                                                         
                                                         
                                                            p
                                                         
                                                         ∈
                                                         S
                                                      
                                                   
                                                   
                                                      
                                                         
                                                         else
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

The silhouette Ĥ
                           
                              i
                           , a binary image, is defined as:
                              
                                 (4)
                                 
                                    
                                       
                                          H
                                          ^
                                       
                                       i
                                    
                                    
                                       p
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               π
                                                               i
                                                            
                                                            
                                                               −
                                                               1
                                                            
                                                         
                                                         
                                                            p
                                                         
                                                         ∈
                                                         S
                                                      
                                                   
                                                   
                                                      
                                                         
                                                         else
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

Let τ
                           :
                           Ω
                           
                              i
                           
                           →{0,1} be a binary function measuring the difference between the silhouette image H
                           
                              i
                            and predicted silhouette image Ĥ
                           
                              i
                           , 1 for H
                           
                              i
                           (p)≠
                           Ĥ
                           
                              i
                           (p), and 0 for H
                           
                              i
                           (p)=
                           Ĥ
                           
                              i
                           (p). The new energy term that measures silhouette reprojection error for image I
                           
                              i
                            is thus expressed as:
                              
                                 (5)
                                 
                                    
                                       E
                                       i
                                       silhouette
                                    
                                    
                                       S
                                    
                                    =
                                    
                                       
                                          ∫
                                          
                                             Ω
                                             i
                                          
                                       
                                       
                                          τ
                                          
                                             
                                                
                                                   H
                                                   i
                                                
                                                
                                                   p
                                                
                                                ,
                                                
                                                   
                                                      H
                                                      ^
                                                   
                                                   i
                                                
                                                
                                                   p
                                                
                                             
                                          
                                          d
                                          p
                                       
                                    
                                 
                              
                           
                        

Minimizing Eq. (5) forces the surface towards silhouette consistency since it has lower energy when the surface approximates the visual hull. One may notice that Ĥ
                           
                              i
                            can also be obtained by directly projecting all surface points to the image instead of silhouette reprojection. However, such direct projection scheme would be inefficient, since it needs the surface to be uniformly discretized and each image projection of surface points has to be considered. Fortunately, our silhouette reprojection can be very efficiently implemented by rendering the surface using graphics processing unit (GPU), as shown in Section 3.3.

By integrating the energy terms for stereo reprojection error and the silhouette reprojection error on all observed images, the complete objective energy function becomes:
                              
                                 (6)
                                 
                                    E
                                    
                                       S
                                    
                                    =
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      ,
                                                      j
                                                      ≠
                                                      i
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∫
                                                         
                                                            Ω
                                                            i
                                                         
                                                      
                                                      
                                                         δ
                                                         
                                                            p
                                                         
                                                      
                                                   
                                                   ρ
                                                   
                                                      
                                                         
                                                            I
                                                            i
                                                         
                                                         
                                                            p
                                                         
                                                         ,
                                                         
                                                            
                                                               I
                                                               ^
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                               ,
                                                               S
                                                            
                                                         
                                                         
                                                            p
                                                         
                                                      
                                                   
                                                   d
                                                   p
                                                   +
                                                   λ
                                                   
                                                      
                                                         ∫
                                                         
                                                            Ω
                                                            i
                                                         
                                                      
                                                      
                                                         τ
                                                         
                                                            
                                                               
                                                                  H
                                                                  i
                                                               
                                                               
                                                                  p
                                                               
                                                               ,
                                                               
                                                                  
                                                                     H
                                                                     ^
                                                                  
                                                                  i
                                                               
                                                               
                                                                  p
                                                               
                                                            
                                                         
                                                         d
                                                         p
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where λ is a tradeoff parameter to adjust the weight of the silhouette reprojection error. To simplify Eq. (6), we define Ψ
                           1 as all the image domains for stereo reprojection error, Ψ
                           2 as all the image domains for the silhouette reprojection error, 
                              
                                 ρ
                                 ˜
                              
                              
                                 p
                              
                              =
                              δ
                              
                                 p
                              
                              ρ
                              
                                 
                                    
                                       I
                                       i
                                    
                                    
                                       p
                                    
                                    ,
                                    
                                       
                                          I
                                          ^
                                       
                                       
                                          i
                                          ,
                                          j
                                          ,
                                          S
                                       
                                    
                                    
                                       p
                                    
                                 
                              
                           , and 
                              
                                 τ
                                 ˜
                              
                              
                                 p
                              
                              =
                              τ
                              
                                 
                                    
                                       H
                                       i
                                    
                                    
                                       p
                                    
                                    ,
                                    
                                       
                                          H
                                          ^
                                       
                                       i
                                    
                                    
                                       p
                                    
                                 
                              
                           . To ensure smoothness of the surface, a regularization term is added as an integral of surface area unit dσ. This regularization term prefers a smooth and compact surface, and is effective in improving the robustness against noises and outliers. The proposed energy function is formulated as:
                              
                                 (7)
                                 
                                    E
                                    
                                       S
                                    
                                    =
                                    
                                       
                                          ∫
                                          
                                             Ψ
                                             1
                                          
                                       
                                       
                                          
                                             ρ
                                             ˜
                                          
                                          
                                             p
                                          
                                          d
                                          p
                                       
                                    
                                    +
                                    λ
                                    
                                       
                                          ∫
                                          
                                             Ψ
                                             2
                                          
                                       
                                       
                                          
                                             τ
                                             ˜
                                          
                                          
                                             p
                                          
                                          d
                                          p
                                          +
                                          κ
                                       
                                    
                                    
                                       
                                          ∫
                                          S
                                       
                                       
                                          d
                                          σ
                                       
                                    
                                 
                              
                           where κ is a regularization parameter.

Intuitively, the optimal surface has the maximum of stereo and silhouette consistencies and corresponds to the minimum of energy defined in Eq. (7). However, the first two energy terms in Eq. (7) are integrals over the image domain and the third energy term is an integral over the surface. So its optimization is difficult and the process is easily trapped in a local minimum. It is thus desirable to define an energy criterion in the 3D domain, where extensive study has been conducted to solve the optimization problem.

We proposed a two-phase coarse-to-fine method to optimize the energy function in Eq. (7). First, we represent the surface using a characteristic function and reformulate (Eq. (7)) into a new function defined in the 3D space domain. The new function has a form of TVg
                        +L1 norm [24]. TVg is a weighted total variation, where weights represent stereo consistency. The total variation (TV) is well known for its edge-preserving smoothness effect in image restoration. TVg has the smoothness effect like TV regularization and its weights are set based on whether surface edges should be smoothed or preserved. Ideally, 3D points on the true 3D surface have minimal reprojection errors, and thus TVg prefers to preserve these points because that does not increase the energy of TVg. In summary, TVg can preserve the points on the true 3D surface while suppressing noises. The second term is a constraint for silhouette consistency, where L1 is well known for its robust performance against outliers, and thus is adopted to robustly measure the silhouette reprojection error. Attributed to the recent development of the convex relaxation technique, TVg
                        +L1 can be solved using variable splitting and Chambolle projection. To further improve the quality of the result, we refine the optimized surface based on triangle mesh to obtain a high-quality estimate. We assume that all the silhouette images are available via image segmentation algorithm [33], and thus the visual hull can be used as the initial surface for this two phase optimization.

For a N
                              
                                 x
                              
                              ×
                              N
                              
                                 y
                              
                              ×
                              N
                              
                                 z
                               bounding box B, φ
                              :
                              ℝ
                              3
                              →{0,1} be a characteristic function with value, 1 for the 3D points inside/on the visual hull and 0 otherwise. Let u
                              :
                              ℝ
                              3
                              →{0,1} be another characteristic function, which equals 1 for the 3D point inside/on the surface and 0 otherwise.

For a 3D point x, its stereo reprojection error is the summation of stereo reprojection errors over all the image projections in visible image subset:
                                 
                                    (8)
                                    
                                       g
                                       
                                          x
                                       
                                       =
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      ,
                                                      j
                                                      ≠
                                                      i
                                                   
                                                
                                                
                                                   
                                                      ρ
                                                      ˜
                                                   
                                                   
                                                      
                                                         
                                                            π
                                                            i
                                                         
                                                         
                                                            x
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      ,
                                                      j
                                                      ≠
                                                      i
                                                   
                                                
                                                
                                                   δ
                                                   
                                                      
                                                         
                                                            π
                                                            i
                                                         
                                                         
                                                            x
                                                         
                                                      
                                                   
                                                   ρ
                                                   
                                                      
                                                         
                                                            I
                                                            i
                                                         
                                                         
                                                            
                                                               
                                                                  π
                                                                  i
                                                               
                                                               
                                                                  x
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               I
                                                               ^
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                               ,
                                                               S
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  π
                                                                  i
                                                               
                                                               
                                                                  x
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           

Similarly, the silhouette reprojection error of x is:
                                 
                                    (9)
                                    
                                       f
                                       
                                          x
                                       
                                       =
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             
                                                τ
                                                ˜
                                             
                                             
                                                
                                                   
                                                      π
                                                      i
                                                   
                                                   
                                                      x
                                                   
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             τ
                                             
                                                
                                                   
                                                      H
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            π
                                                            i
                                                         
                                                         
                                                            x
                                                         
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         H
                                                         ^
                                                      
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            π
                                                            i
                                                         
                                                         
                                                            x
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           

Based on Eqs. (8) and (9), and the fact that 
                                 d
                                 p
                                 =
                                 −
                                 
                                    
                                       x
                                       ⋅
                                       n
                                    
                                    
                                       
                                          
                                             x
                                             z
                                          
                                       
                                       3
                                    
                                 
                                 d
                                 x
                               
                              [28], Eq. (7), which is defined in image domain, can be rewritten as an integral over the volume:
                                 
                                    (10)
                                    
                                       E
                                       
                                          u
                                       
                                       =
                                       
                                          
                                             ∫
                                             
                                                ℝ
                                                3
                                             
                                          
                                          
                                             −
                                             
                                                
                                                   x
                                                   ⋅
                                                   n
                                                
                                                
                                                   
                                                      
                                                         x
                                                         z
                                                      
                                                   
                                                   3
                                                
                                             
                                          
                                       
                                       g
                                       
                                          x
                                       
                                       
                                          
                                             ∇
                                             u
                                          
                                       
                                       d
                                       x
                                       +
                                       λ
                                       
                                          
                                             ∫
                                             
                                                ℝ
                                                3
                                             
                                          
                                          
                                             −
                                             
                                                
                                                   x
                                                   ⋅
                                                   n
                                                
                                                
                                                   
                                                      
                                                         x
                                                         z
                                                      
                                                   
                                                   3
                                                
                                             
                                          
                                       
                                       f
                                       
                                          x
                                       
                                       
                                          
                                             
                                                u
                                                
                                                   x
                                                
                                                −
                                                φ
                                                
                                                   x
                                                
                                             
                                          
                                          1
                                       
                                       d
                                       x
                                    
                                 
                              where 
                                 
                                    
                                       ∇
                                       u
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                D
                                                
                                                   x
                                                   x
                                                
                                             
                                          
                                          2
                                       
                                       +
                                       
                                          
                                             
                                                D
                                                
                                                   x
                                                   y
                                                
                                             
                                          
                                          2
                                       
                                       +
                                       
                                          
                                             
                                                D
                                                
                                                   x
                                                   z
                                                
                                             
                                          
                                          2
                                       
                                    
                                 
                              , and x
                              
                                 x
                              , x
                              
                                 y
                              , x
                              
                                 z
                               are three components of 3D point x in the X, Y and Z axes, D is the gradient operator, n is the unit normal of x, and ‖·‖1 is L1 norm. Let 
                                 
                                    g
                                    ˜
                                 
                                 
                                    x
                                    n
                                 
                                 =
                                 −
                                 
                                    
                                       x
                                       ⋅
                                       n
                                    
                                    
                                       
                                          
                                             x
                                             z
                                          
                                       
                                       3
                                    
                                 
                                 g
                                 
                                    x
                                 
                              , and 
                                 
                                    f
                                    ˜
                                 
                                 
                                    x
                                    n
                                 
                                 =
                                 −
                                 
                                    
                                       x
                                       ⋅
                                       n
                                    
                                    
                                       
                                          
                                             x
                                             z
                                          
                                       
                                       3
                                    
                                 
                                 f
                                 
                                    x
                                 
                              . The minimization of E(u) can be represented as:
                                 
                                    (11)
                                    
                                       
                                          u
                                          b
                                       
                                       =
                                       
                                          min
                                          
                                             u
                                             ∈
                                             
                                                0
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∫
                                                            
                                                               ℝ
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               g
                                                               ˜
                                                            
                                                            
                                                               x
                                                               n
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ∇
                                                            u
                                                         
                                                      
                                                      d
                                                      x
                                                   
                                                   ⏟
                                                
                                                
                                                   T
                                                   
                                                      V
                                                      g
                                                   
                                                
                                             
                                             +
                                             
                                                
                                                   
                                                      λ
                                                      
                                                         
                                                            ∫
                                                            
                                                               ℝ
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               f
                                                               ˜
                                                            
                                                            
                                                               x
                                                               n
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               u
                                                               
                                                                  x
                                                               
                                                               −
                                                               φ
                                                               
                                                                  x
                                                               
                                                            
                                                         
                                                         1
                                                      
                                                      d
                                                      x
                                                   
                                                   ⏟
                                                
                                                
                                                   L
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Eq. (11) has a form of TVg
                              +L1. Since the TV model inherently enforces the regularization, an explicit smoothness term is unnecessary.

The energy criterion E(u) is a non-convex function because the characteristic function u is defined in a non-convex set, i.e., binary set. The optimization for non-convex function is easily trapped in a local minimum. The principle of convex relaxation is to relax u from a non-convex set {0,1} to a continuous interval [0,1] which is a convex set, and thus the corresponding function 
                                 
                                    E
                                    ˜
                                 
                              (u) becomes a convex function:
                                 
                                    (12)
                                    
                                       
                                          u
                                          c
                                       
                                       =
                                       
                                          min
                                          
                                             u
                                             ∈
                                             
                                                0
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ∫
                                                   
                                                      ℝ
                                                      3
                                                   
                                                
                                                
                                                   
                                                      g
                                                      ˜
                                                   
                                                   
                                                      x
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   ∇
                                                   u
                                                
                                             
                                             d
                                             x
                                             +
                                             λ
                                             
                                                
                                                   ∫
                                                   
                                                      ℝ
                                                      3
                                                   
                                                
                                                
                                                   
                                                      f
                                                      ˜
                                                   
                                                   
                                                      x
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      u
                                                      
                                                         x
                                                      
                                                      −
                                                      φ
                                                      
                                                         x
                                                      
                                                   
                                                
                                                1
                                             
                                             d
                                             x
                                          
                                       
                                       .
                                    
                                 
                              
                           

Because of the non-smoothness property of |∇u|, direct optimization of 
                                 
                                    E
                                    ˜
                                 
                              (u) is not trivial. According to the Chambolle projection method [24,32], 
                                 
                                    E
                                    ˜
                                 
                              (u) can be reformulated with an auxiliary variable v by using variable splitting approach as:
                                 
                                    (13)
                                    
                                       
                                          E
                                          ˜
                                       
                                       
                                          u
                                          v
                                       
                                       =
                                       
                                          
                                             ∫
                                             
                                                ℝ
                                                3
                                             
                                          
                                          
                                             
                                                g
                                                ˜
                                             
                                             
                                                x
                                                n
                                             
                                          
                                       
                                       
                                          
                                             ∇
                                             u
                                          
                                       
                                       d
                                       x
                                       +
                                       
                                          1
                                          
                                             2
                                             θ
                                          
                                       
                                       
                                          
                                             ∫
                                             
                                                ℝ
                                                3
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      u
                                                      +
                                                      v
                                                      −
                                                      φ
                                                   
                                                
                                                2
                                             
                                          
                                       
                                       d
                                       x
                                       +
                                       λ
                                       
                                          
                                             ∫
                                             
                                                ℝ
                                                3
                                             
                                          
                                          
                                             
                                                f
                                                ˜
                                             
                                             
                                                x
                                                n
                                             
                                          
                                       
                                       
                                          
                                             v
                                          
                                          1
                                       
                                       d
                                       x
                                    
                                 
                              where the parameter θ(θ
                              >0) is set to be a small value, and so that 1/2θ is sufficiently large in order to constrain φ close to u
                              +
                              v. Since 
                                 
                                    E
                                    ˜
                                 
                              (u,
                              v) is convex, its minimizer can be computed by minimizing 
                                 
                                    E
                                    ˜
                                 
                              (u,
                              v) with respect to u and v separately. The process is iteratively performed until convergence. Thus, the following minimization procedure is utilized:
                                 
                                    (1)
                                    Searching for optimal u when v is fixed by:
                                          
                                             (14)
                                             
                                                
                                                   min
                                                   u
                                                
                                                
                                                   
                                                      
                                                         
                                                            ∫
                                                            
                                                               ℝ
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               g
                                                               ˜
                                                            
                                                            
                                                               x
                                                               n
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ∇
                                                            u
                                                         
                                                      
                                                      d
                                                      x
                                                      +
                                                      
                                                         1
                                                         
                                                            2
                                                            θ
                                                         
                                                      
                                                      
                                                         
                                                            ∫
                                                            
                                                               ℝ
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     u
                                                                     +
                                                                     v
                                                                     −
                                                                     φ
                                                                  
                                                               
                                                               2
                                                            
                                                         
                                                      
                                                      d
                                                      x
                                                   
                                                
                                             
                                          
                                       
                                    

Searching for optimal v when u is fixed by:
                                          
                                             (15)
                                             
                                                
                                                   min
                                                   v
                                                
                                                
                                                   
                                                      
                                                         1
                                                         
                                                            2
                                                            θ
                                                         
                                                      
                                                      
                                                         
                                                            ∫
                                                            
                                                               ℝ
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     u
                                                                     +
                                                                     v
                                                                     −
                                                                     φ
                                                                  
                                                               
                                                               2
                                                            
                                                         
                                                      
                                                      d
                                                      x
                                                      +
                                                      λ
                                                      
                                                         
                                                            ∫
                                                            
                                                               ℝ
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               f
                                                               ˜
                                                            
                                                            
                                                               x
                                                               n
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            v
                                                         
                                                         1
                                                      
                                                      d
                                                      x
                                                   
                                                
                                                .
                                             
                                          
                                       
                                    

Eq. (14) can be optimized using Chambolle projection with convergence rate O(1/n
                              2), and Eq. (15) can be solved point-wise for v. After convex optimization on relaxed convex set, the output u
                              
                                 c
                               is projected to binary set {0,1}, which can be implemented by using a constant threshold μ
                              ∈(0,1):
                                 
                                    (16)
                                    
                                       
                                          u
                                          b
                                       
                                       
                                          x
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               u
                                                               c
                                                            
                                                            
                                                               x
                                                            
                                                            >
                                                            μ
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               u
                                                               c
                                                            
                                                            
                                                               x
                                                            
                                                            ≤
                                                            μ
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where u
                              
                                 b
                               approximates a minimizer of non-convex energy function in Eq. (11) and labels each x
                              ∈
                              B, 1 for a point inside surface, 0 for a point outside surface. The calculations of 
                                 
                                    g
                                    ˜
                                 
                               and 
                                 
                                    f
                                    ˜
                                 
                               depends on the consistency measure of observed and predicted images via reconstructed surface S, respectively, so they should be updated after generating the newly reconstructed surface. After 
                                 
                                    g
                                    ˜
                                 
                               and 
                                 
                                    f
                                    ˜
                                 
                               are updated, the above optimization is again performed to update the reconstructed surface. Overall, we alternatively update 
                                 
                                    g
                                    ˜
                                 
                              , 
                                 
                                    f
                                    ˜
                                 
                               and S until the optimization converges.

In order to generate predicted images, the stereo reprojection and silhouette reprojection are used as shown in Fig. 1. To implement these projection operations, a triangle mesh is extracted from the zero level set of u
                              
                                 b
                               to represent the reconstructed surface. In our study, we use an efficient GPU-based marching cubes algorithm [34] to extract the triangle mesh. Then, these projection operations are performed efficiently by rendering the triangle mesh using projective texture mapping on the GPU [35]. However, for x
                              ∉
                              S, we cannot use this method to generate the stereo predicted image. Instead, a small planar patch P is generated which intersects at x. The normal and visible image subset of patch P is set the same to its nearest point on S. Then, for any image pairs in visible image subset, we set one as the reference image. The stereo predicted image for a small patch in the reference image is generated by projecting another image to 3D patch P and then to the reference image. In the implementation, we update the 
                                 
                                    g
                                    ˜
                                 
                               and 
                                 
                                    f
                                    ˜
                                 
                               in each 500 and 10 iterations, respectively.

The computational procedure of first phase optimization of the TwGREM is provided as follows:
                                 Algorithm 1
                                 First phase optimization of TwGREM.
                                       
                                          
                                             Input: a set of observed images and silhouette images.


                                             Output: the reconstructed surface.


                                             Initialization: u
                                             ←
                                             φ, n, 
                                                
                                                   g
                                                   ˜
                                                
                                              and 
                                                
                                                   f
                                                   ˜
                                                
                                              are calculated according to the visual hull.
                                                
                                                   
                                                      Do
                                                      
                                                         
                                                            1.
                                                            Minimize Eq. (11),according to Eqs. (14)–(16)
                                                            

Extract a triangle mesh to represent reconstructed surface using GPU-based marching cubes algorithm.

Generate predicted images according to reconstructed surface, and update 
                                                                  
                                                                     g
                                                                     ˜
                                                                  
                                                                and 
                                                                  
                                                                     f
                                                                     ˜
                                                                  
                                                               .


                                                               While |E(S
                                                               
                                                                  m
                                                                  +1)−
                                                               E(S
                                                               
                                                                  m
                                                               )|<
                                                               ε, where ε is a small positive threshold.

For the first phase optimization, in order to generate a high-resolution and high-quality model, it is necessary to use high-resolution volumetric grids, which lead to large memory requirements. In contrast, the triangle mesh based explicit representation can provide a high-resolution estimate with fine details and low memory requirements, since only the parameterized surface is stored in the memory.

Let S be parameterized to a triangle mesh M, with a set of indexes 
                              V
                              =
                              
                                 
                                    
                                       v
                                       1
                                    
                                    ,
                                    
                                       v
                                       2
                                    
                                    ,
                                    …
                                    
                                       v
                                       n
                                    
                                 
                              
                            representing n vertices, and a set of triangular faces 
                              F
                           
                           ={f
                           1,
                           f
                           2,…
                           f
                           
                              n
                           } connecting them, 
                              
                                 f
                                 i
                              
                              ∈
                              V
                              ×
                              V
                              ×
                              V
                           . The geometric embedding of a triangle mesh into ℝ
                           3 is specified by associating a 3D position 
                              
                                 x
                                 
                                    v
                                    i
                                 
                              
                            to each vertex 
                              
                                 v
                                 i
                              
                              ∈
                              V
                           . The evolution equation for surface refinement on the triangle mesh is given as
                              1
                           
                           
                              1
                              We have put the details of deriving evolution equation in Appendix A of the paper.
                           :
                              
                                 (17)
                                 
                                    
                                       
                                          ∂
                                          M
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                    
                                       
                                          x
                                          
                                             v
                                             i
                                          
                                       
                                    
                                    =
                                    −
                                    κ
                                    
                                       ω
                                       
                                          v
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          
                                             μ
                                             
                                                v
                                                i
                                             
                                             min
                                          
                                          +
                                          λ
                                          
                                             β
                                             
                                                v
                                                i
                                             
                                          
                                       
                                    
                                    
                                       n
                                       
                                          v
                                          i
                                       
                                    
                                 
                              
                           with
                              
                                 (18)
                                 
                                    
                                       μ
                                       
                                          v
                                          i
                                       
                                       min
                                    
                                    =
                                    
                                       
                                          arg
                                          min
                                       
                                       μ
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                
                                                   v
                                                   j
                                                
                                                ∈
                                                N
                                                
                                                   
                                                      v
                                                      i
                                                   
                                                
                                             
                                          
                                          
                                             
                                                W
                                                
                                                   v
                                                   j
                                                
                                             
                                             
                                                
                                                   
                                                      ξ
                                                      
                                                         v
                                                         j
                                                      
                                                   
                                                   −
                                                   μ
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (19)
                                 
                                    
                                       W
                                       
                                          v
                                          j
                                       
                                    
                                    =
                                    exp
                                    
                                       
                                          
                                             −
                                             
                                                
                                                   
                                                      
                                                         x
                                                         
                                                            v
                                                            i
                                                         
                                                      
                                                      −
                                                      
                                                         x
                                                         
                                                            v
                                                            j
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                          
                                          γ
                                       
                                    
                                 
                              
                           where 
                              
                                 v
                                 j
                              
                              ∈
                              N
                              
                                 
                                    v
                                    i
                                 
                              
                            is a vertex in the neighborhood of vertex v
                           
                              i
                            on the triangle mesh M, 
                              
                                 n
                                 
                                    v
                                    i
                                 
                              
                            is the surface normal of vertex v
                           
                              i
                           , 
                              
                                 ξ
                                 
                                    v
                                    i
                                 
                              
                            is the derivative of the stereo reprojection error for vertex v
                           
                              i
                           , 
                              
                                 μ
                                 
                                    v
                                    i
                                 
                                 min
                              
                            minimizes the weighted sum of the differences over 
                              
                                 ξ
                                 
                                    v
                                    i
                                 
                              
                            within the neighborhood of vertex v
                           
                              i
                           , 
                              
                                 W
                                 
                                    v
                                    j
                                 
                              
                            is the weight for each vertex 
                              
                                 v
                                 j
                              
                              ∈
                              N
                              
                                 
                                    v
                                    i
                                 
                              
                           , γ is the parameter to adjust the influence of weight, 
                              
                                 ω
                                 
                                    v
                                    i
                                 
                              
                            is a discrete Laplace–Beltrami operator for surface regularization, and 
                              
                                 β
                                 
                                    v
                                    i
                                 
                              
                            is the term considering the silhouette reprojection error. Eq. (18) can be easily and exactly solved by weighted median filtering [36]. In order to generate predicted images for the calculation of stereo and silhouette reprojection error, the triangle mesh M is first rendered by the stereo reprojection operation and then by the silhouette reprojection operation using projective texture mapping on GPU. Because we do not consider the points outside the surface, the patch-based projection operation for stereo predicted image (as illustrated in first phase optimization) do not need to be performed. Thus, the total process for generating predicted images is very efficient. The derivative of stereo reprojection error 
                           
                              
                                 ξ
                                 
                                    v
                                    i
                                 
                              
                            is calculated according to [30,31].

The evolution of the triangle mesh is conducted based on Eq. (17) by using gradient decent with a small time step t. The advantages of Eq. (17) are: 1) the integration of a silhouette term that penalizes the vertex which violates the constraint of the silhouette consistency; 2) the enforcement of a smoother surface by considering the entire vertexes in the neighborhood of vertex v
                           
                              i
                           , 3) the robustness of L1 norm to noise and outliers. In practice, the neighborhood 
                              N
                              
                                 
                                    v
                                    i
                                 
                              
                            can be set as a first or second order ring of the triangular faces around the vertex in the triangle mesh.

The computational procedure of the second phase optimization of the TwGREM is listed below:
                              Algorithm 2
                              Second phase optimization of TwGREM.
                                    
                                       
                                          Input: a set of observed images and silhouette images, an initial surface from estimate of first phase optimization.


                                          Output: the reconstructed surface.


                                          Initialization: 
                                             
                                                n
                                                
                                                   v
                                                   i
                                                
                                             
                                          , 
                                             
                                                μ
                                                
                                                   v
                                                   i
                                                
                                                min
                                             
                                           and 
                                             
                                                β
                                                
                                                   v
                                                   i
                                                
                                             
                                           are calculated according to initial surface.
                                             
                                                
                                                   Do
                                                

Evolve the triangle mesh with a small time step t according to Eqs. (17)–(19).

Generate predicted images according to reconstructed surface, and update 
                                                      
                                                         n
                                                         
                                                            v
                                                            i
                                                         
                                                      
                                                   , 
                                                      
                                                         μ
                                                         
                                                            v
                                                            i
                                                         
                                                         min
                                                      
                                                    and 
                                                      
                                                         β
                                                         
                                                            v
                                                            i
                                                         
                                                      
                                                    for each vertex of triangle mesh.


                                          While |E(S
                                          
                                             m
                                             +1)−
                                          E(S
                                          
                                             m
                                          )|<
                                          ε, where ε is a small positive threshold.

In the first phase optimization, the convex relaxation of TVg
                           +L1 energy function is adopted. With abuse of the notation, denote the size of the volume, i.e. the number of the volumetric grids, by N
                           =
                           N
                           
                              x
                           
                           ×
                           N
                           
                              y
                           
                           ×
                           N
                           
                              z
                           , the number of input images by M. Due to capability to handle the illumination discrepancy problem, the Normalized Cross Correlation (NCC) was used to measure the stereo reprojection error. Suppose that the computation of NCC is proportional to the window size w, and each voxel is visible on V image pairs in average. As illustrated in Algorithm-1, there are at most three steps per iteration:
                              
                                 (1)
                                 
                                    Minimization of Eq. 
                                    
                                       (11)
                                    : This step involves three operations, i.e., Chambolle projection, soft-thresholding, and projection to binary set. The complexity of each operation are O(N), and thus the total complexity of this step is O(N).


                                    Marching cubes: In the worst-case, the complexity of marching cubes algorithm is O(N) for iso-surface extraction. Note that we adopt a GPU-based parallel implementation [34] in our experiments, which makes the running time of this step is negligible while compared with the other steps.


                                    Generation of predicted images: The main complexity of this step is from the computation of silhouette reprojection error and stereo reprojection error, which are O(NM) and O(NVMw
                                    2), respectively. It should be noted that, in our implementation, stereo reprojection error is updated after each C
                                    
                                       s
                                    
                                    =500 iterations, and silhouette reprojection error is updated after each C
                                    
                                       h
                                    
                                    =10 iterations.

Denote the number of iterations of Algorithm-1 by n
                           1. Taking these three steps into account, the overall complexity of Algorithm 1 is O(n
                           1(N
                           +
                           NM/C
                           
                              h
                           
                           +
                           NVMw
                           2/C
                           
                              s
                           )).

In the second phase optimization, a triangle mesh based surface evolution algorithm is adopted to refine the reconstructed model. Denote the size of triangle mesh by T, i.e. the number of vertices, and the resolution of images by R. Suppose that each vertex on the triangle mesh is visible on U image pairs in average. As illustrated in Algorithm-2, there are two steps per iteration:
                              
                                 (1)
                                 
                                    Evolve the triangle mesh with a small time step: This step involves two operations, i.e., deforming each vertex of triangle mesh to a new position according to a speed v and a small time step t, and smoothing the triangle mesh using discrete Laplace–Beltrami operator. The complexity of each operation are O(T), and thus the total complexity of this step is O(T).


                                    Generation of predicted images: The main complexity of this step is from the computation of silhouette reprojection error and stereo reprojection error, which are O(TM) and O(TUMR), respectively. In particular, the calculation of NCC for the stereo reprojection error can be independent to window size w by using image integral technology.

Denote the number of iterations of Algorithm-2 by n
                           2. Taking these two steps into account, the overall complexity of Algorithm-2 is O(n
                           2(TM
                           + TUMR)).

For the image data used in the experiments, n1 is typically set to 2000 for first phase optimization and n2 is typically set to 200 for the second phase optimization.

@&#EXPERIMENTAL RESULTS@&#

To evaluate the performance of the TwGREM method, we implemented our algorithm using C++ with OpenGL, OpenCV and CGAL libraries and tested this method using the Middlebury multiview stereo benchmark [5] and several other public datasets.

For each test data, Table 1
                      lists the number of images, image resolution and running times of the algorithm. The window size for calculating NCC was set to 5×5pixels. The visibility of 3D points at the surface was determined using the Z-buffer of OpenGL. The λ is used to balance the weight of stereo and silhouette reprojection. In all experiments in the paper, we have fixed the λ to 0.4 in the first phase optimization and fixed it to 0.2×
                     l
                     
                        e
                      for the second phase optimization, where l
                     
                        e
                      is the average edge length of triangle mesh. The κ is used to control the weight of smoothness term. Because the TV norm has implicit smoothness effect, the explicit smoothness term is not necessary for the first phase optimization. And in the second phase optimization, the value of κ is set to 0.2 for all the datasets in the experiments. For the first phase optimization, the resolution of volumetric grids was first set to 64×64×64 and then increased to 128×128×128. The output of optimization on the low resolution setting was used as initial points for the optimization on the high resolution setting. The second phase optimization was performed on the resulting surface from the first phase. The running times of TwGREM for these datasets on a laptop computer with Intel Core i7 2.40GHz CPU are between 40 and 150min depending on the size of datasets and the image resolution.

The Middlebury benchmark consists of two objects: a dinosaur and a temple, as shown in Fig. 5
                        . The dinosaur dataset is characterized by smooth and low texture surfaces while the temple dataset composes of high texture surfaces. According to the number of images sampled around the object, the standard benchmark datasets can be divided into sparse ring, ring, and full datasets. We tested our algorithm on the dino sparse ring, the dino ring, the temple sparse ring, and the temple ring datasets, respectively. The ground truth data of the two objects were obtained using a high-accuracy laser scanner.

The intermediate and final results for dino sparse ring are illustrated in Fig. 6
                        . The visual hull was set as the initial point (Fig. 6(a)). The resulting surface from the first phase optimization with resolution 64×64×64 is shown in Fig. 6(b). It was a coarse approximation of the object's actual surface. Further optimization on the 128×128×128 volumetric grids generated a more accurate result as shown in Fig. 6(c). The resulting surface was further refined by the second phase optimization on triangle mesh as shown in Fig. 6(d). The same intermediate and final results for the temple sparse ring dataset are illustrated in Fig. 7
                        .

For dino ring and temple ring datasets, the reconstruction procedure is similar to that for dino sparse ring and temple sparse ring. Due to limited space of the paper, only final results for these two datasets are shown in Fig. 8
                        .

The proposed method was also quantitatively evaluated based on two performance indicators: accuracy and completeness. These two indicators are used to describe how close the reconstructed surface S is to the ground truth of surface, and how much of the ground truth is modeled by S, respectively. The accuracy threshold was set to 1.25mm and completeness threshold was set to 90% in these evaluations. The accuracy and completeness of our results for temple ring, dino ring, temple sparse ring, and dino sparse ring data sets are listed in Table 2
                        . All these evaluation results are available publicly on the Middlebury evaluation page [37]. We also compared the proposed method with a variety of methods
                           2
                        
                        
                           2
                           These methods that we used in the experiment were reported in the evaluation website by the time of this paper submission.
                         listed in evaluation page. Due to the limited space, we only show the results for dino sparse ring and dino ring in Fig. 9
                        . The good performance of dinosaur dataset demonstrated our method is suitable for objects with low and smooth textures. Furthermore, we selected stereo-silhouette based methods in the evaluation list and compared them with our method as shown in Table 2. Since some reconstruction results were not reported by authors on certain datasets, we labeled them as ‘×’. From the comparison results, it can be seen that the proposed method achieves good performance on accuracy and completeness among all the datasets. For dino sparse ring and temple sparse ring datasets, the proposed method outperforms other methods. As shown in Table 2, more observed images can generate more accurate reconstruction. Thus, the accurate 3D reconstruction using dino sparse ring and temple sparse ring dataset are more challenging. The high ranks of our method on the dino sparse ring and temple sparse ring datasets indicate that this method is very competitive in 3D reconstruction using datasets with sparsely sampled viewpoints.

To demonstrate the influence of the silhouette reprojection error, we removed the energy term of silhouette reprojection error from the energy function for the two phases of the optimization by setting λ to 0, respectively. For the first phase optimization, we assumed that the initial surface was the visual hull. As shown in Fig. 10
                        , with the increase of iteration steps, the surface was obviously over-smoothed. For the second phase optimization, we assumed that a good initial surface had already been obtained from the first phase optimization. The reconstructed results were compared with the results which includes energy term of silhouette reprojection error in the optimization procedure, as shown in Fig. 11
                        .

To further evaluate the proposed method, we applied our algorithm to several other public datasets: twins 
                        [25], Beethoven 
                        [38], bunny 
                        [38], bird 
                        [38] and captain 
                        [20]. The final experimental results with these datasets are illustrated in Fig. 12
                        . Groundtruths for these datasets were not available, and thus qualitative evaluation of appearance of the reconstruction results was adopted in the experiments.

Each of the twins and captain datasets include 36 high resolution images of a compact, smooth and low textured object which was captured by using a fixed camera and a turntable where the object was posed. The experimental results in Fig. 12(a) and (b) indicate that the depth concavity and small protrusion on the objects have been well recovered. The Beethoven, bunny and bird datasets include 35, 36, 21 images, respectively. They were captured by a set of synchronized cameras. The Beethoven dataset presents textureless surface, and the bunny dataset presents homogenous/smooth surface. The results on these two datasets are shown in Fig. 12(c–d). The proposed method integrates surface regularization in the energy function, and thus is able to handle noise and outliers effectively, even for the textureless cases. The bird dataset includes only 21 images of highly textured images (Fig. 12(e)). The small protrusion such as the wings, claws and head of bird model affect the border of predicted silhouette images, and thus the silhouette reprojection error prevents them from being over-smoothed. On the contrary, some details of feathers were not kept. The reason may be that these small details do not affect the consistency of silhouette thus minimizing the silhouette reprojection error cannot prevent them from being smoothed.

There are some limitations of the TwGREM. First, the main assumption of TwGREM is that silhouettes have been accurately segmented. However, for some scenes, such as outdoor scenes, it is probably difficult to accurately segment silhouettes based on images. The inaccuracy of silhouettes will affect the quality of reconstruction. In the future, we will put the algorithms of silhouette segmentation and 3D reconstruction into one unified framework. In other words, we use the reconstructed 3D model to guide the segmentation of silhouettes and then use the refined silhouettes for better 3D reconstruction. Second, the main time consumption of the algorithm is on the second phase optimization. To refine a high-resolution model, the each evolution step should be small and thus convergence of algorithm is slow. For dino ring, TwGREM takes 20min on the first phase optimization and takes about 70min on the second phase optimization. Because the computation step for each vertex is independent, it is feasible to perform the computation of each vertex on GPU kernels using CUDA parallel strategy.

@&#CONCLUSION@&#

In this paper, we proposed a two-phase optimization method for generalized reprojection error minimization (TwGREM). First, a new energy function is formulated based on minimizing the generalized reprojection error, which integrates both stereo and silhouette cues. This function can be effectively minimized using a convex relaxation of the model on 3D volumetric grids, and then refined using surface evolution on a triangle mesh. TwGREM can reconstruct regions with concavities and protrusions, and is robust against initialization. When compared with the state-of-the-art methods, TwGREM is especially competitive in data with smooth textures and sparsely sampled views. Moreover, due to both implicit and explicit representations of surface are used in the optimization procedure, TwGREM is able to produce high-resolution and high-quality 3D reconstruction effectively, adaptive to surface topology and suitable for GPU implementation with a low memory requirements.

@&#ACKNOWLEDGMENTS@&#

The authors thank Dr. Daniel Scharstein for evaluating our results on Middlebury datasets, Dr. Carlos Hernández and Dr. Peng Song for providing us the twins and the captain datasets, respectively. This work was supported by National Institutes of Health Grant No. R01CA165255 of the United States, and the National Natural Science Foundation of China under Grant Nos. 61173086 and 61271093.

The surface estimated from the first phase optimization of TwGREM is still a coarse approximation of the true surface of 3D object. This is because of the limitation of volumetric method. It has large memory requirements for the high-quality surface reconstruction. On the contrary, mesh-based method can reconstruct the coarse surface in a high-quality with much less memory requirements, and is ideal for surface refinement. The purpose of our evolution equation is to iteratively deform the current surface to the true 3D surface. The deformation of surface can be implemented by minimizing the generalized reprojection errors in gradient decent manner. In this process, we first estimate the derivative of the energy function (Eq. (7)) with respect to 3D surface point x:
                           
                              
                                 
                                    
                                       ∂
                                       E
                                    
                                    
                                       ∂
                                       x
                                    
                                 
                                 =
                                 
                                    
                                       ∂
                                       
                                          
                                             
                                                ∫
                                                
                                                   Ψ
                                                   1
                                                
                                             
                                             
                                                
                                                   ρ
                                                   ˜
                                                
                                                
                                                   p
                                                
                                                d
                                                p
                                             
                                          
                                       
                                    
                                    
                                       ∂
                                       x
                                    
                                 
                                 +
                                 λ
                                 
                                    
                                       ∂
                                       
                                          
                                             
                                                ∫
                                                
                                                   Ψ
                                                   2
                                                
                                             
                                             
                                                
                                                   τ
                                                   ˜
                                                
                                                
                                                   p
                                                
                                                d
                                                p
                                             
                                          
                                       
                                    
                                    
                                       ∂
                                       x
                                    
                                 
                                 +
                                 κ
                                 
                                    
                                       ∂
                                       
                                          
                                             
                                                ∫
                                                S
                                             
                                             
                                                d
                                                σ
                                             
                                          
                                       
                                    
                                    
                                       ∂
                                       x
                                    
                                 
                                 .
                              
                           
                        
                     

Then based on the Euler–Lagrange equation, the evolution equation can be derived as:
                           
                              
                                 
                                    
                                       ∂
                                       S
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 
                                    x
                                 
                                 =
                                 −
                                 κ
                                 ω
                                 +
                                 
                                    
                                       μ
                                       +
                                       λ
                                       β
                                    
                                 
                                 n
                              
                           
                        where μ, β and ω are derivative of stereo reprojection error term, silhouette reprojection error term and smoothness term, respectively. Because the surface S is represented using triangle mesh M, the evolution equation can be rewritten as:
                           
                              
                                 
                                    
                                       ∂
                                       M
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 
                                    
                                       x
                                       
                                          v
                                          i
                                       
                                    
                                 
                                 =
                                 −
                                 κ
                                 
                                    ω
                                    
                                       v
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       
                                          μ
                                          
                                             v
                                             i
                                          
                                       
                                       +
                                       λ
                                       
                                          β
                                          
                                             v
                                             i
                                          
                                       
                                    
                                 
                                 
                                    n
                                    
                                       v
                                       i
                                    
                                 
                              
                           
                        where 
                           
                              x
                              
                                 v
                                 i
                              
                           
                         is the vertex of triangle mesh M. To add the stability of evolution, we replace the 
                           
                              μ
                              
                                 v
                                 i
                              
                           
                         with 
                           
                              μ
                              
                                 v
                                 i
                              
                              min
                           
                        , which is defined in Eq. (18).


                        
                           
                              
                                 
                                    μ
                                    
                                       v
                                       i
                                    
                                    min
                                 
                                 =
                                 
                                    
                                       arg
                                       min
                                    
                                    μ
                                 
                                 
                                    
                                       
                                          ∑
                                          
                                             
                                                v
                                                j
                                             
                                             ∈
                                             N
                                             
                                                
                                                   v
                                                   i
                                                
                                             
                                          
                                       
                                       
                                          
                                             W
                                             
                                                v
                                                j
                                             
                                          
                                          
                                             
                                                
                                                   ξ
                                                   
                                                      v
                                                      j
                                                   
                                                
                                                −
                                                μ
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              v
                              j
                           
                           ∈
                           N
                           
                              
                                 v
                                 i
                              
                           
                         is a vertex in the neighborhood of vertex v
                        
                           i
                         on the triangle mesh M. 
                           
                              W
                              
                                 v
                                 j
                              
                           
                         is the weight for each vertex 
                           
                              v
                              j
                           
                           ∈
                           N
                           
                              
                                 v
                                 i
                              
                           
                        . Eq. (18) is a weighted L1 minimization problem which can be efficiently estimated by weighted median.

@&#REFERENCES@&#

