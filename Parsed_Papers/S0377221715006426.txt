@&#MAIN-TITLE@&#Project buffer sizing of a critical chain based on comprehensive resource tightness

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This study suggests a buffer sizing method based on comprehensive resource tightness.


                        
                        
                           
                           This research analyzes the concept of information resource tightness and applies it to the sizing of project buffer.


                        
                        
                           
                           The method used to calculate physical resource tightness is improved by setting a critical value of resource availability.


                        
                        
                           
                           The proposed method considers the mandatory logical relationships and the resource constraints between activities.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Project buffer

Comprehensive resource tightness

Information resources

Physical resources

Design structure matrix

@&#ABSTRACT@&#


               Graphical Abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

The development of methods that can be used to successfully initiate, plan, execute, and close projects is a major concern of project management practice and research. The competition in project management is continuously increasing and project teams are constantly required to deliver their projects on time, within the budget, and with high quality. Project managers need project planning and control techniques to handle both these issues and those of uncertainties and resource constraints.

Resource-constrained project scheduling is one of the most complicated subjects in the field of project management (Rabbani, Fatemi Ghomi, Jolai, & Lahiji, 2007). The typical method applied to resource-constrained project scheduling in stochastic networks simplify solution procedures, usually resulting in managers underestimating the project duration and providing an erroneous resource profile (Golenko-Ginzburg & Gonik, 1997).


                     Goldratt (1997) introduced the direct implementation of the theory of constraints in project management, denominated as the critical chain. TOC evolved from the basic assertion that the output of a system is limited by a single constraint. Based on this, this author proposes that: (1) 50% of the activity duration is estimated as the likely duration and that the safe time is extracted from the buffer zone; thus the realistic estimates is 50% level not 90%. Specifically, a “no blame” culture is essential for the smooth implementation of CCPM theory; (2) all non-critical tasks are scheduled as late as possible in order to reduce the work-in-process and all tasks should be started as soon as their predecessors have finished. However, inspection of subcontractor deliveries and work scheduled should be scheduled as early as possible. This author states that managers will add a large amount of safety time to the project plan. However, this safety time will be consumed during the implementation of the project owing to various factors, such as the student syndrome, which contribute to the project being delayed and increase project costs. Goldratt accordingly adopts the concept of a buffer to absorb the uncertainties in the project rather than using the safety time term. According to Steyn (2001), three types of buffer are available in the project: (1) the project buffer (PB), which is added at the end of the critical chain to protect the whole project from delay; (2) the feeding buffer (FB), which is added to the noncritical activities feeding into the critical chain to prevent noncritical activities from delaying critical ones; and (3) the resource buffer (RB), which is a flag to alert, which resources have been planned in the critical chain and which different resources have been used in the previous critical chain activities.

The buffers in a critical chain contain the project buffer and the feeding buffer, and their size-setting method may directly determine the planned project duration and project completion risk. The classic buffer sizing methods are the Cut and Paste Method (C&PM) proposed by Goldratt (1997) and the Root Square Error Method (RSEM) proposed by Newbold (1998), which is based on the Central Limit Theorem and the idea that the durations of activities are supposed to be mutually independent. Many research works have pointed out that the C&PM seriously overestimates buffer sizes, while the RSEM performs better, especially when used in larger projects (Herroelen & Leus, 2001, 2002; Yang & Fu, 2009). The RSEM can avoid the overprotection implied by the C&PM when the number of project activities is large. However, the activities in one network have correlations and might therefore be affected by the same factors, such as resource constraints or network complexity, which make the buffer size calculated by the RSEM smaller than necessary. In this respect, Tukel, Rom, and Eksioglu (2006) suggest improving the RSEM through the use of resource constraints and network complexity. These three methods have therefore become the theoretical basis of buffer research. Subsequent studies report serious problems related to the buffer theory:

                        
                           1)
                           Scholars consider that network complexity is the main cause of the independence of activity duration (Tukel et al., 2006). However, network complexity only affects the starting time of activities and has no effect on the independence of activity duration. For example, the duration of an activity is 5 days. The starting time of this activity may be delayed when the network is complex and may begin ahead of schedule when the network is simple. Neither the starting time delay nor beginning in advance is important since they will not affect the duration of this activity.

Previous research into methods with which to calculate resource tightness has considered only the physical resources, such as equipment, raw materials or fuel, and has never considered the resource of information, which is principally measured by means of the information flow. Traditional methods therefore consider part of the resource tightness, which is unable to reflect the real resource tightness completely. Steward (1981) states that information flow exists between almost all project activities and that information flow embodies the real and inner relationships between activities. The information flow transmitted by the immediate predecessor activity may lead to a change in scope of the successor activity, while the information feedback provided by the subsequent activity may lead to a rework of the predecessor activity. The information resource transmission is therefore the main reason why activity durations are not independent of each other. The information resource has a significant impact on a project schedule and the buffer as an intangible resource. In view of the limitations of traditional methods, this study adopts the design structure matrix (DSM) in order to measure the information resource and calculate information resource tightness. The project buffer is then determined by means of comprehensive resource tightness (the combination of information resource tightness and physical resource tightness).

Given this backdrop of fragmented insights, the study's contribution to existing literature is threefold. First, this research suggests the concept of information resource tightness and applies it to the determination of a project buffer. The information resource resulting from the information flow between project activities is the significant inner relationship between activities and reflects the true logical relationship between these activities. The proposed method therefore makes a breakthrough in the research area of buffer determination. Second, the method used to calculate physical resource tightness is improved by setting a critical value of physical resource availability beyond which the resource is not tight, thus signifying that it is not necessary to add an additional project buffer to deal with resource tightness. In addition, traditional methods use network complexity to adjust the project buffer. The proposed method suggests that network complexity merely measures the uncertainty of the project and does not affect the mutual independence of project activity duration, and is not therefore suitable for buffer determination. Third, previous research on information flow uses the DSM to sequence and optimize the activities based on the assumption that the order of the activities can be randomly changed and resources can be satisfied without considering how the sequence is changed. The proposed method considers mandatory logical relationships and resource constraints between activities, thus overcoming the deficiency of the DSM technique.

The remainder of this paper is structured as follows. The second part contains a review of previous studies dealing with buffer sizing methods based on project attributes and DSM research results. Section three proposes a buffer sizing model based on comprehensive resource tightness. Section four describes the model by means of an example from an industrial process using the optimization and simulation methods. Finally, the authors elaborate on the major findings, discuss the implications of the research, clarify the limitations of the study and suggest further research directions.

@&#LITERATURE REVIEW@&#


                     Goldratt (1997) suggested that the critical chain is determined by both logical relationships and resource constraints. In this case, the critical chain is usually not the critical path and it solves resource conflicts with minimal disruption. This author introduces the C&PM to determine the size of the project buffer. This method takes half of the estimated time as the average time of the activities, half of the safety sum cut from the critical chain as a project buffer, and half of the safety sum cut from the non-critical chain as a feeding buffer. However, considering 50% of the critical chain length as a project buffer may cause the project buffer to be too long, which will lead to a waste of resources and the loss of business opportunities (Bie, Cui, & Zhang, 2012; Herroelen & Leus, 2001). What is more, based on the property that project activity time obeys logarithmic normal distribution, Ashtiani, Jalali, Aryanezhad, and Makui (2007) use a mathematical statistics method to study the buffer size, and reach the conclusion that Goldratt's 50% buffer size method leads to serious waste. Another alternative to Goldratt's approach is the RSEM, which is based on the central limit theorem and performs much better, particularly in the case of larger projects (Newbold, 1998). In this method, it is supposed that the activities are mutually independent for central limit theorem to work. In fact, the activities in one network have correlations and might therefore be affected by the same factors, such as the resource constraints or the network complexity, which make the buffer size calculated by RSEM smaller than necessary. Besides, the RSEM also cuts half of the estimated duration as the planned duration. Under this condition, when the risks are slight, the buffer is larger and the planned duration is smaller than the requirement, which will cause the project to fail; when the risks are serious, the reserved duration will be excessive and the excessive part will be wasted because of the student syndrome.

In order to overcome the limitations of RSEM, other studies have adjusted the project buffer, principally through the use of project attributes. Tukel et al. (2006) introduce two methods to determine the feeding buffer in critical chain project scheduling, namely the Adaptive Procedure with Resource Tightness (APRT) and the Adaptive Procedure with Density (APD). Various simulation results show that these methods are better than the RSEM and the C&PM. More specifically, the APRT method incorporates resource tightness while the APD method uses network complexity. Long and Ohsato (2008) simulate project uncertainty by using fuzzy numbers and calculate the size of the project buffer with genetic algorithms and trapezoidal fuzzy theory. The novelty of this approach is that, in the case of a lack of historical data, the expert judgment method can be used to estimate whether the specific circumstances of the project are conducive to dealing with specific project issues (Peng & Huang, 2014). Chu (2008) and Zhao, You, and Zuo (2010) take into account the effect of managers’ risk preferences while considering resource tightness and network complexity. They obtain a new buffer sizing method that can ensure the appropriate buffer size regardless of the amount of activities that exist in the chain. Shi, Wang, and Gong (2012) suggest a new buffer sizing method based on the attributes in resource tightness, network complexity and risk preference, and consider the cost factor and resource substitutability. In view of the insufficiency of taking 50% of the planned duration, Zhang, Song, and Díaz (2014) propose a new buffer sizing method based on attribute optimization. The buffer was determined by the project uncertainty, rather than cut in half. In order to manage projects with resource constraints, Pantouvakis and Manoliadis (2006) develop a heuristic method based on traditional CPM scheduling calculations and leveling algorithms. In order to improve the accuracy of software project effort management and obtain the dynamic management of software project effort, Zhang, Shi, and Diaz (2015) therefore propose an effort buffer sizing method based on project risks, along with a dynamic effort deviation monitoring and control model. Based on the characteristics of drum activities space, Bie, Cui, Zhao, and Zhang (2013) propose a method of setting distributed capacity constraint buffer, which sets a CCB behind each drum activity. Fuzzy theory is increasingly being used to evaluate the uncertainty caused by the unpredictability of the project implementation (Rodger, 2014). Rodger (2013) present a fuzzy linguistic ontology payoff method for the valuation of real options in the aerospace industry. Furthermore, Rodger, Pankaj, and Gonzalez (2014) report on the results of fuzzy induced linguistic ordered weighted averaging for group decision support evaluation of backorder risk triggers to ensure that equipment is available and fully operational when needed. Fallah, Ashtiani, and Aryanezhad (2010) and Gonzalez, Alarcon, and Yiu (2013) also propose two corresponding buffer sizing methods.

Previous research on buffer determination has several limitations. First, there is a misconception that network complexity is the main cause of the dependence between project activities and its use for the adjustment of the project buffer. In fact, network complexity does not affect the independence of activity duration for various reasons. The assumption of activity independence mainly refers to the independence of activity durations, and the number of activities affects neither the logical relationships nor the independence between activity durations. Previous studies have defined network complexity as the ratio of the number of sub-network activities feeding the critical chain to the total number of sub-network activities. This signifies that network complexity considers only the effect of non-critical chain factors without considering the critical chain activity independence. The delay of the predecessor activity will not affect to the duration of the successor activity. For example, if the predecessor activity is delayed by 10 days, the starting time of the successor activity will also be deferred for ten days, but its duration will remain unchanged. Network complexity does not therefore affect the independence between activity durations.

The second limitation of previous studies is that they determine resource tightness by using the ratio of the number of resources required to the number of resources supplied. According to this method, no matter how many resources the project is provided with, its resource tightness is beyond “0”. The project must accordingly reserve additional buffer to deal with this resource tightness. In fact, when the resource supply is adequate, then its progress will never be affected by resources, and it is not therefore necessary to adjust the project buffer with resource tightness. Moreover, previous studies suggest that the more resources available, the better the project duration will be. However, an increase in resources often leads to an increase in inventory costs, which may adversely affect the project because of the law of diminishing marginal benefits. The third disadvantage of previous research works is that they only consider physical resource tightness without considering the information resource when calculating resource tightness. In fact, the information resource is the main cause of the independence between activity durations.


                     Steward (1981) proposes the concept of the design structure matrix (DSM), and uses this matrix to represent the relationship between information input and output activities. In the research into the information flow area, scholars determine the risk of rework by studying the interaction of information flow between activities. Cho and Eppinger (2001) describe the rework risk in a sequence-overlapping situation, but do not take into account the feedback overlapping and the ahead-of-time downstream activities. Maheswari and Varghese (2005) and Bai and Wan (2008) propose the predecessor time factor matrix and the successor time factor matrix and calculate the duration of the project, but they do not consider the risk of rework caused by information feedback in sequential overlapping. Browning (2001) and Eppinger and Browning (2012) propose the rework probability matrix and rework impact matrix, but they consider that the information feedback to the upstream activity only occurs after the completion of the downstream activity, after which the rework of the upstream activity may take place. According to certain historical and scientific evidence, the optimization and expression criterion proposed in the DSM has been studied (Koukopoulos & Sani, 2014). The DSM reduces the information flow interaction, thus reordering project activities in order to shorten the project duration and reduce the project cost (Yan, Wang, Xu, & Wang, 2010; Yang, Zhang, & Yao, 2012).

The current study presents an effective approach for determining the activity sequence with minimum total feedback time in a design structure matrix (Lin, Qian, Cui, & Goh, 2015). However, the greatest deficiency of the DSM is that it ignores the mandatory logical relationships and the resource constraints between activities.

In summary, resource tightness between activities is the main factor affecting the independence of activity durations and the real factor affecting the project buffer size. The proposed method combines the CCPM with the DSM technique and adopts comprehensive resource tightness to measure the resource constraints and adjust the project buffer, thus providing the project with a more reasonable buffer size.

A project needs two kinds of resources: physical resources and information resources. The term “physical resource” principally refers to raw materials and equipment, among others (Burke, Li, & Qu, 2010). Comprehensive resource tightness takes into account the impact of both physical resources and information resources. Physical resource tightness is improved by the introduction of a critical value of the resource used, while information resource tightness is measured by employing the size of the rework caused by the information flow calculated using the DSM.

During the implementation of the project, if the resource usage is close to or greater than the resource availability, there is a resource risk that will cause project delay (Büchmann-Slorup, 2014; Wang & Liu, 2013). When the resource is completely sufficient and the project does not have any resource risks, the resource tightness will not affect the size of the project buffer. For example, an activity needs 10 people and the number of the people available is 50. In this situation, the supply of resources greatly exceeds the demand for resources; the resource is not at all tight. If the number of people available increases to 100, then the resource is still not tight, and the additional 50 people
                         provided are moreover useless for the mitigation of resource tightness. In fact, it will increase the communication costs of the project. This signifies that when the resource is not tight, it is not necessary to adjust the project buffer with resource tightness. The proposed method uses a critical value “α” to determine the upper limit of resource tightness. When resource availability reaches α, resources are not tight. The size of α is determined on the basis of the actual situation of resource usage and availability. It differs with different projects and different types of resources.

Let us use the human resource context as an example and analyze the critical value according to the short-term labor production function in economics (see Fig. 1). The best production stage is between point B and point C. In this stage, the marginal yield and average yield begin to diminish, but total output gradually increases and reaches the maximum. Before point C, the increase in labor input will certainly increase the total output. When labor input is beyond point C, the marginal product is negative, signifying that the extra labor input will lead to adverse effects. The upper limit of human resource “α” could therefore be the amount when the marginal product is zero.

As can be observed in Fig. 1, we should set an upper limit for the resource amount supplied according to the law of marginal effect diminishing. Beyond this limit, the extra resource may lead to a descent in production. At this time, the resource is not completely tight, and it is not therefore necessary to adjust the project buffer to deal with resource tightness.

When the upper limit amount “α” of resources q is determined, physical resource tightness can be calculated as follows:

                           
                              (1)
                              
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   α
                                                   i
                                                
                                                =
                                                
                                                   max
                                                   q
                                                
                                                
                                                   {
                                                   
                                                      R
                                                      
                                                         F
                                                         q
                                                      
                                                   
                                                   }
                                                
                                                ,
                                             
                                          
                                          
                                             
                                                Rav
                                                
                                                   (
                                                   q
                                                   )
                                                
                                                ≤
                                                
                                                   α
                                                   q
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   α
                                                   i
                                                
                                                =
                                                0
                                                ,
                                             
                                          
                                          
                                             
                                                Rav
                                                
                                                   (
                                                   q
                                                   )
                                                
                                                >
                                                
                                                   α
                                                   q
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    RF
                                    
                                       
                                       q
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                             i
                                          
                                          r
                                          
                                             (
                                             
                                                i
                                                ,
                                                q
                                             
                                             )
                                          
                                       
                                       
                                          Rav
                                          
                                             (
                                             q
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        where αi
                         represents physical resource tightness; RFq
                         indicates the utilization efficiency of resource 
                           
                              
                              q
                              (
                              
                                 q
                                 
                                 =
                                 
                                 1
                                 ,
                                 
                                 2
                                 …
                                 
                                 n
                              
                              )
                           
                        ; r(i, q) is the resource usage for activity 
                           
                              i
                              (
                              
                                 i
                                 
                                 =
                                 
                                 1
                                 ,
                                 
                                 2
                                 …
                                 n
                              
                              )
                           
                         for resource type q; Rav(q) is the limited supply of resources q, and αq
                         is the upper limit of resources q.

Information flow exists between project activities and the interaction of information flows will lead to the rework of project activities. At first, it is only possible to obtain part of the information concerning an activity that is required; the other part of the information can only be obtained by using information flow transmission and feedback during the implementation of the project.

There are two kinds of information flow interactions between project activities: the overlapping relationship and the non-overlapping relationship. In these two situations, the way in which information flow interacts and its impact on the rework are different. Information flow transmission and feedback exist in both overlapping and non-overlapping information flow interaction.

1) Interaction of information flow in a non-overlapping relationship

As is shown in Fig. 2(a), activity I is an upstream activity of activity J. When there is no overlapping relationship between I and J, J will provide I with information feedback regarding its performance when J is completed. When I receives information from J, the rework of I may occur. This is termed as the first rework, as shown in shadow 1 of Fig. 2(a). When I finishes dealing with the information flow from J, it will also transmit some information to J. When J receives the information from I, rework may again take place, which is called the second rework, as shown in shadow 2 of Fig. 2(b). The influence of the information flow, may therefore lead to a risk of rework (Yang, Yao, Lu, & Zhang, 2014).

2) Interaction of information flow in an overlapping relationship

As is shown in Fig. 3
                           , the information flow interaction between activities will be more complex when there are overlapping relationships. When activity I is implemented to a certain degree, it will transmit information to the downstream activity J at TI
                           . Before J begins to receive the information from J, J has started for time TJ
                           , as shown in shadow 1. From time TI
                           , activity I will continue to transmit information to activity J until the activity I is completed. When activity J receives information from activity I, it will provide activity I with information feedback, as shown in shadow 2. The total information overlapping thus consists of shadow 1 and shadow 2. In this respect, rework also may occur, as is shown in shadow 3 of the rework time. The length of shadow 3 is a function of shadows 1 and 2.

After the activity information flow has been determined, the rework time that is caused by information interaction can be obtained. This rework time could reflect the information resources that are not obtained during the initial implementation stage of this activity. The information transmission and feedback begin at the time when the activity has finished in the non-overlapping relationship, while the information transmission and feedback time are TI
                            and TJ
                            in the overlapping relationship (see Fig. 3). The risk of rework can be measured by means of rework probability and rework duration using the DSM rework probability matrix and rework intensity matrix. As shown in Fig. 4
                           , markers in the upper triangular mean that there is information feedback and markers in the lower triangular of the matrix mean that there is an information transmission. Numbers Di
                            in the diagonal represent the duration of the activities, while the numbers in Fig. 4 represent the intensity of information flow interaction. The DSM matrix generally uses “•” or “×” rather than numbers to mark the information flow between activities. As shown in Fig. 4(a), 
                              
                                 R
                                 P
                                 (
                                 
                                    2
                                    ,
                                    
                                    3
                                 
                                 )
                                 =
                                 0.6
                                 
                              
                           means that C will provide B with information feedback and that the rework probability of B is 60%. As shown in Fig. 4(b), 
                              
                                 R
                                 I
                                 (
                                 
                                    2
                                    ,
                                    
                                    3
                                 
                                 )
                                 =
                                 0.2
                              
                            means that the rework of activity B occurs, and that the rework time takes 30% of the total duration of B.

The RI matrix and RP matrix allow the area of the shadows in Figs. 2 and 3 to be calculated. These areas represent the condition of the information resource exchange. Shadow 1 and shadow 2 in Fig. 2 represent the information transmission and feedback areas of the whole project duration. The duration of rework can therefore be expressed as:

                              
                                 (3)
                                 
                                    
                                       
                                          
                                             
                                                D
                                                R
                                             
                                          
                                          i
                                       
                                       =
                                       
                                          D
                                          i
                                       
                                       ×
                                       RP
                                       
                                          (
                                          
                                             i
                                             ,
                                             j
                                          
                                          )
                                       
                                       ×
                                       RI
                                       
                                          (
                                          
                                             i
                                             ,
                                             j
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

In Fig. 3, the length of shadow 3 is a function of shadows 1 and 2, which can be expressed as formula 4:

                              
                                 (4)
                                 
                                    
                                       
                                          
                                             
                                                D
                                                R
                                             
                                          
                                          i
                                       
                                       =
                                       
                                          [
                                          
                                             
                                                (
                                                
                                                   
                                                      D
                                                      i
                                                   
                                                   −
                                                   
                                                      T
                                                      I
                                                   
                                                
                                                )
                                             
                                             +
                                             
                                                T
                                                J
                                             
                                          
                                          ]
                                       
                                       ×
                                       RP
                                       
                                          (
                                          
                                             i
                                             ,
                                             j
                                          
                                          )
                                       
                                       ×
                                       RI
                                       
                                          (
                                          
                                             i
                                             ,
                                             j
                                          
                                          )
                                       
                                    
                                 
                              
                           where
DR
                           
                           
                              i
                            is the rework duration of activity I and also the number of information resources that activity I requires.

The information resource tightness βi
                            can be calculated after the information resource of an activity that is required has been determined. Information resource tightness is computed in a manner similar to that of physical resource tightness: the ratio of information resource usage to information resource availability. The availability of information resources is limited and some information resources can only be generated during the implementation of the activities, and there will not therefore be an excessive supply problem for the information resource. It is not necessary to consider the critical value during the computation of information resource tightness, which is different from the computing of physical resource tightness. The equation used to calculate information resource tightness is shown in Eq. 5.

                              
                                 (5)
                                 
                                    
                                       
                                          β
                                          i
                                       
                                       =
                                       
                                          
                                             
                                                D
                                                i
                                             
                                             +
                                             
                                                
                                                   
                                                      D
                                                      R
                                                   
                                                
                                                i
                                             
                                          
                                          
                                             D
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        

In Eq. 5, some of the information resources that are required in a project will be generated with the implementation of project activities. The predecessor activity will transmit the information resource to the successor activities, and the successor activities will also provide the predecessor activities with information feedback, thus ensuring that in the planning phase, the information will always be inadequate and the information resource tightness will always be tight.

After the physical resource tightness and information resource tightness have been determined, the comprehensive resource tightness can be obtained. The project buffer can then be determined on the basis of the comprehensive resource tightness. Assuming that a project contains n activities, and that the duration of activities 
                           
                              i
                              (
                              
                                 i
                                 =
                                 
                                 1
                                 ,
                                 
                                 2
                                 …
                                 n
                              
                              )
                           
                         obeys lognormal distribution with a mean μiy
                         and a variance σiy
                        
                        2, the project buffer can be determined by using formula 6. Specifically, the calculation of feeding buffer is the same with project buffer.

                           
                              (6)
                              
                                 
                                    PB
                                    =
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             
                                                [
                                                
                                                   (
                                                   
                                                      1
                                                      +
                                                      
                                                         α
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                ×
                                                
                                                   β
                                                   i
                                                
                                                ×
                                                
                                                   σ
                                                   
                                                      i
                                                      y
                                                   
                                                
                                                ]
                                             
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The validity of the new proposed model has been verified by using a software development project consisting of 16 activities for simulation. The specific steps are:

Step 1: Determine the initial critical chain on the basis of resource constraints and logical relationship constraints between activities (Wang, Wang, Ge, & Deng, 2014).

Step 2: Adjust the initial critical chain based on an objective optimization function. The objective function for activity sequencing is to minimize the total coordination cost (Zhang, Song, Chen, & Shi, 2015). The critical chain can then be obtained after optimization without changing the resource constraints and mandatory logical relationship.

Step 3: Take the variance of each activity as its safety time and obtain the duration of each activity by removing its safety time.

Step 4: Calculate the rework time caused by the interaction of information flow based on the DSM and calculate the information resource tightness accordingly; next, set the critical value “α” and calculate the physical resource tightness; the project buffer and feeding buffer can then be obtained by means of simulation.

Step 5: Add the feeding buffer to the end of the non-critical chain to ensure that non-critical delays do not affect the critical chain; add the project buffer to the end of the critical chain to absorb the uncertainty of the critical chain and ensure the project duration.

The project network diagram after optimization is shown in Fig. 5
                     
                     , while the critical chain of the project is marked with a red line. The duration and cost of the critical chain activities, information input time and information output time are shown in Table 1
                     . The rework probability matrix and rework intensity matrix of the critical chain activities are shown in Fig. 6. The resource constraints have been used to optimize the initial information flow matrix of this project by employing DSM without changing the mandatory logical relationships; after optimization, the interaction of information flow has reached its weakest state and the rework time has reached its minimum.

After the DSM had been used to optimize the project activities, Matlab software was adopted for the simulation and the results of the simulation, which were run 500 times. The buffer obtained was then compared with C&PM and RSEM; the simulated actual duration, actual cost, buffer consumption and probability of delay were compared with RSEM, as can be shown in Table 2, Figs. 7
                      and 8.
                     
                  

The results of this actual case allow us to draw the following conclusions. First, as can be observed from the results in Table 2 and Fig. 7, the buffer size determined by the proposed method is less than that of the C&PM, but larger than that of the RSEM. The duration and cost determined by the proposed method are, meanwhile, smaller than those of the C&PM and RSEM. There are three reasons for these findings. First, the C&PM cuts half of the project duration as a project buffer without considering the number of activities. This will make the buffer size increase linearly with the number of activities, thus resulting in excessive protection when the number of activities is large. Second, the RSEM assumes that the activity time durations are independent of each other based on the central-limit theorem. In fact, the activities are not independent. The RSEM will therefore inevitably lead the buffer determined to be smaller than the actual requirement. Third, the proposed method takes the variance of the project as the safety time of an activity, and adjusts it with project attributes. The project buffer size varies with the risks, and the size of the project buffer is therefore more reasonable. It cannot only shorten the duration, but also decrease the cost. It can therefore doubly optimize project duration and cost.

As can be seen from Table 2 and Fig. 8, the average project duration of RSEM and the proposed method are 92.23 and 83.11, which is reduced by 9.9%. The average project cost of RSEM and the proposed method are 223.25 and 204.15, which is reduced by 8.56%. Furthermore, the delay probability of the proposed method is 2.7%, which is less than RSEM. The optimization results of the proposed method are also compared with the Fuzzy Buffer Sizing method (FBSM) (Shi et al., 2012), and the RSEM are set as the benchmark (see Table 3
                     
                     ). The FBSM proposes four methods according to the alternative resources and the types of alternate resources that are considered. The optimization results of each method are compared with the RSEM. As can be observed in Table 3, the duration of the proposed method is 9.9% shorter than that of the RSEM; the cost is 8.56% less than that of the RSEM. All the optimization results are better than those of the FBSM. The proposed method adopts the DSM in order to optimize the information flow between activities, and the rework time has reached the minimum; the set of critical values “α” excludes the effect of resource tightness on the project buffer when the resource is not tight; the network complexity is proved to not affect the independence of the activity time parameter. The buffer is then determined and the project duration and cost are further optimized.

Moreover, the frequency distributions and cumulative probability are shown in Fig. 9
                     . The frequency distribution diagram refers to the number of the 500 experiment results distributed in each isometric interval. The proposed method increases the on-time completion probability. From Fig. 9, we can see that the cumulative probability curve is steeper; the data tends to be more stable and concentrated. It indicates that this method can reduce the uncertainty in project's duration and cost, and thus reduce buffer. Therefore, it could further reduce the duration fluctuations and improve the on-time completion rate.

@&#CONCLUSIONS@&#

A review of different approaches and methods in buffer project literature has revealed the need to develop a new buffer sizing method based on comprehensive resource tightness in order to improve the reflection of the relationships between activities and the accuracy of project buffer determination. The present paper achieves this objective by first reaching the conclusion that the resource constraint between activities is the real reason affecting the independence of the activity time parameter, while network complexity does not affect the independence between activities. Furthermore, resources are divided into two types: physical resources and information resources. Comprehensive resource tightness is therefore proposed, thus adjusting the project buffer in terms of resource constraints. Specifically, projects with historical basis of estimates or parametric forecasting methods can benefit more from this approach. As for projects with high innovation, the proposed method contributes to reduce the time and cost. More importantly, the approach can improve working efficiency and reduce communication waste because the distance of information transmission and information feedback was optimized. Besides, managers should understand the difference between the two types, not adjust the process if variation is common cause, not include special cause variation in risk simulation, and not aggregate discrete project risks.

The findings obtained contribute to buffer project literature in several ways. A new calculation method for physical resource tightness is proposed by setting an upper limit “α” in the resource supply; the concept of information resource tightness is first proposed, and it is calculated based on the rework time of activities caused by information interaction according to the DSM. The project buffer is eventually determined and adjusted by means of comprehensive resource tightness which is a combination of physical resource tightness and information resource tightness. The experimental results indicate that the proposed method takes the relationships between activity time parameters into consideration, which overcomes the deficiency of the central limit theorem by assuming that activity durations are independent of each other. After using comprehensive resource tightness to adjust it, the project buffer is more reasonable, signifying that it can provide the project with effective protection and avoid the waste of safety time.

This research is subject to limitations, and future lines of research must be considered. Traditional CCPM sequence methods only take the logical relationship and resource constraints between activities into account, without considering the information flow constraints. Further research will therefore study the determination methods and sequence optimization of the critical chain using the DSM as a basis. Future research should also study the uncertainty of project duration by considering complex factors based on the DSM, such as the technique condition of the project, the seniority of the project manager, the knowledge limitation of the team or the customers’ requirements. It would thus be possible to determine the project buffer on the basis of the uncertainties and activity sequence optimization. An extension of this study could focus on improving the DSM. For example, future studies may carry out clustering research into similar activities and then sequence and optimize the critical chain according to the results of the cluster. Specifically, compared with the single project management, multi-project management will be faced with more uncertainty factors, so future studies can focus on the determination method of drum buffer and capacity constraint buffer size in critical chain multi-project scheduling.

@&#REFERENCES@&#

