@&#MAIN-TITLE@&#Detecting stealthy attacks: Efficient monitoring of suspicious activities on computer networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A scalable monitoring scheme for stealthy attacks on computer networks is presented.


                        
                        
                           
                           Bayesian fusion along with traffic sampling is used as a data reduction method.


                        
                        
                           
                           Stealthy activities can be detected using 10–20% size sampling rates.


                        
                        
                           
                           A tracing algorithm for anonymous stealthy activities to their sources is presented.


                        
                        
                           
                           The effect of network parameters on detection is investigated.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Stealthy attacks

Bayesian fusion

Network simulation

Traffic sampling

Anomaly detection

@&#ABSTRACT@&#


               
               
                  Stealthy attackers move patiently through computer networks – taking days, weeks or months to accomplish their objectives in order to avoid detection. As networks scale up in size and speed, monitoring for such attack attempts is increasingly a challenge. This paper presents an efficient monitoring technique for stealthy attacks. It investigates the feasibility of proposed method under number of different test cases and examines how design of the network affects the detection. A methodological way for tracing anonymous stealthy activities to their approximate sources is also presented. The Bayesian fusion along with traffic sampling is employed as a data reduction method. The proposed method has the ability to monitor stealthy activities using 10–20% size sampling rates without degrading the quality of detection.
               
            

@&#INTRODUCTION@&#

Launching stealthy attacks is one of sophisticated techniques used by skilled attackers to avoid detection, and can take months to complete the attack life cycle. Tools and techniques to launch such attacks are widely available. In order to detect such attempts, it is necessary to maintain a long history of what is happening in the environment and sophisticated computing systems are required for analysis. Most systems cannot keep enough event data to track across extended time intervals for this purpose due to computational constraints. The performance of network can be affected by such overheads and hence to the quality of service. All these facts motivate for a data reduction which can be motivated as long as it preserves the required level of precision for monitoring objectives. This paper examines the feasibility of employing traffic sampling together with a simple, but a systematic, data fusion technique for monitoring such attempts; and if design parameters of a network affect on non-sampling error.

The rest of the paper is organised as follows. Section 2 provides a brief overview of intrusion detection in computer systems, and explains why conventional methods for rapid attacks cannot be employed in stealthy activity monitoring. Section 3 presents a monitoring algorithm which identifies Bayesian approach as a method for information fusion. Sampling technique employed by the monitoring scheme is presented in Section 4. Section 5 presents a methodological way to trace anonymous stealthy activities to their approximate sources. Experimental design is presented in Section 6. Sections 7 presents experimental outcomes. Related literature is presented in Section 8. Conclusions are drawn in Section 9.

Computer systems are dynamic systems having many components such as clients, servers, switches, firewall and intrusion detection systems (IDSs). At each time interval these components produce large amounts of event based data which, in principal, can be collected and used for security analysis. The signature elements of an attack is scattered spatially and temporally, and often embedded within the totality of events of the distributed systems, and motivation
                     
                        1
                        1. An alert of multiple login failures. 2. An execution of cmd.exe. 3. An abuse of legitimate credentials either by individuals or malware.
                     
                     
                        1
                      and source
                     
                        2
                        Using various proxy methods and zombie nodes, manipulation of TCP/IP elements, using relay or random routing.
                     
                     
                        2
                      behind some events are not always certain. In addition there are number of monitoring obstacles in such an attack scenario: evidence scarcity (weak), colluded activities, large attack surfaces, variety of users and devices, high volume high speed environments, normal variations to node behaviours and anomalies keep changing over the time. Due to the above challenges most of the existing anomaly detection techniques solve a specific formulation of the problem which induces by various factors such as data types and types of anomalies of interested, and encourage unsupervised anomaly detection techniques [1]. Proposed monitoring scheme in this paper is an effort to address most of above obstacles in one solution.

In signature based intrusion detection an attack scenario signature is needed to distinguish a given attack (say A) from other attacks (B and C) and from normal network activities. When a stealthy attack is progressing the critical challenge is how to correlate these events across spatial and temporal spaces to track various attack scenarios such as A, B and C. The detection accuracy relies on the accuracy of scenario signature as well as the accuracy of event correlation [2]. Maintaining state information of every packets and comparisons between current packets and previous all packets are needed in event correlation. Most systems cannot keep enough event data to track across extended time intervals to do this when a stealthy attack is progressing. As a result the scarcity of attack data within a short period of time allows a stealthy attacker to go undetected hiding her attempts in the background noise and other traffic. Hence using typical signature detection techniques for stealthy activity monitoring is a challenge. The proposed monitoring algorithm in this paper is anomaly based. An intrusion is different from the normal behaviour of the system, and hence anomaly detection techniques are applicable in intrusion detection domain [1]. Intrusive activity is always a subset of anomalous activity is the ordinary belief of this idea. However given the nature of problem domain, anomaly detection techniques need to be computationally efficient to handle large sized of inputs. Hence considering any complex method, e.g. methods like principal components analysis, for information fusion should not be encouraged.

A particular emphasis of the proposed algorithm is ability to process uncertain events.
                        3
                        The motivation behind a network event is not always easy to judge. Some suspicious events, e.g. a major router failure could generate many ICMP unreachable messages while some computer worms (e.g. CodeRed and Nimda) generate the same in active probing process, can appear as part of an attack as well as can originate from normal network activities.
                     
                     
                        3
                      Though there are a number of techniques available for dealing with data imperfection (e.g. probability, fuzzy set, rough set and dempster shafer), probabilistic fusion is selected for this work as it has the ability to handle uncertainty of data [3]. The core of the selected method lies the Bayes estimator (Bayesian fusion) which can be applied at each time point to update the probability density of node states by fusing the new piece of data. Hence it is an incremental approach which updates normal node profiles dynamically based on changes in network traffic (events). If some aberrant changes happen in network traffic over the time, it should be reflected in profiles as well and suspicious activities can be raised based on that profiles is the basic assumption. The algorithm has two functions: profiling and analysis.

The profiling is the method for evidence fusion across space and time by updating node profiles dynamically based on changes in evidence. It computes a suspicion score for each node in the system during a smaller time window w and that score is updated as time progresses to compute a node score for a larger observation window W. Note that extraordinary levels of security awareness can be attained only through selecting optimal set of relevant variables to the given task, and analysing all of them together [4]. The proposed profiling technique in this paper fuses information gathered from different sources into a single score for a minimum computational cost. It reduces data into a single value which is important to maintain information about node activities for a very long observation period W. The hypothesis for the monitoring algorithm is built as follows.

Let 
                           
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    H
                                 
                                 
                                    2
                                 
                              
                           
                         be two possible states of a node in a network and define 
                           
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                           
                         – the node acts as an attacker and 
                           
                              
                                 
                                    H
                                 
                                 
                                    2
                                 
                              
                           
                         – the node does not act as an attacker. Then 
                           
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    H
                                 
                                 
                                    2
                                 
                              
                           
                         are mutually exclusive and exhaustive states. 
                           
                              P
                              (
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         is an expression of belief, in terms of probability, that the node is in state 
                           
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                           
                         in the absence of any other knowledge. Once obtained more knowledge on the proposition 
                           
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                           
                         through multiple information sources (m indicators), in the form of evidence 
                           
                              E
                           
                        
                        ={e
                        1, e
                        2, e
                        3, …, e
                        
                           m
                        } on attack surface including the human element, the belief can be expressed in terms of conditional probabilities as 
                           
                              p
                              (
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              /
                              E
                              )
                           
                        . Using the well known Bayes’ theorem and assuming statistical independence between information sources:
                           
                              (1)
                              
                                 p
                                 (
                                 
                                    
                                       H
                                    
                                    
                                       1
                                    
                                 
                                 /
                                 E
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             ∏
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             m
                                          
                                       
                                       
                                       p
                                       (
                                       
                                          
                                             e
                                          
                                          
                                             j
                                          
                                       
                                       /
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       )
                                       ·
                                       p
                                       (
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       
                                       
                                          
                                             ∏
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             m
                                          
                                       
                                       
                                       p
                                       (
                                       
                                          
                                             e
                                          
                                          
                                             j
                                          
                                       
                                       /
                                       
                                          
                                             H
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       ·
                                       p
                                       (
                                       
                                          
                                             H
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

When likelihoods 
                           
                              p
                              (
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              /
                              
                                 
                                    H
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         and prior 
                           
                              p
                              (
                              
                                 
                                    H
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         are known, the posterior 
                           
                              p
                              (
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              /
                              E
                              )
                           
                         can be calculated for a given w. These posterior terms 
                           
                              p
                              (
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              /
                              E
                              )
                           
                         can be accumulated by time to use as a metric to distinguish suspected nodes from other nodes during a W. Note that distinct types of information sources such as signature based IDSs, anomaly detection components, file integrity checkers, SNMP-based network monitoring systems can be used for this purpose. Hence the assumption on statistical independence above is reasonable. Any influence/interested technical and socio-technical indicators of changes in behaviour (e.g. changes in access patterns, differences in use of language, typing patterns, transferring large amounts of data onto or off the node, etc; if human actors are involved) can be included as input variables (i.e. elements of E) in the profiling algorithm as long as such indicators operate statistically independent. Extending proposed approach to a very large scale attack surface is easy since it is a matter of adding a new indicator (attack vector) in E. Existing domain knowledge will serve to enhance the performance of this monitoring algorithm since it takes advantage of prior knowledge about the parameters. Which is especially useful when technical data is scarce. However prior and likelihoods are the most critical parameters to this approach since Bayes’ factors are sensitive to them. Proposed monitoring algorithm would be useful in monitoring threats listed in Table 1
                        . The potential threats and their indicators in Table 1 is not exhaustive and for illustrating purpose only.

@&#ANALYSIS@&#

The analysis comprised of detecting anomalous profiles in a given set of node profiles. This work uses a statistical method to detect anomalies. An anomaly is an observation in a dataset which is suspected of being partially or wholly irrelevant because it is not generated by the stochastic model assumed for that dataset is the underlying principle of any statistical anomaly detection technique. Such techniques are based on the key assumption that normal data instances occur in high probability regions of a stochastic model, while anomalies occur in the low probability regions of the stochastic model [1]. Based on these concepts Peer and Discord analysis is proposed in this work for detecting stealthy activities in a given set of node profiles. Both techniques acknowledge the fact that baseline behaviour on networks is not necessarily stable, for example, operational or exercise deployments often mean the behaviour of nodes will potentially change dramatically. Hence, a defence method that is effective today may not remain effective for tomorrow, and any novel algorithm should account for this level of complexity. Our approach evolves the baseline behaviour by the time according to the current state of network parameters.

Aggregating posterior probability terms in Eq. (1) over the time helps to accumulate relatively weak evidence for long periods. These accumulated probability terms 
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       t
                                    
                                 
                                 
                                 p
                                 (
                                 
                                    
                                       H
                                    
                                    
                                       1
                                    
                                 
                                 /
                                 E
                                 )
                              
                            (t is time), known as node scores, can be used as a measurement of the level of suspicion of a given node at any given time with respect to her peers as follows. A given set of node profiles, e.g. profiles corresponding to a similar peer group, is a univariate data set. Hence it is possible to use the uni-variate version of Grubb’s test [5] (maximum normed residual test) to detect anomalous points in the set, subject to the assumption that normal node profiles in a given set follows an unknown Gaussian distribution. The set-up where it has the distribution is very well a mixture of Gaussians. Because, at any given time, testing our hypothesis is a Bernoulli trial, and accumulated Bernoulli trials makes a Binomial distribution which can be approximated by a Normal distribution. For each profile score 
                              
                                 
                                    
                                       x
                                    
                                    
                                       t
                                    
                                 
                              
                            at time t, its Z-Score is computed as:
                              
                                 (2)
                                 
                                    
                                       
                                          z
                                       
                                       
                                          t
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                t
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      ¯
                                                   
                                                
                                             
                                             
                                                t
                                             
                                          
                                       
                                       
                                          s
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             t
                                          
                                       
                                    
                                    
                                       ¯
                                    
                                 
                              
                            and s are mean and standard deviation of the data set at time t. A test instance is declared to be anomalous at significance level 
                              
                                 α
                              
                            if:
                              
                                 (3)
                                 
                                    
                                       
                                          z
                                       
                                       
                                          t
                                       
                                    
                                    ⩾
                                    T
                                    =
                                    
                                       
                                          N
                                          -
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      α
                                                      /
                                                      N
                                                      ,
                                                      N
                                                      -
                                                      2
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                N
                                                -
                                                2
                                                +
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      α
                                                      /
                                                      N
                                                      ,
                                                      N
                                                      -
                                                      2
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where N is the number of profile points in the set and 
                              
                                 
                                    
                                       t
                                    
                                    
                                       α
                                       /
                                       N
                                       ,
                                       N
                                       -
                                       2
                                    
                                 
                              
                            is the value taken by a t-distribution (one tailed test) at the significance level of 
                              
                                 
                                    
                                       α
                                    
                                    
                                       N
                                    
                                 
                              
                            and degrees of freedom 
                              
                                 (
                                 N
                                 -
                                 2
                                 )
                              
                           . The 
                              
                                 α
                              
                            reflects the confidence associated with the threshold and indirectly controls the number of profiles declared as anomalous [1]. Note that the threshold T adjusts itself according to current state of a network. This analysis compares each node’s activity changes against to activity changes of her peer group. Hence it is called as peer analysis.

Looking at one’s aberrant behaviour within similar peer groups (e.g. same user types, departments, job roles, etc.) gives better results in terms of false alarms than setting a universal baseline [4]. Hence first classifying similar nodes into peer groups, based on behaviour related attributes/features, and then applying the monitoring algorithm is recommended. Investigations for suitable classification algorithms for this task is left as a future work.

When a stealthy attack is progressing, malicious activities are occurring according to an on–off pattern in time. As a result, lack of agreement or harmony between points in the profile sequence of a given node can occur in a similar or different on–off fashion. This type of anomalies are known as discords. In a stealthy attack environment, discords are random time context and peer analysis technique itself is not sufficient to detect them if the progression rate of malicious activities is far lower than the similar innocent activities. The objective of discord analysis in this work is to detect sub-sequences within a given sequence of profiles which is anomalous with respect to the rest of the sequence. Problem formulation occurs in time-series data sets where data is in the form of a long sequence and contains regions that are anomalous. The underlying assumption is that the normal behaviour of the time-series follows a defined random pattern, and a sub-sequence within the long sequence which does not conform to this pattern is an anomaly. In general, the purpose of this analysis is to detect one’s aberrant behaviour with respect to her own behaviour regardless of her peers. Following method is proposed for discord analysis using an auto regressive integrated moving average (ARIMA) model. An ARIMA(p, d, q) [7] is a discrete time linear model with random noise as shown in Eq. (4).
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             1
                                             -
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      p
                                                   
                                                
                                             
                                             
                                                
                                                   α
                                                
                                                
                                                   k
                                                
                                             
                                             
                                                
                                                   L
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          (
                                          1
                                          -
                                          L
                                          )
                                       
                                       
                                          d
                                       
                                    
                                    
                                       
                                          X
                                       
                                       
                                          t
                                       
                                    
                                    =
                                    
                                       
                                          
                                             1
                                             +
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      q
                                                   
                                                
                                             
                                             
                                                
                                                   β
                                                
                                                
                                                   k
                                                
                                             
                                             
                                                
                                                   L
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∊
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                           where 
                              
                                 p
                                 ,
                                 
                                 d
                                 ,
                                 
                                 q
                              
                            are the number of auto-regressive terms, nonseasonal differences and lagged forecast errors in the prediction equation respectively. 
                              
                                 
                                    
                                       X
                                    
                                    
                                       t
                                    
                                 
                              
                            is a time series of profile scores of a given node. L is the lag operator and the 
                              
                                 
                                    
                                       α
                                    
                                    
                                       k
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       β
                                    
                                    
                                       k
                                    
                                 
                              
                            are the parameters of the autoregressive and the moving average parts of the model. 
                              
                                 
                                    
                                       ∊
                                    
                                    
                                       t
                                    
                                 
                              
                            are error terms.

At the 
                              
                                 (
                                 t
                                 -
                                 1
                                 )
                              
                           th time point, 95% confidence interval (CI) for 
                              
                                 
                                    
                                       X
                                    
                                    
                                       t
                                    
                                 
                              
                            is predicted using the Eq. (4). If the observed profile score at time t lies outside of the predicted CI then absolute deviation of the profile score from CI is calculated. This deviation is used as a measure of non-conformity of a given profile score to the pattern of its own sequence (group norms). These deviations average out over time to calculate the anomaly score for a given node. Note that this anomaly score is the average dissimilarity of profile scores with its own profile sequence of a node. This dissimilarity occurs randomly from time to time due to the deliberate intervention of the attacker. The length of the ARIMA model (i.e. n – number of previous points to be used) is critical as containing anomalous regions in input sequence makes difficult of creating robust model of normalcy. Note that keeping the length of the ARIMA model less than the minimum of time gaps between two consecutive attack activities will give better results. However since the time gap between two consecutive attack activities is unknown in advance, using a smaller observation window (i.e. slicing whole observation period into many smaller parts as much as possible) to generate short time profiles would be the better. A node does exhibit sudden changes in behaviour when compared to its past behaviour is not necessarily suspicious as it could be a regular systematic variation of the node behaviour [4]. Proposed discord analysis technique considers such variations as completely legitimate as it monitoring for changes to the changing pattern of node behaviour.

The key challenge for anomaly detection in network security is that the huge volume of data, typically comes in a streaming fashion, thereby requiring on-line analysis. Hence employing a data reduction method is necessary to overcome large-scale data handling. Using statistical sampling would be a possible method. Despite the benefits, there is an inherent tension and debate of using traffic sampling for security specific tasks. Obviously, signature based detection methods can be seriously affected by sampling as selection of a subset of signature elements would not be sufficient to recognise a predefined pattern in a signature definition database. But in anomaly based detection, should all traffic still need to be investigated? In the abstract view, an anomaly is a deviation of a computed statistic from a norm of the normal statistics. If sampling changes the statistics of normal and anomalous traffic equally, it is reasonable to hypothesise that detection would not be affected by the sampling rate. This hypothesis is investigated in this section.

Network data constitutes a potentially unlimited population continuously growing up by the time. Using multi-stage sampling with stratification is a common method used in large populations for sampling. This ensures that observations are picked from each of strata, even though the probability of being selected items from some stratus are very low when using simple random sampling (SRS). This feature is very useful in a security specific view. Hence, given a smaller observation window w, the traffic is sampled using the Stratification sampling technique with optimum allocation method. This sampling technique has been designed to provide the most precision for the least cost. If h is a traffic stratum, the best sample size 
                        
                           
                              
                                 n
                              
                              
                                 h
                              
                           
                        
                      for stratum h during a w is given by:
                        
                           (5)
                           
                              
                                 
                                    n
                                 
                                 
                                    h
                                 
                              
                              =
                              n
                              ·
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         h
                                                      
                                                   
                                                   .
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         h
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               h
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             
                                                N
                                             
                                             
                                                i
                                             
                                          
                                          .
                                          
                                             
                                                s
                                             
                                             
                                                i
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 n
                              
                              
                                 h
                              
                           
                        
                     -sample size for stratum 
                        
                           h
                           ,
                           n
                        
                     -total sample size, 
                        
                           
                              
                                 N
                              
                              
                                 i
                              
                           
                        
                     -population size for stratum 
                        
                           i
                           ,
                           
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                        
                     -standard deviation of stratum i, and 
                        
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                        
                     -direct cost (in terms of time, bandwidth, and computational resources) on the collection infrastructure to sample an individual element from stratum i. Note that the direct cost should be in a common unit (CU) of measurement for the amount of computational cost spending on different parameters. The time, bandwidth, memory or processor requirements that constitutes one common unit (1CU) varies based on which requirement is being measured, and how each parameter is critical and scarce to the network. Hence definition of such a unit (CU) would be subjective. For instance one can define: 1CU is memory equivalent of 128MB, 1CU is bandwidth equivalent of 56KBPS, 1CU is CPU-Time equivalent of 100 nsec etc. International unit (IU) in pharmacology is a well-known example for a similar approach for a common unit of measurement for the amount of a substance [8]. The main advantage of above sampling technique is producing the most representative sample of a population to the least cost. Hence it is the ideal sampling technique to employ with the problem as “cost” parameter can be minimised, subject to the required precision, to obtain an efficient monitoring scheme. The rule of thumb in stratification sampling that a population should not consist of more than six strata can be changed even into hundreds given the millions of observations in the population in this domain. Traffic classification is employed to establish the strata. Using a basic classification technique (e.g. using L4/L3 access lists and Protocols) would be enough. Stratification ensures that each traffic type is adequately represented. The SRS technique is used to select a 
                        
                           
                              
                                 n
                              
                              
                                 h
                              
                           
                        
                      size sample from a given stratum h for a w.

Random sampling techniques have a distinct advantage over other alternative methods for data reduction. It allows retention of arbitrary details while other methods for data reduction (e.g. filtering and aggregation) require the knowledge of the traffic features of interest in advance. Each element of the population having a non-zero probability of selection is a preliminary condition for any random sampling techniques. Sampling traffic from backbones or edge routers seriously violates this condition in terms of security specific view, though it is sufficient for traffic engineering and accounting tasks. Since it ignores consideration of traffic within same broadcast domains, it ignores potential insider activities as well. Therefore in this work traffic is sampled at each broadcast domain, but considering the incoming traffic only. All outgoing traffic to any external network is considered as a separate broadcast domain for the purpose of traffic sampling. Considering incoming traffic only avoids selection of a given unit (packet or flow) twice for inclusion in a sample at source and destination points.

A common problem with many analysis tools and techniques today is that they are simply not designed for purposes of attribution. Attribution of cyber activity, i.e. determining the identity or location of an attacker or an attacker’s intermediary, is essential in any cybersecurity strategy [9]. The localisation process becomes evermore difficult when the attacker employs various proxy methods and zombie nodes (e.g. bots), Manipulation of TCP/IP elements (e.g. IP Spoofing), using relay or random routing (e.g. Tor networks) approaches can help an attacker protecting her location. Proliferation of weakly encrypted wireless networks could also help an attacker getting anonymous locations. Tracing packets back to the source hop by hop is required in identifying sources of anonymous activities. This section presents a methodological way to trace such activities to their approximate sources by extending the above monitoring algorithm. The tracing algorithm has two functions: tree formation and tree traversal. Tree formation builds an equivalent tree structure for a given attack scenario. It enables tree traversal to move towards the attacker’s physical source.

If the topological information is available, Tree formation is performed as follows. The victim node is the starting point. The Gateway node to victim is considered as the root of the tree and all immediate visible nodes (either internal or external) to the root are considered as children of the root. If a given child is a host node in the network then it becomes a leaf of the tree. If it is a gateway then it becomes a parent node of the tree and all immediate visible nodes to that node are attached as its children. This process is continued until the entire topology is covered (see Fig. 6).
                           Algorithm 1
                           Tree formation for a given attack scenario. 
                                 
                                    
                                 
                              
                           

Once the equivalent tree structure is built, channel profile score 
                           
                              (
                              
                                 
                                    z
                                 
                                 
                                    kt
                                 
                              
                              )
                           
                         should be computed for each path of the tree at each step of the tree traversal algorithm as shown in Eq. (7). Let
                           
                              (6)
                              
                                 
                                    
                                       c
                                    
                                    
                                       kt
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             t
                                          
                                       
                                       
                                       p
                                       (
                                       
                                          
                                             H
                                          
                                          
                                             k
                                          
                                       
                                       /
                                       E
                                       )
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    n
                                 
                                 
                                    k
                                 
                              
                           
                         is the number of nodes behind 
                           
                              k
                           
                        th channel. Then
                           
                              (7)
                              
                                 
                                    
                                       z
                                    
                                    
                                       kt
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             kt
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   t
                                                
                                             
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        is the Z-Score of channel k at time t. where 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    ¯
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                    
                                    
                                       
                                          c
                                       
                                       
                                          it
                                       
                                    
                                 
                                 
                                    n
                                 
                              
                              ,
                              
                              
                                 
                                    σ
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                             
                                          
                                          
                                          
                                             
                                                (
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      it
                                                   
                                                
                                                -
                                                
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                   
                                                   
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          n
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                        , and 
                           
                              i
                              =
                              1
                              ,
                              2
                              ,
                              3
                              ,
                              …
                              ,
                              n
                           
                        .

To traverse a non-empty tree, perform the following operations recursively at each node, starting from the root of the tree, until suspected node is found.
                           
                              1.
                              Visit the parent node.

Compute channel scores for all children of the parent.

Traverse the highest channel scored sub tree if that score is above the threshold (if an attacker node is found backtrack to the parent).

Traverse the next highest channel scored sub trees (only sub trees above or around threshold and/or significantly deviated from rest of nodes of same parent).

The algorithm continues working towards a built tree node by node, narrowing down the attack source to one network and then to a node. At this point it is expected to run more standard traceback methods by contacting the entity which controls that network if it is beyond the analyst’s control.
                           Algorithm 2
                           Tree traversal for a given tree. 
                                 
                                    
                                 
                              
                           

@&#EXPERIMENTS@&#

A series of experiments were conducted simulating stealthy suspicious activities in simulated networks to evaluate the proposed approach. Simulating such activities on a real network certainly gives more realistic conditions than in a simulated network. However practical constraints of the project keep away using a real world network for this purpose. Network simulator 
                        
                           NS
                           3
                        
                     
                     
                        4
                        
                           https://www.nsnam.org/.
                     
                     
                        4
                      is used to build a network topology (see Fig. 1
                     ) consisting of a server farm and number of subnets of varying size. Table 2
                      presents a summary of specifications of event generation in simulated experiments.

A Poisson arrival model with inter-arrival time gap between two consecutive events as an exponential was assumed for events generation. Each simulation is run for a reasonable period of time to ensure that enough traffic is generated. Attackers are located at nodes in subnets. Suspicious and benign traffic were generated within and between subnets to simulate both attack and legitimate activities. Four types of suspicious activities (rate denoted by 
                        
                           
                              
                                 λ
                              
                              
                                 a
                              
                           
                        
                     , a
                     =1, 2, 3, 4. in Table 2) was simulated. A stealthy attack is defined as a predefined sequence of such suspicious events executing an on–off manner. During the off period attack node acts as a healthy node and produces legitimate events (rate denoted by 
                        
                           
                              
                                 μ
                              
                              
                                 i
                              
                           
                        
                     , i
                     =1, 2, 3, …, 10. in Table 2) similar to normal nodes. Note that “noise” in Table 2 represents the suspicious events generated by healthy nodes, but at different rates 
                        
                           
                              
                                 λ
                              
                              
                                 n
                              
                           
                        
                     , n
                     =1, 2, 3, 4. It was ensured to maintain 
                        
                           
                              
                                 λ
                              
                              
                                 a
                              
                           
                           ∈
                           
                              
                                 λ
                              
                              
                                 n
                              
                           
                           ±
                           3
                           
                              
                                 
                                    
                                       λ
                                    
                                 
                              
                              
                                 n
                              
                           
                        
                      and 
                        
                           
                              
                                 λ
                              
                              
                                 n
                              
                           
                           (
                           ⩽
                           0.1
                           )
                        
                      sufficiently smaller for all experiments to characterise stealthy suspicious activities which aim at staying beneath the threshold of detection and hiding behind the background noise. The idea to use the above relationship for generating attacker activities was to keep them within the normality range of innocent activities (i.e. background noise). 
                        
                           
                              
                                 
                                    
                                       λ
                                    
                                    
                                       n
                                    
                                 
                              
                           
                        
                      is the standard deviation of rates of suspicious events generated by normal nodes. Though we did not produce all signature elements needed to characterise real world attacks, representation of suspicious events by a subset of such characteristics (parameters) is sufficient to this work as our work focuses on temporal and spatial aspects of events arrivals.

Basic payload information, i.e. L4/L3 access lists and protocols such as http, ftp, udp and arp, was used for traffic classification. Traffic which cannot identify using basic payload information was pooled into a common stratum. A simple R
                        5
                        
                           http://www.r-project.org/.
                     
                     
                        5
                      script was written to sample packets as described above. 
                        
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                        
                      in Eq. (5) is set to a constant value as there is no significant difference of the cost between different type of traffics (stratum) for inclusion in a sample in simulations. Visible source of an event is always considered as the true source for experiments in this work. Prior probabilities and Likelihoods are assigned as described below.
                        
                           (8)
                           
                              p
                              (
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    2
                                 
                              
                              =
                              0.5
                           
                        
                     
                  

Eq. (8) suggests there is a 50% chance for a given node to be a stealthy attacker. However, this is not the case in many situations. In networks, one node may have a higher prior belief of being suspicion than another. Since prior probabilities are based on previous experiences, 
                        
                           p
                           (
                           
                              
                                 H
                              
                              
                                 1
                              
                           
                           )
                        
                      can be judged based on information gathered from contextual analysis. However if there is no basis to distinguish between nodes or groups of nodes, equally likely (i.e. same probability of occurring) can be assumed. For the experiment presented in this paper, first followed the equally likely assumption, and prior probabilities were assigned as in Eq. (8). Then the posterior probability of a given node at time 
                        
                           t
                           -
                           1
                        
                      is used as the prior of the same node at time t when time is progressing. This lets prior probabilities to adjust itself dynamically according to suspicious evidence observed over time.
                        
                           (9)
                           
                              p
                              (
                              
                                 
                                    e
                                 
                                 
                                    j
                                 
                              
                              /
                              
                                 
                                    H
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              
                                 
                                    k
                                 
                                 
                                    j
                                 
                              
                           
                        
                     
                  

Eq. (9) expresses the likelihood of producing event 
                        
                           
                              
                                 e
                              
                              
                                 j
                              
                           
                        
                      by a subverted node. For the purpose of demonstration different, but arbitrary, values (
                        
                           ⩽
                           1
                        
                     ) were assigned for k to distinguish different type of events 
                        
                           (
                           
                              
                                 e
                              
                              
                                 j
                              
                           
                           )
                        
                      produced for the simulation. Likelihoods for real world implementation can be estimated as follows. If 
                        
                           
                              
                                 e
                              
                              
                                 j
                              
                           
                        
                      is an event resulting from a certain type of known attack (e.g. a UDP scan or LAND
                        6
                        A Denial of Service (DoS) attack which sets the source and destination information of a TCP segment to be the same. A vulnerable machine will crash or freeze due to the packet being repeatedly processed by the TCP stack.
                     
                     
                        6
                      attack), then k can be assigned to one. However, k cannot always be one, as described in Section 2, there are some suspicious events (e.g. an alert of multiple login failures) that can be part of an attack signature as well as originate from normal network activities. The question is how to estimate 
                        
                           p
                           (
                           
                              
                                 e
                              
                              
                                 j
                              
                           
                           /
                           
                              
                                 H
                              
                              
                                 1
                              
                           
                           )
                        
                     , i.e. the true positives, if 
                        
                           
                              
                                 e
                              
                              
                                 j
                              
                           
                        
                      becomes such an observation. One possible solution would be using an existing IDS evaluation dataset to estimate true positives.

Estimating likelihoods for real world implementation is feasible, and [10] is a good example for that which provides a detailed description of the likelihood estimation in insider detection. According to [11], in some cases, the historical rate of occurrences of certain attacks is known and can be used to estimate the likelihood that certain events derive from such attacks or it may be sufficient to quantify these frequencies by an expert in a similar way to estimating risk likelihoods to an accuracy of an order of magnitude. Note that [11]’s claim is completely theoretical as it follows the Subjectivist
                     
                        7
                        There are three fundamental interpretations of probability: Frequentest, Propensity and Subjectivist. In Subjectivist, probability of an event is subjective to personal measure of the belief in that event is occurring. see https://dslpitt.org/genie/.
                     
                     
                        7
                      interpretation of probability theory.

@&#RESULTS@&#

In this section, experimental results are presented. Graphical forms (e.g. Z-Score graphs) are using to present information. Visualisation helps to quickly recognise patterns in data.

To investigate whether proposed Z-Score graphs reflect the behaviour of nodes, three attacker nodes were located in a 50 size subnet. All others were innocent. Two out of three attackers stopped their attack activities at 200 and 300 time points respectively. Fig. 2
                        a presents the outcome, where 
                           
                              A
                              1
                              ,
                              
                              A
                              2
                           
                         and 
                           
                              A
                              3
                           
                         are attacker nodes while Min and Max are the minimum and maximum Z-Scores of normal nodes. T is the Grubbs’ critical value (threshold). If an attacker node changed its behaviour then its Z-Score graph (see 
                           
                              A
                              2
                           
                         and 
                           
                              A
                              3
                           
                         in Fig. 2a) is responding to that by changing its direction.

Peer analysis technique was tested against 24 test cases varying the subnet size between 25 and 250 and the number of attackers between 0 and 7. That technique is capable of detecting stealthy attackers in all cases. Only one case, where four stealthy attackers were located in a hundred size subnet, is presented in Fig. 2b. In Fig. 2b, nodes corresponding to 
                           
                              A
                              1
                              ,
                              
                              A
                              2
                              ,
                              
                              A
                              3
                           
                         and 
                           
                              A
                              4
                           
                         denote attackers. Min and Max denote the minimum and the maximum Z-Scores of normal nodes. Aberrant node profiles, i.e. 
                           
                              A
                              1
                              ,
                              
                              A
                              2
                              ,
                              
                              A
                              3
                           
                         and 
                           
                              A
                              4
                           
                         in Fig. 2b, are corresponded to stealthy attackers located in the subnet. They are above or near the threshold (T) and there is a clear visual separation between the set of normal nodes and anomalous nodes. Hence it is possible to recognise stealthy suspicious activities using the proposed method.

Behaviour of the proposed approach in the best and the worst cases is also investigated. There were no attacks in the best case while all nodes were subverted in the worst case. Similar graphs, as shown in Fig. 2c, were obtained for both cases. Almost all the nodes are nearly below the threshold (T) and none of nodes can be seen separated from the majority. In a situation where monitoring system depends only on peer analysis technique and has seen similar graphs, it is safe to assume that all nodes are subverted (instead of assuming free of attackers) and doing further investigations on one or two nodes to verify. If investigated nodes are attackers, it is reasonable to consider all nodes are attackers or vice versa. However, discord analysis technique has the ability to detect attackers in worst case too.

In a stealthy attack environment, discords are random time context and peer analysis technique itself would not be sufficient to detect them if the progression rates of malicious activities are far lower than the rates of similar innocent activities. In order to investigate this, an attacker was planted in a subnet and her suspicious activity rate was decreased until observing a node score graph like in Fig. 2d where peer analysis technique itself failed to detect the attacker. In Fig. 2d, the attacker which is denoted by the red dotted line always keeps a very low profile score than all innocent nodes denoted by other lines (see magnified version in Fig. 2e). As shown in Fig. 2d and e the attacker hides behind the normal nodes. Attacker is not detected by the peer analysis technique itself since the attacker’s profile score is far lower than all normal nodes. The random nature of event generation can also be seen in Fig. 2e.

Discord analysis is capable of detecting the attacker very well in this case too. First, using an ARIMA(p, d, q) model, 95% CI is predicted for each node in the network (see Fig. 2f and g which are created for the attacker node and a normal node respectively). Then at each time point, Z-Scores of anomaly scores for all five nodes were plotted as in Fig. 2h. Twenty-five previous points were used as the length of the ARIMA model in this case. In Fig. 2h, the line corresponded to A denotes the attacker. Min and Max denote the minimum and the maximum Z-Scores of anomaly scores of normal nodes at each time point. T is the Grubbs’ critical value (threshold) for a single outlier. As it is obvious in Fig. 2h the attacker can be detected using discord analysis technique even malicious activities are far lower than the rates of similar innocent activities. Note that the “forecast” package in R can automatically select an ARIMA model for a given time series and hence the process is automated.

This section investigates how does different network parameters: traffic volume, subnet size and number of attackers affect on monitoring.

A simple measure called detection potential is defined to explain how far an attacker node is deviated from the threshold. It helps to compare between different network conditions. The detection potential d is defined as:
                              
                                 (10)
                                 
                                    d
                                    =
                                    z
                                    -
                                    T
                                 
                              
                           on the basis of the higher the detection potential the better for the detection.

An attacker was located in a 51 size subnet and generated suspicious events. The same experiment was repeated six times by keeping all parameters unchanged, except attacker’s traffic volume (V). At each repetition V was incremented by one time as 
                              
                                 2
                                 V
                                 ,
                                 3
                                 V
                                 ,
                                 …
                                 ,
                                 7
                                 V
                              
                            and d is calculated as in Eq. (10). Standardised d is presented in Fig. 3
                           a. As shown in Fig. 3b, d is proportional to V – the higher the traffic volume produced by an attacker is the better for detection.

An attacker was located in a 500 size subnet and the same experiment was repeated six times by keeping all other parameters, except the subnet size, unchanged. Subnet size was changed to 400, 300, 200, 100, 50 and 25 at each experimental run, and Fig. 3c and d were obtained. As shown in Fig. 3c, attackers have a less chance to hide behind innocent events when the subnet size decreases. The detection potential is negative exponential to the subnet size, and going beyond 100 size subnet would not make any difference in terms of detection (see Fig. 3d). The smaller the subnet size is the better for detection.

The same experiment was repeated many times by keeping all conditions unchanged, except the number of attackers. The outcomes of only two test cases, two and seven attackers, are presented in Fig. 3e and f. The attacker’s node score is dependent on the number of attackers on her own subnet (compare attackers’ Z-Scores between both graphs).

A series of experiments were conducted by changing the sampling rate r, hence n in Eq. (5). Fig. 4
                        a presents outcomes when 
                           
                              r
                              =
                              20
                              %
                           
                         and 
                           
                              r
                              =
                              10
                              %
                           
                        . Min and Max represent the minimum and the maximum profile scores of normal nodes in the subnet where attacker node A is located. As shown in Fig. 4a, the proposed algorithm has the ability to detect stealthy activities using a 20% size traffic sample. It has also the ability to detect them using even a 10% size sample but after a considerable time lag.


                        Fig. 4b compares the detection potential against the sampling rate r. It is obvious that a point of diminishing returns is existed in Fig. 4b. When r is larger enough to produce a reasonable level of accuracy, making it further large would be a simply waste of resources of monitoring infrastructure? This answers the question raised in Section 4 “in anomaly based detection, should all traffic still need to be investigated?”.

A sampling process has two types of errors: sampling and non-sampling. Sampling error occurs because of the chance and it is impossible to avoid but can be minimised by defining unbiased estimators with small variances. Non-sampling errors can be eliminated and occurred due to many reasons: inability to access information, errors made in data processing, etc. This section examines what impact would varying network size and subnet structure have on Non-sampling error.

Proportion of anomaly packets 
                              
                                 ϕ
                              
                            is considered as the parameter of interest for this analysis and hence sample proportion 
                              
                                 π
                              
                            is defined as 
                              
                                 π
                                 =
                                 (
                                 a
                                 /
                                 n
                                 )
                              
                           ; where a is the number of suspicious packets in a given sample size n. Note that proportion of illegitimate to legitimate traffic, i.e. 
                              
                                 a
                                 :
                                 (
                                 n
                                 -
                                 a
                                 )
                              
                           , is a dominating factor for likelihood of false alarms in an IDS [12]. Though the distribution of 
                              
                                 ϕ
                              
                            is binomial, in a network scenario, this can be approximated by a normal distribution given a overwhelm number of packets to deal with (it satisfies the conditions of 
                              
                                 n
                                 ·
                                 
                                    
                                       π
                                    
                                    
                                       ̂
                                    
                                 
                                 ⩾
                                 15
                              
                            and 
                              
                                 n
                                 ·
                                 (
                                 1
                                 -
                                 
                                    
                                       π
                                    
                                    
                                       ̂
                                    
                                 
                                 )
                                 ⩾
                                 15
                              
                           ). Hence, 
                              
                                 ϕ
                                 ∼
                                 Normal
                                 
                                    
                                       
                                          
                                             
                                                π
                                             
                                             
                                                ̂
                                             
                                          
                                          ,
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            π
                                                         
                                                         
                                                            ̂
                                                         
                                                      
                                                      (
                                                      1
                                                      -
                                                      
                                                         
                                                            π
                                                         
                                                         
                                                            ̂
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           , where 
                              
                                 
                                    
                                       π
                                    
                                    
                                       ̂
                                    
                                 
                              
                            is the observed proportion from samples. This can be used to draw inference about the unknown population proportion 
                              
                                 ϕ
                              
                           . An attacker is located in a 224 size network and 
                              
                                 
                                    
                                       π
                                    
                                    
                                       ̂
                                    
                                 
                              
                            is estimated in each case as described below. Each simulation was repeated over 100 times. Goodness-of-fit test [13] is applied to statistically test the independence (or homogeneity) of proportion 
                              
                                 π
                              
                            over sampling rates, number of subnets and subnet sizes. If any dependency is found it is depicted in a graph (see Fig. 4c and d).

Traffic samples at 5%, 10%, 20%, 40%, and 80% rates of the whole trace were drawn and 
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                               was calculated. The null hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                               is the assertion that the sample proportion 
                                 
                                    π
                                 
                               conforms to the whole traffic proportion 
                                 
                                    ϕ
                                 
                              . The alternative hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               is the opposite of 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                              . 
                                 
                                    (11)
                                    
                                       
                                          
                                             H
                                          
                                          
                                             0
                                          
                                       
                                       :
                                       ∀
                                       r
                                       
                                       
                                          
                                             π
                                          
                                          
                                             r
                                          
                                       
                                       =
                                       ϕ
                                    
                                 
                              
                              
                                 
                                    (12)
                                    
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       :
                                       ∃
                                       r
                                       
                                       
                                          
                                             π
                                          
                                          
                                             r
                                          
                                       
                                       
                                       ≠
                                       
                                       ϕ
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                              s and p-values of testing 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                               vs 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               are given in Table 3
                               where p-values are greater than the significance level 
                                 
                                    α
                                    =
                                    0.01
                                 
                               for all cases. Therefore there is no enough evidence to reject the null hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                              . Hence it can be concluded that sample proportion 
                                 
                                    π
                                 
                               conforms to the whole traffic proportion 
                                 
                                    ϕ
                                 
                              . In other words 
                                 
                                    π
                                 
                               can be used to draw inference about 
                                 
                                    ϕ
                                 
                              , and chosen sampling technique is capable of producing representative samples to the population.

An attacker is located in a 224 size network and same experiment was repeated for four more times by doubling the number of subnets at each time (in other words each subnet was divided into two in its immediate repetition) but keeping all other conditions unchanged. The null hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                               is the assertion that the proportion 
                                 
                                    π
                                 
                               is not affected by the number of subnets b, where b
                              =1, 2, 4, 8, 16. The alternative hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               is the opposite of 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                              . If k is a constant:
                                 
                                    (13)
                                    
                                       
                                          
                                             H
                                          
                                          
                                             0
                                          
                                       
                                       :
                                       ∀
                                       b
                                       
                                       
                                          
                                             π
                                          
                                          
                                             b
                                          
                                       
                                       =
                                       k
                                    
                                 
                              
                              
                                 
                                    (14)
                                    
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       :
                                       ∃
                                       b
                                       
                                       
                                          
                                             π
                                          
                                          
                                             b
                                          
                                       
                                       
                                       ≠
                                       
                                       k
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                              s and p-values of testing 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                               vs 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               are given in Table 4
                              . Since p-values are less than the significance level 
                                 
                                    α
                                    =
                                    0.01
                                 
                               for some cases it is possible to conclude that there is no enough evidence to accept the null hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                              , which means that proportion is affected by the number of subnets. Fig. 4c presents the relationship between number of subnets b and proportion 
                                 
                                    π
                                 
                               at each sampling rate. When b is increasing 
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                               is decreasing (deviates from the actual value) regardless of sampling rates. Look at the overall trend in Fig. 4c.

An attacker was located in a 5 nodes size subnet in the network, and 
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                               was calculated at each sampling rate. The same experiment was repeated by adding more nodes to produce different subnet sizes: 
                                 
                                    10
                                    ,
                                    20
                                    ,
                                    40
                                 
                              , and 80 without changing other parameters. The null hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                               is the assertion that the proportion 
                                 
                                    π
                                 
                               is not affected by the subnet size n, where n
                              =5, 10, 20, 40, 80. The alternative hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               is the opposite of 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                              . If k is a constant:
                                 
                                    (15)
                                    
                                       
                                          
                                             H
                                          
                                          
                                             0
                                          
                                       
                                       :
                                       ∀
                                       n
                                       
                                       
                                          
                                             π
                                          
                                          
                                             n
                                          
                                       
                                       =
                                       k
                                    
                                 
                              
                              
                                 
                                    (16)
                                    
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       :
                                       ∃
                                       n
                                       
                                       
                                          
                                             π
                                          
                                          
                                             n
                                          
                                       
                                       
                                       ≠
                                       
                                       k
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                              s and p-values of testing 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                               vs 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               are given in Table 5
                              . Since p-values are less than the significance level 
                                 
                                    α
                                    =
                                    0.01
                                 
                               for some cases there is no enough evidence to accept the null hypothesis 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          0
                                       
                                    
                                 
                              , which means that proportion is affected by the subnet size. Fig. 4d presents the relationship between subnet size n and proportion 
                                 
                                    π
                                 
                              , where n is increasing 
                                 
                                    
                                       
                                          π
                                       
                                       
                                          ̂
                                       
                                    
                                 
                               is decreasing in overall (deviates from the actual value), regardless of sampling. Look at the overall trend in Fig. 4d.

Two cases: single and multiple attackers were simulated using network topology in Fig. 5
                        . An attacker is located at a node in subnet S6 in the single attacker case. Three attackers are located one in each subnet: S3, S5 and S6 in multiple attackers case. Fig. 6
                         presents the equivalent tree structure for the topology in Fig. 5 obtained using Algorithm 1. In Fig. 6, the root denotes the victim node while 
                           
                              
                                 
                                    g
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    h
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         denoting a gateway and a host node respectively at level i. j is the node number. Dashed rectangles represent a collection of leaves corresponded to hosts in each subnet. Once the tree is obtained, Algorithm 2 is run to locate the attackers as shown in Figs. 7 and 8
                        
                         for single and multiple attackers respectively. Source address was anonymised in generating all attack events.


                        Fig. 7 presents steps of tracing process from root of the derived tree. In step 1, Min and Max represent the minimum and maximum Z-Scores of all immediate visible nodes (11 in total, except 
                           
                              
                                 
                                    g
                                 
                                 
                                    
                                       
                                          1
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                           
                        ) to the root at each time point. Since that graph suggests moving towards 
                           
                              
                                 
                                    g
                                 
                                 
                                    
                                       
                                          1
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                           
                        , step 2 graph is created at node 
                           
                              
                                 
                                    g
                                 
                                 
                                    
                                       
                                          1
                                       
                                       
                                          3
                                       
                                    
                                 
                              
                           
                        , and so on. Finally search is narrow down to the subnet S6. Step 4 graph is created at S6’s gateway node 
                           
                              
                                 
                                    g
                                 
                                 
                                    
                                       
                                          3
                                       
                                       
                                          4
                                       
                                    
                                 
                              
                           
                        , where A denotes the Z-Scores corresponded to the true attacker located in that subnet. Min and Max represent the minimum and maximum Z-Scores of all other nodes in subnet S6. T denotes the threshold which is not defined when number of data points in a set is less than three. In that case the highest scored path is chosen to move forward (see step 2) in finding attacker or directions to her location.

A similar manner should be followed in interpreting graphs in Fig. 8 obtained for multiple attackers. In that case, once an attacker is found tracing algorithm should be back tracked to its immediate parent node and should proceed with next highest Z-Scored sub tree to find other suspicious nodes. After steps 3 and 6, algorithm back tracks to the root node. Table 6
                         summarises travel sequences for tracing single and multiple attackers.

@&#RELATED WORK@&#

The critical civil infrastructures such as health care, traffic, power supply, trade and military depend heavily on computer networks. This is due to increasing shift of typical industrial IT systems to IP based infrastructures. Hence the network has become the most vulnerable part of these critical infrastructures’ cyber assets such as SCADA systems of power infrastructures. Cybersecurity for critical infrastructures is widely discussed [14].

Using Bayesian fusion for monitoring of stealthy attacks on computer networks can be found in [2,11,9]. Setting a predefined control as the baseline for monitoring is a major drawback in [11]. In networks, normal behaviour keeps evolving and a current notion of normal behaviour might not be sufficiently representative in the future, and therefore thresholds need to evolve according to the context and current state of the network [2]. A research framework for testing hypothesises for insider threats is provided in [15]. It integrates employee data with traditional cybersecurity audit data. Data is processed using a dynamic Bayesian network. Probabilities are assigned for the reasoner through expert knowledge. A co-variance matrix based approach for detecting network anomalies is proposed in [16]. A graph-based anomaly detection systems is presented in [17]. Authors acknowledged the need of reducing the time spent for main computational bottleneck. Hence [17] is not computationally efficient. Most correlation based monitoring techniques are not suitable for stealthy attacks. Because number of anomalous instances in a smaller observation window is far fewer than the number of normal instances in stealthy attacks [1]. The work presented in [18] is one of the most recent work using Bayesian for stealthy activity monitoring in lone wolf terrorists. Using variable-length markov models in projecting cyberattack is in [19]. A method for detecting insiders by combining multiple sources of information is presented in [4]. Authors build a global model and find outliers by comparing each user’s activity changes to activity changes of her peer group. A Bayesian network model that incorporates psychological variables to detect insiders can be found in [20]. A complex Bayesian network for capturing conditional dependencies between different attributes is in [21].

Information visualisation as a method for anomaly detection is widely employed (e.g. [22]) as visual cognition is highly parallel and pre-attentive than the text or speech. However visualising a traffic flow of a large network for a very long time will end up with a very complicated web of traffic flows which would be very difficult to compare with analyst’s mental model of the netflow already made in mind. Therefore some kind of data reduction and simplification (information fusion) is needed before visualising security measures. The relevance of information fusion for network security monitoring is discussed in [1]. A comparison of performance between different techniques such as Bayesian, counting, linear regression and artificial neural network can be found in [10]. All above approaches, except [11], require storage of large volumes of event data for analysis. Systems that try to model the behaviour of individuals or protocols using large amounts of data are not scalable. Our method is different from [11] by the hypothesis, analysis technique and decision criteria.

Objectives of traffic sampling can be classified as traffic engineering, accounting and security specific where accuracy requirements in each objectives are quite different. Using sampling for traffic engineering and accounting tasks is widely studied, and already been employed by commercially available tools such as cisco netflow. However they are not relevant to this work as our objective is a security specific. A successful sampling technique in engineering and accounting would not be essentially an efficient method in security. Therefore only security related sampling works will be reviewed in this section. Sampling malicious packets with higher rates to improve the quality of anomaly detection can be found in [23]. High malicious sampling rates are achieved by deploying in-line anomaly detection system which encodes a binary score (malicious or benign) to sampled packets. This approach involves additional processing and storage overheads. An analysis of how sampling decreases the detection of anomalous traffic is presented in [24]. Authors use the packet volume as the parameter of interest for this analysis. That work concludes that detecting anomalies with low sampling rates is entirely possible by changing the measurement granularity, and uses relationship between the mean and the variance of aggregated flows to derive optimal granularity. Proposed analysis method in our work was impressed by this idea. The effect of traffic mix on anomaly visibility is investigated in [25]. However none of above focuses on stealthy activities. Note that methods proposed for typical rapid attacks cannot be used to monitor for stealthy activities due to several constraints including the limitations of computational resources [2]. To the best of our knowledge, the work presented in this paper is the first attempt to use sampling technique for stealthy activity monitoring in computer networks.

Based on the sampling frame, existing sampling proposals can be classified into two groups: packet and flow based. Packet based techniques [23–26] consider network packets while flow-based techniques [26,27] consider network flows as elements for sampling. Packet sampling is easy to implement as it does not involve any processing before selection of samples. But in the case of flow sampling, monitored traffic is processed into flows first and then apply sampling technique on whole set of flows for drawing a sample. This requires to use more memory and CPU power of network devices. The most widely deployed sampling method in the literature is packet sampling. It is computationally efficient, requiring minimal state and counters [25]. A study of combination of packet and flow sampling can be found in [28]. According to [27], flow sampling is more accurate than packet sampling. However it should be noted that this not necessarily means that flow sampling is always better than packet sampling. Suitability of a sampling method depends on the input parameters to the detection algorithm and monitoring objectives. For example, if inputs to the detection algorithm is flows, obviously flow sampling should be performed well in that scenario than sampling on any other element. [26] are examples to justify that suitability of a sampling frame depends on the detection algorithm. Event based and timer based are the two possible mechanisms to trigger the selection of a sampling unit for inclusion in a sample. Event based approaches collect one elements out of N elements using the chosen sampling method. Naive 1 in N sampling strategy by cisco netflow is a well known example for that method. It samples one packet after every N packets. Event based approaches consume more CPU and memory of network devices as it involves some processing (counting). In a timer based approach, one packet is sampled during N time units. Though this approach is effective in terms of CPU and memory consumption as it depends on the system timer, choosing larger Ns returns higher sampling errors due to the non-time-homogeneous nature of packets arrivals to the network.

Tracingback is one of the most difficult problems in network security, and a lot of research being conducted in this area. Existing mechanisms can be classified into five main categories: packet marking, ICMP traceback, logging on the router, link testing, overlay and hybrid [29]. But neither category is relevant to our work. For example, packet marking methods (e.g. [30]) require routers to modify the header of the packets. But our method does not mark any packet in the network or generate additional ICMP messages as in ICMP traceback method. Storage cost of logging methods is too large for routers. With router based approaches, the router is incharge with maintaining information regarding packets that pass through it. Our method try to traceback to the origin of events using logs and traces generated by existing functions on network devices and topological information. Following a different direction, our method does not deploy any additional mechanism to the network. A similar work can be found in [29]. Authors argue that existing traceback mechanisms are not widely supported by commodity routers and introducing extra overhead to the routers (e.g. ICMP messages). Hence they investigate ICMP messages triggered by spoofing traffic together with topological information to locate the attacker. However most existing approaches focus on rapid attacks while this paper is interested on events related to slow stealthy attacks.

@&#CONCLUSION@&#

Our approach maintains long-term estimates computed on sampled data that individuals or nodes are attackers rather than retaining event data for post-facto analysis. These estimates can be used as triggers of threats which enable authorities to respond to protect systems and deter attackers, for example, by physical, procedural and technical controls such as reduction in permissions and privileges and other incident response activities. The proposed approach significantly reduces the data amounts to handle and maintain. It maintains only a number of digits equal to the number of nodes in the network to provide a unified view of the state of the network. One advantage of this monitoring strategy is combining multiple indicators not in an ad-hoc but rather in a data-driven manner. Sampling technique utilised in this work draws representative samples. However required level of sampling rate depends on several factors: detection algorithm, parameter of interest, sampling method, level of precision required, duration of monitoring, rate of attack events, etc.

@&#REFERENCES@&#

