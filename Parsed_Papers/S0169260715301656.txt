@&#MAIN-TITLE@&#Using numeric simulation in an online e-learning environment to teach functional physiological contexts

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The system uses complex numerical simulations in an online e-learning environment.


                        
                        
                           
                           Complex calculations are performed on the Web server as a CGI application.


                        
                        
                           
                           The user enters simulation parameters on the browser which are sent to the server.


                        
                        
                           
                           The simulation result is re-transferred as a graphical representation.


                        
                        
                           
                           Two examples were realized: glucose-insulin homeostasis and basic neurophysiology.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

e-Learning

Numerical simulation

Internet

Server application

Physiology

@&#ABSTRACT@&#


               
               
                  Background and objectives
                  Mathematical models are suitable to simulate complex biological processes by a set of non-linear differential equations. These simulation models can be used as an e-learning tool in medical education. However, in many cases these mathematical systems have to be treated numerically which is computationally intensive. The aim of the study was to develop a system for numerical simulation to be used in an online e-learning environment.
               
               
                  Methods
                  In the software system the simulation is located on the server as a CGI application. The user (student) selects the boundary conditions for the simulation (e.g., properties of a simulated patient) on the browser. With these parameters the simulation on the server is started and the simulation result is re-transferred to the browser.
               
               
                  Results
                  With this system two examples of e-learning units were realized. The first one uses a multi-compartment model of the glucose-insulin control loop for the simulation of the plasma glucose level after a simulated meal or during diabetes (including treatment by subcutaneous insulin application). The second one simulates the ion transport leading to the resting and action potential in nerves. The student can vary parameters systematically to explore the biological behavior of the system.
               
               
                  Conclusions
                  The described system is able to simulate complex biological processes and offers the possibility to use these models in an online e-learning environment. As far as the underlying principles can be described mathematically, this type of system can be applied to a broad spectrum of biomedical or natural scientific topics.
               
            

@&#INTRODUCTION@&#

With increasing capabilities of the internet Web-based e-learning becomes an interesting and promising tool for blended learning. E-learning can be used in preparation but also in post-processing of on-site courses. In many cases, however, these e-learning teaching units consist of texts, images or questionnaires and the student has only very limited possibilities to obtain a functional and quantitative understanding of the biological mechanisms. Compared to practical course, in which the student can vary experimental conditions directly and observes the resulting changes, online e-learning systems often do not provide a direct cause–effect chain. However, in many basic subjects (e.g., physiology, biochemistry) but also in clinical therapeutic areas a quantitative understanding of causative relationships is essential.

Since many biological, chemical or physical processes can be described by mathematical formulas, one alternative to get an insight into complex biological behavior could be the use of numerical simulations. Typically described by a set of (differential) equations and empirical non-linearities the simulation calculates the temporal changes of observation parameters as a result of varying initial conditions. Mathematical modeling has been extensively used in biomedicine to describe numerous processes in the organism or during therapeutic interventions. Complex models exist for the description of the neural [1–3] or cardiac function [4], circulation and blood pressure control [5–7], on hormone regulation [8] but also for the immune system [9] or hemodialysis treatment [10]. These examples show the broad spectrum of applications for numerical modeling in biomedicine. Some of the models have been used to gain a deeper insight in the complex system interaction of various variables [6,11], others have been applied to optimize treatment strategies [12–14]. Since these models are suitable to simulate the complex behavior and interaction of body parameters, mathematical simulation is an appropriate tool to be used in an e-learning environment [15–17]. In these systems students can vary parameters systematically and observe the resulting quantitative effect on different system variables. Students can use these models either to get an insight in basic principles (e.g., blood pressure control in different time domains) but also to try treatment strategies with the help of simulated patients (e.g., insulin dosage for a diabetic patient).

Since the underlying mathematical models are rather complex in most cases, the requirements on the computational power are relatively high. Comprehensive simulation models used in education are therefore mostly realized as standalone applications used in a class room. But the use of simulation models could also be helpful in self-study at home. However, under these circumstances the use of standalone simulation applications needs the installation of executable software on the student's computer. Since students use different hardware and operating systems the software has to be developed for many systems. For this reason the use of Web-based simulation would allow students to work system independently on their own computer hardware or on tablet computers. However, the high computational demand is a major drawback for the use of complex models in an interactive Web-based e-learning environment. In general, sophisticated models are not applicable in a Web browser environment (e.g., using JavaScript). Therefore, the aim of the present project was to develop an approach of how the benefits of complex numerical simulation models can be used in an online e-learning environment. The concept is illustrated with two examples (simulation of the glucose-insulin control loop and diabetes therapy, generation of resting and action potential on excitable cells), but is applicable to a broad spectrum of topics in biomedicine.

Many processes in natural sciences can be described mathematically for instance by differential equations. In simple cases one single or a limited number of differential equations can be solved in closed form resulting in relatively easy equations which can directly been used for example in a JavaScript program of a HTML page. However, in complex systems a large number of intricate differential equations which are closely interacting are necessary to describe the dynamic behavior. In many cases, especially in life sciences, non-linear functional relations, which have been identified only empirically, have to be included. These systems cannot be solved analytically but have to be assessed by numerical methods. These techniques are suitable to solve (approximately) an initial value problem and calculate the temporal change of system variables. However, these calculations require an extensive software (e.g., programing language APL) and are therefore much too complex to be performed in a JavaScript environment.

In our system any complex calculations are located on the Web server for instance as a CGI script application (Fig. 1
                        ). To initiate the computation for a specific set of boundary conditions the user (student), who works at his own client computer, enters these values in a suitable form within the Web browser. These data are sent to the server and the simulation is performed. The results, which mostly describe the temporal change of several system parameters, will be re-transferred from the server to the browser either as a value list or as a graph and displayed to the student. The user can now vary the initial conditions and restart the simulation process to get an impression of the complex dynamic behavior. The interface for the user on the Web browser can be embedded in a teaching unit of an e-learning environment such ILIAS or MOODLE. Within this e-learning environment background knowledge of the biological process can be provided as well as an introduction of how to use the simulation. In addition, the logging of the results of systematic experiments can be managed in this teaching unit which could serve as a control for a successful work with the model.

In the following two examples will be described of how this structure can be used for complex e-learning units in life sciences.

Since glucose is an essential nutrient for the body, the stabilization of the blood glucose level under varying conditions (food intake, starvation) is indispensable. For this purpose the organism uses hormones in a strictly regulated control loop in which the actual glucose concentration is measured by the body resulting in an adequate release of the respective hormones. The most important hormone in this context is insulin which is released in the case of an elevated glucose level and which enables glucose uptake in many cells. The knowledge of this control loop is essential, since the widespread disease diabetes mellitus (DM) is a disturbance of the control loop. During treatment the physician takes over the role of the controller.

Since the exchange processes of glucose within the body are based on physical or biophysical laws (e.g., passive diffusion) the whole glucose and insulin system can be modeled by differential equations. The model used in the present teaching unit has been developed for clinical purposes to optimize the individual insulin dosage of DM patients [13]. During this application the model has been proven to result in a valid prediction of the time course of blood glucose level over a period of several days. For the calculations of the diffusive processes as well as the properties of the endogenous controller the body is split up in different compartments such as the plasma, the interstitial or the intracellular space. Fig. 2A schematically illustrates the structure of the glucose compartment model. The exchange processes are described by simple diffusion equations which depend on the concentration (c) differences between these compartments and the permeability, which varies from organ to organ. Most important is the fact that the uptake into the intracellular space in muscle, fat and some other tissues depends on the insulin level in the organism (“ins-d”=insulin-dependent in Fig. 2). For insulin a similar multi-compartment model can be formulated (Fig. 2B) in which the exchange of insulin between the compartments is described mathematically by diffusion equations. Both sub-models are linked together by the respective plasma concentration of the counterpart sub-model: The insulin concentration affects the glucose uptake into the cell and the glucose concentration controls the insulin release (for details see the description of the model in the Supplementary Material). In addition, the glucose resorption from an oral meal is calculated as well as the insulin absorption from a subcutaneous injection (as a possible treatment of diabetes). With the differential equations of this model together with several empirical non-linear relations (e.g., enteral glucose resorption or insulin absorption after s.c. injection) the hormonal control of the glucose homeostasis can be sufficiently described. The complete model including all differential equations and empirical non-linearities is shown in the Supplementary Material.

In our e-learning teaching unit this model runs on the Web server. It will be parameterized by the user to simulate an individual patient. Therefore, demographic information (age, sex, body weight) have to be entered, which determine the volume of the various compartments, as well as the composition of a test meal, which is decisive for the enteral glucose resorption. For the test meal the student selects foods and beverage from dropdown lists and determines the quantity of each component (Fig. 3
                        ). The aim for the student is to compose a meal which contains about 100g carbonhydrates. The continuation of the teaching module is only possible if a correct carbonhydrates content is reached.

These data are entered by the student in a screen mask within the e-learning unit on the browser (Fig. 3) and will be transferred to the server as parameters during each simulation. In order to illustrate the dynamic behavior of the system, the simulated time course of the plasma glucose and insulin concentration as well as the renal glucose excretion will be shown as a graph over a time interval of 300min.

In the first lesson of the teaching module the student is introduced into physiology of the control loop (Suppl. Fig. 1) by analyzing the time course of the variables after the meal. However, with the model deeper insight into control theory can be gained. The physiological controller in this loop acts as a proportional (P)-differential (D) controller. In the simulation each of these two controller properties can be switched off separately to give the student an impression on the impact of the respective controller property for glucose homeostasis. Therefore, the student selects with radio buttons which part of the controller is activated. In the next step, the endogenous controller can be switched off completely or the sensitivity of the insulin-dependent glucose uptake can be reduced in the model. These two mechanisms form the basis of type 1 and type 2 diabetes. The student now can simulate these different kinds of diabetic metabolism in two different severities (mild or severe) by selecting the respective pathomechanism with radio buttons and the simulation model will calculate the patient's glucose level as well as the renal glucose loss (Fig. 4
                        ). In all these teaching modules, the student can vary the respective simulation parameters and can directly compare the resulting time courses. In the next lesson the student can treat the diabetic patient with a subcutaneous injection of a rapid-acting insulin. Therefore he varies the insulin dose (from a dropdown list) as well as the time lag of injection relative to the meal. The goal for the student is to obtain a plasma glucose course comparable to that of the physiological control loop without reaching hypoglycemic episodes.

The origin of the membrane potential of neural and muscle cells is based on ion diffusion. During rest this potential is mostly the result of an outward K+ and an inward Cl− current whereas the action potential preferentially relies on Na+ and K+ currents. These diffusion processes can be described by differential equations so that the time course of the potential can be simulated under different conditions such as varying electrolyte concentrations or ion conductances as well as during the influence of an external electrical current [2,3]. This model can also be used to simulate the propagation of the action potential along the axon which depends on the internal resistance within the axon and on the membrane resistance and capacity. In physiological courses the students get to know the biophysical principles of the excitation processes as well as of the propagation of the action potential.

In the present e-learning teaching unit the model of the diffusion processes during resting and action potential as well as for action potential propagation in myelinated or unmyelinated axons is placed on the Web server. In the first teaching unit the student applies an external electrical stimulus to induce changes of the membrane potential possibly resulting in action potentials. Therefore, the student varies the strength and duration of stimulation current. The simulation model calculates the time course of different ion currents and of the membrane potential (Fig. 5
                        ). In the second teaching unit the student varies the passive membrane properties of a neural axon (resistance and capacity of the membrane and conductance of intracellular space). In order to get results which correspond to realistic axon properties, some typical sets of electrical parameters are combined. To select these parameters sets the student just uses radio buttons ensuring that only valid parameters are chosen for simulation. The model calculates the electrotonic dispersion of the potential along the axon depending on these passive membrane properties (Suppl. Fig. 2). By systematic variations of the relevant parameters the student gets a fundamental insight in the excitation processes of nerves and muscles but also in diseases in which the electrical properties of nerves are altered pathologically (e.g., multiple sclerosis).

In the actual system the simulation program on the Web server has been realized as a compiled CGI (Common Gateway Interface) server application on an Apache HTTP server running under Windows. The parameters necessary for the individual simulation (e.g., body weight of the patient, insulin dose) are transferred as command line parameters. The simulation program on the server runs the model with the individual parameter set and creates a graphical output of the time course of the respective output variable. Even though the graph is produced after the simulation has been finished the graphical representation uses an animated GIF format to give the user (student) the impression of a dynamical simulation process. This graph is re-transferred to the Web browser and displayed in the browser application. In principle, the simulated results also could be re-transferred as numerical values which can be presented as tables or single values.

The student works with the front end user interface which has been integrated in the learning management system ILIAS. Within ILIAS classical e-learning teaching units (using text, images, online tests) can be realized. ILIAS is also capable to run simple JavaScript programs. This feature is used to transfer the parameters selected by the student to the simulation on the server. The student uses pull down menus, radio buttons or numerical input fields for individual parameter selection (Figs. 3–5). Using pulldown menus or radio buttons, which are realized by HTML items in the ILIAS module, has the advantage over numerical input that the selection can be restricted which is necessary to ensure that the set of parameters lies in the valid range. Since every simulation model has only a limited range of valid parameters, using arbitrary numbers (by direct numerical input) could lead to incorrect calculations. The minimal JavaScript program within the ILIAS environment takes the selected values and forms a parameter string. For applications in which the model uses only a few (up to 10) parameters (as is the case in the above mentioned examples) this string is just appended to the HTTP command line for calling the CGI script and uses the simple GET method for data transfer. If an application uses more parameters these could be send by the POST method of HTTP. In this case the JavaScript program in the ILIAS environment has to form the structured string which is then transferred to the server.

The JavaScript program is also responsible for starting the simulation when the user has finished the parameter selection. For this the JavaScript forms a complete HTTP string containing the call of the CGI script program on the server and the list of parameters appended (e.g., http://141.48.52.247/cgi-bin/WebDiabSim.exe/ue1?pt=1x65x85&mz=102x41x22x165) which is then transferred to the server.

When the CGI application on the server is called, the program first separates the parameters from the string. These parameter are then used in the simulation part of the server application. After finishing the simulation the result which is mostly the time course of different variables is converted in a graph as JPG or GIF image. The HTML file in the ILIAS teaching module contains a placeholder for this image which is then displayed to the user. It would also be possible to send numeric values by the HTTP POST method to the browser which can then been used for other purposes.

The CGI server application has been realized as a Delphi program running under Windows. The numerical handling of the simulation is based on the software system CSMP III (Continuous System Modelling Program III) [18] which defines a meta language to formulate differential equations. For the simulation process different numerical integration algorithms are offered (Simpson, Runge–Kutta with fixed or variable step length) as well as numerical interpolation of stepwise defined empirical function. This CSMP functionality has been translated to Delphi which allows to define a model in a CSMP-like syntax. This model is then compiled and linked to the communication interface of the CGI server application to an executable file (Fig. 1). Besides the algorithms for numerical integration and simulation control the Delphi server program includes sections for HTTP handling (e.g., analysis of the parameter string, generating graphs from the simulation results and re-transfer of this graph to the browser).

In the teaching unit, the students have to do specific tasks with the help of the simulation model (e.g., “find the optimal time point and dose of an insulin treatment to obtain a physiological plasma glucose course in diabetic patients”). The results of the simulations together with the answers of the exercises are stored in the ILIAS unit.

@&#DISCUSSION@&#

The present project describes an approach for using complex numerical simulation in an e-learning environment. Simulation models are suitable to emulate biological processes under physiological as well as under pathological conditions [2–4,6–8,10]. An early comprehensive model of basic physiology was formulated by Guyton and Coleman [6] to describe the complete blood pressure control of the body. In the beginning, this model was used to get deeper physiological insight into the control loops of blood pressure in different time domains in order to elucidate underlying mechanisms of hypertension [5,19]. However, later on this model was expanded and has been further developed to an educational tool for human physiology and pathophysiology first as the HUMAN program [20] and later on as HumMod [16,21]. The HumMod model was, due to its complexity, realized as a standalone version which could be used in a classroom. Recently, the model has been adapted for distributed computation on a Web server (www.justphysiology.com). Another example of how numerical simulation can be integrated into an e-learning environment is the CARDIOSIM simulation program [4] which is embedded into an online training course for health care professionals [15]. The model also simulates the cardiovascular system focused on the heart and the pulmonary perfusion. However, the numerical calculations are realized in a standalone application which is then used in parallel to the e-learning teaching unit. This system would also benefit if the simulations were seamlessly embedded into the browser using the server for the complex calculations.

Hidalgo et al. presented another important application for simulation based e-learning [17]. The authors use a model-based approach to simulate the glucose concentration in the patient's plasma under various circumstances (e.g., physical exercise, diet). The aim of this system is the training of the patients themselves. In this case the patient should learn how to deal with these conditions and how to adapt the individual insulin dose in an intensified insulin therapy. The simulation takes into account the history (e.g., number of hypoglycemic events, level of ketone bodies) of the individual patient. The most important disadvantage of this approach [17] is the rather simple algorithm to simulate the course of glucose concentration. In order to embed the calculation into the Web browser environment, the authors use a rough approximation. With the system described in the present study the model calculations could be much more complex taking into account many more patient individual parameters.

A few attempts have been undertaken to use model simulation on a Web server for medical education. Very early Dwyer et al. [22] described a model-based program of basic electrophysiology in which the student could vary ion concentrations or membrane properties resulting in calculations of the membrane potential. More sophisticated physiological models using distributed calculations for modeling have been described recently. The project “JustPhysiology.com” is based on the HumMod model of integrative physiology [16]. Comparable to the standalone version of this program the student can vary model parameters and the simulation program calculates the time course of physiological parameters. A second approach also based on HumMod but also on a library of different physiological models (Physiolibrary, www.physiolibrary.org) has been presented by Kofranek et al. [23]. This system is also Web-based (www.physiomodel.org) and uses the universal simulation environment Modelica which makes it easy to expand the functional capabilities. Finally, approaches have been published outside the field of physiology, which also use distributed numerical modeling for educational purposes, e.g. in epidemiology [24].

In conclusion, the present study illustrates an approach to connect complex numerical simulations with an online e-learning environment. The principle of the system has been illustrated by two different examples, one of basic neurophysiology (action potential of neural cells) and the second of clinical pathophysiology (glucose-insulin control loop including insulin therapy of type 1 diabetic patients). However, the use of numerical simulation in teaching can be expanded to a broad spectrum of biomedical or natural scientific processes as far as the underlying principles can be described mathematically. At present the simulation model has been explicitly programmed in Delphi and then included into the CGI server application for the communication with the user through the internet. For this reason each application needs a dedicated server program in which the respective model is realized. However, in the future other designs could facilitate the development of the models. Instead of using classical programming languages a separation of the communication part of the CGI server application from the simulation part (Fig. 1) would be helpful. For the “pure” modelling task simulation software systems (e.g., Matlab/Simulink, Modelica) could be used. In this case only one universal communication application is needed on the server which can then start different simulation models [23]. Also the communication between the user and the simulation model but also between different simulation environments can be standardized by using the interface standard FMI (Functional Mock-up Interface). This standard which is presently residing under the roof of the Modelica Association allows that models of different software systems can be used together for simulation.

For this reason, the next step for the present project will be the use of an universal simulations system on the server instead of explicitly program each model. For the diabetes model an extension to different kinds of insulin (long-acting, basal insulin) or the simulation of insulin pumps will be the next steps which then allows the simulation over a longer period (several days instead of hours).

Simulation-based e-learning can be used in the pre-clinical as well as the clinical education of medical students. However, depending on the complexity of the simulation model such systems can also be used in further training of physicians but also, as demonstrated by Hidalgo et al. [17], for the education of patients to deal with their disease.

The authors declare that they have no conflict of interest.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cmpb.2016.01.012.

The following are the supplementary data to this article:
                        
                           
                        
                     
                  

@&#REFERENCES@&#

