@&#MAIN-TITLE@&#Solving multivariate polynomial systems using hyperplane arithmetic and linear programming

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new scalable algorithm for solving systems of multivariate polynomials.


                        
                        
                           
                           The concept of hyperplane arithmetic, which is used in our algorithm.


                        
                        
                           
                           A benchmark of example systems that are scalable in the number of variables.


                        
                        
                           
                           Implementation and comparison with previous algorithms.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Subdivision solver

Multivariate solver

Geometric constraints

@&#ABSTRACT@&#


               
               
                  Solving polynomial systems of equations is an important problem in many fields such as computer-aided design, manufacturing and robotics. In recent years, subdivision-based solvers, which typically make use of the properties of the Bézier/
                        B
                     -spline representation, have proven successful in solving such systems of polynomial constraints. A major drawback in using subdivision solvers is their lack of scalability. When the given constraint is represented as a tensor product of its variables, it grows exponentially in size as a function of the number of variables. In this paper, we present a new method for solving systems of polynomial constraints, which scales nicely for systems with a large number of variables and relatively low degree. Such systems appear in many application domains. The method is based on the concept of bounding hyperplane arithmetic, which can be viewed as a generalization of interval arithmetic. We construct bounding hyperplanes, which are then passed to a linear programming solver in order to reduce the root domain. We have implemented our method and present experimental results. The method is compared to previous methods and its advantages are discussed.
               
            

@&#INTRODUCTION@&#

Solving polynomial systems of equations is a crucial problem in many fields such as robotics  [1], computer aided design and manufacturing  [2,3], and many others  [4]. This problem, namely finding the roots of a set of multivariate polynomial equations, is a difficult one and various approaches have been proposed for it. Symbolical approaches, such as Gröbner bases and similar elimination-based techniques  [5], map the original system to a simpler one, which preserves the solution set. Polynomial continuation methods (also known as homotopy methods  [4]) start at roots of a simpler system and trace a continuous transformation of the roots to the desired solution. These methods handle the system in a purely algebraic manner, find all complex and real roots, and give general information about the solution set. Such methods are typically not well-suited if only real roots are required.

In recent years a family of solvers that focuses only on real roots in a given domain has been introduced. These methods are based on subdividing the domain and purging away subdomains that cannot contain a root. Thus, they are known as subdivision methods (sometimes such methods are referred to as exclusion or generalized bisection methods). Given 
                           n
                         implicit algebraic equations in 
                           n
                         variables,
                           
                              (1)
                              
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 =
                                 0
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 ,
                              
                           
                         we seek all 
                           
                              x
                           
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         that simultaneously satisfy Eq. (1).

A typical frame of a subdivision algorithm for finding the roots of a polynomial system 
                           F
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           =
                           
                              0
                           
                         over an 
                           n
                        -dimensional domain box 
                           b
                         within some predefined tolerance 
                           ϵ
                         goes as follows:


                        Algorithm: root_isolation_in_box


                        Input: 
                           F
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           ,
                           
                              Box
                           
                           
                           
                           b
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ×
                           ⋯
                           ×
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        
                     


                        Output: 
                           
                              list
                           
                           
                              〈
                              
                                 Box
                              
                              〉
                           
                           
                              boxes
                           
                        . 
                           
                              (1)
                              If 
                                    
                                       (
                                       max
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   max
                                                
                                             
                                          
                                          −
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   min
                                                
                                             
                                          
                                          )
                                       
                                       <
                                       ϵ
                                       )
                                    
                                  append 
                                    b
                                  to output 
                                    
                                       boxes
                                    
                                  and return.

Evaluate bound interval on 
                                    F
                                  in 
                                    b
                                 .

If bound does not contain 0, return (there is no solution in 
                                    b
                                 ).

Otherwise: Split 
                                    b
                                  into subdomains, 
                                    
                                       
                                          b
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          b
                                       
                                       
                                          2
                                       
                                    
                                 .

root_isolation_in_box 
                                    
                                       (
                                       F
                                       ,
                                       
                                          
                                             b
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          boxes
                                       
                                       )
                                    
                                 .

root_isolation_in_box 
                                    
                                       (
                                       F
                                       ,
                                       
                                          
                                             b
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          boxes
                                       
                                       )
                                    
                                 .

There are various modifications and enhancements to this general framework. The no-solution test in step (3) can be enhanced with single solution tests  [6,7], which enable stopping the subdivision process earlier. Then, the algorithm can switch to faster numeric methods such as the Newton–Raphson iteration, which converge to a single root. Another common modification performs a more sophisticated domain reduction  [8,9] in step (4), which enables to find tighter subdomains that contain roots and therefore accelerates the convergence of the algorithm.

A common approach for subdivision solvers, popular for its simplicity and wide generality, is interval arithmetic  [10–12]. In interval arithmetic a value 
                           x
                         is represented by a bounding interval 
                           X
                           =
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        . Let 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         be a scalar function in 
                           n
                         unknowns, defined in a box 
                           b
                           =
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ×
                           ⋯
                           ×
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        . An interval evaluation of 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                         in 
                           b
                         is an interval 
                           
                              [
                              
                                 
                                    F
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    F
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                         such that 
                           
                              
                                 F
                              
                              
                                 
                                    min
                                 
                              
                           
                           ≤
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           ≤
                           
                              
                                 F
                              
                              
                                 
                                    max
                                 
                              
                           
                         for any value of 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           ∈
                           b
                        . That is, an interval evaluation of a function for the box gives an interval that contains all possible values of the function evaluated on points in the box. Therefore, if the interval evaluation of 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           ∈
                           b
                         does not contain zero, then no root can exist in 
                           b
                        . This makes it suitable for use in the root isolation algorithm described above. There are many implementations of interval arithmetic software packages  [13,14] and in particular the ALIAS library  [15] implements interval methods for the determination of real roots of system of equations and inequalities. The main drawback of interval arithmetic is that the bounds given by the interval evaluation are not tight and with every arithmetic operation the looseness may accumulate. Thus, the interval evaluation may give bounds that are too loose to be useful.

Subdivision methods that are based on the tensorial Bézier
                           B
                        -spline representation  [16,2,8,9] give tight bounds for an exclusion test, based on the convex hull property of the basis. They have been implemented in recent years and applied successfully to a wide variety of problem domains  [2,3].

In 
                           B
                        -spline/Bézier subdivision solvers (e.g.,  [2]), the 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           ,
                           
                           i
                           =
                           1
                           ,
                           …
                           ,
                           n
                        , from Eq. (1) are usually represented as 
                           B
                        -spline or Bézier multivariate scalar functions, i.e.,  
                           
                              (2)
                              
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 ⋯
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             n
                                          
                                       
                                    
                                 
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             n
                                          
                                       
                                    
                                 
                                 
                                    
                                       B
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             k
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    )
                                 
                                 ⋯
                                 
                                    
                                       B
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             n
                                          
                                       
                                       ,
                                       
                                          
                                             k
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   n
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 B
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                           
                         are the 
                           
                              
                                 i
                              
                              
                                 j
                              
                           
                        ’th 
                           
                              
                                 k
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        -degree Bézier/
                           B
                        -spline basis functions.

Patrikalakis and Sherbrooke  [9] exploited the special properties of the Bézier representation for efficient reduction of the subdomain where roots can exist. In their Projected Polyhedron (PP) algorithm the points of the control polyhedron are projected onto two-dimensional planes and the convex hull of their projection is computed. The intersections of the convex hulls are then used to reduce the domain. To achieve more robustness, Maekawa and Patrikalakis  [17,18,3] extended the PP algorithm to operate in rounded interval arithmetic. This resulted in the Interval Projected Polyhedron (IPP) algorithm. Mourrain and Pavone  [8] proposed a modification of the IPP algorithm so that instead of using the convex hull of the projected control points, the upper and lower envelopes of the projections would be used as control polygons of two new Bézier forms. These Bézier forms still bound the original function from above and below, and therefore can be used as a tighter bound. They use a univariate root solver to find the roots of these Bézier forms, and use them to construct the bounding intervals. Mourrain and Pavone also suggest a preconditioning step that uses an orthogonalization approach, which makes the domain reduction more efficient.

A single-solution test for 
                           B
                        -spline/Bézier based solvers was proposed in  [19]. This termination criterion was based on computing the normal cones of the function using the Bézier or 
                           B
                        -spline representation. The single solution test is then implemented using a dual hyperplane representation of the normal cones (see  [6] for details).

As noted above, 
                           B
                        -spline/Bézier subdivision solvers have been used successfully in recent years. However, the usage of the tensor form has a scalability limitation  [20,21], which makes it impractical for systems with a large number of variables. It can be seen from Eq. (2), that the 
                           B
                        -spline/Bézier representation grows exponentially with the number of variables 
                           n
                        . Given a multivariate polynomial in 
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                         (i.e., of dimension 
                           n
                        , with 
                           n
                         unknowns 
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 x
                              
                              
                                 n
                              
                           
                        ) and degree 
                           d
                        , it is typically represented with 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    d
                                 
                              
                              )
                           
                         coefficients using the standard monomial form. However, it will be represented with 
                           O
                           
                              (
                              
                                 
                                    
                                       (
                                       d
                                       +
                                       1
                                       )
                                    
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         coefficients using the tensorial 
                           B
                        -spline/Bézier representation. Thus, the 
                           B
                        -spline/Bézier representation grows exponentially with 
                           n
                        , whereas the monomial representation only grows polynomially in 
                           n
                        . Therefore, when the degree 
                           d
                         is much smaller than 
                           n
                        , the 
                           B
                        -spline/Bézier representation is not efficient.

Furthermore, in many cases in practice, the actual monomial representation in standard form is sparse and consists of fewer coefficients. For example, representing the constant 1 in monomial form requires just one coefficient, compared to 
                           O
                           
                              (
                              
                                 
                                    
                                       (
                                       d
                                       +
                                       1
                                       )
                                    
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         in the dense Bernstein-Bézier representation. Similarly, representing a linear polynomial 
                           
                              
                                 a
                              
                              
                                 0
                              
                           
                           +
                           
                              
                                 a
                              
                              
                                 1
                              
                           
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 a
                              
                              
                                 2
                              
                           
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           +
                           ⋯
                           +
                           
                              
                                 a
                              
                              
                                 n
                              
                           
                           
                              
                                 x
                              
                              
                                 n
                              
                           
                         requires 
                           n
                         coefficients in the power basis and 
                           O
                           
                              (
                              
                                 
                                    
                                       (
                                       d
                                       +
                                       1
                                       )
                                    
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         in the Bernstein-Bézier basis. Due to its exponential growth and its dense representation, using 
                           B
                        -spline/Bézier subdivision methods is especially problematic for many engineering problems that are characterized by (or can be transformed to) systems of high-dimension (i.e., a large number of variables 
                           n
                        ) and relatively low degree 
                           d
                        . For example, computing the forward kinematics of a parallel robot  [1,8] can be transformed to a system of quadratic constraints, but the number of variables grows with each joint of the mechanism.

Little work has addressed the explosion of the 
                           B
                        -spline/Bézierform for high-dimensional polynomials. Elber and Grandine  [20] represent multivariates as expression trees and compute bounds on the expressions using interval arithmetic, to overcome this problem. Their approach is natural for symbolic manipulations of free-form curves and surfaces. It is thus suited to handle problems arising from manipulations of splines with a large number of control points (see  [20]). However, the bounds given by the interval arithmetic over the expression tree are not tight. Furthermore, the expression tree structure is not well suited for more advanced domain reduction algorithms such as the Projected Polyhedron algorithm. Fünfzig et al.  [21] proposed a method based on linear programming (LP  [22]) to address the high-dimensionality problem for quadratic polynomials. They use a linearization of the terms in the polynomials, representing each term of type 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                           
                              
                                 X
                              
                              
                                 j
                              
                           
                         as a separate variable of an LP problem. Tight bounds on these variables are constructed using Bernstein polyhedra (see  [21] for details) and these inequalities are solved using an LP solver, resulting in a domain reduction. While their method is successful in handling relatively high-dimensional systems of quadratic multivariate polynomials, it is not easily extended to higher degrees. Furthermore, the LP problem constructed by this method is relatively large since the number of variables depends on the number of terms in the problem, which is quadratic in the general case.

In this paper, we will present a new method for solving systems of multivariate polynomials, which scales nicely for systems with a large number of variables and relatively low degree. In Section  2, we will introduce the basic building blocks of our method and describe our algorithm. In Section  3 we will show experimental results comparing our algorithm to previous algorithms from the literature. We conclude in Section  4, where we discuss our results and future directions of research.

The general concept of our algorithm is to bound the multivariate polynomials by 
                        n
                     -dimensional hyperplanes and reduce the domain using linear programming. Our bounding scheme is based on the general bounding scheme presented in  [6], which can be computed for any dimension and any degree of Bézier hypersurfaces. However, computing the bounding hyperplanes directly from the dense Bézier representation is infeasible for high-dimensional problems. Therefore, we present a bounding scheme that is based on a sparse representation of the hypersurfaces. This bounding scheme is inspired by interval arithmetic. However, instead of summing bounding intervals of sub-expressions, as is done in interval arithmetic, we sum bounding hyperplanes of sub-expressions. Thus, we call our bounding scheme hyperplane arithmetic.

In Section  2.1 we recall the general hyperplane bounding scheme presented in  [6]. In Section  2.2 we propose a naive linear programming algorithm based on the bounding scheme presented in Section  2.1. This naive algorithm does not scale well and therefore is not feasible for high dimensional problems. We then explain in Section  2.3 the concept of hyperplane arithmetic and its use in bounding multivariate polynomials in sparse representation. In Section  2.4 we summarize our algorithm and show how its basic building blocks are assembled together.

Our method is based on the hyperplane bounding scheme presented in  [6], we therefore present it here for completeness. If we consider the functions 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         as hypersurfaces in 
                           
                              
                                 R
                              
                              
                                 n
                                 +
                                 1
                              
                           
                        , we can use the Bézier/
                           B
                        -spline representation to bound the hypersurface with two parallel hyperplanes.

Denote by promotion the process of converting the scalar function 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         to its vector function counterpart 
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                           :
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                           →
                           
                              
                                 R
                              
                              
                                 n
                                 +
                                 1
                              
                           
                           ,
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              ,
                              
                                 
                                    F
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        . The normal of the explicit scalar function 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                         is given by the vector 
                           
                              
                                 
                                    v
                                 
                              
                              
                                 
                                    i
                                 
                              
                           
                           =
                           
                              (
                              
                                 
                                    ∂
                                    
                                       
                                          F
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    ∂
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    ∂
                                    
                                       
                                          F
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    ∂
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                 
                              
                              ,
                              −
                              1
                              )
                           
                        . Thus, we can compute the normal of 
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                         at a given point by evaluating the partial derivatives at that point. The unit normal vector 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                    
                                    ¯
                                 
                              
                              
                                 i
                              
                           
                         is then 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                    
                                    
                                       
                                          i
                                       
                                    
                                 
                              
                              
                                 
                                    ‖
                                    
                                       
                                          
                                             v
                                          
                                       
                                       
                                          
                                             i
                                          
                                       
                                    
                                    ‖
                                 
                              
                           
                        .

The two bounding hyperplanes are constructed as follows. Compute the unit normal, 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                    
                                    ¯
                                 
                              
                              
                                 i
                              
                           
                           =
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                 
                              
                              )
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 +
                                 1
                              
                           
                        , of 
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                         at the midpoint of the subdomain. Then, project all control points of 
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                         onto 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                    
                                    ¯
                                 
                              
                              
                                 i
                              
                           
                         (see Fig. 1
                        (a) and (b) for an illustration on the one dimensional case).

Denote by 
                           
                              
                                 
                                    x
                                 
                              
                              
                                 
                                    max
                                 
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 +
                                 1
                              
                           
                         (resp. 
                           
                              
                                 
                                    x
                                 
                              
                              
                                 
                                    min
                                 
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 +
                                 1
                              
                           
                        ) the point on 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                    
                                    ¯
                                 
                              
                              
                                 i
                              
                           
                         that is the maximal (resp. minimal) projection of the control points onto 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                    
                                    ¯
                                 
                              
                              
                                 i
                              
                           
                        . Then, the 
                           
                              (
                              n
                              +
                              1
                              )
                           
                        -dimensional parallel bounding hyperplanes of 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                         are: 
                           
                              
                                 
                                    〈
                                    
                                       x
                                    
                                    −
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          
                                             min
                                          
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             
                                                
                                                   v
                                                
                                             
                                             ¯
                                          
                                       
                                       
                                          i
                                       
                                    
                                    〉
                                 
                                 =
                                 0
                                 ,
                                 
                                 
                                    〈
                                    
                                       x
                                    
                                    −
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             
                                                
                                                   v
                                                
                                             
                                             ¯
                                          
                                       
                                       
                                          i
                                       
                                    
                                    〉
                                 
                                 =
                                 0
                                 ,
                              
                           
                         where 
                           
                              x
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 +
                                 1
                              
                           
                         (see Fig. 1(c)).

Since we are only interested in bounding 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           =
                           0
                        , we only need the intersection of these two 
                           
                              (
                              n
                              +
                              1
                              )
                           
                        -dimensional hyperplanes with the 
                           
                              
                                 x
                              
                              
                                 n
                                 +
                                 1
                              
                           
                           =
                           0
                         hyperplane. Eliminating the 
                           
                              
                                 x
                              
                              
                                 n
                                 +
                                 1
                              
                           
                         coordinate, we remain with the 
                           d
                        -dimensional hyperplanes bounding 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           =
                           0
                        : 
                           
                              
                                 
                                    
                                       
                                          
                                             K
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 :
                                 
                                    〈
                                    
                                       x
                                    
                                    ,
                                    
                                       
                                          
                                             
                                                
                                                   v
                                                
                                             
                                             ¯
                                          
                                       
                                       
                                          i
                                       
                                    
                                    〉
                                 
                                 
                                    
                                       |
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       =
                                       0
                                    
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 ⋯
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       n
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       b
                                    
                                    
                                       i
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 ,
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          
                                             K
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 :
                                 
                                    〈
                                    
                                       x
                                    
                                    ,
                                    
                                       
                                          
                                             
                                                
                                                   v
                                                
                                             
                                             ¯
                                          
                                       
                                       
                                          i
                                       
                                    
                                    〉
                                 
                                 
                                    
                                       |
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       =
                                       0
                                    
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 ⋯
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       n
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       b
                                    
                                    
                                       i
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 b
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                           =
                           
                              〈
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                       
                                       ¯
                                    
                                 
                                 
                                    i
                                 
                              
                              〉
                           
                         and 
                           
                              
                                 b
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                           =
                           
                              〈
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                       
                                       ¯
                                    
                                 
                                 
                                    i
                                 
                              
                              〉
                           
                         (see Fig. 1(c)).

Denote by 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                         the half-spaces bounded by 
                           
                              
                                 
                                    
                                       K
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       K
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                        , oriented so that 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           =
                           0
                         is on their positive side. 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           =
                           0
                         is thus bounded in the region 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                           ⋂
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                        .

In  [6] the authors presented this method of bounding a multivariate polynomial and used it to check for subdomains that contain no solution. The authors suggested there that LP methods can be used for this check, but did not implement such a method in practice.

It should be noted that while this bounding scheme is general, it is not necessarily optimal. However, finding an optimal oriented bounding box of a set of points is hard even in 
                           
                              
                                 R
                              
                              
                                 3
                              
                           
                           [23]. Therefore, this general scheme, which can easily be implemented for any dimension and degree, is a good choice for our needs. Still, for special cases, tighter specialized bounds can be implemented.

For example, a tighter bound of the function 
                           F
                           
                              (
                              x
                              )
                           
                           =
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                         in a domain 
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        , can be computed using the convexity property of the function. The function graph is bounded from above by the line connecting its endpoints and from below by the parallel line tangent to the function. Thus, it is bounded by: 
                           
                              
                                 a
                                 x
                                 −
                                 
                                    
                                       
                                          (
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      
                                                         min
                                                      
                                                   
                                                
                                                +
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ≤
                                 F
                                 
                                    (
                                    x
                                    )
                                 
                                 ≤
                                 a
                                 x
                                 −
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          
                                             min
                                          
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                    )
                                 
                                 ,
                              
                           
                         where 
                           a
                           =
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       
                                          min
                                       
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 
                                    
                                       x
                                    
                                    
                                       
                                          max
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 
                                    
                                       x
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 −
                                 
                                    
                                       x
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 
                                    min
                                 
                              
                           
                           +
                           
                              
                                 x
                              
                              
                                 
                                    max
                                 
                              
                           
                        . We use such a specialized scheme in our implementation (see also Section  3.2).

Based on the hyperplane bounding scheme from Section  2.1, we can construct an algorithm that uses linear programming for domain reduction. The main idea of the algorithm is to bound the functions 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           =
                           0
                         by a pair of bounding hyperplanes 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                         for all 
                           1
                           ≤
                           i
                           ≤
                           n
                        . Furthermore, the domain 
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ×
                           ⋯
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ⋯
                           ×
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                         under consideration is bounded by the 
                           2
                           n
                         hyperplanes: 
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 
                                    min
                                 
                              
                           
                           ≤
                           x
                           ≤
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 
                                    max
                                 
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 x
                              
                              
                                 n
                              
                              
                                 
                                    min
                                 
                              
                           
                           ≤
                           x
                           ≤
                           
                              
                                 x
                              
                              
                                 n
                              
                              
                                 
                                    max
                                 
                              
                           
                        . Thus, we can give these 
                           4
                           n
                         bounding hyperplanes as inequalities to a linear programming solver (e.g., the GLPK library  [24], which we use in our implementations, see Section  3). Assigning goal functions of maximal and minimal 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                         will result in 
                           2
                           n
                         linear programming problems, whose solution is a tighter 
                           n
                        -dimensional box bounding the domain.

The algorithm then follows the general scheme described in Section  1.1, and the domain is reduced in Step (3) using the linear programming procedure outlined above.

The algorithm can be described as follows:


                        Algorithm: Naive_LP_root_isolation


                        Input: 
                           F
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           ,
                           
                              Box
                           
                           
                           
                           b
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ×
                           ⋯
                           ×
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        
                     


                        Output: 
                           
                              list
                           
                           
                              〈
                              
                                 Box
                              
                              〉
                           
                           
                              boxes
                           
                        
                        
                           
                              (1)
                              If 
                                    
                                       (
                                       max
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   max
                                                
                                             
                                          
                                          −
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   min
                                                
                                             
                                          
                                          )
                                       
                                       <
                                       ϵ
                                       )
                                    
                                  append 
                                    b
                                  to output 
                                    
                                       boxes
                                    
                                  and return.

Bound 
                                    F
                                  in 
                                    b
                                  and reduce the domain: 
                                    
                                       (a)
                                       Bound 
                                             
                                                
                                                   F
                                                
                                                
                                                   i
                                                
                                             
                                           by two parallel hyperplanes, using scheme from Section  2.1.

Perform 
                                             2
                                             n
                                           LP problems to compute new 
                                             
                                                [
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         min
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                                ]
                                             
                                           values for each 
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                          .

If one of the LP problems is infeasible, return (there is no solution in 
                                             b
                                          ).

Subdivide each 
                                             
                                                
                                                   F
                                                
                                                
                                                   i
                                                
                                             
                                           to the new domain with the new 
                                             
                                                [
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         min
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                                ]
                                             
                                           for each 
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                          .

Split 
                                    b
                                  into subdomains, 
                                    
                                       
                                          b
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          b
                                       
                                       
                                          2
                                       
                                    
                                  along the maximal axis of 
                                    b
                                 .

Naive_LP_root_isolation 
                                    
                                       (
                                       F
                                       ,
                                       
                                          
                                             b
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          boxes
                                       
                                       )
                                    
                                 .

Naive_LP_root_isolation 
                                    
                                       (
                                       F
                                       ,
                                       
                                          
                                             b
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          boxes
                                       
                                       )
                                    
                                 .

Note that the LP reduction in Step (2) may not be satisfactory. For example, if two roots are in the domain, then the reduction step cannot reduce the domain to be smaller than the distance between the roots, since both roots should be inside the reduced domain. Still, if this happens, Step (3) will split the domain (just as is done in the basic root_isolation_in_box algorithm) until the two roots are separated.

While this algorithm enhances the basic root isolation scheme by LP-based domain reduction, it does not address the scalability problem. Namely, the procedure described in Section  2.1 requires going over all the control points of the hypersurface and project them onto the normal vector. Thus, as the dimension grows the procedure runtime complexity grows exponentially and becomes infeasible. We have implemented this algorithm for reference (see Section  3) and denote it a naive LP algorithm. To make it feasible for high-dimensional systems, we need to compute a bound on the function with a procedure that does not grow exponentially. In Section  2.3 we will explain our approach to this problem.

Using the bounding scheme from Section  2.1 requires projecting all of the control points onto the normal of the hypersurface. Thus, the construction of the bounding hyperplanes is exponential in the number of variables (i.e., the dimension) 
                           n
                         of the system. Therefore, we wish to compute bounding hyperplanes for high-dimensional systems using a more sparse representation.

Let the polynomial expression be represented in its monomial form. Then: 
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       M
                                    
                                    
                                       j
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 M
                              
                              
                                 j
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                         is the j’th monomial term of the polynomial and 
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                         is its coefficient. The monomial terms of the polynomial consist of the product: 
                           
                              
                                 M
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       
                                          
                                             α
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       
                                          
                                             α
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ⋯
                                 
                                    
                                       x
                                    
                                    
                                       n
                                    
                                    
                                       
                                          
                                             α
                                          
                                          
                                             n
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 α
                              
                              
                                 i
                              
                           
                         are integer degrees and the sum of 
                           
                              
                                 α
                              
                              
                                 i
                              
                           
                         is less than or equal to the polynomial degree 
                           d
                        . For an illustration, the polynomial 
                           F
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           =
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           +
                           
                              
                                 x
                              
                              
                                 2
                              
                              
                                 2
                              
                           
                         has two monomial terms, namely 
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 x
                              
                              
                                 2
                              
                              
                                 2
                              
                           
                        . Note that in our context, of a relatively low degree compared to the dimension, the number of variables 
                           
                              
                                 x
                              
                              
                                 k
                              
                           
                         actually participating in the monomial (i.e., with 
                           
                              
                                 α
                              
                              
                                 k
                              
                           
                           ≠
                           0
                        ) is relatively small since it cannot exceed 
                           d
                        . Furthermore, although the total number of monomial terms in a polynomial is 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    d
                                 
                              
                              )
                           
                        , in many cases in practice the polynomial is sparse and the actual number of monomial terms is much smaller (see examples in Section  3).

In interval arithmetic, a sub-expression 
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                         is bounded by an interval 
                           
                              [
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        , and the sum of sub-expressions 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           +
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                         is then bounded by the interval 
                           
                              [
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              +
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              +
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        . A generalization of this idea is to bound a sub-expression 
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                         not by two values but by two functions 
                        
                           
                              [
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              ]
                           
                        . Thus, if 
                           
                              
                                 f
                              
                              
                                 j
                              
                              
                                 
                                    min
                                 
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           ≤
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           ≤
                           
                              
                                 f
                              
                              
                                 j
                              
                              
                                 
                                    max
                                 
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                         for any point 
                           
                              x
                           
                         in the domain and similarly 
                           
                              
                                 f
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           ≤
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           ≤
                           
                              
                                 f
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                        , then we get:
                           
                              
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 ≤
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 ≤
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 .
                              
                           
                        
                     

In our context, the sub-expressions are the monomials 
                           
                              
                                 M
                              
                              
                                 j
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                         of the polynomial and the bounding functions are linear functions, i.e., hyperplanes. Therefore, we call this generalization of interval arithmetic hyperplane arithmetic.
                           1
                        
                        
                           1
                           Note that the analogy to interval arithmetic is not full as we do not support multiplication of two sub-expressions, only addition, subtraction and multiplication by a scalar.
                        
                     

For an illustration, consider the polynomial 
                           F
                           =
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           +
                           
                              
                                 x
                              
                              
                                 2
                              
                              
                                 2
                              
                           
                           −
                           1
                         in the domain 
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                           ×
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                         (see also Fig. 2
                        ). We can bound the first monomial term from above by the hyperplane 
                           
                              
                                 f
                              
                              
                                 1
                              
                              
                                 
                                    max
                                 
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                         (since in the domain 
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           ≤
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                        ) and from below by 
                           
                              
                                 f
                              
                              
                                 1
                              
                              
                                 
                                    min
                                 
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           −
                           0.25
                         (since in the domain 
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           ≥
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           −
                           0.25
                        ). Similarly, for the second term the bounds will be 
                           
                              
                                 f
                              
                              
                                 2
                              
                              
                                 
                                    max
                                 
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 f
                              
                              
                                 2
                              
                              
                                 
                                    min
                                 
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           −
                           0.25
                        . The total bounds on 
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           +
                           
                              
                                 x
                              
                              
                                 2
                              
                              
                                 2
                              
                           
                         is therefore: 
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 0.5
                                 ≤
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 ≤
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                         For the unit term (and also for linear terms) the bound is tight and thus 
                           
                              
                                 f
                              
                              
                                 3
                              
                              
                                 
                                    min
                                 
                              
                           
                           =
                           −
                           1
                           =
                           
                              
                                 f
                              
                              
                                 3
                              
                              
                                 
                                    max
                                 
                              
                           
                        . When we add 
                           
                              
                                 f
                              
                              
                                 3
                              
                           
                         to the expression we received (i.e., subtract 1 from the upper and lower bounds), we get the total bounds on 
                           F
                           =
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           +
                           
                              
                                 x
                              
                              
                                 2
                              
                              
                                 2
                              
                           
                           −
                           1
                         (see Fig. 2): 
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 1.5
                                 ≤
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 1
                                 ≤
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 1
                                 .
                              
                           
                        
                     

Bounding any monomial term by two hyperplanes can be done using the procedure described in Section  2.1. We store the different term types as representative multivariate hypersurfaces in free-form representation.
                           2
                        
                        
                           2
                           In our implementation we use IRIT  [25] multivariates.
                         For example, for a degree-3 system we store the following types of hypersurfaces: one-variable hypersurfaces–
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 3
                              
                           
                        , two-variable hypersurfaces–
                           x
                           y
                           ,
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           y
                        , and a three-variable hypersurface 
                           x
                           y
                           z
                        . When a monomial term of type 
                           
                              
                                 x
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                         is encountered, for example, we reduce the representative hypersurface 
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           y
                         to the subdomain 
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ×
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                         and bound the 
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           y
                         hypersurface in the new subdomain by two hyperplanes 
                           
                              
                                 K
                              
                              
                                 
                                    min
                                 
                              
                           
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and 
                           
                              
                                 K
                              
                              
                                 
                                    max
                                 
                              
                           
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        .

Once a monomial term 
                           
                              
                                 M
                              
                              
                                 j
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                         is bounded by two hyperplanes 
                           
                              
                                 K
                              
                              
                                 j
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 K
                              
                              
                                 j
                              
                              
                                 
                                    max
                                 
                              
                           
                        , we multiply it by its constant coefficient 
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                        . If the coefficient is positive, then we just multiply the hyperplane coefficients by 
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                        . For a negative 
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                        , however, we have to switch between the lower and upper hyperplanes since if:
                           
                              
                                 
                                    
                                       K
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 ≤
                                 f
                                 ≤
                                 
                                    
                                       K
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                           <
                           0
                         then: 
                           
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 ≤
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 f
                                 ≤
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Thus, to bound the polynomial 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                              
                           
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                           
                              
                                 M
                              
                              
                                 j
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                        , the bounding procedure, goes over all terms 
                           
                              
                                 M
                              
                              
                                 j
                              
                           
                        , bounds them, and multiplies by their coefficient 
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                        . The upper and lower bounding hyperplanes 
                           
                              
                                 K
                              
                              
                                 i
                                 j
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 K
                              
                              
                                 i
                                 j
                              
                              
                                 
                                    max
                                 
                              
                           
                         of each term are summed resulting in two hyperplanes 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 K
                              
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                         that bound 
                           
                              
                                 F
                              
                              
                                 i
                              
                           
                        .

The advantage of hyperplane arithmetic over interval arithmetic (for addition and subtraction) is that it gives tighter bounds since the bound is a linear function and not a constant function. For linear functions, the hyperplane arithmetic is actually exact. Furthermore, the linear bounds can then be used by an efficient LP method for domain reduction.

The advantage of hyperplane arithmetic over the naive method from Section  2.1 is that it does not require the full dense Bézier representation for its computation. The sparse monomial representation suffices to compute the bounding hyperplanes. In our implementation we use a sparse representation that stores only the monomial terms actually participating in the system (i.e., 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    d
                                 
                              
                              )
                           
                         in the worst case, but less for sparse systems).

Using all the building blocks presented in the preceding sections, our algorithm is now straightforward. Basically, we implement the naive LP algorithm from Section  2.2, but use the hyperplane arithmetic from Section  2.3 to bound the function from above and below.

The algorithm can therefore be described as follows:


                        Algorithm: LP_root_isolation_using_HP_arithmetic


                        Input: 
                           F
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           ,
                           
                              Box
                           
                           
                           
                           b
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                           ×
                           ⋯
                           ×
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                        
                     


                        Output: 
                           
                              list
                           
                           
                              〈
                              
                                 Box
                              
                              〉
                           
                           
                              boxes
                           
                        
                        
                           
                              (1)
                              If 
                                    
                                       (
                                       max
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   max
                                                
                                             
                                          
                                          −
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                
                                                   min
                                                
                                             
                                          
                                          )
                                       
                                       <
                                       ϵ
                                       )
                                    
                                  append 
                                    b
                                  to output 
                                    
                                       boxes
                                    
                                  and return.

Bound 
                                    F
                                  in 
                                    b
                                  using hyperplane arithmetic and LP: 
                                    
                                       (a)
                                       Bound 
                                             
                                                
                                                   F
                                                
                                                
                                                   i
                                                
                                             
                                           by two parallel hyperplanes, using hyperplane arithmetic of bounds on its terms (Section  2.3).

Perform 
                                             2
                                             n
                                           LP problems to compute new 
                                             
                                                [
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         min
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                                ]
                                             
                                           values for each 
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                          .

If one of the LP problems is infeasible, return (there is no solution in 
                                             b
                                          ).

Set 
                                             b
                                           to be the new domain with the new 
                                             
                                                [
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         min
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                                ]
                                             
                                           for each 
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                          .

Split 
                                    b
                                  into subdomains, 
                                    
                                       
                                          b
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          b
                                       
                                       
                                          2
                                       
                                    
                                  along the maximal axis of 
                                    b
                                 .

LP_root_isolation_using_HP_arithmetic 
                                    
                                       (
                                       F
                                       ,
                                       
                                          
                                             b
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          boxes
                                       
                                       )
                                    
                                 .

LP_root_isolation_using_HP_arithmetic 
                                    
                                       (
                                       F
                                       ,
                                       
                                          
                                             b
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          boxes
                                       
                                       )
                                    
                                 .

Note that unlike the dense Bézier
                           B
                        -spline representation, the splitting in Steps (3) and (2.d) does not require a full subdivision process in a sparse representation. Only the box is updated and the subdivision is applied for each term when bounding it in Step (2.a).

@&#EXPERIMENTAL RESULTS@&#

In this section we present several examples of solving polynomial systems and compare our method to implementations of some of the previous subdivision methods from the literature.

We have implemented the hyperplane arithmetic linear programming algorithm presented in this paper (Section  2.4) and denote it in the following sections by HPA_LP. Another method we have implemented for comparison is the naive linear programming algorithm described in Section  2.2, we denote it by Naive_LP. Furthermore, we have implemented a basic variant of the Bernstein Polytope LP method described in  [21], which we denote by Bernst_LP.

We also compare our method to subdivision methods implemented in the IRIT library  [25]. IRIT has several flags that enable it to switch between subdivision methods. We use two IRIT algorithm variants. The first IRIT implementation is a basic subdivision that performs no reduction, which was the initial algorithm presented in  [2], we denote this method by IRIT_Naive. The second method incorporates a reduction scheme that is a variant of the projected polyhedron method from  [9,3], we denote this method by IRIT_PP.

In all the implementations of the LP-based methods (HPA_LP, Naive_LP, Bernst_LP), we used the GNU Linear Programming Kit (GLPK 4.45  [24]), with the basic simplex method. We also made use of the IRIT library for basic geometric and multivariate operations in Bézier and 
                        B
                     -spline bases. All tests were run on a Windows 7 system with an Intel Core i7 CPU (1.6 GHz) and 10 GB of installed memory.

The main goal of our tests is to see how our method scales in comparison with other methods. Therefore, to test our method, we concentrated on problems that can easily be scaled and that their solutions can easily be verified. In all the following examples/tests the subdivision was performed up to a tolerance of 
                        ϵ
                        =
                        1
                        
                           
                              0
                           
                           
                              −
                              3
                           
                        
                     .

The first test benchmark we devised in order to compare the scaling of the different methods is the following system: 
                           
                              (3)
                              
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ≠
                                       i
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 1
                                 =
                                 0
                                 .
                              
                           
                        
                     

For 
                           n
                           =
                           3
                        , this system represents the intersection of three cylinders of radius 1 aligned along the main axes (see Fig. 3
                        
                        ).

It is easy to verify, by subtracting every consecutive pair of equations in the system, that 
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 j
                              
                              
                                 2
                              
                           
                         for all 
                           i
                           ,
                           j
                        . Thus, the solution of this system is given by:
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 ±
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

From the form of the solution it is clear that there are 
                           
                              
                                 2
                              
                              
                                 n
                              
                           
                         solutions (corresponding to the 
                           
                              
                                 2
                              
                              
                                 n
                              
                           
                         combinations of plus and minus) in the 
                           
                              
                                 
                                    [
                                    −
                                    1
                                    ,
                                    1
                                    ]
                                 
                              
                              
                                 n
                              
                           
                         domain. However, we were mostly interested the comparison between the different reduction schemes. Therefore, we tested the different methods in the 
                           
                              
                                 
                                    [
                                    0
                                    ,
                                    1
                                    ]
                                 
                              
                              
                                 n
                              
                           
                         domain, where only a single root exists (the all-positive root).


                        Table 1 presents the running times (in milliseconds) for the different methods. Note, that for the IRIT_Naive, IRIT_PP and Naive_LP methods, a preprocessing step is performed, which converts the standard polynomial form to the dense Bézier/
                           B
                        -Spline representation. This preprocessing time should be added to the computation times for these methods to get their total computation times. In Figs. 4–11
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        , the values are plotted without taking the preprocessing time into consideration.


                        Fig. 4 shows a graph comparison of the different methods for 
                           n
                           =
                           3
                           ,
                           …
                           ,
                           7
                        . As can be seen the naive Bézier representation methods IRIT_Naive and Naive_LP perform poorly on this input. Even though it uses a dense Bézier representation, the IRIT_PP method performs rather well. However, as can be seen in Fig. 5, its runtime deteriorates as 
                           n
                         increases. Also, as noted above, the slow preprocessing step should also be taken into account. The performance of the Bernst_LP method is exceptionally good on this input.

We extend the hypercylinder system from Section  3.1 to the cubic system: 
                           
                              (4)
                              
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ≠
                                       i
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                    
                                       3
                                    
                                 
                                 −
                                 1
                                 =
                                 0
                                 .
                              
                           
                        
                     

The solution of this system is given by: 
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                       
                                    
                                    
                                       3
                                    
                                 
                                 .
                              
                           
                         Therefore, there is only a single real solution for this system. Fig. 6 shows the surfaces represented by this system for 
                           n
                           =
                           3
                        .

We tested the different methods in the 
                           
                              
                                 
                                    [
                                    0
                                    ,
                                    1
                                    ]
                                 
                              
                              
                                 n
                              
                           
                         domain. As noted in Section  1.2, the Bernst_LP method is not extended to higher degrees and therefore was not tested on this system. Table 2 presents the running times (in milliseconds) for the different methods.

As can be seen in Fig. 7, the naive Bézier representation methods IRIT_Naive and Naive_LP perform poorly on this input as well. While the IRIT_PP method performs better, its runtime still increases as 
                           n
                         grows and it has a large overhead in the preprocessing step.

As mentioned in Section  2.1, the general hyperplane bounding scheme is not necessarily optimal. Therefore, we wanted to test the effect of tighter specialized hyperplane bounds.

For 
                           F
                           
                              (
                              x
                              )
                           
                           =
                           
                              
                                 x
                              
                              
                                 3
                              
                           
                         in a domain 
                           
                              [
                              
                                 
                                    x
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              ]
                           
                         such a tighter bound is given by: 
                           
                              
                                 a
                                 x
                                 +
                                 l
                                 ≤
                                 F
                                 
                                    (
                                    x
                                    )
                                 
                                 ≤
                                 a
                                 x
                                 +
                                 u
                                 ,
                              
                           
                         where 
                           a
                         is the slope between the endpoints: 
                           
                              
                                 a
                                 =
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             
                                                max
                                             
                                          
                                          
                                             3
                                          
                                       
                                       −
                                       
                                          
                                             x
                                          
                                          
                                             
                                                min
                                             
                                          
                                          
                                             3
                                          
                                       
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       −
                                       
                                          
                                             x
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       
                                          max
                                       
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       
                                          min
                                       
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                         For a totally positive domain (i.e., 
                           
                              
                                 x
                              
                              
                                 
                                    min
                                 
                              
                           
                           >
                           0
                        ), 
                           u
                         can be computed as the line passing through the point 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    
                                       min
                                    
                                 
                                 
                                    3
                                 
                              
                              )
                           
                        : 
                           
                              
                                 u
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       
                                          min
                                       
                                    
                                    
                                       3
                                    
                                 
                                 −
                                 a
                                 
                                    
                                       x
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 ,
                              
                           
                         and 
                           l
                         can be computed for the tangent line with slope 
                           a
                        : 
                           
                              
                                 l
                                 =
                                 −
                                 
                                    
                                       2
                                       a
                                    
                                    
                                       3
                                    
                                 
                                 
                                    
                                       
                                          
                                             a
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                                 .
                              
                           
                         Similar bounds are derived for totally negative domains or domains containing zero.

To test the effect of these tighter bounds, we implemented a version of our algorithm without the optimized bounds described above. We denote this version HPA_LP_no_opt. Fig. 8 shows a comparison of the two versions. As can be seen, the effect of tighter hyperplane bounds is indeed significant.

The Broyden Tridiagonal system is a classic test function used in the optimization community  [26,27]. The system is defined by: 
                           
                              
                                 
                                    
                                       (
                                       3
                                       −
                                       2
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    −
                                    2
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    1
                                    =
                                    0
                                 
                              
                              
                                 
                                    ⋯
                                 
                              
                              
                                 
                                    
                                       (
                                       3
                                       −
                                       2
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    −
                                    
                                       
                                          x
                                       
                                       
                                          i
                                          −
                                          1
                                       
                                    
                                    −
                                    2
                                    
                                       
                                          x
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    +
                                    1
                                    =
                                    0
                                    ,
                                    
                                    i
                                    =
                                    2
                                    ,
                                    …
                                    ,
                                    n
                                    −
                                    1
                                 
                              
                              
                                 
                                    ⋯
                                 
                              
                              
                                 
                                    
                                       (
                                       3
                                       −
                                       2
                                       
                                          
                                             x
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                    −
                                    
                                       
                                          x
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    +
                                    1
                                    =
                                    0
                                    .
                                 
                              
                           
                        
                     

As can be seen, the system can easily be constructed for increasing 
                           n
                         values. Furthermore, it has two real roots in the domain 
                           
                              
                                 
                                    [
                                    −
                                    2
                                    ,
                                    2
                                    ]
                                 
                              
                              
                                 n
                              
                           
                           [28]. While as an optimization problem it may not necessarily be required to compute all the roots, in our context we are interested in computing all real roots of the system within the domain.


                        Table 3 presents the running times (in milliseconds) for the different methods. As expected, while the methods using Bézier representation (namely IRIT_PP, IRIT_Naive and Naive_LP) are relatively fast for small 
                           n
                         values, they become slower as 
                           n
                         increases. In particular, the Bernst_LP method becomes faster than the Naive_LP and IRIT_PP methods when 
                           n
                         is greater than 5 (see Fig. 9). A somewhat surprising result is the fact that the IRIT_Naive method performs better than the IRIT_PP and Naive_LP methods (see Table 3). This is contrary to our expectations that the more sophisticated methods will outperform the naive ones. Another interesting result is the relatively poor performance of the sparse Bernst_LP method on this input. Even so, as expected, for a sufficiently large 
                           n
                         (7 in our case) the Bernst_LP method outperforms all the dense Bézier representation methods including IRIT_Naive.

As can be seen in Fig. 10, our HPA_LP algorithm works well on this benchmark. This might be related to the fact that the Broyden input contains many linear terms. Since for linear terms our bounds are exact, the total bounds on the polynomials are tight. In fact, it should be noted that for a totally linear system, the HPA_LP method returns the solution within one iteration of the LP reduction.

The previous examples have all been sparse systems. To test the behavior of a dense system we use the following system taken from  [29], where it was used in the context of network management algorithms. In our context, we use it as an example of a dense scalable system with verifiable roots.

The system is given by the equations: 
                           
                              (5)
                              
                                 ∀
                                 l
                                 :
                                 
                                    
                                       F
                                    
                                    
                                       l
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          l
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       l
                                    
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    −
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 −
                                 
                                    
                                       δ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                l
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 0
                                 ,
                              
                           
                         where 
                           δ
                         is a given (user-defined) constant and 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           ,
                           
                           i
                           =
                           1
                           ,
                           …
                           ,
                           n
                         are the variables of the system. As can be seen, this is a quadratic system containing all the 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 2
                              
                           
                        , and 
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                         monomial term types. The 
                           
                              
                                 F
                              
                              
                                 l
                              
                           
                         functions also have a geometric meaning. For 
                           
                              
                                 δ
                              
                              
                                 2
                              
                           
                           <
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                         they can be viewed as 
                           l
                        -dimensional ellipsoids (in 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    l
                                 
                              
                              )
                           
                        -space) with their main axis along the vector 
                           
                              (
                              1
                              ,
                              1
                              ,
                              …
                              ,
                              1
                              )
                           
                         and going through the origin.

This system is triangular and has an analytic solution that can be computed recursively. The solution point 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         is given by the following recursive equation (see  [29] for details): 
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 
                                    
                                       1
                                       +
                                       2
                                       
                                          
                                             δ
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             l
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       1
                                       −
                                       
                                          
                                             δ
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 
                                 or
                                 
                                 
                                    
                                       x
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 0
                                 ,
                              
                           
                         with 
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       1
                                       −
                                       
                                          
                                             δ
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 
                                 or
                                 
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 0
                                 .
                              
                           
                        
                     

The total number of solutions in 
                           
                              
                                 
                                    [
                                    0
                                    ,
                                    ∞
                                    )
                                 
                              
                              
                                 n
                              
                           
                         is therefore 
                           
                              
                                 2
                              
                              
                                 n
                              
                           
                         (in every step of the recursion one can choose 0 or the recursion formula, so the solution is equivalent to 
                           n
                        -digit binary numbers). In the strictly positive domain 
                           
                              
                                 
                                    (
                                    0
                                    ,
                                    ∞
                                    )
                                 
                              
                              
                                 n
                              
                           
                         the system has a single solution.

To compare the convergence of the different methods, we tested the system for 
                           δ
                           =
                           0.5
                         and for 
                           n
                           =
                           2
                           ,
                           …
                           ,
                           6
                        . The initial domain was set to 
                           
                              
                                 
                                    [
                                    ϵ
                                    ,
                                    20
                                    ]
                                 
                              
                              
                                 n
                              
                           
                        , where 
                           ϵ
                           =
                           0.01
                        . Table 4 summarizes the results.


                        Fig. 11 shows a graph comparison of the different methods for 
                           n
                           =
                           2
                           ,
                           …
                           ,
                           6
                        . As can be seen in the figure, for this input our HPA_LP algorithm performs much better than the other algorithms. It is interesting to note that for this benchmark too the IRIT_Naive algorithm performs better than the IRIT_PP algorithm and both perform better than the Bernst_LP algorithm.

In this paper, we have presented a new method for solving polynomial systems, which is based on a representation that scales nicely for systems with relatively low degree and many variables. The method is based on the concept we termed bounding hyperplane arithmetic, which can be viewed as a generalization of interval arithmetic. The advantages of this method compared to interval arithmetic methods is in its tight bounds. Compared to previous subdivision methods, which are based on dense Bézier/Bspline representations, the sparse representation used in our method enables better scaling of the problems, as the number of variables grows. On the other hand, our bounding method is general enough to be implemented for any degree. The experimental results show that our method compares favorably to previous methods from the literature.

Our algorithm can be improved and extended in several ways. Adding inequality constraints to the system can be done by bounding the inequality constraint with a hyperplane from only one side (above or below depending on the inequality). The additional hyperplanes from the inequalities only enhance the LP problem and therefore might be incorporated into the algorithm without modifying its flow. As shown in Section  3.2, the tightness of the bounds is an important factor in the performance of the algorithm. Thus, any specialized bound that will produce tighter bounding hyperplanes compared to the general scheme from Section  2.1, will result in better reduction and improved performance. Such tighter bounds might be based on the piecewise linear upper and lower bounds termed slefes (subdividable linear efficient function enclosures), which were described in  [30]. The computation of slefes will incur an overhead compared to using control points. However, specialized bounds that are based on slefes are expected to be tighter than the general bounding scheme since the slefe points bound the polynomial more tightly than the control points  [31]. Further research should also be conducted on subdivision stopping criteria, which can work on our sparse representation.

Solving polynomial systems is a difficult and important problem. Different parameters affect the efficiency of the different methods. In this paper we concentrated on the number of variables of the system. Other parameters are the system degree and its denseness. The experimental results in Section  3 seem to indicate that no one solution method is superior for all inputs. This leads us to believe that further research should be conducted to compare different methods and discover specialized algorithms that can be expected to work better on specific types of input, as we have done for scalable systems. A practical algorithm might be to run combinations of the different reduction methods, or run them in parallel and choose the best reduction or an intersection of the reductions.

One research direction should be theoretical, trying to identify and analyze new parameters that affect the runtime of the algorithms. It seems that the geometry of the problem affects the running time (compare, for example, the results in Sections  3.1 and 3.3), but we currently have no measure to tell us if a given problem geometry is well suited for a given method. Such measures should be given further study. Another direction of study should be empirical, comparing implementations of different methods on different benchmarks. We hope that the scalable benchmarks presented in this paper are a first step in this direction, and other benchmarks will follow.

@&#ACKNOWLEDGMENTS@&#

The author wishes to thank Hagay Bamberger for helpful discussions and comments. This work was partly supported by the Loewengart Research Fund.

@&#REFERENCES@&#

