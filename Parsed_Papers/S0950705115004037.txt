@&#MAIN-TITLE@&#Smart train operation algorithms based on expert knowledge and ensemble CART for the electric locomotive

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We summarize expert knowledge rules from experienced drivers to ensure safety and riding comfort of train operations.


                        
                        
                           
                           We apply data mining algorithms in train operations to make the best use of historical driving data.


                        
                        
                           
                           Two STO algorithms are proposed by combining expert knowledge, data mining and train parking methods.


                        
                        
                           
                           The two STO algorithms are better than ATO and manual driving.


                        
                        
                           
                           The STO approaches have good flexibility with disturbances.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Smart Train Operation (STO)

Expert knowledge

Data mining

Flexibility

@&#ABSTRACT@&#


               
               
                  In subway systems, the automatic train operation (ATO) is gradually replacing manual driving for its high punctuality and parking accuracy. But the existing ATO systems have some drawbacks in riding comfort and energy-consumption compared with the manual driving by experienced drivers. To combine the advantages of ATO and manual driving, this paper proposes a Smart Train Operation (STO) approach based on the fusion of expert knowledge and data mining algorithms. First, we summarize the domain expert knowledge rules to ensure the safety and riding comfort. Then, we apply a regression algorithm named as CART (Classification And Regression Tree) and ensemble learning methods (i.e. Bagging and LSBoost) to obtain the valuable information from historical driving data, which are collected in the Beijing subway Yizhuang line. Besides, a heuristic train station parking algorithm (HSA) by using the positioning data storage in balises is proposed to realize precisely parking. By combing the expert knowledge, data mining algorithms and HSA, two comprehensive STO algorithms, i.e., STOB
                      and STOL
                      are developed for subway train operations. The proposed STO algorithms are tested by comparing both ATO and manual driving on a real-world case of the Beijing subway Yizhuang line. The results indicate that the developed STO approach is better than ATO in energy consumption and riding comfort, and it also outperforms manual driving in punctuality and parking accuracy. Finally, the flexibility of STOL
                      and STOB
                      is verified with extensive experiments by considering different kinds of disturbances in real-world applications.
               
            

@&#INTRODUCTION@&#

In recent years, urban rail transit has been developed rapidly due to its superiorities of high-speed, punctuality and safety in public transportation systems [1]. Most large cities in China, such as Beijing and Shanghai are building urban metro lines to release the public transport pressure. To improve the efficiency of subway systems, automatic train operation (ATO) has been developed to replace manual driving in many new established subway lines. Since the Victoria line in London Underground network, i.e., the world’s first railway line with an ATO system, was put into operation in 1968, it has become a central issue for researchers to improve the performance of ATO systems. Generally speaking, the existing research in ATO can be divided into three parts, i.e., energy-efficient train operations (ETO) that aim to design energy-saving speed-distance (SD) trajectories, automatic trajectory tracking (ATT) methods to increase punctuality, and train automatic stop control (TASC) to reduce the parking error.

The first part of ATO focuses on energy-efficient train operations (ETO), because traction energy of trains accounts for a large percentage of the total energy-consumption in a subway system [2]–[8]. On the basis of Pontryagin maximum principle, Howlett et al. [2,3] built a discrete train control model and confirmed the fundamental optimality of accelerate-coast-brake strategy for energy-efficient train operations. Considering the variable line gradients and arbitrary speed limits, Khmelnitsky [4] developed a numerical algorithm to obtain the optimal velocity profile. Liu and Golovitcher [5] established a continuous traction force model with constant efficiency to find the optimal control change points on a multi-layer state variable plain. More recently, Albrecht et al. [6] proved that the optimal switching points were uniquely defined for each track segment and the global optimal strategy was unique. In addition to these mathematical solutions, computational intelligent algorithms, such as genetic algorithm, dynamic programming and ant colony optimization have been applied for the calculation of the energy-saving SD trajectories. For example, Chang and Sim [7] applied a genetic algorithm on the ETO problem to generate optimal coasting points based on the joint evaluation of punctuality, riding comfort and energy-consumption. Wong et al. [8] illustrated that the genetic algorithm was robust compared with classical calculating methods.

The second topic is the real-time automatic trajectory tracking (ATT) methods, for which ATO controllers are developed to precisely track the predetermined SD trajectory to ensure that the train arrives at the next station on time. Due to the complexity of train dynamic models, many control methods have been proposed to enhance the trajectory tracking accuracy. For example, fuzzy control and predictive fuzzy control, which define some fuzzy rules of train operations, were applied in ATO systems by Yasunobu et al. [9], which was one of the earliest research on ATO systems. Sekine and Nishimurat [10] designed a two-degree-of-freedom fuzzy neural network control system, which enabled the trains to operate even under the dynamic variation of train model parameters. Song et al. [12] designed a computationally inexpensive tracking control method where a single-coordinate dynamic model reflecting in-train forces was derived. Gao et al. [13] proposed two robust adaptive control methods considering the actuator saturation and some unknown system parameters. More recently, Li et al. [11] applied a robust cruise control for train operations, and proposed numerical examples that verified the effectiveness of the proposed algorithms to track the SD trajectory precisely.

The third part focuses on the train station parking accuracy, which is also an important index in subway systems, especially for subway stations with platform screen doors (PSD) [15]. Traditional proportional-integral-derivative (PID) based control methods may be difficult to guarantee the parking errors under ± 30 cm, which is a basic requirement that train doors can be opened and passengers can get on and off the train easily. To improve the parking accuracy, Yasunobu et al. [14] designed a fuzzy inference based train stop control algorithm to deal with the uncertain interferences, e.g., resistances, line gradients, etc. Chen et al. [16] proposed three train station parking models, involving a linear model, a generalized regression neural network (GRNN) and an adaptive network based fuzzy inference system (ANFIS), to estimate the train station parking errors. The models were trained through a mass of historical parking data, and the parking model by ANFIS was confirmed to be the most effective to enhance the train parking accuracy. Furthermore, they developed three online learning algorithms [17] to output the optimal train braking rates. Hou [18] applied a terminal iterative learning control (TILC) method into train station stop control, which utilizes the terminal stop position errors in previous braking iterations to update the current control strategy.

By combining ETO, ATT and TASC, an ATO system is able to operate a train automatically with only one supervisor, which greatly reduces manual labors. Besides, since on-board computers of ATO have higher computing accuracy than humans, the punctuality rate of ATO is better than manual driving. Nevertheless, the ATO controllers need to switch frequently in the process of train operations to track the trajectory precisely, which is not conductive to the riding comfort, and reduces the lifetime of ATO controllers. Meanwhile, by analyzing the actual train driving data, we find that, experienced drivers can operate the train to the destination on time by switching the control handle only a few times, which results in lower energy-consumption and better riding comfort.

Generally speaking, the majority of existing ATO systems achieve the train operation goals by focusing on the energy-efficient SD trajectory calculation, real-time tracking methods and train station parking algorithms, separately. Their research seldom considers the multiple objectives such as riding comfort, punctuality, parking accuracy and energy consumption. Moreover, the domain expert knowledge of experienced locomotive drivers play a significant role in designing train control algorithms, which could enhance the service quality and reduce the energy consumption [17,19]. Aiming to improve the overall performance of subway train operations, in this research, we are particularly interested in how to develop Smart Train Operation (STO) algorithms via a system approach by the fusion of expert knowledge and data mining techniques. The contributions of this paper are summarized as follows.

                        
                           (1)
                           Different from the current research in ATO, this study focuses on the combination of expert knowledge and data mining techniques to realize smart train operations. Since the proposed new STO approach is based on the knowledge from experts and the data recorded from in real-world applications, it can be expected to operation a train without the precise information of the train model and the predetermined SD trajectory.

The existing ATO or manual driving in practice is difficult to satisfy the multiple objectives, i.e., punctuality, riding comfort, parking accuracy and energy consumption. Therefore, we develop two comprehensive STO algorithms that are based on the expert knowledge, data mining techniques and a heuristic train station parking algorithm to improve the overall performances of subway train operations.

Based on the field data in Beijing subway, we derive numerical experiments to analyze the effectiveness and flexibility of the proposed STO algorithms with different kinds of disturbances.

The rest of the paper is organized as follows. Section 2 describes the considered problems, as well as the specific performance indices of train operations in real-world applications. In Section 3, we propose the framework design of STO approach, which includes expert knowledge, data mining methods and a heuristic train station parking algorithm (HSA). In addition, two comprehensive STO algorithms, i.e. STOB
                      and STOL
                      are developed by combining expert rules, data mining methods and HSA. In Section 4, an experimental platform is introduced. In Section 5, the effectiveness and flexibility of STOB
                      and STOL
                      are tested with extensive experiments by considering different kinds of disturbances. We conclude this paper in Section 6.

In subway systems, passenger trains are made up of several electric locomotives, which are powered by electricity from overhead lines, i.e., the pantograph. In general, the handles of electric locomotives can be switched continuously, which means that a driver or an ATO controller can output any orders within the maximum accelerating or braking scope [3]. According to the definition in [22], the aim of subway train operations is to change the switches of train controller appropriately, in order to improve the punctuality, energy consumption, parking accuracy and riding comfort on condition that the speed of the train is under speed limits. We first describe the indices in Eqs. (1)–(5) to evaluate the general performances of subway train operations [7] as follows.

                        
                           •
                           
                              Running time error. We use running time error to evaluate the punctuality of subway train operations on a single segment. Running time error is an important indicator for railway train operation which affects the passengers’ transfer and the timetable of the whole line, i.e.,

                                 
                                    (1)
                                    
                                       
                                          
                                             e
                                             t
                                          
                                          =
                                          
                                             t
                                             p
                                          
                                          −
                                          
                                             t
                                             r
                                          
                                          .
                                       
                                    
                                 
                              It expresses the deviation between the desired running time tp
                               and the actual running time tr
                              . In practice, if the value of et
                               is under ± 5 s, it is widely recognized that the train operation method has good performance in punctuality.


                              Conversion number of operation modes. It is abbreviated as Nc
                              , which refers to the switching times that the train controller changes its operational mode. Frequent switches may lower passengers’ comfort and shorten the service life of a train controller.


                              Riding comfort of passengers. The riding comfort of passengers can be regarded as the subjective feelings of train passengers, which directly relates to the service quality of a subway system. Based on the definition in [7], we use Cr
                               to measure the riding comfort of passengers, shown as follows:

                                 
                                    (2)
                                    
                                       
                                          
                                             C
                                             r
                                          
                                          =
                                          
                                             1
                                             n
                                          
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                n
                                                −
                                                1
                                             
                                          
                                          
                                             |
                                             
                                                
                                                   
                                                      a
                                                      
                                                         i
                                                         +
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      a
                                                      i
                                                   
                                                
                                                
                                                   Δ
                                                   t
                                                
                                             
                                             |
                                          
                                       
                                    
                                 
                              where n is the total sampling number, ai
                               is the controller’s output, and Δt is the sampling time interval. Basically, the smaller Cr
                               is, the more comfortable passengers feel.


                              Energy consumption per unit mass. Energy consumption is an important indicator due to the rising concerns on energy prices and environmental problems. For a subway system, nearly half of the energy consumption is used to operate the electric locomotives. The consumed energy w for train operations in a segment is

                                 
                                    (3)
                                    
                                       
                                          w
                                          =
                                          ∫
                                          F
                                          v
                                          ·
                                          d
                                          t
                                          =
                                          ∫
                                          ϕ
                                          (
                                          a
                                          )
                                          m
                                          v
                                          ·
                                          d
                                          t
                                          ,
                                          ϕ
                                          (
                                          a
                                          )
                                          =
                                          max
                                          {
                                          a
                                          ,
                                          0
                                          }
                                          ,
                                       
                                    
                                 
                              where F is the traction power, v is the train velocity, m is the train mass and a is the controller output rate. For a passenger train, the vehicle weight may increase or decrease when passengers get on or get off at stations. To compare the energy consumption for the trains with different weights, we use the energy consumption per unit mass, which is defined as:

                                 
                                    (4)
                                    
                                       
                                          
                                             E
                                             u
                                          
                                          =
                                          
                                             w
                                             m
                                          
                                          =
                                          
                                             
                                                ∫
                                                m
                                                ϕ
                                                (
                                                a
                                                )
                                                v
                                                ·
                                                d
                                                t
                                             
                                             m
                                          
                                          =
                                          ∫
                                          ϕ
                                          
                                             (
                                             a
                                             )
                                          
                                          v
                                          ·
                                          d
                                          t
                                          =
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          ϕ
                                          
                                             (
                                             
                                                a
                                                i
                                             
                                             )
                                          
                                          
                                             v
                                             i
                                          
                                          Δ
                                          t
                                       
                                    
                                 
                              
                           


                              Parking error. It is used to evaluate the parking accuracy, expressed as

                                 
                                    (5)
                                    
                                       
                                          
                                             e
                                             s
                                          
                                          =
                                          
                                             s
                                             p
                                          
                                          −
                                          
                                             s
                                             r
                                          
                                       
                                    
                                 
                              where sp
                               is the length of the segment between two adjacent stations and sr
                               is the actual train running distance. Note that the parking errors are required to be within ± 30 cm in Beijing subway, in order that the PDSs can be opened.

According to the definitions above, the subway train operation problem is a multiobjective problem [22], which can be described as

                        
                           (6)
                           
                              
                                 
                                    
                                       
                                          min
                                          f
                                          
                                             (
                                             a
                                             )
                                          
                                          =
                                          
                                             (
                                             
                                                e
                                                t
                                             
                                             ,
                                             
                                                N
                                                c
                                             
                                             ,
                                             
                                                C
                                                r
                                             
                                             ,
                                             
                                                E
                                                u
                                             
                                             ,
                                             
                                                e
                                                s
                                             
                                             )
                                          
                                          ,
                                       
                                    
                                 
                                 
                                    
                                       
                                          s.t.
                                          a
                                          ∈
                                          A
                                          ⊆
                                          
                                             R
                                             n
                                          
                                          ,
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             (
                                             
                                                s
                                                
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             ,
                                             
                                                v
                                                
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             )
                                          
                                          =
                                          F
                                          [
                                          
                                             (
                                             
                                                s
                                                i
                                             
                                             ,
                                             
                                                v
                                                i
                                             
                                             )
                                          
                                          ,
                                          
                                             a
                                             i
                                          
                                          ]
                                          ,
                                          
                                          ∀
                                          1
                                          ≤
                                          i
                                          ≤
                                          n
                                          −
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             v
                                             1
                                          
                                          =
                                          0
                                          ,
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             s
                                             1
                                          
                                          =
                                          
                                             s
                                             p
                                          
                                          ,
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             v
                                             i
                                          
                                          ≤
                                          
                                             v
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          1
                                          ≤
                                          i
                                          ≤
                                          n
                                          −
                                          1
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where a ∈ Rn
                      is the decision making variable, which expresses the train controller output, 
                        A
                      denotes its feasible set, 
                        
                           (
                           
                              s
                              
                                 i
                                 +
                                 1
                              
                           
                           ,
                           
                              v
                              
                                 i
                                 +
                                 1
                              
                           
                           )
                        
                      represents the speed and velocity of a train, sp
                      is the length of the interval between two adjacent stations, vL
                      is the limited speed, and 
                        F
                      is the system function of train dynamic model [20,21]. The tradeoff among the multiple objectives may be inconstant for different times of a day. For example, a subway company will pay more attention to the punctuality of trains in rush hours, in order that passengers are not affected by the potential delays. Otherwise, energy consumption will be an important goal to reduce the operation costs.

Generally speaking, the majority of existing ATO systems achieve the train operation problem by focusing on the energy-efficient SD trajectory calculation, real-time tracking methods and train station parking algorithms, separately. For example in Beijing subway, the process of train operations by ATO can be described as follows. Before a train departs from stations, the managers of the subway companies first put forward a set of SD trajectories of the train at every segment according to the timetable [23]. Then, when the train is running on a segment, the ATO controller calculates the appropriate traction or braking output in order that the train tracks the corresponding SD trajectory precisely. Finally, when the train approaches the next station, the ATO controller determines the braking rate and parks the train at the destination. However, due to the complexity of train dynamic models, involving time-varying traction and braking prosperities, variable resistances, etc., this multiobjective problem in Eq. (6) is difficult to be solved in most existing ATO systems by the classical optimization approaches. Besides, it usually takes a long time for subway engineers to calculate the optimal trajectory. This makes it infeasible when there are unexpected disturbances, and the timetable needs to be updated in real-time. Thus, the existing ATO systems are also lack of flexibility with disturbances caused by variable and uncertain train dynamic models.

In daily operations of a subway system, there is a large amount of historical running data stored in train control centers. For current ATO systems, these important data recording the details of train operations have not been used in full. Besides, we have found that the experienced drivers have better driving performance in riding comfort and energy consumption, while ATO achieves better in punctuality and parking error. This motivates us to study a new approach that uses the domain expert knowledge and historical driving data to combine the virtues of ATO and manual driving, in order to solve this multiobjective problem of subway train operations. (illustrated in Fig. 1)

In this section, the STO approach for solving the multiobjective problem of subway train operations is described in details. First, the components of STO are presented, which are followed by a flowchart of STO that specifies how it is used in real-world applications. Then, the expert knowledge, data mining algorithms and HSA are presented. Besides, the procedures of STO algorithms are developed.

From Fig. 2
                        , it can be seen that the STO approach contains three major parts, i.e., expert knowledge, data mining and train station parking algorithm. The expert knowledge is the foundation of STO, which defines the output constrains of train controllers to ensure the riding comfort and reduce the conversion number of operation modes. Then, we apply data mining algorithms to obtain the appropriate train operation strategies by using the historical driving data. Finally, to enhance the parking accuracy, we propose a heuristic train station parking algorithm (HSA) with the positioning information in balises (a kind of positioning equipments installed in subway stations).

For the STO in real-world applications, it needs two main phases, i.e., the model training phase and the real-time train operation phase. In the model training phase, the collected historical data are selected based on some rules to guarantee the quality of the data. Then, we can obtain the data mining models by training and validation with these selected data. In the real-time train operation phase, a train’s onboard sensors can monitor the real-time information of its position, velocity and running time. Then, we use the expert knowledge to determine a feasible set of its controller outputs. If the train approaches the next station, we use the HAS to park the train. Else, we use the data mining models to obtain the appropriate controller output in real-time. The flowchart of the STO is illustrated in Fig. 3
                        .

Knowledge-based technology is being applied to complex problem solving in many application domains [24]. Due to the complexity of train dynamic model, the most existing ATO methods are difficult to control the trains that have good performances in all the multiple objectives. In addition, the literature [17,22] has shown that manual driving by experienced drivers has better performances than ATO in riding comfort and energy consumption, which motives us to summarize the domain expert knowledge to improve the overall performances of train operations.

We take comprehensive measures to acquire the expert knowledge. For example, we first define several criterions for selection of the experts in our study, which include that the expert should have worked in train operation field for many years and is capable of driving the trains with relatively good performance with guarantee of safety. Then, we derive a series of questionnaires for both experienced drivers and passengers. In addition, we install cameras in the locomotive cabs for observations of driving actions. The summarized expert knowledge can be divided into three parts. The first part is the conversion rules of operation modes, which restrict the operation mode switches to improve the riding comfort. In the second part, we define some operation rules in different operation mode. The third part focuses on a particular case in train operations to ensure that the speed of a train does not exceed the speed limits.

In subway systems, train operations generally include three modes, i.e., traction, coasting and braking. In traction mode, the locomotive produces forward tractive force to accelerate the train, while in braking mode, the locomotive produces backward braking force to slow down the train. In coasting mode, the train relies on inertia to run with the resistances due to the gradient, curvature and wind, etc. For the comfort and safety of passengers, the conversions among the three operation modes should be restricted by the rules described in Table 1
                           .

In Table 1, allowable means that the current operation mode can switch to the next operation mode, while forbidden expresses that it is not allowed for the switch of train operation mode.

Safety is one of the most important considerations in train operations, which requires that the speed of a train should not exceed the limited speed. We divide train operation into 4 stages, which are acceleration stage, coasting stage, deceleration stage and stopping stage. Then, different operation rules in the corresponding stages are developed, respectively, in order to ensure the speed limit constraints and riding comfort. We use vL
                            to represent the limited speed, then the rules for the controller output a are described as follows.

                              
                                 •
                                 
                                    If the train is in acceleration stage, then
                                    
                                       
                                          a
                                          ≤
                                          0.6
                                          
                                          
                                             m/s
                                             2
                                          
                                       
                                    .


                                    If the train is in acceleration stage and v ≥ 0.95*vL, then
                                    
                                       
                                          a
                                          =
                                          0
                                       
                                    .


                                    If the train is in coasting stage, then
                                    
                                       
                                          a
                                          =
                                          0
                                       
                                    .


                                    If the train is in deceleration stage and v ≥ 0.95*vL, then
                                    
                                       
                                          a
                                          =
                                          −
                                          0.6
                                       
                                    .


                                    If the train is in stopping stage, then avoid sharp switches of the train controller outputs.

In particular, a special case that the train is on a segment with descending limited speed should be considered. As is illustrated in Fig. 4
                           , the limited speed will descend for the gradient, curve, tunnel, etc. Thus, we should make the following decisions in advance to prevent that the speed of train exceeds the limited speed. According to the knowledge from drivers, when the limited speed descends, there must be a judgment of deceleration in advance. We define a safe distance, which can be estimated based on the state of the train:

                              
                                 (7)
                                 
                                    
                                       s
                                       =
                                       
                                          
                                             
                                                
                                                   (
                                                   
                                                      ɛ
                                                   
                                                   
                                                      v
                                                      L
                                                   
                                                   )
                                                
                                                2
                                             
                                             −
                                             
                                                v
                                                2
                                             
                                          
                                          
                                             2
                                             a
                                          
                                       
                                    
                                 
                              
                           where s is the estimated safe distance, vL
                            is the value of limited speed in next limited speed changing, v is the train speed, ε ∈ [0, 1] is a speed proportional coefficient, which is used to prevent exceeding the limited speed due to the existence of system delay and gradients.

In this section, we describe the data mining methods and their applications in locomotive operations. Note that the handles of electric locomotives are continuously. Therefore, the locomotive controller’s output a (from 
                           −
                        1 to 1, positive is traction, negative is braking, zero is coasting) can take any value in a constrained range 
                           
                              [
                              −
                              1
                              ,
                              1
                              ]
                           
                        . We assume that each value a ∈ (0, 1] of the output in traction control determines a constant positive acceleration, and it is reasonable to assume that each value 
                           
                              a
                              ∈
                              [
                              −
                              1
                              ,
                              0
                              )
                           
                         of the output in braking control determines a constant negative acceleration. Similarly, the value 
                           
                              a
                              =
                              0
                           
                         is the output in coasting control. This means that, the locomotive operations can be formulated into a regression problem.

Classification and Regression Trees (CART) algorithm [25] was proposed by Breiman et al. in 1984, which is regarded as a major milestone in the evolution of artificial intelligence and machine learning [26]. CART indicates that trees may be used not only to classify entities into a discrete number of groups, but also as an alternative approach to regression analysis in which the value of a response (dependent) variable is to be estimated, given the value of each variable in a set of explanatory (independent) variables.

CART algorithm traditionally involves two steps, that we call growing procedure and pruning procedure. We choose two-thirds of the sample as the training sample which are used in growing procedure, and the rest as the test sample which are used in pruning procedure. The growing procedure permits to construct, from the data, a maximal binary tree Tmax
                            by recursive partitioning, and then the pruning procedure permits to select, among all the subtrees of Tmax
                           , a sequence which contains the entire statistical information.

Ensemble learning is one of the research hotspots in machine learning in recent years, and the main achievements involve Bagging [27], Boosting [28], etc. The main idea of resemble learning is training multiple weak learning systems and combining the results in a certain way, which can significantly improve the generalization ability of the learning system.

The Bagging algorithm is the most simple and the most intuitive ensemble learning method, which is based on regression trees to dig out the relationship. Theoretically, when using the Bagging algorithm, about 36.8% of the samples will not appear in the new set of training samples averagely as we resample each time. The procedure of Bagging regression algorithm can be seen in Algorithm 1
                           .

Boosting was proposed for classification tasks, but it can be used to solve the regression problems after appropriate modification. The earliest Boosting regression algorithm is AdaBoost [28], proposed by Freund and Schapire, is one of the most important ensemble methods due to its theoretical foundation and great simplicity. Then, Drucker [29] improved AdaBoost and he proposed LSBoost, which can be used for regression problems. We describe the procedure of LSBoost regression algorithm in Algorithm 2
                           .

In the train stopping stage, we consider the precise positioning information provided by balises, which play an important role in train control systems [17]. In a subway platform, the engineers install several balises on the tracks in front of the train parking point. When a train approaches the station and goes through each balise, the train can receive the precise positioning data from the balise. According to the field data in Yizhuang Line, we find that there are 5 balises installed in the stopping stage and the last balise is installed at the train parking point. We use Si
                         for i ∈ {1, 2, 3, 4, 5} to represent the distance from balise i to the parking point. The positions of the balises can be represented as 
                           
                              
                                 S
                                 1
                              
                              =
                              102
                              
                              m
                              ,
                           
                        
                        
                           
                              
                                 S
                                 2
                              
                              =
                              58
                              
                              m
                              ,
                           
                        
                        
                           
                              
                                 S
                                 3
                              
                              =
                              13
                              
                              m
                              ,
                           
                        
                        
                           
                              
                                 S
                                 4
                              
                              =
                              6
                              
                              m
                           
                         and 
                           
                              
                                 S
                                 5
                              
                              =
                              0
                              
                              m
                           
                        . We define 
                           
                              
                                 s
                                 p
                              
                              =
                              
                                 S
                                 1
                              
                              ,
                           
                         which represents the distance of train parking stage. Then, the calculating formula of train controller’s output between two balises is given as follows.

                           
                              (12)
                              
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   a
                                                   i
                                                
                                                =
                                                −
                                                
                                                   
                                                      v
                                                      i
                                                      2
                                                   
                                                   
                                                      2
                                                      *
                                                      
                                                         S
                                                         i
                                                      
                                                   
                                                
                                                
                                                   (
                                                   i
                                                   =
                                                   1
                                                   )
                                                
                                                ,
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   a
                                                   i
                                                
                                                =
                                                −
                                                
                                                   
                                                      v
                                                      i
                                                      2
                                                   
                                                   
                                                      2
                                                      *
                                                      
                                                         S
                                                         i
                                                      
                                                   
                                                
                                                −
                                                η
                                                *
                                                
                                                   a
                                                   
                                                      i
                                                      −
                                                      1
                                                   
                                                   Δ
                                                
                                                
                                                   (
                                                   i
                                                   =
                                                   2
                                                   ,
                                                   3
                                                   ,
                                                   4
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   a
                                                   5
                                                
                                                =
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       a
                                       i
                                       *
                                    
                                    =
                                    −
                                    
                                       
                                          
                                             v
                                             i
                                             2
                                          
                                          −
                                          
                                             v
                                             
                                                i
                                                +
                                                1
                                             
                                             2
                                          
                                       
                                       
                                          2
                                          *
                                          (
                                          
                                             S
                                             i
                                          
                                          −
                                          
                                             S
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          )
                                       
                                    
                                    
                                       (
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       3
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       a
                                       i
                                       Δ
                                    
                                    =
                                    
                                       a
                                       i
                                       *
                                    
                                    −
                                    
                                       a
                                       i
                                    
                                    
                                       (
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       3
                                       )
                                    
                                 
                              
                           
                        where vi
                         is the actual speed when passing each balises, ai
                         is theoretical output of controller, 
                           
                              a
                              i
                              *
                           
                         is actual output of controller, 
                           
                              a
                              i
                              Δ
                           
                         is derivation of controller’s output and η is the learning rate.

Based on the aforementioned descriptions of expert knowledge, data mining and HSA, the STO algorithms will be developed in what follows. The procedure given in Algorithm 3
                         illustrates the overall flowcharts in Fig. 3. In Algorithm 3, Steps 1–3 describe the model training phase, and Steps 4–9 describe the real-time train operation phase. Thus, by the fusion of expert knowledge and data mining algorithms, we obtain two STO algorithms, i.e., STOB
                         and STOL
                        , which are based on Bagging (Algorithm 1) and LSBoost (Algorithm 2), respectively.

To evaluate the effectiveness and flexibility of the proposed STO algorithms, we establish an experimental platform based on the real-world data from Yizhuang Line, Beijing subway (YLBS). It can simulate the running of locomotives on a subway line with given driving strategies. First, we present the train dynamic model in the experimental platform, which is described as

                        
                           (16)
                           
                              
                                 M
                                 
                                    
                                       d
                                       v
                                    
                                    
                                       d
                                       t
                                    
                                 
                                 =
                                 M
                                 a
                                 −
                                 f
                                 
                                    (
                                    s
                                    ,
                                    v
                                    )
                                 
                                 ,
                              
                           
                        
                     
                     
                        
                           (17)
                           
                              
                                 f
                                 
                                    (
                                    s
                                    ,
                                    v
                                    )
                                 
                                 =
                                 M
                                 g
                                 sin
                                 
                                    (
                                    α
                                    )
                                 
                                 +
                                 
                                    λ
                                    1
                                 
                                 
                                    v
                                    2
                                 
                                 +
                                 
                                    λ
                                    2
                                 
                                 v
                                 +
                                 
                                    λ
                                    3
                                 
                                 +
                                 6.3
                                 M
                                 /
                                 
                                    [
                                    r
                                    
                                       (
                                       s
                                       )
                                    
                                    −
                                    55
                                    ]
                                 
                              
                           
                        
                     where M is the weight of a train and f(s, v) represents the resistances. The resistances are made up of gradient resistance Mgsin (α) where alpha is the slope angle, track resistance 
                        
                           
                              λ
                              1
                           
                           
                              v
                              2
                           
                           +
                           
                              λ
                              2
                           
                           v
                           +
                           
                              λ
                              3
                           
                        
                      where λ
                     1, λ
                     2 and λ
                     3 are Davis parameters, and curve resistance 
                        
                           6.3
                           M
                           /
                           [
                           r
                           (
                           s
                           )
                           −
                           55
                           ]
                        
                      where r(s) is the radius of the curve [30]. In addition, there are nonlinearity and time delay in a train accelerating/braking system [22]. We use Tc, Td, Bc
                      and Bd
                      to represent the traction time constant, traction time delay, braking time constant and braking time delay, respectively. Note that the type of locomotive used in Yizhuang line is DKZ32 and the parameters of DKZ32 are showed in Table 2
                     .

In this section, we derive numerical experiments based on the real-world train operation data in YLBS. We first describe the data collection process, as well as the expert rules that are used for data selection. Based on the historical train operation data, the data mining models are trained and analyzed. Then, we develop a real-world case of YLBS to test the effectiveness of the proposed STO algorithms by comparing with both ATO and manual driving. Finally, the flexibility of STO algorithms is verified by dynamically adjusting the parameters of locomotive models.

The data used in this study are collected in Yizhuang Line of Beijing subway (YLBS) (illustrated in Fig. 5
                        ), which connects the center of Beijing and Yizhuang Economic Development Zone, and the length of this line is 23.23 km. The field data are collected from the on-board computers of locomotives (Fig. 6
                        ), which record the running data of a train by speed sensors. The data contains the detailed information of the train’s position, velocity, running time, acceleration&braking rates, speed limits and line gradients. In addition, the sample interval is 
                           
                              0.2
                              
                              s
                              ,
                           
                         which indicates that the data are recorded every 
                           
                              0.2
                              
                              s
                           
                        .

We choose one segment between Rongjing East Street and Wanyuan Street as an example. On this segment, we collected 
                           
                              11
                              ,
                              235
                           
                         groups of data sets throughout two days. We calculate the performance indices for the collected data sets by Eqs. (1)–(5), and the results are illustrated in Table 3
                        . Due to the psychological or physical conditions of drivers, such as fatigue and pressure, we can find that some of these collected data sets are with relatively low performance. Therefore, we adopt several selection rules on the basis experiences to make sure that the developed STO approach can be effective.
                           
                              •
                              
                                 Rule 1: Running time error is within 
                                    
                                       ±
                                       5
                                       
                                       s
                                    
                                 .


                                 Rule 2: Parking error is within 
                                    
                                       ±
                                       30
                                       
                                       cm
                                    
                                 .


                                 Rule 3: Conversion number of operation mode is within 10 times.


                                 Rule 4: Riding comfort is within 
                                    
                                       0.08
                                       
                                       
                                          m/s
                                          3
                                       
                                    
                                 .


                                 Rule 5: Energy consumption is less than 
                                    
                                       210
                                       
                                       J/kg
                                    
                                 .

Then, we select 7312 groups of data sets that satisfy the above rules from the original data sets. In the following, we use the 7312 groups of data sets to train the data mining models.

Now we use the training algorithms described in Algorithm 1 and Algorithm 2 to train the selected 7312 groups of data sets. Note that we use CART algorithm as the weak learning machine of Bagging and LSBoost in Algorithm 1 and Algorithm 2, which are called B-CART and L-CART, respectively. In addition, we also use an algorithm that is based on single CART for comparison. The iteration step is set 100 in the training process and the absolute errors of the three data mining algorithms are shown in Fig. 7
                        .

In Fig. 7, compared with single CART, both B-CART and L-CART get better performance after about 10 iterations, and L-CART achieves the best performance. The results are coincident with the theoretical analysis. Besides, it can be seen that the mean absolute errors of B-CART and L-CART are almost constant after about 50 iteration steps. So the upper bound of iteration times is set as 50 in our following experiments.

Furthermore, we illustrate the regression models of B-CART and L-CART in Figs. A.1 and A.2 in Appendix A. In Figs. A.1 andA.2, x
                        1, x
                        2, 
                           
                              …
                              ,
                           
                         
                        x
                        7 represent the speed limit, train speed, gradient, remaining distance, remaining time, value of next speed limit interval and remaining distance of next speed limit interval, respectively. It can be seen that the regression model of STOL
                         is larger than the regression model of STOB
                        , and the numbers of leaf nodes in the two models are 19 and 30, respectively. We define that a root node to each leaf corresponds to a rule. Then, there are 19 rules in B-CART model and 30 rules in L-CART model.

In this experiment, we use the trained data mining models to test the effectiveness of the STO algorithms. Taking the interstation between Rongjing East Street and Wuanyuan Street as an illustrative example. The distance between the two stations is 
                           
                              1280
                              
                              m
                              ,
                           
                         and the desired trip time is 
                           
                              101
                              
                              s
                           
                        . Fig. 8
                         shows the gradients of this segment. In addition, we also choose two sets of field data in YLBS that record the operation curves by ATO and manual driving for comparison. The ATO system in YLBS uses an adaptive PID controller with some output constraints to track a predetermined SD trajectory.

The comparisons of STOB, STOL
                        , ATO and manual driving are shown in Figs. 9
                         and10
                        . It can be seen from Fig. 9 that, the SD curves of STOB, STOL
                         and manual driving are very similar, while the SD curve of ATO has some fluctuations. This indicates that the STO algorithms can be effective to learn from manual driving data to guarantee the steady of train speed. The controller outputs of ATO, manual driving, STOB
                         and STOL
                         are shown in Fig. 10. It can be seen that the ATO controller switches very frequently, and the outputs of the manual driving, STOB
                         and STOL
                         are smooth and steady, which means that the STO approaches may improve riding comfort of passengers by experiences and historical driving data.

The performances of the four driving methods, calculated by Eqs. (1)–(5), are shown in Table 4
                        . It can be seen that: (1) Nc, Cr
                         and Eu
                         of STO algorithms are much better than ATO, which means that the STO algorithms can save energy and enhance the riding comfort by changing the output of train controller only a few times; (2) the running time error et
                         of ATO is better than manual driving and STO algorithms, which indicates that ATO controller has good punctuality by rigorous computation; (3) nevertheless, the overall performances of STO algorithms outperform both ATO and MD. Besides, STOL
                         has the best performance on es, Nc, Cr
                         and Eu
                        , and its running time error is less than 
                           
                              3
                              
                              s
                              ,
                           
                         which also satisfies the requirements of subway operations. In addition, the results also illustrate that, ATO focuses on the objective of punctuality and MD is better in riding comfort. Meanwhile, STOB
                         and STOL
                         can obtain better trade-off solutions, since
                         they have larger objective weights for punctuality and riding comfort, respectively.

Due to the complexity of train dynamic models, the parameters of locomotives, which including Tc, Td, Bc
                         and Bd
                        , may be uncertain and dynamic because of the variation of external environment. For example, in an underground tunnel, there is much moisture, which will increase the time constant and time delay of a train. Therefore, it is important for the STO algorithms to be flexible with variable parameters of train dynamic models.

To evaluate the flexibility of STO algorithms, we define four statistical indices as follows. 1) Mean, mean value of performance index; 2) Min, minimum of performance index; 3) Max, maximum of performance index; 4) RMSE, root mean square error of performance index, which are expressed in Eqs. (18)–(21).

                           
                              (18)
                              
                                 
                                    M
                                    e
                                    a
                                    n
                                    =
                                    
                                       p
                                       ¯
                                    
                                    =
                                    
                                       1
                                       m
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       m
                                    
                                    
                                       p
                                       i
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    M
                                    i
                                    n
                                    =
                                    m
                                    i
                                    n
                                    (
                                    
                                       p
                                       1
                                    
                                    ,
                                    
                                       p
                                       2
                                    
                                    ,
                                    
                                       p
                                       3
                                    
                                    ,
                                    …
                                    ,
                                    
                                       p
                                       m
                                    
                                    )
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    M
                                    a
                                    x
                                    =
                                    m
                                    a
                                    x
                                    (
                                    
                                       p
                                       1
                                    
                                    ,
                                    
                                       p
                                       2
                                    
                                    ,
                                    
                                       p
                                       3
                                    
                                    ,
                                    …
                                    ,
                                    
                                       p
                                       m
                                    
                                    )
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    R
                                    M
                                    S
                                    E
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             
                                                
                                                   (
                                                   
                                                      p
                                                      i
                                                   
                                                   −
                                                   
                                                      p
                                                      ¯
                                                   
                                                   )
                                                
                                                2
                                             
                                          
                                          m
                                       
                                    
                                 
                              
                           
                        where, m is the number of simulations, pi
                         is the i-th value in the experiments of the four performance indices. In the following, we first analyze the impact of single parameter variations on STO algorithms. Then, we change multiple parameters of train dynamic model simultaneously to test the robustness of STO algorithms.

In this section,
                           
                           
                            we analyze the impact of individual parameter on STO algorithms. The fluctuation of the parameters is set as 20% and each increment for the parameters is 1%. We take et
                            and es
                            as examples. The results are shown in Figs. 11 and12.
                        

In Figs. 11 and12, with the increase of Td
                            and Tc
                           , the parking error es
                            fluctuates in a certain range and the running time error et
                            increases slightly, while es
                            increases greatly with the increase of Bd
                            and Bc
                           . This indicates that, there are some relationship between es, et
                            and the parameters of train dynamic model. Therefore, we define a correlation coefficient r in the following equation to analyze the correlation of them.

                              
                                 (22)
                                 
                                    
                                       r
                                       =
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                (
                                                
                                                   X
                                                   i
                                                
                                                −
                                                
                                                   X
                                                   ¯
                                                
                                                )
                                             
                                             
                                                (
                                                
                                                   Y
                                                   i
                                                
                                                −
                                                
                                                   Y
                                                   ¯
                                                
                                                )
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   
                                                      
                                                         (
                                                         
                                                            X
                                                            i
                                                         
                                                         −
                                                         
                                                            X
                                                            ¯
                                                         
                                                         )
                                                      
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      N
                                                   
                                                   
                                                      
                                                         (
                                                         
                                                            Y
                                                            i
                                                         
                                                         −
                                                         
                                                            Y
                                                            ¯
                                                         
                                                         )
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where X is the parameter, Y is et
                            or es
                           , and 
                              
                                 r
                                 ∈
                                 [
                                 −
                                 1
                                 ,
                                 1
                                 ]
                              
                           . If 
                              
                                 r
                                 =
                                 0
                              
                            , it indicates that there is no correlation between the two samples. If 
                              
                                 |
                                 r
                                 |
                                 =
                                 1
                              
                            , it indicates that the two samples are completely linear correlation. If 0 < |r| < 1, it indicates there is a nonlinear correlation between the two samples. If r > 0 , it indicates that the two samples have a positive correlation (PC). Otherwise r < 0 , it indicates that the two samples have a negative correlation (NC). The greater strength of the association results in the larger absolute value of correlation coefficient. Here we assume that, if |r| > 0.8 , it indicates that the two samples are correlation(CO); if |r| < 0.3, it indicates that the two samples are irrelevant(IR). The correlation of parameters for two STO algorithms is shown in Table 5.

In Table 5, the two STO models are consistent and the four parameters have a positive correlation with et
                           . Moreover, Bd
                            and Bc
                            have a positive correlation with es
                           . This is accord with the practical situation, since variations of parameters in the train braking system (i.e. Bd
                            and Bc
                           ) will affect the parking error.

In this part, we try to test the robustness of STO algorithms by changing multiple parameters simultaneously. First, we change two parameters at the same time. The fluctuation of the parameters and the increment for each parameter are set as 20% and 1%, respectively. We run the experiments by 41 × 41 times, and we also take et
                            and es
                            as examples. The results are shown in Figs. 13–16.

In Figs. 13 and14, with the increase of Td
                            and Tc
                           , the running time error et
                            of STOB
                            and STOL
                            increases accordingly, and the parking error es
                            of STOB
                            and STOL
                            fluctuates slightly. In addition, the values of et
                            and es
                            for two STO algorithms are all within the allowed range. For example, the running time errors are kept within 
                              
                                 5
                                 
                                 s
                              
                            with the variations of parameters. This reflects the STO algorithms’ robustness with variation of traction parameters. Similarly, Figs. 15 and16 indicate the robustness of STO algorithms with variable parameters of train braking system.

Then, we assume all variances have 20 percent changes (80–120%) for the four parameters of train traction and braking system. We set increment for each parameter as 10%, which means that the values of parameters are as follow: Td
                            ∈ {0.8, 0.9, 1.0, 1.1, 1.2}; Tc
                            ∈ {0.32, 0.36, 0.4, 0.44, 0.48}; Bd
                            ∈ {0.64, 0.72, 0.8, 0.88, 0.96}; Bc
                            ∈ {0.32, 0.36, 0.4, 0.44, 0.48}. Then, we run the experiments for 625 times with STOB
                            and STOL
                           . The numerical results are shown in Table 6.

It can be seen that, with variable parameters, STOB
                            has advantages in punctuality and parking error, while STOL
                            has advantages in the other indices. In addition, some of the important indices are not affected by varying parameters. For example, the running time errors are less than 5 s for all the instances. The above experiments conclude that, by the fusion of expert knowledge and data mining algorithms, the developed STO algorithms can meet the requirements of train operations, and they achieve better than ATO and manual driving. Furthermore, the robustness tests indicate the good performances with variable parameters of the STO algorithms.

@&#CONCLUSION@&#

To combine the advantages of ATO and manual driving, we proposed a system approach to achieve smart train operations via integrating expert knowledge, data mining methods and a train parking algorithm. Field data in manual driving of excellent drivers were collected from Beijing subway Yizhuang line. Two STO algorithms i.e. STOB
                      and STOL
                      were developed by the fusion of expert knowledge and data mining methods. Finally, the STO algorithms were tested through an experimental platform with real-world data sets to test the effectiveness and flexibility of the developed algorithms.

From the results, the two STO algorithms have achieved good performances by comparing with ATO and manual driving, especially in riding comfort and energy consumption. In addition, STOL
                      performs the best in the overall indices. The flexibility of the STO approach is verified with a large number of experiments by considering four disturbances of train traction and braking systems.

Even though the STO algorithms are shown to be effective in this paper, there are still some issues to be addressed in our future research. For example, although the STO algorithms are adopted to some general lines in real-world cases, the lines with steeper slope or complex limited speed are needed to be studied. Moreover, more advanced machine learning algorithms (deep learning, transfer learning [31]) are worth further research for real-world scenarios.

@&#ACKNOWLEDGMENTS@&#

This work has been partially funded by the Beijing Municipal Natural Science Foundation under Grant 4142044, by the Start Funding for Minjiang Chair Professor by Fujian Province under Grant 510146, and by the State Key Laboratory of Rail Traffic Control and Safety under Grant RCS2014ZZ02. The authors thank the anonymous referees for constructive comments which greatly improve the quality of this paper.


                     ​

@&#REFERENCES@&#

