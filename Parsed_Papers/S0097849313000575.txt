@&#MAIN-TITLE@&#Landmark transfer with minimal graph

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present a method for the landmark transfer on 3D meshes that are nearly isometric.


                        
                        
                           
                           One or more custom landmarks are placed by the user on a source mesh.


                        
                        
                           
                           Our method efficiently computes corresponding landmarks on a family of target meshes.


                        
                        
                           
                           For each landmark we construct a minimal graph that accurately locates the landmark.


                        
                        
                           
                           We adopt modified histograms of geodesic distance to consistently locate a landmark.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Landmark

Feature point

Graph matching

Isometric deformation

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Landmarks play a central role in many algorithms, including correspondence computation, and shape analysis, which deal with highly relevant problems in shape retrieval. Consequently, a lot of attention has been paid to landmark extraction and matching problems during the past decade. While most existing landmark extraction methods use geometrical prominence as a main criterion of feature selection, landmarks can often be defined from the semantics that are specific to applications, independently from geometric saliency. This is particularly true for anthropometric studies [1] or computer animation [2]. Moreover, landmarks are often not persistent across pose changes or inter-subject variations.

So far, when a user is interested in characterization and selection of points on a mesh without a strongly distinguishable geometric saliency, we have often relied on manual labeling. Manual labeling has also been almost the only trustworthy way when the objective is to obtain a persistent set of landmarks across a set of multiple meshes. Existing techniques on automatic landmark extraction [3,4] and matching may not work well in such cases, since the geometric features are not necessarily persistent across deformations; for instance, in case of non-rigid deformations.

However, the work spent on manually labeling and associating landmarks is tedious and time consuming. Thus, in this work we aim at developing techniques to help with the reuse of the landmarks defined by the user, so that consistency can be assured with a minimal user input, regardless of geometric distinctiveness of the landmarks.

Our landmark transfer technique allows the user to define one or more custom landmarks on a source mesh, and efficiently computes meaningful correspondences on a family of target meshes that are approximately isometric. We develop our method for uniquely describing any given point on the shape, which is not necessarily geometrically significant. A good advantage of our method in comparison with relevant/existing techniques is its fast computation time. This is possible because our method is optimally designed for transferring a sparse set of landmarks on multiple target models while avoiding unnecessary full registration.

With the goal of optimal landmark transfer towards obtaining a consistent set of landmarks across multiple sets, we make several smaller contributions:
                        
                           (1)
                           We develop the idea of the minimal graph (Section 5), which is used for landmark transfer with minimum computation.

Identification of landmark points using a newly defined geodesic coordinates (Section 6.1): in contrast to previous approaches, we do not rely solely on geodesic distances. Instead we develop a reliable method of updating geodesic distances, which compensates well for distance changes due to imperfect isometry and assures precise and consistent landmark location.

@&#RELATED WORK@&#

In some sense, the problem we are solving in our work can be seen as a sub-problem of full correspondence, although it should be noted that our technique is tailored for the fast transfer of a sparse set of user-defined landmarks. Thus, we give a brief review of recent techniques devoted to surface registration here. In most existing registration techniques, to make the problem tractable, a smaller number of sparse correspondences are preceded, before it can be extended to a full correspondence. This strategy is often adopted for both inter-subject deformations [5,6] and approximate/near isometries of the same object [7–9]. These landmarks, whether automatically sampled/extracted [7–9] or manually labeled [5,6], facilitate specifying the rough physical characteristics or poses, so that the matching is made easier especially when surfaces exhibit large deformations.

Methods handling the large deformation can be classified into two categories: those that deal with large deformations of the same object (inter-subject registration) and those that register large inter-subject deformations. Inter-subject registration often relies on isometry-invariant local descriptors to select geometric feature points; then finds a matching among them such that the pairwise geodesic distances between all feature point pairs are preserved. Chang and Zwicker [7] developed an algorithm that assumes skeleton driven deformation among the meshes. They use the spin image as a feature descriptor and measure similarity between descriptors to find matches on a subset of vertices. For each match they generate a rigid transformation and cluster the resulting set of candidate transformations to obtain the final set of transformations. Assigning the transformations to the shapes has been made by using graph cuts optimization. Non-rigid registration proposed by Huang and coworkers [8] can be seen as a variant of the ICP (iterative closest point) algorithm, it finds optimal matching among a subset of vertices by using the Euclidean and feature distances among matching pairs. Tevs and colleagues [9] presented a RANSAC-like matching algorithm. For a set of random source points, they select the corresponding target points according to a probability function that measures the accuracy of the matching. The matching is further extended by adding additional correspondence in a way that they do not violate the isometric matching criterion. Later, the authors have extended their idea [10] by proposing a planning step to find an optimal set of feature points, instead of choosing the source points randomly. These points are matched first so that matching process converges to the solution as quickly as possible. More recently, Ovsjanikov et al. [11] have shown how dense isometric maps can be found among nearly isometric surfaces from a single correspondence, by using the Heat Kernel Map (HKM).

Most intra-subject registration techniques in computer graphics have been devoted to matching among different scans of human bodies [5,6]. They assume manually labeled landmarks on the surface and cast the matching problem as an optimization one, by using the error terms: the sum of Euclidian distances among corresponding landmarks, surface distance, and distortions of the surface under deformation. Lipman and Funkhouser [12] use Möbius transformations defined by a set of three randomly sampled points on each of the two point sets, and produces correspondences via a voting algorithm. They have shown that the algorithm can automatically find dozens of point correspondences between different object types belonging to the same class in different poses. Kim et al [13] also adopted Möbius transformations on conformal maps of each mesh, which have been computed from subsets of previously found sparse correspondences among feature points to produce a number of maps. These maps are then blended with weights that are computed with an objective function that favors low-distortion everywhere.

While it is possible to eventually consider these methods for the landmark transfer problem, our setting is different from (sparse or dense) matching of isometric surfaces. First, we assume that a sparse set of landmarks is provided by the user. This allows the user to define application-specific landmarks, independently from the geometric saliency. Second, our method efficiently computes a coherent set of corresponding landmarks on a number of target models. Unlike most existing methods that focus on computing global optimal solution to the full correspondence, we perform the transfer in one-by-one basis while avoiding unnecessary and costly full registration.

Graph matching has been successfully adopted in shape matching [14] and symmetry detection [15]. In our work, we use graphs for assisting the matching of geometric feature points within and between meshes. Graphs are constructed using geometric feature points as nodes; edges between connected feature points are weighted by the geodesic distances between the two.

@&#OVERVIEW@&#

The different steps of our algorithm are illustrated in 
                     Fig. 1. First, we build a graph G
                     
                        F
                      on the source mesh M
                     
                        S
                     , whose nodes are the set of automatically selected geometric feature points and the edges are composed of geodesic paths between the nodes (Fig. 1(a)). Then, given a user-specified landmark, we build what we call the minimal graph G
                     
                        M
                     , a subgraph of G
                     
                        F
                      (Fig. 1(b)). The graph G
                     
                        M
                      has three main properties: (1) it uniquely defines the user-provided landmark, (2) it is as small as possible in terms of number of nodes and geodesic distances, (3) it is a unique subgraph of G
                     
                        F
                     , i.e. there is no other subgraph in G
                     
                        F
                      that matches with G
                     
                        M
                     .

Next, given a target mesh M
                     
                        T
                     , we select a set of points with the local shape signatures similar to the points from graph G
                     
                        M
                     . From these feature points we compute the graph 
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              F
                           
                        
                      by connecting the points which are within the maximum geodesic radius of G
                     
                        M
                      (Fig. 1(c)). Then we use the approximate graph matching technique to find 
                        
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              M
                           
                        
                     , a subgraph of 
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              F
                           
                        
                     , that best matches with 
                        
                           
                              G
                           
                           
                              M
                           
                        
                     .

Finally, now that we have 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      matched with 
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              F
                           
                        
                      on the target mesh, we can find the corresponding landmark location on the target mesh by using 
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              M
                           
                        
                      (Fig. 1(d)). This task would be made easier if the source and target meshes are perfectly isometric, since we can simply use the geodesic distances from each of the geometric feature points to be able to uniquely identify the landmark location. Unfortunately, the meshes are only approximately isometric and such a method may fail to estimate the landmark location reliably, especially when the deformation between the two meshes is large. We solve this problem by interpolating the updated geodesic distances on the target mesh in order to compensate changes in those that were induced due to non/roughly isometric deformation.

Like many existing non-rigid registration methods, we expect that the meshes are approximately/nearly isometric. Techniques developed with such an assumption are appreciated in many applications dealing with the matching of 3D scan data of deforming objects.

As is the case with many real-world applications, we assume that the landmarks are sparse and develop our algorithm that is optimally tailored for such cases. However, our method can be easily extended to complete matching, with the modification of the use of the minimal graph. We discuss this point in further detail in Section 8.

Since our method relies heavily on the geodesic distance, its accurate computation is crucial. Later in this work, geodesic distances are used to compute isocurves of the local descriptors on the surface (Section 4.2), as well as to compute geodesic paths between geometric feature points (Section 4.3). Throughout this work, we adopt the MMP method of exact geodesic computation proposed by Mitchell et al. [16]. The algorithm itself is very similar to Dijkstra’s approximation on the graph formed by vertices and edges of the mesh. This means that the surface of the mesh is regarded as locally planar on each face. As in Dijkstra’s algorithm we start from a source vertex 
                           
                              
                                 v
                              
                              
                                 S
                              
                           
                         and compute the geodesic distance map in a region growing manner. Each edge in the graph representation of the mesh is subdivided into a set of segments by artificially adding vertices on the edge; on each Dijkstra’s step, when updating the geodesic map, a geodesic path is allowed to pass through these artificial vertices. When there is no edge partitioning, we get standard Dijkstra’s algorithm; the more partitioning vertices go through, the more precise is the geodesics computation. In the worst case the algorithm has time complexity 
                           O
                           (
                           log
                           (
                           n
                           )
                           
                              
                                 n
                              
                              2
                           
                           )
                        . Note that the partial computation is possible: we can stop computation when the path reaches certain distance or covers certain points on the surface of the mesh. This is an important point to reduce the computation time.

We use a local shape descriptor to identify the geometric features. Assuming approximate isometry between the source and target shapes, we are interested in a descriptor invariant to isometry and insensitive to the mesh discretization as much as possible. We employ the intrinsic wave descriptor proposed by Tevs et al. [10] and further refine it so that it is more robust to changes in mesh sampling.

For each vertex x we compute a set of intrinsic geodesic isocurves of increasing the geodesic distance
                           
                           
                              
                                 r
                              
                              
                                 i
                              
                           
                         from x with a fixed step 
                           Δ
                           r
                        , by using the algorithm described in Section 4.1. The length 
                           
                              
                                 l
                              
                              
                                 i
                              
                           
                         of each curve is then normalized by 
                           2
                           π
                           
                              
                                 r
                              
                              
                                 i
                              
                           
                        , the length of the geodesic isocurve on a flat surface. We sampled 16 isocurves as in Tevs et al. [10], resulting in the descriptor of a form 
                           
                              
                                 D
                              
                              
                                 x
                              
                           
                           =
                           
                              
                                 (
                                 
                                    
                                       l
                                    
                                    
                                       1
                                    
                                 
                                 /
                                 2
                                 π
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       l
                                    
                                    
                                       2
                                    
                                 
                                 /
                                 2
                                 π
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       l
                                    
                                    
                                       16
                                    
                                 
                                 /
                                 2
                                 π
                                 
                                    
                                       r
                                    
                                    
                                       16
                                    
                                 
                                 )
                              
                              T
                           
                           .
                        We approximate 
                           
                              
                                 l
                              
                              
                                 i
                              
                           
                         as a perimeter
                           
                           
                              
                                 P
                              
                              
                                 i
                              
                           
                         of a polygon whose edges connect intersection points of the real isocurve with triangle edges on the mesh. Next we take the inverse of the Euclidean norm of 
                           
                              
                                 D
                              
                              
                                 x
                              
                           
                           
                         in order to measure the geometric prominence (convexity/concavity) of vertex 
                           x
                        :
                           
                              (1)
                              
                                 γ
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       ‖
                                       
                                          
                                             
                                                D
                                             
                                             
                                                x
                                             
                                          
                                       
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 .
                              
                           
                        
                     


                        
                           γ
                           (
                           x
                           )
                         increases with growing “sharpness” of the shape in the neighborhood of 
                           x
                        . Eventually 
                           γ
                         comes up to infinitely large values for a vertex on the tip of an infinitely sharp, needle-like shape.

Having computed the convexity all over the whole of the mesh (
                        Fig. 2(a)), we sort its values 
                           γ
                           (
                           x
                           )
                         in a descending order and retain only the first 
                           α
                           ⋅
                           n
                         vertices with the highest values of 
                           γ
                        , with 
                           n
                         being the number of vertices in the mesh. This gives us a set 
                           
                              
                                 X
                              
                              
                                 γ
                              
                           
                         of most prominent vertices with respect to convexity. We normally set a user-defined parameter 
                           α
                         with a value of 0.3. As can be seen from Fig. 2(b), the vertices from 
                           
                              
                                 X
                              
                              
                                 γ
                              
                           
                         group around ‘tips’ of the mesh; we denote the number of these clusters as 
                           
                              
                                 n
                              
                              
                                 F
                              
                           
                        .

From these most prominent vertices 
                           
                              
                                 X
                              
                              
                                 γ
                              
                           
                         on the mesh, we extract a set of feature points 
                           
                              
                                 V
                              
                              
                                 F
                              
                           
                        =
                           {
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           }
                           ,
                           
                           i
                           =
                           1
                           …
                           
                              
                                 n
                              
                              
                                 F
                              
                           
                         in the following way. First, we assign vertices from 
                           
                              
                                 X
                              
                              
                                 γ
                              
                           
                         to a set of clusters L=
                           {
                           
                              
                                 L
                              
                              
                                 i
                              
                           
                           }
                        , i=1…
                        
                           
                              
                                 n
                              
                              
                                 F
                              
                           
                         according to their local shape descriptor similarity and geometrical proximity. We chose the most prominent vertex 
                           
                              x
                              ˜
                           
                           ∈
                           
                              
                                 X
                              
                              
                                 γ
                              
                           
                         and add it to an initial cluster 
                           
                              
                                 L
                              
                              
                                 0
                              
                           
                           =
                           {
                           
                              x
                              ˜
                           
                           }
                        . Then, we grow 
                           
                              
                                 L
                              
                              
                                 0
                              
                           
                         around 
                           
                              x
                              ˜
                           
                         according to the connectivity of vertices in 
                           
                              
                                 L
                              
                              
                                 0
                              
                           
                        ; the growing of the cluster stops when no more vertex x is encountered that is adjacent to 
                           
                              
                                 L
                              
                              
                                 0
                              
                           
                         and satisfies 
                           |
                           γ
                           (
                           
                              x
                              ˜
                           
                           )
                           −
                           γ
                           (
                           x
                           )
                           |
                           <
                           γ
                           ′
                        , where 
                           γ
                           ′
                         is a user-defined threshold. We repeat this process among those vertices that have not yet been labeled to construct subsequent clusters 
                           
                              
                                 L
                              
                              
                                 i
                              
                           
                         until all vertices in 
                           
                              
                                 X
                              
                              
                                 γ
                              
                           
                         have been assigned to a cluster. Second, in each of the clusters 
                           
                              
                                 L
                              
                              
                                 i
                              
                           
                         we identify a vertex 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           ∈
                           
                              
                                 L
                              
                              
                                 i
                              
                           
                         whose average geodesic distance to all the other vertices in its cluster is maximal, in preference to center points of the cluster. The extracted set 
                           {
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           }
                           ,
                           
                           i
                           =
                           1
                           …
                           
                              
                                 n
                              
                              
                                 F
                              
                           
                         represent the ‘tips’ of the mesh (Fig. 2(c)).

Given the feature points 
                           
                              
                                 V
                              
                              
                                 F
                              
                           
                        =
                           {
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           }
                           ,
                           
                           i
                           =
                           1
                           …
                           
                              
                                 n
                              
                              
                                 F
                              
                           
                         we proceed with the construction of the full graph 
                           
                              
                                 G
                              
                              
                                 F
                              
                           
                           =
                           (
                           
                              
                                 V
                              
                              
                                 F
                              
                           
                           ,
                           
                              
                                 E
                              
                              
                                 F
                              
                           
                           )
                           .
                         Each 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                         is connected by an edge 
                           e
                           ∈
                           
                              
                                 E
                              
                              
                                 F
                              
                           
                         to all the others from 
                           
                              
                                 V
                              
                              
                                 F
                              
                           
                        . So that, 
                           
                              
                                 G
                              
                              
                                 F
                              
                           
                         forms a complete graph of 
                           
                              
                                 n
                              
                              
                                 F
                              
                           
                         vertices. Let δ (v
                        
                           i
                        , v
                        
                           j
                        ) be the geodesic distance between the vertices v
                        
                           i
                         and v
                        
                           j
                        . We label each edge 
                           (
                           f
                           ,
                           
                              
                                 f
                              
                              '
                           
                           )
                           ∈
                           
                              
                                 E
                              
                              
                                 F
                              
                           
                         with the corresponding geodesic distance 
                           δ
                           (
                           f
                           ,
                           
                              
                                 f
                              
                              '
                           
                           )
                        .

Given a full graph on the source mesh, we build what we call minimal graph 
                        
                           
                              G
                           
                           
                              M
                           
                        
                     , a subgraph of 
                        
                           
                              G
                           
                           
                              F
                           
                        
                     . The graph 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      has two main properties: (1) it uniquely defines the user-provided landmark; i.e. position of a landmark can be uniquely identified by its geodesic distances to the nodes of 
                        
                           
                              G
                           
                           
                              M
                           
                        
                     . (2) It is as small as possible in terms of the number of nodes and the geodesic distances it spans.

Given a landmark v specified by the user, we build a minimal graph 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      by iteratively adding nodes from the feature point set 
                        
                           
                              V
                           
                           
                              F
                           
                        
                     =
                        {
                        
                           
                              f
                           
                           
                              i
                           
                        
                        }
                        ,
                        
                        i
                        =
                        1
                        …
                        
                           
                              n
                           
                           
                              F
                           
                        
                      one by one, in an order of proximity. We repeat this process until either all the following conditions are satisfied, or all nodes in 
                        
                           
                              V
                           
                           
                              F
                           
                        
                      are considered.
                        
                           1
                           Position of v is uniquely defined by its geodesic distances to each node in 
                                 
                                    
                                       G
                                    
                                    
                                       M
                                    
                                 
                              .


                              v is enclosed by the nodes of 
                                 
                                    
                                       G
                                    
                                    
                                       M
                                    
                                 
                              .


                              
                                 
                                    
                                       G
                                    
                                    
                                       M
                                    
                                 
                               is a unique subgraph of 
                                 
                                    
                                       G
                                    
                                    
                                       F
                                    
                                 
                               up to a symmetry.

Note that we cannot guarantee that 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      always meets all these conditions. In such case, 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      becomes equal to 
                        
                           
                              G
                           
                           
                              F
                           
                        
                        .
                      
                     Algorithm 1 to Algorithm 3 summarizes the procedure for the minimal graph construction.
                        Algorithm 1
                        MinimalGraphConstruction
                              
                                 
                                    Input: 
                                    
                                       
                                          
                                             G
                                          
                                          
                                             F
                                          
                                       
                                    : the full graph of the source mesh,
                                       
                                          
                                             v: a landmark specified by the user.


                                    Init:
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                       =
                                       ∅
                                    , 
                                       
                                          
                                             V
                                          
                                          
                                             M
                                          
                                       
                                       =
                                       ∅
                                     ;


                                    
                                       
                                          
                                             V
                                          
                                          
                                             F
                                          
                                       
                                       ←
                                     all nodes of 
                                       
                                          
                                             G
                                          
                                          
                                             F
                                          
                                       
                                     sorted in an order of increasing geodesic distance from v;


                                    begin
                                 


                                    n
                                    
                                       matching
                                     
                                    
                                       ←
                                       ∞
                                    //Number of matchings of 
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                     to 
                                       
                                          
                                             G
                                          
                                          
                                             F
                                          
                                       
                                    ;


                                    Err
                                    
                                       geod
                                    ←
                                       ∞
                                    //Geodesic error;


                                    
                                       
                                          
                                             g
                                          
                                          
                                             0
                                          
                                       
                                    ←first node from 
                                       
                                          
                                             V
                                          
                                          
                                             F
                                          
                                       
                                    ;


                                    
                                       
                                          
                                             V
                                          
                                          
                                             M
                                          
                                       
                                       ←
                                       
                                          
                                             V
                                          
                                          
                                             M
                                          
                                       
                                       
                                          ∪
                                          
                                       
                                       {
                                       
                                          
                                             g
                                          
                                          
                                             0
                                          
                                       
                                       }
                                    ;


                                    
                                       
                                          
                                             V
                                          
                                          
                                             F
                                          
                                       
                                       ←
                                       
                                          
                                             V
                                          
                                          
                                             F
                                          
                                       
                                       \
                                       {
                                       
                                          
                                             g
                                          
                                          
                                             0
                                          
                                       
                                       }
                                    ;


                                    repeat
                                    
                                       
                                          
                                             g←fetch next node from 
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      F
                                                   
                                                
                                             ;


                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      M
                                                   
                                                
                                                ←
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      M
                                                   
                                                
                                                
                                                   ∪
                                                   
                                                
                                                {
                                                g
                                                }
                                             ;


                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      F
                                                   
                                                
                                                ←
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      F
                                                   
                                                
                                                \
                                                {
                                                g
                                                }
                                             ;


                                             
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      M
                                                   
                                                
                                             ←a complete graph with 
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      M
                                                   
                                                
                                              as nodes;


                                             if ( countMatching 
                                                (
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      M
                                                   
                                                
                                                ,
                                                
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      F
                                                   
                                                
                                                )
                                             <n
                                             
                                                matching
                                             ) AND
                                                
                                                   (localizationErr 
                                                         (
                                                         v
                                                         ,
                                                         
                                                            
                                                               G
                                                            
                                                            
                                                               M
                                                            
                                                         
                                                         )
                                                      <err
                                                      
                                                         geod
                                                      )


                                                      err
                                                      
                                                         geod
                                                       ←localizationError (v, 
                                                         
                                                            
                                                               G
                                                            
                                                            
                                                               M
                                                            
                                                         
                                                         )
                                                       ;


                                                      n
                                                      
                                                         matching
                                                      ←countMatching (
                                                         
                                                            
                                                               G
                                                            
                                                            
                                                               M
                                                            
                                                         
                                                      ,
                                                         
                                                         
                                                            
                                                               G
                                                            
                                                            
                                                               F
                                                            
                                                         
                                                      ) ;


                                             else
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               V
                                                            
                                                            
                                                               M
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               V
                                                            
                                                            
                                                               M
                                                            
                                                         
                                                         \
                                                         {
                                                         g
                                                         }
                                                       ;


                                             endif
                                          


                                             b
                                             
                                                enclosed
                                              
                                             
                                                ←
                                              isEnclosedByNodes 
                                                (
                                                v
                                                ,
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      M
                                                   
                                                
                                                )
                                             ;


                                    until (n
                                    
                                       matching
                                     ==1 AND err
                                    
                                       geod
                                     <
                                       2
                                       ε
                                     AND b
                                    
                                       enclosed== 
                                    true) OR 
                                       (
                                       
                                          
                                             V
                                          
                                          
                                             F
                                          
                                       
                                       =
                                       =
                                       ∅
                                       )
                                    ;


                                    return 
                                    
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                    ;


                                    end
                                 

localizationError (v, 
                              
                                 
                                    G
                                 
                                 
                                    M
                                 
                              
                           ).
                              
                                 
                                    // Estimate the range of regions in which v can be localized in 
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                    .


                                    Input: 
                                    
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                    : the current minimal graph,
                                       
                                          
                                             v: a landmark specified by the user.


                                    Init: 
                                    
                                       U
                                       ←
                                       ∅
                                    ,
                                       
                                          
                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      M
                                                   
                                                
                                                ←
                                              all nodes of 
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      M
                                                   
                                                
                                             ;


                                             
                                                ε
                                                ←
                                              a small value;


                                    begin
                                 


                                    
                                       U
                                       ←
                                       {
                                       
                                          
                                             v
                                          
                                          
                                             u
                                          
                                       
                                       |
                                       
                                       
                                       
                                          ‖
                                          
                                             δ
                                             (
                                             v
                                             ,
                                             
                                                
                                                   g
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             −
                                             δ
                                             (
                                             
                                                
                                                   v
                                                
                                                
                                                   u
                                                
                                             
                                             ,
                                             
                                                
                                                   g
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          ‖
                                       
                                       <
                                       ε
                                       ,
                                       
                                       ∀
                                       
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             M
                                          
                                       
                                       }
                                    ;


                                    err
                                    
                                       ←
                                     the longest geodesic distance among 
                                       {
                                       
                                          
                                             v
                                          
                                          
                                             u
                                          
                                       
                                       }
                                    ;


                                    return 
                                    err;


                                    end
                                 

isEnclosedByNodes (v, 
                              
                                 
                                    G
                                 
                                 
                                    M
                                 
                              
                           )
                              
                                 
                                    // Check if v is enclosed by nodes of 
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                    .


                                    Input: 
                                    
                                       
                                          
                                             G
                                          
                                          
                                             M
                                          
                                       
                                    : the current minimal graph,
                                       
                                          
                                             v: a landmark specified by the user.


                                    Init: 
                                    
                                       d
                                       ←
                                     a small value;


                                    begin
                                 


                                    
                                       
                                          
                                             N
                                          
                                          
                                             v
                                          
                                       
                                       ←
                                       {
                                       p
                                       ∈
                                       
                                          
                                             M
                                          
                                          
                                             S
                                          
                                       
                                       |
                                       
                                          ‖
                                          
                                             δ
                                             (
                                             v
                                             ,
                                             p
                                             )
                                          
                                          ‖
                                       
                                       <
                                       d
                                       }
                                    ;


                                    if ∃p∈N
                                       V
                                     :
                                       δ
                                       (
                                       p
                                       ,
                                       
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       >
                                       δ
                                       (
                                       v
                                       ,
                                       
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       ,
                                       ∀
                                       
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       ∈
                                       
                                          
                                             V
                                          
                                          
                                             M
                                          
                                       
                                    
                                 


                                    then
                                    
                                       
                                          
                                             return false;


                                    else
                                    
                                       
                                          
                                             return true;


                                    end
                                 


                     Unique coordinates condition. Let 
                        
                           
                              V
                           
                           
                              M
                           
                        
                     =
                        {
                        
                           
                              g
                           
                           
                              i
                           
                        
                        }
                        ,
                        
                        i
                        =
                        1.
                        .
                        
                           
                              n
                           
                           
                              M
                           
                        
                      be the set of nodes of 
                        
                           
                              G
                           
                           
                              M
                           
                        
                     . We first find the set 
                        U
                      of all vertices 
                        
                           
                              v
                           
                           
                              u
                           
                        
                      whose geodesic distances to 
                        
                           
                              g
                           
                           
                              i
                           
                        
                      are of approximately equal length to those of v, as represented by:
                        
                           (2)
                           
                              
                              
                                 ‖
                                 
                                    δ
                                    (
                                    v
                                    ,
                                    
                                       
                                          g
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    −
                                    δ
                                    
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          u
                                       
                                    
                                    ,
                                    
                                       
                                          g
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ‖
                              
                              <
                              ε
                              
                              f
                              o
                              r
                              
                              ∀
                              
                                 
                                    g
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    V
                                 
                                 
                                    M
                                 
                              
                           
                        
                     where ε is a distances tolerance of equal geodesic length. If the largest geodesic distance among the vertices in 
                        U
                      is smaller than 
                        2
                        ⋅
                        ε
                     , we consider that 
                        
                           
                              G
                           
                           
                              M
                           
                        
                        
                     satisfies the unique coordinates condition, i.e. it can accurately locate v (see 
                     Fig. 3).


                     Enclose-by-nodes condition. The second condition requires v to be enclosed by the nodes of 
                        
                           
                              G
                           
                           
                              M
                           
                        
                     , which makes the localization of v more robust to small changes of geodesic distances. In 
                     Fig. 4(a), feature points g
                     
                        A
                     , g
                     
                        B
                      and g
                     
                        C
                      are located on one (the left) side of the landmark v. When the geodesic distances δ(v, g
                     
                        A
                     ), δ(v, g
                     
                        B
                     ) and δ(v, g
                     
                        C
                     ) increase or decrease with the deformation, the estimated position of v will move to right or left, respectively. In Fig. 4(b), on the other hand, by using additional feature point g
                     
                        D
                      located on the other side of v, the distance changes influenced by δ(v, g
                     
                        A
                     ), δ(v, g
                     
                        B
                     ) and δ(v, g
                     
                        C
                     ) will counterbalance with the change of δ(v, g
                     
                        D
                     ). This strategy assumes simultaneous increase or decrease of geodesic distances, which has been usually the case in our experiments.

The algorithm proceeds as follows. First, we compute a set N
                        V
                      of all the vertices in the neighborhood (within certain geodesic distance) of v. If there exists a point p∈N
                        V
                      which is located further (with respect to v) to all the nodes of 
                        
                           
                              G
                           
                           
                              M
                           
                        
                     , then 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      does not satisfy the enclose-by-nodes condition with respect to v.


                     Unique subgraph condition. Primary step of our minimal graph construction algorithm is to ensure that user’s landmark is defined uniquely on the source mesh. Several possible matching between 
                        
                           
                              G
                           
                           
                              M
                           
                        
                        
                     and 
                        
                           
                              G
                           
                           
                              F
                           
                        
                      implies multiple matching between 
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              M
                           
                        
                      and 
                        
                           
                              
                                 G
                                 ^
                              
                           
                           
                              F
                           
                        
                     , and therefore multiple transferred landmarks that are computed from each matching. In order to avoid such an ambiguity, we build 
                        
                           
                              G
                           
                           
                              M
                           
                        
                      as a unique subgraph of 
                        
                           
                              G
                           
                           
                              F
                           
                        
                     .

We initially tried to check the number of matching of the minimal graph with the full graph at each iteration, and stop growing the graph when we find only one matching. The graph matching algorithm we use is developed in spirit of Ullmann’s tree-search subgraph isomorphism [17], which we describe in Appendix A. However, in the presence of symmetry in the mesh, which is often the case, the minimal graph will always be equal to the full graph, which is undesirable. Thus, we slightly modify our initial algorithm and add vertices to the current minimal graph only when the resulting graph reduces the number of matching to the full graph. This means that the our method does not guaranty the uniqueness of the matching of the minimal graph to the full graph, permitting the symmetric ambiguity. Further discussions related to this aspect can be found in Section 7.5.

Similarly to the source, we first extract the feature points on the target mesh using the convexity values computed from the modified intrinsic wave descriptor (Section 4.2). These feature points constitute the nodes of 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 F
                              
                           
                        , the full graph on the target mesh. To distinguish target mesh structures from the counterparts of the source, we use a ‘hat’ notation. Next, we compute the geodesic paths among them which serve as weighted edges of 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 F
                              
                           
                        . We avoid computing all the geodesic paths by limiting ourselves to those geodesic paths on the target mesh whose length is smaller or equal to l
                        
                           max
                        , the longest geodesic distance in 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                        . An explanation for this is that paths that exceed l
                        
                           max
                         will obviously not match with any path of the minimal graph 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                        .

Having computed 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 F
                              
                           
                        , our goal now is to find a subgraph 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 M
                              
                           
                         of 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 F
                              
                           
                        , that best matches with 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                        . In general, due to imperfect isometries in the real world data sets, full graphs might not be consistent across the given meshes. We handle this problem again by using a variant of Ullmann’s graph matching algorithm [17] (see Appendix A for a detailed description), with partial matching. This time, while building a search tree of possible matching solutions we consider partial matching as well, i.e. we look for a subgraph of 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                         which is isomorphic to some subgraph of 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 F
                              
                           
                        . For each possible matching an error value is assigned, and the matching with the minimal error is chosen as the solution 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 M
                              
                           
                        =(
                           
                              
                                 
                                    V
                                    ^
                                 
                              
                              
                                 M
                              
                           
                           ,
                           
                              
                                 
                                    E
                                    ^
                                 
                              
                              
                                 M
                              
                           
                        ), which is then used to locate the landmark on the target mesh.

If the source mesh 
                           
                              
                                 M
                              
                              
                                 S
                              
                           
                         and target mesh 
                           
                              
                                 M
                              
                              
                                 T
                              
                           
                         are perfectly isometric, then we are able to uniquely identify the landmark location by using solely the geodesic distances from each of the nodes of 
                           
                              
                                 
                                    G
                                    ^
                                 
                              
                              
                                 M
                              
                           
                        . Let us denote a set of geodesic distances from a vertex v∈
                           
                              
                                 M
                              
                              
                                 S
                              
                           
                         to the vertices from 
                           
                              
                                 V
                              
                              
                                 M
                              
                           
                           =
                           {
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           }
                           ,
                           i
                           =
                           1.
                           .
                           
                              
                                 
                                    n
                                    ^
                                 
                              
                              
                                 M
                              
                           
                        , as
                           
                              (3)
                              
                                 
                                    
                                       δ
                                    
                                    
                                       
                                          
                                             M
                                          
                                          
                                             S
                                          
                                       
                                    
                                 
                                 (
                                 v
                                 )
                                 =
                                 
                                    
                                       (
                                       δ
                                       (
                                       v
                                       ,
                                       
                                          
                                             g
                                          
                                          
                                             1
                                          
                                       
                                       )
                                       ,
                                       …
                                       ,
                                       δ
                                       (
                                       v
                                       ,
                                       
                                          
                                             g
                                          
                                          
                                             
                                                
                                                   
                                                      n
                                                      ^
                                                   
                                                
                                                
                                                   M
                                                
                                             
                                          
                                       
                                       )
                                       )
                                    
                                    T
                                 
                                 ,
                              
                           
                        
                     

and refer to it as feature point coordinates of v (FP-coordinates). Then, we must be able to uniquely determine the location of the transferred point 
                           
                              v
                              ^
                           
                         on 
                           
                              
                                 M
                              
                              
                                 T
                              
                           
                         that satisfies 
                           
                              
                                 δ
                              
                              
                                 
                                    
                                       M
                                    
                                    
                                       T
                                    
                                 
                              
                           
                           (
                           
                              v
                              ^
                           
                           )
                           =
                           
                              
                                 δ
                              
                              
                                 
                                    
                                       M
                                    
                                    
                                       S
                                    
                                 
                              
                           
                           (
                           v
                           )
                           ,
                         where
                           
                              (4)
                              
                                 
                                    
                                       δ
                                    
                                    
                                       
                                          
                                             M
                                          
                                          
                                             T
                                          
                                       
                                    
                                 
                                 (
                                 
                                    v
                                    ^
                                 
                                 )
                                 =
                                 
                                    
                                       (
                                       δ
                                       (
                                       
                                          v
                                          ^
                                       
                                       ,
                                       
                                          
                                             
                                                g
                                                ^
                                             
                                          
                                          
                                             1
                                          
                                       
                                       )
                                       ,
                                       …
                                       ,
                                       δ
                                       (
                                       
                                          v
                                          ^
                                       
                                       ,
                                       
                                          
                                             
                                                g
                                                ^
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      n
                                                      ^
                                                   
                                                
                                                
                                                   M
                                                
                                             
                                          
                                       
                                       )
                                       )
                                    
                                    T
                                 
                              
                           
                        
                     

However, in practice, 
                           
                              
                                 M
                              
                              
                                 S
                              
                           
                         and 
                           
                              
                                 M
                              
                              
                                 T
                              
                           
                         are not isometric and in general case 
                           
                              
                                 δ
                              
                              
                                 
                                    
                                       M
                                    
                                    
                                       T
                                    
                                 
                              
                           
                           (
                           
                              v
                              ^
                           
                           )
                           ≠
                           
                              
                                 δ
                              
                              
                                 
                                    
                                       M
                                    
                                    
                                       S
                                    
                                 
                              
                           
                           (
                           v
                           )
                        . This is partly due to the definition of the geodesic distance [18], the shortest surface distance between the two points. As illustrated in 
                        Fig. 5, the shortest geodesic path between the two points of interest changes as the shape deforms. Along the bending of the cylinder, we observed up to 9% of change in the geodesic distances.

Our solution to the above problem is to modify the geodesic distances on the target mesh in a way that they become similar to those of the source mesh. Let 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                        ,
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 j
                              
                           
                        ,
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                        , 
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                         be two feature points on the target mesh and their corresponding counterpart on the source mesh respectively. Due to the non-isometric deformation, the distances 
                           δ
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           ,
                           
                              v
                              ^
                           
                           )
                         are different from
                           
                           δ
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           ,
                           v
                           )
                        , with 
                           v
                         and 
                           
                              v
                              ^
                           
                         being a vertex on the source mesh and its counterpart on the target mesh respectively. The idea is to modify the all geodesic distances from 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         such that these geodesic distances become closer to those of the source mesh. That is, the distance 
                           δ
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 j
                              
                           
                           )
                         will become equal to
                           δ
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                           )
                        . Similarly, the distance 
                           δ
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           ,
                           v
                           )
                           
                        of vertex v in the close neighborhood of 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 j
                              
                           
                         (i.e. 
                           δ
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           ,
                           v
                           )
                           
                           δ
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 j
                              
                           
                           )
                           
                        ) will be become close to
                           
                           δ
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                           )
                        .


                        Computation of the feature point coordinates using inverse distance weighting (IDW). Let 
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                         be a vertex of the minimal graph on the source mesh and 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         its counterpart on the target mesh. We compute the geodesic distance histogram of these two vertices. The geodesic distance histogram 
                           H
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           )
                         describes the distribution of the geodesic distances between the vertex 
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                         and all the other vertices of the mesh 
                           
                              
                                 M
                              
                              
                                 S
                              
                           
                        . As illustrated in 
                        Fig. 6, the histograms 
                           H
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           )
                         and 
                           H
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           )
                         might be dissimilar, although 
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         are the same point on the shape. The main idea is to modify the geodesic distances of 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         such that the histogram 
                           H
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           )
                         becomes similar to
                           
                           H
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           )
                        . This is done by using the inverse distance weighting method and the geodesic distances of the minimal graph vertices.

We define the interpolated geodesic distance 
                           
                              
                                 δ
                              
                              
                                 I
                              
                           
                           (
                           
                              v
                              ^
                           
                           ,
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           )
                         by means of inverse distance weighting:
                           
                              (5)
                              
                                 
                                    
                                       δ
                                    
                                    
                                       I
                                    
                                 
                                 (
                                 
                                    v
                                    ^
                                 
                                 ,
                                 
                                    
                                       
                                          g
                                          ^
                                       
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       
                                          
                                             
                                                n
                                                ^
                                             
                                          
                                          
                                             M
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             j
                                          
                                       
                                       (
                                       
                                          v
                                          ^
                                       
                                       )
                                       (
                                       
                                          
                                             g
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             
                                                
                                                   
                                                      n
                                                      ^
                                                   
                                                
                                                
                                                   M
                                                
                                             
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       
                                          v
                                          ^
                                       
                                       )
                                    
                                 
                                 ,
                              
                           
                        where
                           
                              
                                 
                                    
                                       w
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 
                                    v
                                    ^
                                 
                                 )
                                 =
                                 
                                    1
                                    
                                       
                                          
                                             (
                                             
                                                v
                                                ^
                                             
                                             ,
                                             
                                                
                                                   
                                                      g
                                                      ^
                                                   
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                          
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The value 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         is a positive real number, called the power parameter. 
                           
                              
                                 
                                    n
                                    ^
                                 
                              
                              
                                 M
                              
                           
                         is the number of vertices of the minimal graph. Each vertex of the minimal graph is assigned a different power parameter. Greater values of 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         assign greater influence of the vertex 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 j
                              
                           
                        . The geodesic distance 
                           
                              
                                 δ
                              
                              
                                 I
                              
                           
                           (
                           
                              v
                              ^
                           
                           ,
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           )
                         is calculated with a weighted average of the geodesic distances between 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         and other feature points on the source mesh. Intuitively speaking, as the vertex 
                           
                              v
                              ^
                           
                         becomes closer to a feature point 
                           
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                        , its interpolated geodesic distance to 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           
                        becomes closer to 
                           δ
                           (
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                           ,
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           )
                        .

Using Eq. (5), we compute the interpolated geodesic distance of 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         to all the other vertices and generate the corresponding histogram 
                           
                              
                                 H
                              
                              
                                 I
                              
                           
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           )
                        . An important step is to find the power parameters p
                        
                           j
                         for each minimal graph vertex 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 j
                              
                           
                         so as to minimize the difference between 
                           
                              
                                 H
                              
                              
                                 I
                              
                           
                           (
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                           )
                         and 
                           H
                           (
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                           )
                        . We formulate this as a minimization problem where the unknown variables are the power parameters p
                        
                           j
                         and the cost function is
                           
                              (6a)
                              
                                 d
                                 (
                                 
                                    
                                       H
                                    
                                    
                                       I
                                    
                                 
                                 (
                                 
                                    
                                       
                                          g
                                          ^
                                       
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 H
                                 (
                                 
                                    
                                       g
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 )
                                 ,
                              
                           
                        
                     

where d is a metric to measure the distance between the two histograms. This minimization problem is computed for each minimal graph vertex 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         separately.

One of the most common histogram metrics is the Earth Mover’s distance [19]. In our implementation, we use a different version of the metric as follows. We compute a vector containing all the geodesic distances from 
                           
                              
                                 g
                              
                              
                                 i
                              
                           
                         sorted in an increasing order. The same vector is calculated for 
                           
                              
                                 
                                    g
                                    ^
                                 
                              
                              
                                 i
                              
                           
                        . The distance between the two histograms is calculated as the norm of the difference of these two vectors. We assume that the vertex sampling on the source and target meshes is the same and the source and target meshes contain the same number of vertices.

To demonstrate the advantages of using the inverse distance weighting (IDW), we have compared the length of the geodesic paths before and after applying the IDW. Given a source and a target mesh whose correspondence is known, we have measured and compared the change of length of the geodesic paths between all pairs of vertices on the source mesh and their corresponding counterpart on the target. As shown in 
                        Fig. 7, the average of length variation and the standard deviation measured on the cat models is 10.91 and 2.87, respectively. After applying the IDW, they have been reduced to 3.9 and 1.11.

In Section 7.3, we further demonstrate the significantly improved performance of the landmark transfer with the use of IDW. These results clearly show that the IDW helps reducing the change of the geodesic distances caused by non-isometric deformation.


                        Landmark transfer using the FP-coordinates. Now that we have the interpolated geodesic distances on the target mesh, we proceed to the landmark transfer. Let 
                           v
                         be a landmark on the source mesh; the goal is to compute the location of corresponding landmark 
                           
                              v
                              ^
                           
                         on the target mesh. Note that 
                           
                              v
                              ^
                           
                         is generally not a vertex on the mesh.
                           
                              (1)
                              For each geometric feature points 
                                    
                                       
                                          
                                             g
                                             ^
                                          
                                       
                                       
                                          i
                                       
                                    
                                 , we determine a set T
                                 
                                    i
                                  of all triangles which contain at least one vertex v
                                 
                                    t
                                  whose geodesic distances 
                                    
                                       
                                          δ
                                       
                                       
                                          I
                                       
                                    
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          t
                                       
                                    
                                    ,
                                    
                                       
                                          
                                             g
                                             ^
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                  are in the interval 
                                    [
                                    1
                                    /
                                    2
                                    
                                    δ
                                    (
                                    v
                                    ,
                                    
                                       
                                          g
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    ,
                                    3
                                    /
                                    2
                                    δ
                                    (
                                    v
                                    ,
                                    
                                       
                                          g
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    ]
                                 . The set of triangles that are common in all T
                                 
                                    i
                                 ’s (i=1…
                                    
                                       
                                          
                                             n
                                             ^
                                          
                                       
                                       
                                          M
                                       
                                    
                                 ) are considered for step 2. Needless to say, the process can be accelerated by limiting the subsequent range test for 
                                    
                                       
                                          
                                             g
                                             ^
                                          
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                  to those triangles in T
                                 
                                    i
                                 . The final pruned list of triangles 
                                    T
                                    =
                                    
                                       ∩
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                
                                                   n
                                                   ^
                                                
                                             
                                             
                                                M
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             i
                                          
                                       
                                    
                                  is used for further processing.

For each triangle t∈T, we compute a vertex 
                                    
                                       
                                          
                                             v
                                             ^
                                          
                                       
                                       
                                          t
                                       
                                    
                                  such that its FP-coordinates are as close as possible to those of the landmark 
                                    v
                                  on the source mesh. The FP-coordinates of the points inside t are interpolated from the FP-coordinates of the vertices of t using the barycentric coordinates. Let v
                                 
                                    t1
                                 , v
                                 
                                    t2
                                  and v
                                 
                                    t3
                                  be the three vertices of the triangle t and w
                                 
                                    c, 
                                 c=1,0.3 the barycentric coordinates of 
                                    
                                    
                                       
                                          
                                             v
                                             ^
                                          
                                       
                                       
                                          t
                                       
                                    
                                  that need to be determined. The barycentric coordinates of 
                                    
                                       
                                          
                                             v
                                             ^
                                          
                                       
                                       
                                          t
                                       
                                    
                                  such that its FP-coordinates are as close as possible to those of v are given by
                                    
                                       (6b)
                                       
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           I
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           v
                                                                        
                                                                        
                                                                           t
                                                                           1
                                                                        
                                                                     
                                                                     ,
                                                                     
                                                                        
                                                                           
                                                                              g
                                                                              ^
                                                                           
                                                                        
                                                                        
                                                                           1
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           I
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           v
                                                                        
                                                                        
                                                                           t
                                                                           2
                                                                        
                                                                     
                                                                     ,
                                                                     
                                                                        
                                                                           
                                                                              g
                                                                              ^
                                                                           
                                                                        
                                                                        
                                                                           1
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           I
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           v
                                                                        
                                                                        
                                                                           t
                                                                           3
                                                                        
                                                                     
                                                                     ,
                                                                     
                                                                        
                                                                           
                                                                              g
                                                                              ^
                                                                           
                                                                        
                                                                        
                                                                           1
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  ⋮
                                                               
                                                               
                                                                  ⋮
                                                               
                                                               
                                                                  ⋮
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           I
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           v
                                                                        
                                                                        
                                                                           t
                                                                           1
                                                                        
                                                                     
                                                                     ,
                                                                     
                                                                        
                                                                           
                                                                              g
                                                                              ^
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    n
                                                                                    ^
                                                                                 
                                                                              
                                                                              
                                                                                 M
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           I
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           v
                                                                        
                                                                        
                                                                           t
                                                                           3
                                                                        
                                                                     
                                                                     ,
                                                                     
                                                                        
                                                                           
                                                                              g
                                                                              ^
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    n
                                                                                    ^
                                                                                 
                                                                              
                                                                              
                                                                                 M
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           δ
                                                                        
                                                                        
                                                                           I
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           v
                                                                        
                                                                        
                                                                           t
                                                                           3
                                                                        
                                                                     
                                                                     ,
                                                                     
                                                                        
                                                                           
                                                                              g
                                                                              ^
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    n
                                                                                    ^
                                                                                 
                                                                              
                                                                              
                                                                                 M
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           w
                                                                        
                                                                        
                                                                           1
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           w
                                                                        
                                                                        
                                                                           2
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           w
                                                                        
                                                                        
                                                                           3
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   =
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     δ
                                                                     (
                                                                     v
                                                                     ,
                                                                     
                                                                        
                                                                           g
                                                                        
                                                                        
                                                                           1
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  ⋮
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     δ
                                                                     (
                                                                     v
                                                                     ,
                                                                     
                                                                        
                                                                           g
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    n
                                                                                    ^
                                                                                 
                                                                              
                                                                              
                                                                                 M
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   with
                                                   
                                                   for
                                                   
                                                   c
                                                   =
                                                   1
                                                   …
                                                   3
                                                   
                                                   and
                                                   
                                                      ∑
                                                      
                                                         c
                                                         =
                                                         1
                                                      
                                                      3
                                                   
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   =
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              

If the number of feature points are three (
                                    
                                       
                                          
                                             n
                                             ^
                                          
                                       
                                       
                                          M
                                       
                                    
                                 =3), we can compute the exact solution to the above equation. When 
                                    
                                       
                                          
                                             n
                                             ^
                                          
                                       
                                       
                                          M
                                       
                                    
                                 >3, w
                                 
                                    c
                                 ’s are determined by taking the least square solution.

Finally, for each triangle t∈T, we compute
                                    (
                                    
                                       
                                          
                                             v
                                             ^
                                          
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 , the FP-coordinates of 
                                    
                                       
                                          
                                             v
                                             ^
                                          
                                       
                                       
                                          t
                                       
                                    
                                  by using the w
                                 
                                    c
                                 ’s we computed from (6b) and choose the one that minimizes the distance error as defined by
                                    
                                       (7)
                                       
                                          
                                             v
                                             ^
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      argmin
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               v
                                                               ^
                                                            
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         v
                                                         ^
                                                      
                                                   
                                                   
                                                      t
                                                   
                                                
                                             
                                          
                                          
                                             ‖
                                             
                                                δ
                                                (
                                                
                                                   
                                                      
                                                         v
                                                         ^
                                                      
                                                   
                                                   
                                                      t
                                                   
                                                
                                                )
                                                −
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                                  (
                                                                  v
                                                                  ,
                                                                  
                                                                     
                                                                        g
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               ⋮
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  δ
                                                                  (
                                                                  v
                                                                  ,
                                                                  
                                                                     
                                                                        g
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 n
                                                                                 ^
                                                                              
                                                                           
                                                                           
                                                                              M
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   )
                                                
                                             
                                             ‖
                                          
                                       
                                    
                                 
                              

@&#RESULTS@&#

In this section, we present results of experiments with the method described in the preceding sections. We implemented our algorithm using Matlab. All measurements were made on a Windows 7 Professional machine with 16GB of memory and Intel Core i7–2600 processor running at 3.40GHz. We tested our method on the models from the Non-Rigid World Benchmark and High-resolution Tosca data set [20], as well as on our own synthetic embossed plate models. Fig. 13 shows some of the results we obtained. Note that these models exhibit deformations which are only approximate isometries; also each family of objects have a mesh in an initial posture, which is labeled as a mesh in a rest posture (or source mesh). The landmarks have been chosen to be a set of 100 points evenly spaced over the surface using Poisson sampling. In order to avoid repetitive computation of the graph matching, the minimal graph is set to the full graph, so that, the graph matching is computed only once for the transfer of the 100 points. Compared to the minimal graph method, the computation time is about 2 to 3 times higher. We conducted a series of experiments and applied our algorithm to all the vertices in Poisson sampling sets. The quality of transfer is compared with the ground-truth correspondences from high-resolution Tosca models (
                     
                     
                     
                     
                     Fig. 8), and with correspondences computed with existing methods (see Section 7.4).

In 
                        Table 1 an average computation time is shown, which was measured while transferring each of the landmarks; the time was measured and then averaged over landmark transfer to 10 cat models, 6 centaur models, 8 dog models, and 3 embossed plate models.

We clearly see that the computation of the updated geodesic distances (see Section 6.1) is the most time-consuming task. However, an update of the geodesic distances according to the histograms (see Fig. 6) is required only once per each target mesh. That is, it does not matter how many user landmarks are to be transferred from the source to the target (e.g. 10 or 103), the geodesics are updated only once. i.e. it makes our technique very efficient when working with a number of landmarks. For example, once the geodesic distances are updated, it takes only 256ms to transfer a landmark on the cat model (Table 1).

As shown in Table 1, the overall time of landmark transfer is just a matter of seconds; except for the centaur model. On the centaur our method shows rather a high computation time. The main reason is that this mesh has many more geometric feature points compared to other models (e.g. 15 feature points for the centaur vs. only 8 for the cat). Since 
                           
                              
                                 t
                              
                              
                                 H
                              
                           
                         is a function of a number of vertices and geometric features, our technique works fast on the embossed plate, which also has many geometric features, but the number of vertices is much less compared to the centaur model. In general, the computation time is an advantage of our method. It takes about 1 minute to find full correspondence for the cat model (on Matlab platform). This has been possible because (1) the update of the geodesic distances has been made only once, and (2) full graph has been used in place of minimal graph for every vertex.

In order to measure the quality of the results of landmark transfer, we perform cross-validations by using the Tosca high-resolution dataset as ground truth. We applied our techique to a mixed data set of different subjects in different postures. Our test cases evaluate the maximum and mean errors while transferring 100 Poisson sampled landmarks: on the cat models (Fig. 8(a)), for the Centaur models (Fig. 8(b)). The error of landmark transfer is measured as a geodesic distance deviation from the corresponding ground truth, further normalized by square root of the mesh surface area. Average error values for all data sets are evaluated as shown in Fig. 8(c). Due to imperfect isometries, the error values vary from one posture to another (clearly visible in Fig. 8(a, b)). (Be reminded that these models are only nearly isometric. For example, some of the cat postures show up to 30% of the geodesic distance change with respect to the rest posture. With the embossed plate, maximum of 40% of the geodesic changes can be observed.)

As shown in 
                        
                        Fig. 14, our method shows good quality of results on all the models. We can clearly see that the quality of landmark transfer depends on the landmark location with respect to the nodes of the minimal graph and degree of deformation in its neighborhood. In general, the best performance is obtained if the landmark location is close to the nodes of the minimal graph (tips of the limbs, tips of the breast). On the other hand, in the regions of highly non-isometric deformation the quality of transfer degrades (rear part and joints of humans, joints of animals). Note that we obtain a good quality of match on the embossed plate (Fig. 14(j)) despite its high degree of non-isometric deformation. This is especially true on the top center part, which is contributable to the fact that landmarks are well-surrounded by many geometric feature points. Bottom part of the plate lacks feature points, which explains higher errors on it.

Minimal graph plays one of the central roles in our landmark transfer algorithm; and naturally, the quality of transfer is correlated to the selection of 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                        . In Fig. 9 (a, b) is shown a case when the user landmark was picked at the base of a human neck, which is close to the geometric feature points on the head, breast and hands. With such settings our minimal graph construction algorithm gives a compact 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                        . On the other hand, when the user landmark is located far away from geometric feature points, as in Fig. 9 (c, d), 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                         turns out to be ‘large’ in terms of the geodesic distances of the edges. A ‘small’ minimal graph is preferred in our algorithm. First reason for this is that the shorter the graph edges are, the less distortion and error is introduced for corresponding graph on the other isometric mesh. Second, when 
                           
                              
                                 G
                              
                              
                                 M
                              
                           
                         is small, less geodesic computations are needed to find corresponding one on the target. Note that by configuring a maximum size and number of isocurves of the local shape descriptor, we can achieve detection of different number of feature points, according to our needs and mesh complexity. In our experiment, we were able to extract from just a few to dozens of feature points on the same human model.


                        Experiments with genus-one model. We have tested landmark correspondences between two genus-one surfaces. Embossed plate model with a hole has been used, which has been synthetically generated and deformed. Our algorithm has shown a good accuracy in such settings as well. (Fig. 10). The average geodesic error with respect to ground truth is 0.009, and the maximum error 0.028.

As expected, the inverse distance weighting greatly improves the quality of the landmark transfer. In Fig. 11 color maps of the landmark transfer are presented for the cat and horse models. For the cat model, the maximum matching error is 0.17 without the IDW; however, when using the IDW it has been reduced to 0.08. For the horse model, maximum error has been reduced from 0.14 to 0.07 respectively. For these models, the matching quality is roughly two times better when using the IDW. More detailed comparison of the landmark transfer with the IDW and without the IDW is shown in Fig. 12, where the error plots of two landmark transfer with minimal graph (LTMG) implementations are shown. LTMG without the IDW yields approximately 50% correspondences exceeding the error value of 0.05, whereas with LTMG (with the IDW) this number is only 10% (which is better than the result obtained by Blended Intrinsic Maps [13] for the same error).

Our technique is tailored for the fast transfer of a sparse set of user-defined landmarks on a one-by-one basis. This makes it a bit difficult to perform fair comparisons with existing methods, which mostly focus on computing global optimal solution to the full correspondence. Nevertheless, we used our landmark transfer technique for the full correspondence, in order to make quantitative comparisons tractable. We note however that our landmark transfer finds the corresponding location independently for each vertex, and therefore it is not competitive in terms of computation time when it comes to the full correspondence problem.

For the comparison we have chosen two state-of-the-art techniques—Blended Intrinsic Maps (BIM) [13] and Möbius Voting (MOB) [12]. Within each family of objects from the full Tosca dataset (11 cats, 9 dogs, 3 wolves, 8 horses, 6 centaurs, 4 gorillas, 39 human figures including one female and two male subjects), we arbitrarily selected a model as a source and computed full correspondences to the rest of the models using LTMG by treating each vertex on the source mesh as a landmark. The results of BIM benchmark and Möbius Voting were referred and reproduced, as presented in [13]. Comparative study of correspondence errors is illustrated in Fig. 12. Overall, LTMG and BIM show better accuracy than the Möbius Voting. LTMG shows comparable accuracy to Blended Maps. Compared to LTMG, BIM produces slightly larger number of correspondences in the error range of less than 0.03. However, in contrast to BIM, LTMG gives less outliers with errors higher than 0.04. Additionally, LTMG’s plot is noticeably steeper and converges quickly to 100% of correspondences at the error value of 0.14 on the Tosca data set. On the contrary, BIM reaches 100% of correspondences only at the error value 0.25 on the same set.


                        Comparison with PLANSAC. We also compared our method to PLANSAC [10] and its predecessor RANSAC [9]. Provided by [10] the average error score 
                           E
                           (
                           f
                           )
                         for the centaur model computed with PLANSAC and RANSAC methods is 0.032 and 0.113 respectively. With the LTMG method applied to the same data, we observe an average matching error of 0.027. This makes our method comparable to PLANSAC matching method, and actually better than RANSAC.

Note that Tevs and co-workers [10] run their algorithm on Poisson sampled centaur model and provide accuracy results in 
                           ε
                        -units, where 
                           ε
                         is the minimum distance between two points in the discretization. Unfortunately the value of 
                           ε
                         is not provided. That is why, in order to compare error values, we first needed to bring them to a common scale. For this reason, we also applied uniform Poisson sampling to the centaur model and obtained discretization with the maximal number of samples ~1000, as in PLANSAC settings. With this sampling, we have estimated the exact value of 
                           ε
                        . Further normalization by the square root of the model’s surface area has yielded directly comparable error values.

@&#LIMITATIONS@&#

The main limitation of our method is that it relies on the geometric features of the shape. If the shape does not have any prominent geometric points, our method is not applicable (for instance, our technique will not be able to give a result on a sphere model). The reason for this is that our technique relies on a local shape descriptor to extract feature points, which are then used as nodes of full and minimal graphs.

Apart from this, isometry between the source and target meshes is one of the main assumptions used in our landmark transfer. That is rather strong assumption, although it holds valid in many real-world situations of matching 3D scan data. When the meshes come from different objects, this assumption is violated and proposed method may not work well.

Another assumption we used in this work is sparse distribution of landmarks. The algorithm however can be easily extended to handle cases where the landmark set becomes more dense.


                        Handling the symmetry. In the presence of symmetry, the landmark transfer will propose only one of all possible solutions. This is related to the uniqueness condition of our minimal graph construction, which favors light computation in graph growing and graph matching, at the cost of permitting matching ambiguity, which is originated from the symmetry. Since our current implementation of minimal graph construction algorithm does not differentiate between the two symmetric minimal graphs given the same (graph-) matching error, sometimes the transferred landmark can be located at the mirror-reflection of the desired location of the transferred landmark. However, it would be easy to extend our method in a way that all possible transfers are proposed to the user. We can simply consider all matching of the minimal graph to the full graph on the target, and compute landmark transfer from each minimal graph. The user will then choose either one or all of them, depending on what s/he wants to have.

Note that in our robustness tests, the matching (landmark position) error has been measured on one half of the meshes, by considering one location and its reflective symmetry as identical.

We provide a sample LTMG application on the Collage authoring environment ([21]). At the moment, the cat data from Tosca is available for the test: one source model (“Experiment Data Item 1”) and two target models. In “Experiment Code Item 1” a user can specify the landmark location by typing a vertex index. Running “Experiment Code Item 1” yields “Experiment Data Item 2”, which shows the landmark on the source in red color. Given this landmark position, “Experiment Code Item 2” and “Experiment Code Item 3” invoke our algorithm and compute correspondences on target #1 and target #2, respectively. Transferred landmarks are further shown as red dots in “Experiment Data Item 4” (target #1) and “Experiment Data Item 6” (target #2), which are point cloud data in .pcd file format. Note that this implementation on Collage workbench runs in Octave, which is an interpreter and thus executes slower than a compiled version.

@&#CONCLUSION@&#

Given one or more custom landmarks on a source mesh, our landmark transfer technique efficiently computes their corresponding locations on target meshes that are approximately isometric. By assisting the user with the reuse of landmarks that have been manually defined once on the source mesh, our technique not only allows the user to define landmarks regardless of geometric distinctiveness, but also to assure consistency among landmarks across a family of meshes, with minimum user input.

Our method is optimally tailored for transferring landmarks that are presumably sparse, since it uses a minimum number of geometric features (i.e. minimal graphs) for each landmark that are necessary to accurately locate the user-defined landmarks and avoids performing unnecessary full registration. In addition, landmark transfer is made more robust thanks to the newly defined geodesic coordinates that makes use of histograms of the geodesic distances. Consequently, our method is ideal for ‘one source to multiple target’ sparse matching, rather than ‘one source to one target’ full correspondence. For instance, given a set of user-defined landmarks our algorithm can find precise correspondences on a set of multiple meshes in a matter of seconds.

Although our work is indented for transferring a sparse set of landmarks, we have tested our method for the full, dense correspondence, in order to compare its robustness to other methods. Results show that our method can robustly transfer landmarks, with comparable time cost.

With small adjustments to the method, our landmark transfer technique can be extended to perform full matching, by considering every vertex on the mesh as ‘landmark’. The key element lies in the minimum computation for the construction of minimal graphs and the maximum reuse of them for the transfer computation.

@&#ACKNOWLEDGMENTS@&#

We would like to thank Art Tevs and other authors of PLANSAC paper [10] for providing us with part of their codes, which allowed us to compare our landmark transfer technique to theirs. We also thank Vladmir Kim for having provided the ground truth correspondences [13] for the Watertight dataset. Paul Montgomery has proofread the paper.

This work has been supported by the French national project SHARED (Shape Analysis and Registration of People Using Dynamic Data, No.10-CHEX-014-01).

Our subgraph matching method is similar in spirit to Ullmann’s algorithm [17]. In the literature the subgraph matching problem is often called subgraph isomorphism. Given the source 
                        
                           
                              G
                           
                           
                              S
                           
                        
                      and target 
                        
                           
                              G
                           
                           
                              T
                           
                        
                      graphs, isomorphism is simply defined as a pair of injective mappings 
                        f
                        =
                        (
                        α
                        ,
                        β
                        )
                      between vertices and edges of 
                        
                           
                              G
                           
                           
                              S
                           
                        
                      and
                        
                           
                              G
                           
                           
                              T
                           
                        
                     . In Ullmann’s algorithm subgraph matching is determined by a tree-search enumeration [17], i.e. by systematic generation of all possible matches between 
                        
                           
                              G
                           
                           
                              S
                           
                        
                      and 
                        
                           
                              G
                           
                           
                              T
                           
                        
                     . Consider the source and the target graphs 
                        
                        
                           
                              G
                           
                           
                              S
                           
                        
                        =
                        (
                        
                           
                              V
                           
                           
                              S
                           
                        
                        ,
                        
                           
                              E
                           
                           
                              S
                           
                        
                        ,
                        
                           
                              ϑ
                           
                           
                              S
                           
                        
                        )
                     , 
                        
                           
                              G
                           
                           
                              T
                           
                        
                        =
                        (
                        
                           
                              V
                           
                           
                              T
                           
                        
                        ,
                        
                           
                              E
                           
                           
                              T
                           
                        
                        ,
                        
                           
                              ϑ
                           
                           
                              T
                           
                        
                        )
                        ,
                      
                     
                        n
                        =
                        |
                        
                           
                              V
                           
                           
                              S
                           
                        
                        |
                     , 
                        m
                        =
                        |
                        
                           
                              V
                           
                           
                              T
                           
                        
                        |
                     , where and 
                        ϑ
                      are node labels, 
                        A
                      and 
                        B
                      are weighted matrices of adjacency. A subgraph matching can be formally represented as a permutation matrix 
                        M
                        =
                        [
                        
                           
                              m
                           
                           
                              i
                              j
                           
                        
                        ]
                     , 
                        
                           
                              m
                           
                           
                              i
                              j
                           
                        
                        ∈
                        {
                        0
                        ,
                        
                        1
                        }
                        ,
                        i
                        =
                        1
                        …
                        n
                        ,
                        
                        j
                        =
                        1
                        …
                        m
                     . If the value of 
                        
                           
                              m
                           
                           
                              i
                              j
                           
                        
                      is equal to 1, it means that 
                        i
                     th vertex of 
                        
                           
                              G
                           
                           
                              S
                           
                        
                      is mapped to 
                        j
                     th vertex of 
                        
                           
                              G
                           
                           
                              T
                           
                        
                     . Two sequential left-multiplications of 
                        B
                      by 
                        M
                     , 
                        M
                        
                           
                              (
                              M
                              ⋅
                              B
                              )
                           
                           T
                        
                      modify the target’s graph adjacency matrix accordingly to the permutation matrix, in other words, the target’s vertices are permutated according to 
                        M
                     . Given 
                        C
                        ≡
                        M
                        
                           
                              (
                              M
                              ⋅
                              B
                              )
                           
                           T
                        
                     , permutation matrix
                        M
                      defines a subgraph isomorphism of 
                        
                           
                              G
                           
                           
                              S
                           
                        
                      to 
                        
                           
                              G
                           
                           
                              T
                           
                        
                     , if 
                        ∀
                        i
                        ,
                        j
                        :
                        
                        
                           
                              A
                           
                           
                              i
                              j
                           
                        
                        ≥
                        0
                        
                        =
                        >
                        
                        
                           
                              C
                           
                           
                              i
                              j
                           
                        
                        =
                        
                           
                              A
                           
                           
                              i
                              j
                           
                        
                     .

The valid permutation M has a following set of properties:
                        
                           •
                           binary: 
                                 M
                               contains only 0 and 1;

injection: exactly one 1 in each row, and not more than one 1 in each column;

In order to support partial matches (i.e. only a subset of the source’s vertices is mapped on the target) we modify the property set by removing the injection property and substituting it with a weaker condition: not more than one 1 in each row and column.

We use an iterative approach to find a permutation 
                        M
                      which corresponds to valid subgraph matching. First, we initialize the permutation 
                        
                           
                              M
                           
                           0
                        
                      with all ones (all permutations are possible). Then, we prevent the mapping of the source vertex to the target vertex which has a smaller degree:
                        
                           
                              
                                 
                                    M
                                 
                                 
                                    i
                                    j
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                                deg
                                                (
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      T
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                                ≥
                                                d
                                                e
                                                g
                                                (
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                0
                                                ,
                                                
                                                otherwise
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        
                     where 
                        deg
                        (
                        v
                        )
                        
                      denotes a degree of a vertex.

When the initialization is done, we generate systematically all valid permutation matrices 
                        
                           
                              M
                           
                           d
                        
                      by means of a depth-first tree search. 
                        
                           
                              M
                           
                           0
                        
                      is located in the root of a search tree; the tree node at level 
                        l
                      is binded with a partial permutation matrix, which maps precisely first 
                        l
                      vertices from 
                        
                           
                              G
                           
                           
                              S
                           
                        
                        
                     to 
                        
                           
                              G
                           
                           
                              T
                           
                        
                     . For each next 
                        
                           
                              M
                           
                           
                              d
                              +
                              1
                           
                        
                      we select a matching for (l+1)th vertex from the source and check whether the weights of the new matching pair of nodes are consistent. If corresponding weights are within a user-defined error threshold, we continue going down the search tree. If the weight constraints are violated, we prune the search branch and come back to the parent search node. When the generation of permutations is done, as an output 
                        {
                        
                           
                              M
                           
                           
                              1
                           
                        
                        ,
                        …
                        ,
                        
                           
                              M
                           
                           
                              k
                           
                        
                        }
                      we have a set of valid isomorphisms and a set of partial isomorphisms between 
                        
                           
                              G
                           
                           
                              S
                           
                        
                     and 
                        
                           
                              G
                           
                           
                              T
                           
                        
                     ; or in case when there is no valid isomorphism, the output is an empty set 
                        ∅
                     .

Supplementary data associated with this article can be found in the online version at 10.1016/j.cag.2013.04.005.

Note from publisher: this material was originally submitted as part of the Collage Executable Paper pilot, please visit http://www.elsevier.com/executablepaper for more information.


                     
                        
                           
                              Note from publisher: this material was originally submitted as part of the Collage Executable Paper pilot, please visit http://www.elsevier.com/executablepaper for more information.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

