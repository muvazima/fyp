@&#MAIN-TITLE@&#Applying oracles of on-demand accuracy in two-stage stochastic programming – A computational study

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We devise variants of the L-shaped method using the concept of on-demand accuracy (ODA).


                        
                        
                           
                           In many of the iterations only an approximate cut is added to the master problem.


                        
                        
                           
                           These cuts do not require the solution of second-stage subproblems.


                        
                        
                           
                           ODA reduces average solution time by 55% on 105 problems.


                        
                        
                           
                           ODA combined with regularization reduces average solution time by 79%.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Stochastic programming

Two-stage problems

Decomposition

Bundle methods

@&#ABSTRACT@&#


               
               
                  Traditionally, two variants of the L-shaped method based on Benders’ decomposition principle are used to solve two-stage stochastic programming problems: the aggregate and the disaggregate version. In this study we report our experiments with a special convex programming method applied to the aggregate master problem. The convex programming method is of the type that uses an oracle with on-demand accuracy. We use a special form which, when applied to two-stage stochastic programming problems, is shown to integrate the advantages of the traditional variants while avoiding their disadvantages. On a set of 105 test problems, we compare and analyze parallel implementations of regularized and unregularized versions of the algorithms. The results indicate that solution times are significantly shortened by applying the concept of on-demand accuracy.
               
            

@&#INTRODUCTION@&#

Decomposition is an effective and time-honoured means of handling two-stage stochastic programming problems. It can be interpreted as a cutting-plane scheme applied to the first-stage variables. Traditionally, there are two approaches: one can use a disaggregate or an aggregate model. A major drawback of the aggregate model is that an aggregate master problem cannot contain all the information obtained by the solution of the second-stage problems. The disaggregate master problem, on the other hand, may grow excessively. It is not easy to find a balance between the effort spent in solving the master problem on the one hand, and the second-stage problems on the other hand. The computational results of Wolf and Koberstein (2013) give insights into this question.

In this study we report our experiments with a special inexact convex programming method applied to the aggregate master problem of the two-stage stochastic programming decomposition scheme. The convex programming method is of the type that uses an oracle with on-demand accuracy, a concept proposed by Oliveira and Sagastizábal (2014). We are going to use a special form which, when applied to two-stage stochastic programming problems, integrates the advantages of the aggregate and the disaggregate models. This latter feature is discussed in Fábián (2012). We also examine the on-demand accuracy idea in an un-regularized context, which results a pure cutting-plane method in contrast to the level bundle methods treated in Oliveira and Sagastizábal (2014).

The paper is organized as follows. In Section 1.1 we outline the on-demand accuracy approach to convex programming, and present an algorithmic sketch of the partly inexact level method. In Section 2 we overview two-stage stochastic programming models and methods. Specifically, in Section 2.1 we sketch a decomposition method for two-stage problems based on the partly inexact level method. Section 3 discusses implementation issues. Our computational results are reported in Section 4, and conclusions are drawn in Section 5.

Let us consider the problem
                           
                              
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                       
                                       
                                          φ
                                          (
                                          x
                                          )
                                       
                                    
                                    
                                       
                                          such
                                          
                                          that
                                          
                                       
                                       
                                          x
                                          ∈
                                          X
                                          ,
                                       
                                    
                                 
                              
                           
                        where 
                           
                              φ
                              :
                              
                                 
                                    IR
                                 
                                 
                                    n
                                 
                              
                              →
                              IR
                           
                         is a convex function, and 
                           
                              X
                              ⊂
                              
                                 
                                    IR
                                 
                                 
                                    n
                                 
                              
                           
                         is a convex closed bounded polyhedron. We assume that 
                           
                              φ
                           
                         is Lipschitz continuous over 
                           
                              X
                           
                         with the constant 
                           
                              Λ
                           
                        .


                        Oliveira and Sagastizábal (2014) developed special regularization methods for unconstrained convex optimization, namely, bundle level methods that use oracles with on-demand accuracy. The methods work with approximate function data, which is especially useful in solving stochastic problems. Approximate function values and subgradients are provided by an oracle with on-demand accuracy. The accuracy of the oracle is regulated by two parameters: the first is a descent target, and the second is a tolerance. If the estimated function value reaches the descent target, then the prescribed tolerance is observed. Otherwise the oracle just detects that the target cannot be met, and returns rough estimations of the function data, disregarding the prescribed tolerance. The method includes the ideas of Lemaréchal, Nemirovskii, and Nesterov (1995), Kiwiel (1995) and Fábián (2000); and integrates the level-type and the proximal approach.

In this paper we are going to use a special method that falls into the ‘partly inexact’ category according to Oliveira and Sagastizábal, and applies only the level regularization of Lemaréchal et al. (1995). The method is discussed in detail in Fábián (2012).

In the following description, 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    ¯
                                 
                              
                           
                         denotes the best function value known, and 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    ̲
                                 
                              
                           
                         is a lower estimate of the optimum. The gap 
                           
                              Δ
                              =
                              
                                 
                                    ϕ
                                 
                                 
                                    ¯
                                 
                              
                              -
                              
                                 
                                    ϕ
                                 
                                 
                                    ̲
                                 
                              
                           
                         measures the quality of the current approximation. The descent target is 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    ¯
                                 
                              
                              -
                              δ
                           
                        , where the tolarence 
                           
                              δ
                           
                         is regulated by the current gap. If the descent target is reached, then the oracle returns an exact subgradient. Otherwise the oracle just detects that the target cannot be met, and returns rough estimations of the function data. Iterations where the descent target is reached will be called substantial.
                           Algorithm 1
                           A partly inexact level method.
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         1.0 Parameter setting.
                                                      
                                                      
                                                         
                                                            
                                                               Set the stopping tolerance 
                                                                     
                                                                        ∊
                                                                        >
                                                                        0
                                                                        .
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Set the level parameter 
                                                                     
                                                                        λ
                                                                        
                                                                        (
                                                                        0
                                                                        <
                                                                        λ
                                                                        <
                                                                        1
                                                                        )
                                                                        .
                                                                        )
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Set the tolerance regulating parameter 
                                                                     
                                                                        γ
                                                                     
                                                                   such that 
                                                                     
                                                                        0
                                                                        <
                                                                        γ
                                                                        <
                                                                        
                                                                           
                                                                              (
                                                                              1
                                                                              -
                                                                              λ
                                                                              )
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                        
                                                                        .
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         1.1 Bundle initialization.
                                                      
                                                      
                                                         
                                                            
                                                               Let 
                                                                     
                                                                        i
                                                                        =
                                                                        1
                                                                     
                                                                   (iteration counter).
                                                            
                                                            
                                                               Find a starting point 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                        ∈
                                                                        X
                                                                        .
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              l
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                   be a linear support function to 
                                                                     
                                                                        φ
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                   at 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              δ
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                        =
                                                                        0
                                                                     
                                                                   (meaning that 
                                                                     
                                                                        
                                                                           
                                                                              l
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                     
                                                                   is an exact support function).
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         1.2 Near-optimality check.
                                                      
                                                      
                                                         
                                                            
                                                               Compute 
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    ϕ
                                                                                 
                                                                                 
                                                                                    ¯
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                        
                                                                           
                                                                              min
                                                                           
                                                                           
                                                                              1
                                                                              ⩽
                                                                              j
                                                                              ⩽
                                                                              i
                                                                           
                                                                        
                                                                        
                                                                        φ
                                                                        (
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        )
                                                                        .
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    ϕ
                                                                                 
                                                                                 
                                                                                    ̲
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                           
                                                                              min
                                                                           
                                                                           
                                                                              x
                                                                              ∈
                                                                              X
                                                                           
                                                                        
                                                                        
                                                                        
                                                                           
                                                                              φ
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                  , where 
                                                                     
                                                                        
                                                                           
                                                                              φ
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                        =
                                                                        
                                                                           
                                                                              max
                                                                           
                                                                           
                                                                              1
                                                                              ⩽
                                                                              j
                                                                              ⩽
                                                                              i
                                                                           
                                                                        
                                                                        
                                                                        
                                                                           
                                                                              l
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                   is the current model function.
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              Δ
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    ϕ
                                                                                 
                                                                                 
                                                                                    ¯
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        -
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    ϕ
                                                                                 
                                                                                 
                                                                                    ̲
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                  . If 
                                                                     
                                                                        
                                                                           
                                                                              Δ
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        <
                                                                        ∊
                                                                     
                                                                   then near-optimal solution found, stop.
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         1.3 Finding a new iterate.
                                                      
                                                      
                                                         
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                              +
                                                                              1
                                                                           
                                                                        
                                                                     
                                                                   be the projection of 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                   onto 
                                                                     
                                                                        
                                                                           
                                                                              X
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                           
                                                                              
                                                                                 x
                                                                                 ∈
                                                                                 X
                                                                                 
                                                                                 |
                                                                                 
                                                                                 
                                                                                    
                                                                                       φ
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                                 (
                                                                                 x
                                                                                 )
                                                                                 ⩽
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             ϕ
                                                                                          
                                                                                          
                                                                                             ̲
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                                 +
                                                                                 λ
                                                                                 
                                                                                    
                                                                                       Δ
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                        .
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         1.4 Bundle update.
                                                      
                                                      
                                                         
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              δ
                                                                           
                                                                           
                                                                              i
                                                                              +
                                                                              1
                                                                           
                                                                        
                                                                        =
                                                                        γ
                                                                        
                                                                           
                                                                              Δ
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                  .
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              l
                                                                           
                                                                           
                                                                              i
                                                                              +
                                                                              1
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                   be a linear function such that 
                                                                     
                                                                        
                                                                           
                                                                              l
                                                                           
                                                                           
                                                                              i
                                                                              +
                                                                              1
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                        ⩽
                                                                        φ
                                                                        (
                                                                        x
                                                                        )
                                                                        
                                                                        (
                                                                        x
                                                                        ∈
                                                                        X
                                                                        )
                                                                        ,
                                                                        
                                                                        ∥
                                                                        ∇
                                                                        
                                                                           
                                                                              l
                                                                           
                                                                           
                                                                              i
                                                                              +
                                                                              1
                                                                           
                                                                        
                                                                        ∥
                                                                        ⩽
                                                                        Λ
                                                                        ,
                                                                     
                                                                   and
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 either
                                                                                 
                                                                                 
                                                                                    
                                                                                       l
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 (
                                                                                 
                                                                                    
                                                                                       x
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 )
                                                                                 ⩾
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             ϕ
                                                                                          
                                                                                          
                                                                                             ¯
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                                 -
                                                                                 
                                                                                    
                                                                                       δ
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 
                                                                                 (descent target could not be reached)
                                                                              
                                                                           ,
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 or
                                                                                 
                                                                                 
                                                                                    
                                                                                       l
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 (
                                                                                 
                                                                                    
                                                                                       x
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 )
                                                                                 =
                                                                                 φ
                                                                                 (
                                                                                 
                                                                                    
                                                                                       x
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 )
                                                                                 
                                                                                 (descent target has been reached)
                                                                              
                                                                           .
                                                                     
                                                                     
                                                                        Increment 
                                                                              
                                                                                 i
                                                                              
                                                                           , and repeat from step 1.2.
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

In step 1.3, above, the projection of 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         onto 
                           
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                              
                           
                         means finding the point in 
                           
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                              
                           
                         nearest to 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                        . It means solving a convex quadratic programming problem.

Convergence of Algorithm 1 follows from Theorem 3.9 in Oliveira and Sagastizábal (2014). It yields the following theoretical estimate: to obtain 
                           
                              Δ
                              <
                              ∊
                           
                        , it suffices to perform 
                           
                              c
                              
                                 
                                    
                                       
                                          V
                                          /
                                          ∊
                                       
                                    
                                 
                                 
                                    2
                                 
                              
                           
                         iterations, where the constants 
                           
                              c
                           
                         and 
                           
                              V
                           
                         depend on parameter settings, and problem characteristics, respectively.
                           Remark 2
                           Concerning the practical efficiency of the (exact) level method of Lemaréchal et al. (1995), in Nemirovski (2005) (Chapter 5.3.2) observes the following experimental fact. When solving a problem of dimension 
                                 
                                    n
                                 
                               with accuracy 
                                 
                                    ∊
                                 
                              , the level method makes no more than 
                                 
                                    n
                                    ln
                                    (
                                    V
                                    /
                                    ∊
                                    )
                                 
                               iterations, where 
                                 
                                    V
                                 
                               is a problem-dependent constant.

This observation was confirmed by the experiments reported in Fábián and Szőke (2007) and Zverovich, Fábián, Ellison, and Mitra (2012), where the level method was applied in decomposition schemes for the solution of two-stage stochastic programming problems.

Following Lemaréchal et al. (1995), we define critical iterations for Algorithm 1. Let us consider a maximal sequence of iterations such that 
                           
                              
                                 
                                    Δ
                                 
                                 
                                    1
                                 
                              
                              ⩾
                              
                                 
                                    Δ
                                 
                                 
                                    2
                                 
                              
                              ⩾
                              ⋯
                              ⩾
                              
                                 
                                    Δ
                                 
                                 
                                    s
                                 
                              
                              ⩾
                              (
                              1
                              -
                              λ
                              )
                              
                                 
                                    Δ
                                 
                                 
                                    1
                                 
                              
                           
                         holds. Maximality of this sequence means that 
                           
                              (
                              1
                              -
                              λ
                              )
                              
                                 
                                    Δ
                                 
                                 
                                    1
                                 
                              
                              >
                              
                                 
                                    Δ
                                 
                                 
                                    s
                                    +
                                    1
                                 
                              
                           
                        . Then 
                           
                              
                                 
                                    x
                                 
                                 
                                    s
                                 
                              
                              →
                              
                                 
                                    x
                                 
                                 
                                    s
                                    +
                                    1
                                 
                              
                           
                         will be labeled critical. The above construction is repeated starting from the index 
                           
                              s
                           
                        . Thus the iterations are grouped into sequences, and the sequences are separated with critical iterations.

There is an analogy between the critical iterations of level-type methods, and the serious steps of traditional bundle methods. In this paper we use the former terminology which we feel more precise in the present setting.

First we present the notation with a brief overview of the models. The first-stage decision is represented by the vector 
                        
                           x
                           ∈
                           X
                        
                     , the feasible domain being defined by a set of linear inequalities. We assume that the feasible domain is a non-empty convex bounded polyhedron, and that there are 
                        
                           S
                        
                      possible outcomes (scenarios) of the random event, the 
                        
                           s
                        
                      th outcome occurring with probability 
                        
                           
                              
                                 p
                              
                              
                                 s
                              
                           
                        
                     .

Suppose the first-stage decision has been made with the result 
                        
                           x
                        
                     , and the 
                        
                           s
                        
                      th scenario has realized. The second-stage decision 
                        
                           y
                        
                      is computed by solving the second-stage problem or recourse problem that we denote by 
                        
                           
                              
                                 R
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                     . This is a linear programming problem whose dual is 
                        
                           
                              
                                 D
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                     :
                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          
                                             R
                                          
                                          
                                             s
                                          
                                       
                                       (
                                       x
                                       )
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                         
                                                            
                                                               q
                                                            
                                                            
                                                               s
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                         y
                                                      
                                                   
                                                   
                                                      
                                                         such
                                                         
                                                         that
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               s
                                                            
                                                         
                                                         x
                                                         +
                                                         
                                                            
                                                               W
                                                            
                                                            
                                                               s
                                                            
                                                         
                                                         y
                                                         =
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               s
                                                            
                                                         
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         y
                                                         ⩾
                                                         0
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             D
                                          
                                          
                                             s
                                          
                                       
                                       (
                                       x
                                       )
                                    
                                    
                                       
                                          
                                             
                                                
                                                   max
                                                
                                                
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      T
                                                   
                                                
                                                (
                                                
                                                   
                                                      h
                                                   
                                                   
                                                      s
                                                   
                                                
                                                -
                                                
                                                   
                                                      T
                                                   
                                                   
                                                      s
                                                   
                                                
                                                x
                                                )
                                             
                                          
                                          
                                             
                                                such
                                                
                                                that
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      T
                                                   
                                                
                                                z
                                                ⩽
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      s
                                                   
                                                
                                                ,
                                             
                                          
                                          
                                             
                                                z
                                                
                                                is
                                                
                                                a
                                                
                                                real
                                                -
                                                valued
                                                
                                                vector
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     In the above formulae, 
                        
                           
                              
                                 q
                              
                              
                                 s
                              
                           
                           ,
                           
                           
                              
                                 h
                              
                              
                                 s
                              
                           
                        
                      are given vectors and 
                        
                           
                              
                                 T
                              
                              
                                 s
                              
                           
                           ,
                           
                           
                              
                                 W
                              
                              
                                 s
                              
                           
                        
                      are given matrices, with compatible sizes. We assume that 
                        
                           
                              
                                 R
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                      is feasible for any 
                        
                           x
                           ∈
                           X
                        
                      and 
                        
                           s
                           =
                           1
                           ,
                           …
                           ,
                           S
                        
                     . Moreover we assume that 
                        
                           
                              
                                 D
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                      is feasible for any 
                        
                           s
                           =
                           1
                           ,
                           …
                           ,
                           S
                        
                     . Let 
                        
                           
                              
                                 q
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                      denote the common optimum. This is a polyhedral convex function called the recourse function.

The customary formulation of the first-stage problem is
                        
                           (2)
                           
                              
                                 min
                              
                              
                              
                                 
                                    c
                                 
                                 
                                    T
                                 
                              
                              x
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       =
                                       1
                                    
                                    
                                       S
                                    
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    s
                                 
                              
                              
                              
                                 
                                    q
                                 
                                 
                                    s
                                 
                              
                              (
                              x
                              )
                              
                              such
                              
                              that
                              
                              x
                              ∈
                              X
                              .
                           
                        
                     The expectation part of the objective, 
                        
                           q
                           (
                           x
                           )
                           =
                           
                              
                                 ∑
                              
                              
                                 s
                                 =
                                 1
                              
                              
                                 S
                              
                           
                           
                              
                                 p
                              
                              
                                 s
                              
                           
                           
                           
                              
                                 q
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                     , is called the expected recourse function.

Since the two-stage stochastic programming problem (2)– (1) features discrete finite distributions and linear functions, it can be formulated as a single linear programming problem that we call the equivalent linear programming problem.

Given a finite subset 
                        
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 s
                              
                           
                        
                      of the feasible domain of 
                        
                           
                              
                                 D
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                     , the function
                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    s
                                 
                              
                              (
                              x
                              )
                              ≔
                              
                              
                                 
                                    
                                       max
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             s
                                          
                                       
                                       ∈
                                       
                                          
                                             
                                                
                                                   U
                                                
                                                
                                                   ∼
                                                
                                             
                                          
                                          
                                             s
                                          
                                       
                                    
                                 
                              
                              
                              
                                 
                                    u
                                 
                                 
                                    s
                                 
                                 
                                    T
                                 
                              
                              (
                              
                                 
                                    h
                                 
                                 
                                    s
                                 
                              
                              -
                              
                                 
                                    T
                                 
                                 
                                    s
                                 
                              
                              x
                              )
                              
                              (
                              x
                              ∈
                              X
                              )
                           
                        
                     is a lower approximation of 
                        
                           
                              
                                 q
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                      over 
                        
                           X
                        
                     . Having appropriate subsets 
                        
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 s
                              
                           
                        
                      for 
                        
                           s
                           =
                           1
                           ,
                           …
                           ,
                           S
                        
                     , the disaggregate model of the first-stage problem (2) is constructed as
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             min
                                          
                                          
                                          
                                             
                                                c
                                             
                                             
                                                T
                                             
                                          
                                          x
                                          +
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   s
                                                   =
                                                   1
                                                
                                                
                                                   S
                                                
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                s
                                             
                                          
                                          
                                             
                                                ν
                                             
                                             
                                                s
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          such
                                          
                                          that
                                          
                                          x
                                          ∈
                                          X
                                          ,
                                          
                                          
                                             
                                                ν
                                             
                                             
                                                s
                                             
                                          
                                          ∈
                                          IR
                                          
                                          
                                          (
                                          s
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          S
                                          )
                                          ,
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                u
                                             
                                             
                                                s
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          
                                             
                                                h
                                             
                                             
                                                s
                                             
                                          
                                          -
                                          
                                             
                                                T
                                             
                                             
                                                s
                                             
                                          
                                          x
                                          )
                                          ⩽
                                          
                                             
                                                ν
                                             
                                             
                                                s
                                             
                                          
                                          
                                          
                                          holds
                                          
                                          for
                                          
                                          any
                                          
                                          
                                             
                                                u
                                             
                                             
                                                s
                                             
                                          
                                          ∈
                                          
                                             
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      ∼
                                                   
                                                
                                             
                                             
                                                s
                                             
                                          
                                          
                                          (
                                          s
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          S
                                          )
                                          .
                                       
                                    
                                 
                              
                           
                        
                     The expectation in the objective, 
                        
                           
                              
                                 q
                              
                              
                                 ̃
                              
                           
                           (
                           x
                           )
                           =
                           
                              
                                 ∑
                              
                              
                                 s
                                 =
                                 1
                              
                              
                                 S
                              
                           
                           
                              
                                 p
                              
                              
                                 s
                              
                           
                           
                           
                              
                                 
                                    
                                       q
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 s
                              
                           
                           (
                           x
                           )
                        
                     , is called the disaggregate model function.

An aggregate model of the first-stage problem is
                        
                           (5)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             min
                                          
                                          
                                          
                                             
                                                c
                                             
                                             
                                                T
                                             
                                          
                                          x
                                          +
                                          ν
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          such
                                          
                                          that
                                          
                                          x
                                          ∈
                                          X
                                          ,
                                          
                                          ν
                                          ∈
                                          IR
                                          ,
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   s
                                                   =
                                                   1
                                                
                                                
                                                   S
                                                
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                s
                                             
                                          
                                          
                                             
                                                u
                                             
                                             
                                                s
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          
                                             
                                                h
                                             
                                             
                                                s
                                             
                                          
                                          -
                                          
                                             
                                                T
                                             
                                             
                                                s
                                             
                                          
                                          x
                                          )
                                          ⩽
                                          ν
                                          
                                          
                                          holds
                                          
                                          for
                                          
                                          any
                                          
                                          (
                                          
                                             
                                                u
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                u
                                             
                                             
                                                S
                                             
                                          
                                          )
                                          ∈
                                          
                                             
                                                U
                                             
                                             
                                                ∼
                                             
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 U
                              
                              
                                 ∼
                              
                           
                           ⊂
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 1
                              
                           
                           ×
                           ⋯
                           ×
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 S
                              
                           
                        
                      is a certain subset of the Cartesian product. Namely, each element of 
                        
                           
                              
                                 U
                              
                              
                                 ∼
                              
                           
                        
                      belongs to a (potential) facet in the graph of the function 
                        
                           
                              
                                 q
                              
                              
                                 ̃
                              
                           
                           (
                           x
                           )
                        
                     . There may be facets not represented in 
                        
                           
                              
                                 U
                              
                              
                                 ∼
                              
                           
                        
                     . The expectation
                        
                           (6)
                           
                              
                                 
                                    f
                                 
                                 
                                    ̃
                                 
                              
                              (
                              x
                              )
                              =
                              
                                 
                                    
                                       max
                                    
                                    
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             S
                                          
                                       
                                       )
                                       ∈
                                       
                                          
                                             U
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                 
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       =
                                       1
                                    
                                    
                                       S
                                    
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    s
                                 
                              
                              
                                 
                                    u
                                 
                                 
                                    s
                                 
                                 
                                    T
                                 
                              
                              (
                              
                                 
                                    h
                                 
                                 
                                    s
                                 
                              
                              -
                              
                                 
                                    T
                                 
                                 
                                    s
                                 
                              
                              x
                              )
                           
                        
                     is called the aggregate model function.

Of course we have 
                        
                           q
                           (
                           x
                           )
                           ⩾
                           
                              
                                 q
                              
                              
                                 ̃
                              
                           
                           (
                           x
                           )
                           ⩾
                           
                              
                                 f
                              
                              
                                 ̃
                              
                           
                           (
                           x
                           )
                        
                     , since the disaggregate model function is based on the sets 
                        
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 s
                              
                           
                           
                           (
                           s
                           =
                           1
                           ,
                           …
                           ,
                           S
                           )
                        
                     , and the aggregate model function is based on the set 
                        
                           
                              
                                 U
                              
                              
                                 ∼
                              
                           
                           ⊂
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 1
                              
                           
                           ×
                           ⋯
                           ×
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ∼
                                    
                                 
                              
                              
                                 S
                              
                           
                        
                     .

Methods working with a disaggregate master problem are often called multicut methods, while those working with an aggregate master problem are called single-cut ones. By using disaggregate cuts, more detailed information is stored in the master problem. This is done at the expense of larger master problems. Based on the numerical results of Birge and Louveaux (1988) and Gassmann (1990), Birge and Louveaux (1997) conclude that the multicut approach is in general more effective when the number of the scenarios is not significantly larger than the number of the constraints in the first-stage problem. Results of the computational study (Zverovich et al., 2012) confirm that the scale-up properties of solvers based on aggregate models are better than those of solvers based on disaggregate models, though the break-even thresholds are generally high. The results of the computational study (Wolf & Koberstein, 2013) provide further insights into the effects of cut aggregation.

In order to apply the on-demand accuracy approach to two-stage stochastic programming problems, Oliveira and Sagastizábal (2014) propose inserting a new solver component between the aggregate master problem and the second-stage problems. The role of the new component is to provide approximate values and gradients of the expected recourse function, based on the information represented in 
                           
                              
                                 
                                    
                                       
                                          U
                                       
                                       
                                          ∼
                                       
                                    
                                 
                                 
                                    s
                                 
                              
                              
                              (
                              s
                              =
                              1
                              ,
                              …
                              ,
                              S
                              )
                           
                        .

In this paper we work with Algorithm 1 adapted to the two-stage problem. The objective function is 
                           
                              
                                 
                                    c
                                 
                                 
                                    T
                                 
                              
                              x
                              +
                              q
                              (
                              x
                              )
                           
                        , its disaggregate model is 
                           
                              
                                 
                                    c
                                 
                                 
                                    T
                                 
                              
                              x
                              +
                              
                                 
                                    q
                                 
                                 
                                    ̃
                                 
                              
                              (
                              x
                              )
                           
                        , and its aggregate model is 
                           
                              
                                 
                                    c
                                 
                                 
                                    T
                                 
                              
                              x
                              +
                              
                                 
                                    f
                                 
                                 
                                    ̃
                                 
                              
                              (
                              x
                              )
                           
                        .

Let 
                           
                              
                                 
                                    D
                                 
                                 
                                    ‾
                                 
                              
                           
                         denote the best objective value known at the present stage of the solution process, and let 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                           
                         denote the iterate just obtained. Let us assume that 
                           
                              i
                              >
                              1
                           
                        , and the iteration 
                           
                              (
                              i
                              -
                              1
                              )
                              →
                              i
                           
                         was non-critical. As shown in Fábián (2012), the following simple rule can be used to decide whether the second-stage problems need to solved in the current iteration:
                           
                              (7)
                              
                                 
                                    
                                       c
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       q
                                    
                                    
                                       ̃
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 )
                                 ⩾
                                 κ
                                 
                                    
                                       
                                          
                                             
                                                c
                                             
                                             
                                                T
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          +
                                          
                                             
                                                f
                                             
                                             
                                                ̃
                                             
                                          
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          )
                                       
                                    
                                 
                                 +
                                 (
                                 1
                                 -
                                 κ
                                 )
                                 
                                    
                                       D
                                    
                                    
                                       ‾
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              κ
                           
                         is a parameter such that 
                           
                              0
                              <
                              κ
                              <
                              1
                              -
                              λ
                           
                         holds with the level parameter in Algorithm 1. – Simply put, (7) means that the disaggregate model function value is significantly higher than the aggregate one, as evaluated at the new iterate.

If (7) holds, then the aggregate model function is updated by adding a linear support function of 
                           
                              
                                 
                                    q
                                 
                                 
                                    ̃
                                 
                              
                              (
                              x
                              )
                           
                         at 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                           
                        . This can be constructed without solving second-stage problems. The above procedure results
                           Algorithm 3
                           A decomposition method for two-stage problems based on Algorithm 1.
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         3.0 Parameter setting.
                                                      
                                                      
                                                         
                                                            
                                                               Set the stopping tolerance 
                                                                     
                                                                        ∊
                                                                        >
                                                                        0
                                                                     
                                                                  .
                                                            
                                                            
                                                               Set the level parameter 
                                                                     
                                                                        λ
                                                                        
                                                                        (
                                                                        0
                                                                        <
                                                                        λ
                                                                        <
                                                                        1
                                                                        )
                                                                     
                                                                  .
                                                            
                                                            
                                                               Set the descent target parameter 
                                                                     
                                                                        κ
                                                                     
                                                                   such that 
                                                                     
                                                                        0
                                                                        <
                                                                        κ
                                                                        <
                                                                        1
                                                                        -
                                                                        λ
                                                                     
                                                                  .
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         3.1 Bundle initialization.
                                                      
                                                      
                                                         
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    U
                                                                                 
                                                                                 
                                                                                    ∼
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              s
                                                                           
                                                                        
                                                                        =
                                                                        ∅
                                                                        
                                                                        (
                                                                        s
                                                                        =
                                                                        1
                                                                        ,
                                                                        …
                                                                        ,
                                                                        S
                                                                        )
                                                                     
                                                                  , and let 
                                                                     
                                                                        
                                                                           
                                                                              U
                                                                           
                                                                           
                                                                              ∼
                                                                           
                                                                        
                                                                        =
                                                                        ∅
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        i
                                                                        =
                                                                        1
                                                                     
                                                                   (iteration counter).
                                                            
                                                            
                                                               Find a starting point 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                        ∈
                                                                        X
                                                                     
                                                                  .
                                                            
                                                            
                                                               Solve the dual recourse problems 
                                                                     
                                                                        
                                                                           
                                                                              D
                                                                           
                                                                           
                                                                              s
                                                                           
                                                                        
                                                                        (
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                        )
                                                                        
                                                                        (
                                                                        s
                                                                        =
                                                                        1
                                                                        ,
                                                                        …
                                                                        ,
                                                                        S
                                                                        )
                                                                     
                                                                  ;
                                                            
                                                            
                                                               let 
                                                                     
                                                                        
                                                                           
                                                                              u
                                                                           
                                                                           
                                                                              s
                                                                           
                                                                        
                                                                        
                                                                        (
                                                                        s
                                                                        =
                                                                        1
                                                                        ,
                                                                        …
                                                                        ,
                                                                        S
                                                                        )
                                                                     
                                                                   be the respective optimal basic solutions.
                                                            
                                                            
                                                               Add 
                                                                     
                                                                        
                                                                           
                                                                              u
                                                                           
                                                                           
                                                                              s
                                                                           
                                                                        
                                                                     
                                                                   to 
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    U
                                                                                 
                                                                                 
                                                                                    ∼
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              s
                                                                           
                                                                        
                                                                        
                                                                        (
                                                                        s
                                                                        =
                                                                        1
                                                                        ,
                                                                        …
                                                                        ,
                                                                        S
                                                                        )
                                                                     
                                                                  , updating 
                                                                     
                                                                        
                                                                           
                                                                              q
                                                                           
                                                                           
                                                                              ̃
                                                                           
                                                                        
                                                                     
                                                                  ; and add 
                                                                     
                                                                        (
                                                                        
                                                                           
                                                                              u
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                        
                                                                        ,
                                                                        …
                                                                        ,
                                                                        
                                                                           
                                                                              u
                                                                           
                                                                           
                                                                              S
                                                                           
                                                                        
                                                                        )
                                                                     
                                                                   to 
                                                                     
                                                                        
                                                                           
                                                                              U
                                                                           
                                                                           
                                                                              ∼
                                                                           
                                                                        
                                                                     
                                                                  , updating 
                                                                     
                                                                        
                                                                           
                                                                              f
                                                                           
                                                                           
                                                                              ̃
                                                                           
                                                                        
                                                                     
                                                                  .
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         3.2 Near-optimality check.
                                                      
                                                      
                                                         
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              D
                                                                           
                                                                           
                                                                              ‾
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                        
                                                                           
                                                                              min
                                                                           
                                                                           
                                                                              1
                                                                              ⩽
                                                                              j
                                                                              ⩽
                                                                              i
                                                                           
                                                                        
                                                                        
                                                                        {
                                                                        
                                                                           
                                                                              c
                                                                           
                                                                           
                                                                              T
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        +
                                                                        q
                                                                        (
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        )
                                                                        }
                                                                     
                                                                  . Let 
                                                                     
                                                                        
                                                                           
                                                                              D
                                                                           
                                                                           
                                                                              ̲
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                           
                                                                              min
                                                                           
                                                                           
                                                                              x
                                                                              ∈
                                                                              X
                                                                           
                                                                        
                                                                        
                                                                        {
                                                                        
                                                                           
                                                                              c
                                                                           
                                                                           
                                                                              T
                                                                           
                                                                        
                                                                        x
                                                                        +
                                                                        
                                                                           
                                                                              f
                                                                           
                                                                           
                                                                              ̃
                                                                           
                                                                        
                                                                        (
                                                                        x
                                                                        )
                                                                        }
                                                                     
                                                                  .
                                                            
                                                            
                                                               Let 
                                                                     
                                                                        Δ
                                                                        =
                                                                        
                                                                           
                                                                              D
                                                                           
                                                                           
                                                                              ‾
                                                                           
                                                                        
                                                                        -
                                                                        
                                                                           
                                                                              D
                                                                           
                                                                           
                                                                              ̲
                                                                           
                                                                        
                                                                     
                                                                  . If 
                                                                     
                                                                        Δ
                                                                        <
                                                                        ∊
                                                                     
                                                                   then near-optimal solution found, stop.
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         3.3 Finding a new iterate.
                                                      
                                                      
                                                         
                                                            
                                                               Let 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                              +
                                                                              1
                                                                           
                                                                        
                                                                     
                                                                   be the projection of 
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                   onto 
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 x
                                                                                 ∈
                                                                                 X
                                                                                 
                                                                                 |
                                                                                 
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       T
                                                                                    
                                                                                 
                                                                                 x
                                                                                 +
                                                                                 
                                                                                    
                                                                                       f
                                                                                    
                                                                                    
                                                                                       ̃
                                                                                    
                                                                                 
                                                                                 (
                                                                                 x
                                                                                 )
                                                                                 ⩽
                                                                                 
                                                                                    
                                                                                       D
                                                                                    
                                                                                    
                                                                                       ̲
                                                                                    
                                                                                 
                                                                                 +
                                                                                 λ
                                                                                 Δ
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  .
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         3.4 Bundle update.
                                                      
                                                      
                                                         
                                                            
                                                               If the iteration 
                                                                     
                                                                        (
                                                                        i
                                                                        -
                                                                        1
                                                                        )
                                                                        →
                                                                        i
                                                                     
                                                                   is non-critical and (7) holds, then
                                                                     
                                                                        Construct a support function of 
                                                                              
                                                                                 
                                                                                    
                                                                                       q
                                                                                    
                                                                                    
                                                                                       ̃
                                                                                    
                                                                                 
                                                                                 (
                                                                                 x
                                                                                 )
                                                                              
                                                                            at 
                                                                              
                                                                                 
                                                                                    
                                                                                       x
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                              
                                                                           ,
                                                                     
                                                                     
                                                                        in the form 
                                                                              
                                                                                 
                                                                                    
                                                                                       ∑
                                                                                    
                                                                                    
                                                                                       s
                                                                                       =
                                                                                       1
                                                                                    
                                                                                    
                                                                                       S
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       p
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             u
                                                                                          
                                                                                          
                                                                                             ˆ
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                    
                                                                                       T
                                                                                    
                                                                                 
                                                                                 (
                                                                                 
                                                                                    
                                                                                       h
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 -
                                                                                 
                                                                                    
                                                                                       T
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 x
                                                                                 )
                                                                              
                                                                           , with 
                                                                              
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             u
                                                                                          
                                                                                          
                                                                                             ˆ
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 ∈
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             U
                                                                                          
                                                                                          
                                                                                             ∼
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                              
                                                                           .
                                                                     
                                                                     
                                                                        Add 
                                                                              
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                          
                                                                                             
                                                                                                
                                                                                                   
                                                                                                      u
                                                                                                   
                                                                                                   
                                                                                                      ˆ
                                                                                                   
                                                                                                
                                                                                             
                                                                                             
                                                                                                1
                                                                                             
                                                                                          
                                                                                          ,
                                                                                          …
                                                                                          ,
                                                                                          
                                                                                             
                                                                                                
                                                                                                   
                                                                                                      u
                                                                                                   
                                                                                                   
                                                                                                      ^
                                                                                                   
                                                                                                
                                                                                             
                                                                                             
                                                                                                S
                                                                                             
                                                                                          
                                                                                          
                                                                                       
                                                                                    
                                                                                 
                                                                              
                                                                            to the set 
                                                                              
                                                                                 
                                                                                    
                                                                                       U
                                                                                    
                                                                                    
                                                                                       ∼
                                                                                    
                                                                                 
                                                                              
                                                                           , updating 
                                                                              
                                                                                 
                                                                                    
                                                                                       f
                                                                                    
                                                                                    
                                                                                       ̃
                                                                                    
                                                                                 
                                                                              
                                                                           .
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Otherwise
                                                                     
                                                                        Solve the dual recourse problems 
                                                                              
                                                                                 
                                                                                    
                                                                                       D
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 (
                                                                                 
                                                                                    
                                                                                       x
                                                                                    
                                                                                    
                                                                                       i
                                                                                       +
                                                                                       1
                                                                                    
                                                                                 
                                                                                 )
                                                                                 
                                                                                 (
                                                                                 s
                                                                                 =
                                                                                 1
                                                                                 ,
                                                                                 …
                                                                                 ,
                                                                                 S
                                                                                 )
                                                                              
                                                                           ;
                                                                     
                                                                     
                                                                        let 
                                                                              
                                                                                 
                                                                                    
                                                                                       u
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 
                                                                                 (
                                                                                 s
                                                                                 =
                                                                                 1
                                                                                 ,
                                                                                 …
                                                                                 ,
                                                                                 S
                                                                                 )
                                                                              
                                                                            be the respective optimal basic solutions.
                                                                     
                                                                     
                                                                        Add 
                                                                              
                                                                                 
                                                                                    
                                                                                       u
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                              
                                                                            to 
                                                                              
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             U
                                                                                          
                                                                                          
                                                                                             ∼
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       s
                                                                                    
                                                                                 
                                                                                 
                                                                                 (
                                                                                 s
                                                                                 =
                                                                                 1
                                                                                 ,
                                                                                 …
                                                                                 ,
                                                                                 S
                                                                                 )
                                                                              
                                                                            updating 
                                                                              
                                                                                 
                                                                                    
                                                                                       q
                                                                                    
                                                                                    
                                                                                       ̃
                                                                                    
                                                                                 
                                                                              
                                                                           ; and add 
                                                                              
                                                                                 (
                                                                                 
                                                                                    
                                                                                       u
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                 
                                                                                 ,
                                                                                 …
                                                                                 ,
                                                                                 
                                                                                    
                                                                                       u
                                                                                    
                                                                                    
                                                                                       S
                                                                                    
                                                                                 
                                                                                 )
                                                                              
                                                                            to 
                                                                              
                                                                                 
                                                                                    
                                                                                       U
                                                                                    
                                                                                    
                                                                                       ∼
                                                                                    
                                                                                 
                                                                              
                                                                           , updating 
                                                                              
                                                                                 
                                                                                    
                                                                                       f
                                                                                    
                                                                                    
                                                                                       ̃
                                                                                    
                                                                                 
                                                                              
                                                                           .
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               Increment 
                                                                     
                                                                        i
                                                                     
                                                                  , and repeat from step 3.2.
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

@&#IMPLEMENTATION@&#

The level decomposition method as well as the on-demand accuracy oracle were implemented in an existing implementation of a parallel nested Benders (PNB) decomposition algorithm (Wolf & Koberstein, 2013). The PNB solver supports cut aggregation by specifying scenario partitions (Trukhanov, Ntaimo, & Schaefer, 2010), but we only use the fully aggregated model. The parallel implementation allows to use all available cores, therefore solving subproblems as well as calling the on-demand accuracy oracle is done in parallel. For further implementation details regarding the basic Benders decomposition algorithm, please refer to Wolf and Koberstein (2013).

Though the present study focusses on problems with complete recourse, our code can handle incomplete recourse also. No optimality cut is generated in case the current first-stage solution 
                        
                           
                              
                                 x
                              
                              
                                 i
                                 +
                                 1
                              
                           
                        
                      is not feasible for the whole problem. Instead, we generate a feasibility cut of the usual form 
                        
                           
                              
                                 u
                              
                              
                                 s
                              
                              
                                 T
                              
                           
                           (
                           
                              
                                 h
                              
                              
                                 s
                              
                           
                           -
                           
                              
                                 T
                              
                              
                                 s
                              
                           
                           
                              
                                 x
                              
                              
                                 i
                                 +
                                 1
                              
                           
                           )
                           ⩽
                           0
                        
                     , where 
                        
                           
                              
                                 u
                              
                              
                                 s
                              
                           
                        
                      denotes a ray of the feasible domain of 
                        
                           
                              
                                 D
                              
                              
                                 s
                              
                           
                           (
                           
                              
                                 x
                              
                              
                                 i
                                 +
                                 1
                              
                           
                           )
                        
                     . (See, e.g., (Birge & Louveaux, 1997) for a detailed description.)

Thus if the current iterate turns out to be substantial in course of step 3.4 of Algorithm 3, and any of the dual recourse problems proves unbounded, then we add a feasibility cut to the master problem. (The set 
                        
                           
                              
                                 U
                              
                              
                                 ∼
                              
                           
                        
                      is not updated in such cases.) – Of course this arrangement requires a final feasibility check at the conclusion of Algorithm 3.

This implementation differs from the one in Fábián and Szőke (2007), as the present regularization does not extend to feasibility issues.

We evaluated the performance of the following methods:
                        
                           
                              Level-ODA:
                           level decomposition with on-demand accuracy. Namely, Algorithm 3 with the parameter setting 
                                 
                                    λ
                                    =
                                    0.5
                                    ,
                                    
                                    κ
                                    =
                                    0.5
                                 
                              .

level decomposition. Similar to Algorithm 3 but the second-stage problems are solved in each iteration. We have set 
                                 
                                    λ
                                    =
                                    0.5
                                 
                              .

single-cut Benders decomposition. Similar to Algorithm 3 but the regularization is switched off by the extremal setting of 
                                 
                                    λ
                                    =
                                    0
                                 
                              , and the second-stage problems are solved in each iteration.

multi-cut Benders decomposition. An unregularized method, where the next iterate is the optimal solution of the disaggregate master problem.

single-cut Benders decomposition with on-demand accuracy. Namely, Algorithm 3 but the regularization is switched off by the extremal setting of 
                                 
                                    λ
                                    =
                                    0
                                 
                              . We have set 
                                 
                                    κ
                                    =
                                    0.5
                                 
                              .

direct solution of the equivalent linear programming problem.

The expected value problem solution was chosen as the initial first-stage solution.

All experiments were carried out on a Windows 7 machine with an 3.4GHz Intel i7-3770 processor with four physical cores, but eight logical cores due to hyper-threading and 16 GiB of RAM. The underlying LP solver is the Cplex 12.4 dual simplex solver, with one thread. The Barrier method was used to solve the equivalent linear programming problems, with eight threads.

We use a total of 105 different instances from different test sets, which we describe next.

The test set composed by Deák (2011) is available online at http://web.uni-corvinus.hu/ideak1/kut_en.htm. The instances were also used in the proposal of the on-demand accuracy approach (Oliveira & Sagastizábal, 2014).

The slptestset, described in Ariyawansa and Felt (2004), is available at the homepage of A. Felt http://www4.uwsp.edu/math/afelt/slptestset.html.

The rand problems are provided by Zverovich et al. (2012). Having been generated with the test problem generator of Kall and Mayer (1998), they do not possess any real world structure, but can still be used to test for scale-up properties of algorithms.

The sslp problems are contributed by L. Ntaimo and S. Sen. They are part of the stochastic integer test set library SIPLIB, which is compiled by S. Ahmed and is available online at http://www2.isye.gatech.edu/sahmed/siplib/. For this computational study, we solved the LP relaxations.


                        Holmes (1995) provides the POSTS testset online at http://users.iems.northwestern.edu/jrbirge/html/dholmes/post.html. It contains several two-stage and multi-stage problems.

The numerically challenging saphir problems (Koberstein, Lucas, Wolf, & König, 2011) and sampled versions of the instances contained in the testset used by Linderoth, Shapiro, and Wright (2006) round up our testset.

The dimensions of our test problems are displayed in Table 13 at the end of the paper.

The solution times are wall-clock times of the solution process, given in seconds, without the times for reading in the SMPS files. A time limit of 3,600 s was enforced for all solution runs.

Let 
                           
                              M
                           
                         and 
                           
                              P
                           
                         denote the sets of the methods and the problems, respectively. Let 
                           
                              P
                              =
                              ∣
                              P
                              ∣
                           
                         denote the number of the problems. We measured the computing time 
                           
                              
                                 
                                    t
                                 
                                 
                                    p
                                    ,
                                    m
                                 
                              
                           
                         for every method 
                           
                              m
                              ∈
                              M
                           
                         and problem 
                           
                              p
                              ∈
                              P
                           
                        .

A problem-wise comparison is not really helpful for so many instances. Hence we give the arithmetic mean 
                           
                              1
                              /
                              P
                              ∑
                              
                                 
                                    t
                                 
                                 
                                    p
                                    ,
                                    m
                                 
                              
                           
                        , the geometric mean 
                           
                              
                                 
                                    
                                       
                                          ∏
                                          
                                             
                                                t
                                             
                                             
                                                p
                                                ,
                                                m
                                             
                                          
                                       
                                    
                                 
                                 
                                    1
                                    /
                                    P
                                 
                              
                           
                         and the shifted geometric mean 
                           
                              
                                 
                                    
                                       
                                          ∏
                                          
                                             
                                                t
                                             
                                             
                                                p
                                                ,
                                                m
                                             
                                          
                                          +
                                          s
                                       
                                    
                                 
                                 
                                    1
                                    /
                                    P
                                 
                              
                              -
                              s
                           
                         of the whole test set, where 
                           
                              s
                              >
                              0
                           
                         is a shifting parameter. The arithmetic mean is sensitive to instances taking a long time to solve. Performance differences among instances with lower computing times are then neglected. We calculated geometric and shifted geometric means to show the differences in solver behavior that are not covered by the arithmetic mean, following the reasoning in Achterberg (2007). The geometric mean emphasizes relative differences in computing times, but large relative differences for small values can skew the result. Therefore the shifted geometric mean is used to lessen this impact, by adding 10s to every solution time. The choice of 10 s might seem rather arbitrary, but we think it is justified because we did not want to put too much weight on the small and easy instances.

We also use performance profiles. These were introduced by Dolan and Moré (2002), and allow for easy visual comparison of the different solution methods with regard to a given set of test problems. Method A outperforms method B if A’s graph is strictly above and left of B’s graph. Formally, a performance profile is defined as the distribution function of a performance metric. The minimal solution time 
                           
                              
                                 
                                    tmin
                                 
                                 
                                    p
                                 
                              
                              =
                              min
                              {
                              
                                 
                                    t
                                 
                                 
                                    p
                                    ,
                                    m
                                 
                              
                              :
                              m
                              ∈
                              M
                              }
                           
                         is used as a baseline for comparing the different methods via a performance ratio 
                           
                              
                                 
                                    r
                                 
                                 
                                    p
                                    ,
                                    m
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          t
                                       
                                       
                                          p
                                          ,
                                          m
                                       
                                    
                                 
                                 
                                    
                                       
                                          tmin
                                       
                                       
                                          p
                                       
                                    
                                 
                              
                           
                        . The distribution function for a method is then defined as 
                           
                              
                                 
                                    ρ
                                 
                                 
                                    m
                                 
                              
                              (
                              τ
                              )
                              =
                              
                                 
                                    ∣
                                    {
                                    p
                                    ∈
                                    P
                                    ∣
                                    
                                       
                                          r
                                       
                                       
                                          p
                                          ,
                                          m
                                       
                                    
                                    ⩽
                                    τ
                                    }
                                    ∣
                                 
                                 
                                    P
                                 
                              
                           
                        . Thus 
                           
                              
                                 
                                    ρ
                                 
                                 
                                    m
                                 
                              
                              (
                              τ
                              )
                           
                         denotes the percentage of problems method 
                           
                              m
                           
                         can solve within a factor 
                           
                              τ
                           
                         of the fastest method for these problems.

Feasibility issues caused no difficulty in course of the present experiments. Though our instances of the saphir problems are not of relatively complete recourse, all iterates became and remained feasible after 
                           
                              40
                              -
                              90
                           
                         initial feasibility cuts.

Computing times for every method and every problem are given in Table 14 at the end of the paper. The results are visualized in Fig. 1
                         as performance profiles. The profiles show that level decomposition with on-demand accuracy solves more than a third of the problems faster than the other algorithms. Moreover, it solves about 88% of all problems within a factor of two of the fastest algorithm.

Quantiles of the computing times for the different algorithms are given in Table 1
                        . They show that regularization and the on-demand accuracy approach have little effect (even adverse effect) on easy problems. But they are definitely advantageous on hard problems.

Mean computing times for the different algorithms are given in Table 2
                        . (The Cplex barrier method solved four problems incorrectly, env-xlrge, saphir-100, saphir-1000, and ssn-3000. These problems were excluded from the computation of the results for the DEQ.) All three measures give the same efficiency order of the decomposition methods. Level decomposition with on-demand accuracy ranks first, followed by level decomposition, Benders decomposition with on-demand accuracy, single-cut Benders, and multi-cut Benders. The on-demand accuracy approach without regularization is notably slower than the regularized methods, but still faster than single-cut Benders alone, it takes 45% of the computing time of single-cut Benders. Level decomposition with on-demand accuracy runs in only 21% of the time needed by single-cut Benders. The geometric mean and the shifted geometric mean both show considerable improvements, 52% and 40%, respectively. This gap can be explained by two observations. First, it shows that level decomposition with on-demand accuracy is especially helpful in solving large instances, e.g., rand, LandS, 20_term, ssn, saphir, and 4node-32768. Second, the improvement of level decomposition with on-demand accuracy is not so large or negative on some smaller instances, e.g., 4node with up to 1024 scenarios, environ, and some instances from Deák’s test set.

Benders-MC ranks last according to all three measures. This is because the scale-up properties of multi-cut methods are worse than those of the single-cut methods. This fact was pointed out in Birge and Louveaux (1997), and confirmed by the test results of Zverovich et al. (2012). Our results in Table 14 also demonstrate the difference in the scale-up properties of single-cut and multi-cut methods. It must be noted, however, that much depends on the solver used for the solution of the master problem. Wolf and Koberstein (2013) gives insights into this issue by presenting computational efforts spent in solving the first-stage and second-stage problems, respectively. In this paper we also present such data, in Table 5, below.

The comparison with the equivalent linear programming problem, which was solved with the parallelized barrier method of Cplex, confirms recent results that specialized solution methods are advantageous (Zverovich et al., 2012; Wolf & Koberstein, 2013).

The reason why on-demand accuracy speeds up the solution process can be seen by comparing the overall iteration and substantial iteration counts that were achieved by the different methods and are shown in Tables 3 and 4
                        
                        , respectively. The on-demand accuracy approach has five percent more iterations, but just about 57% of substantial iterations, compared with the level method measured by the arithmetic mean. 45% of all iterations are insubstantial iterations, in which no subproblems have to be solved. These iterations are therefore quite fast, compared to a typical substantial iteration. The same holds for Benders decomposition with on-demand accuracy, where 84% of all iterations are insubstantial iterations, but the increase in overall iterations is just 11%, compared with Benders-SC. Although Benders-MC needs only about 7% of the iterations of Benders-SC, the computing time is much higher.

Our results are in accordance with the practical efficiency estimate of the level method, cited in Remark 2. We found that there were generally less than 
                           
                              n
                           
                         iterations between any two consecutive critical iterations. (
                           
                              n
                           
                         denotes the number of the first-stage variables.) This holds for both the Level and the Level-ODA methods. For each problem instance, we considered the maximal number of iterations occurring between any two consecutive critical iterations. This was then divided with the number of the first-stage variables. The ratios are very similar in case of the Level and the Level-ODA methods. The ratios fall below 1.0 in 93 problems from the 105 tested. In 6 further cases, the ratios fall below 1.67. The corresponding problems belong to the saphir, gdb and 20_term problem schemes. The saphir problems need many iterations to reach a first-stage solution which is feasible for the whole problem. Without taking these iterations into account, the ratios would be also well below 1.0. In the remaining 6 cases, the ratios are below 8. The corresponding problems belong to the sslp problem schemes.

The iteration counts are reflected in the amount of time the algorithm spends at particular tasks, as can be seen in Table 5
                        . The times are summed wall clock solution times over all threads. The starkest differences can be found between single-cut and multi-cut Benders. Where Benders-SC spent only a small amount of time solving the master problem, it spent much more time building and solving subproblems. On the other hand, Benders-MC spent most of the time solving the master problem, and the least amount of any algorithm on solving and building subproblems. This is in accordance with the iteration counts.

Comparing level decomposition with and without on-demand accuracy, the time spent in solving the master problems is a little bit higher, but this is to be expected due to the higher number of overall iterations. The same holds for the time spent in the projection problem. A substantial decrease can be found in the time spent in solving second stage subproblems as well as the time needed to build these subproblems, it takes 69% of level decomposition without on-demand accuracy. The time spent in generating on-demand accuracy cuts is relatively low, it amounts to 1% of the whole CPU time. The on-demand accuracy generation time is larger for Benders-ODA, as the number of iterations is much larger than for Level-ODA.

Measuring the wall clock computing time can only be done stage-wise. Table 6
                         shows these computing times. Comparing Benders-SC and Benders-MC, the times per task are reflected in the computing times per stage, where the second stage tasks are parallelized. Thus Benders-MC takes more than five times longer than Benders-SC to solve all problems. Regarding on-demand accuracy and level decomposition, an increase of 9% in first stage solution time is more than offset by a larger decrease of 29% in second stage solution time, which leads to a decrease of 25% in overall solution time for the level method with on-demand accuracy compared to the level method.

The summed wall clock solution times for the individual threads in Table 5 also allow to measure the effect of parallelization on the relative performance of the algorithms. As only the building and solving of second stage subproblems, as well as the computation of on-demand accuracy cuts is done in parallel, algorithms that spend more time in the second stage benefit more from parallelization than those algorithms that do not. This is particularly noteworthy for single-cut Benders and multi-cut Benders, by comparing the respective parallel wall clock computing time given in Table 6 with the summed wall clock computing times over all threads in Table 5. Note that the times in Table 5 can only be used as a rough estimator for the sequential computing time, as the solver used eight threads, but has only four physical cores available, thus some overhead is included in these results. With this caveat in mind, the times from Table 5 show that Level-ODA runs in 16% of Benders-SC, but the wall clock computing time gives only an improvement of 21%. Thus parallelization diminishes the advantage of level decomposition with and without on-demand accuracy, compared with Benders decomposition.

The on-demand accuracy approach proposed by Oliveira and Sagastizábal (2014) was initially evaluated only on a test set composed by Deák (2011). Therefore, we tested our algorithm also only on Deák’s test set, but with instances with 10, 20, 30, 40, 50, 80, 100, 150, 200, 250, 300, 350, 400, 450 and 500 scenarios instead of just the instances with 400, 450 and 500 scenarios, which we selected for our test set above.

The performance profile for Deák’s test set is shown in Fig. 2
                        .

Quantiles of the computing times for the different algorithms are given in Table 7
                        . (The Cplex barrier method solved three problems incorrectly, 60x60-1_80,40x40-1_80 and 60x20-1_250. These problems were excluded from the computation of the results for the DEQ.)

Mean computing times are given in Table 8
                        . (Problems solved incorrectly with the Cplex barrier method were excluded from the computation of the results for the DEQ.)

Our results are in accordance with those of our more general test case above, and also with those of Oliveira and Sagastizábal (2014). However, it is interesting that the multi-cut L-shaped method is faster than the level method with on-demand accuracy on this test set. This can be explained by the size of the test instances, which are rather small problems. Therefore cut proliferation does not become a problem. The multi-cut method is also faster on the smaller scenario instances, but slower on the larger scenario instances than the level method with on-demand accuracy. Due to many small scenario instances, the multi-cut method is the fastest method overall on this test set. Comparing only the single-cut algorithms, level decomposition with on-demand accuracy approach is faster than either level decomposition or single-cut Benders, but slower than Benders-ODA.

The iteration counts presented in Tables 9 and 10
                        
                         and the detailed computing times in Tables 11 and 12
                        
                        
                        
                         explain these findings. The multi-cut method needs on average only 9 iterations, whereas the level method with on-demand accuracy needs 48. The lesser time spent on solving the master problem in the level method with on-demand accuracy is not small enough to offset the computing times incurred by solving more second stage subproblems than multi-cut Benders, due to the higher number of iterations. In comparison with level decomposition without on-demand accuracy, the reduction in substantial iteration is enough to offset the increase in overall iterations.

Benders-ODA is faster than Level-ODA for this test set, although it needs 77% more iterations. This is due to the fact that Benders-ODA does not have to solve a projection problem. In the sequential case, the relative order of Benders-ODA and Level-ODA would most likely change, according to the times in Table 11.

@&#CONCLUSION@&#

In this study, we devised a regularized and an unregularized variant of the single-cut L-shaped method using the on-demand accuracy approach. An iteration is called substantial if the current optimal objective function value of the master problem falls below a certain descent target. Only in substantial iterations is a conventional optimality cut constructed. In unsubstantial iterations, an approximated cut is added to the master problem that can be obtained without solving the second-stage subproblems.

The computational results show that for the unregularized variant, the total number of iterations increases by 20% on average. This can be explained by the decreased accuracy of the cuts in the master problem. For the regularized variant this increase is only roughly 5%. However, in both cases the slight increase in iterations in by far outweighed by a drastic decrease in average computing time per iteration as only 16% of the iterations are substantial. This resulted in a decrease of overall solution time of 55% on average compared to the conventional single-cut L-shaped method. Combining the on-demand accuracy approach with regularization even led to a reduction in solution time of 79%. On the smaller sized problems of Deák’s test set, the single-cut variant with on-demand accuracy outperformed the multi-cut method that achieved by far the smallest iteration count. On the complete test set containing many large scale problems the multi-cut method was shown not to be competitive due to a high amount of solution time required to solve the master problems. Finally, we confirmed the result that regularization pays off on average. However, we showed that the effect is reduced in parallelized implementations as regularized methods spend less time solving second-stage subproblems which constitutes the step that benefits most from parallelization.

In Fábián (2012), the on-demand accuracy approach is generalized for constrained convex problems. The resulting method is especially suitable for the solution of risk-averse two-stage stochastic programming problems. – The revised and extended version, also referred to as Fábián (2012), contains a computational study with CVaR constraints applied on the recourse function. – Van Ackooij and de Oliveira (2014) extended that constrained on-demand accuracy approach to handle upper oracles and to work with restricted memory. They present numerical experiments with joint chance constrained energy problems.

Future work includes the extension of the above ideas to stochastic programming problems with binary variables. Furthermore, the combination of the on-demand accuracy approach with the idea of cut consolidation proposed in Wolf and Koberstein (2013) should be explored.

We think that the present line of research gives further insights into the effect of regularization in specialized solution methods. Such insights will be useful in developing specialized methods for special problems, like those arising in energy applications and smart grid models.

@&#ACKNOWLEDGEMENTS@&#

The Authors wish to thank the anonymous Reviewers for their constructive comments that we think helped to improve the paper substantially.

Christian Wolf’s work has been supported by a grant from the Deutsche Forschungsgemeinschaft (DFG) under Grant No. SU136/8-1. Csaba Fábián’s work has been supported by the European Union and Hungary and co-financed by the European Social Fund through the Project TÁMOP-4.2.2.C-11/1/KONV-2012-0004: National Research Center for the Development and Market Introduction of Advanced Information and Communication Technologies. These sources of support are gratefully acknowledged.

@&#REFERENCES@&#

