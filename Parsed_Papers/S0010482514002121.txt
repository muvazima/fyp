@&#MAIN-TITLE@&#A novel electrocardiogram parameterization algorithm and its application in myocardial infarction detection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This study proposes a novel electrocardiogram (ECG) parameterization algorithm.


                        
                        
                           
                           An ECG cycle is optimally fit with a 20th order polynomial function.


                        
                        
                           
                           The coefficients of the fitting function are used for efficient MI detection.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Bioinformatics

Health informatics

Polynomial fitting function

Electrocardiogram

Myocardial infarction

Prediction

@&#ABSTRACT@&#


               
               
                  The electrocardiogram (ECG) is a biophysical electric signal generated by the heart muscle, and is one of the major measurements of how well a heart functions. Automatic ECG analysis algorithms usually extract the geometric or frequency-domain features of the ECG signals and have already significantly facilitated automatic ECG-based cardiac disease diagnosis. We propose a novel ECG feature by fitting a given ECG signal with a 20th order polynomial function, defined as PolyECG-S. The PolyECG-S feature is almost identical to the fitted ECG curve, measured by the Akaike information criterion (AIC), and achieved a 94.4% accuracy in detecting the Myocardial Infarction (MI) on the test dataset. Currently ST segment elongation is one of the major ways to detect MI (ST-elevation myocardial infarction, STEMI). However, many ECG signals have weak or even undetectable ST segments. Since PolyECG-S does not rely on the information of ST waves, it can be used as a complementary MI detection algorithm with the STEMI strategy. Overall, our results suggest that the PolyECG-S feature may satisfactorily reconstruct the fitted ECG curve, and is complementary to the existing ECG features for automatic cardiac function analysis.
               
            

@&#INTRODUCTION@&#

Myocardial infarction (MI) is the symptom of heart cell injury due to the lack of oxygen, and is usually caused by the buildup of white blood cells in the cardiac vessels [1]. MI is one of the top two cardiovascular diseases in the United States, and is notorious for its fatality rate and frequent recurrences [2]. MI may be diagnosed from electrocardiogram (ECG) signals, biochemical biomarkers and echocardiography imaging [3]. But its early and precise detection still remains challenging, due to the weak MI-specific association in the aforementioned data types, and the prolonged data generation steps [1,3]. Both data precision and clinician experience play essential roles in MI detection.

MI may be diagnosed by the detection of significant changes in the ST segment or Q wave in the subject׳s ECG signal [1]. The ECG represents one of the major features for MI determination since the data are easy to collect and require only a short sampling duration. But the diagnostic criteria are difficult to follow due to the inexplicitness and ECG individualized polymorphism. Even experienced cardiologists may only recognize 82% of the ST-segmental elevation in MI subjects [4]. To facilitate ECG-based MI detection for inexperienced clinicians or non-cardiologists, a number of ECG analysis algorithms were proposed for automatic MI detection. But the detection accuracy of these algorithms remains to be improved for practical clinical applications. After the wavelet transformation of the ECG signals, Al-Naima and his colleagues applied a Multi-Layer Perceptron Neural Network model to the detection of MI subjects, and achieved 90% accuracy [5]. Chang et al. combined the power of the Hidden Markov Model (HMM) and Gaussian Mixture Model (GMM), and achieved 82.5% accuracy [6].

This study proposes the development of a novel ECG feature by fitting the ECG signal with a polynomial function. The polynomial function fits the ECG curve with high accuracy, and the fitted coefficients are defined to be the ECG representing features. The optimal parameters of this algorithm were determined using clinically collected ECG data from the PTB database. This new ECG feature was applied and tested on the MI detection problem, and achieved 94.4% in overall accuracy.

@&#MATERIAL AND METHODS@&#

The ECG data were collected from the Physikalisch-Technische Bundesanstalt database (PTBdb) [7]. 148 myocardial infarction (MI) patients and 52 healthy subjects were digitalized to 1000 sampling frequency, and the signals from conventional 12 leads (i, ii, iii, avr, avl, avf, v1, v2, v3, v4, v5, v6) were retrieved for this study.

All the ECG signals were processed in the following steps. First, a discrete wavelet transformation (DWT) was conducted to remove high-frequency noise and baseline shifting. DWT works well on removing the inter-signal dependence among multiple signals, and can achieve non-redundant signal decomposition [8]. An ECG signal has the frequency range of 0.5–100Hz [9]. The noise in the ECG signals mainly occurs at frequencies higher than 100Hz, and the baseline shifting is usually distorted by the signals lower than 0.5Hz in frequency [10]. In this study, the coif4 mother wavelet was used, because its shape is very similar to the ECG signals, and it is thus is a good representative for the signal [11].

Next, all the R peaks in the ECG signals were detected using the wavelet transformation. QRS waves are the major representative points in ECG signals, and most of the automatic ECG analysis algorithms are based on the correct detection of these waves. A peak usually occurs in the wavelet-transformed R waves, and this change may be captured by levels 3 and 4 of the quadratic spline mother wavelet, which ranges between 15 and 25Hz [12,13]. Level 4 is excluded since it may be affected by the P waves [14].

All the ECG signals are split into ECG cycles by the detected R peaks. Although an ECG cycle is usually defined as a continuous segment of PQRST waves, no commonly accepted definition is available for the exaction of boundaries for each ECG cycle. The R peak is the most conspicuous wave pattern, and is the easiest wave to detect among the PQRST waves. Since this study requires an objective splitting of ECG signals into cycles, R peaks are chosen as the ECG cycle boundaries.

In order to make different ECG signals comparable to each other, the third step normalized a given ECG cycle into [0, 1]×[0, 1] on both the time and voltage axis, as described previously [15]. The ECG baseline drifting, respiration-induced QRS complex change, and other fluctuations may affect some normalization features. But this study proposes an objective ECG normalization algorithm, and its classification performance will be evaluated on a real dataset in this study. Such a scaled ECG curve is defined as a Unified ECG Cycle (UEC), and the scaling factors for time and voltage are defined as time (TF) and voltage factors (VF), respectively. The two factors TF and VF reflect the differences in the ranges of durations and voltages of different ECG cycles.

This study proposes a polynomial function to fit the ECG signals, and represents each ECG cycle as a vector of the coefficients of this polynomial function. With the rapid increase of the sampling rate, each ECG cycle has ~1000 data points under the current technology (1kHz sampling rate). So a polynomial function may significantly reduce the data dimensionality, if its order is smaller in magnitude than 1000.

For a given short period of ECG signal {(x
                        
                           i
                        , y
                        
                           i
                        )} (i=1, 2,…,m), a kth order polynomial fitting function PolyFit(x) is defined as:
                           
                              (1)
                              
                                 P
                                 o
                                 l
                                 y
                                 F
                                 i
                                 t
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       a
                                    
                                    
                                       0
                                    
                                 
                                 +
                                 
                                    
                                       a
                                    
                                    
                                       1
                                    
                                 
                                 x
                                 +
                                 ⋯
                                 +
                                 
                                    
                                       a
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       x
                                    
                                    k
                                 
                              
                           
                        
                     

Then the least square rule is facilitated to minimize the sum of squared deviations between the fitting curve and the ECG cycle. The fitting optimization function is defined as:
                           
                              (2)
                              
                                 min
                                 
                                 
                                    
                                       R
                                    
                                    2
                                 
                                 =
                                 
                                 min
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    
                                       
                                          [
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                          −
                                          (
                                          
                                             
                                                a
                                             
                                             
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                a
                                             
                                             
                                                1
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          +
                                          ⋯
                                          
                                             
                                                a
                                             
                                             
                                                k
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                          )
                                          ]
                                       
                                       2
                                    
                                 
                              
                           
                        
                     

The vector of coefficients 〈a
                        0, a
                        1,…, a
                        
                           k
                        〉 is calculated using the function polyfit and polyval in Matlab.

A Unified ECG Cycle (UEC)C={(x
                        
                           i
                        , y
                        
                           i
                        )} (i=1, 2,…, m) is one ECG cycle between two R peaks, and its time and voltage factors are defined as TF(C) and VF(C). As defined in the above sections, 0≤x
                        
                           i
                        , y
                        
                           i
                        ≤1 (i=1, 2,…,m). If the polynomial fitting function PolyFit(x)=a
                        0+a
                        1
                        x+⋯+a
                        
                           k
                        
                        x
                        
                           k
                        , the complete UEC curve C is transformed as a parameter vector PolyECG-C(C, k)=〈a
                        0, a
                        1
                        ,…, a
                        
                           k
                        , TF(C), VF(C)〉. A refined ECG parameterization algorithm is further defined as the PolyECG’s splitting version; PolyECG-S(C, k)=PolyECG-C(C
                        1, k)∪PolyECG-C(C
                        2, k), where C=C
                        1∪C
                        2, and x(C
                        1)≤0.5, x(C
                        2)>0.5. The hypothesis for this equal-sized splitting is that the PQR and ST segments in an ECG cycle have significantly different shape patterns, and may need different sets of fitting parameters. This hypothesis will be validated and supported in the following section. The parameters in the vector are regarded as the features of this UEC, and further screened for the best feature subset. There are (k+1+2) and (2k+2+2) parameters/features for PolyECG-C(C, k) and PolyECG-S(C, k), respectively.

The Akaike information criterion (AIC) is used to measure how relatively well a polynomial function PolyECG-C(C, k) or PolyECG-S(C, k) fits the ECG cycle curve C with different polynomial function order k. AIC evaluates a given fitting model from the perspectives of both the fitting goodness and complexity based on the information entropy [16], and is better with a smaller value [17]. The AIC is defined as AIC=nln(RSS/n)+2(p+1), where p is the number of parameters, n is the number of data points in this ECG cycle C, 
                           R
                           S
                           S
                           =
                           
                              
                                 
                                    ∑
                                    i
                                 
                                 
                                    (
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                    
                                    −
                                    
                                       
                                          
                                             y
                                             ^
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                              2
                           
                        , and 
                           
                              
                                 y
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 
                                    y
                                    ^
                                 
                              
                              
                                 i
                              
                           
                         are the real and predicted values for the ith data, respectively. Usually a more complex model tends to fit the data better, i.e. the first term nln(RSS/n) decreases. But a larger p due to the complex model will increase the second term 2(p+1), and a more complex model may over-fit the dataset due to Runge’s phenomenon [18]. This work calculates the AIC value for each trained model, and determines the best choice of the polynomial fitting function order k with the smallest AIC.

The ECG signals of 148 myocardial infarction (MI) patients and 52 healthy subjects were processed and divided into training and testing datasets. The first and last 5s of a given ECG signal were removed, and then the ECG signal was split into multiple Unified ECG Cycles (UECs). Each UEC curve C was transformed as a data entry of a feature vector by either PolyECG-C(C, k) or PolyECG-S(C, k), where k is the order of the polynomial fitting function. The data entries from the first halves of the ECG signals constituted the training dataset TrainSet, and the other data entries were in the testing dataset TestSet.

The classification problem between MI and healthy data entries was investigated in this study. Best feature subsets were chosen by three popular feature selection algorithms, i.e. the Linear Forward Selection algorithm (LFS) [19], Evolutionary/Genetic Feature Selection algorithm (GA) [20], and Particle Swarm Optimization (PSO) [21]. The three feature subsets chosen by the above feature selection algorithms were tested for their discrimination performance with four classification algorithms, i.e. J48 decision tree [22], Random Tree [23], Kstar [24] and Naive Bayes [25]. In order to test the model’s performance, default parameters for the software Weka (version 3.7) were used for all the feature selection and classification models [26].

All the classification models were trained on the TrainSet, and tested on the independent testing dataset TestSet. The classification performance was measured by overall accuracy (Ac), sensitivity (Sn) and specificity (Sp), similar to [27]. For the predictions of a classification model, an MI data entry is denoted as a true positive (TP) or a false negative (FN), if it is predicted as an MI or healthy data, respectively. And a healthy data entry is a true negative (TN) or a false positive (FP), if classified as a healthy or MI data, respectively. So the total numbers of positive (P) and negative (N) data are P=TP+FN and N=TN+FP, respectively. The overall accuracy is defined as Ac=(TP+TN)/(P+N). The optimization goal is to maximize the overall accuracy Ac. The sensitivity (Sn) and specificity (Sp) of the model are defined Sn=TP/P and Sp=TN/N, respectively.

The feature selection and classification modelling were carried out using the Weka software [26] on a Windows workstation with 2Gb RAM and 1Tb hard drive. All the algorithms were executed using the default parameters of Weka for comparative purposes.

@&#RESULTS AND DISCUSSION@&#

We propose a novel hypothesis that an ECG curve may be satisfactorily represented by a polynomial function. Besides the geometric features retrieved directly from the ECG curves, the majority of analysis algorithms transform an ECG signal into the frequency domain using signal processing techniques like wavelet transformation [28]. The algebraic features directly extracted from the signal by the algorithm in this study may represent the ECG curve from a different perspective.

This section demonstrates that the polynomial curve PolyECG-C(C, k) fits well with the first UEC curve C of lead i using two MI samples s0044 and s0045, and two healthy samples s0273 and s0275, as shown in 
                        Fig. 1. Fig. 1(a) and (b) demonstrate that two MI samples (s0044 and s0045) are perfectly fitted by the curves PolyECG-C(C, 20). It is further supported by Fig. 1(c) and (d) that the two healthy samples s0273 and s0275 are also tightly aligned by the curves PolyECG-C(C, 20). So the polynomial fitting transformation function PolyECG-C may serve as a useful ECG feature set. Considering the 1000-Hz sampling rate of current ECG monitoring technology, one ECG cycle may have 500–1000 data points for 60–120 heart rates per minute. PolyECG-C(C, k) and PolyECG-S(C, k) may reduce the data volume to O(k+1+2) and O(2k+2+2), respectively.

Our data also show that the split version PolyECG-S fits the ECG signals better than the intact version PolyECG-C with the same polynomial function order, as shown in 
                        Fig. 2. The peaks and valleys of an ECG signal are major diagnostic features, and it is essential to correctly detect and represent them [29]. Fig. 2(a) and (b) show that for the MI sample s0044, PolyECG-S(C, 15) fits much better with the ECG signal C in both the peak and valley positions than PolyECG-C(C, 15). The same result is also observed for the healthy ECG signal s0273 by both the observations in Fig. 2(c) and (d). Given these observations, the rest of this study will focus on the splitting version PolyECG-S(C, k).

We first explored how well the curve PolyECG-S(C, k) fits the ECG signal C on a different order k of the polynomial fitting function, as shown in 
                        Fig. 3. A polynomial function does not always fit a given set of data points or a curve better when its order is increased. Fitting oscillation may occur at the region boundaries for a high order polynomial, which is called Runge’s phenomenon [18]. The fitting curve PolyECG-S(C, k) of the MI sample s0044 shows reasonable similarity to the ECG curve when k≥10. But Runge’s phenomenon is observed after k is increased to 25 or more, as shown in Fig. 3(a). At least k=10 is also necessary for the polynomial function to achieve reasonable fitting for the healthy sample s0273, as shown in Fig. 3(b). And Runge’s phenomenon will be observed when k≥30. Generally, the optimal similarity can be observed between the curve PolyECG-S(C, k) and the ECG signal C when k is 20.

We screened for the value of k with the best fitting performance of the transformation PolyECG-S(C, k) for all the ECG cycles. The relative goodness of fit is measured using the Akaike information criterion (AIC). A smaller AIC value implies a better balance between goodness of fit and complexity of the model. Although different individuals have different optimal fitting polynomial functions for their ECG signals, this study aims to build an ECG-based MI prediction model, and the polynomial fitting function’s order k is set to be the same for all testing individuals. We search for the order k with the smallest average AIC value. 
                        Fig. 4 shows that the average AIC values for both MI and healthy ECG signals reach the bottom at the same k=20 for PolyECG-S(C, k). The fitting performance of PolyECG-S(C, k) significantly deteriorates when k≥30.

In order to avoid the overfitting problem, we further split the whole dataset randomly into equally-sized training and test datasets, and calculated the AIC values on the two datasets for the polynomial function’s order k=5, 10, 15, 20, 25, 30, 35 and 40, respectively. The average AIC value and the standard deviation were calculated for the random 1000 runs of the above process, as in 
                        Table 1. Both the training and test datasets reach almost the same minimum AIC values at k=20, with minor standard deviations (<1.5% of the absolute value of AIC).

All the above data suggest that k=20 is a good choice for the order of the polynomial fitting functions for ECG cycle signals.

This section investigates whether the transformation function PolyECG-S may be applied to discriminate myocardial infarction (MI) patients from the healthy controls based on the ECG signals. MI is a heart muscle injury induced by shortage of oxygen, and is usually caused by blockage of the blood stream by a buildup of white blood cells [1,3]. Although MI may be diagnosed with the symptom of ST segment elevation (STEMI), it still remains challenging to determine STEMI due to the elusive pattern of ST segment elevation [30]. A patient remains within MI, even after the blood stream blockage is removed, since it is difficult to recover from the cardiac cell injury. Unlike the occasional occurrences of other cardiovascular diseases such as atrial fibrillation, it is commonly accepted that an MI patient remains in a disease status after the first MI onset [31].

We hypothesize that there are discriminating signals between the electrocardiogram (ECG) data of MI patients and healthy controls. The most MI-associated leads were screened to detect such discriminating signals. Specifically, each Unified ECG Cycle (UEC) is transformed into 44 (=20×2+2+2) features, and 12 leads of ECG signals during the time of a given UEC have 528=12×44 features. Due to Runge’s phenomenon, radical oscillation may be observed in some polynomial curve fitting functions, and makes the coefficients of PolyECG-S exceed the range of a double precision number. Only leads i (first lead) and v6 (last lead) have fewer than 3% such cases (1.4% and 1.5%, respectively), and were kept for further analysis.

A standard classification modelling process is conducted between the MI and healthy ECG signals. Each data entry has 88=44×2 features, and three feature selection algorithms, i.e. LFS, GA and PSO, were applied to the dataset TrainSet. There are 4, 17 and 7 features chosen by the aforementioned three algorithms, respectively. Then four classification algorithms, including SVM, DecisionTree, RandomTree and Naive Bayes, were modelled on the TrainSet, and the classification performance was calculated using the complete dataset TestSet (All) and three feature subsets (LFS, GA and PSO), as shown in 
                        Fig. 5.

Early and accurate detection of MI remains a challenging problem for both experienced clinicians and health informatics researchers. Even strictly following the Sgarbossa criteria, only ~55% accuracy may be achieved for the MI detection [1,3]. However, some automatic ECG analysis algorithms can achieve ~90% in overall accuracy [4–6]. Serum markers and 2D echocardiography may improve the detection accuracy, but their deployments are restricted by the availability of detection devices and long data generation time [1,3]. Fig. 5 shows that all the tested classification models perform better than 55% in accuracy. LFS chooses a feature subset with consistently accurate classification. The top two MI detection models were trained by the J48 decision tree algorithm on the complete TestSet and GA-chosen feature subset, with 94.4% and 93.9% in overall accuracy, respectively.

The detection of MI based on one of the major traditional MI diagnosis features, i.e. the ST segment elevation [32], is conducted for the comparison of MI detection model performance. The voltages of S/T peaks and their intermediate time points are used as model features, and the model performance is measured with the same validation procedure as in 
                        Table 2. The features selected in this study outperform the same classification model based on the traditional ST segment features by at least 10%, except for the Naive Bayes model. The best model proposed by this study even outperforms 12% over the best ST segment-based model. Another issue with the ST segment-based models is that, although they perform similarly well in sensitivity, they only achieve <56.7% in specificity. The low specificity will lead to a high false positive rate, which may have high costs in further MI screening and patient anxiety. Based on the data from Table 2, we use a two sample paired t-test [33] to evaluate the hypotheses of Ac(PolyECG-S)>Ac(ST), Sn(PolyECG-S)>Sn(ST) and Sp(PolyECG-S)>Sp(ST). The P-values 0.8919, 0.6397 and 0.9984 suggest that the three hypotheses are not rejected and PolyECG-S is better than the ST-based algorithm in the measurements of Ac, Sn and Sp.

@&#CONCLUSION@&#

This study presents a novel parameterization algorithm, PolyECG, for analyzing electrocardiogram (ECG) signals. Our results suggest that an ECG can be satisfyingly reconstructed using significantly reduced data points with this algorithm. The PolyECG-extracted features from the ECG signals also show a significant increase in discrimination power for MI detection. This algorithm does not require prior information on the ST-segment, and can be used for MI detection even when the ECG signals contain only weak or undetectable ST segments. In summary, PolyECG generates a set of novel ECG features, which are complementary to the current list of automatic ECG analysis techniques, and is promising for extensive applications in other cardiovascular problems.

None declared.

@&#ACKNOWLEDGEMENTS@&#

This work was supported by the Strategic Priority Research Program of the Chinese Academy of Sciences (XDB13040400), Shenzhen Peacock Plan (KQCX20130628112914301), Shenzhen Research Grant (ZDSY20120617113021359) and China 973 program (2010CB732606). Computing resources were partly provided by the Dawning supercomputing clusters at SIAT CAS. This work was also partially supported by the MOE Humanities Social Sciences Fund (No. 13YJC790105) and Doctoral research fund of HBUT (No. BSQD13050).

@&#REFERENCES@&#

