@&#MAIN-TITLE@&#An integrated data exchange platform for Intelligent Transportation Systems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An integrated platform of data exchange in an Intelligent Transportation Systems is proposed.


                        
                        
                           
                           The proposed platform can receive data from several types of equipment.


                        
                        
                           
                           The flexibility is considered in designing the integrated platform.


                        
                        
                           
                           The time complexity of the proposed platform is close to constant.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Intelligent Transportation System

Integrated platform

User friendly

Data exchange

@&#ABSTRACT@&#


               
               
                  Intelligent Transportation Systems (ITSs) make use of advanced detection, communications, and computing technology to improve the safety and efficiency of surface transportation networks. An ITS incorporates a variety of equipment and devices all working in mutual harmony. However, each piece of equipment or device has its own data format and protocol so they cannot exchange data with each other directly. In this paper, a platform of data exchange in an ITS is proposed that can receive data from several types of equipment external to automobiles, repackage the received data, and then dispatch the data to different devices inside the vehicles.
               
            

@&#INTRODUCTION@&#

Intelligent Transportation Systems (ITSs) make use of advanced detection, communications, and computing technology to improve the safety and efficiency of surface transportation networks. ITS consists of technological applications and integration that allow system operators and users to better manage and optimize the capacity of a transportation system [20]. ITS allows for the use of information technologies to collect data on the status of highways, traffic signals, transit vehicles, trucks, and trains; and integrates data in ways that affect and improve the operation of the system.

ITS has been developed since the beginning of 1970s, which makes human, vehicles, and roads united and harmonic and establishes a wider range, fully efficient, real-time and accurate information management system [11]. The ITS has received much attention in the past few years. That is due to the problems of growing traffic congestion and the need for a synergy of new information technology for simulation, real-time control, and communication networks. Traffic congestion has been increasing worldwide, the result of increased motorization, urbanization, population growth, and changes in population density. Congestion reduces efficiency of transportation infrastructure and increases travel time, air pollution, and fuel consumption [10].

ITS applied varying technologies from basic management systems, such as car navigation systems, traffic signal control systems, and container management systems, as well as variable message signs, automatic number plate recognition and speed cameras, to monitoring applications, such as security CCTV systems [6]. There are more advanced applications that integrate live data and feedback from a number of other sources such as parking guidance and information systems, weather information systems, bridge deicing systems, and so forth. Additionally, predictive techniques are being developed in order to allow advanced modeling and comparison with historical baseline data.

Interest in ITS stems from the problems caused by traffic congestion and the need for a synergy of new information technology for simulation, real-time control, and communications networks [6,10]. Traffic congestion has been increasing worldwide, the result of increased motorization, urbanization, population growth, and changes in population density. Congestion reduces efficiency of transportation infrastructure and increases travel time, air pollution, and fuel consumption.

With ITS, devices and equipments are working together. However, each device and piece of equipment has its own data format and protocol, such as GPS, TMC, Wi-Fi, or Bluetooth [8,9,16]. They cannot directly exchange data; therefore, a framework has been designed herein to exchange messages between devices and communication systems [6]. In addition, this framework can consolidate variant communication protocols, similar to the web service. Therefore, it can adapt any kind of device for use in a multi-communication system, as well as collect varied information from devices, and send all information to the ITS center for data analysis or for transmission to another vehicle [8].

This research employed ITS to design an Integrated Data Exchange Platform (IDEP for short) that includes physical, security, processing and interfacing as its four layers. Each layer includes components working in conjunction to exchange data between equipment and devices in the framework.

The second part of this paper deals with underlying challenges and methods; the third part introduces the method and framework of this research; and the fourth part consists of the conclusion and suggestions for future research.

@&#LITERATURE REVIEW@&#

The term ITS refers to efforts to add information and communications technology to transport infrastructure and vehicles in an effort to manage factors that typically are at odds with each other. The technologies applied by ITS vary, from basic management systems to monitoring applications, and more advanced applications that integrate live data and feedback from a number of other sources. Some of the constituent technologies typically implemented in ITS are described in the following sections [10].

ITS provides solutions for cooperation and reliable platform for transport [11]. Major areas of ITS in metropolitan deployments are Arterial and Freeway Management, Freight Management, Transit Management Systems (TMS), Incident and Emergency Management Systems, Regional Multimodal and Traveler Information Systems, and Information Management (IM) Systems. In these applications, different types of transmission work: some applications work on long-distance transmission and some work with short-distance communication and some systems work on radio modem transmission for the collection of computerized information for analyzing and reporting. Table 1
                         shows the generation of Intelligent Transportation System with periods.

Various forms of wireless communication technologies have been proposed for Intelligent Transportation Systems. Short-range communications (less than 500yards) can be accomplished using IEEE 802.11 protocols, specifically WAVE or the Dedicated Short Range Communications (DSRC) standard [1,2,14] being promoted by the Intelligent Transportation Society of America and the United States Department of Transportation [10]. Theoretically, the range of these protocols can be extended using mobile ad-hoc networks or mesh networking [6].

Long-range communications using infrastructure networks such as WiMAX (IEEE 802.16) [5,15], Global System for Mobile Communications (GSM) [12,13], or 3G have been proposed. Long-range communications using these methods are well established, but unlike short-range protocols, these methods require extensive and very expensive infrastructure deployment. There is a lack of consensus as to what type of business model should support this infrastructure [17].

Recent advances in vehicle electronics have led to a move toward fewer, more capable computer processors in a vehicle. A typical vehicle in the early 2000s had between 20 and 100 individual networked microcontroller/programmable logic controller modules with non-real-time operating systems. The current trend is toward fewer, more costly microprocessor modules with hardware memory management and real-time operating systems. The new embedded system platforms allow more sophisticated software applications to be implemented, including model-based process control, artificial intelligence, and ubiquitous computing. Perhaps the most important among these for Intelligent Transportation Systems is artificial intelligence.

Virtually every car contains one or more mobile phones. These mobile phones routinely transmit their location information to the network, even when no voice connection is established. This allows them to be used as anonymous traffic probes. As the car moves, so does the mobile phone signal. By measuring and analyzing triangulation network data in an anonymous format, the data is converted into accurate traffic flow information. With more congestion, there are more cars, more phones, and thus, more probes. In metropolitan areas, the distance between antennas is shorter, resulting in creased accuracy. No infrastructure needs to be built along the road; only the mobile phone network will be leveraged.

Technological advances in telecommunications and information technology coupled with state-of-the-art microchips, RFID, and inexpensive intelligent beacon sensing technologies will enhance motorist safety by enabling Intelligent Transportation Systems globally [18]. Sensing systems for ITS include both vehicle- and infrastructure-based networking systems, e.g., intelligent vehicle technologies. Infrastructure sensors are indestructible (such as in-road reflectors) devices that are installed or embedded in the road, or surrounding the road (buildings, posts, and signs for example) as required, and may be manually disseminated during road construction/maintenance or by sensor injection machinery for rapid deployment of the embedded radio frequency powered (or RFID) in-ground road sensors [4]. Vehicle-sensing systems include deployment of infrastructure-to-vehicle and vehicle-to-infrastructure electronic beacons for identification communication; they may also offer the benefits of Closed Circuit Television (CCTV), such as automatic plate recognition technology at desired intervals in order to increase sustained monitoring of suspect vehicles operating in critical zones.

ITS strategies apply a broad range of information and communication technologies to make surface transportation networks safer, more secure, more efficient, more reliable, and more environmentally friendly. Systems optimize the capacity of transportation infrastructure through real-time monitoring of operations and by reacting expeditiously to any anomalies. ITS conserves resources and can potentially forestall the need to expand capacity of transportation infrastructure.

In an ITS, there are many kinds of information and transmission types, for example GPS, TMC, Wi-Fi, GSM/GPRS, or Bluetooth (Fig. 1
                     ). Users must use corresponding devices to receive and use data from different types of transmission, or such data cannot be used. For example, users cannot receive and use the GPS data if they do not have a GPS receiver. Thus, a unified ITS framework for data exchange is proposed in this research. The framework that transfers data between equipment and devices is configured first. In addition, the data is dispatched to the corresponding device. Finally, security is considered.

An overview of the IDEP framework is shown in Fig. 2
                        . The solid lines signify data received from equipment outside of the cars that is transmitted to devices inside the cars. In addition, the dotted lines signify data that was received by a device and transmitted to the equipment outside a car. There are four layers in IDEP: physical, security, processing and interface.

The data flow charts of the framework are shown in Fig. 3
                        . From equipment to devices, data are received from equipment via physical layers. Then, if the received data are encrypted, the data will be decrypted by the decryption component. When data are transmitted to an assembler component, the data are decomposed and repacked into unified XML form data. Finally, the packed data are transmitted to devices by an interface layer. If data from devices are transmitted to equipment, the data are first transmitted to a disassembler component by an interface layer. Then, the data are encrypted via an encryption component if the transmitted data require more security. Finally, the data are transmitted to the equipment by the physical layer.

The first layer of IDEP is the physical layer. It consists of components, which can receive or send data out of cars by wireless communication technologies, like GPS [13], GSM, TMC, Wi-Fi, or Bluetooth [17].
                           
                              •
                              GPS component: Receives the GPS signals from satellites.

GSM/GPRS component: Receives or sends data to the base station of a cell phone by GSM or GPRS technologies.

FM component: Receives the TMC signals from the TMC base station.

Wi-Fi component: Receives or sends data to the base station by Wi-Fi technologies such as 821.11a/b/g/p. In addition, it can also be used to send or receive data by ad-hoc technology; so this framework can be used for communication between more than two cars by VANET technology.

Bluetooth component: Receives or sends data to the base station by Bluetooth technologies.

The second layer of IDEP is the security layer. It is used to decrypt data received from external sources, or to encrypt data that will be sent to external equipments. Therefore, both decryption and encryption components are in this layer. These two components are described as follows.
                           
                              •
                              Decryption component: When data is received via Wi-Fi or Bluetooth from another IDEP user, the data might be encrypted. Therefore, the decryption component in the framework is used to decrypt the data.

Encryption component: If the data transmitted to another IDEP user is sensitive, it can be encrypted to ensure security.

Both decryption and encryption components could be used to decrypt and encrypt sensitive data, in Wi-Fi and Bluetooth technologies [16].

The third layer of IDEP is the processing layer. This layer processes the data received from external sources or in preparation of being sent to the equipment outside of the cars. On the receiving side, it contains assembler and dispatcher components to process data. In addition, on the sending side, there is a disassembling component. The details of these three components are as follows.
                           
                              •
                              Assembler component: Since the protocols of varied transmission technologies are different, a component must be used to eliminate divergences. This component collects and repacks data received from equipment. In addition, it packs this data into an XML data type, and then passes the packed data to the next component, the dispatching component.

Dispatching component: After the data is repacked by the assembler component, it is transmitted to devices linked to this framework. However, such devices may differ. Therefore, a dispatching component is used to transmit data to devices.

Disassembler component: In this framework, data is XML type data; hence, the data cannot be transmitted to the equipment directly. Therefore, there is a disassembling component to unpack and transfer data in the original protocol. In addition, due to the limitation of linkage routes, the disassembling component is only used to transmit data out by GSM/GPRS, Wi-Fi or Bluetooth technology.

The fourth layer of the IDEP is the interface layer. There are four components in this layer. The components are used to communicate with each device that is inside the car, such as the car computer, PDA, NB, smart phone, or navigator.
                           
                              •
                              CAN bus: CAN bus is a serial communications bus designed to provide simple, efficient and robust communications for in-vehicle networks. CAN was developed by Robert Bosch GmbH, beginning in 1983, and presented to a wider audience at the Society of Automotive Engineers (SAE) Congress in 1986—effectively the “birth of CAN”. In the early 1990s, Bosch submitted the CAN specification for standardization [19]. The CAN bus is a balanced 2-wire interface running over a Shielded Twisted Pair (STP), Un-shielded Twisted Pair (UTP), or ribbon cable. The bit encoding used is Non-Return to Zero (NRZ) encoding (with bit-stuffing) for data communication on a different two wire bus. The use of NRZ encoding ensures compact messages with a minimum number of transitions and high resilience to external disturbance. Via CAN bus, the framework can communicate with the car's computer [20].

USB: Universal serial bus is a serial bus standard to interface devices to a host computer. USB was designed to allow many peripherals to be connected using a single standardized interface socket and to improve plug-and-play capabilities by allowing hot swapping; that is, by allowing devices to be connected and disconnected without rebooting the computer or turning off the device. Other convenient features include providing power to low-consumption devices without the need for an external power supply and allowing many devices to be used without requiring manufacturer specific, individual device drivers to be installed.

Wi-Fi: Wi-Fi is the trade name for the popular wireless technology used in home networks, mobile phones, video games and more. In particular, it covers the various IEEE 802.11 technologies. A Wi-Fi enabled device such as a PC, game console, mobile phone, MP3 player or PDA can connect to the Internet when within range of a wireless network connected to the Internet. The coverage of one or more interconnected access points, called hotspots, can comprise an area as small as a single room with wireless-opaque walls or as large as many square miles covered by overlapping access points [8,15].

Bluetooth: Bluetooth is a standard communication protocol primarily designed for low power consumption, with a short range based on low-cost transceiver microchips in each device. Bluetooth enables these devices to communicate with each other when they are in range. The devices use a radio communications system so they need not to have an unobstructed line-of-sight, and can even be in different rooms as long as the received transmission is powerful enough. A Bluetooth device class indicates the type of device and the support services whereby the information is transmitted during the discovery process [17].

Since the data and protocols between devices and equipment are different, a unified data format in XML for exchanging data in a framework is proposed. The data-exchanging scheme is shown in Fig. 4
                        . In the scheme, the IDENTIFY block is the first block; it includes the Id tag to identify the system type on different IDEP users. The Time tag records the date and time information related to the data exchange. In addition, the Blocks tag is used to declare the total number of blocks that follow the IDENTIFY block.

Blocks following the IDENTIFY block consist of exchanged data for each protocol in ITS, such as GPS, GSM, GPRS, TMC, Wi-Fi, or Bluetooth. Each protocol has its own block for recording data. Therefore, each block has different tags inside. Not all blocks need to be used simultaneously; the framework includes only protocol blocks necessary for the data exchange. Therefore, the exchanged data can remain as small as possible. In addition, there are two properties in the main tag of each block. One property is Version, used to distinguish the contents of identical blocks. According to the flexibility of the framework, users can design or add their own tags in blocks such that the version information can be identified by the version properties. The other property is Encrypt, used to distinguish whether the data in a block is encrypted. If the data in the block is encrypted, the property is set to true, otherwise it is set to false.

In all ITS operations, communication between and among various information systems, (e.g., between road condition monitoring and traffic management centers or between different agencies responsible for transportation systems) as well as communication with the system users is critical to successful deployment. The same types of communication have been cited as critical components of improved homeland security systems; thus, there is synergy between ITS and homeland security.

The IDEP mechanism also includes the security processing method. In IDEP, it uses the Advanced Encryption Standard (AES) encryption function to encrypt or decrypt data received from another IDEP user or sent to another IDEP user.

In cryptography, the AES is an encryption standard adopted by the U.S. government. The standard comprises three block ciphers, AES-128, AES-192 and AES-256, adopted from a larger collection originally published as Rijndael. Each AES cipher has a 128-bit block size, with key sizes of 128, 192, and 256 bits, respectively. The AES ciphers have been analyzed extensively and are now used worldwide, as was the case with their predecessor, the Data Encryption Standard (DES).

AES was announced by National Institute of Standards and Technology (NIST) as U.S. FIPS PUB 197 (FIPS 197) on November 26, 2001, after a 5-year standardization process in which fifteen competing designs were presented and evaluated before Rijndael was selected as the most suitable. It became effective as a standard on May 26, 2002. As of 2009, AES is one of the most popular algorithms used in symmetric key cryptography. It is available in many different encryption packages. AES is the first publicly accessible and open cipher approved by the NSA for top-secret information [18].

Once the team determined how the information can enter and exit the system, we are able to begin developing the method by which the system would process the information in the framework and make the information available for output. The first step is to evaluate design alternatives. Thereafter, the design alternatives and the functional requirements are used to document the proposed design for the system. Finally, the design and simulation scenarios are implemented in order to verify the functionality, performance, and efficiency of our research.

The rapid application development (RAD) tool used to write the simulation program in this study is the Borland C++ Builder and the operating system is Microsoft Windows XP. In the simulation program, the graphics user interface (GUI) displays the connected virtual devices, the received data, and the data repacked for exchange.

The IDEP simulation program of this study is shown in Fig. 5
                        . In the block named “IDENTIFY Block”, users can set the option for receiving data from which equipment (GPS or TMC in this program), and set the COM port used to receive data from Bluetooth. In the block named “Protocols”, users can see the received GPS or TMC data, set the protocol version, or make IDEP to encrypt the data (check the Encrypt checkbox). In the “Received Raw Data” block, users can see all received data from GPS or TMC. Therefore, the data packed to data-exchanging format by IDEP is shown in the “Packed Data” block. Finally, if there is another IDEP that works in the same sub-network, then these IDEPs broadcast its packed data to another platform. The packed data received from another IDEP are shown in the “Data Received from another IDEP” block.

When the user wants to encrypt the received data, he only needs to check the Encrypt checkbox in each protocol block, and then the data will be encrypted by AES algorithm and packed into the data-exchange format. Data encrypted and packed in the exchange format is shown in Fig. 6
                        .

Several processes occur when each IDEP starts up. First, it randomly generates an integer as its ID number. Next, it randomly generates a key string to be used for AES encryption. After completing these two steps, the IDEP starts to receive data from equipment chosen by the user. When IDEP receives data from equipment such as GPS or TMC, it will parse these data into GPS protocol or TMC protocol and display it. Then, IDEP will repack these data into data-exchange format and broadcast exchanged data. The IDEP will run these processes continuously.

In the IDEP simulation program, data is exchanged with another IDEP via broadcasting over a wired or a wireless network and using UDP protocol. When a new IDEP starts up in the same sub-network, it will broadcast its ID number and AES key to the network. If the other IDEP in the same sub-network receives the data, it will save this information. Later, when it receives exchanged data that is encrypted by another IDEP, it can use the AES key previously saved to decrypt the encrypted data. Both IDEPs broadcast their ID numbers and AES keys every 5s. Therefore, both IDEPs also can receive and save this information. The workflow of the IDEP simulation program is shown in Fig. 7
                        .

Performance studies are carried out in two situations. The first investigates the communication between devices inside the car. The objective of this study is to display GPS or TMC data on handset devices without GPS or TMC receiving devices. We also explore communication between vehicles. There are two objectives of this study. One is to allow the handset devices to connect with different PCs or notebooks to exchange data with each other through the MANET. Another is to allow the vehicles to obtain information (such as speed of vehicles) from others.


                        Fig. 8
                         shows the performance study environment, in which there are two notebooks serving as the IDEP in vehicles. In addition, there are several kinds of devices connected to IDEP by Bluetooth or USB cable and receiving external data or signals; such as the GPS receiver that receives GPS signals from satellites and the TMC receiver that receives TMC data from TMC stations. However, the GPS and TMC receivers serve as the virtual input by simulating real signals and data in this study. Moreover, the cell phone and PDA are real-world handset devices, while the communication between IDEPs is ad-hoc technology.

In this situation, two computers are used instead of devices inside an automobile. One computer can receive GPS and TMC data by connecting a Bluetooth GPS and TMC receiver. The other computer is not connected to any receiver devices, therefore it cannot receive GPS or TMC data; but we execute the navigator application on this computer. Both computers run the IDEP simulation program and communicate with each other via wired or wireless network. While the simulation program is running, it records the size of received data and processing times (tick counts) to a file to be analyzed later. Fig. 9
                            shows the architecture of simulation Situation 1; the hardware and software used in this simulation situation are shown in Table 2
                           .

In this simulation, the IDEP mechanism can be proved workable. Via IDEP, the navigator application running on Computer 2 receives GPS and TMC data without GPS and TMC assistance and accomplishes to position (Fig. 11
                           
                           ).

From Situation 1, we in total saved one thousand records in one file. Of these records, the first two hundred records represent data transmitted without encryption and the other records were transmitted with encryption. Table 3
                            shows the average sizes of received data, average processing times, and error counts of received data in each part of the records.


                           Fig. 12
                            shows the Part 1 records in simulation Situation 1, and Fig. 13
                            shows the first two hundred records of Part 2 in simulation Situation 1. The line at the top of the figure is the received data size, and the one at the bottom represents the processing times. The disruptions to the line representing received data size are caused by received TMC data, and the five troughs in Fig. 13 are the errors in received data. The results of these two figures show that the IDEP is stable and can process data rapidly regardless of whether the received data are encrypted or not.

In this situation, we put two notebooks running the IDEP simulation program on two cars. As in the simulation in Section 4.2.1, just one of these two notebooks connects to GPS and TMC receivers. Therefore, only one notebook can receive GPS and TMC data, and the other one runs the navigator application without GPS and TMC receivers. Communication between the two notebooks is 802.11b wireless network working in ad-hoc mode. While the simulation program is running, it will record the size of received data and processing times (tick counts) to a file for analysis after simulation. Fig. 14
                            shows the architecture of simulation Situation 2 and Fig. 15
                            shows the driving path in the real simulation. Hardware and software used in this simulation situation are shown in Table 4
                           .

From Situation 2, we in total saved 874 records in one file without interruption. All data was transmitted without encryption during simulation. Table 5
                            shows the statistics regarding records in simulation Situation 2. The total time spent in this simulation is 1409s. Based on IDEP simulation program settings, it should record 1409 records (one record per second). However, we obtained merely 874 records after simulation. This was due to the distance between the two automobiles. When the distance between two automobiles exceeded 5m, the wireless connection broke. Therefore, when we use the IDEP in real driving situations, it will be affected by the distance between transmitting vehicles.


                           Fig. 16
                            shows the initial 200 records in simulation Situation 2, and Fig. 17
                            shows the total records in simulation Situation 2. The range A in Fig. 17 is caused by a careless mistake. When we discovered this mistake, we corrected it immediately and proceeded with the simulation. Since the received data size was larger than that in simulation Situation 1, it also required more processing time as a notebook uses batteries for power, and so the performance of the notebook consistently decreases. However, the processing time stayed with the average range and proved the stability of IDEP.

In this situation, we use two, four, and six computers running the IDEP simulation program to study the performance of IDEP mechanisms. As above, only one computer (called IDEP server) connects with GPS and TMC receivers and broadcasts GPS and TMC data to other computers (called IDEP clients). During simulation, each IDEP client recorded the size of received data and processing times (tick counts) to an independent file for later analysis. Fig. 18
                            shows the architecture of simulation Situation 3. In addition, the hardware and software used in this simulation situation are shown in Table 6
                            and computer specifications are listed in Table 7
                           .

After simulation in Situation 3, we saved 200 continuous records in a file for each IDEP client. All data was transmitted without encryption during simulation. Tables 8 to 10
                           
                           
                            show the statistics of records in simulation Situation 3.

The results of simulation Situation 3 prove that the performance of IDEP mechanism depends on hardware efficiency and system utilization, but is independent of the platform. Since Client-2 and Client-3 are virtual machines, they show higher performance, and the average processing times of Client-1 increased due to running the VMware virtual system. Otherwise, the performances of Client-4 and Client-5 are the best because they are clean systems and not running big loading applications.

In this study, an integrated platform in ITS for data exchanging is proposed, called IDEP. With IDEP, information or data from equipment can be transmitted and used in various devices. For example, GPS or TMC data can be used with automobile computers, notebooks, cell phones, or PDAs. Therefore, users can use their desired information even if they lack the corresponding devices. In addition, the flexibility was considered in designing the IDEP. This can be improved by adding new components to the physical or interface layer to transmit data with new equipment or devices, and new protocol blocks in data exchanging formats.

According to the results of our simulations, workability and practicality of the system are proved, and the time complexity of the IDEP mechanism is close to constant. Although the implemented model was a prototype, devices can exchange data via IDEP in real-world applications. We use the UDP protocol to broadcast data in a network. UDP uses a simple transmission model without implicit hand-shaking dialogs for guaranteeing reliability, ordering, or data integrity. Thus, using UDP in IDEP mechanism to broadcast data can increase speed of transmission. However, UDP provides unreliable service and datagram may arrive out of order, appear duplicated, or go missing without notice [7]. Using UDP to transmit critical data in an IDEP cannot guarantee the completeness of received data. Therefore, the Stream Control Transmission Protocol (SCTP) should be used instead of UDP protocol to maintain the performance of transmission and to guarantee the completeness of transmitted data in the future [3]. The IDEP mechanism can eventually be implemented into hardware architecture (i.e., an embedded system) for real-world applications.

@&#ACKNOWLEDGMENTS@&#

This work was supported in part by the Taiwan National Science Council under Grants NSC101-2221-E-324-032 and NSC101-2221-E-324-034.

@&#REFERENCES@&#

