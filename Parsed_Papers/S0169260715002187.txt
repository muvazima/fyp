@&#MAIN-TITLE@&#A prototype of a novel cell phone application for tracking the vaccination coverage of children in rural communities

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           
                              Jeev is a novel smartphone application for tracking the vaccination coverage of children.


                        
                        
                           
                           
                              Jeev synergistically combines smartphones, QR codes, and national id cards.


                        
                        
                           
                           
                              Jeev is scalable and power efficient.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

QR codes

Vaccination coverage

Children

Cell phones

Rural communities

@&#ABSTRACT@&#


               
               
                  Immunization saves millions of lives against vaccine-preventable diseases. Yet, 24 million children born every year do not receive proper immunization during their first year. UNICEF and WHO have emphasized the need to strengthen the immunization surveillance and monitoring in developing countries to reduce childhood deaths. In this regard, we present a software application called Jeev to track the vaccination coverage of children in rural communities. Jeev synergistically combines the power of smartphones and the ubiquity of cellular infrastructure, QR codes, and national identification cards. We present the design of Jeev and highlight its unique features along with a detailed evaluation of its performance and power consumption using the National Immunization Survey datasets. We are in discussion with a non-profit organization in Haiti to pilot test Jeev in order to study its effectiveness and identify socio-cultural issues that may arise in a large-scale deployment.
               
            

@&#INTRODUCTION@&#

Immunization saves millions of lives against vaccine-preventable diseases. Through financial support from organizations such as the GAVI Alliance, and more recently the Bill & Melinda Gates Foundation, a lot of progress has been made in immunizing children since 2000 towards the Global Immunization Vision Strategy (GIVS) [51]. The number of deaths in children under 5 years of age has decreased. Yet, 24 million children born every year, do not receive proper immunization during their first year of life [51].

While the GIVS aims to achieve 90% vaccine coverage by 2015 and reduce the number of childhood deaths to 4.3 million, there are several constraints that must be overcome. According to UNICEF and WHO [51], the health care systems are weak in developing countries.
                        1
                     
                     
                        1
                        The World Bank defines a country with low-income or middle-income economy to be a developing country [13].
                      There is insufficient political and financial support. The monitoring infrastructure is weak and information systems are lacking. There is a shortage of trained health workers who can deliver immunization to the population. Many children live in poor, remote areas where health care facilities and public services are weak. Due to lack of information about the importance of immunization, many children do not receive the required vaccines. Unexpected deaths and side effects create fear of immunization among parents, thereby reducing the number of children who receive a full course of vaccines. 
                        2
                     
                     
                        2
                        Recently, polio vaccines caused paralysis in 47,500 children in India [36].
                     
                  

UNICEF and WHO have emphasized the need to strengthen immunization surveillance and monitoring in developing countries [51]. Immunization coverage information is useful to monitor the performance of immunization programs and improve the delivery of vaccines to the population [50]. Today, the use of paper records to track the immunization status of children in countries such as India leads to inconsistencies in the way information is recorded; immunization records may be lost or damaged [20,2,10]. Lack of immunization coverage information can lead to wastage of vaccines due to unnecessary revaccinations and poor forecasting of the vaccine demand [51,10].

There has been an unprecedented rise in the use of cell phones worldwide; today, there are more than 6 billion cell phone subscribers [11]. Through cell phones, it is now possible to communicate with vast populations in previously hard-to-reach areas. The ubiquity of cellular infrastructure provides new opportunities to develop cell phone-based solutions for tracking the vaccination coverage of a rural population. In India, a middle-income economy [13], about 40% of the rural population has cell phones (or mobile phones) [29]. In Haiti, a low-income economy [13], the cellular infrastructure has grown quickly since the devastating earthquake of 2010. Haitians are using cell phones to receive relief incentives [42]. Furthermore, UNICEF has identified countries like India and Haiti as priority countries where routine immunization coverage is low and must be improved [44,45]. (Immunization tracking is a challenge even in countries such as USA, but our focus is on developing countries.)

While tracking the vaccination coverage of a population has become a global challenge in public health,
                        3
                     
                     
                        3
                        Recently, the Bill and Melinda Gates Foundation solicited proposals for developing low-cost cell phone applications to improve the uptake and coverage of childhood vaccinations as one of the grand challenges for 2011 [2].
                      little research has been done in this domain. This is a timely opportunity for the health informatics community. In this work, we address the problem of tracking the vaccination coverage of children in hard-to-reach areas such as rural India, where cellular infrastructure is available. We present a low-cost cell phone application called Jeev.
                        4
                     
                     
                        4
                        
                           Jeev means ‘life’ in the Sanskrit language.
                      
                     Jeev is unique in the sense that it synergistically combines the power of smartphones and ubiquity of cellular infrastructure, Quick Response (QR) codes, and national identification cards. Jeev is based on a client-server model: the data collected by the clients are synchronized at the server; the clients and server exchange small amounts of data using low-cost SMS text messaging. (The transmitted data is always encrypted for security and privacy reasons.) We report a detailed evaluation of Jeev to study its performance, scalability and power consumption, using the National Immunization Survey datasets [4]. Although Jeev has not been deployed and studied in a rural community, we are planning to pilot test it in rural Haiti through Maison de Naissance [14], which is a community health care facility for delivering healthy mothers and healthy babies.

The rest of the paper is organized as follows. Section 2 provides the background and related work. Section 3 presents the design of Jeev. Section 4 describes the communication protocol in Jeev. In Section 5, we report the performance evaluation of Jeev. Section 6 discusses our next steps for pilot testing Jeev in a rural community. Finally, we provide some points for discussion and our concluding remarks in Sections 7 and 8, respectively.

A preliminary version of this paper appeared in the 2013 IEEE International Conference on Healthcare Informatics [32].

Today, there are more than 6 billion cell phone subscribers [11]. The cellular infrastructure is ubiquitous in many developing countries and provides an easy way to connect to vast populations in hard-to-reach areas [21,29,42]. Smartphones have become popular and affordable; they have powerful processors, several GBs of storage, high resolution cameras, several hours of battery life, and touch screen technology. SMS text messaging provides an inexpensive way to communicate small amounts of data in hard-to-reach areas. Today, it costs less than $0.02 to send a text message in countries like India, Pakistan, Bangladesh and Haiti [19]. Data can be encrypted for security and privacy reasons.

Quick Response (QR) codes have fast readability and higher storage capacity (up to 400 times more) as compared to standard UPC barcodes [15,38]. QR codes are 2-dimensional and can encode any type of data and even encrypted data. They have become popular in businesses and among consumers. QR codes use advanced error correcting codes. Even with up to 30% damage, a QR code can still be decoded [7] (see Fig. 1
                        (a)). QR codes can also be modified for artistic reasons and still be decoded (see Fig. 1(b)). They can be easily decoded using applications on smartphones [12].

National identity cards have become increasingly important in many developing countries to prevent voter fraud and corruption, and to take advantage of banking services, government incentives and subsidies. For example, in rural India, such cards are required to receive subsidies on food and grains [5] and open bank accounts [9]. In post earthquake Haiti, national ID cards are giving citizens access to work, banking services, and voting privileges [26]. These cards are usually laminated or made of plastic and are more durable than paper records.

Closely related to our work is VaxTrac, which has received funding from the Bill & Melinda Gates Foundation. It captures and processes infant fingerprints using fingerprint readers and inexpensive netbooks [10]. However, we believe there are some potential limitations: The system may not scale in large geographical regions because images are large in size and have to be physically transferred to integrate them in a central location. This also raises the issue of how to synchronize the data on the netbooks carried by health workers. Furthermore, fingerprints of infants change in size as they grow. Infants may not be cooperative to allow health workers to take good fingerprints.


                        Jeev is different from VaxTrac in the sense that it relies on smartphones, which consume less power than netbooks, and does not rely on infant's biometric data. Jeev uses low-cost SMS text messaging for communication between the server and clients, synchronizes the vaccination records in real-time, and can be deployed in large geographical regions.

Abhishek et al. [20] proposed the notion of mobile health cards to increase the immunization rate in rural areas. They highlighted the current problems with paper based records in rural India such as lost or damaged paper immunization forms. They suggested that all activities involved during immunization should be moved to the mobile platform using cell phones. Each child would be assigned a unique id generated by the system; the authors mentioned the use of biometric technology. However, no real system has been developed using the proposed ideas.

In the US, Cook Children's healthcare system, in partnership with athenahealth, Microsoft, Sanofi Pasteur and Merck, has began using QR codes on vaccine bottles [1]. This will result in easy management of vaccines, tracking of vaccination status, and allow integration of vaccination information with EHR systems. Jeev is different in the sense it uses QR codes to identify children instead of vaccines and is designed for a rural population, where the computing infrastructure is minimal.

Another prominent effort is OpenLMIS, an open-source platform designed to manage health commodity suppy chain in low-income and middle-incomes economies [47]. This platform was implemented in the African countries of Mozambique, Tanzania, and Zambia. More recently, Anderson et al. [23] developed a Cold Chain Information System to improve the immunization program in Laos. This system was designed to regularly report the vaccine stock levels and vaccine refrigerator status using Android phones and SMS text messaging.

The term mHealth (or mobile health) refers to the practice of medical and public health using mobile technology such as mobile phones, personal digital assistants (PDAs), and so forth [49,30]. mHealth is a fast growing discipline for public health due to the growth in mobile devices and communication infrastructure in many countries.

More than a decade ago, Srivastava et al. [43] discussed the problems associated with the use of information systems in rural economies for healthcare management. They proposed a cost-effective system based on wireless ad-hoc networking by utilizing existing transportation infrastructure to deliver healthcare services to villages. Kato et al. [33] studied the different 2D barcodes including QR codes for camera phone applications. They developed a set of criteria for selecting the best 2D barcode given the capability of the mobile phone's camera and operating conditions. Later, Navarro et al. [41] studied the feasibility of a 3G-based m-Health system for emergency scenarios. Their system used advanced signaling protocols for multimedia multi-collaborative conferences over IPv4/IPv6 networking. It supported simultaneous transmission of both real-time clinical data, videoconferencing, and non real-time medical services.

In 2006, Kaplan et al. [31] reported that while there are several attractive reasons to use mobile phones for healthcare interventions in developing countries, the shared ownership of these phones may limit their adoption. They also reported that there is no literature on using mobile phones as a healthcare intervention for diseases like HIV and malaria in developing countries. A few years later, Laakko et al. [35] proposed a new mobile platform called the Ubiquitous Personal Health Information Access (UPHIAC) platform for providing connectivity between healthcare providers, patients, and measurement devices for different telemedicine and and wellness applications. HL7 CDA was used to exchange data between different components in the system. The authors developed a mobile tele-ECG application using their framework to demonstrate its feasibility. Black et al. [24] proposed to extend a mobile phone's capability with external sensors for providing low-cost mobile health applications in developing countries. They developed five new applications (e.g., respiratory and pulse rate calculator, gestational dates calculator) and sensor modules such as oximeter sensor, ECG sensor, and phonocardiogram.

More recently, there has been increased interest in developing mHealth solutions for low-resource environments. Medhi et al. [39] developed a low-cost mobile phone based system for data collection and reporting to improve over paper-record management. This solution was used for a program aimed at prevention of child malnutrition in rural India. Vodopivec-Jamsek et al. [48] studied the impact of mobile phone messaging (e.g., SMS) for preventive healthcare and observed positive benefits of messaging in certain patient population. Zhang et al. [52] proposed a vaccination strategy for a population to prevent the spreading of diseases. Their strategy was based on analyzing mobile phone records to understand the social-interaction patterns among individuals. Khan et al. [34] developed a cell phone based solution for early detection of respiratory disorders for rural children using a modified stethoscope. The sound recording and the case history of the patient were transmitted via email to the health care center. Analysis of the recording was done by training a neural network to detect respiratory disorders and checked by a healthcare practitioner. Vaidya et al. [46] developed a portable diagnostic and communication device for remotely monitoring patients in rural areas. They built a health kiosk and smartphone software to present the patient data to doctors remotely and used a cloud platform to store the data. Their system was tested in a rural area of India.

In recent years, a few researchers conducted systematic review and analysis of mHealth for developing countries. Zurovac et al. [54] suggested the use of text messaging on mobile phones for malaria control in Africa. They identified six areas of malaria control whose deficiencies could be overcome through text message based interventions. Deglise et al. [27] conducted a systematic review of mobile health applications using SMS for disease control in developing countries. They concluded that most of the applications used bulk messaging and were well accepted by the population. Martinez et al. [37] reviewed mobile health applications available for the most prevalent health conditions identified by WHO. They concluded that while there were many applications for depression and diabetes, there was a lack of applications for other conditions like anemia, low-vision, and hearing loss.

There has also been some interest in addressing the security issues of using mobile devices for healthcare services. Ahmed et al. [22] explored the key security threats that arise in handling sensitive data on mobile devices for healthcare use cases. They developed a security framework to protect against these threats by providing physicians and patients a guarantee that sensitive information will not be transmitted without their knowledge. Gejibo et al. [28] developed a secure data storage system on low-cost mobile phone with limited software capability for sensitive data in mHealth applications. They tested their approach using an open-source Mobile Data Collection System (MDCS).

There are a few design requirements for a vaccination coverage tracking application to successfully operate in rural communities. Firstly, a child may be vaccinated at different locations and therefore, must be identified correctly to avoid missing vaccines and receiving unnecessary revaccinations. Secondly, cellular coverage in certain areas may be lacking at times, and therefore, the application should cope with such situations. Thirdly, the application should be low-cost and easy to use and deploy in rural communities. Finally, the application should be efficient in performance and energy consumption.

We have developed a novel application called Jeev for tracking the vaccination coverage of children in rural communities. Jeev synergistically combines the power of smartphones and the ubiquity of cellular infrastructure, QR codes, and national identity cards. Jeev is based on a client-server model: it has a client-side software and a server-side software. (Hereinafter, we simply use the terms client and server.) The server runs on a smartphone and is responsible for storing and managing the vaccination records of children. A smartphone is a perfect choice because the computing infrastructure in rural areas is minimal; having access to devices such as netbooks with Internet connectivity in these areas would be expensive. The server can be located in a community clinic or health care facility. A health worker carrying a smartphone running the client can access the vaccination record of a child from the server and request it to update the record with new vaccine doses. The client can also request the server to create a new vaccination record for a child. 
                        5
                     
                     
                        5
                        In the current design, we use one server and multiple clients. If scalability and reliability become an issue, we can opt for multiple servers. We can avoid loss of data on the server by performing routine backups on inexpensive micro SD cards.
                      The clients and server communicate via SMS text messaging and do not require a data communication network like 3G. The transmitted data is encrypted for security reasons.


                     Fig. 2
                      illustrates how Jeev operates. When a child is immunized for the first time, either at a vaccination camp, clinic, or home, a health worker will collect the name, sex, and date of birth of the child and some information about the parent (or legal guardian) from the national id card (e.g., name). This information is then encrypted and a QR code is generated and printed on a sticker of 50x50 pixels in size. (Printing can be done using a portable label printer priced less than $100.) The sticker is affixed on the national id card of the parent. (Additional stickers can be printed and affixed on a paper vaccination form if available, or be provided to the parent for safekeeping at home.) Also if the parent has a cell phone, then a text message can be sent containing the encrypted string from which the QR code was generated for backup purpose. This is useful in case the national ID card and/or QR code are lost or damaged, and will be discussed later. (Note that the parent's cell phone need not be a smartphone, which is quite realistic in rural areas.) The QR code on the sticker uniquely identifies the child during future immunization visits. It can be decoded only by authorized clients. The client sends the collected information to the server and requests it to create a vaccination record for the child. The server stores the vaccination records in a DBMS. The database schema in the current design is shown in Fig. 3
                     (a).

When a child is vaccinated in the future, a health worker will scan the QR code affixed on the parent's (or legal guardian's) id card using a smartphone running the Jeev client. Once the QR code is decoded, the child's identity is determined. The child's vaccination record is then retrieved from the server. After vaccination, the client sends a request to the server to update the child's vaccination record.


                     Jeev has intuitive user interfaces for health workers and officials both on the client- and server-side. A few screenshots on the client-side are shown in Fig. 3(b) and (c). A few screenshots on the server-side are shown in Fig. 3(d) and (e), where the vaccination coverage information is displayed. If client-side smartphones have GPS capability, then the vaccination coverage of children can be mapped and visualized on an interactive map. Fig. 4
                     (a) and (b) shows the relative size of the portable printer and the scanning process, respectively.

It is possible for a parent to lose or misplace her national id card; the QR code sticker on the id card may be damaged and therefore, cannot be decoded by a client. Then the parent can bring the extra QR code stickers provided during the first visit to identify the child correctly. A health worker can also print a new sticker with the same QR code and affix it to the parent's new or old id card. Another way is to have the health worker receive the text message stored as a backup on the parent's cell phone, which was provided during the first visit. The encrypted data can be used to regenerate the original QR code using the software available on the client smartphone. If the parent loses his/her phone or does not use it anymore, then this information is not available for recovering the original QR code. As a final resort, the health worker can ask relevant questions to the parent and try to identify the child and locate its vaccination record on the server. Because vaccination records are stored in an RDBMS on the server, appropriate SQL queries can be posed to retrieve the record using partial information provided by the parent. In the worst case, a new QR code has to be generated and printed.

When cellular coverage is not available, a client can store the vaccination data locally. Once coverage is available, the data can be pushed to the server. Vaccination records can be downloaded ahead of time from the server if needed.

In this section, we describe the communication protocol in Jeev. The communication between the client and the server is carried out by exchanging request and responses messages, via SMS text messaging, that facilitate various interactions such as retrieving and updating vaccination records. The message packet is composed of two sections: a message type and a payload. The message type indicates the purpose of the message and aids in processing the payload. The payload contains name-value pairs depending on the type of message.

In Table 1
                     , we show examples of different messages and their sizes. For example, message 
                        
                      has a message type 101, which specifies a request message to retrieve a vaccination record for the patient and is sent by the client to the server. The payload contains information to identify the patient. Message 
                        
                      has a message type 201 to indicate the response from the server to the client, and the payload contains the vaccination record of the patient. Message 
                        
                      denotes the update request message from the client to the server along with the attributes in the record that must be updated. Message 
                        
                      denotes the acknowledgment from the server to indicate a successful update operation.

In Jeev, the messages are encrypted using the 256-bit key AES encryption. Depending on the size of the encrypted message, one or more text messages are sent. For example, the encrypted message 
                        
                      is only 87 characters and hence sent as single SMS text message. However, the encrypted message 
                        
                      is greater than 160 characters and therefore, is sent as two SMS text messages. A sequence number is used to indicate the order of the text messages so that the recipient can reassemble them in the correct order. The (reassembled) message is then decrypted by the server to obtain the original message.

@&#PERFORMANCE EVALUATION@&#

We implemented the Jeev client and server using the Android SDK. We used SQLite [18] to store the vaccination records on the server, Zxing [12] for QR code processing on the client, AChartEngine [6] for visualizing the vaccination coverage information on the server, and PowerTutor [53] for measuring the power consumption of the client- and server-side smartphones. For the experiments, we used two HTC One V smartphones with 5.0 MP camera, 1.0 GHz processor, 512 RAM/4 GB ROM built-in memory, and running the Android 4.0.3 operating system. The smartphones used Sprint's 3G network in Kansas City. The data in the text messages were encrypted using the 256-bit key AES encryption.

We did not have access to vaccination records of children from a rural population, and therefore, we used the National Immunization Survey datasets [4,8] for the years 2001 through 2011. They were created through a random-digit-dialing telephone survey of households in the United States for children between the ages of 19–35 months. The vaccines that we selected were DTaP (diphtheria and tetanus toxoids and acellular pertussis vaccine), poliovirus vaccine, MMR vaccine (measles, mumps, and rubella vaccine), Hib (Haemophilus influenzae type b vaccine), Hep A (hepatitis A vaccine), Hep B (hepatitis B vaccine), varicella zoster vaccine, PCV (pneumococcal conjugate vaccine), and influenza vaccine.

We prepared four datasets as shown in Table 2
                        . Each dataset was uploaded into SQLite (on the server) based on the schema shown in Fig. 3(a). Indexes were built on three attributes: p_id in the Patient table, v_id and p_id_patient in the Vaccination table, and l_id in the Location table. For each dataset, Table 2 also shows the number of records in each table and the total database size including the indexes. (Only the performance evaluation of Jeev on D
                        1 was previously reported in the conference version of this paper [32].)

We tested Jeev on D
                        1 by running the client and server on two smartphones for three different workloads, namely, W
                        1, W
                        2, and W
                        3. Workload W
                        1 is shown in Table 3
                         and was used to measure the performance of data storage and retrieval on the server. The operations in the workload were SQL SELECT and INSERT statements, which were executed directly on the server (see Appendix).

Workload W
                        2 is shown in Table 4
                         and was used to measure the performance of Jeev's client-server model in a real-world cellular network. Each operation in the workload was initiated by the client by sending a text message (to the server) containing the information encoded in a QR code. Based on the request, the server executed one or more SQL statements, and if required returned a particular vaccination record. The text messages exchanged by the client and server are shown in Table 4. Operations O
                        8 and O
                        9 retrieved a vaccination record from the server and were different in the number of text messages sent by the server to return the vaccination record to the client. Operation Q
                        10 updated a vaccinated record on the server with five vaccines. The communication between the server and client was made secure by encryption.

Workload W
                        3 is shown in Table 5
                         and was used to measure the energy consumption of Jeev. Each operation in the workload was initiated by the client by scanning a QR code through the phone's camera, communicating with the server and retrieving the vaccination record of a particular child, and finally updating the vaccination record with new information on the server. O
                        11 and Q
                        12 were different in the number of text messages sent by the server to return the vaccination record to the client. The text messages exchanged by the client and server are shown in Table 5. As before, the communication between the server and client was made secure by encryption.

First, we present the results for workload W
                        1. Note that the SQL statements were executed directly on the server. We report the average wall-clock time taken (over three runs) to execute operations O
                        1 through O
                        7 in Fig. 5
                        (a). O
                        2 performed duplicate elimination and required more time to finish. O
                        7 performed a join, followed by grouping and counting, and as expected had the highest execution time, i.e., 12.9 secs.

Next, we present the results for workload W
                        2. For O
                        8 and O
                        9, we measured the average wall-clock time taken (over three runs) to process the client's request. This included the time to send a text message to the server, decrypt the message and process the SQL statements on the server, and return the (encrypted) vaccination record to the client and decrypt the vaccination record on the client. For O
                        10, the client did not receive an acknowledgment, and therefore, the completion time was when the server finished updating the vaccination record. (It is possible to provide an acknowledgment to the client via a text message. We added this feature for the experiments reported in Section 5.5.)

The performance results are shown in Fig. 5(b). Interestingly, most of the time was spent in communicating between the client and the server via text messaging. O
                        9 required more time than O
                        8 because its vaccination record was sent using two text messages by the server. The time taken by the server to process all the SQL statements in each operation was under 0.3s and is shown in Fig. 5(c). Clearly, the response time seen by the client was dominated by the communication latency through the cellular network.

We measured the end-to-end energy consumption of Jeev using workload W
                        3, beginning with scanning a QR code using the client's camera to completing the update of a vaccination record on the server. We included the energy required for CPU, LCD, GPS, SMS, and system services. (In O
                        12, the size of the vaccination record returned to the client was larger than in O
                        11 and therefore, required two text messages.) The average energy consumption (over 3 runs) on the client-side is shown in Fig. 6
                        (a) and each operation consumed less than 110 Joules. The average energy consumption on the server-side is shown in Fig. 6(b) and each operation consumed less than 25 Joules. On the client-side, the user interfaces were active and therefore, led to higher energy consumption compared to the server-side. (The LCD/display on the server was turned off.) Note that each phone had a 4.1V, 1500mAh battery capable of storing 22,140 Joules of energy.

We tested the scalability and power consumption of Jeev using the datasets D
                        2, D
                        3, and D
                        4 (Table 2) by increasing the number of vaccination records in the database. We used workload W
                        1 as shown in Table 3. The average wall-clock time taken to process each query in W
                        1 is shown in Fig. 7
                        (a). As expected, the time increased with increase in the size of the database. Overall, SQLite yielded good scalability as a database system for Jeev. For example, O
                        7 performed a join operation and the total time increased by a factor of 2.7 when the number of vaccination records increased by 3 times. Similar trend was observed for other operations.

Next, we used workload W
                        2 (Table 4) with a small modification to O
                        10. We added an explicit acknowledgment from the server to the client in O
                        10 via an SMS text message. Table 6
                         shows the updated operation O
                        10. We measured the time starting from when an operation was initiated by the client till the receipt of the vaccination record or the final acknowledgment. We report the average wall-clock time taken to process the operations O
                        8, O
                        9, and O
                        10 in Fig. 7(b). Similar to the observations reported for D
                        1, the communication latency through the cellular network dominated the total response time seen by the client and therefore, there was little change in the total time with increase in the database size.

Next, we used workload W
                        3 (Table 5) with a small modification to operations O
                        11 and O
                        12. We added an explicit acknowledgment from the server to the client as shown in Table 6. The rest of the setup was similar to that described in Section 5.4. We measured the peak power consumption during the execution of the operations in W
                        3 to understand the power requirements of Jeev with increasing size of the database. Fig. 8
                        (a) and (b) shows the peak power consumption by the client and the server, respectively. Clearly, the change in the peak power consumption was small as compared to the increase in the database size. This was because of the relatively small increase in the processing time at the server compared to the communication latency.

Haiti is an ideal country to test Jeev because it has low vaccination rate, high infant mortality rate, and is an under-resourced country. Since the catastrophic earthquake in 2010, the cell phone market has grown considerably in Haiti through relief initiatives [3]. Two-thirds of Haitians have access to cell phones [42]. Cell phones and SMS text messaging have become popular among Haitians for mobile banking and access to other services [3].

While Jeev has performed well in a lab setting in Kansas City, we aim to validate its efficacy in a real environment. We propose to deploy and test Jeev in the commune of Torbeck, Haiti, which has a population of about 69,000 people. Torbeck is a low-resourced, rural area ideal for validating our system. Our partner, the Global Birthing Health Foundation, operates Maison de Naissance (MN), a modern healthcare facility for supporting healthy mothers and healthy babies in rural Haiti [14]. MN is committed to expanding their vaccination program by vaccinating all mothers and children in its zone of service against diptheria, tetanus, polio, and German measles (rubella). MN was established in 2004 in Torbeck, Haiti. MN has delivered more than 4700 healthy babies and provided 128,000 consultations. MN's high quality care includes the following: (a) well-trained and supervised midwife and auxiliary-nurse staff for in-facility care 24/7; (b) adequate equipment and infrastructure (e.g., solar panels) for 100 deliveries/month; (c) electronic medical records are being used from when MN was founded; (d) strong private and public financial support and partnerships; (e) a volunteer comité de santé (CS): teachers, clergy, and respected community leaders, with strong “ownership” of the program, and 6 paid Community Health Workers (CHWs) in MN's zone of service; and (e) a state-of-the-art film about barriers to facility-based deliveries, with the aim of increasing the people's positive views of in-facility delivery, staff sensitized and trained in patient education, and community awareness and encouragement to utilize free clinic services.

The CHWs are responsible for health education, health screenings, and delivery of basic medications. They encourage women to engage in healthy behaviors by attending prenatal, vaccination and family planning clinics. They are also trained to identify individuals who would benefit from immediate treatment at MN or a hospital. They are supervised and evaluated by clinical staff before undertaking a particular service. The evaluations are reported to the Clinical Director of MN.

During our first visit to Haiti, we will evaluate the cellular coverage in the areas serviced by MN. We will train one CHW of MN to use Jeev through video lectures and hands-on usage. We will also obtain her feedback. Then we will improve the Jeev software to cope with the real-operating conditions in Haiti. We will recruit 20 pregnant women in their third trimester to participate in our study. They will be provided with monetary incentives. We will educate them on the importance of vaccinating children to save their lives. We will discuss how Jeev will help us monitor the vaccination status of their children and provide assistance to them. This will be done through video lectures, face-to-face conversations, and community gatherings. The newborns of these mothers will be monitored during their first year. Every week, we will backup the database on the Jeev server by copying it to a computer operated by MN. This will prevent loss of data due to cell phone crashes.

We will evaluate the vaccination coverage and drop-out rates of the participants. We will also measure the number of infant deaths. We will compare these results with the trends for the overall population. We will use feedback from the participants to improve the usability of Jeev. We also plan to study the effectiveness of Jeev in terms of the durability of QR code stickers, the robustness of our scheme in correctly identifying infants at different geographical locations and times, scalability, and ease of use by CHWs. We are aware that there will be challenges in developing mobile interfaces for low-literacy, rural population [40,25]. In Table 7
                     , we show the timeline of activities for pilot testing Jeev.

Using the Internet, we researched the current prices of different hardware and software resources required by Jeev. These prices are reported in Table 8
                     . Based on a discussion with the staff at MN, we also report the personnel, training, and supervision costs in Table 8. Overall, Jeev requires a small initial investment and low operating cost to sustain itself in a developing country like Haiti.

@&#DISCUSSION@&#

Today, people in more than 200 countries use cell phones [16]. While there are some developing countries where cell phone usage is prevalent (e.g., Haiti, India), others are yet to see a rise in cell phone usage. For example, the world's poorest country [13] has about 4.4 million cell phones for a population of 16.7 million [16]. One may wonder if Jeev can operate in such countries. We discuss a few requirements of Jeev in this context. First, the region of such a country with low cell phone supply should have a reasonable cellular infrastructure. Jeev does not require every parent to carry a cell phone. (If a parent does have a cell phone with SMS capability, then the encrypted data for the QR code can be saved on a parent's phone as a backup. The parent's phone need not be a smartphone.) Second, at least two smartphones (with SMS text messaging capability) are necessary for Jeev to function. Among these, the smartphone carried by a healthcare worker running the Jeev client (at the point-of-care) must have a camera to read QR codes. Thus, Jeev cannot work in regions where only non-camera phones are available.

When Jeev is deployed in a real-world setting, several technical challenges will arise. For example, the cell phones may fail or crash. To prevent data loss, we must backup the database on the Jeev server (e.g., daily, weekly) by copying it to a computer/laptop using a USB connector available for charging cell phones. Jeev uses SQLite [18], which is the most popular database software for mobile devices. SQLite is light-weight and easy-to-manage. It does no require a database administrator or maintenance tasks to be performed unlike a (heavy-weight) relational database system such as Oracle or MS SQL Server.

The current design of Jeev is suitable for a rural district with few million children given the storage capacity of low-cost smartphones. We also assumed that there is no Internet connectivity. To scale Jeev to a regional/national level, we will need to assign multiple Jeev servers, each responsible for a separate geographical area. Each server will communicate with a set of Jeev clients in its area via SMS text messaging. The data on the servers will ultimately need to be pushed to a (private or cloud-based) server so that the entire vaccination coverage data can be viewed and analyzed by upper-level authorities and decision makers. This could be done by integrating Jeev with some of the software components in the Open Data Kit (ODK) [17]. ODK enables large-scale data collection and aggregation using mobile phones and provides the ability to create customizable forms for data collection. Database consistency issues will also need to be handled if a child receives immunization in different geographical areas.


                     Jeev is currently in a prototype stage and several new features can be added to it. For example, we can easily add the capability to alert a parent that a vaccine is due for a child via SMS text messaging. We may require a custom vaccination schedule for a child based on his/her health conditions (e.g., congenital heart disease, sickle cell disease). We may also need to support vaccination schedule changes based on recommendations of authorities. Then some of the content shown to a healthcare worker on the Jeev client must be changed. To do so, we must copy the changes to the Jeev servers so that they can be communicated to the clients via SMS text messaging. The copying of changes to the servers can be done similar to pushing updates to apps on mobile phones. We also plan to explore how to leverage the customizable form design features provided by ODK.

@&#CONCLUSIONS@&#

We presented a low-cost cell phone application called Jeev to track the vaccination coverage of children in rural communities. Jeev synergistically combines the power of smartphones and cellular infrastructure, QR codes, and national identification cards. Jeev does not use any biometric data. It is based on a client-server model and uses low-cost text messaging. Data captured by different clients can be synchronized on the server in real-time. We presented a evaluation of Jeev's performance and energy consumption using the National Immunization Survey datasets to show its efficiency and scalability under different workloads. In the future, we plan to conduct the pilot testing of Jeev in rural Haiti, to study its effectiveness and to identify socio-cultural issues that must be addressed for a large-scale deployment.

@&#ACKNOWLEDGMENTS@&#

We thank Samaa Gazzaz (UMKC) for her assistance. This work was supported in part by the National Science Foundation under Grant No. 1115871, King Abdullah Scholarship Program (Saudi Arabia), and UMKC Women Council's Graduate Assistance Fund (GAF).

Below are the SQL statements for workload W
                     1. Note that the actual values for attributes are not shown.


                     O1: SELECT COUNT(*) FROM Patient_Table;
                  


                     O2: SELECT COUNT(DISTINCT p_id) FROM Vaccination_Table
                  

  
                     
                     WHERE cpt_code = xxxxx;
                  


                     O3: SELECT p_id FROM Patient_Table
                  

  
                     
                     WHERE fname =’xxxxx’ AND dob=’yyyy-mm-dd’;
                  


                     O4: INSERT INTO Vaccination_table (p_id, vdate, cpt_code)
                  


                     VALUES (xxxx, ‘yyyy-mm-dd’, codex),
                  

  
                     
                     (xxxx, ‘yyyy-mm-dd’, codey),
                  

  
                     
                     (xxxx, ‘yyyy-mm-dd’, codez),
                  

  
                     
                     (xxxx, ‘yyyy-mm-dd’, codez),
                  

  
                     
                     (xxxx, ‘yyyy-mm-dd’, codew);
                  


                     O5: SELECT cpt_code, vdate FROM Vaccination_Table
                  

  
                     
                     WHERE p_id = xxxxx;
                  


                     O6: SELECT cpt_code FROM Vaccination_Table as VT
                  

  
                     
                     INNER JOIN Patient_Table AS PT ON VT.p_id = PT.p_id
                  

  
                     
                     WHERE PT.fname = ‘xxxxxx’ AND PT.dob = ‘yyyy-mm-dd’;
                  


                     O7: SELECT VT.p_id FROM Vaccination_Table as VT
                  

  
                     
                     INNER JOIN Patient_Table AS PT
                  

  
                     
                     ON VT.p_id = PT.p_id AND PT.sex = ‘f’
                  

  
                     
                     WHERE VT.cpt_code = xxxxx
                  

  
                     
                     GROUP BY VT.p_id HAVING COUNT(*) > 1;
                  

@&#REFERENCES@&#

