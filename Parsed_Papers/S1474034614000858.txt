@&#MAIN-TITLE@&#Collaborative planning of inner-city-railway-tracks: A generic description of the geographic context and its dynamic integration in a collaborative multi-scale geometry modelling environment

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We describe the geographical context for planning inner-city-railway-tracks.


                        
                        
                           
                           We show how collaborative work with geographical information can be improved.


                        
                        
                           
                           We integrate the geographical context into a collaborative planning process.


                        
                        
                           
                           Combined and collaborative use of geo-information in planning tools is demonstrated.


                        
                        
                           
                           Results are validated using an actual real world scenario.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Collaboration

Synchronous work

Procedural model

Geo web services

Geographic context

GIS

@&#ABSTRACT@&#


               
               
                  Planning sub terrestrial inner-city-railway-tracks is an interdisciplinary and highly complex task, which involves plenty of different stakeholders. Currently, the different planners work more or less separated in an asynchronous manner. To facilitate a collaborative planning process between these different stakeholders we developed a collaboration platform. Clearly, the integration of geographical information and geoprocessing results into the planning process and the different modelling tools will improve this process in a significant way. In this paper, we show how to describe the needed geographical information by so-called Geospatial Web Service Context Documents in a suitable way and how to integrate these pieces of information into the different planning tools via the collaboration platform in a unified, dynamic, and generic way.
               
            

@&#INTRODUCTION@&#

Naturally, the highly complex process of planning sub terrestrial inner-city-railway-tracks involves plenty of different stakeholders from various domains such as civil engineers, as well as subsoil, environment, and fire safety experts. These different adepts often use their own specific geometric modelling and planning tools thereby creating their own specific data in its own proprietary data structure. Thus, the different stakeholders work more or less separated in a not very contiguous manner. To combine, evaluate, and revise their specific work, the created data is exchanged between the different adepts in a file-based fashion or even on paper plans. Normally, the results of this evaluation and revision process are discussed in personal meetings or teleconferences resulting in an iterative process. This kind of collaboration obviously extends the duration of the planning process in a significant and undesired way.

Clearly, in the process of planning inner-city-carriageways the geographic context of the objects to be built is of major importance. For instance, to plan the specific track course one needs information concerning the soil conditions, the sub terrestrial buildings, the sewage water system, etc. The geographic context is especially of major importance at locations where the sub terrestrial track is connected to the terrain surface, for example at emergency-rescue-shafts. Thanks to spatial data infrastructure initiatives such as INSPIRE
                        1
                        Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 establishing an Infrastructure for Spatial Information in the European Community (INSPIRE).
                     
                     
                        1
                      these pieces of information are or at least will in future be provided by certain web services. Even though information on the geographic context of the planned track is available in principle, at the moment, the sheer integration of this information into the common modelling and planning tools is not facilitated in a convenient way. Additionally, there are at least three further problems concerning these web services. Specifically different services are hosted by different dispersed servers; different services provide the needed data, but they provide this data in diverging scales; and standardized web service interfaces have limitations compared to the requirements of a synchronous collaborative planning scenario [7].

In order to overcome the problems described above we developed a collaboration platform. This platform facilitates a synchronous modelling and planning process between modelling engineers and Geographic Information System (GIS) experts. The basis for the synchronous modelling process is a multi-scale procedural geometry model of the planned track, which describes the geometry by its several construction steps in contrary to an explicit representation. This procedural model supports the concept of different Levels of Detail (LoDs), which enable different planners to work in the abstraction level of their specific task, thereby using the geometry modelling tools they are accustomed to. Additionally, we designed a component structure, which allows the integration of different data sources into the different planning tools via the collaboration platform. In order to incorporate the geographic context into the planning process and the planning tools respectively, we investigated the description of collections of geospatial web services in so-called Geospatial Web Service Context Documents and used the developed component structure to do the integration.

In this paper, we describe the principle idea of Geospatial Web Service Context Documents. Then we will illustrate the integration of web services using these documents and a newly developed component structure. In doing so, we will show that this integration process is facilitated in a convenient way, (i.e., a unified, dynamic, and generic one). Finally, we will describe how this integration strategy of GIS-data can significantly improve the collaboration between different experts in the process of planning a subway tunnel by providing a use case, in which an emergency-rescue-shaft is located.

@&#RELATED WORK@&#

Computer supportive cooperative work (CSCW) has been in the focus of scientific research for many decades. A broad overview about the needs and challenges in the development of CSCW and Groupware systems supporting collaboration of teams are given by Stefik et al. [26] and Ellis and Gibbs [12]. Many researchers focused on concurrency issues regarding CSCW, for example Munson and Dewan [21], Sun et al. [28], Sun [29], and Vogel et al. [30]. Strategies for conflict detection and management in collaborative systems were presented by Edwards [11]. Berlage and Genau [1] presented a framework for shared applications providing flexible merge- as well as undo/redo-strategies. Likewise, collaborative work in the field of geometric modelling has been researched for a long time. One key aspect of those research efforts concerned the exchange of geometry models between different CAD software tools. Standard exchange data formats such as IGES and STEP were devised in the beginning of the 1980th and 1990th. These formats were highly accepted by different vendors of CAD tools and resulted in the integration of import and export mechanisms using these formats into most of the common tools. Since they only support the description of the mere geometry data and the resulting BREP model respectively, the design intent is lost during the actual model exchange. This fact obviously hinders a collaborative modelling process so that researches started investigating possibilities to tackle this problem approximately one decade ago.

Choi et al. [9] suggested a macro-parametric approach to exchange CAD models between different CAD software tools. A sequence of history based modelling commands is recorded and can be imported by a different modelling tool. This approach may be a first basis for an asynchronous collaborative modelling process using different modelling system, i.e. one planner creates a model and exports it, and another planner imports this model and continues to work on this model. A synchronous modelling process using these macros is not supported or investigated at all.

Bidarra et al. [2] presented the Alibre Design 2D/3D CAD software. In a client–server architecture called webSPIFF a central server contains the geometry kernel and hosts the geometric model, while engineers using thin clients – the so-called webSPIFF clients – can work synchronously on this model. Though this approach facilitates synchronous work for engineers using the webSPIFF thin-clients, it does not support the usage of popular CAD software tools, such as Siemens NX or Autodesk Inventor.

Borrmann [3] developed the CoCoS platform, which allows a very simple synchronous geometric collaboration, but provides considerable possibilities to integrate simulation data into this modelling process.

Li et al. [20] developed a possibility for synchronous modelling using neutral modelling commands: Vendor specific modelling commands are translated into neutral commands, sent to a central collaboration server that forwards these neutral commands to the other clients. These clients then translate the neutral commands back into their own vendor specific commands. This approach is similar to ours but does not support the concept of different Levels of Detail, a major improvement in our concept. Also it does not support a collaborative workflow, in which more than one planner is allowed to do modification steps at the same time. Additionally, since the context of our approach is the planning process of inner-city carriage ways, we extend the normally used modelling functions by tunnel specific modelling commands.

Borrmann et al. [5] created a multi-scale geometry model, thereby providing possibilities to work in different Levels of Detail, while the system automatically preserves the consistency of the model. This multi-scale procedural model is the basis for our synchronous collaborative modelling approach.

With the upcoming of OGC (Open Geospatial Consortium) web service standards, fine-grained access to geographic information has been introduced to GIS. Instead of retrieving files with possible large geographic extent and potentially containing many undesired features (in geoinformatics the term feature denotes an abstraction of real-world phenomena; see ISO 19109:2006) users can access exactly the desired features in a given geographic region by specifying spatial, logical, or temporal filters. In addition to accessing geospatial data, users may also access data processing functions through OGC web service interfaces. In this paper, we will address the following OGC web services: the Web Feature Service
                           2
                           OpenGIS Web Feature Service 2.0 Interface Standard, Version 2.0.0 OGC Document 09-025r1 and ISO/DIS 19142. http://www.opengeospatial.org/standards/wfs.
                        
                        
                           2
                         (WFS), Web Map Service
                           3
                           OpenGIS Web Map Server Implementation Specification, Version 1.3.0 OGC Document 06-042. http://www.opengeospatial.org/standards/wms.
                        
                        
                           3
                         (WMS), and Web Processing Service
                           4
                           OpenGIS Web Processing Service, Version 1.0.0 OGC Document 05-007r7. http://www.opengeospatial.org/standards/wps.
                        
                        
                           4
                         (WPS).

WFS (ISO 19142:2010) enables access to GML (Geography Markup Language) data (ISO 19136:2007). If WFS allows the optional write-access to its features, it is called WFS-T (Transactional WFS). A WFS implementation may support the filter encoding language (ISO 19143:2010) which allows for expressing fine-grained query expressions, (e.g., for retrieving all the buildings in a certain geographic extent which are owned by a specific owner). The main geometry object types of GML are boundary representations (B-rep): points, lineStrings, surfaces, and solids. In GML, these geometry objects are used to describe the spatial properties of a feature, (e.g., the footprint of a building). In addition to the spatial properties, a GML feature may have an arbitrary number of non-spatial properties, (e.g., a building may have properties describing its usage and its owner). GML just defines a common modelling framework for modelling real-world phenomena. Actual real-world phenomena have to be modelled by so-called “GML application schemas”. CityGML, an international standard for semantic 3D city and topography models, is an example of a GML application schema.

WMS (ISO 19128:2005) are designed not to access geographic data themselves but a rendered picture in formats such as PNG or JPEG. The standard allows for an optional operation to access further information concerning particular features shown on a map. WMS do not allow write-access on the underlying data.

WPS implementations provide access to arbitrarily complex geospatial processes and can in principle work on any type of data. Since geo processing libraries usually do not support parametric geometry models as used in common CAD tools an integration of these different geometry models remains a challenge.

Collaborative use of geospatial data has been focus of scientific work in the past. Neis et al. [22] presented an approach to collaborative mapping for emergency management while Klimke and Döllner [19] introduced an approach to collaborative work within 3D city models. Both approaches singularly rely on the OGC standard WFS-T (transactional Web Feature Service) for collaborative work on a single resource of vector data (in contrast to raster data). For collaborative work with geospatial data from different web services the Web Map Context
                           5
                           Web Map Context Documents, Version 1.1.0 OGC Document 05-005 http://www.opengeospatial.org/standards/wmc.
                        
                        
                           5
                         (WMC) standard has been introduced as early as 2003. Despite being limited to rendered maps (in particular WMS) it is applied in approaches such as presented by Smolders et al. [24] to integrate several results of a single analysis into one Web Map Context Document.

Since 2004 the OGC has been working on a standard for a Context Document which references all OGC web service standards (besides WMS and WFS also OGC Web Processing Services (WPS)). The standard has been published as OGC Web Services Context Document (OWS Context) in 2014. In the following Section we show our approach to a Geospatial Context Document which is based on the work of the OGC, namely on OGC OWS Context Conceptual Model,
                           6
                           OGC OWS Context Conceptual Model, Version 1.0.0 Draft 13 OGC Document 12-080.
                        
                        
                           6
                         but extends this work substantially by supporting several additional features with decisive importance to collaborative multi-scale and 3D planning.

In recent years, integration of CAD and GIS systems has been the focus of scientific research. Peachavanish et al. [23] stated that “engineers in infrastructure management must gain knowledge and skills in both CAD and GIS to perform infrastructure management tasks”. They presented an ontological method for achieving interoperability of CAD and GIS data and operations in order to simplify tasks relying both on CAD and GIS. Most recent approaches concentrate on data integration of CAD and GIS models while neglecting operations and functionalities of these fields. El-Mekawy et al. [13] proposed UBM, an intermediate model between IFC and CityGML in order to facilitate a bidirectional data conversion between these two. To prevent loss of data UBM unites all concepts of IFC and CityGML and merges overlapping concepts. Hijazi et al. [16] focused on converting water utility networks from IFC to CityGML. Irizarry et al. [17] presented a case study demonstrating visual monitoring of construction supply chain management. Their approach for integrating BIM and GIS is to share data using a central database but lacks semantic interoperability. Furthermore, users are required to have knowledge about both systems. De Laat and van Berlo [10] present an extension to CityGML in order to convert semantic IFC data to CityGML. In the context of collaborative planning, Borrmann et al. [6] describe an approach for incorporating multi-scale methods into Building Information Modelling (BIM) as well as a semantic mapping between the multi-scale procedural model they define and CityGML.

These approaches have one aspect in common: they rely solely on an integration of CAD and GIS by conversion of data. Thereby they are not able to facilitate an efficient way of integrating CAD and GIS operations and functionalities (e.g., coupling a GIS-based analysis to a CAD-tool for fast feedback on a current state of plans).

Due to their nature as web services, Web Map Services (WMS) and Web Feature Services (WFS) lend themselves to tools for collaborative work with geographic information. Each instance of these web services can potentially provide large amounts of data, many different layers (e.g., an official WMS in our test-region offers following layers: areal image, development plan, spatial extent of development plans, and a hybrid representation of aerial image and development plan), or features (our WFS instance offers buildings, their walls, roofs, and ground surfaces as well as a digital terrain model and features representing the sewage system) for large geographical extents. These web services offer an operation which delivers metadata about the underlying layers or features, resp., and there exists an Open Geospatial Consortium (OGC) specification for Catalogue Services which are helpful for discovery of web services. The metadata always describes these layers/feature classes as a whole. With the aim of accessing only relevant subsets filter expressions have to be encoded in the request to the web service. In order to make collaborative use of information about which data in which combination and in which Level of Detail is relevant, these requests have to be communicated by the stakeholders. Since the communication of multiple separate requests to single web services can quickly become unmanageable, additional mechanisms have to be used.

Our solution to communicate the geographic context of a planned object is an XML-encoded Geospatial Web Service Context Document which at its core bundles sets of requests to web services (classes Resource and Offering in Fig. 1
                     ). One such Geospatial Web Service Context Document contains all relevant information for analysis of one specific geospatial problem including additional information as we describe below. For example, this geographic context could be the relevant geographic information (and in future geospatial processes) for a planned railway track.

We chose not to use the approach which has been introduced by the OGC Web Map Context Document: describing the parameters of the request (e.g., spatial extent, layers, and styles) in an XML document. Using this approach implies that any client has to be equipped with a capability to rebuild the original request using these parameters. It has the disadvantage that the context document definition has to be extended for each additional web service type and with it the clients’ capabilities to handle this document.

Instead, we allow for lean clients by encoding the complete web service requests as xml-encoded HTTP-POST
                        7
                        Since the size of HTTP-GET requests is limited depending on client, server and proxies (usually a length of 255 is considered as a safe size), we chose HTTP-POST whose size limitation considerably more generous.
                     
                     
                        7
                      requests. If a client needs to access the individual parameters of the requests it is still able to parse the information from the request. By including complete XML-encoded POST-requests in our Context Document we allow for client applications which only need to be able sending POST requests and handle the results. Notably if a client application can handle GML-geometry as a result of a WFS-request it should also be able to handle GML-geometry as a result of a WPS-request without further knowledge of the architecture of the underlying Web Processing Service. Nevertheless a GIS-client with full Geo web service client functionality is needed for the initial generation of the Context Document.

We base our Context Document on the draft of the OGC Web Services Context Document which we find lacking in several aspects we describe in the following.

Experts from different fields have different requirements on a specific geospatial problem – i.e. they require a specific geospatial context or a specific view on the geospatial context respectively. A subsoil expert, e.g., needs different geospatial data for the evaluation of a location of a planned escape shaft than a civil engineer. In order to cope with these different needs we include a mechanism to define user rules in our Geospatial Web Service Context Document. That way, we can encode any relevant information for one specific problem in one document while allowing for specialized views on this problem. In the most simplistic case the authors of the document can make specific layers or features visible only for specific user groups (see class UserRules in Fig. 1).

For a more fine-grained addressing of user specific demands we intend to add the concept of Level of Detail (see class LevelOfDetail in Fig. 1). The concept of different Level of Details (LoD) has become popular in the geospatial domain by the introduction of the CityGML
                           8
                           OGC City Geography Markup Language (CityGML) Encoding Standard, Version 2.0.0 OGC Document 12-019. http://www.opengeospatial.org/standards/citygml.
                        
                        
                           8
                         standard and is well suited in the context of planning inner-city-railway-tracks: depending on the planning task every nut, bolt, and screw of a pipe installation has to be known or just an approximate geometry of the pipes.

As the concept of different Levels of Detail (LoD) is fundamental to the overall collaboration platform and therefore must be implemented even in lean clients, it is explicitly modelled in the context document schema. Normally, different LoDs result in different requests to Geo Web Services. Therefore, the class “LevelOfDetail” is associated with the class “Offering” in the schema. Research is still needed in order to cope with different concepts for expressing LoD which will result in different specializations of the abstract class “LevelOfDetail”. In addition to the discrete LoD levels as defined for the procedural model of the track (see Section 6) and for CityGML our research in this area also investigates more fine-grained models such as defined by [25] which allow for expressing the LoD as a quantitative measure which could be modelled as feature-level metadata.

According to Brush [8] annotations provide a very natural way to collaborate on a document. Klimke and Döllner [18] demonstrated that the concept of annotations can not only be applied to textual documents but also to 3D scenes. It includes textual annotations on spatial data as well as geometry annotations represented as geo-referenced objects. We included their data model with minor adjustments in our Geospatial Web Service Context Document to enable users to enrich their communication (see classes SpatialReference, Annotation and their subclasses in Fig. 1).

A specific view of a scene can contain a lot of information since the visibility of structures or lines-of-sight are view dependent [18]. In a collaborative platform, communication of view parameters is a desirable feature (see class VirtualCamera in Fig. 1). By basing the parameters of our Virtual Camera object on GML-geometry we may cater for different spatial reference systems. The drawback of this approach is that the client has to be able to interpret these spatial reference systems (the same goes for any geometry). In our project, we solve this by using only projected compound (2D+height) spatial reference systems which are easy to transform into local reference systems used by CAD-software, but we are aware that this cannot be a universally valid approach.

Besides the integration of geographical information into the different modelling tools the incorporation of geoprocessing functionality promises to enhance the planning process. Under the term “geoprocessing functionality” we understand any functionality for analysing and processing geospatial data, from atomic functions such as the intersection operations (which can be used for detecting collisions of the planned track with existing infrastructure) to complex geoprocessing workflows and simulations (e.g., for assessing the environmental impact of a planned track). Integrating geoprocessing functionality allows for assessing the model of the planned object within its geographic context on the fly whenever the model is changed. Integrating geoprocessing functionality therefore supports the design process by allowing for rapid iterations of manipulating the planned object and assessing the planned object within its geographic context. This concept is often referred to as “geodesign” [27]. Using the interoperable WPS as a basis for geoprocessing functionality allows for a decentralized infrastructure using diverse vendor systems which has the advantage that different stakeholders may supply functionality and that high computation capacities for the analysis tools may be incorporated.

Our Geospatial Web Context Document allows for incorporating geoprocessing functionality into the collaboration platform both statically and dynamically. Using the static method means that the geoprocessing functionality is carried out once after a manual activation and the result is published, i.e. using a WMS or WFS server. Using the dynamic method, the geoprocessing workflow is prepared and published by a WPS which allows for evoking the geoprocessing workflow whenever the model of the planned object changes.

Both methods require to integrate the model of the planned object into a GIS environment which implies a semantic transformation of the data as addressed by Borrmann et al. [6] and a transformation of the geometry from an implicit representation given by the procedural model into an explicit boundary representation as it is required by geospatial tools.

In this Section, we showed how to describe sets of requests to Geo Web Services providing spatial data in a Geospatial Web Service Context Document enriched with additional information such as annotations, user rules, and Level of Details. In the following Section we present our concept of integrating this document into our collaboration platform using CAD modelling tools as clients.

Synchronous geometric modelling has been focused in scientific research at least during the last three decades. In our approach, to facilitate synchronous geometric modelling we first studied possibilities to describe geometry in an abstract way by storing the construction steps that make up the complete geometry model, in contrary to explicit geometry models, where the specific geometry data such as vertices, edges, etc. is stored. Based on the results, we developed a new multi-scale procedural geometry model [4]. A major improvement compared to previous research approaches is the integration of different Levels of Details (LoDs) into this procedural model. In a further step, this procedural model was integrated into a collaboration platform [14], which provides the possibility for different planners to work synchronously on this geometry model using the CAD tools they are accustomed to. To this end, when a user joins a collaborative session he loads a copy of the shared procedural model from the server. Client specific libraries integrated via the API of the CAD system translate the several construction steps, which are stored in neutral format, into commands specific to the CAD tool and execute these system specific commands in order to rebuild the comprehensive model.

This way, the different stakeholders can work in the abstraction level (LoD) of their specialized tasks, (e.g., the planning of the specific track, the modelling of the interior or exterior of the tunnel tube, or the detailed planning of an escape shaft). Thereby, the collaboration platform ensures the consistency of the model as a whole even if a client only is aware of the part of the model concerning the LoD of his interest (Fig. 2
                        ).

The principle idea for the integration of Geo Web Services into the modelling process is to develop an interface to be published by the central collaboration server. This interface should provide pieces of information about available web services using the above described Geospatial Web Service Context Document as a semantic model for this information. The users can browse the available documents, download them, and use the contained metadata information in order to connect to the specific GIS data server and then download the desired GIS data (see Fig. 3
                        ).

In order to do this integration in a convenient way we investigated possibilities for the incorporation into the different planning tools in a unified, dynamic, and generic way. Here, unified means the integration mechanism, i.e. loading the service and its data, where the scaling and visualization of the contained geometry data should be the same for all types of web services. A dynamic integration means it should be possible to load web services at the beginning of a collaborative session as well as during a session. Since one does not know all services and all types of services at a certain point in time, one also should be able to integrate new types of Geo Web Services during runtime, when they at least fulfil some criteria about their content.

As a basis for a convenient integration process of such kind we propose a component structure. This structure allows the integration of different components called Parts into the planning tools as well as their composition into groups called Assemblies, whereby Assemblies also can contain other Assemblies. Such a combination results in a tree-structure exemplarily shown in Fig. 4
                        .

From the point of software-architecture one easily can build such a structure by applying the so-called composite design pattern [15]. The specific application of this pattern suggests the encapsulation of all kind of relevant data sources into Parts, which implement a common Component interface (Fig. 5
                        ). This interface itself defines common functionality to load, rescale, and visualize a specific Part. Additionally, an Assembly class is defined, that also implements the Component interface: Assemblies aggregate different components, i.e. Parts or Assemblies. Since Assemblies and Parts must implement the Component interface, they all must provide specific functionality to load, visualize, and rescale their related geometry data. Here, it should be mentioned, that in the specific modelling tools, each Part is the basis for exactly one working document, as well as that for each different modelling tool there must be a specific implementation of this interface, in particular every modelling tool must provide functionality to visualize the procedural geometry and web service data.

To be precise, we encapsulate procedural geometry data into a Procedural Geometry Part, explicit geometry into an Explicit Geometry Part, and WMS, WFS, or WPS services into WMS, WFS, or WPS Parts. As mentioned above, different Parts can be grouped into one Assembly. Thus in particular, different WMS, WFS, and WPS Parts can be grouped into one single Assembly. Since a Geospatial Web Context Document describes one or more different web services, we encapsulate a Geospatial Web Service Context Document into one Assembly containing the related Parts or services, respectively. For a convenient transfer via the network this Web Service Assembly is serialized into an XML file and again automatically deserialized after reception. In the following, we will refer to such an Assembly as a Web Service Assembly.

We now want to illustrate the integration of a Web Service Assembly in detail, whereby for simplicity reasons it contains only one single WMS Service (Fig. 6
                        ).

At first, the client requests a Web Service Assembly from the collaboration platform. After the client received it (2), the client calls its load functionality. The Assembly then requests all the Parts described or contained in itself, in our case only one single WMS Part (3). After the WMS Part has been received from the server, the Assembly calls the WMS Parts load functionality (4), thereby providing the information contained in Geospatial Web Service Context Document regarding the server location and the contained geometry data formats.

The WMS Part utilises this information and loads the real data provided by the specific service (5). Finally, the Part informs the Assembly that the loading process is finished (6), whereupon the Assembly calls the visualize functionality of the Part. Finally the WMS Part visualizes itself in a new working document.

This integration approach has a least two major advantages:
                           
                              •
                              The collaboration server is a single point of user contact, since it provides all pieces of information concerning available web services as well as procedural geometry models in a single distinguished location. In particular, it unburdens the user of storing and administrating countless different resource locations, such as all URLs concerning the several different web services. Furthermore these resources are always up to date regarding changes made by other stakeholders. This way we achieve an integration of data and processes by a central configuration while relying on a distributed architecture.

The collaboration server is not responsible for loading and sending a large amount of geometry data. This avoids the loading of GIS data to become a bottleneck for the collaboration server that primarily has to orchestrate the collaborative workflow and not to execute just a simple streaming of geometry data.

As indicated above, different Parts can be grouped into one Assembly. This facilitates loading different Parts in one single step and creating one single Assembly document displaying these different Parts: for example, it is possible to visualize a map service containing surface data and a procedural model containing the principle track course in one and the same document (Fig. 7
                        ).

In principle, there are two main problems adding geometry contained in different Parts in one and the same Assembly document: firstly, different Parts normally encapsulate different data formats. Secondly, the contained data refers to different coordinate systems and different scales.

In our structure, the first problem is already solved since the Part itself certainly knows its specific data format and it is responsible for visualising itself.

To overcome the second problem, the main Assembly defines a global coordinate and global unit system. To adapt the different contained Components to these systems, the main Assembly uses the rescale functionality provided by them. Therefore, it simply hands over its global coordinate and unit system to the contained Assemblies and Parts when calling this functionality. When the client finally calls the visualize functionality, the Parts can adapt themselves to the common Assembly document using these global systems.

Above we have explained that the proposed integration process of different data sources is unified using the common component structure. Furthermore, we have seen that the loading process of a specific Part is separated from the modelling process. Thus, it is possible to load additional Parts during runtime using the provided Component functionality, allowing for a not only unified, but also dynamic integration process. Finally, since the loading, rescaling, and visualisation process is encapsulated via the Component interface, it is possible to integrate services and data sources to the modelling process that are a priori unknown to the client. The one and only thing that must be guaranteed by the collaboration platform is, that a requested Part implements the functionality defined by the Component interface (see Fig. 5) in a meaningful way. So the loading process is not only unified and dynamic, but also generic.

This Section describes an application of the Geospatial Web Service Context Document and its usage via the collaboration platform. In the following Subsections we describe the scenario, the generation of Geospatial Web Service Context Documents, and their specific usage in a synchronous planning session. This application proves the feasibility of the concepts described in the previous two sections.

As an actual real world scenario, we refer to the planning process of the so-called “Zweite S-Bahn Stammstrecke München” in Munich, Germany. Due to the increase of the number of passengers using the S-Bahn (subway) from 250,000 in the early seventies to approximately 800,000 currently, the planning of the construction of a second track connecting the two most important inner-city stations Hauptbahnhof and Ostbahnhof started around ten years ago. The start of the actual construction is planned for 2014 and should be finished in 2019. The main responsible planning company “Obermeyer Planen+Beraten” accompanied our research team from the very beginning of the research project and approved the feasibility of our approach. In particular, they gave us insight into the planning process of the mandatory escape shafts, to which the results of our research can be applied in reality and will be discussed in this section.

The experts in a railway track planning process not only have to consider constraints resulting from train speed, forcing points (e.g., stations), etc. but also a variety of legal regulations. An example of these regulations is the decision of the European Communities “concerning the technical specification of interoperability relating to ‘safety in railway tunnels’ in the trans-European conventional and high-speed rail system”.
                           9
                           COMMISSION DECISION of 20 December 2007 concerning the technical specification of interoperability relating to ‘safety in railway tunnels’ in the trans-European conventional and high-speed rail system. Official Journal of the European Union, L 64/1, 7.3.2008: http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2008:064:0001:0071:EN:PDF.
                        
                        
                           9
                         Amongst others, this regulation determines the distances to safe areas, the vertical distance to the ground surface, and criteria for the accessibility to rescue teams. In order to satisfy these rules, escape shafts have to be planned accordingly. To find optimal locations for these escape shafts some additional criteria originating from practical considerations have to be taken into account, (e.g., ownership of land, availability of free space at the ground surface as wells as collision with existing infrastructure below ground).

In order to evaluate all these criteria for possible locations of emergency exits within their geographic context, GIS functionality is essential. As a general procedure, a GIS expert generates a geoprocessing workflow using his favourite modelling tool (in the prototypical implementation, for this purpose we used FME
                           10
                           
                              http://www.safe.com.
                        
                        
                           10
                         and ArcGIS
                           11
                           
                              https://www.arcgis.com.
                        
                        
                           11
                        ). This workflow accepts the planned emergency exits as parameters and leverages geospatial data provided by different Geo Web Services (e.g., supplied by the municipality). In a first step, an explicit representation – based on a low Level of Detail representation – of the vertical emergency exit is computed due to the necessity that GIS tools usually do not support procedural geometry used in CAD tools (cf. Borrmann et al. [6]). Based on this explicit representation an evaluation (cf. Fig. 8
                        ) is computed resulting in statistics concerning criteria as well as excerpts of the given geodata for visual analyses.

In order to make the analysis functionality itself available to his fellow planners and not solely the resulting data, the GIS expert encapsulates the generated geoprocessing workflow into a Web Processing Service (WPS), publishes it by means of a Geospatial Web Context Document, and then uploads this document to the collaboration platform. Using the dynamic methods described in Section 3.4 the execution of the workflow contained in the Geospatial Web Context Document can be triggered either by a track planner or automatically by the collaboration platform in the case of changes concerning the location of the emergency exits.

The track planner does not have to rely on additional tools, but can use the modelling tool he is accustomed to in order to view the results of the assessment workflow. Therefore, the WPS is configured to automatically generate a second Geospatial Web Context Document containing the data resulting from the assessment. Although the geoprocessing workflow is quite complex, in this example the resulting Geospatial Web Context Document merely contains the following instances of classes from our model (cf. UML model in Fig. 5): two Web Map Service Parts (WMS), which reference a 2D aerial photo and a development plan and three Web Feature Service Parts (WFS) referencing 3D buildings, 3D sewers, and 2D streets as an additional decision support. The geoprocessing workflow is designed to encode only the relevant excerpt from the before mentioned data sources, providing the relevant spatial and thematic details. Furthermore, the Geospatial Web Context Document contains analysis results, for example statistical data concerning affected geospatial features and a fitness indicator (encoded as annotations). Fig. 9
                         shows an analysis result visualized in a parametric CAD system.

The second Geospatial Web Context Document containing the assessment results is uploaded to the collaboration platform as well and is then available to all stakeholders who join a collaborative session via the collaboration platform.

For the actual usage of the resulting Geospatial Web Service Context Document and the described WPS a (virtual) team meeting can be considered, in which several modelling engineers and specialists from different fields discuss the further development of a subway tunnel project. These experts may work on different workstations with different modelling tools – possibly at different locations – but are connected via the collaboration platform (see Section 4.1). One planner might suggest a modification of the track course, which has an impact on the position of an emergency exit. This modification is immediately visible to all the other participants. In order to evaluate this modification within its geographic context the aforementioned WPS is triggered which is as well as the geometry model provided by the collaboration platform. After recalculating the assessment, all results are instantaneously available to all stakeholders. The experts now discuss the results and if necessary do the next modification steps, iterating until a satisfying result is achieved, thus benefiting from an approach to synchronous planning including both the design process and the assessment process which was not possible yet.

@&#CONCLUSION@&#

In this paper, we showed how collaborative work with geographical information can be improved using our concept of Geospatial Web Service Context Documents. In comparison to other approaches we do not only bundle requests to several web services but additionally include information which and how data shall be presented to specific user groups, and we allow for annotations and encoding of 3D camera views to enhance the collaborative workflow.

Furthermore, we demonstrated how this information can be integrated into different planning tools via the collaboration platform in a unified, dynamic, and generic way. The basis for this integration is a component structure which facilitates the incorporation of different data sources, in our case web services as well as procedural geometry models, in a convenient way.

In Fig. 7 as well as in Fig. 9 one sees the results of our approach: the successful combination of a WMS Part containing an aerial image, WFS Parts representing 3D building models and a model of the sewage system and a procedural model for a the Munich central train station (Fig. 7). Fig. 9 represents the results of a WPS-analysis and the geographic context of a planned escape shaft. The integration of geoprocessing workflows in the Geospatial Web Service Context Document and especially the dynamic method still has unresolved problems which we will address in our future research:
                        
                           •
                           If a geoprocessing workflow is triggered by a small change in the model, it is possible that a complex and expensive process is started very often, even if the change does not affect the outcome of the process. This inefficient behaviour remains an open problem.

At the moment each integrated Web Process is assumed as a black box for users that are not involved in the design of the process. In order to document the geoprocessing workflow and even make it modifiable at runtime we intend to develop a concept of a programmable WPS. This would allow integrating a program into a Geospatial Web Service Context Document executed by a WPS.

In future work, we will also improve our recent concepts and try to integrate new features in our collaboration platform, (e.g., simulation and simulation data). An example could be a pedestrian flow simulation in a train station. Another interesting simulation scenario could be a flooding scenario simulation which might help to avoid a catastrophe such as the flooding in the New York subway in fall 2012.

@&#ACKNOWLEDGEMENTS@&#

We gratefully acknowledge the support of the German Research Foundation (DFG) for funding the research group 3DTracks under Grant FOR 1546. We are also very thankful for the support of the engineering consultancy company Obermeyer Planen+Beraten which provided valuable insight into current planning practices and data for a real-world case study. We also thank Deutsche Bahn and Landeshauptstadt München for their support.

@&#REFERENCES@&#

