@&#MAIN-TITLE@&#Preferred feed direction field: A new tool path generation method for efficient sculptured surface machining

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Tool path generation according to a preferred feed direction field of the surface.


                        
                        
                           
                           Generated tool paths having comparatively short overall tool path length.


                        
                        
                           
                           Surface segmentation by identifying degenerate points and forming their separatrices.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Sculptured surface

Ball-end milling

Machining efficiency

Preferred feed direction

Tensor field

Iso-scallop tool paths

@&#ABSTRACT@&#


               
               
                  This paper presents a new method to generate efficient ball-end milling tool paths for three-axis sculptured surface machining. The fundamental principle of the presented method is to generate the tool paths according to a preferred feed direction (PFD) field derived from the surface to be machined. The PFD at any point on the surface is the feed direction that maximizes the machining strip width. Theoretically, tool paths that always follow the direction of maximum machining strip width at every cutter contact point on the surface would result in shorter overall tool path length. Unfortunately, overlaps of adjacent machining strips commonly exist for tool paths that follow the preferred directions exactly. Such redundant machining can be reduced by iso-scallop tool paths. Nonetheless, iso-scallop tool paths do not in general follow the preferred feed directions. To improve machining efficiency via generating short overall tool path length, the presented method analyzes the PFD field of the surface and segments the surface into distinct regions by identifying the degenerate points and forming their separatrices. The resulting segmented regions are characterized by similar PFD’s and iso-scallop tool paths are then generated for each region to mitigate redundant machining. The developed method has been validated with numerous case studies. The results have shown that the generated tool paths consistently have shorter overall length than those generated by the existing methods.
               
            

@&#INTRODUCTION@&#

Sculptured surfaces have seen applications in many fields, especially in the aerospace, automotive, and biomedical industries. These surfaces are characterized by their smooth shape and may include features such as valleys, mounts, or blends to fulfill requirements such as an optimized airflow or a desirable ergonomic shape. In order to manufacture components with sculptured surfaces, three- or five-axis computer numerical control (CNC) machine tools with a variety of end mills are used to machine either the desired part itself or its corresponding die/mold. Although five-axis CNC machines provide higher versatility and efficiency compared to their three-axis counterparts, the latter are still commonly used due to their lower costs and widespread availability.

In three-axis machining of sculptured surfaces using ball-end mills, scallops are formed between adjacent tool paths. The resulting scallop height depends on the interval between the tool paths, commonly referred to as the side-step. For a given ball-end mill, a small scallop height constraint requires a small side-step between adjacent tool paths and consequently, a large number of tool paths are required to machine the entire surface, which adds up to a long overall machining tool path length. Redundant machining occurs when the chosen side-step results in a scallop height that is smaller than the specified scallop height constraint.

In practice, the specified scallop height constraint for a finished surface is quite small in order to lessen the burden of the subsequent polishing work. As a constant feed rate is commonly used for a ball-end mill during the finishing machining of a sculptured surface, a longer overall tool path length correspond to a longer machining time. Methods to reduce the overall tool path length have thus been an active research topic in the field of Computer-Aided Manufacturing (CAM) in the past two decades. These existing methods aimed to generate the milling tool paths needed to obtain the desired sculptured surface shape under the specified scallop height constraint. Conventionally, these methods would require the user to input some a priori tool path generation information from which the tool paths are generated on the surface. More recently, researchers start to formulate machining strategies which attempt to determine the user-input information automatically from the given surface shape. In this paper, the related developments are referred to as the surface topology based methods.

Conventional tool path generation methods can be roughly categorized into iso-parametric, iso-planar and iso-scallop methods. The iso-parametric method is the earliest method of the three and generates the required cutter contact (CC) tool paths on the design surface 
                           
                              S
                           
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         by fixing the value of one of the parametric variables, say 
                           u
                        , while varying the value of 
                           v
                         within its domain  [1]. The 
                           
                              Δ
                           
                           u
                         between adjacent iso-parametric tool paths is chosen such that the resulting scallop height will not violate the specified limit. This method is mathematically convenient and ensures that the entire surface is covered by the tool paths. However, depending on the surface shape, the generated tool paths may be quite dense in some regions. To improve the iso-parametric method, Elber and Cohen  [2] proposed to eliminate some iso-parametric tool path segments when the generated tool paths become too dense. The latest iso-parametric method attempted to optimize the generated tool paths via an adaptive grid  [3]. Despite all these efforts, redundant machining still exists in the generated tool paths.

The iso-planar method was initially proposed as an improvement over the iso-parametric method. This method employs a series of parallel planes whose intersections with the design surface correspond to the CC tool paths  [4]. The separation between adjacent intersection planes provides better control on the resulting scallop height than the iso-parametric method. The main advantage of the iso-planar method is that it avoids regions of dense tool paths observed in the iso-parametric tool paths. However, redundant machining still exists for the iso-planar tool paths. Improvements to the conventional iso-planar method have been proposed. For example, Ding et al.  [5] implemented an adaptive iso-planar method which segmented the surface into regions according to the surface slope. Consequently, the method required an input from the user regarding the limits on the slope used for the surface segmentation.

The first method to generate iso-scallop tool paths on a given surface appeared to be proposed by Suresh and Yang  [6]. The iso-scallop method sequentially generates an adjacent tool path based on the current tool path. It aims at ensuring that the resulting scallop height between adjacent tool paths is the same as the specified limit. Redundant machining thus does not exist, resulting in a smaller overall tool path length than that for the iso-parametric or iso-planar tool paths. Later, quite a few methods have been proposed, which improve on the calculation efficiency  [7] and accuracy  [8]. The methods proposed by Feng and Li  [9] and Tournier and Duc  [10] improved the calculation accuracy further by carrying out all calculations three-dimensionally. And a method that attempted to improve the speed of three-dimensional calculations has also been proposed  [11]. Since the iso-scallop method is fundamentally a sequential tool path generation method, it requires setting an initial tool path from which the subsequent tool paths are generated. This gives room for further improvement and inspires a more recent research direction that attempts to analyze the topology of the given surface with the goal of minimizing the overall tool path length.

Recent developments by Quinsat and Sabourin  [12] and Vijayaraghavan et al.  [13] sought to find an optimal orientation for the parallel intersection planes in order to generate iso-planar tool paths with minimal overall tool path length for a given sculptured surface. The optimal orientation was determined by analyzing local parameters of the surface which influenced the material removal rate or by a metric of the mean scallop height resulting from a particular plane orientation. These methods, however, employ a single iso-planar direction across the entire surface, which cannot guarantee to minimize the overall tool path length as redundant machining still exists. For iso-scallop tool paths, attempts have also been made to find the optimal initial tool path by analyzing the complete surface geometry. The method proposed by Giri et al.  [14] used loci of maximum local convex curvatures to determine the initial tool path from which the subsequent iso-scallop tool paths were generated. User input was required in their work to select and compare the curvature loci in order to finalize the initial tool path.

A notable work by Kim and Sarma  [15] treated the optimal machining directions at sampled points on the given surface as a vector field. The vector field was analyzed and then segmented to generate the tool paths. The employed vector field was unidirectional and this limited its application in tool path generation. This is because for the problem of generating efficient tool paths, there are in fact two optimal directions at any point on the surface, which are opposite to each other. A vector field cannot adequately represent such a bi-directional field, as will be discussed in the subsequent sections of this paper.

This paper proposes a new strategy to generate efficient tool paths for three-axis sculptured surface machining. It aims at minimizing the overall tool path length for a given ball-end mill and scallop-height limit without any user input for the initial tool path. The strategy starts with creating a discrete bi-directional field, or tensor field, which maps the preferred machining directions across the surface. The field is then analyzed and segmented into regions with similar preferred machining directions. For each segmented region, a principal tool path is determined and used as the initial tool path from which a series of iso-scallop tool paths are generated. This strategy will result in tool paths with shorter overall length compared with those generated by the existing tool path generation methods.

The employed region-based tool path generation strategy has in fact already been applied in the multi-axis machining of complex-shaped parts such as turbine and impeller blades. To reduce cutting tool orientation changes, Chen et al.  [16] introduced a method to subdivide a complex sculptured surface into a number of easy-to-machine surface patches. Similarly, Dai et al.  [17] proposed to divide a complex surface into different regions to facilitate flank milling of the approximated piecewise ruled surface. Very recently for three-axis machining, Zhu et al.  [18] subdivided a sculptured surface according to the surface features using the technique of square lattice subdivision. It was concluded that dividing the surface into various surface patches was indeed helpful to generate shorter overall tool path length, thereby increasing the machining efficiency.

It should be noted here that many of the existing region-based tool path generation studies, if not all, have evaluated the effectiveness their developed methods using the overall milling tool path length. This practice is generally acceptable because the milling feed rate is considered fixed for finish machining; thus, the overall machining time is simply proportional to the milling tool path length. Also, although extra tool travel is needed to connect the much increased number of tool path segments (due to the segmented surface regions), the resulting extra tool travel time is comparatively small because rapid tool positioning is to be used between milling tool path segments that are characterized by much smaller feed rates.

To determine the preferred machining or feed direction of a ball-end mill at a specific point on the design surface, a metric is required. The applicable metric is in fact a subject of active research  [19,20]. It has been commonly assumed in the research literature that tool paths following the direction of maximum material removal will have shorter overall tool path length. In this paper, the widely used metric of machining strip width is employed as the metric to determine the preferred feed direction at a point on the design surface.

The notion of machining strip width (
                           W
                        ) appeared to be first introduced by Lee and Ji  [21] to mathematically analyze five-axis machining and find the optimal cutter feed direction  [22,23]. 
                           W
                         can also be calculated for three-axis machining to determine the preferred feed direction of the cutter  [24,25] and there are different ways to approximate 
                           W
                           [26]. In this paper, 
                           W
                         is to be evaluated based on the concept of the scallop surface  [9]. The scallop surface 
                           
                              
                                 
                                    S
                                 
                              
                              
                                 
                                    scallop
                                 
                              
                           
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         is a normal offset surface from the design surface 
                           
                              S
                           
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         with the offset distance equal to the scallop height 
                           h
                        . The cutting tool motion produces a tool swept volume which intersects the volume enclosed in-between the design and scallop surface to create the machined volume. The tool swept volume’s contact with the design surface is a curve on the design surface which corresponds to the cutter contact (CC) tool path. Points on the CC tool path are referred to as the CC points (PCC). A CC tool path has its corresponding cutter location (CL) tool path, consisting of CL points (PCL), and every PCL has a corresponding PCC. In the case of three-axis machining, the CL point PCL for a given CC point PCC is calculated by multiplying the normal vector 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CC
                                 
                              
                           
                         of the design surface at PCC by the tool radius 
                           r
                        . At each CL point, three vectors can be determined: 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                        , which is an extension of and effectively the same as 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CC
                                 
                              
                           
                        ; 
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                        , the tangent vector of the CL path at PCL; and 
                           
                              
                                 
                                    t
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                        , calculated as the cross product 
                           
                              
                                 
                                    t
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                           =
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                           ×
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                        .

The tool swept volume is the volume enclosed by the surface constituted by the union of all the tool swept profiles along a tool path. The procedure to derive the tool swept profile at each CL point is briefly outlined here. The volume of a ball-end mill is made up of two volumes: a hemisphere for the ball end and a cylinder for the tool flank. The hemisphere is intersected by the plane created by 
                           
                              
                                 
                                    t
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                         and 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                         at the CL point. The generated intersection curve constitutes the bottom tool swept profile, which intersects the circle of the tool flank cylinder’s bottom at two points 
                           
                              
                                 
                                    S
                                 
                              
                              
                                 
                                    a
                                 
                              
                           
                         and 
                           
                              
                                 
                                    S
                                 
                              
                              
                                 
                                    b
                                 
                              
                           
                         (Fig. 1
                        ). The vector from 
                           
                              
                                 
                                    S
                                 
                              
                              
                                 
                                    a
                                 
                              
                           
                         to 
                           
                              
                                 
                                    S
                                 
                              
                              
                                 
                                    b
                                 
                              
                           
                         and the tool axis 
                           
                              
                                 
                                    z
                                 
                              
                              
                                 
                                    T
                                 
                              
                           
                         create a plane which intersects the tool flank cylinder and the resulting intersection curve is the flank tool swept profile. The union of the bottom tool swept profile and the flank tool swept profile results in the tool swept profile. The tool swept profile intersects the scallop surface at two points, 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 
                                    a
                                 
                              
                           
                         and 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 
                                    b
                                 
                              
                           
                        . The projected distance from Pa to Pb along 
                           
                              
                                 
                                    t
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                         gives 
                           W
                        : 
                           
                              (1)
                              
                                 W
                                 =
                                 
                                    |
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   a
                                                
                                             
                                          
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   b
                                                
                                             
                                          
                                       
                                       ¯
                                    
                                    ⋅
                                    
                                       
                                          
                                             t
                                          
                                       
                                       
                                          
                                             CL
                                          
                                       
                                    
                                    |
                                 
                                 .
                              
                           
                        
                     

It is important to note that, at a given CC point, the value of 
                           W
                         will be the same if the machining feed direction is reversed. For every CC point sampled on the design surface, there will be two opposing vectors, 
                           +
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                         and 
                           −
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                        , which have the same 
                           W
                         magnitude. By sampling a series of points on the design surface and determining the directions with the largest 
                           W
                        , a field of preferred directions across the entire design surface can be established. In three-axis machining, if the tool axis is along the 
                           z
                        -axis of a global Cartesian coordinate system, the pair of opposing vectors at each CC point is to be projected onto the 
                           
                              xy
                           
                         plane, as illustrated in Fig. 2
                        . The resulting field, referred to as the Preferred Feed Direction (PFD) field in this paper, shows two vectors at every sampled point. It is because of this reason that a PFD field cannot be analyzed as a vector field, which is applicable to only one vector at every point. In the present work, the PFD field will be analyzed as a tensor field, where every point is characterized by a tensor, which mathematically describes the two vectors as well as how the two vectors relate to each other.

Although not essential, it is useful in some situations to represent the feed direction of the ball-end mill as a scalar. For this purpose, the feed angle 
                           ϕ
                         is adopted. The definition and calculation procedure of the feed angle 
                           ϕ
                         are outlined here. First, the tangent plane at the CC point PCC is employed and named as the feed plane at PCC. It is evident that the feed vector of the ball-end mill 
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                         lies on the feed plane. Next, a reference feed vector 
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    ref
                                 
                              
                           
                         on the feed plane is taken as the cross product of the tool axis 
                           
                              
                                 
                                    z
                                 
                              
                              
                                 T
                              
                           
                         and 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CC
                                 
                              
                           
                        . In the event that 
                           
                              
                                 
                                    n
                                 
                              
                              
                                 
                                    CC
                                 
                              
                           
                         is equal or very close to 
                           
                              
                                 
                                    z
                                 
                              
                              
                                 
                                    T
                                 
                              
                           
                         when the ball-end mill is machining a flat or near flat region of the design surface, the reference feed vector 
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    ref
                                 
                              
                           
                         is taken as the 
                           x
                        -axis of the global Cartesian coordinate system of the design surface. The angle between 
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    CL
                                 
                              
                           
                         and 
                           
                              
                                 
                                    f
                                 
                              
                              
                                 
                                    ref
                                 
                              
                           
                         on the feed plane is then the feed angle 
                           ϕ
                        . Since a feed direction is composed of two opposing vectors, a feed angle can have a value of 
                           ϕ
                         or 
                           ϕ
                           +
                           π
                        . If 
                           ϕ
                           ≥
                           π
                        , then 
                           π
                         is subtracted from 
                           ϕ
                        .

Pathlines in tensor fields are analogous to streamlines in vector fields. They are created by following the directions specified in a tensor field. If pathlines following the maximum 
                           W
                         directions are directly used as the machining tool paths, overlapping of the resulting machining strip widths will generally occur, leading to redundant machining. Fig. 3
                         shows the machining strip width overlaps when pathlines are directly used as tool paths. A pathline may also be used as the initial tool path from which iso-scallop tool paths are generated to avoid redundant machining. However, as it can be seen in Fig. 4
                        , the resulting iso-scallop tool paths will progressively drift away from the pathlines. It is thus evident that a new tool path generation methodology needs to be developed to address the conflicting issues noted above. The new methodology developed in the present work is to segment the design surface into distinct regions according to the PFD field of the surface. The details will be presented in the next section.

@&#METHODOLOGY@&#

The fundamental principle of the proposed methodology in this work is to segment the given design surface into regions of similar pathlines by analyzing the PFD field of the surface and subsequently identifying the field’s degenerate points and forming their separatrices. For each segmented surface region, a principal tool path is then determined and used as the initial tool path for generating iso-scallop tool paths to cover the segmented region. This is repeated for all segmented regions on the surface and the associated procedure is depicted in Fig. 5
                     .

Tensor fields can be found in many subject areas such as fluids and stress–strain mechanics. Studies on tensor field topology were reported by Delmarcelle and Hesselink  [27,28] for visualizing and summarizing the information contained in a tensor field. In these studies, the notions of degenerate points and their associated separatrices were introduced as the basic constituents of a tensor field. In the case of a symmetric, second-order (two-dimensional) tensor field, each point is associated with a symmetric, second-order tensor (a 2×2 symmetric matrix). The direction information from the PFD field in the present work can be analyzed as two-dimensional because, as pointed out earlier, each point on the design surface 
                           
                              S
                           
                           
                              (
                              u
                              ,
                              v
                              )
                           
                        , with coordinates 
                           
                              [
                              x
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              ,
                              y
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              ,
                              z
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              ]
                           
                        , has unique 
                           x
                         and 
                           y
                         coordinates as well as unique PFD directions when projected onto the 
                           
                              xy
                           
                         plane. The 
                           z
                         component in a PDF vector is not required because the 
                           z
                         component for any given projected 
                           
                              xy
                           
                         directions will be unique. It is also important to note that the preferred feed directions do not have (scalar) magnitudes because only directions are of interest. In summary, each point on the design surface with coordinates 
                           
                              [
                              x
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              ,
                              y
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              ,
                              z
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              ]
                           
                         is to be characterized by a symmetric, second-order tensor in the form of: 
                           
                              (2)
                              
                                 
                                    T
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   11
                                                
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                          
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   12
                                                
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   12
                                                
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                          
                                          
                                             
                                                
                                                   T
                                                
                                                
                                                   22
                                                
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                          
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                        
                     

To formulate the tensor representation for each point on the design surface according to its preferred feed directions, the preferred feed directions are to be taken as one of the two eigenvectors for the 2×2 matrix representation in Eq. (2). The preferred feed directions are thus similar to the principal stresses in a stress-tensor field. Also, it is known that eigenvectors of real symmetric matrices are orthogonal. So in the present work, for a point 
                           
                              (
                              x
                              ,
                              y
                              )
                           
                         with vectors of preferred feed directions 
                           ±
                           
                              [
                              a
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                              ,
                              b
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                              ]
                           
                        , its second-order tensor matrix will have 
                           
                              (
                              a
                              ,
                              b
                              )
                           
                         as well as 
                           
                              (
                              b
                              ,
                              −
                              a
                              )
                           
                         as eigenvectors. It is evident that eigenvector 
                           
                              (
                              b
                              ,
                              −
                              a
                              )
                           
                         corresponds to a zero eigenvalue for the PDF field since the preferred feed directions at each point on the design surface is only along 
                           ±
                           
                              (
                              a
                              ,
                              b
                              )
                           
                        . The resulting tensor representation can thus be derived and formulated as:
                           
                              (3)
                              
                                 
                                    T
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          
                                             
                                                
                                                   a
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             a
                                             b
                                          
                                       
                                       
                                          
                                             a
                                             b
                                          
                                          
                                             
                                                
                                                   b
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    )
                                 
                              
                           
                         where it should be noted that both 
                           a
                         and 
                           b
                         are functions of 
                           
                              (
                              x
                              ,
                              y
                              )
                           
                        . To obtain the tensor matrix 
                           
                              T
                           
                           
                              (
                              x
                              ,
                              y
                              )
                           
                         for any point on the surface, bilinear interpolation of the tensor components of the surrounding sampled points is to be used.

To generate the pathline of a PFD field from a given starting point 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 0
                              
                           
                           
                              (
                              x
                              ,
                              y
                              )
                           
                        , first its two opposing preferred feed directions are calculated by either interpolating tensor components of surrounding points or by directly calculating the maximum 
                           W
                        . Then, one of the two opposing vectors is chosen as the initial and a subsequent point is attained according to a specified small path increment. The same procedure is repeated with this new point. It should be noted that from the two resulting PFD vectors, only the vector that is not opposing to the previous vector is chosen and the next point will continue to be found until a surface border is reached. Then, the opposing PFD vector for the original point 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 0
                              
                           
                           
                              (
                              x
                              ,
                              y
                              )
                           
                         is chosen with 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 0
                              
                           
                           
                              (
                              x
                              ,
                              y
                              )
                           
                         as the starting point again. The pathline is grown in the opposite direction until a surface border is reached again.

Pathlines in a tensor field, similar to streamlines in a vector field, do not intersect one another except at degenerate points. These points are analogous to critical points in vector fields. At a degenerate point 
                           
                              
                                 
                                    P
                                 
                              
                              
                                 
                                    degen
                                 
                              
                           
                           
                              (
                              x
                              ,
                              y
                              )
                           
                        , the eigenvalues of its tensor matrix are equal and the tensor matrix has the form: 
                           
                              (4)
                              
                                 
                                    T
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             λ
                                          
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                        
                     

The tensor components in Eq. (2) thus satisfy the following conditions: 
                           
                              (5)
                              
                                 
                                    
                                       
                                          T
                                       
                                    
                                    
                                       11
                                    
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 −
                                 
                                    
                                       
                                          T
                                       
                                    
                                    
                                       22
                                    
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 =
                                 0
                                 
                                 and
                                 
                                 
                                    
                                       
                                          T
                                       
                                    
                                    
                                       12
                                    
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 =
                                 0
                                 .
                              
                           
                         Mathematically, this means that the tensor matrix is characterized by an infinite number of eigenvectors. In the case of three-axis sculptured surface machining, a degenerate point on the design surface corresponds to a CC point where there is no particular preferred feed direction because all feed directions will result in the same 
                           W
                        . This happens, for example, when the local surface at the point is completely planar.

In the present work, degenerate points are detected by using bilinear interpolation of the tensor matrices from a rectangular grid of sampled points. The small surface region enclosed by a grid of four neighboring sampled points is evaluated in very small discrete steps. If the calculated values from Eq. (5) are both very close to zero (below a set threshold) at a point, a degenerate point is detected. For improved accuracy, the grid where a possible degenerate point exists is further sub-divided.

Degenerate points can be classified into two categories according to their surrounding pathlines: trisector and wedge. A trisector degenerate point has three separatrices and a wedge degenerate point has only one separatrix. A separatrix is a pathline that intersects a degenerate point, analogous to the asymptotes of a hyperbola with the center of the hyperbola being the degenerate point. However, in a tensor field, a trisector point is characterized by three sectors of pathlines which can be differentiated by their separatrices (Fig. 6
                        ); a wedge point is characterized by a single fold of pathlines towards the separatrix (Fig. 7
                        ). In comparison with a vector field, the occurrence of the three-sector or fold shape of streamlines is impossible since that would mean that the vector field streamlines would have opposing streamline directions.

As presented by Delmarcelle and Hesselink  [28] and Delmarcelle  [29], the specific type of a degenerate point can be identified via the following characteristic coefficient: 
                           
                              (6)
                              
                                 δ
                                 =
                                 A
                                 D
                                 −
                                 B
                                 C
                              
                           
                         where 
                           
                              
                                 A
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          (
                                          
                                             
                                                T
                                             
                                             
                                                11
                                             
                                          
                                          −
                                          
                                             
                                                T
                                             
                                             
                                                22
                                             
                                          
                                          )
                                       
                                    
                                    
                                       ∂
                                       x
                                    
                                 
                                 
                                 B
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          (
                                          
                                             
                                                T
                                             
                                             
                                                11
                                             
                                          
                                          −
                                          
                                             
                                                T
                                             
                                             
                                                22
                                             
                                          
                                          )
                                       
                                    
                                    
                                       ∂
                                       y
                                    
                                 
                                 
                                 C
                                 =
                                 
                                    
                                       ∂
                                       
                                          
                                             T
                                          
                                          
                                             12
                                          
                                       
                                    
                                    
                                       ∂
                                       x
                                    
                                 
                                 
                                 D
                                 =
                                 
                                    
                                       ∂
                                       
                                          
                                             T
                                          
                                          
                                             12
                                          
                                       
                                    
                                    
                                       ∂
                                       y
                                    
                                 
                                 .
                              
                           
                         When 
                           δ
                           <
                           0
                        , the degenerate point is a trisector point. When 
                           δ
                           >
                           0
                        , the degenerate point is a wedge point. A special case occurs when 
                           δ
                           =
                           0
                        . This indicates that there are two degenerate points that are very close to each other and would be detected as a single degenerate point. For example, when two trisector points are very close, it may result in a pattern of four distinct sectors of pathlines. In this case, the two trisector points are to be dealt with separately. When a pair of wedge points is very close or merging with each other, the surrounding pathlines form concentric loops and are to be dealt with as a separate type of degenerate points, known as the merged wedge degenerate point (Fig. 8
                        ).

The separatrices of degenerate points are pathlines themselves and they can grow until a surface border or another degenerate point is reached  [28–30]. The reason for segmenting a surface according to the separatrices of degenerate points is that the separatrices form a skeleton of the PFD field which segments the entire design surface into regions where the pathlines have a similar pattern. At locations near a degenerate point, the pathlines can be described as bifurcating (trisector), folding (wedge), or looping (merged wedge). In this section, segmentation of the PFD field according to the identified degenerate points and their separatrices will be described in detail.

As mentioned earlier, a trisector degenerate point has three separatrices. Since a separatrix is actually a pathline that intersects the degenerate point, it can be established by first determining a seed point close to the degenerate point and then letting the pathline grow. An applicable seed point in the vicinity of a degenerate point will have its preferred feed direction well aligned with the vector from the degenerate point to the seed point. As shown in Fig. 9
                           , this essentially means that an applicable seed point will have its 
                              cos
                              β
                              =
                              1
                           . To ensure reliable search results with reasonable computational costs, identification of the three seed points is done via a combined sampling and bisection method. With the three seed points identified, each of the three separatrices can then easily grow by a regular marching method until a surface border or another degenerate point is reached.

As mentioned earlier, a wedge degenerate point has only one separatrix. The seed point for the wedge separatrix is determined in a similar manner as the seed points for the trisector separatrices. The only difference is that there will be only one feed angle 
                              ϕ
                            for 
                              cos
                              β
                              =
                              1
                           , corresponding to the single seed point (Fig. 10
                           ). The single separatrix originated from the seed point cannot segment the design surface into different regions. To segment the surface into regions of similar pathlines, it is proposed in this work to add a pseudo-separatrix. The pseudo-separatrix is to be constructed at the wedge degenerate point. A wedge plane is first created at the wedge point using the three-dimensional tangent vector of the separatrix as the plane normal. The wedge plane then intersects the design surface and the resulting intersection curve is the pseudo-separatrix. If a design surface has only one wedge degenerate point, its separatrix and pseudo-separatrix will divide the surface into three regions. It should be noted that, since the pseudo-separatrix is not a pathline, it can intersect with other separatrices. For this reason, segments of a pseudo-separatrix should be trimmed at the intersections.

In a PFD field where there are only two wedge degenerate points and the method to obtain their separatrices and pseudo-separatrices has been applied, the result would ideally be a single separatrix joining these two wedge degenerate points as well as their corresponding pseudo-separatrices. The surrounding pathlines will show a pattern of non-intersecting closed loops. As the distance between the two wedge degenerate points approaches zero, the pathline loops will take a more circular shape if projected onto the 
                              
                                 xy
                              
                            plane. If the distance between the two wedge points becomes zero and the two wedge points are literally merged into one degenerate point, the value of 
                              cos
                              β
                            will then remain close to zero (Fig. 11
                           ). Under this situation, it is evident that there is no preferred direction to form any separatrix for the merged wedge degenerate point. So, for a surface whose PFD field presents only one merged wedge degenerate point, the surface cannot be segmented and is to be treated as a single region.

Once the design surface has been segmented into regions of similar pathlines, the next step is to cover these segmented regions with iso-scallop tool paths. Note that existing iso-scallop tool path generation methods consistently employ a sequential tool path generation approach and require the input of an initial tool path. In this section, a method to determine the initial tool path based on the region’s pathlines is proposed. This initial tool path, referred to as the principal tool path in this work, is determined in order to reduce the drift of the generated iso-scallop tool paths from the region’s pathlines so that the resulting machining strip widths are maximized across the surface region.

A typical iso-scallop tool path generation method generates adjacent tool paths from both sides of the initial tool path until a surface border is reached. If the initial tool path is chosen as one of the PFD pathlines, the more adjacent tool paths are generated (or grown from the initial tool path), the less similar the generated tool paths are to the PFD pathlines. So, the principal tool path should correspond to a pathline whose adjacent iso-scallop tool paths would deviate as little as possible from the region’s pathlines as a whole. Determining the theoretical solution for the desired principal tool path is a very challenging task, if at all possible. For quick implementations, the middle pathline in the segmented surface region is taken as the principal tool path. The middle pathline is chosen because it has the evident benefit of a smaller number of sequential tool paths to be generated from it, thereby reducing the chance of the generated tool paths being departed much from the PFD pathlines. The procedure to determine the middle pathline is summarized here. First, let the surface region be covered by a set of pathlines generated from a uniform grid of seed points. The seed point resolution is to be kept high enough so that the surface region is covered by a sufficiently large number of pathlines. The minimal applicable seed point resolution varies with the geometry of the segmented surface region. It has been found from extensive computational tests that 50 pathlines are generally sufficient. Then, the Hausdorff distances between all possible pathline pairs are evaluated. Note that the Hausdorff distance between two pathlines is the maximum of the distance from any point on one pathline to the other pathline. For each pathline, an average Hausdorff distance is calculated. The middle pathline, or the principal tool path, is then the pathline with the minimum average Hausdorff distance.

Once the initial (principal) tool path has been established for the segmented surface region, the iso-scallop tool path generation method of Feng and Li  [9] is employed to generate the iso-scallop tool paths across the surface region. Fig. 12
                        (a) shows an example of the principal tool path along with its adjacent iso-scallop tool paths for a segmented surface region covered by pathlines. Fig. 12(b) shows the iso-scallop tool paths generated from the border of the segmented region. It can be seen that the iso-scallop tool paths generated using the principal tool path as the initial tool path follow the PFD pathlines more closely than those generated using the region’s border.

The proposed method was applied to generating tool paths for a variety of surfaces. A ball-end mill of radius 
                        r
                        =
                        10
                        
                        
                           mm
                        
                      was chosen and the scallop height constraint was set as 0.2 mm. Case study 1 analyzed a cone-shaped surface where no degenerate point could be identified and therefore, the whole surface was treated as a single region (Fig. 13
                     ). Case study 2 involved a surface with one trisector degenerate point, which segmented the surface into three regions (Fig. 14
                     ). Case study 3 considered a surface with two wedge degenerate points, each having its own pseudo-separatrix and sharing the single separatrix with the other (Fig. 15
                     ). The surface was thus segmented into four regions. The surface in case study 4 contained one merged wedge degenerate point. As a result, the whole surface was treated as a single region and only one principal tool path was used (Fig. 16
                     ). A particular surface with all types of degenerate point (three trisector, two wedge, and one merged wedge points) was analyzed in case study 5. Eight distinct regions were segmented, each having its own principal tool path from which the iso-scallop tool paths could be generated (Fig. 17
                     ). The last case study analyzed the corresponding mold surface of a Bicycle Seat model. One trisector and two wedge degenerate points were identified, dividing the surface into six regions (Fig. 18
                     ).

For each case study, the overall length of the generated tool paths using the proposed method has been compared with that using the conventional iso-parametric, iso-planar, and iso-scallop methods. The results are summarized in Table 1
                     . For the iso-scallop method, both the 
                        u
                      and 
                        v
                      surface patch borders were used as the initial tool path. In all cases, the proposed method is seen to generate tool paths with shorter overall length. Large improvements are expected and confirmed for iso-parametric and iso-planar methods. It should be pointed out here that the conventional iso-scallop method has been well accepted as the tool path generation method to minimize redundant machining. With the same scallop height constraint, the proposed method, however, is still able to further reduce the overall tool path length by a notable percentage depending on the specific surface geometry.

As for computational efficiency, the traditional iso-parametric tool path generation method is the most efficient, followed by the iso-planar method, as expected. Generating the iso-scallop tool paths has been known to take longer time due to its sequential procedure of tool path generation. The proposed method is evidently the least computationally efficient because of the much added computational load to segment the design surface into different regions. Nonetheless, it should be noted that unlike the machining time, which is recurring for each part being machined, tool path generation is an off-line computational task that only needs to be performed once for a given part. Hence, the much increased computational time is effectively acceptable since reduction in the machining time is of much more value.

@&#CONCLUSIONS@&#

A new method has been presented in this paper to generate iso-scallop tool paths which aim to follow preferred feed directions (PFD’s) on a given sculptured surface. The generated tool paths feature shorter overall tool path length under the specified scallop height constraint, compared with tool paths generated by all existing methods. This is essentially achieved by segmenting the PFD field of the given surface into regions of similar PFD’s via identifying the PFD field’s degenerate points and forming their separatrices. It is possible that due to the presence of islands/cavities of specific geometry, the PFD’s are similar across the island/cavity boundaries. In this situation, the presented method will fail to segment the islands/cavities into individual surface regions. Nonetheless, islands/cavities of general geometry often produce distinct PFD’s, resulting in successfully segmented individual islands/cavities by the presented method.

During the implementation of the proposed method, a sampling resolution needs to be chosen to map the PFD field of the given surface. Computational time will be increased if the chosen resolution is high. On the other hand, not all degenerate points could be identified if the resolution is low. Determining the optimal resolution for a given surface is a challenging task and beyond the scope of the current work. As for the initial or principal tool path for generating the iso-scallop tool paths for a segmented surface region, the middle pathline in the segmented region has been employed in order to reduce the drift of the generated iso-scallop tool paths from the PFD pathlines. The presented procedure to find the middle pathline in each segmented region is rather simplistic and the identified middle pathline will vary slightly with the pathlines that are sampled in the region. A more elaborated procedure will need to consider and evaluate the resulting machining strip widths. It may lead to further reduction of the overall tool path length, but not by much.

A couple of practical issues need to be noted here. As the design surface is segmented into different regions, the tool entry and exit motions for each tool path segment at the region borders have to be carefully planned in order to reduce tool engagement/disengagement marks. It should also be noted that current iso-scallop tool path generation methods consistently employ a sequential tool path generation approach. Such a sequential approach has been known to lead to undesirable high-curvature and/or looping tool path curves due to accumulative changes in the sequentially generated tool paths. The present work serves to address this issue, to some extent, by segmenting the design surface into different regions of similar PDF pathlines. However, seemingly sharp corners in the generated tool paths can still be found. Such geometric discontinuity in the tool path much affects the related machining performance. Balancing the tool path smoothness and overall tool path length is a challenging task and among the tool path generation research studies to be carried out in our research group.

@&#ACKNOWLEDGMENTS@&#

This work was funded in part by the Natural Sciences and Engineering Research Council (NSERC) of Canada. The scholarship awards from the Foreign Affairs and International Trade Canada and the Consejo Nacional de Ciencia y Tecnología México, which supported the first author to complete the research reported in this paper and receive his Master’s degree in 2012, are also gratefully acknowledged. The Bicycle Seat model was downloaded from the GrabCAD website (http://grabcad.com/) and used with the kind permission from its creator Dusan Tijanic. The authors also wish to thank the anonymous reviewers for their constructive comments that have greatly helped to improve the quality of this paper.

@&#REFERENCES@&#

