@&#MAIN-TITLE@&#Medical data sheet in safe havens – A tri-layer cryptic solution

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Tri-layer cryptic approach on Digital Imaging and Communications in Medicine (DICOM) images


                        
                        
                           
                           Involves Latin square image cipher (LSIC), Discrete Gould Transform (DGT) and Rubik׳s encryption algorithms


                        
                        
                           
                           Encrypted data was tested by trans-received using Universal Software Radio Peripheral (USRP) with AWGN
                           


                        
                        
                           
                           Confusion, permutation, randomness and authentication have been fused in single platform


                        
                        
                           
                           
                              UACI, NPCR, Information entropy and key sensitivity was analysed and compared with the existing literature


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Encryption

Rubik׳s encryption

DGT

LSIC

DICOM images

USRP

AWGN

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

The influence of information, communication and technology (ICT) has been strongly felt in the field of medicine through tele-diagnosis, tele-consulting, and tele-surgery. In this era of ICT, multimedia tools have been used to share the e-medical data of patients among the entitled users with maximum secrecy to confirm the privacy of individuals. Recently, secured telemedicine implementations have been on demand because medical images have been used in various research studies [1]. In particular, DICOM images require better and improved security than normal images because they address e-medical data [2], which has more accountability in terms of insurance policies. It can be protected by encryption keys, digital signatures, watermarking, steganography, cryptographic algorithms, chaotic sequences and hash functions.

Security and privacy are two sides of a sword and are required against hackers for a secure digital communication in the present scenario of the “Global Village” invented on the Internet [3]. The evolution of cryptography and its application in the fields of mathematics, computer science and engineering, smart grids, and wireless cognitive radio [4] have been phenomenal in recent years. In this context, image encryption has emerged as a powerful cryptic tool and the strong nexus between cryptography and chaos [5]. The fusion of traditional cryptic and modern chaotic features, namely confusion, diffusion, ergodicity, and randomness have evolved as a stronger tool in the form of image encryption [6–8], which can be adopted for establishing secured digital communication. Recently, many researchers have proposed and implemented image encryption algorithms using different transform techniques, chaotic systems [9–14], multiplexing [15–17], compression [18] and fusion [19–22] techniques. Authors have implemented different transform domain based image encryption algorithms, especially in gyrator domains. Huijuan Li [23] has implemented an optical image encryption technique by adapting the gyrator transform and two-step phase shifting interferometry. Liu et al. [24] proposed a random phase encryption method in which an iterative structure was used to generate more randomness for an enhanced cryptic effect.

Furthermore, Zheng and Huang [25] proposed an image encryption algorithm by performing a discrete wavelet transform (DWT) and an expansion of data in cipher mode. Additionally, authors have adapted the Walsh–Hadamard transform (WHT), binary discrete Hartley transform (BDHT), DCT, and hybrid diagonal block-set transform (FHDBT) techniques for image encryption applications. To further the complexity, authors have developed image encryption algorithms based on compression techniques [26]. Under the compression schemes, the Huffman, multiple Huffman table, run-length and dictionary algorithms were employed to generate cryptic images. During this evolution of image encryption algorithms, a novel double image scheme emerged as a multiplexed scheme. In this superimposed platform, researchers have adopted multiplexed double pixel scrambling [27], fractional random encoding [28], fractional random encoding using the chaotic approach [29,30], amplitude encoding, phase encoding [31] and random, iterative random encoding to perform image encryption coding. In the same line, fusion algorithms were developed to encrypt both monochrome and colour images.

Recently, chaotic encryption schemes have attracted the attention of many researchers because of their excellent randomness and complexity [32]. A piecewise linear chaotic map was employed on a colour image for scrambling, and additional confusion and diffusion was performed simultaneously on the three colour planes. In addition, the logistic, standard, tent map, skew tent map, Lorentz system, time delay Lorentz system, 6D chaotic system, Arnold cat map, circulant operations, and Tompkin׳s Paige algorithms were considered to perform image encryption schemes.

For the secured storage and transfer of DICOM images, the transformation of pixels and matrices was performed, resulting in permuted, diffused and confused encrypted data. Many OpenWare tools were designed and developed to make medical images available for secondary applications including research projects and to build healthcare networks [33]. Medical images are normally classified into two categories: region of interest (ROI) and region of background (ROB). To reduce the processing time and the number of overheads, ROI and ROB were processed separately with same or different encryption keys and algorithms [34,35]. The watermarking of patient information, hospital LOGO and doctor details can be embedded on ROB while leaving ROI unchanged. To further improve authentication, the finger printing, hash functions and digital signatures of patient information were embedded as secret data on ROB [36].

The efficient and real-time medical image transmission using bit level shuffling, substitution and permutation was performed by Jun-xin Chen et al. [37] to provide image protection. Dalel Bouslimi et al. [38] developed an algorithm to validate the consistency of DICOM images, which resulted in reducing and avoiding image distortion. Watermarking combined with encryption or steganography schemes and cryptographic algorithms such as AES, DES, RC4, and IDEA can be used to provide enhanced image security and authentication. Yen-Cheng Chen et al. analysed the usage of block ciphers for handling large and enormous image sizes, which are a needed option currently for handling real-time applications. The authors used fingerprints as verification data to authenticate the medical images [39]. Muhaya et al. proposed a chaotic technique to protect medical images by scrambling the pixel values and by combining various cryptographic mechanisms and key management schemes [40].

To provide reliable, error-free transmission and reception of DICOM images, various error control codes such as repetitive and hamming codes have been used. Multiple chaotic encryption schemes with compression, watermarking and the concept of Galois field were used by Prasad and Mishra [41] for enriching the security of medical data. Kannammal and Subha Rani [42] implemented a joint encryption and watermarking algorithm to provide a two-level security feature to medical images. The Joint Photographic Experts Group (JPEG) standard has been used to compress medical images, and copyright protection was ensured by watermarking techniques [43]. Patient information was interleaved with medical images to reduce the transmission overheads. Image encryption for medical images was also considered by using chaotic systems and watermarking incorporated hyper chaotic systems to protect the same [44,45].


                     Panduranga et al. 
                     [46] described about encryption scheme that combines chaotic map and LSIC results in diffusion and permutation of the encrypted ciphers. Yue Wuet al., [47] proposed the Latin square matrix concept which has been adapted to implement the image encryption algorithm for embedding random noise into LSB of the images that generates confusion in the embedded cipher text.

Varsaki et al. [48] and Hoang et al. [49] proposed a high capacity stego system by using the discrete Gould transform (DGT) to provide image authentication and tamper proof, respectively.

Image encryption using Rubik׳s cube principle has been addressed to permute the pixels of the image for shuffling [50,51].

However, the majority of the existing techniques employ either chaotic or cryptic effects, which are not stern enough against hackers. Hence, in this work, a tri-layer cryptic technique has been proposed in which confusion, diffusion, tamper proofing, permutation, randomness and ergodicity have been fused in a single platform to perform triple encryption. Section 2 presents the proposed methodology, and Section 3 explains the results and discussion. Finally, Section 4 concludes with the salient features of the implemented encryption system.

@&#METHODOLOGY@&#

@&#BACKGROUND@&#

A Latin square matrix is an n×n matrix that consists of n different elements by which the matrix is constructed. These n elements are filled in such a way that no elements will reoccur in any row or column of the matrix, so that each row and column contains all of the elements. Leonhard Euler, a Swiss Physicist and a Mathematician proposed the concept of Latin square image cipher (LSIC) by using Latin characters as symbols, which led to the famous Sudoku puzzle. The given 9×9 Latin square represents the LSIC scheme where no number repeats in a row or column, which inherently results in a confusion property suited for image encryption [46,47].
                              
                                 (1)
                                 
                                    
                                       
                                          
                                             5
                                          
                                          
                                             3
                                          
                                          
                                             4
                                          
                                          
                                             6
                                          
                                          
                                             7
                                          
                                          
                                             8
                                          
                                          
                                             9
                                          
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             6
                                          
                                          
                                             7
                                          
                                          
                                             2
                                          
                                          
                                             1
                                          
                                          
                                             9
                                          
                                          
                                             5
                                          
                                          
                                             3
                                          
                                          
                                             4
                                          
                                          
                                             8
                                          
                                       
                                       
                                          
                                             1
                                          
                                          
                                             9
                                          
                                          
                                             8
                                          
                                          
                                             3
                                          
                                          
                                             4
                                          
                                          
                                             2
                                          
                                          
                                             5
                                          
                                          
                                             6
                                          
                                          
                                             7
                                          
                                       
                                       
                                          
                                             8
                                          
                                          
                                             5
                                          
                                          
                                             9
                                          
                                          
                                             7
                                          
                                          
                                             6
                                          
                                          
                                             1
                                          
                                          
                                             4
                                          
                                          
                                             2
                                          
                                          
                                             3
                                          
                                       
                                       
                                          
                                             4
                                          
                                          
                                             2
                                          
                                          
                                             6
                                          
                                          
                                             8
                                          
                                          
                                             5
                                          
                                          
                                             3
                                          
                                          
                                             7
                                          
                                          
                                             9
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             7
                                          
                                          
                                             1
                                          
                                          
                                             3
                                          
                                          
                                             9
                                          
                                          
                                             2
                                          
                                          
                                             4
                                          
                                          
                                             8
                                          
                                          
                                             5
                                          
                                          
                                             6
                                          
                                       
                                       
                                          
                                             9
                                          
                                          
                                             6
                                          
                                          
                                             1
                                          
                                          
                                             5
                                          
                                          
                                             3
                                          
                                          
                                             7
                                          
                                          
                                             2
                                          
                                          
                                             8
                                          
                                          
                                             4
                                          
                                       
                                       
                                          
                                             2
                                          
                                          
                                             8
                                          
                                          
                                             7
                                          
                                          
                                             4
                                          
                                          
                                             1
                                          
                                          
                                             9
                                          
                                          
                                             6
                                          
                                          
                                             3
                                          
                                          
                                             5
                                          
                                       
                                       
                                          
                                             3
                                          
                                          
                                             4
                                          
                                          
                                             5
                                          
                                          
                                             2
                                          
                                          
                                             8
                                          
                                          
                                             6
                                          
                                          
                                             1
                                          
                                          
                                             7
                                          
                                          
                                             9
                                          
                                       
                                    
                                 
                              
                           
                        

LSIC based image encryption schemes can be implemented on either hardware or software tools because of their sensitiveness to keys, suitability to bytes instead of bits and integer-based operations.

Consider a set of 1×3 pixel matrices, namely “a” and “b” of an image. The elements of these two matrices are used to construct an LSIC scheme as follows:
                              
                                 
                                    a
                                    =
                                    
                                       [
                                       
                                          0.8147
                                          
                                          0.958
                                          
                                          0.1207
                                       
                                       ]
                                    
                                    b
                                    =
                                    
                                       [
                                       
                                          0.9134
                                          
                                          0.6324
                                          
                                          0.0975
                                       
                                       ]
                                    
                                 
                              
                           The pixel positions in each matrix are represented as [123].

These two matrices were sorted based on ascending order as follows:
                              
                                 
                                    
                                       
                                          
                                             sa
                                             =
                                             
                                                [
                                                
                                                   0
                                                   .
                                                   1207
                                                   
                                                   0
                                                   .
                                                   8147
                                                   
                                                   0
                                                   .
                                                   958
                                                
                                                ]
                                             
                                          
                                       
                                       
                                          
                                             sb
                                             =
                                             
                                                [
                                                
                                                   0.0975
                                                   
                                                   0
                                                   .
                                                   6324
                                                   
                                                   0
                                                   .
                                                   9134
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           Therefore, the changed pixel positions after sorting are [312] and [321], respectively, for the sa and sb matrices with reference to a and b. These two resultant position matrices are considered as “seed” and “shift” matrices. The ith column of the LSIC matrix has been formed by left shifting the “seed” value of the ith element of the “shift” matrix.

The LSIC matrix was finally constructed by using the “seed” and “shift” matrices after performing ‘k’ iterations.
                              
                                 (2)
                                 
                                    Then
                                    ,
                                    
                                    the
                                    
                                    final
                                    
                                    Latin
                                    
                                    square
                                    
                                    will
                                    
                                    be
                                    
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               1
                                                            
                                                         
                                                         
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                         
                                                         
                                                            
                                                               2
                                                            
                                                         
                                                         
                                                            
                                                               3
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               2
                                                            
                                                         
                                                         
                                                            
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       ]
                                    
                                 
                              
                           
                        

Le and Aburdene introduced DGT in 2006 and used it to provide image authentication and tamper proofing applications. The Gould coefficients always denote the difference between the adjacent pixels. Because of this feature, DGT was utilized to embed secret data, which resulted in a high capacity stego system [48,49]. The same feature helps to detect any manipulation performed by intruders, which in turn plays the role of authentication.

For a 2×2 image block, the Gould transform is given by
                              
                                 (3)
                                 
                                    (
                                    
                                       
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                          
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   21
                                                
                                             
                                             −
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                             
                                             
                                                
                                                   Y
                                                
                                                
                                                   22
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   12
                                                
                                             
                                             −
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                          
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                             −
                                             
                                                
                                                   Y
                                                
                                                
                                                   12
                                                
                                             
                                             
                                             −
                                             
                                                
                                                   Y
                                                
                                                
                                                   21
                                                
                                             
                                          
                                       
                                    
                                    )
                                 
                              
                           Similarly, the Inverse Gould transform is given by
                              
                                 (4)
                                 
                                    (
                                    
                                       
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                          
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   21
                                                
                                             
                                             +
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                             
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   11
                                                
                                             
                                             +
                                             
                                                
                                                   Y
                                                
                                                
                                                   12
                                                
                                             
                                          
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   12
                                                
                                             
                                             +
                                             
                                                
                                                   Y
                                                
                                                
                                                   21
                                                
                                             
                                             
                                             +
                                             
                                                
                                                   Y
                                                
                                                
                                                   22
                                                
                                             
                                          
                                       
                                    
                                    )
                                 
                              
                           
                        

Ernö Rubik, a Hungarian Physics professor invented Rubik׳s cube technique in 1974, which has been utilized to change and scramble the position of the pixels of an image. This principle provides permutation of the original image where two random keys are used to permute the rows and columns to provide the final permuted image [50,51]. Shuffling of the pixels using Rubik׳s cube technique results in a double ciphered image. Rubik׳s cube used in the proposed system is given in 
                           Fig. 1a.

The proposed encryption and decryption scheme has been divided into three stages, namely the LSIC, DGT and Rubik׳s techniques as shown in Fig. 1b. As a first step, the input DICOM image of size 256×256 was divided into 8-bit planes and was subsequently swapped to shuffle the same. By keeping this operation as a seed, the tri-layer encryption scheme, namely LSIC, DGT and Rubik׳s cube, was implemented. The decryption scheme was performed with the respective keys of all of the three stages to obtain the original Image.

With this background and design approach, the algorithm of the proposed tri-layer scheme is given below. The first stage has taken care of the substitution and confusion [46,47] of the DICOM image, tamper proofing and authentication [48,49] performed through stage II. Stage III provided the shuffling of the permuted image [50,51].


                           
                              
                                 1.
                                 Read the input DICOM image of size 256×256.

Divide them into bit planes.

Swap the bit planes and reconstruct into a single image.

Generate Latin square matrix.
                                       
                                          •
                                          4.1. Generate two random sequences a and b of length ‘K’.

4.2. Sort both sequences.

4.3. Seed and Shift are the required operations to be performed on the random sequences.

4.4 (a and b) to generate the Latin square

4.5 Seed=index of each sorted value in unsorted sequence 1.

Shift=index of each sorted value in unsorted sequence.

Generate nine sets of 256-bit random keys.

Form the Latin square (LS) generated
                                       
                                          (5)
                                          
                                             do
                                             
                                             (
                                             1
                                             
                                             row
                                             ,
                                             
                                             1
                                             
                                             column
                                             
                                             mod
                                             
                                             3
                                             )
                                             =
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        0
                                                                     
                                                                     
                                                                        
                                                                           no
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           change
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       in
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       LS
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        
                                                                           flip
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           LS
                                                                           
                                                                              
                                                                                 
                                                                                 
                                                                                    
                                                                                       upside
                                                                                       
                                                                                          
                                                                                             
                                                                                                
                                                                                                   down
                                                                                                
                                                                                             
                                                                                             
                                                                                          
                                                                                       
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        
                                                                           flip
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           LS
                                                                           
                                                                              
                                                                                 
                                                                                 
                                                                                    
                                                                                       left
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             
                                                                                                ↔
                                                                                             
                                                                                             
                                                                                                
                                                                                                   right
                                                                                                
                                                                                             
                                                                                          
                                                                                       
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 

Store the obtained matrix as Flip LS.

Do ((LS+Flip LS) MOD 256) and store it as LS: S1.

For the first iteration, indices=(1, first row of LS: S1).
                                       
                                          •
                                          New Row Value 1 (NR1)=LS (indices).

For iterations i:2:256, indices=(previous substituted value, LS: S1(i, 256)).

New Row Value (l: 2: 256) (NR l)=LS (indices(l)).

For the first iteration, indices=(first column of LS: S1 (256,i), 1)
                                       
                                          •
                                          New Column Value 1 (NC1)=LS (indices).

For iterations 2:256, indices= (LS: S1 (256, i), previous substituted value).

New Column Value (l: 2: 256) (NC l)=LS (indices (l)).

Then, form the new matrix with new rows and columns formed from steps 9 and 10.

For 256 iterations, 1:256, Tindices=i/ith row of LS.
                                       
                                          •
                                          First row of Tindices=New Row Value 1 (NR1)=LS (indices).

For i:1:256 Pindices=(ith column of LS, i).


                                             ith column of Pmatrix=Tindices (Pindices).

Store the resultant as final image matrix1. For the nine random keys generated, perform the operations 6 to 11 to obtain the matrix 1:9.


                           
                              
                                 15.
                                 Gould transform of a signal Y can be defined as Y=Gould×Gould transform.

Inverse Discrete Gould transform y=(Gould−1)×(Gould transform) −1.

Output of Stage I will be given as input to the DGT block.

Each divided block of LSIC output is applied to DGT.

Double layered encrypted image output.


                           
                              
                                 20. The output from the LSIC stage will be taken as an input to Rubik’s encryption algorithm of size M×N.

21. K1 and K2 are the randomly generated keys, which vary from zero to two (size of image −1).

22. Initialize the iteration to zero.
                                       
                                          –
                                          22.1 Increment it by one in each loop.

22.2 The maximum iteration will be equal to the key length.

22.3 Then, the sum of all of the elements are computed in a row and stored as K(i),

where K(i)=∑ Io(i, j), i=1, 2,…,M.

22.4 Similarly, the sum of all of the elements are computed in a column and stored as L(j).

where L(j)=∑ Io(i, j), i=1, 2,…,N.

23. Then, Mod 2 operations are performed on K(i) and L(j) to obtain MK(i) and ML(j), respectively.

24. Then, circular shift is performed on the output pixels.
                                       
                                          –
                                          24.1. In row i, the image pixels are moved right/left based on the condition given below

for K1(i) times. If MK(i)=0, then right circular shift.

Otherwise, left circular shift.

24.2 In column j, the image pixels are moved up or down based on the condition given

below for K2(i) times. If ML(j)=0, do up circular shift.

Otherwise, perform down circular shift.

25. The output of the circular shift operation is stored as a single-stage output (SSOP).

26. Using K1, do bitwise XOR operation to each row of SSOP based on the following expression.
                                       
                                          
                                             
                                                
                                                   
                                                      I
                                                      1
                                                      
                                                      
                                                         (
                                                         
                                                            2
                                                            i
                                                            –
                                                            1
                                                            ,
                                                            j
                                                         
                                                         )
                                                      
                                                      =
                                                      SSOP
                                                      
                                                         (
                                                         
                                                            2
                                                            i
                                                            –
                                                            1
                                                            ,
                                                            j
                                                         
                                                         )
                                                      
                                                      ⊗
                                                      K
                                                      1
                                                      
                                                         (
                                                         j
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      I
                                                      1
                                                      
                                                      
                                                         (
                                                         
                                                            2
                                                            i
                                                            ,
                                                            j
                                                         
                                                         )
                                                      
                                                      =
                                                      SSOP
                                                      
                                                         (
                                                         
                                                            2
                                                            i
                                                            ,
                                                            j
                                                         
                                                         )
                                                      
                                                      ⊗
                                                      rot
                                                      
                                                      180
                                                      
                                                         (
                                                         
                                                            KC
                                                            
                                                               (
                                                               j
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          –
                                          where ⊕ denotes bitwise XOR operation and rot 180 (K1 represents the flipping of K1 from left to right.

27. Using K2, do bit wise XOR operation applied to each column of I1 based on the following expression.
                                       
                                          
                                             
                                                
                                                   
                                                      IENC
                                                      
                                                      
                                                         (
                                                         
                                                            i
                                                            ,
                                                            2
                                                            j
                                                            
                                                            −
                                                            
                                                            1
                                                         
                                                         )
                                                      
                                                      =
                                                      I
                                                      1
                                                      
                                                      –
                                                      i
                                                      ,
                                                      2j
                                                      
                                                      –
                                                      
                                                      1
                                                      )
                                                      ⊗
                                                      KR
                                                      
                                                         (
                                                         j
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      IENC
                                                      
                                                      
                                                         (
                                                         
                                                            i
                                                            ,
                                                            2
                                                            j
                                                         
                                                         )
                                                      
                                                      =
                                                      I
                                                      1
                                                      
                                                      
                                                         (
                                                         
                                                            i
                                                            ,
                                                            2
                                                            j
                                                         
                                                         )
                                                      
                                                      ⊗
                                                      rot
                                                      
                                                      180
                                                      
                                                         (
                                                         
                                                            KR
                                                            
                                                               (
                                                               j
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          –
                                          where ⊕ denotes the bitwise XOR operation and rot 180(K2) represents flipping of K2 from left to right

28. Check if the number iterations reach the maximum; if yes, obtain the encrypted image; otherwise, repeat 16 to 22 until maximum iteration is reached.

29. Finally, triple layer encrypted image has been obtained.

As per the proposed design approach, the three stages of the algorithms have been fused to construct a stern encryption algorithm, and decryption of the image can be obtained by reversing the three steps.

For the experimental analysis, five DICOM test images of dimension 256×256 were obtained from Radiopaedia.org, a UBM medical network, and are shown in 
                        Fig. 2a–e.

To analyse the performance of the proposed tri-layer cryptic effects, a correlation of the pixel values for the considered image for prior and post cryptic operations was computed. Horizontal (H), vertical (V) and diagonal (D) correlation values of the encrypted DICOM test images are given in 
                           Table 1. Generally, the correlation value of one indicates high correlation, and zero points to obscurity among the pixels. The image encryption standards are necessitated to provide zero correlation values. Two adjacent pixels for vertical, horizontal and diagonal directions were selected, and the correlation coefficients (r
                           
                              xy
                           ) were calculated, where x, y are the adjacent pixels in an image.

Where
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      x
                                                      y
                                                   
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   
                                                      C
                                                      O
                                                      V
                                                      (
                                                      x
                                                      ,
                                                      
                                                      y
                                                      )
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        D
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        D
                                                                        (
                                                                        y
                                                                        )
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                D
                                                (
                                                x
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               N
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∑
                                                               
                                                                  i
                                                                  =
                                                                  1
                                                               
                                                               N
                                                            
                                                            
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               −
                                                               
                                                                  1
                                                                  N
                                                               
                                                               
                                                                  ∑
                                                                  
                                                                     i
                                                                     =
                                                                     1
                                                                  
                                                                  N
                                                               
                                                               
                                                                  x
                                                                  i
                                                               
                                                               )
                                                               
                                                                  
                                                                     
                                                                  
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                D
                                                (
                                                y
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   1
                                                   N
                                                
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                
                                                   (
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   −
                                                   
                                                      1
                                                      N
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                                )
                                                
                                                   
                                                      
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 
                                    C
                                    O
                                    V
                                    (
                                    x
                                    ,
                                    y
                                    )
                                    =
                                    
                                       1
                                       N
                                    
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       −
                                       (
                                       E
                                       (
                                       x
                                       )
                                       )
                                       
                                       (
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                       −
                                       (
                                       E
                                       (
                                       y
                                       )
                                       )
                                    
                                 
                              
                           where E(z) is the expectation operator and is given by 
                              E
                              (
                              z
                              )
                              =
                              
                                 1
                                 N
                              
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                              
                           .

Entropy determines the uncertainty in the final encrypted image. It is given by 
                              E
                              n
                              t
                              r
                              o
                              p
                              y
                              =
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 m
                              
                              
                                 (
                                 p
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 
                                 
                                    
                                       log
                                    
                                    
                                       2
                                    
                                 
                                 
                                 1
                                 
                                 /
                                 p
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                           , where m denotes the greyscale values of the image and p(y) represents the pixel value from the histogram of the encrypted image. The value of this entropy should be close to 8 to prove the robustness of the algorithm. In the proposed scheme, the value was found to be 7.99, which reveals the randomness of the encryption scheme.

Differential attacks were performed to analyse the strength and endurance level of the proposed algorithm. This technique was implemented by observing one pixel in the plain image and the corresponding change in the resultant image. If the change is evident in the resultant image, then it is asserted that the attack is rendered useless. There are two major constraints of differential attacks, namely NPCR and UACI.

NPCR is the evaluation between two images by considering the corresponding pixel values with dissimilar grey levels. If P
                           1(x, y) and P
                           2(x, y) are the pixel grey level values in the xth row and yth column of the two images M×N, respectively,
                              
                                 (7)
                                 
                                    then
                                    
                                    NPCR
                                    =
                                    
                                       
                                          
                                             ∑
                                             
                                                x
                                                ,
                                                y
                                             
                                          
                                          
                                             Q
                                             (
                                             x
                                             ,
                                             y
                                             )
                                          
                                       
                                       
                                          M
                                          ⁎
                                          N
                                       
                                    
                                    ×
                                    100
                                    %
                                 
                              
                           
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                Q
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        0
                                                                     
                                                                     
                                                                        
                                                                           i
                                                                           f
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             p
                                                                                          
                                                                                          
                                                                                             1
                                                                                          
                                                                                       
                                                                                       (
                                                                                       x
                                                                                       ,
                                                                                       y
                                                                                       )
                                                                                    
                                                                                 
                                                                                 
                                                                                    =
                                                                                 
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             P
                                                                                          
                                                                                          
                                                                                             2
                                                                                          
                                                                                       
                                                                                       (
                                                                                       x
                                                                                       ,
                                                                                       y
                                                                                       )
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        
                                                                           i
                                                                           f
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             P
                                                                                          
                                                                                          
                                                                                             1
                                                                                          
                                                                                       
                                                                                       (
                                                                                       x
                                                                                       ,
                                                                                       y
                                                                                       )
                                                                                    
                                                                                 
                                                                                 
                                                                                    ≠
                                                                                 
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             P
                                                                                          
                                                                                          
                                                                                             2
                                                                                          
                                                                                       
                                                                                       (
                                                                                       X
                                                                                       ,
                                                                                       y
                                                                                       )
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           UACI is defined as the average intensity difference between the pixels in grey level for the two images.
                              
                                 (8)
                                 
                                    UACI
                                    =
                                    
                                       1
                                       
                                          M
                                          ⁎
                                          N
                                       
                                    
                                    
                                       [
                                       
                                          
                                             ∑
                                             
                                                x
                                                ,
                                                y
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   −
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                
                                                
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         graylevel
                                                      
                                                   
                                                   −
                                                   1
                                                
                                             
                                          
                                       
                                       ]
                                    
                                 
                              
                           This method is free from the differential attack that can be substantiated by the computed values. NPCR was 99.6%, which is comparable with [5–7] and better than [44,45], and UACI was approximately 33.4%, which is similar to [5–7] and is superior to [44,45]. This has manifested the inability of the hacker to detect even a small likeliness between the plain image and the encrypted image.

The universal software radio peripheral (USRP) is preferred to perform the hardware analysis of the proposed encryption scheme. It is called a system defined software radio, where high-speed USB or Gigabit Ethernet is used to connect computers for the transmission and reception of packet data. In this testing, the encrypted images were converted into a 1D array using Laboratory Virtual Instrumentation Engineering Workbench (LabVIEW) functional blocks. The converted streams were transmitted and received using USRP. LabVIEW is a simulation platform that can be used for instrumentation control, acquisition and the automation of data. It involves data flow programming and graphical programming and uses a programming language called G, where the pipelining of data is possible. It has different functional nodes that are connected via a wire and depends on the logical execution of the program. The conversion of encrypted images into a 1D array is depicted in 
                        Fig. 3.

To prove the robustness of the proposed scheme, the correlation coefficient, NPCR, UACI, histogram tests and entropy have been estimated and are better than the existing algorithms [44,45] as given in Table 1. Then, the pixel distribution between the original and encrypted images considering the horizontal, vertical and diagonal directions are plotted and infer that the pixels are uniformly distributed over the entire region, which escapes from the intruders’ suspicion. The histogram tests of the encrypted image showed a homogenous distribution of intensities, which stands as an arduous task for hackers to decipher [44,45]. Attacks have been performed by randomly cropping 25% to 50% of all of the encrypted images, and the estimated NPCR value of 99.6% confirmed the robustness of the proposed scheme. Additionally, channel attacks were performed while transmitting and receiving the encrypted images by considering the AWGN channel.

@&#RESULTS AND DISCUSSION@&#

Three stages of the encryption schemes have been performed by considering five DICOM test images as shown in Fig. 2. 
                     Fig. 4a represents the original test image (A), Fig. 4b shows the LSIC output of Fig. 4a, Fig. 4c graphs the histogram of Fig. 4a, and Fig. 4d displays the Gould transformed output of Fig. 4b. Finally, Fig. 4e represents the final encrypted Rubik’s output image of Fig. 4d, and Fig. 4f shows the histogram of Fig. 4e. Similarly, 
                     Fig. 5a–f represents the results of all of the steps of the proposed algorithm for the original test image (B).

From the histogram of the final encrypted images, the pixel distribution was uniform, has a homogenous variation and is hence hard to crack by hackers.

Correlation distributions of adjacent pixels are shown in 
                     
                     
                     Figs. 6 and b, 7a and b and 8a and b. From Figs. 6
                     a, 
                     7a and 8a, one can observe that the adjacent pixels are highly correlated, and the correlation coefficient values are very high for the original images as in [44,45]. However, Figs. 6b, 7b and 8b reveal the absolute statistical dissimilarity between the original and encrypted images. In the present work, the estimated correlation values for the encrypted image were very minimal and are given in Table 1. The negative horizontal, vertical and diagonal values confirmed the smallest correlation between the original and encrypted images. The estimated correlation values have also been compared with the existing results [44,45] and are dominating.

The metrics are displayed in Table 1 and are compared with the available literature [44,45].

Key space represents the total number of distinct keys that can be used in encryption and decryption algorithms [36,37,45,46]. A 256-bit key was used in the LSIC algorithm and a 5-bit key in Rubik’s encryption principle. The total key size for an 8-bit pixel is 256×5×8=10,240, and hence, the key space of the proposed system is 210240, which makes any brute force attack fail to determine the secret key. The key space of the proposed scheme is found better than the existing results [36,37].

Key sensitivity is primarily dependent on the algorithm used for encryption and decryption [ 36, 37]. The original image shown in 
                        Fig. 9a was encrypted by employing a secret encryption key – “dv@#fg9⁎$%try>89!45dg&udvfgtr2Az”, and the encrypted output is shown in Fig. 9b. Following this, decryption was performed using the correct key, which resulted in a decrypted image as shown in Fig. 9c. To verify the effectiveness of the implementation, the correct secret key was modified by changing only one character for the least significant character as given: “dv@#fg9⁎$%try>89!45dg&udvfgtr2Aa”. The resulting decrypted image is shown in Fig. 9d, and this test revealed the key sensitivity of the proposed algorithm and the sensitivity is found to be better than the available schemes [36,37].

To justify the robustness of the proposed methodology, a cropping attack was made on the encrypted image by deleting one or more sections. 
                        Fig. 10a and b represents the 25% cropped encrypted images of test images A and B. Fig. 10c and d represents the random cropped encrypted test images A and B. Fig. 10e–h shows the corresponding decrypted images. From this cropping attack, it is proven that one can recover the original image even after cropping the encrypted image up to 50%.


                        
                        Fig. 11 depicts the NPCR values for different encrypted test images, considering cropping attacks at the edges, centre and randomly. Test image c showed more resistant towards cropping attacks compared to other images. It is also noted that even after cropping at various levels, the value was well maintained above 97, which confirmed the sternness of the proposed scheme.

AWGN is a basic channel noise model used in any information system considering randomness. In the proposed work, an encrypted image was transmitted over an AWGN channel noise model at various noise levels ranging from 0 to 25dB. 
                        Fig. 12 provides the NPCR values for various images considering the AWGN channel. One can observe the sternness of test image (B) against AWGN channel attacks, while test image (D) was affected very severely. From the NPCR values, it has also been validated that one can decrypt the original image even after channel attacks.

The front panel output of the converted 1D array for the final encrypted image to be transceived using the USRP kit is shown in 
                        Fig. 13.

The converted 1D array from the LabVIEW block was transmitted and received as a text packet through USRP 2920 using the TX1 and RX2 terminals, respectively, as shown in 
                        Fig. 14 with the following configuration:
                           
                              –
                              Host Ethernet Interface static IP address – 192.168.11.1.
                              

Host Ethernet Interface subnet IP address – 255.255.255.0.
                              

Default USRP device IP address – 192.168.11.2.
                              

Transmitter and receiver frequency – 2.2GHz.
                              

The green LEDs on the front panel of the USRP clearly display the transmission (LED A) and reception (LED C) completion status. 
                        Fig. 15a and b shows the transmission and reception of the converted 1D array for the encrypted image as a data packet.

The proposed methodology involves three stages, namely LSIC, DGT and Rubik’s encryption schemes. LSIC involves two keys, key1 of size 10-bit and key2 of size 5-bit, and it involves nine iterations. Similarly, a 256-bit key and 8 iterations were used for DGT. Finally, for Rubik’s encryption, the input image size will be taken as key1 and key2 and has 5bits. So, the complexity of the proposed scheme is 210×25×9×2256×8×25×8.

@&#CONCLUSION@&#

A tri-layer image encryption technique was proposed and successfully implemented on both software and hardware platforms. LSIC, DGT and Rubik’s encryption operations on the host image yielded efficiently encrypted data, which resulted in better confusion, diffusion, permutation, tamper proofing and authentication. Then, the technique was also tested by estimating the image quality metrics. Additionally, the developed algorithm was implemented in MATLAB 7 and the USRP environment, and the attack analysis was performed by introducing random cropping and by using the AWGN channel noise model. The validated results and the computed image quality metrics were compared with the results available in the literature. The proposed methodology proved to be a secure and efficient algorithm for medical image transmission and reception. It may be applied to enhance security features by incorporating the quick response (QR) codes for the patient details in the encrypted images.

The authors of the paper do not have a direct financial relation with the commercial identity mentioned in this paper that might lead to a conflict of interests for any of the authors and declare that there is no conflict of interests regarding the publication of this paper.

@&#ACKNOWLEDGEMENTS@&#

Authors would like to express their sincere thanks to SASTRA University, for the financial support under R&M fund (R&M/0027/SEEE – 010/2012–13) to carry out this research work. Also we are grateful to Dr. S. Vanoli, Medical Superintendent, Government Hospital, Ariyalur, for his valuable suggestions in carrying out this work.

@&#REFERENCES@&#

