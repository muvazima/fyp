@&#MAIN-TITLE@&#An ontology for ISO software engineering standards: 1) Creating the infrastructure

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose an ontological framework to unify ISO software engineering standards.


                        
                        
                           
                           A comprehensive foundational ontology is proposed: definitional elements ontology.


                        
                        
                           
                           We discuss how DEO is tailored to a project-specific foundational ontology (a CDO).


                        
                        
                           
                           Many standards are examples of standard domain ontology (SDO) conformant to the CDO.


                        
                        
                           
                           We explain how this ontological architecture is created and maintained within SC7.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Conceptual modeling

International standards

Ontologies

@&#ABSTRACT@&#


               
               
                  Software engineering standards developed under the auspices of ISO/IEC JTC1's SC7 have been identified as employing terms whose definitions vary significantly between standards. This led to a request in 2012 to investigate the creation of an ontological infrastructure that aims to be a single coherent underpinning for all SC7 standards, present and future. Here, we develop that necessary infrastructure prior to its adoption by SC7 and its implementation (likely 2014). The proposal described here requires, firstly, the identification of a single comprehensive set of definitions, the definitional elements ontology (DEO). For the scope of an individual standard, only a subset of these definitional elements will be needed. Once configured, this definitional subset creates a configured definitional ontology or CDO. Both the DEO and the CDO are essentially foundational ontologies from which a domain-specific ontology known as a SDO or standard domain ontology can be created. Consequently, all such SDOs are conformant to a CDO and hence to the single DEO thus ensuring that all standards use the same ontological base. Standards developed in this fashion will therefore be not only of a higher quality but also, importantly, interoperable.
               
            

@&#INTRODUCTION@&#

The International Organization for Standardization (ISO), based in Geneva, is responsible for the creation and maintenance of a large suite of international standards (IS) and technical reports (TR) for software engineering (SE). However, the semantics of the terms used in these various SE standards can often be contradictory, or at best misaligned, across pairs of similarly-focussed standards. For example, within the SC7 (the sub-committee responsible for software engineering standards) community, Rout [1] analyzed a number of standards, term by term, identifying by number the standards in which these terms appear together with their (disparate) definitions. Other ISO work, outside of SC7, has led to the publication of ISO 704,
                        1
                     
                     
                        1
                        All ISO standards cited are listed separately at the end of the paper.
                      currently in its third edition (2009): “Terminology work — principles and methods”.

The early 2000s saw SC7 standards being developed increasingly in ‘stovepipes’, leading to the realization that these various standards need to be consistent with each other in terms of terminology, structure and semantics, resulting in significant discussions between working groups (WG) within SC7 to resolve terminology differences e.g. WG6 and WG13 needed to resolve ‘metric’ and ‘measure’ e.g. see discussion in [2]. On a larger scale, initial conceptual differences, possibly among other things, led to quite different process standards for software (ISO/IEC 12207) and systems (ISO/IEC 15288). More recently, SC7 (notably WG7) has attempted to reconcile definitions within a harmonization project to align ISO/IEC 12207 and ISO/IEC 15288, requiring considerable effort (see also [3]). Also over the last several years, a new International Standard (ISO/IEC 24744) has been created specifically to create a set of definitions of process-focussed terms and their interrelationships, effectively creating a foundational ontology [4].

At the beginning of 2012, McBride et al. [5] produced a document for the 2012 SC7 Plenary meeting (Korea) entitled “The growing need for alignment” (also as a PowerPoint™ presentation to the Strategic Planning meeting of SC7 on 19–20 May 2012). The themes presented there included:
                        
                           •
                           Increasing recognition that standards are becoming multi-disciplinary and that there is no guidance for a new team when building a standard to ensure it is compatible with other SC7 standards. They need guidance for “What kind of standard do you want to develop”, especially, guidance about the type, purpose and applicability.

Clashes of terminology and subtle clashes in semantics observed in current standards.

The recent impacts on software engineering standards due to the enactment of external legislation such as Sarbanes–Oxley Act [6].

These factors suggest that:
                        
                           •
                           There is a need to move from serendipitous knowledge of such problems to organizational (SC7-level) solutions.

Each standard should be tightly focussed e.g. requirement standards are different from guidance standards.

An ontology/taxonomy should be produced, in particular using ISO 704:2009 — Terminology work — principles and methods.

Resulting from the discussion of these proposals at the May 2012 meeting of SC7, a study group was created, chaired by the first author of this paper and charged with investigating the potential utility of ontologies for rationalizing SC7's suite of software engineering International Standards.

SC7 is not alone in addressing concerns on non-interoperability [7]. Almost any successful organization will gradually introduce more products and eventually face the need to rationalize them in order to present potential customers with a suite of products that can work together and that do not contradict or compete with each other unnecessarily. Organizations also find it necessary to rationalize their production methods in order to avoid supporting unique development and production methods, tools and infrastructure. For SC7, a rationalized product set is more important than rationalized production methods. Even so, JTC1 (Joint Technical Committee 1) has found it necessary to impose a template standard, a standard form for ballot comments and a uniform balloting system.

Like all products, standards are frequently used in combinations. Organizations want to use high level standards for systems development, for example, along with standards that expand on specific processes such as software maintenance or risk management. Organizations also want to combine standards from different sources; quality management with software development or CoBIT with software development and related processes. Harmonious combination of standards is aided when the standards start with consistent concepts and terms. This is not significantly different from organizations sourcing product components from different suppliers. They too need agreements on the basics like voltages, measurement scales, thread types and screw sizes.

Muddling through, resolving conceptual differences as they are noticed will not suffice in a future where standards are used in combinations, sometimes from disparate sources.

Software, systems, IT Service management, and IT governance are all sufficiently different domain that considerable effort is needed to avoid mutual misunderstanding of fundamental concepts. That there is now considerable effort being made to split the “management” related standards off into another JTC1 committee argues that this effort was either not made or was insufficient. Splitting into another JTC1 committee will not solve the problem of mutual misunderstanding but will increase the difficulty of developing standards that can work together.

SC7 needs to manage its strategic direction, as does any organization. The clarity and effectiveness of that strategy depends, in part, on how clearly the conceptual foundations of the different families of standards are articulated, how well the relationships are understood between those families to other standards within SC7 and standards external to SC7. This is much easier to achieve when the concepts and terminology are universally agreed.

In this paper, which offers a significant extension to the ideas proffered in [8], we present the research-oriented results of the material evaluated by the members of this study group and the proposal that was made to the SC7 overseeing committee (SWG5) at the SC7 Plenary meeting in Montréal in May 2013 and the subsequent revisions to create its “Second Report” (circulated to committee members July 2013). At that May 2013 plenary meeting, further work was also commissioned by SWG5 in order to create a work plan prior to the development of the first report into a new work item proposal (NWIP) at the next international SC7 meeting.

Our overall hypothesis is simply that SC7 standards, as an interdependent suite of artifacts, could benefit by the application of conceptual modeling and ontological organization.

In summary, the problems to be addressed in this paper and the proposed solutions adopted by the study group and SWG5 are:
                        
                           (i)
                           construction of clear, unambiguous and comprehensive definitions of all SC7 terminology;

conformance of existing and new standards to this agreed ontological description of terminology;

categorization of existing standards and their relationship to (i) and (ii).

The approach taken is that of a combination of conceptual modeling e.g. [9] and ontology engineering e.g. [10]. In Section 2 of this paper, we first identify from the research literature five possible flavors of ‘ontology’ that might be usefully transformed into SC7 standards i.e. research-underpinned technology transfer (each of these five being discussed in detail in five subsections). Section 3 discusses how these ideas might be implemented in the context of ISO's SC7 committee and its request in May 2013 for a detailed work plan. Section 4 discusses how this proposal can be maintained in future years and its influence on how new standards will need to be developed; while Section 4 gives both our recommendations (made to SC7) together with our overall conclusions.

SC7 already has a vocabulary (ISO/IEC 24765 SEVOCAB), a definition of process (TR 24774), several process reference models (ISO 12207, ISO 15288, ISO 19770-1, ISO 29119-2, ISO 20000-4) and several detailed processes (ISO 14764, ISO 16085, ISO 15939, etc.). In the example shown in Fig. 1
                        , TR 24774 is specified using terms defined in the ISO vocabulary. SC7 process reference model standards, e.g. ISO 12207, ISO 15288, and ISO 19770-1, define or describe processes using the terms and structure defined in TR 24774 and there are several standards, of which ISO 15939 is an example, that are an expanded description of a process used in or referenced in SC7 process reference models, e.g. ISO/IEC 15939. This structure has simply emerged, illustrating that a hierarchy of concepts, configured concepts, standards based on those definitions and instantiations of those defined processes seems a natural thing to do.

ISO 24765 (SEVOCAB) was not intended to be a collection of precise definitions, simply a collecting together of existing definitions. Yet SC7 needs to know which definitions should apply in its domain. Additionally, SC7 needs a way to adopt a precise definition to the particular circumstances. For example, a process may be defined as “set of interrelated or interacting activities that transforms inputs into outputs” but that definition needs to extend to other attributes of processes in order to accommodate the interests of process assessment.

TR 24774 has guidelines for process descriptions that do not try to include every conceivable interest in processes. So far, TR 24774 accommodates process performance (e.g. ISO 15288) and process assessment (ISO 15504/33002) but not process governance. Nor should it. These divergent needs will come with time and might extend TR 24774 or might result in another set of guidelines for process description. In either case, there needs to be consensus about just what a process is, and precisely what the different attributes of a process are.

The hierarchy exists but the problems described earlier attest to its limitations.

Secondly, SC7 is increasingly being presented with PASs (publicly accepted standards), many from the object management group (OMG). Yet, there is no guarantee that the vocabulary (and ontology) utilized in a PAS will be consistent with that of SC7. For example, Fig. 2
                         contrasts the implicit definitions of terms in OMG's SPEM standard (Software Process Engineering Metamodel: [11]) and similarly focussed standards of SC7 (see also discussion of this diagram in [12]). It is clearly seen that these are different across both SPEM and the process-focussed standards of SC7.

In order to develop an appropriate and ontologically valid infrastructure to underpin all of SC7's SE standards, we first identified five distinct areas where conceptual modeling and ontologies might be helpful for reorganizing SC7 standards. It is important to note that these five areas relate to different domains, as illustrated in Fig. 3
                     : (i) the definitional domain (ontologies A, B and E below), such ontologies are often called foundational ontologies or upper-level ontologies [14,15]; (ii) the modeling domain (ontologies C and D); and (iii) the practice domain — wherein practice-based ontologies are the enactment of a process-focussed ontology from the modeling domain. Note that in Fig. 3, some existing SC7 standards have been tentatively allocated to these different domains.

We now consider each of these 5 originally proposed areas in detail.
                        
                           (A)
                           ‘Definitional elements ontology’ (DEO): although not an ontology in the strictest sense, the DEO provides definitions of individual concepts/terms, together with constraints that dictate how they must be related and hence configured in some future definitional standard (see below). At present, SC7 relies on each working group defining the terms it needs. The SC7 vocabulary (ISO 24765) is a collection of terms from SC7 standards that are frequently duplicated but slightly different in expression or meaning and has been identified as a valuable input to creating the standardized DEO together with the metamodel/ontology for software engineering specified in ISO/IEC 24744 (itself currently a domain-specific CDO — see below).

‘Configured definitional ontology’ (CDO): a specific configuration of the elements in the DEO — either as a standalone standard (à la ISO/IEC 24744) or as an intermediate template for the creation of a ‘standard domain ontology’ (Type C — see below) a.k.a. an International Standard (IS). A CDO gives structure and order to the concepts used and necessary in a specific domain. For example, ISO/IEC 15504 needs to define a process in terms of its purpose and outcomes. Without those two concepts, process assessment could not be consistent or rigorous. It happens that processes within SC7 are comprised of more than their purpose and outcomes and, as the impact of other domains becomes evident within SC7, a larger configured definitional ontology becomes more important. An example of such an ‘other domain’ is that of governance. The requirements for auditable governance will emerge over time and these, like that of quality, will introduce new activities, new work products, and possibly new relationships between different processes. All of these may throw up new concepts that need to be evaluated for possible addition to the DEO.

A CDO could itself be standardized within SC7 (the only example to date being ISO/IEC 24744). However, it is more common in SC7 to standardize an instance of a CDO. Since CDOs consist of concepts, an instance of a CDO would be composed of occurrences of these concepts; the latter being an SDO (see below). For example, a CDO may contain the Task concept, for which sample instances might be “Unit test Java class” and “Write use case” (as seen, for instance, in ISO/IEC 12207).

‘Standard domain ontology’ (SDO): a number of instances conforming to the CDO template. These follow a specific configuration as determined by the CDO. A standard domain ontology is highly specific to one particular situation e.g. process management, services, and governance (à la ISO/IEC 12207, which is a SDO that is a ‘process model’ for the domain of processes, activities and tasks). A number of SC7 working groups are developing process reference models, e.g. ISO/IEC 19770-1 (Asset management), ISO/IEC/IEEE DIS 29119-2 (Software Testing), and ISO/IEC TR 20000-4 (Service management).

‘Standards relationship diagram’ (SRD): a relationship diagram showing how current and future SC7 standards could and should be linked. Such a diagram is in effect an ‘ontology of ontologies’. The construction of such a diagram would rely on identification of the ontological underpinnings at the cross-standard level of detail. In other words, when we become able to view standards (or at least their conceptual core) as ontologies, we can use well-known ontology mapping techniques to create an SRD. It shows relationships between ontologies and was initially proposed as a valuable tool for creating a coherent suite of SC7 standards. In the revised report, it was realized that it would serve better as input rather than output (see below).

(more futuristic) ‘Advanced foundational ontology for standards’ (AFOS): an extended formalism to the definitional elements ontology in terms of standard concepts from the ontological engineering literature, such as sortals and moments [16,17,12]. [These concepts are important in the context of work products and, in particular, modeling languages (SC7 WG19's remit). For example, future versions of UML (ISO/IEC 19505) and UML for RMODP (ISO/IEC 19793) are two standards that will be impacted. Whether they can be also applied to process-focussed standards is less obvious.]

The interconnections between these five suggested ‘ontologies’ are depicted graphically in Fig. 4
                     . The core of the proposal is the creation, in the “definitions layer” of the DEO and particular configurations of subsets: CDOs. From each CDO (only one is shown in Fig. 4), one or more ‘instance(s)’ or SDO(s) can be created, conformant to the concepts in the CDO. Each of these will be published as an ISO International Standard (IS) or Technical Report (TR). International ISO/SC7 documentation will also include the SRD as a visual depiction of how these various SDOs are interconnected. Finally, a future extension to the definitional DEO by the addition of foundational ontological concepts will be explored.

After receiving feedback in May 2013 following our presentation to SWG5 and other working groups at the SC7 Plenary in Montréal, it was decided that a better structure would be to focus on the DEO and the derived CDOs. SDOs are then identified simply as being the suite of International Standards conformant to the CDOs.

In the following subsections we describe the original ideas and illustrate how they were later refined to a more compact and more “saleable” infrastructure — engendering adoption of the ontological structure by all working groups in SC7 is a socio-political challenge not a technical one (and therefore such issues are out of scope for this paper describing the technicalities of the proposed ontological infrastructure).

As noted above, Rout [1] outlines the problem of conflicting definitions within SC7 standards. He notes that at the time of his survey (granted now more than a decade ago) 198 of the 864 definitions he found in SC7 standards were duplicate or overlapping terms and that there were a large number of definitions that needed alignment i.e. slight differences in definitions for apparently the same (key) concept e.g. process, service, system, and life cycle.

One highly visible and challenging definition that is urgently needed in order to ensure that SC7 standards are both internally consistent and consistent with other industry usage is that of ‘method’ versus ‘process’. SC7 standards prefer the word ‘process’ rather than ‘method’; whereas in other software engineering and information systems disciplines, ‘method’ (a.k.a. ‘methodology’) has prominence. Whether this terminological difference entails an underlying conceptual difference is debatable. The underlying rationale is that there are three predominant areas of interest to software engineering and information systems development: work products (e.g. documents, applications), work units (e.g. activities, tasks) and producers (people and tools). Producers execute work units to create/modify work products. ‘Method’ or ‘methodology’ is usually seen as the combination of these three realms, whereas ‘process’ is understood to refer to work units only (see e.g. clause 3.2 of ISO/IEC 24744).

For widespread adoption of SC7 standards, a single framework that both defines ‘process’ and ‘method’ and relates them to each other and to commonly used terms such as ‘process model’ and ‘process reference model’ is vital. Fig. 5
                         offers one such compromise [18] in which ‘method’ is equated to ‘process model’ and ‘process’ is used for the enactment of that process model. Note that this is not in agreement with current usage in standards such as ISO/IEC 12207, which uses the term ‘process’ to mean an element in the process model of Fig. 5. As an alternative and to achieve better conformance, SC7 might consider retaining the use of the term ‘process’ to mean an element in a process model but then relabel the idea of a process (or process model or method) when it is enacted on a real project as something other than ‘process’ (as is currently shown in Fig. 5).

More recently, SC7 (notably Working Group 7) has attempted to reconcile definitions within the harmonization project to align ISO/IEC 12207 and ISO/IEC 15288. Also over the last several years, a new International Standard, ISO/IEC 24744, has been specifically developed to create a set of definitions of method-focussed terms and their interrelationships, effectively creating an upper level ontology (an example of a CDO — see Section 2.2) that can be used for the creation of instances of the elements in the CDO that, together, constitute a method(ology) or process model (Fig. 5) and a process reference model (examples of an SDO).

The proposal for the definitional elements ontology (DEO) is that each definition (concept) adheres to a pre-determined template adhering to a given specification, which includes a name, a definition, and a set of properties. One possibility (just as an example) could be that shown in Fig. 6
                        . The upper part of this figure is the template for the concept with an example (here for the concept of Process) in the lower part. The collection of all the ‘definitional standards elements’ forms an interconnected network — the DEO.

The concepts in the DEO will be taken from a combination of several existing ISO sources:
                           
                              •
                              ISO/IEC 24765 (SEVOCAB), which will be used to make sure that the concepts in the DEO are abstract enough to cater for the needs of all SC7 Working Groups.

ISO/IEC 24744 (SEMDM), which will be used as the basis for an ontology for software engineering [4].

These two major sources will be augmented with concepts from additional sources. Since ISO/IEC 24765 (SEVOCAB) already takes into account concepts (and definitions) from a large number of standards and technical reports, it is only necessary to examine those additional sources that are not explicitly treated by SEVOCAB. Study group members have identified these additional sources as follows.


                        Figs. 7 and 8
                        
                         have been obtained from SC7 sources and have provided a list of 116 source documents. Most of these were used as input to create SEVOCAB. Some standards that are not thus included – and hence we recommend for consideration – are ISO/IEC 15437, 18152, 18529, 24773, 24774, 29148 and 42010. In addition, we have identified 11 documents in development (Table 1
                        ). There are also a small number of documents that may or may not be useful in this project; these are listed in Table 2
                        . These elements are elicited from those in the “Terminology” section of these standards. In addition, some standards (one in particular: ISO/IEC 24744) has at its core a number of additional conceptual definitions. For each of the 69 concepts in ISO/IEC 24744 SEMDM, there might be up to 7 corresponding definitions in ISO/IEC 24765 SEVOCAB. Rationalizing these multiple definitions could take, on average, several hours for each term. Thus the new work-plan (to be delivered in November 2013) will include an overall estimate of the likely effort involved in implementing the research ideas described here.

Necessarily, the DEO is highly abstract, in order to guarantee that it covers everything under the scope of SC7. Therefore, the DEO cannot be utilized without change for all standards. Rather, it needs to be tailored to the specific needs of each working group or standard.

In addition, it might be decided to split such an enhanced document into two: a definitional (DEO) document (or part thereof) plus a Technical Report that gives advice on how to write descriptions successfully.

The specifics of the tailoring mechanism are given in the next section (especially Section 2.2).

The DEO is an infrastructure that allows for the integration of the individual CDOs. The DEO is a collection of definitions of individual concepts and terms, together with constraints dictating how they may be configured. Among other things, these constraints help to resolve the twin problems of a) same concept, different terms and b) same terms, different concepts.

As an ontology, the DEO focuses on structure in a specific domain rather than being a mere list of terms in that domain (as in ISO/IEC 24765). Also, the DEO is built for extension and reuse, so that CDOs can be constructed. At present, SC7 relies on each working group defining the terms it needs. The SC7 vocabulary (ISO 24765) is a collection of terms from SC7 standards that are frequently duplicated but slightly different in expression or meaning. It is not an ontology.

In summary, the definitional elements ontology is proposed as the cornerstone for the creation of future standards (right hand side of Fig. 3). This can be done in one of two ways: either a direct configuring of the elements in the definitional elements ontology to create a configured definitional ontology (Section 2.2) or by deriving a number of instances of several of the definitions in the definitional elements ntology to create an International Standard or Technical Report (Section 2.3).

The research methodology is thus to identify core concepts from these two main sources (ISO/IEC 24765 and 24744) and to abstract away to a core definition from which all the other definitions can be derived in their individual CDOs. Although the elements in the DEO are well connected, zero-to-many cardinalities on certain relationships permit ‘pruning’ of the DEO when it is necessary to create a tailored and more specific standard. Such tailored standards may be the set of standards within a single working group that therefore all use the same configuration (CDO) or within a working group as a “family” of standards (see Fig. 10 below) or at the individual standard level.

A ‘configured definitional ontology’ can be created by selecting a number of the definitional standards fragments in the DEO and configuring them into a complete upper level ontology (the CDO). A CDO is created by using a combination of the two following mechanisms:
                           
                              •
                              Discarding areas of the DEO that are not relevant.

Adding new concepts, as refinements of those in the DEO.

These two mechanisms are illustrated in Fig. 9
                         and described in detailed in the two subsections below.

Although the elements in the DEO are all interconnected, associations between two concepts may have a cardinality of zero; this means that for any occurrence of the concept on one side of the association, there may be multiple or no occurrences on the opposite side. For example, Fig. 9 shows concepts Process and Producer plus an association between them with a zero-to-many cardinality on the Process side. This means that any particular producer (such as software developer Jane) may have no processes at all. For this reason, a project focussing on modeling producers could legitimately discard the Process concept altogether and use only the Producer concept. However, a project focussing on processes could not discard the Producer concept, since every possible process occurrence would need at least an associated producer.

As well as discarding unwanted sections of the DEO, new concepts can be introduced into a CDO if necessary. This is often the case when specialized definitions are needed that are not present in the abstract DEO.

It is a necessary restriction that an introduced concept may not contradict an existing concept. Instead, newly added concepts are introduced by refining an existing concept in the DEO through specialization. This means that the newly introduced concept must be semantically “a kind of” the base concept. For example, Fig. 9 shows Team as a specialized concept that has been introduced as a kind of Producer.

CDOs are always created in a particular context, which determines the relevant set of concepts. This context may be a working group, a family of standards, or even a particular standard. Fig. 10
                            shows how the DEO is tailored to two different SC7 working groups by creating two CDOs through the mechanisms described above. In turn, one of these CDOs is depicted as being further refined into a suite of CDOs that are specific for families of standards within that working group. And then again, these are refined into standard-specific CDOs.

In the chain of CDOs, detail is added gradually so that only the concepts that are relevant to a particular context (either a working group, a family of standards or a single standard) are included. Care must be taken so that under- or over-specification is avoided.

The structure shown in Fig. 10 is just an example; there is no need to use every level shown. For example, a CDO for a particular standard could derive directly from the DEO.

This chaining mechanism ensures that each working group retains ownership of its own set of concepts, while:
                              
                                 •
                                 Maintaining the interoperability with other working groups through the shared DEO.

Permitting individual standards to refine these concepts into more specific ones.

Although ISO/IEC 24744 is a major source for the creation of the DEO, the DEO, once constructed, will be more abstract and therefore have less detail than the current IS/IEC 24744. The current International Standard is thus retained in its current form, which is therefore an example of a CDO (Fig. 11
                           ). Unlike ISO/IEC 24774, it does not, on purpose, offer any guidelines on writing these. Thus, again, we recommend the distinction between (i) an International Standard that offers definitions (DEO) together with a configuration (turning the DEO into a CDO) and (ii) a Technical Report that offers advice on writing the elements in that CDO.

Strictly speaking, an SDO is not a single ontology but a suite of domain ontologies, each targetted at a particular IT domain of interest. An SDO becomes the core of an International Standard (or a TR). It is important to discriminate between the definitions (in the definitional domain — the DEO and the CDO: foundational ontologies) as compared to examples (instances) of those definitions (in the modeling domain, a domain ontology — as outlined in this section).

In any SDO, it is likely that only a small subset of the definitions in the DEO repository would be needed. For example, in a process-focussed standard such as ISO/IEC 12207, it may only be necessary to utilize definitions for, say, Process, Activity, Task (Fig. 12
                        ) and their inter-relationships, which provide the template for the creation of instances of these definitions that are then put together as a configured definitional ontology (CDO), wherein each 12207 ‘process’ (here, the Training Process (Fig. 13
                        ) is just one example) can be assessed for conformance to the definition of Process given in the DEO — or CDO if a CDO is used. In other words, a check that all the elements of the new standard (an SDO) are predetermined by the definition of ‘Process’ in the CDO (e.g. as in Fig. 12), this definition having been selected from all the elements in the DEO.

Thus, standards that offer a ‘process model’ or a ‘process reference model’ are in the realm of the SDO. Examples of SDOs in current SC7 standards are ISO/IEC 12207, 15504 and 15288.

Originally, it was proposed to create a standards relationship diagram (SRD) as a domain ontology of these produced standards. One example is depicted in Fig. 8, which shows how standards are inter-related as a dependency network diagram or social network of standards. Since each standard normally lists other normative standards or related standards, these relationships can be plotted here using UCINET as a social network. Fig. 8 shows which standards are affected by revisions to any one other standard. For example, if ISO/IEC 12207 changes, which standards are affected? Social networks are good for illustrating such questions. However, in May 2013 it was realized that such an SRD could more usefully be regarded as an input, not an output, to this project (as noted above in Section 2) since with the revised DEO/CDO structure, influence connections are “upward” via the DEO, not “sideways” as in Fig. 8.

Categorization of standards is consequently required; for example, SC7 categories of Governance, Foundation, Body of Knowledge (BOK), Life Cycle, Assessment & Certification, Product, Process and Tools & Methods. These categories are also assumed in a 2013 proposal to create an up-to-date revision of ISO/IEC TR 12182 Information Technology — Categorization of Software — 1998.

Particularly in the domain of modeling languages, it has been pointed out in the literature [12,19] that the finest grained concepts in a DEO (often expressed as a metamodel as in ISO/IEC 19505) are in fact coarse and ignore much of the literature in ontology engineering. There have thus been suggestions to extend the metamodel defining a modeling language like UML, as suggested in Fig. 14
                        .

An advanced foundational ontology for standards (AFOS) is predominantly useful for more sophisticated conceptual modeling and is relevant to product-focussed standards, several of which are OMG-adopted standards, such as ISO/IEC 19505 (UML).

These ideas are readily implementable. The first implementation step is to identify and agree upon definitions of a wide variety of concepts used in software engineering. These constitute the DEO (definitional elements ontology). As noted above, the DEO definitions will need to be collected from various sources: ISO standards 24744 and 24765, supplemented by those ISO standards not contributing to ISO/IEC 24765.

The importance of having a DEO applicable to all SC7 standards can be demonstrated by consideration of what happens when a NWI proposes a standard in a ‘new’ domain. Advocates of this new domain standard are likely to have different tacit understanding of the terms they use. It is thus critical that a first step is to evaluate the definitions (semantics) of all terminology in the proposed new domain and to ensure it is compatible with the SC7 DEO. In some circumstances, for example when brand new technologies arise, there may be a need to add extra elements to the DEO but this should be done carefully to ensure they are well defined and there are no clashes (contradictions or overlaps) with existing DEO definitions. In other cases, synonym mappings may be usefully identified in order to retain consistency in both the domain-specific standard (thus Working Groups retain ‘ownership’) and also the coherence of the elements in the DEO.

Another important benefit of the proposed approach is that, as explained above and thanks to the CDO chaining mechanism, each working group continues to own the concepts and terms that it introduces but with the obligation that these concepts and terms conform to (either directly or via refinement) concepts in the DEO. Once a concept is in the DEO, a working group can use synonyms of the terms or refinements of the concepts in their work as they see fit.

It is an important recommendation that the route of a single comprehensive DEO MUST be taken. While apparently cumbersome, it is easy to select only relevant parts of such an International Standard when creating a CDO or an SDO for instance. Techniques have been explored by e.g. [20,21]; see also [22]. This is known as SMME (situational metamodel engineering), and closely parallels the ideas of situational method engineering e.g. [23].

It is vital to avoid the route of multiple independent CDOs, since this mimics the diversity (and incompatibilities) identified in the current suite of SC7 standards.

To create an SDO (Fig. 15
                     ), it is necessary first to delineate (i.e. scope) the area of interest (e.g. process, services, governance) and then identify the concepts relevant to this area of interest. Then the standards developer needs either (i) to identify in the DEO repository those definitions that will support the new standard and then create an interim configuration analogous to a CDO (an interim work product) or (ii) select an existing International Standard (a CDO) that already covers the domain of interest.

In both cases, the SDO then consists of several instances conformant to each element in the CDO just created (case i) or identified (case ii). An example has been shown in Fig. 12 (lower part).

Strictly speaking an SRD simply documents the existing situation, visualized differently. With contemporary search tools, such links and commonalities are easily obtained.

Currently, inter-standards dependencies rely on the standards writing identifying, in words, ‘those standards that may need to be changed consequent on a change in this standard’. While Fig. 8 illustrates a dependency diagram constructed as a result of this kind of cross referencing, a true (and more useful) SRD will seek/identify links at a much finer granularity. For example, we could identify the use of ‘Task’ in ISO/IEC 12207 (Fig. 12) and, using ontology matching techniques e.g. [24], attempt a match with ‘Task’ in ISO/IEC 24744 and in ISO/IEC 24774 (wherein both words appear). In other words, these dependencies can be fully automated via a database that contains all DEO elements and list of all the SC7 standards that refer to these DEO elements/relationships. Once the DEO has been standardized (as an IS), then the current Terminology sections of all SC7 standards is replaced by a statement of how the standard conforms to the DEO.

Typically, a domain ontology is a structured hierarchy showing how various elements are defined with respect to other elements. In order for this to be feasible, characteristics of the overall standard need to be addressed i.e. there needs to be a definitional template for each category of standard. This has been acknowledged already in ISO documents as in [25]. This document suggests several templates depending upon the categorization of the standard.

Another validation exercise involves investigating the practical use to which ISO standards have been previously put, using documented case studies. Some examples include the creation of a Spanish maturity model based on ISO standards [26], the application of ISO/IEC 24744 to traceability [27] and the utilization of RM-ODP, ISO/IEC 10746 [28] to intelligent transport systems [29]. These case studies will be used to evaluate whether the proposed revisions to SC7 standards will still permit (i.e. can replicate) these specific application areas.

Once the DEO has been standardized as either an International Standard or a Technical Report within SC7, three processes begin in parallel:
                        
                           •
                           The DEO is maintained on a continuous basis.

Existing standards get reconciled against the DEO.

New standards will need to be aligned to the DEO.

Although the DEO will be a standard and therefore should be relatively stable over a period of years, it is inevitable that, eventually, changes will need to be introduced. It is recommended that SWG5 take responsibility for maintaining the DEO, incorporating the changes that they see fit from feedback obtained, either proactively or reactively, from the different working groups in SC7.

We are aware that altering existing standards to conform to the DEO may entail a significant amount of work in some cases. It is recommended that existing SC7 standards are considered for DEO reconciliation whenever they become open for periodical review. The owner working group should be responsible for this task.

Reconciliation entails re-describing the standard as a CDO and, if necessary, a collection of occurrences of said CDO. If the focus of standard is the occurrences of concepts (e.g. ISO/IEC 12207), then an explicit CDO is still necessary as part of the reconciled version in order to document the semantics of said occurrences.

In any case, reconciling a standard with the DEO would only mean an internal refactoring with no changes whatsoever to the semantics of its prescriptive parts. In other words, the concepts in the reconciled version of the standard may need to refer to parent concepts in the DEO, but otherwise remain unchanged. Often, it will be necessary to map the standard's terms and definitions to the SC7 DEO, revise the standard to use standard terms where possible and migrate terms to the SC7 DEO over time.

The effort required to accomplish this can be extremely variable and should be the responsibility of the overseeing working group.

Any new standard that is created after the DEO is in place should be strongly encouraged to be fully compliant with the DEO. This means that the concepts in it must be a CDO and, for an SDO-focussed IS (e.g. ISO/IEC 12207), the elements must be instances of that CDO. In this case, an explicit CDO is still necessary as part of the new standard in order to document the semantics of said occurrences. This statement will replace the content of the “Terms and definitions” section present in all current SC7 standards.

Once all of the above has been implemented, there will be a need to provide guidance for would-be standards developers with regard to the process to follow in relation to CDO development, CDO instantiation etc. A flow chart or decision tree may be useful in order to guide potential standards builders.

In addition, it is suggested that ontology management tools be employed so that relationships between standards can easily be tracked and the DEO/CDOs structure be easily maintained.

Once the above ontological structure has been implemented, there will be a need to formalize these not only in revised standards such as the standard domain ontology standards of ISO/IEC 12207 etc. (ensuring they conform to the elements in the DEO and to one specific CDO) but also to introduce new standards and technical reports for would-be standards developers as guidelines to their standards activities.

A new suite of standards is thus required to explain and formalize all this.
                           
                              i)
                              There is a need for a standard (or Technical Report) to explain how (a) to put together and (b) how to tailor such a standard.

Because the spectrum of standards is broad and we can't change accepted terminology in all subdomains, there MUST a synonym list so that non-standard standards can relate back to the standard vocabulary.

We have shown how conceptual modeling and ontology engineering can be efficacious in reconciling otherwise disparate International (ISO) Standards — here the software engineering standards developed under the auspices of SC7. We have applied ontological thinking to the various existing standards and identified four areas in which ontological engineering can contribute immediately to increasing the quality of the SC7 suite of software engineering standards plus one more futuristic technique. The ontologies thus identified can be considered parallel to well-known situational method engineering strategies [30] leading to a repository of definitional standards (a DEO), a configuration of those elements into a CEO — both at the ‘meta’ level. For the software developer, there are then configured modeling-focussed ontologies (CDO), which underpin a large number of the SC7 standards. Finally, there is interest in understanding how these standards relate to each so that when changes occur in one standard, any interlinked standard is readily identified and similarly updated. These recommendations will form part of a second submission to be made to the SC7 committee and its working groups as a prelude to the creation and endorsement of a NWI (New Work Item) in 2013–14, which will finally culminate in a new IS (the DEO).

The next step in our research is to implement this infrastructure and create a comprehensive DEO. As discussed earlier, this requires identifying and clarifying a core set of concepts at a relatively abstract level so that they can be readily used to create a suite of domain-specific CDOs; some of which will need to be created as further ‘proof of concept’ and validation of the ontological approach developed in this paper.

@&#ACKNOWLEDGMENTS@&#

We wish to acknowledge the comments from the SC7 Study Group members on the several drafts of the first report prior to the submission to SC7/SWG5 in March 2013.

@&#REFERENCES@&#

