@&#MAIN-TITLE@&#Enhancing classification accuracy utilizing globules and dots features in digital dermoscopy

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Dark dots and globules may occur in benign and malignant skin lesions and contain significant diagnostic value.


                        
                        
                           
                           A methodology for detecting/segmenting dark dots and globules from dermoscopy images is proposed, based on inverse non-linear diffusion.


                        
                        
                           
                           A set of dot/globule related features is proposed.


                        
                        
                           
                           The proposed algorithm is applied to a number of images with skin lesions with known histo-pathology.


                        
                        
                           
                           The new features can enhance the performance of classification algorithms that discriminate between malignant and benign skin lesions.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Dermoscopy images

Skin lesions

Dark dot segmentation

Globule segmentation

Image classification

Melanoma detection

@&#ABSTRACT@&#


               
               
                  The interest in image dermoscopy has been significantly increased recently and skin lesion images are nowadays routinely acquired for a number of skin disorders. An important finding in the assessment of a skin lesion severity is the existence of dark dots and globules, which are hard to locate and count using existing image software tools. In this work we present a novel methodology for detecting/segmenting and count dark dots and globules from dermoscopy images. Segmentation is performed using a multi-resolution approach based on inverse non-linear diffusion. Subsequently, a number of features are extracted from the segmented dots/globules and their diagnostic value in automatic classification of dermoscopy images of skin lesions into melanoma and non-malignant nevus is evaluated. The proposed algorithm is applied to a number of images with skin lesions with known histo-pathology. Results show that the proposed algorithm is very effective in automatically segmenting dark dots and globules. Furthermore, it was found that the features extracted from the segmented dots/globules can enhance the performance of classification algorithms that discriminate between malignant and benign skin lesions, when they are combined with other region-based descriptors.
               
            

@&#INTRODUCTION@&#

Dermoscopy or dermatoscopy is the examination of skin lesions or disorders through the use of the dermatoscope, a medical instrument capable of magnifying the examined area of the skin. This technique can reveal many coloring and structural details of the skin lesion, which would be impossible to observe with a naked eye. Advanced computer based systems can be used to capture an image, then analyze it by checking its morphological and color characteristics and extract measurable features. Such features could feed an expert system for providing an evaluation about the malignancy of the lesion [1,2,28,29]. Methodologies and rules of the classic dermoscopy, which are used for the visual evaluation of a skin lesion, can be applied in computer based dermoscopy. More specifically, in the conventional procedure, the following diagnostic methods are mainly used: (i) ABCD rule [3,27], (ii) Menzies rule [4], (iii) 7-point checklist [5,6] and (iv) Pattern and Texture Analysis [1]. For instance the ABCD rule investigates the asymmetry (A), border (B), color (C), and differential structures (D) such as Pigment Network and Streaks of the lesion and defines the basis for a diagnosis by a dermatologist. According to surveys [1,2] on computer based skin image analysis systems, it is clear that the emphasis has been on assessment of lesion size, shape, color, and texture of lesions. Differential structures, especially dots and globules seem to have been neglected by the computer vision community, although they are considered essential for manual lesion categorization.

Dots and globules are sharply circumscribed, usually round or oval, variously sized black, brown or gray structures. Dots are small structures, while globules have some area. These patterns correlate to aggregations of pigmented melanocytes, within the epidermis, the dermo-epidermal junction, or the papillary dermis. The size and shape of dots/globules reflect the extent and form of the accumulation of these pigmented structures, whereas their color depends on the level of these pigmented aggregates within the epidermis and the superficial dermis. Pigmented structures are black in the cornified layer, brown at the dermo-epidermal junction and gray-blue in the papillary dermis.

Dots and globules may occur in benign and malignant melanocytic proliferations. In melanocytic nevi regular dots/globules may be observed in the center but also throughout the lesion. They are regular in size and shape, and are quite evenly distributed. In melanomas, irregular dots/globules, however, occur predominantly at the periphery and vary in size and shape, and, moreover, are unevenly distributed.

In this work, we concentrate in the detection/segmentation of globules and dots (dark circular structures) utilizing advanced image processing techniques. We also evaluate their potential usefulness and diagnostic value, in assisting automatic characterization of dermoscopy images into melanoma and non-malignant lesions. More specifically at a first stage we propose a novel algorithm for the segmentation of globules and dots in dermoscopy images, based on non-linear inverse diffusion, which has been efficiently applied to several image processing problems [7–9]. Diffusion-based image processing is a member of a wider class of image processing techniques based on partial differential equations (PDEs). For instance, in [10] an approach using PDEs for image impainting is described. A few reported works also describe the application of diffusion in the processing of dermoscopy images, such as lesion segmentation [11,12] and hair removal [12,13]. At a second stage we propose a number of features based on the segmented dots/globules and investigate their value in computer based dermoscopy image assessment utilizing them solely or in conjunction with the classical features described above. In the rest of the paper we will use the terms globules and dots interchangeably for both dots and globules, since the methodology for their detection is the same and the only characteristic that differentiates them is their size. The paper structure is as follows: In Section 2 we describe the technical details of proposed methodology for dots segmentation and features extraction. Section 3 presents the experimental results and Section 4 concludes the paper.

@&#METHODOLOGY@&#

The proposed dot/globule segmentation is based on enhancing the structures of interest in the images using inverse non-linear diffusion, in a multi-resolution scheme (using different values of the σ parameter for the calculation of the Hessian matrix, as it will be explained in the next subsection). Subsequently, a number of features are extracted from the segmented objects and their usefulness in classifying the image into malignant or benign lesion is explored. The overall workflow of the proposed methodology is illustrated in Fig. 1
                     .

Diffusion is a phenomenon, which is well studied in the field of Physics. It corresponds to the transportation of a preserved physical quantity u (mass, thermal energy, etc) from areas of high concentration of u to areas with low concentration. The relevant partial differential equation (PDE) is the following:
                           
                              (1)
                              
                                 
                                    
                                       
                                          ∂
                                          u
                                          (
                                          
                                             r
                                          
                                          )
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                    =
                                    
                                       u
                                       t
                                    
                                    (
                                    
                                       r
                                    
                                    )
                                    =
                                    d
                                    i
                                    v
                                    (
                                    g
                                    ∇
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    )
                                 
                              
                           
                        where g is the diffusivity function. In the case of isotropic diffusion, g is constant. If g is a function of the position r, g
                        =
                        g(r), then (1) becomes non-linear diffusion, in which case, it may be written as:
                           
                              (2)
                              
                                 
                                    
                                       
                                          ∂
                                          u
                                          (
                                          
                                             r
                                          
                                          )
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                    =
                                    
                                       u
                                       t
                                    
                                    (
                                    
                                       r
                                    
                                    )
                                    =
                                    d
                                    i
                                    v
                                    (
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    ∇
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    )
                                    =
                                    ∇
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    ⋅
                                    ∇
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    +
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    
                                       ∇
                                       2
                                    
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                 
                              
                           
                        
                     

In the case of g
                        ∈ℜ
                        2×2, g is called the diffusion tensor and (1) describes the anisotropic (non-linear) diffusion. By choosing appropriately the diffusivity function g, several different image-processing tasks can be performed [7,9]. For instance, in the case of image smoothing without edge blurring, a function of image gradient, with low values when image gradient |||∇
                        u|| has high value (and vice versa) has been proposed in [8].

In this work, we utilize the method of non-linear diffusion, in order to segment globules in dermoscopy images. In this context, we will define a measure of circularity for each image pixel, based on the image Hessian matrix and we will apply the non-linear diffusion using a diffusivity function that allows the inverse diffusion in image pixels that have high circularity measure, by inserting the minus sign at the right hand side of (2):
                           
                              (3)
                              
                                 
                                    
                                       u
                                       t
                                    
                                    (
                                    
                                       r
                                    
                                    )
                                    =
                                    −
                                    (
                                    ∇
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    ⋅
                                    ∇
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    +
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    
                                       ∇
                                       2
                                    
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    )
                                 
                              
                           
                        
                     

Eq. (3) needs to be discretized, so it can be used in our case. The partial derivative term with respect to time is approximated as
                           
                              (4)
                              
                                 
                                    
                                       u
                                       τ
                                    
                                    (
                                    
                                       r
                                    
                                    )
                                    =
                                    
                                       
                                          ∂
                                          u
                                          (
                                          
                                             r
                                          
                                          )
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                    ∼
                                    
                                       
                                          
                                             u
                                             
                                                t
                                                +
                                                δ
                                                t
                                             
                                          
                                          (
                                          
                                             r
                                          
                                          )
                                          −
                                          
                                             u
                                             t
                                          
                                          (
                                          
                                             r
                                          
                                          )
                                       
                                       
                                          δ
                                          t
                                       
                                    
                                 
                              
                           
                        with r
                        =(x, y)∈[1, …, N
                        
                           col
                        ]×[1, …, N
                        
                           lin
                        ]⊂ℵ
                        2 and δt
                        <0.25, (N
                        
                           col
                        
                        ×
                        N
                        
                           lin
                         denote the image pixelation). The right hand terms of (3) are approximated numerically as [14]:
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∇
                                                g
                                                (
                                                
                                                   r
                                                
                                                )
                                                =
                                                (
                                                
                                                   g
                                                   x
                                                
                                                (
                                                
                                                   r
                                                
                                                )
                                                ,
                                                
                                                   g
                                                   y
                                                
                                                (
                                                
                                                   r
                                                
                                                )
                                                )
                                                ≅
                                                (
                                                g
                                                (
                                                
                                                   r
                                                
                                                )
                                                ∗
                                                
                                                   M
                                                   1
                                                
                                                ,
                                                g
                                                (
                                                
                                                   r
                                                
                                                )
                                                ∗
                                                
                                                   M
                                                   1
                                                   T
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   Δ
                                                
                                                u
                                                (
                                                
                                                   r
                                                
                                                )
                                                =
                                                
                                                   ∇
                                                   2
                                                
                                                u
                                                (
                                                
                                                   r
                                                
                                                )
                                                =
                                                (
                                                
                                                   u
                                                   
                                                      x
                                                      x
                                                   
                                                
                                                (
                                                
                                                   r
                                                
                                                )
                                                ,
                                                
                                                   u
                                                   
                                                      y
                                                      y
                                                   
                                                
                                                (
                                                
                                                   r
                                                
                                                )
                                                )
                                                ≅
                                                u
                                                (
                                                
                                                   r
                                                
                                                )
                                                ∗
                                                (
                                                
                                                   M
                                                   2
                                                
                                                +
                                                
                                                   M
                                                   2
                                                   T
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where * denotes linear convolution and
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   M
                                                   1
                                                
                                                (
                                                n
                                                )
                                                =
                                                
                                                   1
                                                   
                                                      12
                                                   
                                                
                                                [
                                                −
                                                1,8,0,
                                                −
                                                8,1
                                                ]
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   M
                                                   2
                                                
                                                (
                                                n
                                                )
                                                =
                                                
                                                   1
                                                   
                                                      12
                                                   
                                                
                                                [
                                                −
                                                1,16,
                                                −
                                                30,16,
                                                −
                                                1
                                                ]
                                             
                                          
                                       
                                    
                                    ,
                                    n
                                    =
                                    −
                                    2
                                    ,
                                    …
                                    ,
                                    2
                                    .
                                 
                              
                           
                        
                     

Therefore, (3) can be written in discrete form as
                           
                              (7)
                              
                                 
                                    
                                       u
                                       
                                          t
                                          +
                                          δ
                                          t
                                       
                                    
                                    (
                                    
                                       r
                                    
                                    )
                                    =
                                    
                                       u
                                       t
                                    
                                    (
                                    
                                       r
                                    
                                    )
                                    −
                                    δ
                                    t
                                    (
                                    ∇
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    ⋅
                                    ∇
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    +
                                    g
                                    (
                                    
                                       r
                                    
                                    )
                                    
                                       ∇
                                       2
                                    
                                    u
                                    (
                                    
                                       r
                                    
                                    )
                                    )
                                 
                              
                           
                        where the subscript t was added in g
                        
                           t
                        (r) and u
                        
                           t
                        (r) to denote that these quantities are calculated in each time step. In this work, the physical quantity u at t
                        =0 is set equal to the gray scale of the original dermoscopy image u
                        0
                        =
                        I.

In this subsection we describe how the dark circular structures in dermoscopy images may be enhanced, whereas the rest of the image pixels are not affected. For this purpose the diffusivity function g should quantify the probability of the current image pixel to belong to a dark circular structure. The Hessian matrix is used as a measure of circularity for each pixel (x,y) of image I. It should be noted that the use of the Hessian matrix for image feature extraction has been reported frequently in the literature [15,16]. In [17,20], the eigenvalues of the Hessian matrix have been used to segment vessels. Let us define the Hessian matrix as following:
                           
                              (8)
                              
                                 
                                    
                                       H
                                    
                                    (
                                    x
                                    ,
                                    y
                                    ;
                                    σ
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         I
                                                         
                                                            x
                                                            x
                                                         
                                                      
                                                      (
                                                      x
                                                      ,
                                                      y
                                                      )
                                                   
                                                
                                                
                                                   
                                                      
                                                         I
                                                         
                                                            x
                                                            y
                                                         
                                                      
                                                      (
                                                      x
                                                      ,
                                                      y
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         I
                                                         
                                                            x
                                                            y
                                                         
                                                      
                                                      (
                                                      x
                                                      ,
                                                      y
                                                      )
                                                   
                                                
                                                
                                                   
                                                      
                                                         I
                                                         
                                                            y
                                                            y
                                                         
                                                      
                                                      (
                                                      x
                                                      ,
                                                      y
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where the subscript denotes partial differentiation with respect to the corresponding image axis. The image partial derivatives in H are calculated using linear convolution (denoted by *) with the partial derivatives of a 2D Gaussian function, with variance σ, 
                           
                              G
                              (
                              x
                              ,
                              y
                              ;
                              σ
                              )
                              =
                              
                                 
                                    (
                                    1
                                    /
                                    
                                       
                                          2
                                          π
                                       
                                    
                                    σ
                                    )
                                 
                                 2
                              
                              
                                 e
                                 
                                    −
                                    
                                       x
                                       2
                                    
                                    +
                                    
                                       y
                                       2
                                    
                                    /
                                    2
                                    
                                       σ
                                       2
                                    
                                 
                              
                              :
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       I
                                       
                                          x
                                          x
                                       
                                    
                                    (
                                    x
                                    ,
                                    y
                                    ;
                                    σ
                                    )
                                    =
                                    
                                       σ
                                       γ
                                    
                                    I
                                    (
                                    x
                                    ,
                                    y
                                    )
                                    ∗
                                    
                                       
                                          
                                             ∂
                                             2
                                          
                                          G
                                          (
                                          x
                                          ,
                                          y
                                          ;
                                          σ
                                          )
                                       
                                       
                                          ∂
                                          
                                             x
                                             2
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The σ parameter is used to select image features based on matrix H, at different scales, depending on the spatial resolution of the dermoscopy image. This is a well-referenced technique [18,19]. The value of the σ parameter is analogous to the size of the image structures (dots) that require enhancing. The selected values for this parameter are discussed in Section 2.3. Thus, the values of σ depend on the spatial resolution of the dermoscopy images. The image partial derivatives, as described in (9) are normalized with respect to σ by multiplying them with the term σ
                        γ, as described in [17,21], so that the values of the image circularity function for different values of σ are directly comparable. In this work, we set γ
                        =1.

Let λ
                        1, λ
                        2 the eigenvalues of H at (x,y) with a specified value of σ. Since H is symmetric, both its eigenvalues are real numbers. If the pixel (x,y) belongs to a dark disk, then both the eigenvalues of its Hessian matrix are positive and of the same order of magnitude, equivalently:
                           
                              (10)
                              
                                 
                                    
                                       λ
                                       1
                                    
                                    >
                                    0
                                    ,
                                     
                                    
                                       λ
                                       2
                                    
                                    >
                                    0
                                    ,
                                     
                                    |
                                    
                                       λ
                                       1
                                    
                                    −
                                    
                                       λ
                                       2
                                    
                                    |
                                    <
                                    t
                                    h
                                    r
                                 
                              
                           
                        where thr is a threshold set to a small positive real number. We therefore construct the following function that provides a measure of the circularity of the dark structure for a given value of σ, in a manner similar to the “vesselness function” defined in [17]:
                           
                              (11)
                              
                                 
                                    
                                       f
                                       σ
                                    
                                    (
                                    
                                       λ
                                       1
                                    
                                    ,
                                    
                                       λ
                                       2
                                    
                                    )
                                    =
                                    f
                                    (
                                    
                                       λ
                                       1
                                    
                                    ,
                                    
                                       λ
                                       2
                                    
                                    ;
                                    σ
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         e
                                                         
                                                            −
                                                            (
                                                            0.5
                                                            /
                                                            
                                                               λ
                                                               1
                                                            
                                                            +
                                                            
                                                               λ
                                                               2
                                                            
                                                            )
                                                            −
                                                            4
                                                            (
                                                            
                                                               λ
                                                               1
                                                            
                                                            −
                                                            
                                                               λ
                                                               2
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      0
                                                      ,
                                                       
                                                      otherwise
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             λ
                                             1
                                          
                                          ,
                                          
                                             λ
                                             2
                                          
                                          >
                                          0
                                       
                                    
                                 
                              
                           
                        
                     

The proposed function returns a measure of local circularity in the range [0,1]. The maximum value is obtained asymptotically when both eigenvalues have large, positive and almost equal values. Small or unequal values of λ
                        1, λ
                        2 correspond to low value of the proposed function (close to zero), whereas negative values of λ
                        1, λ
                        2 result in f
                        
                           σ
                        
                        =0, irrespectively of their absolute values, since they would not correspond to dark circular structures. The values of f
                        
                           σ
                        , as a function of the eigenvalues λ
                        1, λ
                        2 of the Hessian matrix are shown in Fig. 2
                        .

In order to selectively enhance the dark disk structures and leave the rest of the dermoscopy image unaltered, we set g (r;σ)=
                        g(x,y;σ) in (7) equal to the function f
                        
                           σ
                         in (11). The initial u at t
                        =0 in (7) is set equal to the gray scale I of the original dermoscopy image. Furthermore, if at any time (iteration) a pixel of the enhanced gray scale dermoscopy image becomes greater than the maximum allowed pixel value (or negative) then its value is set to the maximum allowed pixel value (or zero respectively). The dot enhancement algorithm is presented in pseudocode below. The subscript t in the Hessian matrix and the circularity (diffusivity) function indicates that these quantities are recalculated for every pixel. The time step δt should remain below 0.25, otherwise the numerical solution (7) of the basic equation Eq. (3) becomes unstable [22,23]. Experimentation showed that setting T
                        =10 and δt
                        =0.1 produces very good results, while the execution time is not prolonged.
                           Algorithm 1
                           The dot-enhancement algorithm.

In Fig. 3
                         we illustrate the enhancement process of a dermoscopy image region, at iteration 20, 40, 60, 80 and 100, using δt
                        =0.1. The first row contains the initial part of the image (three identical copies). The enhancement is performed using σ
                        =1, 2 and 3, shown in the first, second and third column respectively. It can be observed that the image circularity function in (11), used as the diffusivity in (7), achieves the enhancement of dark circular functions of selected sizes, while leaving the rest of the image structures unaltered.

The dark dots/globules may have different sizes, with an average radius of a few pixels. All images have the same size (632×387 pixels) and the same magnification, resulting in spatial resolution of about 0.05mm/pixel. The value of σ corresponds to the anticipated typical size of a globule for the specific spatial resolution, which is common for all images. Thus the image enhancement of the previous step is repeated for σ
                        =1, 2 and 3, which are values that cover the globules’ size for the specific image resolution. The segmentation of the dark globules is performed using the circularity function g(x,y;σ) of the previous step, as it has evolved through the image diffusion process. For each image pixel (x,y), the value σ
                        max of σ for which the diffusivity function exhibits the maximum value is determined (the normalization of (9) with the term σ
                        
                           γ
                        , allows the comparison). If this maximum value is greater than a predefined threshold T
                        0, then this pixel is considered as belonging to a dark globule with a characteristic range analogous to σ
                        max.

If we denote as g
                        
                           final
                         the circularity function at the end of the diffusion-based enhancement process (t
                        =
                        T), the following pseudocode summarizes the segmentation algorithm. If required, more values for the σ parameter can be accommodated in the first step (calculation of σ
                        max).
                           Algorithm 2
                           The multi-scale dot-segmentation algorithm.


                        Fig. 4
                         shows the intermediate steps of the segmentation process: (a) initial dermoscopy image, (b) produced images after enhancement using the inverse non-linear diffusion with σ
                        =1, 2, 3. The circularity function g
                        
                           t
                        (x,y;σ) at the end of the enhancement process is shown in (c) for the preselected values of σ. The segmented dark circular structures are shown superimposed on the initial image in (d).

After the dot segmentation step is completed, the center of mass and the number of pixels of each dot are available for feature extraction. A number of the proposed features involve aspects of dots’ spatial relation with the lesion. The skin lesion images used in this study have been manually segmented by an expert dermatologist (see Section 3.1). The segmented dark globules/dots that lie outside the dermoscopy lesion are excluded from the calculation of features. The proposed features are selected according to the input from collaborating expert dermatologists and the previous experience of the authors with dermoscopy images [1]. These features actually correspond to the number and size of dots and the asymmetry in their distribution, which is considered as a significant clue of skin lesion malignancy. More specifically the proposed in this work of dot-related image features are the following: (a) Number of dots, (b) Total Number of pixels in dots, (c) mean number of pixels in dots, (d) variance of num. pixels in dots, (e) the fraction of the lesion area occupied by dark dots. Asymmetry based features are also proposed as follows:
                           
                              •
                              Radial asymmetry: this feature quantifies the distribution of the distance of the dots, from the boundary of the lesion. The boundary of the lesion is obtained utilizing morphological processing of the binary image that delineates the skin lesion. The distance transform is applied and the distance of the center of mass of each dot is calculated. The distances are normalized in the range [0,1] and the number of dots with normalized distance from the lesion boundary equal to or less than 0.1 is calculated.

Angular asymmetry: the angle between the image x-axis and the line connecting the center of mass of each dot and the center of mass of the lesion is calculated for all the segmented dots. This angle is quantized in 16 equal sectors and the number of dots N
                                 
                                    i
                                  in each angle range is calculated (i
                                 =1, 2, …, 16). The angular asymmetry is calculated as (max(N
                                 1)−min(N
                                 
                                    i
                                 ))/N
                                 
                                    all
                                 , where N
                                 
                                    i
                                  is the number of dots in the i angle range and N
                                 
                                    all
                                  is the total number of detected dark dots.

Asymmetry with respect to the lesion's primary axis. The primary axis of the lesion is calculated using area moments of inertia and the number of dots at the two sides of the axis, N
                                 1 and N
                                 2 is calculated. The asymmetry is defined by the following expression |N
                                 1
                                 −
                                 N
                                 2|/(N
                                 1
                                 +
                                 N
                                 2).

@&#EXPERIMENTAL RESULTS@&#

The main technique used for acquiring dermoscopy images is the epiluminescence microscopy (Digital ELM dermoscopy). ELM is capable of providing a more detailed inspection of the surface of pigmented skin lesions and renders the epidermis translucent, making many dermal features become visible.

The proposed algorithm for dark globule segmentation and feature extraction was applied to 108 dermoscopy images containing benign lesions and 100 dermoscopy images of malignant melanoma, which were verified by histological analysis. All images were acquired with the same size (632×387 pixels) and magnification using the ELM Molemax II device at Hospital of Wien and at the department of Plastic Surgery and Dermatology in the General Hospital of Athens G. Gennimatas. The area of the lesion has been manually delineated for each one of the images. During the lesion classification procedure, the available images were randomly split into training and test sets of equal sizes (i.e. 104 images).

The dot segmentation is evaluated by user-based enumeration of the dots/globules present, using the following settings: δt
                        =0.1, T
                        =10 in the dot enhancement algorithm, T
                        0
                        =0.2 in dot segmentation algorithm Table 1
                         summarizes the results, grouped by the two different image classes. The number of dots obtained by the proposed algorithm is shown in the 2nd column. Columns 3 and 4 show the number of correctly segmented dots (true positive dots – TP) and the number of dots missed by the algorithm (false negative – FN). The number of false positive dots is calculated as the number of segmented dots minus the TP dots. Since the number of true negative dots cannot be estimated, Table 1 presents only the sensitivity of the segmentation, as TP/(TP+FN).


                        Fig. 5
                         shows the segmented globules superimposed on the original dermoscopy images, in the left column. The right column exhibits the center of mass of the segmented dots in relation to the boundary of the skin lesion and its primary symmetry axis. The first two rows show non-malignant skin lesions, whereas the rest of the rows show malignant lesions.

The classification added value of the dot-related features is evaluated in combination with other well-known skin lesion-related image features [1]. At a first stage we conducted lesion classification into malignant and benign using only the dot-related features, with a number of known classifiers, implemented in the Weka library [24]. The evaluated classifiers are: the multilayer perceptron using one hidden layer with the default number of neurons ([#features+#classes]/2), the nearest neighbor (kNN) with k
                        =2, which is a very simple and effective classifier, the random forest classifier [25], as well as the support vector machines (SVM) using the polynomial kernel (Polykernel) and the Pearson VII function-based universal kernel (PUK), as described in [26]. Additional classifiers from the Weka tools were evaluated, however the aforementioned produced the best results. The resulting confusion matrices using only the test set are shown in Table 2
                        . Each confusion matrix consists of True Positives (TP) and False Negatives (FN) in the 1st row and False Positives (FP) and True Negatives (TN) in the 2nd row, with positive identification indicating malignant skin lesion. The construction of training and testing data sets was described in the previous subsection. The SVM-polykernel was the best performing classifier; therefore it was selected for our further experiments.

At a second stage, we conducted the classification of the same skin lesions images using a number of lesion-features, which we described in [1]. These features are not related to the dot-features extracted in this work and include color spaces RGB and HSI statistical quantities, shape descriptors of the lesion (eccentricity, asymmetry, area, length of boundary, etc), as well as textural features (such as Neighboring gray-level dependence matrix NGLDM, Dissimilarity, and Gray Level Co-occurrence Matrix GLCM). Finally, the classification was repeated using the aforementioned lesion features in combination with the dot-related features described in Section 2.4. The confusion matrices, as well as the sensitivity, specificity and accuracy are shown in Table 2. As it can be observed, the addition of the dot-related features improved the performance of the SVM-polykernel classifier, which was the best performing classifier of Tables 2 and 3
                        .

The most time consuming part of the proposed method is the execution of the dot-enhancement algorithm (Algorithm 1). The rest of the proposed method (the multi-scale dot-segmentation Algorithm 2, the calculation of the values of the selected dot-related features and the image classification part) is executed very rapidly, compared to Algorithm 1, adding insignificant complexity. Thus, we will focus the following complexity analysis on Algorithm 1. More specifically, the calculation of the discrete equation in (7) requires 6 linear convolutions using a 5-element symmetric mask per pixel. The construction of the Hessian matrix H in (8) requires three (3) linear convolutions with a 7σ
                        ×7σ mask for each image pixel, each of which can be decomposed to two (2) linear convolutions with appropriate 1-D masks of 7σ elements. The calculation of the eigenvalues of H to be used in (11) is performed in closed form (since the Hessian is a 2×2 symmetric matrix), therefore it requires a small number of arithmetic operations per pixel. Thus, the overall complexity of each iteration has linear dependency with the number of image pixels: O(σ·N
                        col·N
                        lin). The iterations are repeated for 3 different values of σ, while the inverse diffusion is repeated for (typically) 100 iterations, with δt
                        =0.1. According to our experimentation, each iteration for an image of size 632×387 pixels requires 0.9s for the three values of σ (1, 2 and 3) using the Matlab programming environment on an Intel(R) Core i5-2430 CPU@2.40GHz Laptop with 4 GB Ram, under Windows 7. Thus, the whole image requires approximately 90s for the typical number of 100 iterations.

@&#CONCLUSION@&#

An efficient unsupervised method for segmenting dark dots and globules in dermoscopy images has been presented. The algorithm is based on inverse non-linear diffusion and it is repeated for three different scale spaces. As already mentioned the early diagnosis of skin cancer using image analysis tools is of severe importance for the outcome of the therapeutic procedure and the basis for reducing mortality rates. In this study we try to prove the diagnostic value of the globules and dots that appear in skin lesion images, which are often neglected by the available dermoscopy systems software. These specific structures are correlated with underlying skin lesion mechanisms and could improve the diagnostic accuracy of computer based dermoscopy. The proposed algorithm has been developed using the Matlab environment. The dot segmentation for a given scale space (value of σ) is completed within a few seconds in an average laptop computer, so the method is easily applicable. The experimental results from a number of skin images has shown very high sensitivity in detecting dark dots/globules, both in malignant and benign skin lesions images. At a second stage in this work a number of dot-related features of the dermoscopy images have been defined. The conducted experiments with various classifiers have proven the usefulness of these features in classifying skin lesions into malignant and benign classes, especially when used in conjunction with other lesion-related features.

@&#REFERENCES@&#

