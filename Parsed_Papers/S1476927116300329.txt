@&#MAIN-TITLE@&#Protein inference: A protein quantification perspective

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           The protein inference problem can be regarded as a special protein quantification problem in the sense that truly present proteins are those proteins with non-zero abundances.


                        
                        
                           
                           We test three very simple protein quantification methods to solve the protein inference problem effectively.


                        
                        
                           
                           The good experimental results indicate that it is plausible to devise more effective protein inference algorithms from a quantification perspective.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Shotgun proteomics

Protein inference

Protein quantification

Spectral counting

Linear programming

@&#ABSTRACT@&#


               
               
                  In mass spectrometry-based shotgun proteomics, protein quantification and protein identification are two major computational problems. To quantify the protein abundance, a list of proteins must be firstly inferred from the raw data. Then the relative or absolute protein abundance is estimated with quantification methods, such as spectral counting. Until now, most researchers have been dealing with these two processes separately. In fact, the protein inference problem can be regarded as a special protein quantification problem in the sense that truly present proteins are those proteins whose abundance values are not zero. Some recent published papers have conceptually discussed this possibility. However, there is still a lack of rigorous experimental studies to test this hypothesis.
                  In this paper, we investigate the feasibility of using protein quantification methods to solve the protein inference problem. Protein inference methods aim to determine whether each candidate protein is present in the sample or not. Protein quantification methods estimate the abundance value of each inferred protein. Naturally, the abundance value of an absent protein should be zero. Thus, we argue that the protein inference problem can be viewed as a special protein quantification problem in which one protein is considered to be present if its abundance is not zero. Based on this idea, our paper tries to use three simple protein quantification methods to solve the protein inference problem effectively. The experimental results on six data sets show that these three methods are competitive with previous protein inference algorithms. This demonstrates that it is plausible to model the protein inference problem as a special protein quantification task, which opens the door of devising more effective protein inference algorithms from a quantification perspective. The source codes of our methods are available at: http://code.google.com/p/protein-inference/.
               
            

@&#INTRODUCTION@&#

Mass spectrometry (MS)-based shotgun proteomics is currently the most widely used method for the identification and quantification of proteins (Nesvizhskii et al., 2007). As shown in Fig. 1
                     , it first digests proteins in the sample into a mixture of peptides by enzymes such as trypsin. The resulting peptide mixtures are scanned by tandem mass spectrometry (MS/MS) to generate a set of MS/MS spectra. Then the peptide identification algorithm reports a set of peptide-spectrum matches (PSMs) by searching the MS/MS spectra against a protein database. From these peptide identifications, we infer the existence of proteins with protein inference algorithms and calculate the relative or absolute abundances of proteins with protein quantification approaches.

Until recently, people tackle the identification and quantification of proteins as two individual and subsequent tasks: first select a subset of proteins that are truly present and then determine the quantities of these proteins. For both problems, many elegant approaches have been developed in the past decades. The readers can refer to two recent reviews Huang et al. (2012) and Nikolov et al. (2012) for details.

The starting point of this paper is fact that protein inference can be regarded as a special case of protein quantification. In protein inference, the objective is to generate a binary presence indicator value (1 or 0) for each candidate protein. In this regard, “protein existence inference” is probably more accurate for describing the original protein inference task. In protein quantification or “protein abundance inference”, the goal is to determine the abundance of each protein. Clearly, if one protein is not present, its abundance value should be 0. Hence, the protein inference problem can be investigated from the perspective of protein quantification: present proteins are those proteins whose abundance values are not zero. In other words, we can adopt available protein quantification methods directly to solve the protein inference problem. This new angle may enable a better understanding of the protein inference problem and help in devising improved or hybrid protein inference methods by borrowing the power from protein quantification.

The possibility of exploiting protein quantification methods to solve the protein inference problem has been conceptually discussed in several papers (Dost et al., 2012; Li and Radivojac, 2012). Dost et al. (2012) used a simple example to show that it is feasible to obtain more accurate protein identifications with protein quantification methods than traditional parsimonious approaches. Li and Radivojac (2012) also pointed out that the protein inference problem can be regarded as a special protein quantification problem. However, they argued that existing protein quantification methods have not yet reached the accuracy needed for the wide dynamic range of quantities observed in cellular proteomics. As a result, solving the more general and difficult quantification problem may not provide a more accurate solution for the protein inference problem.

Although people have realized the potential of solving the protein inference problem from a quantification perspective, there are still no rigorous and extensive experimental studies to test this hypothesis. To fulfill this void, we empirically demonstrate the feasibility of solving the protein inference problem with existing protein quantification methods in the context of label-free proteomics. In the label-free quantitative proteomics studies, quantification methods which are based on peak ion intensities (from MS data) (Neilson et al., 2011) and spectral counting (from MS/MS data) (Lundgren et al., 2010; Choi et al., 2008) have been widely used.

Spectral counting measures the abundance of each protein based on the number of MS/MS spectra that match its constituent peptides. Given the peptide identification result, we can directly obtain spectral counting information since we just need to count the number of MS/MS spectra. In this paper, we use spectral counting as the quantification approach for solving the protein inference problem.

We first try two simple spectral counting methods in the literature. In both methods, the protein abundance is calculated as the sum of peptide abundance values. Their difference lies in how to handle the shared peptide. If the abundance of one shared peptide is b and it has k parent proteins, then b is used as its abundance value in the first method while b/k is used as its abundance value in the second method. These two methods assume that all the candidate proteins are present in the sample. As a result, the abundance value of each candidate protein will not be zero. However, this assumption contradicts the objective of protein inference: distinguishing present proteins (abundance ≠ 0) from absent proteins (abundance = 0). Thus, we extend the second linear programming model in Dost et al. (2012) to distribute the abundance values of shared peptides automatically in order to shrink the abundance values of absent proteins to zero.

To our knowledge, our paper is the first rigorous study with extensive experiments to demonstrate the feasibility of using protein quantification methods for solving the protein inference problem. Such an attempt connects two important computational problems that have long been investigated separately. The experimental results show that we can obtain better performance in most data sets even when the most simple version of spectral counting is utilized. Hence, the advance in protein quantification studies will promote the development of more effective protein inference algorithms.

In Section 2, we describe the details of three methods. Section 3 shows the experimental results on six data sets. Section 4 presents some discussions and Section 5 concludes the paper.

@&#METHODS@&#

As shown in the left side of Fig. 2
                     , the input of the protein inference problem can be represented as a tripartite graph G
                     =(X
                     ∪
                     Y
                     ∪
                     Z, E
                     1
                     ∪
                     E
                     2), where X, Y and Z are the set of l MS/MS experimental spectra, m identified peptides and n candidate proteins, respectively. For all x
                     
                        i
                     
                     ∈
                     X, y
                     
                        j
                     
                     ∈
                     Y, there is an edge (x
                     
                        i
                     , y
                     
                        j
                     )∈
                     E
                     1 if and only if the spectrum x
                     
                        i
                      matches the peptide y
                     
                        i
                      in the peptide identification results. Similarly, (y
                     
                        j
                     , z
                     
                        k
                     )∈
                     E
                     2 means that the peptide y
                     
                        j
                      is one part of the protein z
                     
                        k
                     . Each MS/MS spectrum corresponds to one and only one identified peptide whereas some peptides may have more than one matching spectrum, such as the peptides y
                     2 and y
                     3 in Fig. 2. The relationship between peptides and proteins is more complex: one candidate protein may have several identified peptides and each peptide can be shared by multiple proteins. How to correctly distribute these shared peptides is one of the most challenging problem in protein inference.

We first formulate the protein inference problem as a special protein quantification problem. The objective of protein inference is to determine whether each candidate protein is present in the sample. The aim of protein quantification is to estimate the abundance value of each identified protein. Clearly, if one protein is not present in the sample, its abundance value should be 0. In this paper, the protein inference problem is re-visited from the perspective of protein quantification through seeking those proteins whose abundance values are not zero.

To obtain the protein abundance, we start with calculating the peptide abundance. Let b
                     
                        j
                      denote the abundance value of the peptide y
                     
                        j
                     , which can calculated as the sum of PSM probabilities (or scores):
                        
                           (1)
                           
                              
                                 b
                                 j
                              
                              =
                              
                                 ∑
                                 
                                    (
                                    
                                       x
                                       i
                                    
                                    ,
                                    
                                       y
                                       j
                                    
                                    )
                                    ∈
                                    
                                       
                                          E
                                          1
                                       
                                    
                                 
                              
                              
                                 a
                                 i
                              
                              ,
                           
                        
                     where a
                     
                        i
                      is the probability that the spectrum x
                     
                        i
                      matches the peptide y
                     
                        j
                     . Notice that a
                     
                        i
                      can be also viewed as the weight of edge (x
                     
                        i
                     , y
                     
                        j
                     )∈
                     E
                     1, which can be obtained from peptide identification algorithms such as Mascot (Perkins et al., 1999) or post-processing tools such as PeptideProphet (Keller et al., 2002). In the traditional spectral counting methods, the peptide abundance is simply the number of MS/MS spectra identified for each peptide. Here, we generalize this spectral counting method to account for the quality of PSMs. More precisely, the contribution of each spectrum to the peptide abundance becomes a quantitative value between 0 and 1 rather than a fixed value of 1. Such an extension is extremely important for protein inference since it may help us to distinguish between the proteins with the same number of PSMs.

To calculate the protein abundance, we need to distribute the abundance of each peptide to its parent proteins. The main difficulty is how to deal with the degenerate peptide that is shared by more than one protein since such a peptide can be generated by any subset of its parent proteins (Yang et al., 2013).

There are several approaches for solving the shared peptide problem in protein quantification (Zhang et al., 2010), as shown in the right side of Fig. 2. The first approach is to simply discard the shared peptides and only use the unique peptides to calculate the protein abundance. But this approach has one disadvantage: it causes the loss of information, especially for the proteins whose identified peptides are all shared peptides. In Fig. 2, if we delete the shared peptide y
                     2, then the proteins z
                     2 and z
                     3 do not have any identified peptides and they would be considered absent in the sample. In fact, at least one of these two proteins must be present if we assume the existence of peptide y
                     2. Alternatively, we can use both unique and shared peptides to estimate the protein abundance. In the second approach, the abundance of the shared peptide is utilized to calculate the abundance of all its parent proteins. In other words, each peptide is counted multiple times so that the abundance values of some proteins may be over-estimated. We call this method “multiple counting” in this paper. For example, the peptide y
                     2 in Fig. 2 is counted twice in the second approach, which means that we artificially increase the abundance of peptide y
                     2 from b
                     2 to 2*
                     b
                     2. The third approach divides the abundance of the shared peptide into different parts and then distributes each part to one of its parent proteins. This approach ensures that each peptide is “counted” only once. One typical representative in this category is the “equal division” method, which partitions the peptide abundance into k equal parts (k is the number of proteins that share this peptide).

Since both multiple counting and equal division are the most popular and simple quantification approaches based on spectral counting, we first try these two methods and test their performance for the protein inference task. Note that these two methods have an implicit assumption that the abundance value of each candidate protein is not zero. However, this assumption does not hold in the context of protein inference since the abundance values of some absent proteins should be zero. Thus, a new linear programming model is proposed, which can automatically distribute the peptide abundance so as to shrink the abundance values of some proteins to zero.

In this method, the shared peptides are used in the same way as the unique peptides and receive no special treatment. The abundance of a protein is simply the sum of abundance values from all its identified peptides:
                           
                              (2)
                              
                                 
                                    c
                                    k
                                 
                                 =
                                 
                                    ∑
                                    
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                    
                                 
                                 
                                    b
                                    j
                                 
                                 ,
                              
                           
                        where c
                        
                           k
                         is the abundance of protein z
                        
                           k
                        . If the peptide y
                        
                           j
                         has q
                        
                           j
                         parent proteins, then it is counted q
                        
                           j
                         times and its actual abundance value used in the calculation is q
                        
                           j
                        
                        ·
                        b
                        
                           j
                        .

Different from the above method that counts shared peptides multiple times, the equal division method counts each peptide only once. It equally distributes the abundance of each shared peptide to its parent proteins:
                           
                              (3)
                              
                                 
                                    c
                                    k
                                 
                                 =
                                 
                                    ∑
                                    
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          b
                                          j
                                       
                                    
                                    
                                       
                                          q
                                          j
                                       
                                    
                                 
                                 ,
                              
                           
                        where q
                        
                           j
                         is the number of candidate proteins sharing the peptide y
                        
                           j
                        . If the peptide y
                        
                           j
                         is a unique peptide, then q
                        
                           j
                        
                        =1.

Shared peptides play an important role in both protein inference and protein quantification. Dost et al. (2012) presented a linear programming (LP) model which used shared peptides to estimate the relative protein abundance. Kim (2012) modified this LP model to qualify the absolute protein abundance. On the basis of these attempts, we further extend the LP model and apply it to infer the identities of proteins.

For each identified peptide y
                        
                           j
                        , the peptide abundance can be computed as:
                           
                              (4)
                              
                                 
                                    b
                                    j
                                 
                                 =
                                 
                                    ∑
                                    
                                       {
                                       k
                                       |
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                       }
                                    
                                 
                                 
                                    det
                                    jk
                                 
                                 ·
                                 
                                    
                                       c
                                       k
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       {
                                       k
                                       |
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                       }
                                    
                                 
                                 
                                    d
                                    jk
                                 
                                 ,
                              
                           
                        where det
                        
                           jk
                        
                        ∈(0, 1) is the detectability of the peptide y
                        
                           j
                         and it represents the probability that the peptide y
                        
                           j
                         can be identified in a standard experiment if its parent protein z
                        
                           k
                         is present (Tang et al., 2006). In order to simplify the model, we introduce a new variable d
                        
                           jk
                         to replace the product between the peptide detectability det
                        
                           jk
                         and the protein abundance c
                        
                           k
                        . Then, d
                        
                           jk
                         is interpreted as the abundance that the protein z
                        
                           k
                         contributes to the peptide y
                        
                           j
                        . The variable d
                        
                           jk
                         can serve as the bridge between the peptide abundance and the protein abundance. On one hand, we can use d
                        
                           jk
                         to explain the known peptide abundance. On the other hand, we can calculate the unknown protein abundance through d
                        
                           jk
                        . Therefore, the protein quantification problem is equivalent to finding an optimal matrix D
                        =(d
                        
                           jk
                        ).

According to the above analysis, we propose a new LP model to solve the protein quantification problem:
                           
                              (5)
                              
                                 
                                    min
                                    D
                                 
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       n
                                    
                                    
                                       
                                          t
                                          k
                                       
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (6)
                              
                                 ∀
                                 j
                                 :
                                 
                                    b
                                    j
                                 
                                 −
                                 
                                    ∑
                                    
                                       {
                                       k
                                       |
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                       }
                                    
                                 
                                 
                                    
                                       d
                                       jk
                                    
                                 
                                 =
                                 0
                                 ,
                              
                           
                        
                        
                           
                              (7)
                              
                                 ∀
                                 
                                    j
                                    ,
                                    k
                                 
                                 :
                                 
                                    d
                                    jk
                                 
                                 ≤
                                 
                                    
                                       t
                                       k
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (8)
                              
                                 ∀
                                 
                                    j
                                    ,
                                    k
                                 
                                 :
                                 
                                    d
                                    jk
                                 
                                 ∼
                                 
                                    
                                       
                                          
                                             
                                                
                                                   =
                                                   0
                                                   
                                                   
                                                      if
                                                         
                                                      
                                                         (
                                                         
                                                            y
                                                            j
                                                         
                                                         ,
                                                         
                                                            z
                                                            k
                                                         
                                                         )
                                                         ∉
                                                         
                                                            
                                                               E
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                             
                                             
                                                
                                                   ≥
                                                   0
                                                   
                                                   
                                                         
                                                      else
                                                   
                                                
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Constraint (6) forces the predicted peptide abundance to be equal to the observed abundance value. Constraint (7) is to find the maximum value in each column vector d
                        
                           k
                         (the kth column of the matrix D). Then, minimizing the objective function (the sum of maximum peptide abundance value from each protein) will shrink the abundance values of some proteins to 0.

After obtaining the matrix D, it is still a non-trivial task to recover the protein abundance value c
                        
                           k
                         since the peptide detectability value det
                        
                           jk
                         is unknown. If we assume that 
                           
                              ∑
                              
                                 {
                                 j
                                 |
                                 (
                                 
                                    y
                                    j
                                 
                                 ,
                                 
                                    z
                                    k
                                 
                                 )
                                 ∈
                                 
                                    
                                       E
                                       2
                                    
                                 
                                 }
                              
                           
                           
                              det
                              jk
                           
                           =
                           1
                        , then the protein abundance c
                        
                           k
                         can be calculated as:


                        
                           
                              (9)
                              
                                 
                                    c
                                    k
                                 
                                 =
                                 
                                    ∑
                                    
                                       {
                                       j
                                       |
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                       }
                                    
                                 
                                 
                                    
                                       det
                                       jk
                                    
                                    ·
                                    
                                       c
                                       k
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       {
                                       j
                                       |
                                       (
                                       
                                          y
                                          j
                                       
                                       ,
                                       
                                          z
                                          k
                                       
                                       )
                                       ∈
                                       
                                          
                                             E
                                             2
                                          
                                       
                                       }
                                    
                                 
                                 
                                    
                                       d
                                       jk
                                    
                                 
                                 .
                              
                           
                        
                     

Notice that the above assumption on the sum of peptide detectability values is generally not true. Therefore, the calculated value according to Eq. (9) is only an estimated value of the true protein abundance.

Previously, we have introduced a linear programming method, ProteinLP (Huang and He, 2012), to solve the protein inference problem. The LP model presented in this paper is essentially different from ProteinLP at least in the following ways:
                           
                              •
                              Our paper is based on the idea that the protein inference problem can be solved as a special protein quantification problem. Here we want to show the possibility of using protein quantification methods to address the protein inference problem. Thus, the LP method in this paper is actually a special protein quantification method, which mainly deals with peptide/protein abundance values. While ProteinLP focuses on calculating the protein existence probability based on the peptide identification probability values.

These two methods have different assumptions. ProteinLP assumes that one peptide will be absent if all its parent proteins are not present in the sample. The LP model in this paper is based on the assumption that the abundance value of a peptide is equal to the sum of the abundance values from all its parent proteins.

The variables in these two LP models are different. The variable of ProteinLP is a mathematical transformation of the joint probability that both a protein and its constituent peptide are present in the sample. The variable in this paper is the abundance that one parent protein contributes to its constituent peptide.

The outputs of these two methods are different. The output of ProteinLP is the probability that one protein is present while that of our method is the protein abundance.

The new LP model does not need any parameters while ProteinLP has to specify a threshold parameter manually. In order to find the proper parameter automatically, ProteinLP still needs to run an additional parameter selection procedure.

After knowing the protein abundance, it is beneficial to convert the abundance into well-calibrated probability. The main reason is that the probability estimation allows us to select the appropriate threshold for reporting a set of confident proteins. In fact, the problem of converting ranking scores into estimated probabilities has been widely investigated in different domains (e.g., Gao and Tan (2006)). In this paper, we use the method proposed in (Gao and Tan, 2006) to fulfill this task.

We first estimate the probability p
                        
                           k
                         that the protein z
                        
                           k
                         is present in the sample given its abundance c
                        
                           k
                        :


                        
                           
                              (10)
                              
                                 
                                    
                                       
                                       
                                       
                                          Pr
                                          (
                                          
                                             z
                                             k
                                          
                                          =
                                          1
                                          |
                                          
                                             c
                                             k
                                          
                                          )
                                       
                                    
                                    
                                       
                                       
                                       
                                          =
                                          
                                             
                                                Pr
                                                (
                                                
                                                   c
                                                   k
                                                
                                                |
                                                
                                                   z
                                                   k
                                                
                                                =
                                                1
                                                )
                                                Pr
                                                (
                                                
                                                   z
                                                   k
                                                
                                                =
                                                1
                                                )
                                             
                                             
                                                Pr
                                                (
                                                
                                                   c
                                                   k
                                                
                                                |
                                                
                                                   z
                                                   k
                                                
                                                =
                                                1
                                                )
                                                Pr
                                                (
                                                
                                                   z
                                                   k
                                                
                                                =
                                                1
                                                )
                                                +
                                                Pr
                                                (
                                                
                                                   c
                                                   k
                                                
                                                |
                                                
                                                   z
                                                   k
                                                
                                                =
                                                0
                                                )
                                                Pr
                                                (
                                                
                                                   z
                                                   k
                                                
                                                =
                                                0
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          =
                                          
                                             1
                                             
                                                1
                                                +
                                                exp
                                                (
                                                −
                                                
                                                   f
                                                   k
                                                
                                                )
                                             
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        where
                           
                              (11)
                              
                                 
                                    f
                                    k
                                 
                                 =
                                 log
                                 
                                    
                                       Pr
                                       (
                                       
                                          c
                                          k
                                       
                                       |
                                       
                                          z
                                          k
                                       
                                       =
                                       1
                                       )
                                       Pr
                                       (
                                       
                                          z
                                          k
                                       
                                       =
                                       1
                                       )
                                    
                                    
                                       Pr
                                       (
                                       
                                          c
                                          k
                                       
                                       |
                                       
                                          z
                                          k
                                       
                                       =
                                       0
                                       )
                                       Pr
                                       (
                                       
                                          z
                                          k
                                       
                                       =
                                       0
                                       )
                                    
                                 
                                 .
                              
                           
                        
                        f
                        
                           k
                         can be considered as a discriminant function which has a Gaussian distribution with equal covariance matrices (Bishop, 1995). Then, Eq. (10) becomes
                           
                              (12)
                              
                                 
                                    p
                                    k
                                 
                                 =
                                 
                                    1
                                    
                                       1
                                       +
                                       exp
                                       (
                                       A
                                       
                                          
                                             c
                                             k
                                          
                                       
                                       +
                                       B
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     

Now, we need to estimate the parameters, A and B. Let r
                        
                           k
                         be a binary variable whose value is 1 if the protein z
                        
                           k
                         is present in the sample and 0 otherwise. Then, R
                        =(r
                        1, r
                        2, ⋯, r
                        
                           n
                        ) is the presence indicator vector of n candidate proteins. If we assume that the existence of each protein is independent of other proteins, the probability of observing R given C is:
                           
                              (13)
                              
                                 Pr
                                 (
                                 R
                                 |
                                 C
                                 )
                                 =
                                 
                                    ∏
                                    
                                       k
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    p
                                    k
                                    
                                       
                                          r
                                          k
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          1
                                          −
                                          
                                             p
                                             k
                                          
                                          )
                                       
                                       
                                          1
                                          −
                                          
                                             r
                                             k
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where C
                        ={c
                        1, c
                        2, ⋯, c
                        
                           n
                        }. The optimal parameter values should maximize Pr(R|C), i.e., minimize the following negative log likelihood function:
                           
                              (14)
                              
                                 LL
                                 (
                                 R
                                 |
                                 C
                                 )
                                 =
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    [
                                    (
                                    1
                                    −
                                    
                                       r
                                       k
                                    
                                    )
                                    (
                                    −
                                    A
                                    
                                       
                                          c
                                          k
                                       
                                    
                                    −
                                    B
                                    )
                                    +
                                    log
                                    (
                                    1
                                    +
                                    exp
                                    (
                                    A
                                    
                                       
                                          c
                                          k
                                       
                                    
                                    +
                                    B
                                    )
                                    )
                                    ]
                                 
                                 .
                              
                           
                        
                     

Eq. (14) is based on the assumption that we have already known the indicator vector R. However, we do not know such information in the protein inference process. Thus, we consider r
                        
                           k
                        s as hidden variables and employ the EM algorithm to simultaneously estimate A, B and R.

The EM algorithm utilizes an iterative procedure to estimate the parameter value θ
                        ={A, B}. The procedure includes two steps: set 
                           
                              r
                              k
                              
                                 s
                                 +
                                 1
                              
                           
                           =
                           E
                           (
                           
                              r
                              k
                              s
                           
                           |
                           C
                           ,
                           
                              θ
                              s
                           
                           )
                         (E-step) and compute 
                           
                              θ
                              
                                 s
                                 +
                                 1
                              
                           
                           =
                           arg
                           
                              min
                              θ
                           
                           LL
                           (
                           
                              R
                              
                                 s
                                 +
                                 1
                              
                           
                           |
                           C
                           )
                         (M-step), where s is the iteration index. During the E-step, the unknown vector R is replaced by its expected value R
                        
                           s+1 under the current estimated parameter value θ
                        
                           s
                        . Since θ
                        
                           s
                         is fixed, LL(R|C) is minimized by setting r
                        
                           k
                        
                        =0 if Ac
                        
                           k
                        
                        +
                        B
                        >0 or r
                        
                           k
                        
                        =1 if Ac
                        
                           k
                        
                        +
                        B
                        ≤0. During the M-step, a new parameter estimation θ
                        
                           s+1 is computed by minimizing LL(R|C) given the vector R
                        
                           s+1 calculated by the first step. Since 
                           
                              R
                              s
                           
                           =
                           [
                           
                              r
                              k
                              s
                           
                           ]
                         is fixed, minimizing LL(R|C) with respect to A and B is a two-parameter optimization problem, which can be solved using the model-trust algorithm described in (Platt, 2000).

In the above score transformation procedure, all proteins share the same set of model parameters. In fact, the estimated abundance values from different proteins are generally not comparable since longer proteins may tend to have more matched mass spectra than shorter proteins even they have the same quantities. Therefore, a new model that takes into account more factors such as the length and ionization properties of proteins should be developed in the future.

@&#EXPERIMENTAL RESULTS@&#

To test the performance of quantification-based protein inference methods, we have compared our methods with ProteinProphet (Nesvizhskii et al., 2003) and ProteinLP (Huang and He, 2012) on the six datasets.

We choose six publicly available data sets to validate the performance of our methods. The names and URLs of these data sets are given in Table 1
                        . These six data sets are divided into two categories: three data sets with reference sets and the other three data sets without reference sets. The first three data sets, 18 mixtures (Klimek et al., 2008), Sigma49 (Tabb et al., 2007) and yeast (Ramakrishnan et al., 2009a), have their corresponding reference sets that contain the ground-truth proteins. The another three data sets, DME (Brunner et al., 2007), HumanMD (Ramakrishnan et al., 2009b) and HumanEKC (Ramakrishnan et al., 2009a), do not have such reference sets. For the data sets without reference sets, a target-decoy strategy is used instead to assess the performance. This strategy searches MS/MS spectra against a hybrid protein database which is composed of target protein sequences from the original database and the same number of decoy sequences (Teng et al., 2014). Thus, an identified protein is considered as a true positive if it is present in the protein reference set or comes from the target protein database.


                        Mixture of 18 Purified Proteins (18 mixtures) and Sigma49 data set. These two data sets are both generated from the sample of synthetic proteins mixtures. The protein database used for the 18 mixtures data set consists of 1819 protein sequences, which includes 18 ground-truth proteins and some contaminant proteins. The database for the Sigma49 data set contains 15,682 Swiss-Prot human protein sequences.


                        Yeast data set. Its reference set is available at http://www.marcottelab.org/MSdata/gold/yeast.html. The protein database includes 6714 protein sequences.


                        
                           D. melanogaster data set (DME). The DME data set is produced from the embryonal Kc 167 cell line of D. melanogaster. We use Flybase (release 5.2) as the protein database, which contains 20,726 entries.


                        HumanMD data set and HumanEKC data set. The HumanMD data set is generated from medulloblastoma Daoy cell line and the HumanEKC data set is produced from human embryonic kidney T293 cell line. We use Ensembl (version 49.36k) as the protein database, which has 22,997 entries.

We use X!Tandem (v2010.10.01.1) (Craig and Beavis, 2004) for peptide identification with default search parameters. For the data sets with the reference sets, the MS/MS spectra are only searched against the target protein databases. For the data sets without the reference sets, the spectra are searched against both target and decoy protein databases. The peptide identification results are post-processed with PeptideProphet (Trans-Proteomic Pipeline v4.5) to obtain the presence probability for each peptide.

We choose ProteinProphet and ProteinLP as the competing methods. ProteinProphet is the most popular method for protein inference so far. ProteinLP is one representative method that is also based on linear programming. We run ProteinProphet with its default parameter setting and run ProteinLP with parameter ϵ
                        =0. Since some distinct proteins may have the same set of identified peptides, we cannot distinguish these proteins from each other without further evidence. Therefore, all the protein inference methods in the experiments will put these indistinguishable proteins into the same group. Each group of indistinguishable proteins is treated as a single protein during the protein inference procedure. When we evaluate the performance of different methods, we count all proteins in each group and use the presence probability of each group as the identification probability for proteins in that group.

@&#RESULTS@&#

We use the curve that shows the number of true positives as a function of the q-value to assess the performance of different methods. Given a certain probability threshold t, the q-value is the minimal false discovery rate (FDR) that is reported for a protein: 
                           
                              q
                              t
                           
                           =
                           
                              min
                              
                                 t
                                 ′
                                 ≤
                                 t
                              
                           
                           
                              FDR
                              
                                 t
                                 ′
                              
                           
                        . The FDR is estimated as FDR
                        
                           t′
                        =
                        F
                        
                           t′/(F
                        
                           t′
                        +
                        T
                        
                           t′), where there are T
                        
                           t′ true positives (TPs) and F
                        
                           t′ false positives (FPs) with probabilities ≥t′.


                        Fig. 3
                         displays the number of TPs reported by the five methods at different q-values. It shows that our methods are competitive with available protein inference algorithms. Throughout the six data sets, our three methods can always achieve zero FPs among the highest ranking proteins while the other two algorithms do not have such a property. This fact indicates that our methods have more strong distinction power than existing methods. More specifically, we have the following important observations.

First, the multiple counting method is the best performer on the HumanMD and HumanEKC data sets. For the HumanMD data set, it reports the largest number of TPs when the q-value is equal to 0. For the HumanEKC data set, it just identifies 17 fewer true positives than ProteinProphet at q-value = 0. Even though the multiple counting method does not keep such excellent performance on the 18 mixtures, Sigma49 and DME data sets, it never performs the worst.

Second, equal division is the best performer (or tied with other algorithms) on the 18 mixtures, Sigma49 and yeast data sets. Similarly, when the q-value is equal to 0, it identifies the more TPs than other methods on the 18 mixtures, Sigma49 and yeast data sets. For the HumanMD data set, equal division does not have the worst performance. For the HumanEKC data set, the curve of equal division is almost tied with the curve of our LP model, ProteinProphet and ProteinLP and the gaps among these four methods are very small.

Third, our LP model exhibits the most stable identification performance among these five methods. More precisely, it does not perform the worst across all six data sets. ProteinLP also has such a property, but its performance is worse than three algorithms on the 18 mixtures and Sigma 49 data sets. In contrast, there is only one time that the performance of our LP model is worse than three algorithms (on the DME data set). The other three methods perform the worst on at least one data set. The number of data sets is 1, 2, 3 for multiple counting, equal division and ProteinProphet, respectively.

In the calculation of protein abundance, we generalize the number of MS/MS spectra to the sum of PSM probabilities. We wish such an extension may help us to distinguish between proteins with the same number of PSMs and further improve the identification performance. Fig. 4
                         describes the performance gain when the generalized spectral counting is used instead of the traditional spectral counting. The experimental results of these three methods on the six datasets agree with our expectation: using the sum of PSM probabilities actually performs better than using the number of PSMs. Overall, there are 18 comparison results since we run our three methods on the six data sets. In these comparisons, the generalized spectral counting method performs obviously better than traditional spectral counting in 13 comparisons and performs as well as traditional spectral counting method in the remaining 5 comparisons.

The LP model in this paper is expected to be able to shrink the abundance values of some proteins to zero. Table 2
                         shows the effect of shrinkage on the six data sets. We record the number of total candidate proteins, the number of the proteins whose abundance values are zero and their rate. For the first two data sets generated from simple protein mixtures, there are around 4% proteins with abundance = 0 while the proportion becomes 7–8% for the remaining four data sets generated from real samples.

After obtaining the protein abundance, we use an EM algorithm to convert the abundance score into a well-calibrated probability. Alternatively, we can just normalize the protein abundance by dividing the maximum of all calculated protein abundance values. The second strategy also gives us a protein score between 0 and 1 and keeps the holistic distribution of the original protein abundance unchanged. Fig. 5
                         shows the reason why we adopt the more complex probability estimation approach. In this figure, the distributions of new scores generated from these two transformation methods are depicted. It is clearly visible that the probability estimation method is capable of generating a score distribution that is more close to the uniform distribution than the simple normalization method. This means that the probability estimation method allows for distinction between different proteins on a fine level.

@&#DISCUSSIONS@&#

There have been already more than 20 protein inference algorithms in the literature, whose details are summarized in several reviews (Huang et al., 2012; Li and Radivojac, 2012; Claassen, 2012). Here we only discuss two inference methods that are most closely related with our work.

Based on the observation that peptides belonging to the same protein will show a good correlation with respect to their quantification patterns, Lukasse and America (2014) used the correlation of these patterns to validate peptide to protein matches. BagReg (Zhao et al., 2015) is a learning-based method for protein inference, which built a classification model based on several features such as the number of matched spectra for each protein. Overall, both methods utilized the quantification information in their algorithms rather than modeled the protein inference problem as a protein quantification problem.

The correct assignment of shared peptides to their parent proteins is one of most challenging problems in protein inference. However, it is generally very difficult to fulfill this task since the information included in the peptide–protein bipartite graph is insufficient for distinguishing correct peptide-protein matches from incorrect ones. Yang et al. (2013) mathematically investigated the ambiguity that will be induced by the uncertainty on the assignment of shared peptides. They derived a lower bound and an upper bound on the protein existence probability. Roughly speaking, all statistical protein inference methods will deliver a probability value between the lower bound and the upper bound. This partially explains why no methods can always perform the best in our experiments since all these methods cannot completely resolve the shared peptide assignment problem. In other words, all existing methods have already reached their theoretical limitation in protein inference if no supplementary data are provided for facilitating the inference. Therefore, it is unlikely that one can further improve the identification performance by only digging more on the mathematical formulation of the protein inference problem based on standard input data.

In fact, many researchers have already realized the aforementioned problem and begun to seek solutions by including supplementary information in the protein inference process. That is, in addition to the standard input data, supplementary data and information such as the single-stage MS data (He et al., 2010, 2011), peptide detectabilities (Li et al., 2009b; Huang et al., 2013) and protein-protein interactions (Ramakrishnan et al., 2009a; Li et al., 2009a) are utilized in the protein inference model as well. The use of extra information from other data sources may overcome the limitation of currently available protein inference algorithms.

@&#CONCLUSIONS@&#

Protein inference problem can be regarded as a special protein quantification problem. In this paper, we investigate the feasibility of solving the protein inference problem with existing protein quantification methods in the context of label-free proteomics. The experimental results show that such a new angle enables us to obtain better identification performance even with some simple quantification approaches.

We have tested three protein quantification methods for solving the protein inference problem. These three methods can achieve good performance but none of them are consistently the best method on all the data sets. Thus, it is still necessary to develop better algorithms. In the future work, we plan to try more quantification methods to check if we can further improve the identification performance.

@&#ACKNOWLEDGEMENTS@&#

This work was partially supported by the Natural Science Foundation of China under Grant No. 61572094 and the Fundamental Research Funds for the Central Universities of China (DUT14QY07).

@&#REFERENCES@&#

