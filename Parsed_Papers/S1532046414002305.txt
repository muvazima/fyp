@&#MAIN-TITLE@&#A chronic disease dietary consultation system using OWL-based ontologies and semantic rules

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We build a KBS with OWL-based ontologies to infer for CKD dietary consultation.


                        
                        
                           
                           The KBS can perform standard CKD problem solving inference of as the dietitians.


                        
                        
                           
                           We propose and implement a methodological framework for building OWL-based KBS.


                        
                        
                           
                           We demonstrate a PSM process: Problem, Tasks, Axioms, Inferred Properties, and Rules.


                        
                        
                           
                           The KBS is extensible to include CC for comprehensive chronic disease diet care.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Chronic kidney diseases

Dietary control

Problem solving

Ontology

Semantic rules

@&#ABSTRACT@&#


               
               
                  Chronic diseases patients often require constant dietary control that involves complicated interaction among factors such as the illness stage, the patient’s physical condition, the patient’s activity level, the amount of food intake, and key nutrient restrictions. This study aims to integrate multiple knowledge sources for problem solving modeling and knowledge-based system (KBS) development. A chronic kidney disease dietary consultation system is constructed by using Web Ontology Language (OWL) and Semantic Web Rule Language (SWRL) to demonstrate how a KBS approach can achieve sound problem solving modeling and effective knowledge inference. For system evaluation, information from 84 case patients is used to evaluate the performance of the system in recommending appropriate food serving amounts from different food groups for balanced key nutrient ingestion. The results show that, excluding interference factors, the OWL-based KBS can achieve accurate problem solving reasoning while maintaining knowledge base shareability and extensibility.
               
            

@&#INTRODUCTION@&#

Chronic diseases are persistent illnesses that often require careful dietary management to delay progression and maintain the patient’s quality of life. This study seeks to construct a general dietary consultation system for chronic disease patients. We chose chronic kidney disease (CKD) as the research domain for problem solving modeling and knowledge-based system (KBS) development. CKD patients suffer from deteriorating kidney functions and the inability to process certain nutrients and therefore require strict dietary control [1]. Traditional dietary consultation requires dietitians to perform a series of steps to integrate various knowledge sources before giving dietary advice. These steps include: (1) collecting patient physical profile and biomedical examination data as baseline information; (2) calculating patient’s clinical CKD stage, calorie requirements, key nutrient baselines, and suggested servings from each food group; (3) comparing the patient’s actual diet to the suggested servings for dietary adjustment. These general steps involve many knowledge sources: the patient’s conditions, illness progress, nutrition requirements, nutrient restrictions, and food nutrition composition. With such knowledge sources, the dietitian then considers the complicated logical relationships between the patient’s conditions and the various knowledge-intensive sources in order to provide dietary guidance.

This study aims to construct a KBS for CKD dietary consultation. The emphasis of the KBS development is to create the problem solving mechanisms with inference capability. Knowledge models, when extensively analyzed and defined, are robust and extensive in knowledge inference. Also, new facts can be stored into existing knowledge model, and the existing logical relationships are inherited for reasoning with no additional data processing required. Therefore, KBSs are suitable for solving knowledge-intensive problems that require inference mechanisms. This study is a collaboration between dietitian practitioners and knowledge engineers. The first task in knowledge engineering is to analyze, break down, and reassemble knowledge content in order to extract the concepts and data required for modeling. The main ontological KBS design components employed in this study include: (1) using open data and domain knowledge to construct a domain ontology consisting of common constructs, concepts, and instances with super-subordinates and inheritance using the “is-a” relationship; (2) to enable problem solving, developing “has-a” properties to contain two types of objects where one object (often called the composited object) is a part or member of another object; and (3) defining the problem solving steps in the instance layer with semantic rules to infer implicit knowledge based on known facts. Although many ontologies are available, most ontologies are no more than taxonomies of classes. Without problem solving design, ontologies only function as repositories rather than KBSs. For example, the popular Web Ontology Language (OWL) data model (or schema) only provides limited elements (such as class, attribute, and individual) and simple relationships (“is-a” and “has-a”). It is therefore difficult to model the problem solving processes (such as reasoning mechanisms and business logics) based on the specifications. To construct a knowledge model that is deployable, coherent, and with the ability of interaction between roles and tasks would require substantial artificial intelligence efforts.

The remainder of this article is arranged as follows: Section 2 is a literature review that includes background knowledge of CKD, diet and key nutrients, ontological engineering, and development issues of building OWL-based KBSs; Section 3 describes the research design and elaborates the problem analysis process through the construction of the domain ontology and the task ontology; Section 4 focuses on the development of semantic rules for problem solving inference; Section 5 is an experiment that uses information from 84 case patients to evaluate the effectiveness of the KBS; Section 6 includes the conclusion and discussions.

@&#LITERATURE REVIEW@&#

Chronic disease patients often need to closely monitor their daily diet in order to control the illness progression, which requires strict management of food intake in both quantity and types [2]. However, dietary management involves complicated interactions among various factors. This complexity not only reduces the quality of dietary management, but can also consume medical resources if the patients are to have constant dietary consultation. As a result, chronic disease patients often do not receive enough professional guidance in dietary control, which can lead to disease progression, low life quality, and even malnutrition.

Chronic kidney disease (CKD) is a collective term denoting biomedical abnormalities of the kidneys. It is widespread and become a worldwide public health issue [3]. CKD is usually associated with diabetes, cardiovascular disease, hypertension, and obesity [4]. Such association further complicates the dietary control of CKD patients. The function of the kidneys is to metabolize nitrogenous waste (such as uric acid) in order to maintain the body’s balance of minerals (sodium, potassium, phosphorus, etc.) and to assist in blood pressure control and blood cell production [5]. When impaired, the kidneys are unable to excrete nitrogenous wastes, and the nitrogen retained in the blood can cause uremia. In serious conditions, urinary excretion would decrease and thus reduce the excretion of sodium and potassium ions.

The generally accepted operational definition of CKD is kidney damage and the kidneys’ inability to filter blood as measured by Glomerular Filtration Rate (GFR) [1]. The clinical CKD stages are then defined by plotting the estimated GFR (eGFR) [6,7] as shown in Table 1
                        .

According to the report by the World Health Organization (WHO), diet and nutrition are important modifiable determinants of chronic diseases [8]. In recent years, many studies have confirmed that medical nutrition therapy (MNT) can help CKD patients maintain balanced nutrition intake and postpone or impede disease progression [2,5]. Meanwhile, various studies and organizations have suggested principles of nutrition management and have reported empirical data of CKD nutrient restrictions. We integrated sources of nutrient intake baselines (Table 2
                        ) with data from the National Institute of Health (NIH) web sites,
                           1
                           
                              http://www.ncbi.nlm.nih.gov/pubmed/12081582.
                        
                        
                           1
                         the NKF Kidney Disease Outcomes Quality Initiative (KDOQI),
                           2
                           
                              https://www.kidney.org/professionals/kdoqi/guidelines_ckd/toc.htm.
                        
                        
                           2
                         and a CKD Prevention Handbook.
                           3
                           
                              http://www.tsn.org.tw/.
                        
                        
                           3
                        
                     

CKD dietary management requires appropriate nutrition intake from different food groups. In a survey on common food nutrients by the Ministry of Health and Welfare of Taiwan, more than 1000 food items are analyzed and indexed to create the Taiwan Food Nutrients Database.
                           4
                           
                              https://consumer.fda.gov.tw/Files/other/食品營養成份資料庫(新版).XLS.
                        
                        
                           4
                         The food items are grouped into 18 categories, and each food entry is analyzed for 23 nutrition values. Table 3
                         shows a partial example of the food nutrient entries from the database.

The United States Department of Agriculture (USDA) suggests general guidelines on daily food consumption from the MyPlate
                           5
                           
                              http://www.choosemyplate.gov/
                           
                        
                        
                           5
                         food groups: grains, protein foods, dairy, fruits, and vegetables with the additional oil group. The Ministry of Health and Welfare of Taiwan directly adds “oil, nuts, and seeds” as the sixth group and suggests balanced daily servings from each food group. However, because CKD patients need to restrict the intake of certain nutrients, the suggested balanced diet servings need to be adjusted. Table 4
                         shows the modified intake servings suggested from each food group by caloric requirements for CKD patients.

Ontology in philosophy is a discipline that studies the nature of “being” by inquiring how things exist. Ontology as a methodology has been widely adopted in various fields of study to model and construct taxonomies for domains of interest [9]. Over time, ontology is seen as a synonym of “conceptual model” [10]. In recent decades, ontology has also been applied in information science research, especially in the areas of artificial intelligence, in which conceptual models are created with properties and relationships. In KBSs, concepts are used not just as terms, but also as computable objects with logical definitions, which enable knowledge for inductive and deductive reasoning [11].

Following the maturity of XML technologies, the ontology research community has also adopted the markup language approach to allow ontology reusability and shareability. The W3C recommended the OWL as a formal specification for ontology representation [12]. In terms of development tools, Protégé is a prevalent platform created by the Stanford Center for Biomedical Informatics Research for OWL-based ontology development, OWL-based problem solving modeling, and KBS execution [13]. In addition to conceptual representation of ontology, rule languages (e.g., Semantic Web Rule Language, SWRL) can be used to develop rules in the instance layer of the ontology to enable reasoning using rule inference engines [14,15].

KBS development has been used for studying disease diagnosis [16] and nutritional consultation. Because it involves strong domain expertise and complicated relationships among knowledge sources, which are the strengths of KBS inference. For example, Abu-Hanna et al. [17] used Protégé in their development of medical terminological system (TS). The study indicated that the definition methods (conceptual framework, property, and logical relationships) used in ontology engineering can effectively integrate medical terminologies for knowledge sharing with other applications. Roventa and Rosu [18] used Prolog to develop an expert system for kidney disease diagnosis providing probable evaluation models to assist medical specialists making diagnosis decision. Chen et al. [19] constructed a general dietary recommender system for chronic patients using Protégé for domain ontology editing and JENA for inference to evaluate the nutritional components of the patient’s diet. Lee et al. [20] developed a dietary assessment system using fuzzy techniques and a domain ontology with fuzzy set layer extension to evaluate diet healthiness.

In KBS research, knowledge comes in three types: domain knowledge (schema and instances), task knowledge, and inference knowledge [21]. This classification roughly corresponds to the cognitive psychology classification of knowledge: declarative knowledge vs. procedural knowledge, in which declarative (know-about) knowledge describes domain’s factual entities, whereas procedural (know-how) knowledge describes the task knowledge and inference knowledge in the problem solving processes [22–24]. Before the development of the World Wide Web, the acquisition of domain knowledge used to be the bottleneck for knowledge engineering, yet researchers now have an overflow of domain knowledge available online [25]. These knowledge sources are valuable to knowledge engineers and have greatly reduced the effort of knowledge acquisition [26,27]; for example, the ontologies in BioPortal
                           6
                           National Center for Biomedical Ontology (http://bioportal.bioontology.org/).
                        
                        
                           6
                         and the OBO Foundry.
                           7
                           The Open Biological and Biomedical Ontologies (http://www.obofoundry.org/).
                        
                        
                           7
                         However, without contextualized problem solving design, ontologies only function as hierarchical dictionaries for standard terminology interchange and communication [28]. For example, as pointed out by Rosenbloom et al. [29], the UMLS
                           8
                           The Unified Medical Language System (http://www.nlm.nih.gov/research/umls/).
                        
                        
                           8
                         covers more than one million concepts and five million synonyms; yet, the issue is not its completeness but how the end users can be supported to use it.

As Breuker [26], Musen [30], and Motta [31] have stated, problem solving has not received due attention in contrast to its counterpart, domain knowledge. Problem solving is a process including steps of problem identification, analysis, diagnosis, and proposal of solution. Traditionally, problem solving is a major part of procedural knowledge and is the backbone of KBS [32]. Before the Semantic Web era, the modeling of problem solving using task knowledge to enable reasoning with domain knowledge has been proposed and detailed for KBS development (e.g., [10,32–34]).

To take advantage of the vastly available domain knowledge, Fernández-López et al. [35] have proposed methodological guidelines to adapt domain knowledge into domain ontology. Fürst and Trichet [36] also proposed a scenario-based approach to integrate declarative knowledge into new domain ontologies. This modeling transition step is necessary because the general ontologies are too declarative to be directly used in a KBS for problem solving [26,38,39].

This study use ontological engineering for knowledge modeling. An ontological knowledge model is an abstract structure of concepts, in which each concept has properties and relationships to represent the knowledge connotations. A knowledge model can therefore be seen as a schema for knowledge description. When implementing such modeling, the concepts are constructed into domain ontology to represent declarative knowledge and task ontology to represent procedural knowledge to be inferred. The facts (or instances) are then asserted into the schema to become a knowledge base. Based on the guidelines proposed by researchers [10,32,34–36], we propose four design elements for the modeling of OWL-based KBS development:
                        
                           (1)
                           
                              Analyzing the problem scenarios: The three knowledge types (domain knowledge, task knowledge, and inference knowledge) correspond respectively to domain ontology, task ontology, and semantic rules in KBS. The analysis of problem scenario would identify the tasks and the task knowledge needed for problem solving with respect to the domain knowledge.


                              Modeling the domain ontology: Domain ontology is hierarchical declarative knowledge and may be obtained from Web sources such as open data and published ontologies. While mainly a hierarchical taxonomy, semantic elements such as properties and instances are specified under the contained classes in the modeling process. In addition, a controlled vocabulary is often needed to include common terms for the purpose of reference and communication.


                              Modeling the task ontology: A task ontology outlines and implements the problem solving, which defines the steps to achieve a task and breaks a task into sub-tasks. In the instance layer, a task ontology class contains asserted properties and inferred properties. Each inferred property corresponds with at least one axiom for implementing the reasoning process.


                              Developing semantic rules: Axioms act as a medium for transferring human expertise into machine understandings. In KBS, there are two types of axioms: logical axioms and non-logical axioms. Logical axioms are used to collect available known facts to infer implicit knowledge; while non-logical axioms are formulas such as arithmetic operations. The axioms can be further programmed using semantic rules such as the SWRL [37,40], which is similar to Prolog (horn-like logic programming) and is commonly used for building inference mechanisms in OWL-based KBSs.

To carry out the KBS development in our study, major research roles include: (1) one project leader with 5-year experience in information system development; (2) two knowledge engineers with 5-year experience in KBS development; and (3) three domain experts (one physician specialized in CKD and two dietitians). The research process can be divided into three phases including: (1) modeling phase, in which the domain ontology, task ontology, and inference rules were jointly constructed by the research team; (2) development phases, in which the knowledge engineers developed the KBS; and (3) experiment and evaluation phase, in which the system went through trial and evaluation by the domain experts. Specifically, the researcher roles and responsibilities in each research phase are summarized as Table 5
                     .

The problem of chronic disease dietary management can be generally understood as the interaction between a patient’s conditions and the related knowledge sources. As shown in Fig. 1
                        , multiple knowledge sources are involved and interactions also exist among the knowledge sources. Chronic disease knowledge, for example, includes clinical stage definition, stage estimation equation, and nutrient restriction. Nutrient knowledge, as a concept, includes at least food groups and the nutrient composition of each food item. The food group includes the categorization of food items and their recommended daily servings in different conditions. Case patient data work as a trigger to interact with the knowledge sources to create dietary suggestions.

To implement the problem scenarios analysis, one physician specialized in CKD and two dietitians have participated as consultants for verifying knowledge sources and problem scenarios from the beginning. The two knowledge engineers then formalized the problem solving into four major non-logical axioms as follows:
                           
                              (1)
                              Calculating suggested food group servings by individual conditions

As indicated in Table 4, the matrix consists of calorie values (seven levels) and food group types (six groups). Eq. (1) is the general equation for the suggested servings FG
                        (
                        
                           p
                        
                        ,
                        
                           i
                        
                        ,
                        
                           s
                        
                        ) in food groups by case (p), calorie level (i), and CKD stage (s) to find the suggested corresponding servings in each food group.
                           
                              (1)
                              
                                 
                                    
                                       FG
                                    
                                    
                                       (
                                       p
                                       ,
                                       i
                                       ,
                                       s
                                       )
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       grains
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       meat
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       milk
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       vegetables
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       fruits
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       oil
                                       &
                                       nuts
                                    
                                 
                                 )
                              
                           
                        
                     


                        
                           
                              (2)
                              Calculating suggested key nutrient intakes by individual conditions

CKD patients require sufficient calories, but have to restrict the intake of certain key nutrients: proteins, phosphorus, potassium, and sodium. Eq. (2) is a general equation for calculating the patient’s suggested key nutrient intakes. The equation calculates CKD clinical stages against key nutrient intakes to obtain base values of key nutrients. A protein is weighted by the weight of the case (wp
                        ). 
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                NR
                                             
                                             
                                                p
                                             
                                          
                                          =
                                          (
                                          
                                             
                                                n
                                             
                                             
                                                stage
                                                ,
                                                Calories
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                stage
                                                ,
                                                Protein
                                             
                                          
                                          ×
                                          
                                             
                                                w
                                             
                                             
                                                p
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                stage
                                                ,
                                                Phosphorus
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                stage
                                                ,
                                                Potassium
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                stage
                                                ,
                                                Sodium
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          =
                                          (
                                          
                                             
                                                N
                                             
                                             
                                                Calories
                                             
                                          
                                          ,
                                          
                                             
                                                N
                                             
                                             
                                                Protein
                                             
                                          
                                          ,
                                          
                                             
                                                N
                                             
                                             
                                                Phosphorus
                                             
                                          
                                          ,
                                          
                                             
                                                N
                                             
                                             
                                                Potassium
                                             
                                          
                                          ,
                                          
                                             
                                                N
                                             
                                             
                                                Sodium
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                     


                        
                           
                              (3)
                              Examining suggested food group servings against a patient’s food combination

Eq. (3) examines the differences in food group servings between the case patient’s food combination and the suggested values in Eq. (1). For example, f
                        (
                        
                           i
                        
                        ,
                        
                           grains
                        
                        ,
                        
                           servings
                        
                        ) denotes the number of grain servings in food item i. 
                           
                              (3)
                              
                                 
                                    
                                       Case
                                    
                                    
                                       (
                                       p
                                       ,
                                       food
                                       _
                                       group
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         grains
                                                         ,
                                                         servings
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         grains
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         meat
                                                         ,
                                                         servings
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         meat
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         vegetables
                                                         ,
                                                         servings
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         vegetables
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         milk
                                                         ,
                                                         servings
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         milk
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         fruit
                                                         ,
                                                         servings
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         fruits
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         oil
                                                         &
                                                         nuts
                                                         ,
                                                         servings
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         oil
                                                         &
                                                         nuts
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        
                           
                              (4)
                              Examining suggested key nutrient intakes against a patient’s food combination

The examination of key nutrient compositions is as indicated by Eq. (4), which calculates the difference of key nutrient intake between the patient’s food combination and the suggested key nutrient intakes from Eq. (2). For example, f
                        (
                        
                           i
                        
                        ,
                        
                           Calories
                        
                        ) denotes the calorie intake per serving of food item i. The value is then multiplied by the number of intake servings (si
                        ) to obtain the total calories, and then subtracted by the suggested NCalories
                         to calculate the difference. 
                           
                              (4)
                              
                                 
                                    
                                       Case
                                    
                                    
                                       (
                                       p
                                       ,
                                       nutrients
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         Calories
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         Calories
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         Protein
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         Pr
                                                         oein
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         Phosphorus
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         Phosphorus
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         Potassium
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         Potassium
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         ,
                                                         Sodium
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   
                                                      
                                                         N
                                                      
                                                      
                                                         Sodium
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

A domain ontology consists of a general conceptual structure and instances using an “is-a” to establish the subsumption relationships. The terminal concepts are elaborated by asserting instances. Therefore, a domain ontology is a taxonomy that does not aim for solving specific problems, but is rather a common understanding of the domain for ontological sharing and reuse. Based on the analysis in Section 3.1, we constructed a set of common terminologies into controlled vocabulary. From the background information in Section 2, the domain knowledge of CKD and food items is used as initial concepts. In order to transfer this knowledge into an OWL-based ontology, the Protégé is used to create the classes, properties, and instances. The central part of Fig. 2
                         shows the top-level concepts of the domain ontology. The child concepts and grandchild concepts are filled with constituent instances (see Fig. 2A-1). Each instance can have its own internal property description (e.g., Fig. 2A-1-1). The concepts included are as follows:
                           
                              (1)
                              
                                 Controlled vocabulary: The controlled vocabulary includes three sub-concepts. Under each concept, the common terms are listed to provide reference and indexing for communication with other concepts and instances.
                                    
                                       •
                                       Activity_Level: This concept establishes five activity levels as instances and defines the corresponding values, for example, “Light Activity,” coefficient value 1.375.

Calorie_Level: This concept classifies calorie requirements ranging from 1,200 to 2,700 Cal with seven instances established.

Food_Groups: This concept includes the six food groups as standard vocabulary.

CKD Knowledge: This knowledge source includes three sub-concepts through the definition of the CKD clinical stages and the nutrient restrictions of each stage.
                                    
                                       •
                                       Dietary_Servings: Following Table 4, this concept includes calorie levels (has_Calorie_Level) and the values of the suggested servings in the six food groups (has_Grains_Serving, has_Protein_Serving, has_Dairy_Serving, has_Fruits_Serving, has_Vegetables_Serving, and has_Oil_Serving) (e.g., Fig. 2B1 and B1-1).

Nutrient_Limitation: Following Table 2, this concept defines baseline nutrient values as properties by CKD clinical stage. Each stage includes four key nutrient restrictions: has_Protein_Limitation, has_Phosphorus_Limitation, has_Potassium_Limitation, and has_Sodium_Limitation (e.g., Fig. 2C-1-1).

Stage_Definition: Following Table 1, this concept defines three CKD clinical stages (has_Stage), a lower bound of eGFR (has_eGFR_min), and an upper bound of eGFR (has_eGFR_max) (e.g., Fig. 2: A-1-1).


                                 Nutrient compositions: This knowledge source includes six sub-concepts corresponding to Grains, Protein Foods, Dairy, Vegetables, Fruits, and Oils. The food nutrient compositions is acquired as open data from government and professional organizations. However, these open data needed to be analyzed, re-organized, and transformed into OWL-based ontology. In Section 5.1 we describe how we performed this open data transformation.

A task ontology is for enumerating and represent specific problems to be solved. In addition to constructing the conceptual structure, the concepts’ constituent properties also need to be planned in order to describe the problem solving knowledge framework. To define the details of the OWL-based properties, the property values of known facts or unknown knowledge are first defined to separate asserted properties from inferred properties. Next, the corresponding domain and range of the properties are asserted. If a range uses basic data type, it is a data property; whereas if a range uses instances, it is an object property.

Six major concepts are designed under the task ontology, including “Personal Profile,” “Personal Nutrient Count,” “Personal Dietary,” “Diet Examination,” “Food Selection,” and “CSV Data” as described below:
                           
                              (1)
                              
                                 Personal profile: A total of 11 properties are designed. Seven asserted properties are name, gender, age, height, weight, activity level, and creatinine value. Four inferred properties are CKD clinical stage, eGFR value, calorie requirement, and calorie level. All inferred properties are designed as tasks (mapped to Rule-1 through Rule-6 as seen in Table 6
                                 ).


                                 Personal nutrient count: Five properties are designed, including four inferred properties designed to annotate the suggested values of proteins, phosphorus, potassium, and sodium (mapped to Rule-7 through Rule-10).


                                 Personal dietary: Eight properties are designed. Two asserted properties are case name and food intake. Six inferred properties are designed to infer the balanced food group servings (mapped to Rule-11 through Rule-16 as seen in Table 6).


                                 CSV data: Two grandchild concepts of “Nutrition” and “Serving” are designed to provide the basis for evaluating the nutrients and food groups of food intake. Properties are reserved for storing the results from executing Rule-17 and Rule-18. The properties of each concept are as seen in Table 6.


                                 Diet examination: Three properties are designed, including one asserted property of case name and two inferred properties for nutrient examination and food group serving examination. The examination of proper servings is mapped to Rule-19 through Rule-24. The examination of proper nutrients is mapped to Rule-25 through Rule-29, as seen in Table 6.


                                 Food selection: Six grandchild concepts are designed. Within each concept, three asserted properties of food name, food group, and servings are designed.

In the task ontology detailed in Table 6, 18 inferred properties are designed as sub-tasks. These properties require semantic rules to combine related facts for inference. Before creating semantic rules, we collect the practical problem solving experiences, and then use the “premise→conclusion” logic form to describe the problem solving process [41]. The analysis of semantic rules starts with the concept in which the property belongs, and then chains the concept to other facts in a step-by-step manner until the objective is achieved. Each step is expressed as an atom and the rule is expressed in the form of “(atom1^… ^ atomn
                     )→
                     Consequence” to express the cause-effect relationship.

For example, the steps for evaluating a CKD patient’s clinical stage (has_stage) requires the steps from obtaining the eGFR value to referring to the maximum and minimum values of the CKD clinical stages to acquire proper stage values. The steps can be expressed as an SWRL-based rule (Rule-1) as follows:
                        
                           
                              
                              
                              
                                 
                                    
                                       Personal_Profile (?x) ∧ has_eGFR (?x, ?y) ∧ Stage_Definition (?s) ∧ has_eGFR_min (?s, ?b) ∧ has_eGFR_max (?s, ?c) ∧ swrlb:greaterThanOrEqual (?y, ?b) ∧ swrlb:lessThanOrEqual (?y, ?c) → has_Stage (?x, ?s)
                                       
                                    
                                    Rule-1
                                 
                              
                           
                        
                     
                  

In total, this study developed 29 semantic rules under the three concepts of “Personal Profile,” “Personal Dietary,” and “Personal Nutrient Count”.
                        
                           (1)
                           Semantic rules under the concept of “Personal Profile”

Calculating GFR (has_eGFR): In the calculation of eGFR, the Modification of Diet in Renal Disease (MDRD) equation is widely adopted by organizations such as the United States NKF. Eq. (5) uses age, serum creatinine (Scr), and gender to estimate GFR:

Rule-2 and Rule-3 are developed following Eq. (5). The example below uses Rule-2 to infer a male patient’s eGFR.
                        
                           
                              
                              
                              
                                 
                                    
                                       Personal_Data (?x) ∧ has_Cr (?x, ?y) ∧ has_Age (?x, ?z) ∧ has_Gender (?x, “Male”) ∧ swrlb:pow (?a, ?y, -1.154) ∧ swrlb:pow (?b, ?z, -0.203) ∧ swrlb:multiply (?c, ?a, ?b) ∧ swrlb:multiply (?d, ?c, 175) ∧ swrlb:multiply (?M_ans, ?d, 0.742) → has_eGFR (?x, ?M_ans)
                                       
                                    
                                    Rule-2
                                 
                              
                           
                        
                     
                     
                        
                           •
                           Inferring calorie requirement: Eq. (6), the basal metabolic rate (BMR) equation, is used to estimate the baseline calorie requirement.

The actual calorie requirement is obtained by multiplying the BMR value to the activity level factors. The factors are: sedentary (1.2), lightly active (1.375), moderately active (1.55), very active (1.725), and extra active (1.9). The example below (Rule-4) is for the calculation of male caloric requirement:
                        
                           
                              
                              
                              
                                 
                                    
                                       Personal_Profile (?x) ∧ has_Weight (?x, ?w) ∧ has_Height (?x, ?h) ∧ has_Age (?x, ?a) ∧ has_Gender (?x, “Male”) ∧ has_Activity (?x, ?z) ∧ has_Coefficient (?z, ?c) ∧ swrlb:multiply (?a1, ?w, 13.7) ∧ swrlb:multiply (?a2, ?h, 5) ∧ swrlb:multiply (?a3, ?a, 6.8) ∧ swrlb:add (?ans1, ?a1, 66) ∧ swrlb:add (?ans2, ?ans1, ?a2) ∧ swrlb:subtract (?ans3, ?ans2, ?a3) ∧ swrlb:multiply (?C_Male, ?ans3, ?c) → has_Requisite_Calorie (?x, ?C_Male)
                                       
                                    
                                    Rule-4
                                 
                              
                           
                        
                     
                     
                        
                           •
                           Inferring suggested key nutrient intakes: Rule-7 to Rule-10 are respectively developed to infer four suggested key nutrient intakes as designed in Eq. (2). The example below is for inferring proteins intake suggestion. The rules for other key nutrient suggestions can be created in the same manner.

Semantic rules under the concept of “Personal Dietary”

These rules evaluate a case patient’s suggested servings from the food groups. The values of clinical stage and calorie requirement level from Rule-1 and Rule-4 are needed for the inference. Rule-11 to Rule-16 are respectively developed to infer six suggested food group servings as designed in Eq. (1). Rule-11 below infers grains servings. Rules for other suggested food group servings can be created in the same manner.
                        
                           
                              
                              
                              
                                 
                                    
                                       Personal_Dietary (?x) ∧ has_Case_Name (?x, ?p) ∧ has_Stage (?p, ?s) ∧ has_Calorie_Level (?p, ?k) ∧ Dietary_Servings (?y) ∧ has_Stage (?y, ?s) ∧ has_Calorie_Level (?y, ?k) ∧ has_Grain_Servings (?y, ?ans) → has_Grain_Servings (?x, ?ans)
                                       
                                    
                                    Rule-11
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           Semantic rules under the concept of “Personal Nutrient Count”

The rules below examine the differences in food group servings and key nutrient intakes between the case patient’s diet and the suggested values. Before examining the differences, we need to first calculate the actual amounts of the patient’s food combination. The Semantic Query-Enhanced Web Rule Language (SQWRL) is used to help the arithmetic operations of rules.
                        
                           •
                           Calculating the actual food group servings: After the calculation is completed, the results are output by case, food group, and intake servings (Rule-17).

Calculating the actual key nutrient intake: After the calculation is completed, the results are output by case and key nutrient names (Rule-18).

Examining the food group servings: Developing Rule-19 to Rule-24 complying with Eq. (3) is calculating the differences between the actual and suggested food group servings. Rule-19 below infers grains servings. Rules for inferring other food group serving differences can be created in the same manner.

Examining the key nutrient intakes values: Developing Rule-25 to Rule-29 complying with Eq. (4) is calculating the differences between the actual and suggested key nutrient intakes. Rule-25 below infers calorie intake. Rules for inferring other key nutrient intake differences can be created in the same manner.

The domain ontology of this study (as described in Section 3.2) includes three parts: (1) common CKD knowledge, such as the definition of clinical stages, key nutrient restrictions, and food group servings; (2) controlled vocabulary, including food groups, food names, and calorie levels for communication and data exchange; (3) food nutrient composition, including the content data of key nutrients in individual food items. Facts in the first two types are completed by inserting instances as shown in Fig. 2. The third concept, the food nutrient composition, is adopted from government open data sets. Because of the differences in both data model and format, we developed a pre-processing procedure for open data transformation as follows:
                           
                              (1)
                              
                                 Data cleaning: The original data have symbols, spaces, and markings for layout and presentation that need to be removed before transformation.


                                 Element mapping: Considering the compatibility when transferring to the knowledge base, the properties transferred need to be named with the correct properties reserved. In other words, the properties need to be adjusted to connect to the existing concepts and properties within the knowledge base.


                                 Logical relationship design: The logical relationship between food nutrient compositions and other knowledge needs to be established when designing the knowledge framework. After transferring the data into the instances, the factual knowledge of the food nutrient compositions are constructed.

The design of the system processes is modeled from the dietary consultation activities. The patient data and food combination are input into the Web-based application, and the back-end KBS responds with inferences against existing knowledge. The application uses Apache Tomcat as the application server to connect to the inference services provided by the rules engine (Java Expert System Shell, JESS) in the Protégé platform. Java Server Page (JSP) is employed to create the Web-based user interface.

As seen in Fig. 3
                        , the interface is divided into two blocks. The Personal Data block is for basic patient data. For example, the demonstrated case patient is male, height 165cm, age 88, weight 66.4kg, moderately active, and has creatinine value of 2.7. In the Food List block, three drop-down menu boxes (Food Group, Food Name, and Servings) are used to input the patient’s daily actual food combination. The food items and servings are added into the My Plate box. After completing the personal data and daily food combination, the back-end rules engine infers the CKD stage, calorie baseline, suggested food group servings, and suggested key nutrient intakes.

The result interface is presented in four categories following the dietary consultation problem solving described in Section 3.1. The patient data input is used as facts for triggering the SWRL rules (from Section 4) to infer against the knowledge base. Fig. 4
                         shows the Personal Data, the Food Combination selected, as well as the results of the rule computations and inferences:
                           
                              (1)
                              Calculating suggested food group servings by individual conditions: In the upper left block of Fig. 4, the suggested servings of the six food groups are obtained from executing Rule-11 through Rule-16.

Calculating suggested key nutrient intakes by individual conditions: In the upper right block of Fig. 4, the calorie requirement and four suggested key nutrient intakes are obtained (Rule-6 through Rule-10).

Examining suggested food group servings against a patient’s food combination: In the lower left block of Fig. 4, the results are obtained from examining the differences in food group servings between actual food combination and suggested values (Rule-19 through Rule-24). For example, the resulted number of servings matches the suggestion in fruits and dairy, one serving over in protein foods, and half serving short in oils, and one serving short in grains and vegetables.

Examining suggested key nutrient intakes against a patient’s food combination: In the lower right block of Fig. 4, the results are obtained from examining the differences in key nutrient intakes between actual food combination and suggested values (Rule-25 through Rule-29). For example, in Protein, the suggested value is 39.8, but the actual value is 48.7, which is 22.4% overbalance.

@&#EVALUATION@&#

For evaluation purpose, we obtained 84 anonymous case patient records from the collaborating hospital. Each record contains basic personal data and a corresponding clinical suggested food combination advised by the dietitians previously. The evaluation was done in a three stages:
                           
                              (1)
                              
                                 KBS calculation and inference: We entered the personal data and the clinical diet suggested key nutrient intakes into the system interface to perform diet consultation through our KBS. The resulted system outcomes included: (1) the evaluation of patient’s CKD clinical stage, (2) suggested food servings, (3) suggested key nutrient intake, (4) differences in food group servings between suggested values and the patient actual food combination, and (5) difference in key nutrient intakes between suggested values and the patient actual food combination.


                                 Manual verification by dietitians: Results of the case patient experiments were then sent to the two hospital dietitians for verification. Using the same data set, the dietitians manually looked up related tables, went through standard diagnosis processes, and used professional reasoning to determine each case patient’s conditions and dietary needs. Eq. (7) is a general equation for calculating the accuracy of system estimation. The accuracy is the ratio of the number of identical (between the system outcome and expert evaluation) results over the total number of case results. During the first round evaluation process, a number of inconsistent results were found. Through verification with the dietitians, some incorrect manual calculations were found and corrected, and the dietitians’ suggestions were identical to the results of KBS inference in second round (see Table 7
                                 ). This finding is similar to a previous study where the system estimation is faster and more accurate than manual estimation [19].


                        
                           
                              (3)
                              
                                 Historical data verification: Finally, we compared the inference results from the KBS with the dietitian suggested food combinations (historical data, as seen in the last row of Table 7). We found noticeable differences in all columns except the CKD Clinical stage. After a joint review of the researchers, it was found that 22 patients had comorbidity and complication (CC) and 5 patients had non-medical reasons. These interference factors had caused the differences. However, for the cases without the interference factors, the inference results of the KBS and the dietitians were identical.

This study has developed a pilot CKD dietary consultation system by constructing an OWL-based KBS. Under standard scenarios, the experiment results from the KBS inference are identical to the dietitians’ manual calculation and reasoning. The KBS is capable of not only imitating the dietitians’ decision making process in CKD dietary consultation, but also reducing time consumption and calculation errors.

In terms of knowledge modeling, three major KBS design components are as follows:
                        
                           (1)
                           A domain ontology as a hierarchical representation of the declarative knowledge required for problem solving tasks: The three concepts established are controlled vocabulary, common definition of CKD, and food nutrient composition. Under each concept, related sub-concepts and instances are asserted. The domain knowledge is acquired from open data repositories and transformed into the domain ontology after defining the logical relationships among the knowledge sources.

A task ontology as a representation of the knowledge model for problem solving: Six top-level concepts are developed as shown in Table 6. The task ontology uses properties to represent logical relationships such as combination, aggregation, and cause-effect among concepts. Particularly, this study designed 18 inferred properties for enumerating detailed sub-tasks.

Use of SWRL and SQWRL for creating semantic rules: Both languages are used to obtain the values of the inferred properties. Together these rules formulated the implementation of the problem solving. In total, 29 rules are developed to create correspondence between the rules and the concepts and to infer the desired dietary consultation results.

For future clinical deployment, given the experience from the current research, we suggest to first expand the knowledge model to include the closely related knowledge sources of CKD comorbidity and complication, such as specific diabetes mellitus and cardiovascular diseases. Such expansion will enable the KBS to take into account of major interaction and interference factors and thus enhance its inference capacity for clinical usage. Secondly, the system may be used for interactive dietary management in the clinical implementation. Since the Web-based application can provide 24/7 service and keep track of system usage, the dietitians can use the system to supervise the patients’ daily diet and review the records in the clinical visits. Thirdly, further clinical experiments involving larger groups of patients over a lasting period of time are necessary to gather operational information on system performance and for modeling enhancement. In the future, with the strengths of open data linkage and knowledge base extensibility, this CKD dietary consultation system can be expanded and refined to become a more comprehensive dietary consultation system for more chronic diseases.

@&#REFERENCES@&#

