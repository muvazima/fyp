@&#MAIN-TITLE@&#2D/3D image registration using regression learning

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel rigid or deformable 2D/3D image registration method using regression learning.


                        
                        
                           
                           The method learns a shape space of geometric transformation from the 3D image set.


                        
                        
                           
                           The method uses multi-scale linear regressions on the 2D image intensity residues.


                        
                        
                           
                           Target problem is registration between planning time and treatment time in radiotherapy.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

2D/3D registration

Regression

Machine learning

IGRT

Radiation therapy

@&#ABSTRACT@&#


               
               
                  In computer vision and image analysis, image registration between 2D projections and a 3D image that achieves high accuracy and near real-time computation is challenging. In this paper, we propose a novel method that can rapidly detect an object’s 3D rigid motion or deformation from a 2D projection image or a small set thereof. The method is called CLARET (Correction via Limited-Angle Residues in External Beam Therapy) and consists of two stages: registration preceded by shape space and regression learning. In the registration stage, linear operators are used to iteratively estimate the motion/deformation parameters based on the current intensity residue between the target projection(s) and the digitally reconstructed radiograph(s) (DRRs) of the estimated 3D image. The method determines the linear operators via a two-step learning process. First, it builds a low-order parametric model of the image region’s motion/deformation shape space from its prior 3D images. Second, using learning-time samples produced from the 3D images, it formulates the relationships between the model parameters and the co-varying 2D projection intensity residues by multi-scale linear regressions. The calculated multi-scale regression matrices yield the coarse-to-fine linear operators used in estimating the model parameters from the 2D projection intensity residues in the registration. The method’s application to Image-guided Radiation Therapy (IGRT) requires only a few seconds and yields good results in localizing a tumor under rigid motion in the head and neck and under respiratory deformation in the lung, using one treatment-time imaging 2D projection or a small set thereof.
               
            

@&#INTRODUCTION@&#

In a variety of situations of image-guided therapy in medicine, a 2D/3D geometric transformation is required to relate a 3D image of the patient used in planning the treatment with a set of 2D images acquired at treatment time [1]. Current 2D/3D registration methods [2–5] find the transformation that optimizes an objective function consisting of an image matching term and a regularization term. As a fast optimization often requires many evaluations of the function’s Jacobian, optimization-based registration methods without further parallelization are structurally slow unless often unrealistically accurate initialization is provided. With GPU parallelization recent optimization-based 2D/3D registration methods are able to localize the tumor within 1s assuming rigid patient motion [6,7] or non-rigid motion [8,9]. However, the mismatch in the registration dimensionality often introduces a non-convex objective function which is prone to optimization solutions that are caught in local minima (i.e., non-global solutions) with normally available initializations. In order to avoid local minima and to reduce the registration time, Li et al. [8,9] adopted a bootstrap-like approach where optimizations were initialized by registration results from previous time points. Their optimizations were fully-implemented on high-end GPUs and obtained sub-second speed. Other methods have used neural networks to model rigid [10–12], or non-rigid transformations [13] and to achieve efficient computation at registration time. However, to the best of our knowledge, there is no general framework that supports both rigid and non-rigid 2D/3D registration. We have sought a learning-based framework that is fast, general to both types of registration, robust to normally available initializations, and not based on optimization.

In this paper, we describe the methodology of our general learning-based framework that was initially presented in Chou et al. [14] for rigid registration and Chou et al. [15] for non-rigid registration, respectively. Steininger et al. [16] subsequently presented a similar approach for rigid registration. In a way similar to the face alignment algorithm AAM (Active Appearance Model) by Cootes et al. [17] and the efficient tracking scheme by Jurie and Dhome [18], we seek a linear operator M, calculated by linear regression, that when iteratively applied to intensity differences (residue) R between digitally-reconstructed radiographs (DRRs), i.e., projections, of the currently estimated 3D image and the measured 2D images, yields the update of the estimated transformation parameters 
                        
                           Δ
                           
                              
                                 C
                              
                              
                                 ^
                              
                           
                        
                      that reduce the residue.
                        
                           (1.1)
                           
                              Δ
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              =
                              M
                              ·
                              R
                           
                        
                     The registration process in Eq. (1.1) requires no optimizations; therefore it can support efficient registration. Different from the AAM, our linear operator M estimates the 3D transformation parameters from 2D projection intensity residues R for the 2D/3D registration.

The paper is organized as follows. First, we describe our 2D/3D registration framework and our efficient approximation of the shape parameters C in Section 2. In Section 3, we describe how we obtain low-order parameterization for rigid motion and for a deformation shape space. In Section 4, we describe our regression learning to calculate the linear operator M and an efficient multi-scale learning scheme. In Section 5, we describe how we generate commensurate projection intensities to support our regression estimation. In Section 6, we describe the experimental setup and clinical context of our medical application. In Section 7, we present our registration results and compare them to those of an optimization-based method. In Section 8, we discuss our rigid and non-rigid registration results.

We first describe the general framework of our 2D/3D image registration method. Second, we describe our approach for efficient registration within this framework.

The goal of the 2D/3D registration is to match a transformed 3D grey-scale source image to a set of target 2D projections Ψ. We denote the projection intensity at pixel location x
                        =(x
                        1,
                        x
                        2) and projection angle θ as Ψ(x;
                        θ). The registration is formulated as an iterative process. Let I denote the 3D source image and I(t) denote the 3D image at iteration t. The estimated 3D image region’s motion/deformation parameters 
                           
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              (
                              t
                              )
                           
                         define a geometric transformation 
                           
                              T
                              (
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              (
                              t
                              )
                              )
                           
                         in a shape space determined from the 3D images. The 
                           
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              (
                              t
                              )
                           
                         are calculated by the estimated parameter updates 
                           
                              Δ
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              (
                              t
                              )
                           
                         (Eq. (2.1)) obtained from the projection intensity residues R between the target 2D projections Ψ(x;
                        θ) and the computed projections P(x,
                        I(t
                        −1);
                        θ) of the transformed 3D source image at iteration t
                        −1 (Eq. (2.2)). After parameter estimation in each iteration, an image transformation (Eq. (2.3)) is required in order to produce updated computed projections for the parameter estimation in the next iteration.
                           
                              (2.1)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                   (
                                                   0
                                                   )
                                                   =
                                                   0
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                   =
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                   (
                                                   t
                                                   -
                                                   1
                                                   )
                                                   +
                                                   Δ
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.2)
                              
                                 R
                                 [
                                 Ψ
                                 (
                                 x
                                 ;
                                 θ
                                 )
                                 ,
                                 P
                                 (
                                 x
                                 ,
                                 I
                                 (
                                 t
                                 -
                                 1
                                 )
                                 ;
                                 θ
                                 )
                                 ]
                                 =
                                 Ψ
                                 (
                                 x
                                 ;
                                 θ
                                 )
                                 -
                                 P
                                 (
                                 x
                                 ,
                                 I
                                 (
                                 t
                                 -
                                 1
                                 )
                                 ;
                                 θ
                                 )
                              
                           
                        
                        
                           
                              (2.3)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   I
                                                   (
                                                   t
                                                   )
                                                   =
                                                   I
                                                   (
                                                   0
                                                   )
                                                   ∘
                                                   T
                                                   (
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                   )
                                                
                                             
                                             
                                                
                                                   I
                                                   (
                                                   0
                                                   )
                                                   =
                                                   I
                                                
                                             
                                             
                                                
                                                   T
                                                   (
                                                   0
                                                   )
                                                   =
                                                   Id
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        Id is the identity transformation. The projection operator P is formulated by a simulation of the imaging process. For example, in the medical literature, to simulate a 3D image’s X-ray projections from its 3D volume (DRRs), we use ray-casting to compute the photon attenuation through a given imaging geometry (Fig. 2.1
                        ). We note that although Eq. (2.2) indicates a simple subtraction of the projection of the 3D image from the target projection, in actual clinical application one must apply additional processing to account for X-ray scatter in the target projection. This will be explained further in Section 5.

One way to obtain the estimated parameter updates 
                           
                              Δ
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              (
                              t
                              )
                           
                         is by optimizing a measure ρ of the concatenated intensity residue R
                        † with respect to the parameter updates ΔC. The concatenated intensity residues R
                        †, defined as the concatenation over all of the projection angles θ of the residues 
                           
                              
                                 
                                    R
                                 
                                 
                                    θ
                                 
                              
                              :
                              
                              
                                 
                                    R
                                 
                                 
                                    †
                                 
                              
                              =
                              (
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          Γ
                                       
                                    
                                 
                              
                              )
                           
                        .
                           
                              (2.4)
                              
                                 Δ
                                 
                                    
                                       C
                                    
                                    
                                       ^
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 arg
                                 
                                    
                                       
                                          min
                                       
                                       
                                          Δ
                                          C
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       R
                                    
                                    
                                       †
                                    
                                 
                                 [
                                 Ψ
                                 (
                                 x
                                 )
                                 ,
                                 P
                                 (
                                 x
                                 ,
                                 I
                                 (
                                 0
                                 )
                                 ∘
                                 T
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       ^
                                    
                                 
                                 (
                                 t
                                 -
                                 1
                                 )
                                 +
                                 Δ
                                 C
                                 )
                                 )
                                 ]
                                 
                                    
                                       ‖
                                    
                                    
                                       ρ
                                    
                                 
                              
                           
                        Without parallelization, iterative computations to carry out this optimization are structurally slow. Moreover, the optimization may easily converge to a local minimum since the energy functional in Eq. (2.4) is not convex. See Section 7.2.3 for the detailed evaluation of the optimization-based approach.

We propose an alternative method to calculate ΔC using multi-scale linear operators M. At each iteration of the registration, our method estimates the motion/deformation parameter updates 
                           
                              Δ
                              
                                 
                                    C
                                 
                                 
                                    ^
                                 
                              
                              (
                              t
                              )
                           
                         by applying a linear operator M
                        
                           s
                         of scale s to the current concatenated intensity residue R
                        †. That is,
                           
                              (2.5)
                              
                                 Δ
                                 
                                    
                                       C
                                    
                                    
                                       ^
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 
                                    
                                       R
                                    
                                    
                                       †
                                    
                                 
                                 [
                                 Ψ
                                 (
                                 x
                                 )
                                 ,
                                 P
                                 (
                                 x
                                 ,
                                 I
                                 (
                                 t
                                 -
                                 1
                                 )
                                 )
                                 ]
                                 ·
                                 
                                    
                                       M
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                 where
                                 
                                 s
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 S
                                 ;
                                 
                                 t
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       max
                                    
                                 
                              
                           
                        Typically, S
                        =4 and t
                        
                           max
                        
                        ⩽10 are satisfactory. The computation in Eq. (2.5) involves only matrix multiplications by M
                        
                           s
                        , computation of the projections P, and subtractions (Eq. (2.2)). This makes the registration structurally fast. The calculation of the multi-scale linear operators M involves a machine learning process described in detail in Section 4. Due to the leveragable advantage of the machine learning process and the fast linear operation, our proposed method shows a more robust and faster registration than the optimization-based approach. See Section 7.2.3 for the comparisons.

Our method limits the motion/deformation to a shape space. To allow M to be accurately learned, we require a low-order parametrization C of this shape space. We describe the shape space calculation for rigid motions and for non-rigid deformations in Sections 3.1 and 3.2 respectively.

Rigid motions are modeled explicitly as the variation in the Euler’s six dimensional rigid space:
                           
                              (3.1)
                              
                                 C
                                 =
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       x
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       y
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       z
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       x
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       y
                                    
                                 
                                 ,
                                 
                                    
                                       r
                                    
                                    
                                       z
                                    
                                 
                                 )
                              
                           
                        where t
                        
                           x
                        , t
                        
                           y
                        , t
                        
                           z
                         are the translation amounts in cm along the world’s coordinate axes x, y, z, respectively; and r
                        
                           x
                        , r
                        
                           y
                        , r
                        
                           z
                         are the rotations in degrees (°) about the image center, around the world coordinate axes x, y, and z, in succession.

Like others [19,9], we model deformations as a linear combination of a set of basis deformations calculated through principal component analysis (PCA). In our target problem, a cyclically varying set of 3D images {J
                        
                           τ
                         over time τ} are available at pre-registration learning time. From these a mean image 
                           
                              
                                 
                                    J
                                 
                                 
                                    ¯
                                 
                              
                           
                         and a set of deformations ϕ
                        
                           τ
                         between J
                        
                           τ
                         and 
                           
                              
                                 
                                    J
                                 
                                 
                                    ¯
                                 
                              
                           
                         can be computed. The basis deformations are chosen to be the primary eigenmodes of the PCA of the ϕ
                        
                           τ
                        . The computed mean image 
                           
                              
                                 
                                    J
                                 
                                 
                                    ¯
                                 
                              
                           
                         will be used as the reference mean image I throughout this paper.

In order to model the deformation space realistically, our method computes a Fréchet mean image 
                              
                                 
                                    
                                       J
                                    
                                    
                                       ¯
                                    
                                 
                              
                            via an LDDMM (Large Deformation Diffeomorphic Metric Mapping) framework [20] from the cyclically varying set of 3D images {J
                           
                              τ
                            over time τ}. The Fréchet mean, as well as the diffeomorphic deformations ϕ from the mean to each image J
                           
                              τ
                           , are computed using a fluid-flow distance metric d
                           
                              fluid
                            
                           [21]:
                              
                                 (3.2)
                                 
                                    
                                       
                                          J
                                       
                                       
                                          ¯
                                       
                                    
                                    =
                                    arg
                                    
                                       
                                          
                                             min
                                          
                                          
                                             J
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             τ
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                    
                                    
                                       
                                          d
                                       
                                       
                                          fluid
                                       
                                    
                                    
                                       
                                          (
                                          J
                                          ,
                                          
                                             
                                                J
                                             
                                             
                                                τ
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                           
                              
                                 (3.3)
                                 
                                    =
                                    arg
                                    
                                       
                                          
                                             min
                                          
                                          
                                             J
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      τ
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                             
                                                ∫
                                                
                                                   0
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                ∫
                                                
                                                   Ω
                                                
                                             
                                             ‖
                                             
                                                
                                                   v
                                                
                                                
                                                   τ
                                                   ,
                                                   γ
                                                
                                             
                                             (
                                             x
                                             )
                                             
                                                
                                                   ‖
                                                
                                                
                                                   2
                                                
                                             
                                             dxd
                                             γ
                                             +
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                ∫
                                                
                                                   Ω
                                                
                                             
                                             ‖
                                             J
                                             (
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   τ
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             (
                                             x
                                             )
                                             )
                                             -
                                             
                                                
                                                   J
                                                
                                                
                                                   τ
                                                
                                             
                                             (
                                             x
                                             )
                                             
                                                
                                                   ‖
                                                
                                                
                                                   2
                                                
                                             
                                             dx
                                          
                                       
                                    
                                 
                              
                           where J
                           
                              τ
                           (x) is the intensity of the pixel at position x in the image J
                           
                              τ
                           , v
                           
                              τ,γ
                            is the fluid-flow velocity field for the image J
                           
                              τ
                            in flow time γ, α is the weighting variable on the image dissimilarity, and ϕ
                           
                              τ
                           (x) describes the deformation at the pixel location 
                              
                                 x
                                 :
                                 
                                 
                                    
                                       ϕ
                                    
                                    
                                       τ
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 x
                                 +
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       τ
                                       ,
                                       γ
                                    
                                 
                                 (
                                 x
                                 )
                                 d
                                 γ
                              
                           .

The mean image 
                              
                                 
                                    
                                       J
                                    
                                    
                                       ¯
                                    
                                 
                              
                            and the deformations ϕ
                           
                              τ
                            are calculated by gradient descent optimization. The set {ϕ
                           
                              τ
                            over τ} can be used to generate the deformation shape space by the following statistical analysis.

Starting with the diffeomorphic deformation set {ϕ
                           
                              τ
                           }, our method uses PCA to find a set of linear deformation basis functions 
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       pc
                                    
                                    
                                       i
                                    
                                 
                              
                           . The scores 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                 
                              
                            (basis function weights) for each 
                              
                                 
                                    
                                       ϕ
                                    
                                    
                                       pc
                                    
                                    
                                       i
                                    
                                 
                              
                            yield ϕ
                           
                              τ
                            in terms of these basis functions.
                              
                                 (3.4)
                                 
                                    
                                       
                                          ϕ
                                       
                                       
                                          τ
                                       
                                    
                                    =
                                    
                                       
                                          ϕ
                                       
                                       
                                          ¯
                                       
                                    
                                    +
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                    
                                    
                                       
                                          λ
                                       
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                    
                                    ·
                                    
                                       
                                          ϕ
                                       
                                       
                                          pc
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           We choose a subset of n eigenmodes that capture 95% of the total variation. Then we let the n basis function weights λ
                           
                              i
                            form the n-dimensional parameterization C.
                              
                                 (3.5)
                                 
                                    C
                                    =
                                    (
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    ⋯
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                              
                           
                           
                              
                                 (3.6)
                                 
                                    
                                    =
                                    (
                                    
                                       
                                          λ
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          λ
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    ⋯
                                    ,
                                    
                                       
                                          λ
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                              
                           
                        

From the motion/deformation shape space we calculate linear operators M that correlate coarse-to-fine sampled model parameters C with the corresponding projection intensity residue vectors R. We describe our regression learning to calculate the linear operators M in Section 4.1 and an efficient multi-scale learning strategy in Section 4.2.

As detailed in Section 4.2 we select a collection of model parameters {C
                        
                           κ
                         over cases κ} for learning. Each case is formed by a selection of parameter settings. The training uses deviations from the reference image, such that ΔC
                        =
                        C
                        
                           κ
                        . Linear regression is used to correlate the selected modeled parameters C
                        
                           κ
                         in the κth case with the co-varying projection intensity residue set {R
                        
                           κ,θ
                         over the projection angles θ}. R
                        
                           κ,θ
                        (x) is computed as the intensity difference at pixel location x
                        =(x
                        1,
                        x
                        2) between the projection at angle θ of the mean image I (or an untransformed 3D image for the rigid case) and the projection of the image I∘T(C
                        
                           κ
                        ) transformed with the sampled model parameter C
                        
                           κ
                        :
                           
                              (4.1)
                              
                                 
                                    
                                       R
                                    
                                    
                                       κ
                                       ,
                                       θ
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 P
                                 (
                                 x
                                 ,
                                 I
                                 ∘
                                 T
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       κ
                                    
                                 
                                 )
                                 ;
                                 θ
                                 )
                                 -
                                 P
                                 (
                                 x
                                 ,
                                 I
                                 ;
                                 θ
                                 )
                              
                           
                        We concatenate the residues at each projection angle to formulate a residue set in a vector 
                           
                              
                                 
                                    R
                                 
                                 
                                    κ
                                 
                                 
                                    †
                                 
                              
                              =
                              (
                              
                                 
                                    R
                                 
                                 
                                    κ
                                    ,
                                    
                                       
                                          θ
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    R
                                 
                                 
                                    κ
                                    ,
                                    
                                       
                                          θ
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    R
                                 
                                 
                                    κ
                                    ,
                                    
                                       
                                          θ
                                       
                                       
                                          Γ
                                       
                                    
                                 
                              
                              )
                           
                         and build a linear regression for all cases κ
                        =1,2,…,
                        K:
                           
                              (4.2)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         K
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ≈
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         †
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         †
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         K
                                                      
                                                      
                                                         †
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ·
                                 M
                              
                           
                        The regression matrix M that gives the best estimation of the linear operators per parameter scale is computed via a pseudo-inverse:
                           
                              (4.3)
                              
                                 M
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             R
                                          
                                          
                                             †
                                          
                                       
                                       
                                          
                                             R
                                          
                                          
                                             †
                                          
                                       
                                       )
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       R
                                    
                                    
                                       †
                                    
                                 
                                 C
                              
                           
                        
                     

To provide adequate regression learning, C must be sufficiently sampled to capture all the shape variations. However, the direct implementation requires an exponential time computation. Instead, we have designed an efficient scheme that learns the model parameters from large to small scales, 1 to S, to yield S scale-related regression matrices M
                        1,
                        M
                        2,…,
                        M
                        
                           S
                        . At the sth scale of learning, each model parameter c
                        
                           i
                         is collected from the combinations of ±3σ
                        
                           i
                        
                        ·(S
                        −
                        s
                        +1)/S and 0 where σ
                        
                           i
                         is the standard deviation of the basis function weights λ
                        
                           i
                         observed at pre-registration time. In the registration stage the calculated multi-scale linear operators are applied sequentially, from M
                        1 to M
                        
                           S
                        , to give new estimations of the model parameters from large to small scale. After evaluating the estimation accuracy for target examples of both the rigid and non-rigid types, we found that four scales of learning (S
                        =4) produced sufficiently dense samples in C to achieve the required registration accuracy.

X-ray scatter is a significant contribution to the cone-beam CT projections. However, the regression estimators M are not invariant to the projection intensity variations caused by X-ray scatter. Therefore, our method uses a normalization filter (Section 5.1) and a subsequent histogram matching scheme (Section 5.2) to generate commensurate intensities between learning-time computed projections and registration-time target projections.

To account for variations caused by X-ray scatter, we perform a 2D Gaussian-weighted normalization for each pixel in the learning projections (Fig. 5.1
                        d) and the target projections (Fig. 5.1b). To calculate the normalized value Ψ′(x;
                        θ) at pixel location x
                        =(x
                        1,
                        x
                        2) and projection angle θ, we subtract a Gaussian-weighted spatial mean μ′(x
                        1,
                        x
                        2) from the raw pixel value Ψ(x
                        1,
                        x
                        2) and divide it by a Gaussian-weighted standard deviation σ′(x
                        1,
                        x
                        2).
                           
                              (5.1)
                              
                                 
                                    
                                       Ψ
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       Ψ
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       )
                                       -
                                       
                                          
                                             μ
                                          
                                          
                                             ′
                                          
                                       
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             ′
                                          
                                       
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (5.2)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             ξ
                                             =
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                             
                                             -
                                             A
                                          
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                             
                                             +
                                             A
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             η
                                             =
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             -
                                             B
                                          
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             B
                                          
                                       
                                       
                                          
                                             
                                                G
                                                (
                                                ξ
                                                ,
                                                η
                                                ;
                                                0
                                                ,
                                                w
                                                )
                                                ·
                                                Ψ
                                                (
                                                ξ
                                                ,
                                                η
                                                )
                                             
                                          
                                       
                                    
                                    
                                       (
                                       2
                                       A
                                       +
                                       1
                                       )
                                       ×
                                       (
                                       2
                                       B
                                       +
                                       1
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (5.3)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         ξ
                                                         =
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         -
                                                         A
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         +
                                                         A
                                                      
                                                   
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         η
                                                         =
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         -
                                                         B
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         B
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               G
                                                               (
                                                               ξ
                                                               ,
                                                               η
                                                               ;
                                                               0
                                                               ,
                                                               w
                                                               )
                                                               ·
                                                               Ψ
                                                               (
                                                               ξ
                                                               ,
                                                               η
                                                               )
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               ,
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   (
                                                   2
                                                   A
                                                   +
                                                   1
                                                   )
                                                   ×
                                                   (
                                                   2
                                                   B
                                                   +
                                                   1
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        where 2A
                        +1 and 2B
                        +1, respectively, are the number of columns and rows in the averaging window centered at (x
                        1,
                        x
                        2); the function G is a zero mean Gaussian distribution with a standard deviation w. We choose A, B, and w to be a few pixels to perform a local Gaussian-weighted normalization for our target problem (see Section 6).

In order to correct the intensity spectrum differences between the normalized learning projection 
                           
                              
                                 
                                    Ψ
                                 
                                 
                                    learning
                                 
                                 
                                    ′
                                 
                              
                           
                         and the normalized target projection 
                           
                              
                                 
                                    Ψ
                                 
                                 
                                    target
                                 
                                 
                                    ′
                                 
                              
                           
                        , a function F
                        
                           ω
                         of intensity to achieve non-linear cumulative histogram matching within a region of interest ω is applied. To avoid having background pixels in the histogram, the region ω is determined as that pixel set whose intensity values are larger than the mean value in the projection. That is, F
                        
                           ω
                         is defined by
                           
                              (5.4)
                              
                                 
                                    
                                       F
                                    
                                    
                                       ω
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                H
                                             
                                             
                                                f
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         Ψ
                                                      
                                                      
                                                         target
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ≈
                                 
                                    
                                       H
                                    
                                    
                                       f
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                Ψ
                                             
                                             
                                                learning
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where H
                        
                           f
                         is the cumulative histogram profiling function. The histogram matched intensities 
                           
                              
                                 
                                    Ψ
                                 
                                 
                                    target
                                 
                                 
                                    ☆
                                 
                              
                           
                         (Fig. 5.1c) are calculated through the mapping:
                           
                              (5.5)
                              
                                 
                                    
                                       Ψ
                                    
                                    
                                       target
                                    
                                    
                                       ☆
                                    
                                 
                                 =
                                 
                                    
                                       Ψ
                                    
                                    
                                       target
                                    
                                    
                                       ′
                                    
                                 
                                 ∘
                                 
                                    
                                       F
                                    
                                    
                                       ω
                                    
                                 
                              
                           
                        
                     

We describe the experimental setups for evaluating the method and provide some clinical context. Our target problem is IGRT (Image-guided Radiation Therapy). There the 3D image I is the planning CT (Computed Tomography), and the target projection images Ψ are treatment-time imaging kV projections. In particular, the kV projections are produced by (1) a rotational CBCT (Cone-beam CT) imager or (2) a stationary NST (Nanotube Stationary Tomosynthesis) imager specified in Maltz et al. [22]. Our method’s application to IGRT, referred to as Correction via Limited-Angle Residues in External Beam Therapy, or CLARET [14,15], has shown promise in registering the planning CT to the treatment-time imaging projections. We describe the two treatment imaging geometries in Section 6.1 and CLARET’s application to head-and-neck IGRT and lung IGRT in Sections 6.2 and 6.3, respectively.

A CBCT is a rotational imaging system with a single radiation source and a planar detector, which are mounted on a medical linear accelerator. This pair rotates by an angle of up to 2π during IGRT, taking projection images Ψ during traversal (Fig. 6.1
                           a). A limited-angle rotation provides a shortened imaging time and lowered imaging dose. For example, a 5° rotation takes ∼1s. In our application, CBCT projections were acquired in a half-fan mode. Half-fan mode means that the imaging panel (40cm width by 30cm height, source-to-panel distance 150cm) is laterally offset 16cm to increase the CBCT reconstruction diameter to 46cm. The method’s linear operators are trained for projection angles over 360° at 1° intervals beforehand at planning time. At treatment time the method chooses the linear operator that is closest to the current projection angle.

An NST is a stationary imaging system mounted on a medical linear accelerator that can perform imaging without interfering with treatment delivery. As illustrated in Fig. 6.1b, it consists of an arrangement of radiation sources arrayed around the treatment portal, together with a planar detector. The geometry thus is fixed and known beforehand. Firing the sources in sequence produces a sequence of projection images at different orientations. Each projection image requires ∼200ms.

In head-and-neck IGRT, the geometric differences of the skull between planning time and treatment time can be represented by a rigid transformation. Therefore, in the pre-registration learning, CLARET samples clinically feasible variations (±2cm,±5°) in the Euler’s 6-space C to capture the treatment-time patient’s motions. With a single planning CT I of the patient, the computed learning projections P(x,
                        I
                        ∘
                        T(C);
                        θ) are generated by transformation of the feasible variations T(C) and projection from a given angle θ of the transformed 3D volume I
                        ∘
                        T(C).

In the registration, CLARET iteratively applies S multi-scale linear operators M
                        1 to M
                        
                           S
                         to estimate the rigid transformation from the 2D intensity residues formed by the difference between the normalized target projections Ψ
                        ☆ and the normalized projections computed from the currently estimated rigid transformation applied to the planning-time 3D image.

A consideration in lung IGRT is that respiratory motion introduces non-rigid transformations. In the pre-registration learning stage, a set of 10-phase RCCTs (Respiratory-correlated CTs) collected at planning time serve as the cyclically varying 3D images {J
                        
                           τ
                         over the phase τ}. This image set is used to generate the deformation shape space C. From these RCCTs, a Fréchet mean image 
                           
                              
                                 
                                    J
                                 
                                 
                                    ¯
                                 
                              
                           
                         and its deformations ϕ
                        
                           τ
                         to the corresponding images J
                        
                           τ
                         are calculated via an LDDMM framework. Fig. 6.2
                        c shows an example respiratory Fréchet mean image. The deformation basis functions ϕ
                        
                           pc
                         are then generated by PCA on the deformation set {ϕ
                        
                           τ
                         over phase τ}. Liu et al. [19] have shown that a shape space with three eigenmodes adequately captures 95% respiratory variations experienced at treatment time. Fig. 6.3
                         shows the first two principal deformation basis functions.

To generate feasible variations in the deformation space C for learning the linear operator M, CLARET samples the largest scale of parameters by three standard deviations of the basis function weights derived from the RCCT image set. From the Fréchet mean image the computed projections P(x,
                        I
                        ∘
                        T(C);
                        θ) are generated by (1) transformation based on the feasible variations T(C) and (2) projection from a given angle θ to the transformed 3D volume I
                        ∘
                        T(C).

Just prior to treatment, the Fréchet mean image obtained at planning time is rigidly registered to the CBCT for correcting patient position. During treatment with planar imaging, CLARET iteratively applies S multi-scale linear operators, from M
                        1 to M
                        
                           S
                         to estimate the weights C on the basis functions ϕ
                        
                           pc
                         from current 2D intensity residues. The residues are formed by the difference between the normalized and histogram matched target projections Ψ
                        ☆ (Fig. 5.1c) and the normalized projections (Fig. 5.1d) computed from the presently estimated deformation applied to the Fréchet mean image.

@&#EXPERIMENTS AND RESULTS@&#

We show CLARET’s rigid registration and non-rigid registration results in Sections 7.1 and 7.2, respectively. In particular, we tested the rigid registration using the NST imaging system for the head-and-neck IGRT and tested the non-rigid registration using projection images from CBCT scans acquired with the rotational imaging system lung intratreatment IGRT. In Section 7.2.3 we compare the registration accuracy and efficiency of CLARET and an optimization-based approach.

We tested CLARET’s rigid registration by synthetic treatment-time projections and by real phantom projections, as described in Sections 7.1.1 and 7.1.2, respectively. The registration quality was measured by the mean absolute error (MAE) and mean target registration error (mTRE). The MAE in any of the parameters of C is the mean, over the test cases, of the absolute error in that parameter. The mTRE for a test case is the mean displacement error, over all voxels in a 16×16×16cm3 bounding box (the probable tumor region) centered on the pharynx in the planning CT I.
                           
                              (6.1)
                              
                                 mTRE
                                 (
                                 I
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       χ
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          χ
                                       
                                    
                                 
                                 ‖
                                 I
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ∘
                                 T
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       true
                                    
                                 
                                 )
                                 -
                                 I
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ∘
                                 T
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       est
                                    
                                 
                                 )
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where χ is the number of pixels in the probable tumor region, y
                        
                           i
                        
                        =(y
                        1,
                        y
                        2,
                        y
                        3) is the tuple of the ith voxel position, and C
                        
                           true
                        , C
                        
                           est
                         are the true and the estimated transformation parameters, respectively.

We used noise-added DRRs (digitally reconstructed radiographs) of target CTs as the synthetic treatment-time projections. The DRRs (Fig. 7.1
                           a) were generated to simulate the NST projections with dimension 128×128 and pixel spacing 3.2mm (Fig. 2.1). The target CTs were transformed from the patient’s planning CT by taking normally distributed random samples of the translation and rotation parameters within the clinical extent: ±2cm and ±5°, respectively. The planning CTs have a voxel size of 1.2mm lateral, 1.2mm anterior–posterior, and 3.0mm superior-inferior. The number of imaging positions was varied to find the minimum number with sub-CT-voxel accuracy in terms of mTRE.

Zero mean, constant standard deviation Gaussian noise was added to the DRRs to generate the synthetic projections. The standard deviation of the noise was chosen to be 0.2×(mean bony intensity – mean soft tissue intensity). This noise level is far higher than that produced in the NST system. An example synthetic projection is shown in Fig. 7.1b.

We first studied how many projection images are needed for CLARET’s learning to obtain sub-voxel accuracy. The results on 30 synthetic test cases of a head-and-neck dataset, displayed in Fig. 7.2
                           a, show that two projection images are sufficient to achieve sub-CT-voxel accuracy. Fig. 7.2a also shows the method’s accuracy improves with more projections. However, we note that redundant projections may contribute error in the parameter estimation. Therefore, the 4-projection geometry (Fig. 7.2a), which used the middle X-ray source on each imaging bank, produced the sufficient and necessary number of projections to capture the simulated rigid motions. Fig. 7.1c shows the geometry of the two opposing X-ray sources that generated the two projection images in the study. We note that the choice of opposing sources is such that the maximum angle between images (22.5°) is formed with the NST system.

An analysis of the effect of the number of scales on multi-scale learning (Section 4.2) shows that increasing the number of scales reduces the registration errors (Fig. 7.2b).


                           Table 1
                            shows the statistics of the errors in each rigid parameter from 90 synthetic test cases generated from three patients’ planning CTs (30 cases for each CT). The CLARET registration used only the two opposing NST projection images (Fig. 7.1c).

We tested CLARET’s rigid registration on a head phantom dataset. NST projections (dimension: 1024×1024; pixel spacing: 0.4mm) of the head phantom were downsampled to dimension 128×128 with a pixel spacing of 3.2mm (Fig. 7.3
                           a). The dimension of the planning CT is 512×512×96 with a voxel size of 3.43mm3. The ground truth was obtained by rigidly registering all 52 NST projections to the planning CT by the l-BFGS optimization (Nocedal [23]) of the similarity metric in projection space.
                              1
                              Results in Frederick et al. [24] suggests that 2D/3D registration accuracy is higher than limited-angle-reconstructed-3D/3D registration accuracy for the NST geometry.
                           
                           
                              1
                            The initial mTRE over the head region is 51.8mm. With 4-scale learning (S
                           =4), CLARET obtained a sub-voxel accuracy of 3.32mm using only two projections in 5.81s. It was computed on a 16-core laptop GPU (NVIDIA GeForce 9400m) where the parallelization is limited. A factor of 32 speed-up (0.18s per registration) can be expected when using a 512-core GPU. As shown in Fig. 7.3b and c, CLARET accuracy improves with increased number of projections and scales in the multi-scale learning process. The registration time is approximately linear with the number of projections used.

We tested CLARET’s non-rigid registration with synthetic and real patient cone-beam projections, as described in Sections 7.2.1 and 7.2.2, respectively. RCCT datasets (CT dimension 512×512×120; voxel size 1mm lateral×1mm anterior–posterior×2.5mm superior-inferior) were generated with an 8-slice scanner (LightSpeed, GE Medical Systems) by acquiring multiple CT images for a complete respiratory cycle at each couch position while recording patient respiration (Real-time Position Management System, Varian Medical Systems). The CT projections were retrospectively sorted (GE Advantage 4D) to produce 3D images at 10 different respiratory phases.

We used DRRs of the target CTs as the synthetic treatment-time projections. The DRRs were generated to simulate projections from a rotating kV imaging system (Section 6.1.1) mounted on the gantry of the medical accelerator (TrueBeam, Varian Medical Systems). The target CTs were deformed from the patient’s Fréchet mean CT by taking normally distributed random samples of the coefficients of the first three PCA-derived deformation eigenmodes of the patient’s RCCT dataset (Section 3.2).

For each of the 10 CLARET registrations, we used a single simulated coronal projection (dimension 128×96; pixel spacing 3.10mm) at angle 14.18° (Fig. 5.1d) as input. (Future studies will investigate the effect of this pixel spacing on the registration quality.) The registration quality was then evaluated by measuring the 3D tumor centroid difference between the CLARET-estimated CT and the target CT. 3D tumor centroids were calculated from active contour (geodesic snake) segmentations [25]. As shown in Table 2
                           , after registration CLARET reduces more than 85% of the centroid error.

We studied CLARET’s registration quality in terms of average DVF (Displacement Vector Field) error over all cases and all CT voxels versus different angular spacings used in learning. Registrations using two projections with four different angle separations were tested by 30 randomly generated test cases. Fig. 7.4
                           a shows that the average DVF error reduces with appropriately large angular separations. However, tumor motion or respiratory motion may not be visible or inferable in projections from certain angles. For example, the tumor may be obscured by denser organs (i.e., mediastinum). In Fig. 7.4a the respiration motion may not be inferable from the projection at 9.68° resulting in a larger error in the parameter estimation.

We also studied CLARET’s registration quality by measuring the average DVF error versus the number of projections used for learning. For each number of projections, we generated 30 random test cases. Fig. 7.4b shows no particular trend. As a result, we used a single projection to test CLARET’s non-rigid registration for the real patient data in the next section.

We tested CLARET on five lung patient datasets consisting of projections from patient CBCT scans acquired with the rotational imaging system (Section 6.1.1). CLARET 2D/3D registration used a single coronal CBCT projection at angle 14.18° and downsampled (original dimension 1024×768 and pixel spacing 0.388mm) to 128×96 with 3.10mm pixel spacing (Fig. 5.1a). Separate registrations were done using projections at the EE (End-Expiration) and EI (End-Inspiration) phases. Prior to 2D/3D registration, the Fréchet mean image was rigidly registered to the patient’s CBCT image so as to align the vetebral anatomy in both images. We measured the difference in 3D tumor centroid position (Fig. 7.6a) between the CLARET-estimated CT and reconstructed CBCT at the same respiratory phase as the projection used in the 2D/3D registration. The RMS window width was set to 32.0mm for the Gaussian normalization of this imaging geometry, which was predetermined to yield the smallest 3D centroid error in one lung dataset (Fig. 7.5
                           ). (Future studies will check whether this window size is also best for other datasets.) The results shown in Table 3
                            suggest a consistency in registration quality between the synthetic image tests and real projection image tests. The mean and standard deviation of 3D tumor centroid errors following 2D/3D registration are 2.66mm and 1.04mm, respectively. The errors include an uncertainty in tumor position in the CBCT projections, owing to variability in the manual segmentations in the CBCT reconstructions, and residual tumor motion within the EE and EI phase intervals. Based on repeatability measurements of the manual segmentations and tumor motion analysis of the RCCT datasets, we estimate the standard deviation uncertainty in manually determined tumor 3D position to be 1mm. The average computation time is 2.61s on a 128-core GPU, NVIDIA GeForce 9800 GTX. A factor of four speed-up (to 0.65s) can be expected when using a 512-core GPU for acceleration.

The clinical goal is to improve tumor localization during treatment using CLARET. Assuming a mean lung tumor motion extent of about 10mm, the standard deviation uncertainty is about one-third of the motion extent, or 3mm. In order to improve on current clinical practice (i.e., no image guidance during treatment) a standard deviation uncertainty of 2mm or less is desirable. Furthermore, since most of the motion is in the inferior-superior direction, it is desirable to achieve 2mm uncertainty or less in that direction. Our results show that CLARET achieves the clinically desired accuracy: the mean and standard deviation 2D tumor centroid error after registration is 1.96mm and 1.04mm, respectively. CLARET reduces positional errors in directions along the plane of the projection more than in the out-of-plane direction. As shown in Table 3, most of the percent 2D error reductions (coronal in-plane), except cases from patient #1, are larger than 3D error reductions. This is expected because 2D/3D registration with a single projection is more sensitive to tumor displacements in the image plane but less sensitive to scale changes due to out-of-plane displacements.


                           Fig. 7.6
                           b shows the 3D meshes of the tumors in the Fréchet mean CT, the CBCT at EE, and the estimated CT of a lung dataset for visual validation. As shown in the Figure, the tumor position in the CLARET-estimated CT is superior to that in the mean image, as expected physiologically for the EE phase. Fig. 7.7
                            shows the same 3-space lines in the mean CT, the reconstructed CBCT at the EE phase and the CLARET-estimated CT of a lung dataset. The intersection of the lines with the tumor centroid in the CBCT are in better agreement with the CLARET-estimated CT than with the mean CT, indicating that CLARET can accurately locate the tumor in the plane of the projection (coronal plane) and further corroborating the results of Table 3.

We compared the registration accuracy and efficiency between CLARET (Eq. (2.5)) and an optimization-based method similar to that in Li et al. [9]. The optimization-based method we implemented optimizes Eq. (2.4) (with ρ
                           =2) using the l-BFGS quasi-Newton algorithm (Nocedal [23]). To make fair comparisons, we used the same deformation shape space, the same initializations, the same GPU acceleration for the projection operator P, and the same testing datasets.

For the comparisons, we randomly sampled 30 synthetic deformations for each of the five lung patients as the test cases. The deformations are sampled randomly within ±3 standard deviations of deformations observed in the patient’s RCCTs. For each test case, a single coronal CBCT projection (dimension: 1024×768 downsampled to dimension: 128×96) was simulated from the deformed Fréchet mean CT as the target projection. Both methods were initialized with the realistic Fréchet mean image with no deformation: 
                              
                                 
                                    
                                       C
                                    
                                    
                                       ^
                                    
                                 
                                 (
                                 0
                                 )
                                 =
                                 0
                              
                            in Eq. (2.1).

For CLARET, we used four scales of learning for each patient. At the sth scale of learning, each deformation parameter c
                           
                              i
                            (i
                           =1,2,3) was collected from the combinations of ±3σ
                           
                              i
                           
                           ·(4−
                           s
                           +1)/4, ±1.5σ
                           
                              i
                           
                           ·(4−
                           s
                           +1)/4, and 0 where σ
                           
                              i
                            is the standard deviation of the ith eigenmode weights observed in the patient’s RCCTs. Therefore, at each scale of learning, 125 training deformations are sampled.

We compare the registration accuracy by the average registration error distance over the lung region. As Fig. 7.8
                            shows, CLARET yields more accurate results than the l-BFGS optimization-based registration in almost every test cases in all five patients. Table 4
                            shows statistical comparisons of the registration accuracy. The maximum error produced by CLARET among the 30×5=150 test cases is only 0.08mm where the maximum error produced by l-BFGS is 13.15mm, which is 164 times higher than CLARET. The smaller median error and error standard deviation also shows that CLARET is more accurate and more robust than the l-BFGS optimization-based approach.

In term of registration speed, Fig. 7.9
                            shows that CLARET is faster than l-BFGS in every test case and has relatively small variation in speed. The statistical results shown in Table 5
                            indicate that the longest registration time produced by CLARET is still shorter than the shortest time produced by l-BFGS.

As our results show, in our implementations CLARET is more robust, accurate, and faster than the l-BFGS optimization.

We have presented a novel rigid and non-rigid 2D/3D registration method that estimates an image region’s 3D motion/deformation parameters from a small set of 2D projection images of that region. Our clinical goal is to model not only temporal changes in tumor position and shape (tumor tracking), but also those for the surrounding organs at risk. In this context the volume of interest is known to exhibit deformations [26,27]. The method is based on producing limited-dimension parameterization of geometric transformations based on the region’s 3D images. The method operates via iterative, multi-scale regression, where the regression matrices are learned in a way specific to the 3D image(s) for the specific patient. The synthetic and real image test results have shown the method’s potential to provide fast and accurate tumor localization with a small set of treatment-time imaging projections for IGRT. Faster registration is expected when a modern GPU is used for a higher level of parallelization.

However, in order to obtain such registration accuracy, our method requires a well-modeled motion/deformation shape space that includes all feasible variations of the image region. In many radiation therapy situations for certain parts of the body, collecting the required number of 3D images of the patient to form the well-modeled shape space is not directly obtainable in current therapeutic practice. Future work will investigate the possibility of modeling the shape space through a patient population.

To make our method more robust for the IGRT application, future work will also evaluate the method on more patient datasets and study the effects of the projection resolution and the normalization window size on the registration accuracy.

@&#ACKNOWLEDGMENTS@&#

The authors thank Lei Pan, Dr. Xiaoxiao Liu, and Dr. David Lalush for their fruitful discussions during the development of this work. This work was partially supported by Siemens Medical Solutions and by National Cancer Institute Award Numbers R01-CA126993 and R01-CA126993-02S1. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Cancer Institute or the National Institutes of Health.

@&#REFERENCES@&#

