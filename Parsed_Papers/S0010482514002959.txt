@&#MAIN-TITLE@&#An efficient word typing P300-BCI system using a modified T9 interface and random forest classifier

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A Text on nine keys (T9) based efficient word typing P300-BCI system is proposed.


                        
                        
                           
                           We integrated a smart dictionary into the P300-BCI system for word suggestions.


                        
                        
                           
                           We propose a novel Random Forest (RF) classifier to improve accuracy.


                        
                        
                           
                           Words typing speed is improved by 51.87% in comparison to the conventional character speller.


                        
                        
                           
                           Accuracy of RF is significantly higher than the conventional SVM classifier.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Brain computer interface

BCI

EEG

P300 speller

Word typing paradigm

Dictionary

Random forest

Human–computer interaction

@&#ABSTRACT@&#


               
               
                  Background
                  A typical P300-based spelling brain computer interface (BCI) system types a single character with a character presentation paradigm and a P300 classification system. Lately, a few attempts have been made to type a whole word with the help of a smart dictionary that suggests some candidate words with the input of a few initial characters.
               
               
                  Methods
                  In this paper, we propose a novel paradigm utilizing initial character typing with word suggestions and a novel P300 classifier to increase word typing speed and accuracy. The novel paradigm involves modifying the Text on 9 keys (T9) interface, which is similar to the keypad of a mobile phone used for text messaging. Users can type the initial characters using a 3×3 matrix interface and an integrated custom-built dictionary that suggests candidate words as the user types the initials. Then the user can select one of the given suggestions to complete word typing. We have adopted a random forest classifier, which significantly improves P300 classification accuracy by combining multiple decision trees.
               
               
                  Results and discussion
                  We conducted experiments with 10 subjects using the proposed BCI system. Our proposed paradigms significantly reduced word typing time and made word typing more convenient by outputting complete words with only a few initial character inputs. The conventional spelling system required an average time of 3.47min per word while typing 10 random words, whereas our proposed system took an average time of 1.67min per word, a 51.87% improvement, for the same words under the same conditions.
               
            

@&#INTRODUCTION@&#

Brain computer interfaces (BCIs) are systems that provide direct communication with a computer through signals generated by the brain. P300 event related potentials are a commonly used EEG signal for BCI known as a P300-BCI. A typical P300-based character-spelling BCI system consists of a stimulus-presenting paradigm and a classifier. The most widely adopted paradigm for character spelling was first introduced by Farwell and Donchin [1]. Their speller paradigm involved a 6×6 matrix of characters and numbers in which each row or column is randomly intensified. A user looks at a target character and the resulting intensification of either the row or column containing the target character evokes P300. Classification of the row and column containing the evoked P300 leads to the recognition of the target character. Most later research followed the same scheme and focused on improving classification accuracy and speed.

In recent years, there is a growing interest in designing more efficient paradigms. Multiple attempts have been made to modify the Farwell and Donchin (FD) paradigm. These modifications include using different matrix sizes [2], changing visual aspects such as color, symbol dimensions, and distance between the symbols [3,4], single character flipping instead of row and column intensification [5], and using a checkerboard paradigm [6]. Some works suggested the potential of region-based [7] or submatrix-based [8] paradigms.

A common drawback of all these conventional P300 spelling systems is the requirement to spell out each character of a word one at a time. This spelling process is slow and can take several minutes to finish a single word. A new paradigm is needed so a user can type a whole word with less typing time. Ryan et al. [9] proposed a predictive spelling scheme to improve the word-typing speed. Their proposed predictive spelling increased the typing speed, but decreased the classification accuracy because of higher workload in their displays. Kaufmann et al. [10] also used a predictive speller with some commonly used German words. Their proposed paradigm showed six suggested words in the first column of the matrix. Their results also indicated that predictive spelling could significantly decrease spelling time. Ahi et al. [11] used a dictionary-driven P300 speller. They integrated a custom dictionary into the classification system of their P300 speller for automatic correction of misspellings. However, the dictionary was used only for word correction and the user still had to spell every character of a target word. Akram et al. [12] integrated a custom dictionary with the conventional FD paradigm to give word suggestions to the users, speeding up the typing speed. Höhne et al. [13] used a German-language Text on Nine keys (T9) system with an auditory event related potential-based speller. The user spelled on a 3×3-scheme with audio stimuli and suggestions were shown after the user spelled a complete word. Word typing using their system was slow because when typing a five-letter word, the user must go through five character inputs and at least two additional inputs: one for switching to the control mode and the other for the selection of a target word.

To improve classification accuracy, many techniques for P300 extraction and classification have been used, including support vector machine (SVM) [14,15], linear discriminant analysis (LDA) [16], neural network [17], independent component analysis (ICA) [18], and, lately, constrained independent component analysis (cICA) [19], and adaptive neural networks [20].

In this study, we propose a modified T9 interface with a dictionary to give word suggestions as the user types. In the mobile text messaging system, the T9 is used to compose text messages at high speeds using a keypad with twelve keys. Each of the eight keys is associated with several unique characters and the dictionary is used to suggest words according to the sequence of keys a user presses. Four other keys are used for other functions. In this study, we have modified it to use only nine keys: eight keys are associated with characters and one key for a delete function for errors. Word typing is done in two steps. A user spells a few characters of a target word using the 3×3 matrix of the modified T9 keys, and then the dictionary module suggests some words starting with the spelled combination of keys. Finally, the user can select one out of the given suggestions using the same 3×3 matrix. The suggested paradigm reduces the typing time significantly.

Based on the analysis of the previously used classifiers, we propose a random forest (RF) classifier for P300 detection. RF has been well developed in many fields, but is relatively unknown in the field of BCI. RF is a machine learning technique developed by Breiman [21]. RF consists of a number of decision trees where each tree is grown independently and it casts a vote in favor of one class and the class with a majority vote wins.

We have tested our P300 words typing BCI with 10 healthy subjects and each subject was instructed to type 10 randomly selected words. Our results show that the proposed P300 word typing paradigm takes an average of 1.67min to type a word, whereas the conventional paradigm required 3.47min for the same words. The proposed scheme reduces the word-typing time by 51.87%, thereby increasing the information transfer rate considerably.

@&#METHODOLOGY@&#

The conventional Farwell and Donchin (FD) speller consists of a 6×6 matrix of characters and numbers in which each row or column flashes randomly. A user is asked to focus on a target character and silently count the number of times of the target character flashes. P300 is elicited when the row or column containing the target character is flashed. A classifier detects one row and one column with P300, thereby identifying the target character. Classification results are shown to the user as feedback. The user completes word typing by spelling every character of the target word. SVM is the most commonly used technique for P300 classification.

In our word typing BCI system, we used a modified T9 paradigm with a word suggestion mechanism to reduce typing time. Word typing is done in two steps: spelling initial characters using a modified T9 interface and selecting from the suggested words. When a session starts, a user starts to spell the initial characters of a target word using a T9 paradigm that consists of a 3×3 matrix of keys in which each key is associated with several characters and each key is randomly intensified. The user focuses on the key containing the target character. RF is used for P300 classification. The classifier identifies the spelled key and the classification results are fed into the dictionary module. The dictionary module searches for the words starting with prefixes made by the classified combinations of the keys. If the number of words is less than a threshold (nine, in our case), a suggestion screen is shown to the user and the user is asked to select one from those suggestions. If the number of suggestions is greater than the threshold, the user continues to type the next character of the target word. 
                        Fig. 1 shows the flow diagram of the proposed system.

T9 predictive spelling is used in mobile phones for faster composition of text messages using a keypad of 12 keys [22]. Our modified T9 word typing paradigm consists of a 3×3 matrix of nine keys. Eight keys contain three or four characters and the ninth key is for a ‘delete’ function used to delete the last spelled character in case of a spelling mistake, as shown in 
                        Fig. 2(a). The interface is similar to the keypad of a mobile phone, where text messages are written on a keypad with 12 keys and a T9 predictive dictionary is used for faster typing. We used only nine keys and each of nine keys flashes randomly with a 100-ms intensification time and a 75-ms blank time between intensifications. A user focuses on the key containing the target character and silently counts the number of times the target key flashes. Detection of one key-containing P300 identifies the target key. Each key contains three or four characters. The dictionary module generates a list of words starting with the characters in the spelled key. The user continues to write next characters of the word until the number of words in the suggestion list becomes less than the threshold, at which point the word suggestion screen is shown to the user (Fig. 2(b)) and the user is asked to select one of the suggested words. The user inputs the number corresponding to the target word as shown in Fig. 2(c) to complete typing the word.

The final typed word is shown to the user (Fig. 2(d)) and then the user is returned to the main paradigm to type the next word. If a spelling mistake occurs during the word selection step, the user can select the ‘delete’ key and start inputting again from the word selection step.


                        
                        Table 1 shows the time specification of the conventional paradigm as used in the BCI competition III dataset II [23] and the proposed T9 paradigm.

We used a custom-built dictionary of the 1000 most commonly used English words. The dictionary is implemented in the form of a ternary search tree (TST). TST is a kind of prefix tree data structure that can be used to find words having a given prefix. The dictionary gives suggestions based on the combinations of prefixes that are formed by the user typed keys. For example, if a user selects ‘Key-5’ while typing the first character of a target word, ‘Key-5’ contains three characters (M, N, and O): the dictionary will suggest all words starting with these three characters. Afterwards, if the user selects ‘Key-5’ again for the second character, there can be a total of nine prefixes (MM, MN, MO, NM, NN, NO, OM, ON, and OO). Then the dictionary module keeps only the words that start with these prefixes. The number of words decreases in the suggestion list after the user types each character and, once the number falls below the threshold, a suggestion screen is shown to the user. The user chooses one of the suggestions to complete word typing.

Decision tree classification techniques have been used successfully for a wide range of classification problems. Decision trees offer substantial advantages for classification problems because of their flexibility, simplicity, and computational efficiency. The major drawback of decision tree classification is its low accuracy. There have been many efforts to improve this classification accuracy. One of the best ways to improve the accuracy of decision tree-based algorithms is to use an ensemble of trees. The theory of ensemble classification allows us to combine a group of weak classifiers to form a strong classifier.

To detect P300s, we have adopted a RF classifier. RF, an ensemble learning technique introduced by Breiman [21], is a powerful classifier and has been used effectively in many fields, but is relatively unknown in the field of BCI. The underlying concept of RF is the combination of multiple independent decision trees with the resulting decisions casting votes for a class. RF creates multiple distinct decision trees and the class that is predicted by majority of the trees becomes the final output. For example, if there are 10 trees and 7 of them vote ‘yes’ and 3 vote ‘no’ in the binary classification of the question “is there P300 or not,” then the final classification result of the forest will be ‘yes’ based on the majority vote.

Each tree in the forest is trained with a different subset of the training data, specifically, a random sample drawn with replacement from the training set. Therefore, some data may be used more than once in the training of classifiers while others might never be used. This increases classifier stability and robustness when facing slight variations in data. Some randomness is added at the node level in each tree. At every node, a random subset of variables is selected and only those variables are used to find the best split for the node. This randomness removes the correlation between the trees of the forest. RF can improve the classification accuracy and can be quite robust. We have compared the performance of RF against the widely used SVM [14].

In the training session, users were asked to spell 10 randomly selected characters. This data was used to train both classifiers. We applied a band-pass filter with cutoff frequencies of 0.1Hz and 25Hz. Then, epochs of 600ms after the stimulus onset were extracted. A total of eight channels were used for classification. The epochs from the eight channels were concatenated to create feature vectors used to train classifiers.

@&#RESULTS@&#

This study was conducted using 10 healthy male subjects. Subjects did not have a history of any neurological brain diseases and had normal or corrected vision. All participants in our study provided written informed consent in accordance with the Institutional Review Board of Kyung Hee University.

The EEG data was acquired through a 32-channel BrainAmp MR amplifier with a sampling frequency 250Hz. Electrodes were placed according to the 10–20 international standard. Each subject participated in training and testing sessions. In the training session, each participant was instructed to spell 10 randomly selected characters; the resulting data was used to train the classifier. In the test session, each subject typed 10 randomly selected words. An example set of target words is as follows: “window,” “wings,” “beautiful,” “statement,” “understand,” “poem,” “stone,” “piece,” “smell,” and “answer.” 
                        Table 2 shows the words typed by 10 subjects during the test session.

Event-related potentials for target and non-target stimuli averaged across all subjects are shown in 
                        Fig. 3. Averaged waveforms of 800ms after the stimulus onset are shown from the eight channels. We can clearly see P300 for the target cases in all of the channels used.

Using the information shown in Table 1, we computed the time required to spell one character using both the conventional FD and the proposed paradigms. For the conventional paradigm, we had 180 intensifications in total (12 stimuli×15 repetitions) and 175ms (intensification time+blank time between intensifications) per intensification. Therefore, the time required to spell a single character using the conventional paradigm is 34s ([180×175ms]+2.5s blank time between characters). The proposed paradigm, on the other hand, uses 26.125s (i.e., [135×175ms]+2.5s) per character, as the total number of intensifications per character is 135 (9 stimuli×15 repetitions). With these numbers, we computed the time required by the conventional paradigm to spell the target words and compared it to the time required by the proposed paradigm for the same words. 
                        Table 3 shows the time required to spell these words using the conventional and proposed paradigm considering no error.

The conventional spelling required an average time of 3.47min per word while the proposed word typing scheme required only an average typing time of 1.67min per word for the same target words, decreasing the typing time by 51.87%.

@&#EXPERIMENTAL RESULTS@&#

In practical and experimental settings, spelling mistakes can occur and the subjects have to correct the spelling mistakes using the ‘delete’ key and then typing the correct letter or word again. Correcting misspellings takes extra time. 
                        Table 4 shows the actual time taken by the proposed method to type the target words for all 10 subjects. Note that the lapsed time for the proposed scheme includes the error correction time.

We also compared the offline classification results of RF against SVM for different numbers of stimulus repetitions. Our results show that the RF classifier can better classify P300s even with fewer repetitions. 
                        Fig. 4 shows the average classification accuracy for both SVM and RF for the first 5 subjects and the overall average of all 10 subjects. For higher number of repetitions, the accuracy of SVM and RF are comparable, but as we reduce the number of repetitions, the accuracy of SVM decreases more rapidly than that of RF. For fewer repetitions, the accuracy of RF is significantly higher than that of SVM.

@&#DISCUSSION AND CONCLUSION@&#

The proposed method has a considerable advantage in accuracy over the conventional spelling method because in the proposed paradigm, the prior probability of the target is lower and accuracy is inversely proportional to the prior probability of the target [2]. The conventional paradigm uses a 6×6 matrix with flashing rows or columns. With two targets and 12 intensifications, the probability of landing on the target is 1/6, whereas the proposed paradigm has a prior probability of landing on the target is 1/9.

The use of a modified T9 interface offers faster spelling than the conventional FD method, as the proposed method requires fewer intensifications per character. In a single trial, the proposed paradigm required nine intensifications, whereas the conventional paradigm required twelve. The use of a dictionary to give word suggestions further reduces the overall word typing time as the users can type a whole word by inputting a few initial characters and then selecting the target word from the suggestions.

Also, in the proposed paradigm, there are fewer chances to make mistakes because a user only needs to spell a few characters to type a word. In the case of a spelling error, the user can spell the ‘delete’ key and then input the correct character again. This error correction time was also reduced in the proposed paradigm compared with the conventional paradigm. The conventional paradigm took 34s to use the ‘delete’ key and another 34s to input the correct character. The cost of one mistake in the conventional paradigm was 68s. The proposed paradigm reduced this cost to 52.25s.

We used the RF classifier instead of the conventional classification method, SVM. One of the important advantages of RF is that it is less sensitive to outliers in the training data, which makes RF suitable for cases where some of the features are mislabeled. This can be one of the reasons for better accuracy compared to SVM when there are fewer repetitions (Fig. 4).

In this study, we proposed an efficient dictionary-based P300 word typing BCI paradigm using the modified T9 interface, a dictionary, and RF. Our results showed that the proposed method of P300 word typing system not only increased the speed of typing with higher accuracy, but also made the spelling task easier for users by reducing the amount of work required. These could be important advantages for a practical BCI, especially for use by individuals with disabilities.

None declared.

@&#ACKNOWLEDGMENTS@&#

This work was supported by the National Research Foundation of Korea (NRF) grant funded by the Korean government (MSIP) (no. 2008-0061908).

@&#REFERENCES@&#

