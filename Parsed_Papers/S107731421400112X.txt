@&#MAIN-TITLE@&#Gait recognition by fluctuations

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Introduction of the phase, trajectory fluctuations, and gait fluctuation image.


                        
                        
                           
                           Using gait fluctuation as a quality measure or an additional matching score.


                        
                        
                           
                           Evaluation using large-scale publicly available gait databases.


                        
                        
                           
                           Suppressing and utilizing gait fluctuations improve the gait recognition performance.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Gait recognition

Temporal fluctuations

Spatial fluctuations

Phase estimation

Score-level fusion

Quality measure

@&#ABSTRACT@&#


               
               
                  This paper describes a method of gait recognition by suppressing and using gait fluctuations. Inconsistent phasing between a matching pair of gait image sequences because of temporal fluctuations degrades the performance of gait recognition. We remove the temporal fluctuations by generating a phase-normalized gait image sequence with equal phase intervals. If inter-period gait fluctuations within a gait image sequence are repeatedly observed for the same subject, they can be regarded as a useful distinguishing gait feature. We extract phase fluctuations as temporal fluctuations as well as gait fluctuation image and trajectory fluctuations as spatial fluctuations. We combine them with the matching score using the phase-normalized image sequence as additional matching scores in the score-level fusion framework or as quality measures in the score-normalization framework. We evaluated the methods in experiments using large-scale publicly available databases and showed the effectiveness of the proposed methods.
               
            

@&#INTRODUCTION@&#

Gait recognition has attracted growing attention in the past decade as a promising biometric cue for identification and verification. A main advantage of gait from a biometric point of view lies in its ability to be captured even at a distance by video camera, which is a desirable property for security, surveillance, and forensic applications.

Many video-based gait recognition approaches have been developed in recent years. The approaches for video-based gait recognition are divided into two categories: model-based [1–4] and appearance-based [5–11] approach. Some recent developments in model-based approach include arm-leg movements extraction [12], the usage of Kinect camera for skeleton tracking [13], and 3D gait model construction [14], while silhouette-based approach include extracting frequency-domain feature from gait entropy image [15] (another variant than that from gait energy image [8]), optical flow from silhouette [16], shape contour and Fourier descriptor [17], and extracting silhouette from infrared thermal camera [18]. Currently, silhouette-based approach is a more popular gait recognition method due to its simplicity and inexpensive computational cost, and it performs well under less-variations condition. We may refer the readers to the book [19] for more wider coverage of gait recognition approaches.

However, gait recognition performance is significantly affected by intra-subject variations such as clothing [20], view [21,22], speed [23,24], elapsed time [25], surface [26], and carrying items [27]. These problems are represented in several public databases that include some of the above covariates. USF database includes the variations in view, shoes, surface, carrying load, and time with low quality silhouette. CASIA database provides view and clothing covariates with mid-level quality silhouette. SOTON database includes footwear, bodywear, carrying load and speed covariates with high quality silhouette.

Recently, a couple of gait recognition research groups tried to handle more realistic challenges, such as uncontrolled outdoor environment and occlusion. DeCann et al. [28] created a gait database recorded outdoor where the database contains illumination variations, background artifacts, multiple walking paths, and spatial resolution differences. Hofmann et al. [29] created a gait database recorded outdoor that include static and dynamic occlusion.

In addition to the above problems, it has been reported that inconsistency in gait between a probe and gallery sequence because of gait fluctuations also degrades gait recognition performance [30]. We refer this inconsistency as inter-period gait fluctuations.

Inter-period gait fluctuations fall into two types: (1) temporal fluctuations, and (2) spatial fluctuations. The temporal fluctuations are derived from unstable phase (gait stance) evolution and result in non-uniform phase intervals between adjacent frames, which induces misalignment of the frames even after a frame synchronization process [26]. The spatial fluctuations are derived from the differences in pose (e.g., variations in arm swinging, leg motion, and degree of stooping posture) and vertical positions (e.g., head top and feet bottom) within the same phase.

Temporal fluctuations can usually be solved by non-linear time warping approaches such as dynamic time warping (DTW) and its extension in a probabilistic framework, the hidden Markov model (HMM). Both approaches are based on finding the optimum path of non-linear time-varying patterns between a probe and gallery sequence. However, the accuracy of the optimal path in the DTW and HMM is constrained by the intervals of frames and states, respectively, and hence phase misalignment at the inter-frame or inter-states level cannot be solved by the conventional non-linear time warping approaches.

The first contribution of this study is to suppress such phase misalignment at inter-frame levels by generating a gait image sequence with equal phase intervals (see the left side of Fig. 1
                     ), called a phase-normalized image sequence, based on sub-frame order phase estimation using Self-DTW [31] and shape morphing [32].

Looked at from another perspective, if inter-period gait fluctuations within a gait image sequence are repeatedly observed for the same subject, they can be regarded as a type of useful gait feature for distinguishing the subjects from one another. For example, assuming the degree of arm swinging and stooping posture of a subject always fluctuate between periods (see the right side of Fig. 1) and that those of another subject are quite stable between periods, we can distinguish them based on the fluctuations of the degree of arm swinging and stooping posture even if the average degree of arm swinging and stooping posture are similar to each other.

The second contribution of this study is to use such gait fluctuations to improve gait recognition accuracy. More specifically, we extract phase fluctuations as temporal fluctuations, and gait fluctuation images and trajectory fluctuations as spatial fluctuations. We then combine them with a matching score using the phase-normalized image sequence as additional matching scores in the score-level fusion framework or as quality measures in the score-normalization framework (see Fig. 1).

This paper is a significant upgrade of our conference paper [33] and extensions from it are summarized by the following three points:
                        
                           •
                           Introduction of the phase and trajectory fluctuations in addition to the previously proposed gait fluctuation image [33].

Using gait fluctuation as a quality measure in a score-normalization framework, as well as an additional matching score in a score-level fusion framework in [33].

Evaluation using large-scale publicly available gait databases with several thousand subjects.

@&#RELATED WORK@&#

Appearance and period-based representation are the current mainstream in gait recognition [19]. The detection of the period was usually based on heel strike information as well as by stance. The averaged silhouette [6], also known as the gait energy image (GEI) [7], represents shape and motion information obtained by averaging size-normalized and registered silhouettes over a gait period. The frequency-domain feature (FDF) [8] is extracted by applying a one-dimensional discrete Fourier transform along the temporal axis to each pixel in the silhouette sequence. The gait entropy image (GEnI) [34,10] emphasizes dynamic regions by measuring the uncertainty of the pixels of the GEI using Shannon entropy. The chrono-gait image (CGI) [11] embeds phase information into the silhouette contour by color encoding. The shape variance-based (SVB) frieze pattern [35] extracts variations between a key gait frame (double-support phase) and subsequent frames. The gait flow image (GFI) [16] is acquired by computing the optical flow based on the silhouette sequence and aggregating the magnitude of the optical flow over a gait period. The gait motion descriptor (GMD) [36] is computed by decomposing the optical flow field into dynamic regions of each of four orientations and static region.

All of these gait features are extracted independently from every gait period
                           1
                           With the exception of every quarter gait period in the case of CGI.
                        
                        
                           1
                         of image sequences and hence none of them use the inter-period relationships such as gait fluctuations proposed in this study.

To handle rate or speed-varying gait image sequences, non-linear time warping techniques such as DTW [37] and its extension in a probabilistic framework, HMM [38], have been widely used in the gait recognition community [5,39–43]. Both techniques require a template (reference) image sequence to be matched with a given test image sequence. The template length is limited by a finite number of frames and states in a DTW and HMM framework, respectively, based on the training data.

Cuntoor et al. [5] proposed DTW-based gait recognition using features derived from the width of the outer contour of the gait silhouette image. Veeraraghavan et al. in [39] used gait shape in a spherical manifold and used the Procrustes distance in their DTW implementation. In [40], Veeraraghavan et al. proposed a robust rate-invariant DTW by estimating the distribution of warping functions from the training sequence of human gait needed to robustly match the test sequence. Sundaresan et al. [41] proposed a generic HMM-based approach and employed several distance metrics to estimate the HMM state output probability. Liu et al. [42] proposed a so-called population HMM (pHMM) trained from the data of many gait subjects to be used as a reference for gait sequence normalization. Aqmar et al. [43] combined shape and motion-based features with a mixture of Gaussian distribution-HMMs to handle speed variations.

Although these non-linear time warping-based methods are typically robust against rate or speed variations, DTW and HMM, in particular, cannot handle phase misalignment at the inter-frame or inter-state level, because the alignment precision is constrained by the intervals of frames and states, respectively.

The limitation of precision on temporal alignment because of the finite number of frames and states in DTW and HMM, respectively, can be relaxed by providing inter-frame information with temporal interpolation [44,45] or temporal super resolution techniques [46].

Lee et al. [44] used a shape boundary feature in their inter-frame interpolation. Muayed et al. [45] proposed the approach of generating novel gait cycles instead of only several frames within a gait cycle. Choudoury and Tjahjadi [17,47] proposed a gait recognition method that is robust against most of covariate challenges with low computational cost. The method was based on contour shape and discrete Fourier descriptors-based gait representation, and apply DTW for matching. These temporal interpolation approaches do not suppress non-linear temporal fluctuations, and hence the DTW or HMM is still necessary in the matching stage.

Akae et al. [46] proposed a method of periodic temporal super-resolution for gait recognition based on phase estimation and manifold learning. Although the method provides a phase-normalized high frame-rate image sequence, it fails in the presence of inter-period spatial fluctuations because it assumes that the same motion is repeated between the periods.

In the past few years, a quality measure for biometrics has gained a considerable attention. Generally speaking, genuine and imposter scores are more separable for higher quality measures (e.g., good illumination conditions for face recognition and a good scanner for fingerprint recognition) [48], and vice versa. Therefore, quality-dependent score-normalization or adaptive threshold setting often improves the accuracy of biometric person authentication.

In fact, the improvement of system performance using quality measures has been reported in several biometrics fields such as faces [49], fingerprints [50,51], and hand-written signatures [52].

In the gait recognition field, Matovski et al. [53] introduced silhouette quality as the quality measure. In this approach, given a gait image sequence with multiple periods, the silhouette qualities of individual periods are sequentially checked and the periods are continually rejected until the silhouette quality is over a threshold, namely, a gait feature with a sufficient silhouette quality is found. While this approach combines the quality measure in terms of feature selection, this study handles the gait fluctuations as the quality measure based on the behavioral aspects of the gait, which has not yet been investigated, to the best of our knowledge.

In this section, we briefly explain the preprocessing stage where input data are color textured image sequences, and output data are size-normalized and registered gait silhouette sequences and their projections to lower dimensional space by principal component analysis (PCA).

The first stage of preprocessing is silhouette extraction. We employ the background subtraction-based graph-cut segmentation method [54].

After the silhouettes are extracted, the top and the bottom positions of the silhouette region for individual frames are obtained. We then apply a moving average filter to the top and bottom position sequences, namely, top and bottom trajectories. Note that the top and bottom trajectories are used not only for size normalization but also for extracting a gait fluctuation feature as a quality measure discussed in Section 5.2.

The gait silhouette sequence is then scaled and registered to generate a size-normalized gait silhouette sequence [21]. The median of horizontal positions belonging to the silhouette region is chosen as the horizontal center frame-by-frame. We then scale the silhouette images into 128 by 88pixel silhouettes to retain the aspect ratio and to ensure the horizontal center coincides with the horizontal image center after size normalization.

The size-normalized gait silhouette sequence is then subsequently projected onto the PCA space to generate a M-dimensional gait signal.
                           2
                           PCA dimension M is chosen such that the cumulative eigenvalues are greater than 99%.
                        
                        
                           2
                         More specifically, each gait silhouette is converted into an unfolded image vector whose dimension is image size in raster scan way, and it was further projected into a lower dimensional vector by PCA.

For simplicity, the size-normalized gait silhouette sequence and M-dimensional gait signal in PCA space are referred to as the input image sequence and gait signal, respectively, in the following sections.

In this section, we discuss a method for suppressing the temporal fluctuations based on a phase estimation technique.

We adopt a method of phase estimation from a single quasi-periodic signal [31] and briefly describe it as follows.

Let us denote 
                           
                              
                                 
                                    x
                                 
                                 
                                    P
                                 
                              
                              (
                              t
                              )
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    M
                                 
                              
                           
                         as a periodic gait signal at time t, which satisfies 
                           
                              
                                 
                                    x
                                 
                                 
                                    P
                                 
                              
                              (
                              t
                              )
                              =
                              
                                 
                                    x
                                 
                                 
                                    P
                                 
                              
                              (
                              t
                              +
                              P
                              )
                              
                              ∀
                              t
                           
                        , where P is the period. We then introduce phase 
                           
                              
                                 
                                    s
                                 
                                 
                                    P
                                 
                              
                              =
                              t
                              /
                              P
                           
                         as non-dimensional normalized time. In the case of the gait signal, the phase means the gait stance such as double-support phase and single support phase, and hence silhouette matching in the later stage should be done for exactly the same phase for better performance.

However, the periodicity of the gait is often contaminated because of the fluctuations or unstable sampling interval of the capture device (e.g., a network camera). This causes degradation from a periodic gait signal 
                           
                              
                                 
                                    x
                                 
                                 
                                    P
                                 
                              
                              (
                              t
                              )
                           
                         to a quasi-periodic gait signal 
                           
                              x
                              (
                              t
                              )
                           
                         and its associated phase 
                           
                              s
                              (
                              t
                              )
                           
                        . In addition, not a continuous gait signal 
                           
                              x
                              (
                              t
                              )
                           
                         but a sampled gait signal sequence 
                           
                              {
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              }
                              ,
                              (
                              i
                              =
                              1
                              ,
                              …
                              ,
                              N
                              )
                           
                         is observed, where N is the number of samples (frames). The problem statement is estimating a phase sequence 
                           
                              {
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              }
                           
                         from the sampled quasi-periodic gait signal sequence 
                           
                              {
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              }
                           
                        .

The phase sequence 
                           
                              {
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              }
                           
                         is then estimated through an energy minimization framework considering signal intensity consistency between the periods, phase evolution smoothness and monotonic increase constraint, followed by short-term period detection and Self DTW [31].

Once the estimated phase sequence 
                           
                              {
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              }
                           
                         is obtained, we can locate each input image along the estimated phase and see the non-uniform intervals between adjacent images as shown in Fig. 2
                         (middle row). The non-uniform intervals of the estimated phase may cause frame misalignment in the matching phase. Therefore, a phase-normalized image sequence is generated from the input image sequence and estimated phase sequence using a temporal interpolation technique, so that the intervals between adjacent images are uniform as shown in Fig. 2 (bottom row).

The generation of a phase-normalized image sequence is briefly described as follows. First, let the phase 
                           
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                           
                         of the jth frame in the phase-normalized image sequence be defined as 
                           
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                              =
                              j
                              /
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                           
                         is the number of uniform intervals per period, that is, frames per period. In other words, the uniform phase interval is defined as 
                           
                              Δ
                              s
                              =
                              1
                              /
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                           
                        . Next, the adjacent phases 
                           
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    s
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                           
                         in the input image sequence for each phase 
                           
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                           
                         in the phase-normalized image sequence are found, to satisfy 
                           
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                              ⩽
                              
                                 
                                    s
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                           
                        . To generate the jth phase-normalized image 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                           
                        , morphing weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    j
                                    ,
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    j
                                    ,
                                    i
                                    +
                                    1
                                 
                              
                           
                         for the ith and 
                           
                              (
                              i
                              +
                              1
                              )
                           
                        th input images 
                           
                              
                                 
                                    I
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    I
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                           
                         are set as:
                           
                              (1)
                              
                                 
                                    
                                       w
                                    
                                    
                                       j
                                       ,
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       -
                                       
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       w
                                    
                                    
                                       j
                                       ,
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 1
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       j
                                       ,
                                       i
                                    
                                 
                                 .
                              
                           
                        
                     

Finally, to generate the jth phase-normalized image 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                           
                         as shown in Fig. 2 (bottom row), we apply earth mover’s morphing [32] as a topology-free shape morphing technique to adjacent images 
                           
                              
                                 
                                    I
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    I
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                           
                         with weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    j
                                    ,
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    j
                                    ,
                                    i
                                    +
                                    1
                                 
                              
                           
                        .

Since the generated phase-normalized image sequence has uniform phase intervals between adjacent images, a simple phase-shift matching algorithm (e.g., the baseline algorithm [26]) can be directly applied without further non-linear time warping.

In this section, we address the extraction of a temporal fluctuation feature based on a time warping function as well as spatial fluctuation features based on the silhouette itself and the top and bottom trajectories.

The phase fluctuation feature is extracted as a variance of a set of time warping functions (TWFs) over multiple periods (see Fig. 3
                        (b)). A more detailed process to obtain TWFs will be explained later.

More specifically, given a relative phase 
                           
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                           
                         for kth period and resampled point j, we first compute a mean relative phase 
                           
                              
                                 
                                    μ
                                 
                                 
                                    s
                                    ,
                                    j
                                 
                              
                           
                         for the jth linear time evolution 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                           
                         on the resampled TWFs as:
                           
                              (2)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       s
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       k
                                       ,
                                       j
                                    
                                 
                                 ,
                              
                           
                        where K is the number of periods in the input image sequence. We then compute the variance 
                           
                              
                                 
                                    σ
                                 
                                 
                                    s
                                    ,
                                    j
                                 
                                 
                                    2
                                 
                              
                           
                         of the relative phase for the jth linear time evolution as:
                           
                              (3)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       s
                                       ,
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ̃
                                                      
                                                   
                                                
                                                
                                                   k
                                                   ,
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   μ
                                                
                                                
                                                   s
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

We finally obtain the phase fluctuation feature 
                           
                              
                                 
                                    σ
                                 
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                           
                         as their average over the resampled linear time evolutions as:
                           
                              (4)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             P
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                P
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       σ
                                    
                                    
                                       s
                                       ,
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

In the following two subsections, we will explain the process of period segmentation and the reconstruction of TWFs to obtain pairs of linear time evolution 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           
                         and relative phase 
                           
                              
                                 
                                    s
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                           
                         for calculating the above phase fluctuations feature.

Once the phase sequence 
                              
                                 {
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                            is estimated from Self DTW, we obtain the kth period segmentation boundary 
                              
                                 
                                    
                                       i
                                    
                                    
                                       bound
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                 
                              
                            (frame) in the time domain where the corresponding phase s coincides with an integer k (see Fig. 3(a)).

First, we find a pair of adjacent samples 
                              
                                 [
                                 
                                    
                                       i
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       i
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 +
                                 1
                                 ]
                              
                            around the kth period boundary which satisfies:
                              
                                 (5)
                                 
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                    
                                    -
                                    k
                                    )
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                          +
                                          1
                                       
                                    
                                    -
                                    k
                                    )
                                    ⩽
                                    0
                                    .
                                 
                              
                           
                        

Next, we calculate the kth period segmentation boundary 
                              
                                 
                                    
                                       i
                                    
                                    
                                       bound
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                 
                              
                            by interpolation as:
                              
                                 (6)
                                 
                                    
                                       
                                          i
                                       
                                       
                                          bound
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    =
                                    (
                                    1
                                    -
                                    
                                       
                                          w
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    )
                                    
                                       
                                          i
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    (
                                    
                                       
                                          i
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    +
                                    1
                                    )
                                 
                              
                           
                           
                              
                                 (7)
                                 
                                    
                                       
                                          w
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    =
                                    
                                       
                                          k
                                          -
                                          
                                             
                                                s
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      (
                                                      k
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      (
                                                      k
                                                      )
                                                   
                                                
                                                +
                                                1
                                             
                                          
                                          -
                                          
                                             
                                                s
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      (
                                                      k
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

We refer the duration between the 
                              
                                 
                                    
                                       i
                                    
                                    
                                       bound
                                    
                                    
                                       (
                                       k
                                       -
                                       1
                                       )
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       i
                                    
                                    
                                       bound
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                 
                              
                            to the kth period later.

The period segments previously obtained will now be used for reconstructing TWFs. Let us define two notations: relative phase 
                              
                                 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                            and a linear time evolution 
                              
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                              
                            for the ith sample. The relative phase is a fractional portion of the phase, namely, 
                              
                                 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 ⌊
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ⌋
                              
                           , where 
                              
                                 ⌊
                                 ·
                                 ⌋
                              
                            is a floor function. The linear phase evolution is a relative phase when assuming linear phase evolution within a period given period segmentation boundaries. Because the ith sample belongs to the 
                              
                                 (
                                 ⌊
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ⌋
                                 )
                              
                           th period, the linear time evolution 
                              
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                              
                            for the ith period is defined as:
                              
                                 (8)
                                 
                                    
                                       
                                          v
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          i
                                          -
                                          
                                             
                                                i
                                             
                                             
                                                bound
                                             
                                             
                                                (
                                                ⌊
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ⌋
                                                -
                                                1
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                bound
                                             
                                             
                                                (
                                                ⌊
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ⌋
                                                )
                                             
                                          
                                          -
                                          
                                             
                                                i
                                             
                                             
                                                bound
                                             
                                             
                                                (
                                                ⌊
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ⌋
                                                -
                                                1
                                                )
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

The TWF is then expressed as a mapping function 
                              
                                 
                                    
                                       s
                                    
                                    
                                       ̃
                                    
                                 
                                 =
                                 
                                    
                                       w
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                 
                                 (
                                 v
                                 )
                              
                            from the linear time evolution v to an estimated relative phase 
                              
                                 
                                    
                                       s
                                    
                                    
                                       ̃
                                    
                                 
                              
                            for the kth period (see Fig. 3(b)). Fig. 5(a) shows a real example of TWF.

Because we can observe not continuous TWFs but sampled pairs 
                              
                                 {
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                            of the TWFs, for the convenience of the following feature extraction process, we resample them using the uniform phase interval 
                              
                                 Δ
                                 s
                              
                            and denote the pairs for the kth period as 
                              
                                 {
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       k
                                       ,
                                       j
                                    
                                 
                                 }
                              
                           , where 
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 j
                                 /
                                 
                                    
                                       N
                                    
                                    
                                       P
                                    
                                 
                              
                            is common for all the periods.

As described in SubSection 3.2, the trajectory for the ith sample is expressed as a two-dimensional vector 
                           
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    [
                                    
                                       
                                          y
                                       
                                       
                                          top
                                          ,
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          bottom
                                          ,
                                          i
                                       
                                    
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                        . In a similar way to the phase-normalized image sequence, we compute a phase-normalized trajectory 
                           
                              
                                 
                                    
                                       
                                          y
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                              ,
                              
                              (
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                              )
                           
                         for each period (Fig. 4
                        ), where K and 
                           
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                           
                         are again the numbers of periods and uniform phase intervals per period. The only difference is that simple linear interpolation is used for generating the phase-normalized trajectory while the EMM is used for generating the phase-normalized image sequence. Fig. 5
                        (b) shows a real example of trajectories of multiple periods from a subject.

As long as view normalization with respect to a walking person [55,56] is done in advance and the same gait patterns are repeated between the periods, the phase-normalized trajectories will coincide with each other between the periods. In other words, deviation of the phase-normalized trajectories is considered a type of spatial fluctuation in the gait.

The trajectory fluctuations feature is therefore computed as an averaged variance of the trajectories in a similar way to the phase fluctuation feature as:
                           
                              (9)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       y
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                P
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       σ
                                    
                                    
                                       y
                                       ,
                                       i
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       y
                                       ,
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       y
                                    
                                    
                                       k
                                       ,
                                       j
                                    
                                 
                                 -
                                 
                                    
                                       μ
                                    
                                    
                                       y
                                       ,
                                       j
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       y
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       y
                                    
                                    
                                       k
                                       ,
                                       j
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    σ
                                 
                                 
                                    y
                                    ,
                                    j
                                 
                                 
                                    2
                                 
                              
                           
                         and 
                           
                              
                                 
                                    μ
                                 
                                 
                                    y
                                    ,
                                    j
                                 
                              
                           
                         are the variance and mean over the periods for the jth sample in a period.

Another spatial fluctuation is a gait fluctuation image, which directly encodes the silhouette difference within the same relative phase between two periods. For this purpose, we redefine the phase-normalized image sequence at the jth phase in the kth period as 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    j
                                    +
                                    
                                       
                                          kN
                                       
                                       
                                          P
                                       
                                    
                                 
                              
                           
                        .

The silhouette difference between the kth and lth periods is then computed within the same relative phase 
                           
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                              -
                              ⌊
                              
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                              ⌋
                           
                         by subtracting 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                           
                         from 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    l
                                    ,
                                    j
                                 
                              
                           
                         (see the middle row at the left side of Fig. 6
                        ), followed by erosion to remove the difference near the silhouette contour (see the bottom row at the left side of Fig. 6).

In detail, given the kth and lth period of phase-normalized image at the phase j, 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    l
                                    ,
                                    j
                                 
                              
                           
                        , respectively, the jth phase gait difference image 
                           
                              
                                 
                                    D
                                 
                                 
                                    j
                                 
                                 
                                    k
                                    -
                                    l
                                 
                              
                              =
                              |
                              
                                 
                                    I
                                 
                                 
                                    k
                                    ,
                                    j
                                 
                              
                              -
                              
                                 
                                    I
                                 
                                 
                                    l
                                    ,
                                    j
                                 
                              
                              |
                           
                         is then obtained. The erosion is then applied to the 
                           
                              
                                 
                                    D
                                 
                                 
                                    j
                                 
                                 
                                    k
                                    -
                                    l
                                 
                              
                           
                        :
                           
                              (12)
                              
                                 
                                    
                                       E
                                    
                                    
                                       j
                                    
                                    
                                       k
                                       -
                                       l
                                    
                                 
                                 =
                                 Erode
                                 
                                    
                                       
                                          
                                             
                                                D
                                             
                                             
                                                j
                                             
                                             
                                                k
                                                -
                                                l
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Finally, the gait fluctuation image is calculated as the average of eroded difference images 
                           
                              
                                 
                                    E
                                 
                                 
                                    j
                                 
                                 
                                    k
                                    -
                                    l
                                 
                              
                           
                         for the pairs of kth and lth periods over the phases:
                           
                              (13)
                              
                                 
                                    
                                       F
                                    
                                    
                                       k
                                       -
                                       l
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             p
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                p
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       E
                                    
                                    
                                       j
                                    
                                    
                                       k
                                       -
                                       l
                                    
                                 
                                 .
                              
                           
                        
                     

A gait fluctuation image 
                           
                              
                                 
                                    F
                                 
                                 
                                    k
                                    -
                                    l
                                 
                              
                           
                         is then generated as shown in the bottom row at the right side of Fig. 6.

Two examples of GFlucI with low and high spatial fluctuations can be seen in Fig. 7
                        (b). We will refer to the gait fluctuation image as GFlucI from now on.

In this section, we address a method of recognition using the phase-normalized image sequence as well as the gait fluctuation features. Moreover, we introduce a score-level fusion and score-normalization framework using the gait fluctuations.

To match the phase-normalized image sequence, we employ the baseline algorithm [26]. The baseline matching algorithm is briefly reviewed as follows. First, we segment the probe phase-normalized image sequence into K periods of phase-normalized image subsequences with 
                           
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                           
                         frames. Next, we match each of the probe image subsequences to the whole gallery phase-normalized image sequence by synchronizing the phases, namely, searching for the optimal frame shift between the probe subsequence and the gallery sequence so as to minimize the sum of silhouette differences at the corresponding frames, which sets the dissimilarity score. Because we obtain K dissimilarity scores between them, we adopt their minimum as the final dissimilarity score 
                           
                              
                                 
                                    d
                                 
                                 
                                    B
                                 
                              
                           
                        .

Given k and l as the period index in a probe gait sequence and m and n as the period index in a gallery gait sequence, where 
                           
                              k
                              
                              ≠
                              
                              l
                           
                         and 
                           
                              m
                              
                              ≠
                              
                              n
                           
                        , the dissimilarity score 
                           
                              
                                 
                                    d
                                 
                                 
                                    k
                                    -
                                    l
                                    ,
                                    m
                                    -
                                    n
                                 
                              
                           
                         between each period combination of gait fluctuation images for probe 
                           
                              {
                              
                                 
                                    F
                                 
                                 
                                    k
                                    -
                                    l
                                 
                                 
                                    P
                                 
                              
                              }
                           
                         and for gallery 
                           
                              {
                              
                                 
                                    F
                                 
                                 
                                    m
                                    -
                                    n
                                 
                                 
                                    G
                                 
                              
                              }
                           
                        , is computed as:
                           
                              (14)
                              
                                 
                                    
                                       d
                                    
                                    
                                       k
                                       -
                                       l
                                       ,
                                       m
                                       -
                                       n
                                    
                                 
                                 =
                                 1
                                 -
                                 MC
                                 
                                    
                                       
                                          
                                             
                                                F
                                             
                                             
                                                k
                                                -
                                                l
                                             
                                             
                                                P
                                             
                                          
                                          ,
                                          
                                             
                                                F
                                             
                                             
                                                m
                                                -
                                                n
                                             
                                             
                                                G
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              MC
                              (
                              ·
                              ,
                              ·
                              )
                           
                         is the normalized mutual correlation between the two images. The total dissimilarity score 
                           
                              
                                 
                                    d
                                 
                                 
                                    F
                                 
                              
                           
                         is then computed as:
                           
                              (15)
                              
                                 
                                    
                                       d
                                    
                                    
                                       F
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             C
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          ,
                                          l
                                       
                                    
                                 
                                 
                                    
                                       
                                          min
                                       
                                       
                                          m
                                          ,
                                          n
                                       
                                    
                                 
                                 {
                                 
                                    
                                       d
                                    
                                    
                                       k
                                       -
                                       l
                                       ,
                                       m
                                       -
                                       n
                                    
                                 
                                 }
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    N
                                 
                                 
                                    C
                                 
                              
                           
                         is the number of period combinations in the probe.

For the purpose of better performance, score-level fusion is applied to the dissimilarity scores derived from the phase-normalized image sequence and the GFlucI. In particular, we adopt a discriminative and non-parametric probability density-based approach [57] as a training-based score-level fusion method in this study.

Assume that 
                           
                              
                                 
                                    N
                                 
                                 
                                    T
                                 
                              
                           
                         training samples are given and that a pair of training sample is composed of a positive/negative label and a two-dimensional dissimilarity score vector 
                           
                              d
                              =
                              
                                 
                                    [
                                    
                                       
                                          d
                                       
                                       
                                          B
                                       
                                    
                                    ,
                                    
                                       
                                          d
                                       
                                       
                                          F
                                       
                                    
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                        . The positive label belongs to the same subject (genuine) score vector, while negative label belongs to the different subject (imposter) score vector. A distribution of the Bayes error gradient, which is expressed as a function of negative posterior, is represented by lattice-type control points allocated over the two-dimensional dissimilarity score space and the Bayes error gradient on the lattice-type control points are estimated via an energy minimization framework using the training samples. Given a test vector of two-dimensional dissimilarity scores, the associated Bayes error gradient is returned as a single fused dissimilarity score.

In a verification scenario, when the fused dissimilarity score between a matching pair is below a threshold, the matching pair is accepted as a true match (genuine subject), otherwise rejected as a false match (imposter subject).

Because the phase fluctuation feature 
                           
                              
                                 
                                    σ
                                 
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                           
                         and the trajectory fluctuation feature 
                           
                              
                                 
                                    σ
                                 
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                           
                         are both single-dimensional features, they do not have much strong discrimination capability on their own. However, we observe that the dissimilarity scores between the genuine and imposter samples are more separable for lower fluctuated samples, while they are less separable for higher fluctuated samples. In fact, the literature [58] reported that the recognition accuracy was significantly degraded for children, whose gaits were immature and hence should be highly fluctuated. Based on the observation, we expect improvement of recognition accuracy when the dissimilarity score is appropriately normalized with the gait fluctuation feature.

We therefore use the phase and trajectory fluctuation features as a quality measure for score-normalization framework.

Given a matching pair of a probe P and gallery G, we have the sum of the probe and gallery fluctuation feature as a quality measure q. We then consider a two-dimensional evidence space [59] organized by two-dimensional vectors, which is composed of the dissimilarity score 
                           
                              
                                 
                                    d
                                 
                                 
                                    B
                                 
                              
                           
                         derived from the phase-normalized image sequence and the quality measure q of the sum of phase/trajectory fluctuation features, as 
                           
                              
                                 
                                    d
                                 
                                 
                                    Q
                                 
                              
                              =
                              
                                 
                                    [
                                    
                                       
                                          d
                                       
                                       
                                          B
                                       
                                    
                                    ,
                                    q
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                        .

Once the two-dimensional evidence space is constructed, we apply the fusion approach [57] and perform the same process as described in Section 6.3. Note that the Bayes error gradient is regarded as a normalized score in this case, while it is regarded as a fused score in the case of score-level fusion.

@&#EXPERIMENTS@&#

We conducted experiments to confirm the effectiveness of the proposed temporal fluctuation suppression using the phase-normalized image sequence as well as the score-level fusion or score-normalization with the gait fluctuation features.

The proposed method was evaluated with real gait sequences from the publicly available OU-ISIR gait database, the treadmill dataset [60] and the large population dataset [58].
                           3
                           Available at http://www.am.sanken.osaka-u.ac.jp/BiometricDB/index.html.
                        
                        
                           3
                         More specifically, to use a wide range of fluctuations in gait phase and trajectory, we used the treadmill datasets 
                           
                              
                                 
                                    D
                                 
                                 
                                    low
                                 
                              
                           
                         (large fluctuations) and 
                           
                              
                                 
                                    D
                                 
                                 
                                    high
                                 
                              
                           
                         (low fluctuations) composed of a total of 185 subjects (called OUTD), and OULP C1V2 composed of 3143 subjects (called OULP).

Note that OULP contains a view-transited gait image sequence and therefore, meaningful GFlucI cannot be obtained. Therefore, we only use the phase and trajectory fluctuations in OULP as quality measures.

Two sequences were captured for each subject and used as the probe and gallery, respectively. The frame-rate and recording time for each sequence were 60fps and 6s for OUTD, and 30fps and approximately 4s for OULP. Examples of the original images from both can be seen in Fig. 8
                        .

Although both OUTD and OULP do not include the gait covariates (e.g., difference of clothing, surface, shoes, elapsed time, etc.), the recognition result from our work is still useful to know the upper bound of the recognition performance by gait fluctuations. In addition, since the dataset, in particular OULP, contains a large number of subjects, it gives the statistically reliable and convincing results.

In addition, since both OUTD and OULP database were taken indoor, to evaluate the proposed method in an outdoor environment, we also used gallery and probe A (51 subjects) from USF gait database.

In the phase normalization stage, we set the number of uniform phase intervals as 
                           
                              
                                 
                                    N
                                 
                                 
                                    P
                                 
                              
                              =
                              100
                           
                         manually, since this suffices for constructing fine intervals and enabled us to align images in sub-frame order. An example of input image sequence aligned at the estimated phase and phase normalized image sequence for a subject from the OULP is shown in Fig. 9
                        .

Because we used training-based score-level fusion and score normalization, we randomly separated the subjects into disjointed 93 training and 92 test subjects for OUTD, into 1572 training and 1571 test subjects for OULP, and into 26 training and 25 test subjects for USF.

The Bayes error gradient distribution [57] was trained with the training subjects, and then applied to the test subjects to evaluate recognition performance. We repeated the experiments 100 times based on the randomly selected and separated subjects for training and testing to obtain statistically convincing results.

Gait recognition performance was evaluated in the context of the verification scenario and hence we exploited receiver operating characteristic (ROC) curves, indicating the tradeoff between the false acceptance rate (FAR) of imposter candidates and the false rejection rate (FRR) of genuine candidates. We also computed the equal error rate (EER) of FAR and FRR.

@&#RESULTS@&#

First, we evaluated the gait recognition performance using the phase-normalized image sequence and the input image sequence with all 185, 3143, and 51 subjects, on the OUTD, OULP, and USF, respectively, in terms of the ROC curves as shown in Fig. 10
                           . Because the phase-normalized image sequence successfully removes temporal fluctuations, it outperforms the input image sequence for both datasets.


                           Fig. 11
                            shows an original and phase-normalized image sequence for such a typical subject, as well as the distances (dissimilarity measures) allocated in the distance distributions of the genuine and imposter for each original and phase-normalized image sequence. Since this subject has large temporal fluctuations, the distance between the gallery and the probe of this subject becomes large as 
                              
                                 5.1
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       5
                                    
                                 
                              
                            as shown in gray bar in the left top graph in Fig. 11, which is actually confusing regions of distance distributions of genuine and imposter, and hence the subject may falsely rejected.

On the other hand, once the temporal fluctuations are mitigated by the phase-normalized image sequence, the distance between the gallery and the probe of this subject becomes small as 
                              
                                 3.9
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       5
                                    
                                 
                              
                            as shown in gray bar in the left bottom graph in Fig. 11, which is clearly genuine dominant regions of distance distribution, and hence the subject can be truly accepted.

Next, we employed score-level fusion of the phase-normalized gait image sequence and GFlucI. Although the stand-alone GFlucI result (EER: 23.7%) was worse than that from the phase-normalized image (EER: 4.4%), combining them further improved the performance to 0.9% (EER: 3.5%) as shown in Fig. 12
                           
                           . Based on the t-test,
                              4
                              We use ttest function provided by Matlab to perform t-test statistical significance.
                           
                           
                              4
                            this improvement was statistically significant at a p value (two-tail) of 
                              
                                 3.16
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       32
                                    
                                 
                              
                           .

To analyze the important information and discrimination capability of GFlucI regionally, we have applied principal component analysis (PCA) and Fisher discriminant analysis (FDA) to the GFlucI. Fig. 15 shows the example of the first three components of Eigen-GFlucI obtained from applying PCA and Fisher-GFlucI obtained from applying FDA. Eigen-GFLucI shows which parts are the most informative, while Fisher-GFLucI shows which parts are the most discriminative. It turns out that the most informative part is the hand region and the second one is the leg region. On the other hand, the most discriminative part is around the backswing-hand region, and the second best one is the front-swing hand and leg region. The head region, however, contains small amount information and discrimination capability.


                           Fig. 12 shows the performance of GFlucI without FDA and with FDA. We can see that the performance of the GFlucI-FDA (EER: 19.5%) is better than only GFlucI (EER: 23.7%). In the score-level fusion, however, the GFlucI with FDA does not show any improvement than that without LDA, although it still better than phase-normalized image sequence. This is because GFlucI feature distance is more uncorrelated with phase-normalized image distance than that of GFlucI-LDA. Fig. 14
                           
                            shows that compared to GFlucI (correlation coefficient: 0.07), GFlucI-LDA has higher correlation with phase-normalized image distance (correlation coefficient: 0.35).

We showed that GFlucI and GFlucI-LDA are effective in score-level fusion framework. However, it should be noted that while the other gait features directly encode the essence of the gait (and shape), the GFlucI encodes a sort of supplementary information, namely, the degree of the fluctuations. Therefore, the sole GFlucI does not have strong discrimination capability compared with the other direct representation of the gait and have a kind of intermediate property between the gait feature and a quality measure such as phase and trajectory fluctuations. On the other hands, the GFlucI captures fairly different aspects of the gait property from those captured by the other gait features, and hence such supplementary but heterogeneous GFlucI exhibits its efficacy when combined with the other gait features as shown in the experimental results. As a further evidence of this, we would like to show the joint scatter plot of the dissimilarity measures between the GFlucI and the other gait features (see Fig. 17) and that between the other gait features (see Fig. 16
                           
                           ). We can see that the dissimilarity measures are highly correlated between the other gait features (correlation coefficients of GEI vs. FDF, GEI vs. GEnI, and GEnI vs. FDF are 0.975, 0.733, and 0.77, respectively) while that dissimilarity measure are almost uncorrelated between the GFlucI and the other gait features (correlation coefficients of GEI, GEnI, and FDF vs. GFlucI are 0.037, 0.003 and 0.028, respectively), which indicates how the GFlucI offer different kinds of information from the other gait feature.

Finally, we use phase and trajectory fluctuations as quality measures in the score-normalization framework. Note that since for USF database we only have the registered and size-normalized gait silhouette, we do not use its trajectory information as a quality measure. As mentioned in Section 6.4, since the phase fluctuation feature 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                              
                            and the trajectory fluctuation feature 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       y
                                    
                                    
                                       2
                                    
                                 
                              
                            are both single-dimensional features, they do not have much strong discrimination capability on their own.


                           Fig. 13 shows the ROC curves averaged from 100 trials for phase and trajectory fluctuations in both databases. Table 1
                            lists the results of the EER for score-level fusion of the phase-normalized image with GFlucI for OUTD, and score-normalization with phase and trajectory fluctuations for both OUTD and OULP. Based on the graphs and tables, the score-level fusion and score-normalization with the gait fluctuation features outperforms the sole phase-normalized image sequence.

However, we found that the quality-dependent score normalization does not improve the recognition performance in the USF dataset. We suspect that this is due to the limited range of fluctuations exists in the database. Based on the results we obtain, we found that even though suppressing temporal fluctuations improves the gait recognition performance, however, for quality-dependent score-normalization we cannot find improvement. This is because the fluctuations value and range in the USF database are rather small, since the USF database contains mainly mature subjects (the age average and its standard deviation are 28.7 and 7.9, respectively) who walks in a relatively stable way as reported in [58], while the fluctuations value and range in OUTD and OULP are larger since they contains a large age variation of subjects. A more detailed discussion on this limitation will be described in Section 7.5.

The EERs in OUTD for score-level fusion and quality-dependent score normalization outperform the phase-normalized image sequence with an up to 0.7% improvement. In OULP, the score-normalization outperforms the phase-normalized image sequence with also an up to 0.7% improvement. Based on the t-test, these improvements turn out to be statistically significant in OUTD at p values (two-tail) 
                              
                                 1.28
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       5
                                    
                                 
                              
                            and 
                              
                                 8.78
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       17
                                    
                                 
                              
                            for phase and trajectory fluctuations, respectively, and in OULP at p values (two-tail) 
                              
                                 6.37
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       55
                                    
                                 
                              
                            and 
                              
                                 1.35
                                 ×
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       73
                                    
                                 
                              
                            for phase and trajectory fluctuations, respectively.

We see that in quality-dependent score normalization, the fluctuations obtained from the trajectory information performed better than from the phase. Based on our observation, the trajectory fluctuations have a greater positive correlation with the distance by the baseline algorithm with the phase-normalized image sequence than the phase fluctuations (i.e., the distance tends to increase as the fluctuations increases), and thus, has a greater impact on the recognition performance. Unlike more independence between the distances is in general more preferable for the score-level fusion framework as described before, note that a stronger correlation between the distance and the quality is preferable for quality-dependent score normalization framework. This is because the quality itself does not have discrimination capability (i.e., does not depend on genuine or imposter) but the dependency on the distance, and the dependency is used for normalizing the distance.


                           
                           Fig. 19
                            shows the joint scatter plot between the fluctuations and the distance by the baseline algorithm with the phase-normalized image sequence. In OUTD, the correlation coefficients are 0.20 and 0.27 for phase and trajectory fluctuations, respectively. In OULP, the correlation coefficients are 0.14 and 0.20 for phase and trajectory fluctuations, respectively.

To further confirm the effectiveness of our temporal fluctuations suppression and quality-dependent score normalization method, we also applied the proposed method to several state-of-the-art gait features, e.g., gait energy image (GEI) [7], gait entropy image (GEnI) [34], and frequency domain features (FDF) [8]. We extracted the state-of-the-art gait features from OUTD, USF, and OULP database.


                        Fig. 20
                         shows that suppressing phase fluctuations improve the performance of FDF feature in particular, since FDF contains several frequency components, and therefore, applying phase-normalization is meaningful to achieve better performance. For GEI and GEnI, however, since the gait phases from a sequence of images are basically marginalized into a single image, the performance is relatively unchanged. On the other side, applying our quality-dependent score normalization by phase and trajectory fluctuations on those state-of-art gait features has been found to be effective to improve their performance.


                        Fig. 18 shows the ROC curves and Table 2
                         lists the EERs averaged from 100 trials for the state-of-the-art gait features. Based on the results, it can be confirmed that our proposed quality-dependent score normalization method is effective to improve the performance of several state-of-the-art gait recognition features.

Based on these results, the proposed method can be applied not only for baseline algorithm, but also for the state-of-the-art gait features. It is also apparent that gait fluctuation features can improve gait recognition performance, particularly if these features are used in score-level fusion and as quality measures in a score-normalization framework.

Although our proposed score-normalization by fluctuations as quality measure is effective, however, it has limitation when the dataset does not contain sufficient range of fluctuations, i.e., only contains small fluctuations produced by people in stable way especially in the mature age.

For example, the fluctuations value and range in the USF database are rather small, since the USF database contains mainly mature subjects (the age average and its standard deviation are 28.7 and 7.9, respectively) who walks in a relatively stable way as reported in [58].

In the real world, however, there is a wide range of age of people walking, and hence, the range of fluctuations is also very large, which is represented in our OUTD and especially in OULP dataset. Fig. 21
                         shows that USF dataset contains much smaller fluctuations distribution mode and range than that of the OUTD and OULP dataset. Consequently, a limitation of the proposed method lies in that the gait fluctuation does not successfully help the gait recognition when all the subjects have stable walking style, namely, when they all have similarly small gait fluctuations (e.g., USF database). On the other hand, the subjects have large variety of gait fluctuations due to wide variety of the subject ages, the proposed method still work well (e.g., OUTD and OULP). Note that not only the outdoor setting but also the diversity of the subject ages/gender is a important factor to reflect a real world application, and we showed the effectiveness of the proposed method from a viewpoint of the diversity of the subject ages.

This paper presented a method of gait recognition both by suppressing and using gait fluctuations. We suppressed the inter-frame temporal misalignment because of temporal fluctuations using the phase-normalized image sequence, which was constructed in conjunction with phase estimation and morphing techniques. We also extracted phase fluctuation features as temporal fluctuation features as well as GFlucI, and trajectory fluctuation features as spatial fluctuations. We effectively combined these two approaches using score-level fusion and/or a score-normalization framework using the gait fluctuation features as another score or as quality measures. The results of score-level fusion and quality-dependent score normalization in large-scale databases showed greater performance improvement than solely using the phase-normalized image. In future work, we plan to investigate quality measures to further improve gait recognition performance.

@&#ACKNOWLEDGMENTS@&#

This work was partly supported by a JSPS-Japan Grant-in-Aid for Young Scientists (A) 23680017, a JSPS-Japan Grant-in-Aid for Scientific Research (S)
                  21220003, and the JST CREST “Behavior Understanding based on Intention-Gait Model” Project.

@&#REFERENCES@&#

