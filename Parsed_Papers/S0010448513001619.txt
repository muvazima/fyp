@&#MAIN-TITLE@&#A sweep and translate algorithm for computing voxelized 3D Minkowski sums on the GPU

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Algorithm for computing voxelized Minkowski sum of two input polyhedra.


                        
                        
                           
                           New decomposition formula for computing Minkowski sum, with proof.


                        
                        
                           
                           Efficient GPU implementation using stencil shadow volumes.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Minkowski sums

GPU

Voxelization

Stencil shadow volume

@&#ABSTRACT@&#


               
               
                  Computing the Minkowski sum of two arbitrary polyhedra in 
                        
                           
                              R
                           
                           
                              3
                           
                        
                      is difficult because of high combinatorial complexity. We present an algorithm for directly computing a voxelization of the Minkowski sum of two closed watertight input polyhedra for applications such as path planning that do not require a boundary representation as output. We introduce a new decomposition formula for computing the Minkowski sum and prove its correctness. We describe an efficient Graphics Processing Unit (GPU) implementation of the algorithm using stencil shadow volumes to create a solid voxelization of the Minkowski sum.
               
            

@&#INTRODUCTION@&#

Minkowski sums are a fundamental operation for many applications in Computer-Aided Design and Manufacturing, such as solid modeling (offsetting and sweeping), collision detection, toolpath planning, assembly/disassembly planning, and penetration depth computation. Despite the simplicity of its mathematical definition, computing the Minkowski sum of two arbitrary polyhedra in 
                        
                           
                              R
                           
                           
                              3
                           
                        
                      is generally difficult because of its high combinatorial complexity. In this paper, we present a new algorithm for directly computing a voxelization of the Minkowski sum of two closed watertight polyhedra. This algorithm runs on the Graphics Processing Unit (GPU) and directly creates a voxelization without having to compute a boundary representation (B-rep).

The Minkowski sum of two point sets 
                           A
                         and 
                           B
                         in 
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                         is defined as 
                           
                              (1)
                              
                                 A
                                 ⊕
                                 B
                                 =
                                 
                                    {
                                    a
                                    +
                                    b
                                    ∣
                                    a
                                    ∈
                                    A
                                    ,
                                    b
                                    ∈
                                    B
                                    }
                                 
                              
                           
                         where 
                           a
                         and 
                           b
                         denote the coordinate vectors of arbitrary points in 
                           A
                         and 
                           B
                        , and + denotes vector addition. In this paper we will not distinguish between points and vectors; i.e., a point will also represent the vector pointing from the origin to itself. Unless otherwise specified, we will use lower case letters for points and upper case for sets of points.

From the above Minkowski sum definition, and the commutativity and associativity of vector addition, the following two properties (commutativity and associativity) of Minkowski sums hold: 
                           
                              
                                 (2)
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    B
                                    ⊕
                                    A
                                    ,
                                 
                              
                              
                                 (3)
                                 
                                    
                                       (
                                       A
                                       ⊕
                                       B
                                       )
                                    
                                    ⊕
                                    C
                                    =
                                    A
                                    ⊕
                                    
                                       (
                                       B
                                       ⊕
                                       C
                                       )
                                    
                                    .
                                 
                              
                           
                         The translation of a point set 
                           A
                         by a vector 
                           d
                        , denoted as 
                           
                              
                                 A
                              
                              
                                 d
                              
                           
                        , can be represented as the Minkowski sum of point set 
                           A
                         and another point set that contains only point 
                           d
                        ; i.e., 
                           
                              (4)
                              
                                 
                                    
                                       A
                                    
                                    
                                       d
                                    
                                 
                                 =
                                 A
                                 ⊕
                                 
                                    {
                                    d
                                    }
                                 
                                 .
                              
                           
                         For simplicity, we will denote 
                           A
                           ⊕
                           
                              {
                              d
                              }
                           
                         as either 
                           A
                           +
                           d
                         or 
                           
                              
                                 A
                              
                              
                                 d
                              
                           
                        .

The shape of a Minkowski sum is translation invariant. If we translate one of the input models by a specific vector 
                           d
                        , the Minkowski sum will also translate by the same vector, or mathematically,
                           
                              (5)
                              
                                 
                                    
                                       A
                                    
                                    
                                       d
                                    
                                 
                                 ⊕
                                 B
                                 =
                                 A
                                 ⊕
                                 
                                    
                                       B
                                    
                                    
                                       d
                                    
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          A
                                          ⊕
                                          B
                                          )
                                       
                                    
                                    
                                       d
                                    
                                 
                                 .
                              
                           
                        
                     

Another equivalent definition of Minkowski sums using the concept of translation is 
                           
                              (6)
                              
                                 A
                                 ⊕
                                 B
                                 =
                                 
                                    
                                       ⋃
                                    
                                    
                                       a
                                       ∈
                                       A
                                    
                                 
                                 
                                    
                                       B
                                    
                                    
                                       a
                                    
                                 
                                 =
                                 
                                    
                                       ⋃
                                    
                                    
                                       b
                                       ∈
                                       B
                                    
                                 
                                 
                                    
                                       A
                                    
                                    
                                       b
                                    
                                 
                                 .
                              
                           
                         The equivalence of (1) and (6) can be shown as below: 
                           
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       {
                                       a
                                       +
                                       b
                                       ∣
                                       a
                                       ∈
                                       A
                                       ,
                                       b
                                       ∈
                                       B
                                       }
                                    
                                 
                              
                              
                                 
                                    
                                    ⟺
                                    
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       {
                                       a
                                       +
                                       B
                                       ∣
                                       a
                                       ∈
                                       A
                                       }
                                    
                                 
                              
                              
                                 
                                    
                                    ⟺
                                    
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       
                                          ⋃
                                       
                                       
                                          a
                                          ∈
                                          A
                                       
                                    
                                    
                                       
                                          B
                                       
                                       
                                          a
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Definition (6) implies a method often used to manually construct and visualize Minkowski sums. If 
                           A
                         and 
                           B
                         represent polygons in 
                           
                              
                                 R
                              
                              
                                 2
                              
                           
                         or polyhedra in 
                           
                              
                                 R
                              
                              
                                 3
                              
                           
                           ,
                           A
                           ⊕
                           B
                         can be generated by “sweeping” 
                           A
                         along the boundary of 
                           B
                         and then taking the union of the sweep with 
                           B
                         (or vice versa). Fig. 1
                         shows the 2D Minkowski sum of a square and a triangle generated by sweeping the triangle along the boundary of the square. A 3D example is shown in Fig. 2
                        , where the 3D Minkowski sum is generated by sweeping the tetrahedron over the six boundary faces of the cube. The two examples given in Figs. 1 and 2 are simple convex models. When both input models become non-convex, their Minkowski sum can still be generated by sweeping one over the other, but the final shape will become more complex (Fig. 3
                        ). In this paper, we develop the mathematics behind the “sweep-along-the-boundary” behavior—we give both an accurate mathematical description and a strict proof. Based on this mathematical formulation, we then introduce a new formula that decomposes the Minkowski sum of two closed watertight objects as the union of the Minkowski sum of their boundaries and a translation of each input object. Finally, for an efficient implementation, we use a stencil shadow volume technique to voxelize the union and create a solid voxelization of the Minkowski sum.

We now discuss some commonly used approaches for Minkowski sum computation algorithms that can take non-convex polyhedra as inputs. Although the Minkowski sum of two convex polyhedra has complexity of 
                        O
                        
                           (
                           m
                           n
                           )
                        
                      (here 
                        m
                      and 
                        n
                      denote the numbers of triangles of each input polyhedron) and can be computed very efficiently  [1,2], the Minkowski sum of two non-convex polyhedra can have complexity as high as 
                        O
                        
                           (
                           
                              
                                 m
                              
                              
                                 3
                              
                           
                           
                              
                                 n
                              
                              
                                 3
                              
                           
                           )
                        
                      and becomes much more difficult to compute. Most algorithms for non-convex objects fall into two main categories: convex decomposition or convolution.

The basic idea of convex-decomposition based algorithms is decomposing the input non-convex polyhedra into convex pieces, computing all the pairwise Minkowski sums of these convex pieces, and then taking their union. It is based on the following property of Minkowski sums (distributivity): 
                           Proposition 1
                           
                              
                                 
                                    (
                                    A
                                    ∪
                                    B
                                    )
                                 
                                 ⊕
                                 C
                                 =
                                 
                                    (
                                    A
                                    ⊕
                                    C
                                    )
                                 
                                 ∪
                                 
                                    (
                                    B
                                    ⊕
                                    C
                                    )
                                 
                              
                              .
                           


                        
                           Proof
                           
                              
                                 
                                    
                                       
                                          x
                                          ∈
                                          
                                             (
                                             A
                                             ∪
                                             B
                                             )
                                          
                                          ⊕
                                          C
                                       
                                    
                                    
                                       
                                          
                                          ⟺
                                          
                                          x
                                          =
                                          y
                                          +
                                          c
                                          ,
                                          
                                          y
                                          ∈
                                          A
                                          ∪
                                          B
                                          ,
                                          
                                          c
                                          ∈
                                          C
                                       
                                    
                                    
                                       
                                          
                                          ⟺
                                          
                                          x
                                          =
                                          a
                                          +
                                          c
                                          
                                          or
                                          
                                          b
                                          +
                                          c
                                          ,
                                          
                                          a
                                          ∈
                                          A
                                          ,
                                          
                                          b
                                          ∈
                                          B
                                          ,
                                          
                                          c
                                          ∈
                                          C
                                       
                                    
                                    
                                       
                                          
                                          ⟺
                                          
                                          x
                                          ∈
                                          A
                                          ⊕
                                          C
                                          
                                          or
                                          
                                          x
                                          ∈
                                          B
                                          ⊕
                                          C
                                          .
                                       
                                    
                                 
                               Then 
                                 
                                    (
                                    A
                                    ∪
                                    B
                                    )
                                 
                                 ⊕
                                 C
                                 =
                                 
                                    (
                                    A
                                    ⊕
                                    C
                                    )
                                 
                                 ∪
                                 
                                    (
                                    B
                                    ⊕
                                    C
                                    )
                                 
                              .□

There are three steps in convex-decomposition based approaches: convex decomposition, computing the Minkowski sum of convex pieces, and union computation. While it is desirable to compute an optimal (minimum number of pieces) convex decomposition, this problem is known to be NP-hard  [3]. Several practical algorithms are known to compute a sub-optimal or approximate convex decomposition  [4–6]. The second step is typically performed using either the convex hull or Gaussian map approaches  [1,2]. The third step, computing the union of the intermediate Minkowski sum pieces, is usually time consuming since the number of pairwise Minkowski sum pieces has quadratic complexity (in the timings given in  [7], the time used for computing the union dominates the whole algorithm). Given 
                           n
                         polyhedral objects, their union can have combinatorial complexity of 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              )
                           
                           [8].

Based on the algorithms used for convex decomposition and union computation, convex-decomposition based approaches for Minkowski sum computation can be either exact or approximate. The exact algorithms allow robust implementation and are able to find low dimensional boundaries, i.e., they are able to identify dangling faces or lines and singular points in the Minkowski sums [9–11]. However, these algorithms are limited to relatively simple objects because of their performance. To compute the Minkowski sum of two polyhedra bounded by only hundreds of triangles, it usually takes tens of minutes  [12]. Varadhan and Manocha proposed another convex-decomposition based algorithm to compute an approximated boundary of Minkowski sums  [7]. Instead of computing the exact union of pairwise Minkowski sums, they compute a signed distance field and extract its zero iso-surface. Their algorithm provides geometrical and topological guarantees by using an adaptive subdivision algorithm. However, the performance of their algorithm is impacted by the large number of convex pieces after decomposition. The timing reported in their paper shows that computing the distance fields for tens of thousands of pairwise convex Minkowski sums usually takes 5–50 min.

Convolution-based approaches have also been proposed for computing the boundary of Minkowski sums. Usually they start with a set of surface primitives that is a superset of the Minkowski sum boundary. These surface primitives are then trimmed and filtered to form the final boundary.

For objects with smooth boundary surfaces, their convolution is well defined. If we denote the convolution of two surfaces as 
                           ⋆
                        , then the convolution of two smooth boundary surfaces 
                           ∂
                           A
                         and 
                           ∂
                           B
                         is defined as 
                           
                              (7)
                              
                                 ∂
                                 A
                                 ⋆
                                 ∂
                                 B
                                 =
                                 
                                    {
                                    a
                                    +
                                    b
                                    ∣
                                    a
                                    ∈
                                    ∂
                                    A
                                    ,
                                    b
                                    ∈
                                    ∂
                                    B
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          a
                                       
                                    
                                    =
                                    
                                       
                                          n
                                       
                                       
                                          b
                                       
                                    
                                    }
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 n
                              
                              
                                 a
                              
                           
                         denotes the unit outward normal at point 
                           a
                        . A 2D example of the convolution of two smooth curves is shown in Fig. 4
                        . Note that the convolution in this context is different from its usual definition of “convolving two functions”. For two objects the convolution of their boundaries is a superset of the boundary of their Minkowski sum and also a subset of the Minkowski sum of their boundaries  [13,14]; i.e.,
                           
                              (8)
                              
                                 ∂
                                 
                                    (
                                    A
                                    ⊕
                                    B
                                    )
                                 
                                 ⊆
                                 ∂
                                 A
                                 ⋆
                                 ∂
                                 B
                                 ⊆
                                 ∂
                                 A
                                 ⊕
                                 ∂
                                 B
                                 .
                              
                           
                         If both objects are convex, it is easy to show that 
                           ∂
                           A
                           ⋆
                           ∂
                           B
                           =
                           ∂
                           
                              (
                              A
                              ⊕
                              B
                              )
                           
                           [1]. If at least one of them is non-convex, the convolution may become self-intersecting (see Fig. 4 for an example), and the Minkowski sum boundary can be extracted by trimming and filtering the convolution surfaces.

Polyhedra do not have smooth boundary surfaces, and the outward normals at their vertices and edges are not well defined. The definition of convolution for polyhedra is much more complicated, especially for non-convex polyhedra. In the work by Ghosh  [1], the convolution of two polyhedra is defined using the concept of Gaussian maps (called “slope diagrams”), and for non-convex input, an additional concept called “negative objects”. In that definition, the convolution of two polyhedra can be seen as an extension of Eq. (7), which defines the convolution of smooth boundary surfaces, where 
                           
                              
                                 n
                              
                              
                                 a
                              
                           
                         and 
                           
                              
                                 n
                              
                              
                                 b
                              
                           
                         are replaced with the corresponding features (a single point, a geodesic arc, or a patch, depending on the position of 
                           a
                         or 
                           b
                         on the boundary) to which points 
                           a
                         and 
                           b
                         are mapped to on the Gaussian sphere, and then instead of checking whether the two outward normals are the same, the intersection of the two features is checked.

Computing the exact convolution of two polyhedra (which is the superset of the boundary of their Minkowski sum) is difficult itself since it involves 3D arrangements and Boolean operations. Usually people compute the exact convolution only if both input models have smooth boundaries and if explicit parameterization of both boundaries exists  [13,14]. Many convolution-based approaches for polyhedra just start with 
                           ∂
                           A
                           ⊕
                           ∂
                           B
                         as the convolution  [15,16], and then filter and trim its surface primitives to extract the final Minkowski sum boundary. The filtering and trimming operations may become very complex since the number of generated surface primitives has quadratic complexity and they may intersect each other arbitrarily in 3D space. The algorithm proposed in our previous work  [17] uses this basic approach.

Below we briefly discuss some existing convolution-based algorithms. Guibas and Seidel presented an output sensitive algorithm for computing the convolution of 2D curves  [18]. Kaul and Rossignac introduced a set of criteria to cull out facets that are not part of the Minkowski sum boundary  [16]. These criteria were used later in other works  [19,15,20,17]. Peternell and Steiner studied how to extract the Minkowski sum boundary from the convolution of two objects with piecewise smooth boundaries  [14]. As discussed in the previous paragraph, Lien started with a brute force convolution, which is simply defined as 
                           ∂
                           A
                           ⊕
                           ∂
                           B
                        , and then computed facet–facet intersections as 2D arrangements on each facet  [15]. Then he introduced the novel idea of using collision detection tests to merge and filter cells from 2D arrangements. Unfortunately the 2D arrangements and collision detection become both time and memory consuming when the size and complexity of the input models increase.

To overcome the computational complexity introduced by 3D operations, some approaches seek to use other lower dimensional representations. Voelcker and his group suggested using “ray representations” (ray-reps) to reduce 3D Minkowski sum computation to 1D Boolean operations  [21,22], but no practical implementation of this algorithm is known. Lien proposed a point-based approach that creates a point set covering the Minkowski sum boundary  [19]. This approach starts with a set of points both on and inside the Minkowski sum boundary. Several filters, including the ones introduced in  [16], are used to cull out points that are not on the boundary to generate the final point set. The main drawback of this approach is that its result includes no information of the interior of the Minkowski sum. Kavraki proposed voxelizing both input models, then converting the Minkowski sum to the convolution (the usual mathematical convolution, not the convolution of two surfaces mentioned in the previous section) of two 3D arrays representing the voxels, and finally computing the convolution using a fast Fourier transform (FFT)  [23]. The main drawback of this approach is the low resolution (1283 or 2563) used for the voxelization due to memory limitations  [24,25], since each voxel needs to be represented as a floating point number (it would require 512×512×512×4=512 MB if a floating point number uses 4 bytes).

Some algorithms have also been introduced for handling specific types of objects. Seong et al. presented an algorithm for computing Minkowski sums of surfaces generated by slope-monotone closed curves  [26]. Mühlthaler and Pottmann introduced an explicit parameterization of the convolution of two ruled surfaces  [13], which was defined in Eq. (7). Barki et al. proposed an approach for computing the Minkowski sum of a convex polyhedron and a non-convex polyhedron whose boundary is completely recoverable from three orthogonal projections  [27]. Other authors have introduced fast algorithms for the special case of rotating convex polyhedra by tracking the changes to the topology of the arrangement on the Gaussian sphere  [28–30].

Most existing algorithms, as discussed above, compute either an exact  [11,2,10,31] or an approximated  [14,7] boundary representation (B-rep) of the Minkowski sum. A B-rep is convenient for rendering and visualization due to its explicit representation of surface boundaries, but it cannot be directly applied to many applications where we are more interested in the interior of the Minkowski sum instead of its boundary. In motion planning, even if we have computed a B-rep based configuration-space, it usually needs to be sampled in order to construct a connectivity roadmap  [32,33]. In collision detection and assembly/disassembly, we need to determine whether a point is inside or outside of the Minkowski sum, which usually requires a parity check for B-reps. If we consider higher dimensional Minkowski sums (e.g., 3D motion planning involving both translation and rotation requires computing and representing 6D Minkowski sums), a B-rep is not an appropriate representation any more.

To overcome the shortcomings of B-rep based Minkowski sums, our algorithm described in  [17] considers using a GPU-based algorithm to compute a voxelized representation as an alternative to the traditional B-rep. A voxelized representation provides a uniform and simple description for objects and can be easily extended to higher dimensions. The voxelized representation of Minkowski sums is more advantageous in applications where a B-rep would need to be sampled or point membership classification (determining whether a point is inside a B-rep solid or not) would need to be performed. It provides sample points used to build the connectivity roadmap in motion planning with no need of further computation, and also provides immediate collision feedback by simply checking if a certain voxel is set to one or zero. However, the algorithm proposed in  [17] cannot compute holes in Minkowski sums.

As explained in Section  1.2, to manually draw the Minkowski sum of two simple shapes, one usually sweeps one shape along the boundary of the other. (In fact this method works for complex 3D objects too, but it is easier to perform manually for simple shapes.) Such an example is shown in Fig. 5
                     (a). Here we sweep the yellow triangle along the boundary of the green rectangle. Some subtleties of this common approach include: 
                        
                           –
                           A reference point needs to be specified for 
                                 B
                              . This reference point is placed on and swept along the boundary of 
                                 A
                              . Theoretically this point can be chosen arbitrarily. One usually uses a point on the boundary of 
                                 B
                               for convenience. In Fig. 5(a), we use point 
                                 r
                               as the reference point.

Before 
                                 B
                               is swept, 
                                 A
                               needs to be translated by the vector defined by the reference point of 
                                 B
                              . Usually one simply sweeps 
                                 B
                               along the boundary of 
                                 A
                               without translating 
                                 A
                              , just because the origin is taken as the reference point. If the reference point is not the origin, a translation of 
                                 A
                               is necessary. In Fig. 5(a), the green square is translated by vector 
                                 r
                              .

Just sweeping 
                                 B
                               along the boundary of 
                                 A
                               does not necessarily cover the whole Minkowski sum 
                                 A
                                 ⊕
                                 B
                              . In the example in Fig. 5(b), an empty rectangle inside the Minkowski sum is not covered by the sweep. This empty rectangle will be covered by 
                                 A
                               after it is translated by vector 
                                 r
                               if 
                                 r
                               is chosen to be a point of 
                                 B
                               (either on the boundary or in the interior), as one normally does. (An analogous case for the swept volume of a compact manifold sweeping along a one-parameter trajectory was proved in  [34].)

Mathematically “sweeping 
                        B
                      along the boundary of 
                        A
                     ” is represented by 
                        B
                        ⊕
                        ∂
                        A
                     . To cover the empty area that is not covered by the sweep, we need a translation of 
                        A
                     . A key observation is that as long as 
                        A
                      is translated by a vector defined by any point of 
                        B
                     , it will cover the empty area (see Fig. 5(c)). We summarize this observation in the proposition below and also give a strict proof. A similar proposition was introduced in the technical report by Menon and Voelcker  [21], though the origin was assumed to be inside of 
                        B
                      (or translated before and after). In our proposition below, we do not put any restriction on the origin and give a more concise proof.
                        Proposition 2
                        
                           Suppose 
                           
                              A
                            
                           and 
                           
                              B
                            
                           are two singly connected watertight objects, and 
                           
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                            
                           is an arbitrary point of 
                           
                              B
                            
                           (either on the boundary or in the interior). Then
                           
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       (
                                       B
                                       ⊕
                                       ∂
                                       A
                                       )
                                    
                                    ∪
                                    
                                       (
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        


                     
                        Proof
                        Let 
                              C
                            denote 
                              
                                 (
                                 B
                                 ⊕
                                 ∂
                                 A
                                 )
                              
                              ∪
                              
                                 (
                                 A
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       b
                                    
                                 
                                 )
                              
                              ,
                              
                              ∀
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                              ∈
                              B
                           . By definition, 
                              B
                              ⊕
                              ∂
                              A
                              ⊆
                              A
                              ⊕
                              B
                            and 
                              A
                              +
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                              ⊆
                              A
                              ⊕
                              B
                           . Therefore 
                              C
                              ⊆
                              A
                              ⊕
                              B
                           . We only need to prove that 
                              A
                              ⊕
                              B
                              ⊆
                              C
                           ; i.e., 
                              ∀
                              c
                              ∈
                              A
                              ⊕
                              B
                           , we need to show that 
                              c
                              ∈
                              C
                           .

For any 
                              c
                              ∈
                              A
                              ⊕
                              B
                            there must exist points 
                              a
                            and 
                              b
                              ,
                              a
                              ∈
                              A
                            and 
                              b
                              ∈
                              B
                           , such that 
                              c
                              =
                              a
                              +
                              b
                           . If 
                              a
                              ∈
                              ∂
                              A
                           , then 
                              c
                              ∈
                              B
                              ⊕
                              ∂
                              A
                              ⊆
                              C
                           . If 
                              a
                              ∉
                              ∂
                              A
                           , then 
                              a
                            must lie in the interior of 
                              A
                           . Now we consider 
                              −
                              B
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                            (
                              B
                            is reflected around the origin and then translated by vector 
                              a
                              +
                              b
                           ). After this transformation, point 
                              b
                            will coincide with point 
                              a
                            (since 
                              −
                              b
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                              =
                              a
                           ). Note that 
                              b
                            can be either on the boundary or in the interior of 
                              B
                           . Now consider the intersection between the boundaries of 
                              A
                            and 
                              −
                              B
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                           . Since 
                              A
                            and 
                              −
                              B
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                            share at least one common point 
                              a
                           , and 
                              a
                            is in the interior of 
                              A
                           , either these two boundaries intersect each other, or one of them completely contains the other, for a total of three different cases to consider (see Fig. 6
                           ). 
                              
                                 •
                                 Case (1): 
                                       ∂
                                       
                                          (
                                          −
                                          B
                                          +
                                          
                                             (
                                             a
                                             +
                                             b
                                             )
                                          
                                          )
                                       
                                     and 
                                       ∂
                                       A
                                     intersect. Suppose 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                     is the intersection, 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       A
                                     and 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       
                                          (
                                          −
                                          B
                                          +
                                          
                                             (
                                             a
                                             +
                                             b
                                             )
                                          
                                          )
                                       
                                    . Since 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       
                                          (
                                          −
                                          B
                                          +
                                          
                                             (
                                             a
                                             +
                                             b
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                       ∃
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       B
                                     such that 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       −
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       a
                                       +
                                       b
                                    . Then 
                                       c
                                       =
                                       a
                                       +
                                       b
                                       =
                                       
                                          (
                                          a
                                          +
                                          b
                                          −
                                          
                                             
                                                b
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                       +
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       A
                                       ⊕
                                       B
                                       ⊆
                                       C
                                    .

Case (2): 
                                       −
                                       B
                                       +
                                       
                                          (
                                          a
                                          +
                                          b
                                          )
                                       
                                       ⊆
                                       A
                                    . Then 
                                       ∀
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       ∈
                                       B
                                       ,
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       +
                                       a
                                       +
                                       b
                                       ∈
                                       A
                                       ⇒
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       +
                                       c
                                       ∈
                                       A
                                       ⇒
                                       c
                                       ∈
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       ⊆
                                       C
                                    .

Case (3): 
                                       A
                                       ⊆
                                       −
                                       B
                                       +
                                       
                                          (
                                          a
                                          +
                                          b
                                          )
                                       
                                    . Then 
                                       ∀
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       ∂
                                       A
                                       ⊆
                                       A
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       −
                                       B
                                       +
                                       
                                          (
                                          a
                                          +
                                          b
                                          )
                                       
                                       ⇒
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       −
                                       B
                                       +
                                       c
                                       ⇒
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       B
                                       +
                                       
                                          (
                                          −
                                          c
                                          )
                                       
                                       ⇒
                                       c
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       B
                                       ⇒
                                       c
                                       ∈
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ⊆
                                       B
                                       ⊕
                                       ∂
                                       A
                                       ⊆
                                       C
                                    .

Thus for all the three cases, we have 
                              c
                              ∈
                              C
                           . This proves 
                              A
                              ⊕
                              B
                              ⊆
                              C
                           . Thus 
                              A
                              ⊕
                              B
                              =
                              C
                           .□


                     Proposition 2 mathematically expresses the “sweep-along-the-boundary” method used to generate Minkowski sums. In fact, as suggested by our proof above, we find that the proposition can be further extended. In case (1), 
                        
                           
                              b
                           
                           
                              ′
                           
                        
                      must be on the boundary of 
                        B
                     ; in case (3), 
                        
                           
                              p
                           
                           
                              a
                           
                        
                      can be any point of 
                        A
                     , not just a point on the boundary of 
                        A
                     . Another reason the proposition might be extended is that 
                        A
                      and 
                        B
                      are symmetric in the expression 
                        A
                        ⊕
                        B
                      (i.e., they can be swapped without causing any change), but they are not in the expression 
                        
                           (
                           B
                           ⊕
                           ∂
                           A
                           )
                        
                        ∪
                        
                           (
                           A
                           +
                           
                              
                                 p
                              
                              
                                 b
                              
                           
                           )
                        
                     .

The extended proposition is given below. It shows that the Minkowski sum of two singly connected watertight objects can be decomposed as the union of the Minkowski sum of their boundaries and a copy of each object translated by a vector defined by any point of the other object. Its proof is very similar to the one for Proposition 2. To the best of our knowledge, this is the first mathematical formulation and explanation of the relationship between the Minkowski sum of two objects and the Minkowski sum of their boundaries.
                        Proposition 3
                        
                           Suppose 
                           
                              A
                            
                           and 
                           
                              B
                            
                           are two singly connected watertight objects, and 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                            
                           and 
                           
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                            
                           are two arbitrary points of 
                           
                              A
                            
                           and 
                           
                              B
                            
                           respectively (either on the boundary or in the interior). Then
                           
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       (
                                       ∂
                                       A
                                       ⊕
                                       ∂
                                       B
                                       )
                                    
                                    ∪
                                    
                                       (
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        


                     
                        Proof
                        Let 
                              C
                            denote 
                              
                                 (
                                 ∂
                                 A
                                 ⊕
                                 ∂
                                 B
                                 )
                              
                              ∪
                              
                                 (
                                 A
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       b
                                    
                                 
                                 )
                              
                              ∪
                              
                                 (
                                 B
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       a
                                    
                                 
                                 )
                              
                              ,
                              
                              ∀
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                              ∈
                              A
                            and 
                              ∀
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                              ∈
                              B
                           . By definition, 
                              ∂
                              A
                              ⊕
                              ∂
                              B
                              ⊆
                              A
                              ⊕
                              B
                              ,
                              A
                              +
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                              ⊆
                              A
                              ⊕
                              B
                           , and 
                              B
                              +
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                              ⊆
                              A
                              ⊕
                              B
                           . Then 
                              C
                              ⊆
                              A
                              ⊕
                              B
                           . We only need to prove that 
                              A
                              ⊕
                              B
                              ⊆
                              C
                           ; i.e., 
                              ∀
                              c
                              ∈
                              A
                              ⊕
                              B
                           , we need to show that 
                              c
                              ∈
                              C
                           .

For any 
                              c
                              ∈
                              A
                              ⊕
                              B
                            there must exist points 
                              a
                            and 
                              b
                              ,
                              a
                              ∈
                              A
                            and 
                              b
                              ∈
                              B
                           , such that 
                              c
                              =
                              a
                              +
                              b
                           . If 
                              a
                              ∈
                              ∂
                              A
                            and 
                              b
                              ∈
                              ∂
                              B
                           , we have 
                              c
                              ∈
                              ∂
                              A
                              ⊕
                              ∂
                              B
                              ⊆
                              C
                           . Otherwise, either 
                              a
                              ∉
                              ∂
                              A
                            or 
                              b
                              ∉
                              ∂
                              B
                           . Without loss of generality we assume that 
                              a
                              ∉
                              ∂
                              A
                           . Then 
                              a
                            must lie in the interior of 
                              A
                           . Now we consider 
                              −
                              B
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                            (
                              B
                            is reflected around the origin and then translated by vector 
                              a
                              +
                              b
                           ). After this transformation, point 
                              b
                            will coincide with point 
                              a
                            (since 
                              −
                              b
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                              =
                              a
                           ). Note that 
                              b
                            can be either on the boundary or in the interior of 
                              B
                           . Now consider the intersection between the boundaries of 
                              A
                            and 
                              −
                              B
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                           . Since 
                              A
                            and 
                              −
                              B
                              +
                              
                                 (
                                 a
                                 +
                                 b
                                 )
                              
                            share at least one common point 
                              a
                            and 
                              a
                            is in the interior of 
                              A
                           , either these two boundaries intersect each other, or one of them completely contains the other, for a total of three different cases to consider (see Fig. 6). 
                              
                                 •
                                 Case (1): 
                                       ∂
                                       
                                          (
                                          −
                                          B
                                          +
                                          
                                             (
                                             a
                                             +
                                             b
                                             )
                                          
                                          )
                                       
                                     and 
                                       ∂
                                       A
                                     intersect. Suppose 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                     is the intersection, 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       A
                                     and 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       
                                          (
                                          −
                                          B
                                          +
                                          
                                             (
                                             a
                                             +
                                             b
                                             )
                                          
                                          )
                                       
                                    . Since 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       
                                          (
                                          −
                                          B
                                          +
                                          
                                             (
                                             a
                                             +
                                             b
                                             )
                                          
                                          )
                                       
                                       ,
                                       ∃
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       B
                                     such that 
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       −
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       a
                                       +
                                       b
                                    . Then 
                                       c
                                       =
                                       a
                                       +
                                       b
                                       =
                                       
                                          (
                                          a
                                          +
                                          b
                                          −
                                          
                                             
                                                b
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                       +
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       
                                          
                                             a
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       ∂
                                       A
                                       ⊕
                                       ∂
                                       B
                                       ⊆
                                       C
                                    .

Case (2): 
                                       −
                                       B
                                       +
                                       
                                          (
                                          a
                                          +
                                          b
                                          )
                                       
                                       ⊆
                                       A
                                    . Then 
                                       ∀
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       ∈
                                       B
                                       ,
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       +
                                       a
                                       +
                                       b
                                       ∈
                                       A
                                       ⇒
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       +
                                       c
                                       ∈
                                       A
                                       ⇒
                                       c
                                       ∈
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       ⊆
                                       C
                                    .

Case (3): 
                                       A
                                       ⊆
                                       −
                                       B
                                       +
                                       
                                          (
                                          a
                                          +
                                          b
                                          )
                                       
                                    . Then 
                                       ∀
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       A
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       −
                                       B
                                       +
                                       
                                          (
                                          a
                                          +
                                          b
                                          )
                                       
                                       ⇒
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       −
                                       B
                                       +
                                       c
                                       ⇒
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       B
                                       +
                                       
                                          (
                                          −
                                          c
                                          )
                                       
                                       ⇒
                                       c
                                       −
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ∈
                                       B
                                       ⇒
                                       c
                                       ∈
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       ⊆
                                       C
                                    .

Thus for all the three cases, we have 
                              c
                              ∈
                              C
                           . This proves 
                              A
                              ⊕
                              B
                              ⊆
                              C
                           . Thus 
                              A
                              ⊕
                              B
                              =
                              C
                           .□


                     Propositions 2 and 3 apply to any singly connected watertight object. Note that for a degenerate object that has zero volume (such as a surface, a line, or a point embedded in 3D space), its boundary is the same as the object itself. If both input models are triangulated polyhedra, their boundaries are the sets of their boundary triangles. Proposition 3 can then be rewritten as the corollary below.
                        Corollary 1
                        
                           Suppose 
                           
                              A
                            
                           and 
                           
                              B
                            
                           are two triangulated polyhedra (singly connected and watertight), 
                           
                              
                                 
                                    F
                                 
                                 
                                    A
                                 
                              
                            
                           and 
                           
                              
                                 
                                    F
                                 
                                 
                                    B
                                 
                              
                            
                           are the sets of their respective boundary triangles (faces), and 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                            
                           and 
                           
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                            
                           are two arbitrary points of 
                           
                              A
                            
                           and 
                           
                              B
                            
                           respectively (either on the boundary or in the interior), then we have
                           
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             F
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        

To compute 
                        
                           
                              F
                           
                           
                              A
                           
                        
                        ⊕
                        
                           
                              F
                           
                           
                              B
                           
                        
                     , we need to compute the Minkowski sum of two triangles in 3D space. Generally the Minkowski sum of two triangles in 3D (Fig. 7
                     ) is a polyhedron with 9 boundary faces (4 triangles and 5 quadrilaterals). These boundary faces are determined by the relative position of the two triangles in 3D space. To further simplify the computation, we use the proposition below to reduce the Minkowski sum of two triangles to the union of Minkowski sums of triangles and edges, which are simply triangular prisms.
                        Proposition 4
                        
                           Suppose 
                           
                              A
                            
                           and 
                           
                              B
                            
                           are two triangles in  3D space, and 
                           
                              
                                 
                                    E
                                 
                                 
                                    A
                                 
                              
                            
                           and 
                           
                              
                                 
                                    E
                                 
                                 
                                    B
                                 
                              
                            
                           are the sets of their respective boundary edges, then
                           
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       (
                                       A
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       B
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             A
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        


                     
                        Proof
                        Let 
                              C
                            denote 
                              
                                 (
                                 A
                                 ⊕
                                 
                                    
                                       E
                                    
                                    
                                       B
                                    
                                 
                                 )
                              
                              ∪
                              
                                 (
                                 B
                                 ⊕
                                 
                                    
                                       E
                                    
                                    
                                       A
                                    
                                 
                                 )
                              
                           . By definition, 
                              A
                              ⊕
                              
                                 
                                    E
                                 
                                 
                                    B
                                 
                              
                              ⊆
                              A
                              ⊕
                              B
                            and 
                              B
                              ⊕
                              
                                 
                                    E
                                 
                                 
                                    A
                                 
                              
                              ⊆
                              A
                              ⊕
                              B
                           , so 
                              C
                              ⊆
                              A
                              ⊕
                              B
                           . It remains only to prove that 
                              A
                              ⊕
                              B
                              ⊆
                              C
                           .

If the two planes containing 
                              A
                            and 
                              B
                            respectively are not parallel, call their intersection line 
                              L
                            (see Fig. 8
                           ). If the two planes are parallel, take any line parallel to them as 
                              L
                           . For any 
                              c
                              ∈
                              A
                              ⊕
                              B
                            there must exist points 
                              a
                            and 
                              b
                              ,
                              a
                              ∈
                              A
                            and 
                              b
                              ∈
                              B
                           , such that 
                              c
                              =
                              a
                              +
                              b
                           . If at least one of 
                              a
                            and 
                              b
                            is on an edge of the two triangles, we have 
                              c
                              ∈
                              A
                              ⊕
                              
                                 
                                    E
                                 
                                 
                                    B
                                 
                              
                              ⊆
                              C
                            or 
                              c
                              ∈
                              B
                              ⊕
                              
                                 
                                    E
                                 
                                 
                                    A
                                 
                              
                              ⊆
                              C
                           . Otherwise, both 
                              a
                            and 
                              b
                            are in the interior of the triangles; call the intersections of the line, passing through 
                              a
                            (respectively, 
                              b
                           ) and parallel to 
                              L
                           , with the edges of 
                              A
                            (respectively, 
                              B
                           ) 
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                            (respectively, 
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                           ). We compare the lengths of the four line segments 
                              a
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              a
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              ,
                              b
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                           , and 
                              b
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                           . Without loss of generality, suppose 
                              a
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                            has the smallest length out of the four, then 
                              b
                              +
                              a
                              −
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ∈
                              B
                           . This gives us 
                              c
                              =
                              a
                              +
                              b
                              =
                              
                                 (
                                 b
                                 +
                                 a
                                 −
                                 
                                    
                                       a
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              +
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ∈
                              B
                              ⊕
                              
                                 
                                    E
                                 
                                 
                                    A
                                 
                              
                              ⊆
                              C
                           . Note that the above reasoning still holds if all four line segments have the same length or if 
                              A
                            and 
                              B
                            intersect.

Therefore we have 
                              ∀
                              c
                              ∈
                              A
                              ⊕
                              B
                              ,
                              c
                              ∈
                              C
                           ; i.e., 
                              A
                              ⊕
                              B
                              ⊆
                              C
                           .□

Based on Corollary 1 and Proposition 4, we can decompose the Minkowski sum of two polyhedra as the union of a series of prisms and a translation of both input polyhedra, as shown in the proposition below. 
                        Proposition 5
                        
                           Suppose 
                           
                              A
                            
                           and 
                           
                              B
                            
                           are two triangulated polyhedra, 
                           
                              
                                 
                                    F
                                 
                                 
                                    A
                                 
                              
                            
                           and 
                           
                              
                                 
                                    F
                                 
                                 
                                    B
                                 
                              
                            
                           are the sets of their respective boundary triangles, 
                           
                              
                                 
                                    E
                                 
                                 
                                    A
                                 
                              
                            
                           and 
                           
                              
                                 
                                    E
                                 
                                 
                                    B
                                 
                              
                            
                           are the sets of their respective edges, and 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                            
                           and 
                           
                              
                                 
                                    p
                                 
                                 
                                    b
                                 
                              
                            
                           are two arbitrary points of 
                           
                              A
                            
                           and 
                           
                              B
                            
                           respectively (either on the boundary or in the interior), then
                           
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             B
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             A
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        


                     
                        Proof
                        For any triangle 
                              
                                 
                                    f
                                 
                                 
                                    A
                                 
                              
                              ∈
                              
                                 
                                    F
                                 
                                 
                                    A
                                 
                              
                            and 
                              
                                 
                                    f
                                 
                                 
                                    B
                                 
                              
                              ∈
                              
                                 
                                    F
                                 
                                 
                                    B
                                 
                              
                           , suppose the edge sets of 
                              
                                 
                                    f
                                 
                                 
                                    A
                                 
                              
                            and 
                              
                                 
                                    f
                                 
                                 
                                    B
                                 
                              
                            are 
                              
                                 
                                    E
                                 
                                 
                                    
                                       
                                          f
                                       
                                       
                                          A
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    E
                                 
                                 
                                    
                                       
                                          f
                                       
                                       
                                          B
                                       
                                    
                                 
                              
                            respectively. From Proposition 4, 
                              
                                 
                                    f
                                 
                                 
                                    A
                                 
                              
                              ⊕
                              
                                 
                                    f
                                 
                                 
                                    B
                                 
                              
                              =
                              
                                 (
                                 
                                    
                                       f
                                    
                                    
                                       A
                                    
                                 
                                 ⊕
                                 
                                    
                                       E
                                    
                                    
                                       
                                          
                                             f
                                          
                                          
                                             B
                                          
                                       
                                    
                                 
                                 )
                              
                              ∪
                              
                                 (
                                 
                                    
                                       f
                                    
                                    
                                       B
                                    
                                 
                                 ⊕
                                 
                                    
                                       E
                                    
                                    
                                       
                                          
                                             f
                                          
                                          
                                             A
                                          
                                       
                                    
                                 
                                 )
                              
                           . Then from Proposition 1 (distributivity), we have 
                              
                                 
                                    
                                       
                                          F
                                       
                                       
                                          A
                                       
                                    
                                    ⊕
                                    
                                       
                                          F
                                       
                                       
                                          B
                                       
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             ∪
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   A
                                                
                                             
                                             ∈
                                             
                                                
                                                   F
                                                
                                                
                                                   A
                                                
                                             
                                          
                                       
                                       
                                          {
                                          
                                             
                                                f
                                             
                                             
                                                A
                                             
                                          
                                          }
                                       
                                       )
                                    
                                    ⊕
                                    
                                       (
                                       
                                          
                                             ∪
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   B
                                                
                                             
                                             ∈
                                             
                                                
                                                   F
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                       
                                          {
                                          
                                             
                                                f
                                             
                                             
                                                B
                                             
                                          
                                          }
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          ∪
                                       
                                       
                                          
                                             
                                                f
                                             
                                             
                                                A
                                             
                                          
                                          ∈
                                          
                                             
                                                F
                                             
                                             
                                                A
                                             
                                          
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                B
                                             
                                          
                                          ∈
                                          
                                             
                                                F
                                             
                                             
                                                B
                                             
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             f
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             f
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          ∪
                                       
                                       
                                          
                                             
                                                f
                                             
                                             
                                                A
                                             
                                          
                                          ∈
                                          
                                             
                                                F
                                             
                                             
                                                A
                                             
                                          
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                B
                                             
                                          
                                          ∈
                                          
                                             
                                                F
                                             
                                             
                                                B
                                             
                                          
                                       
                                    
                                    
                                       (
                                       
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                A
                                             
                                          
                                          ⊕
                                          
                                             
                                                E
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      B
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       ∪
                                       
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                B
                                             
                                          
                                          ⊕
                                          
                                             
                                                E
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      A
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             ∪
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   A
                                                
                                             
                                             ∈
                                             
                                                
                                                   F
                                                
                                                
                                                   A
                                                
                                             
                                             ,
                                             
                                                
                                                   f
                                                
                                                
                                                   B
                                                
                                             
                                             ∈
                                             
                                                
                                                   F
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       
                                          
                                             ∪
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   A
                                                
                                             
                                             ∈
                                             
                                                
                                                   F
                                                
                                                
                                                   A
                                                
                                             
                                             ,
                                             
                                                
                                                   f
                                                
                                                
                                                   B
                                                
                                             
                                             ∈
                                             
                                                
                                                   F
                                                
                                                
                                                   B
                                                
                                             
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             B
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   A
                                                
                                             
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          (
                                          
                                             
                                                ∪
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      A
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      F
                                                   
                                                   
                                                      A
                                                   
                                                
                                             
                                          
                                          
                                             {
                                             
                                                
                                                   f
                                                
                                                
                                                   A
                                                
                                             
                                             }
                                          
                                          )
                                       
                                       ⊕
                                       
                                          (
                                          
                                             
                                                ∪
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      B
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      F
                                                   
                                                   
                                                      B
                                                   
                                                
                                             
                                          
                                          
                                             
                                                E
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      B
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       
                                          (
                                          
                                             
                                                ∪
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      B
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      F
                                                   
                                                   
                                                      B
                                                   
                                                
                                             
                                          
                                          
                                             {
                                             
                                                
                                                   f
                                                
                                                
                                                   B
                                                
                                             
                                             }
                                          
                                          )
                                       
                                       ⊕
                                       
                                          (
                                          
                                             
                                                ∪
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      A
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      F
                                                   
                                                   
                                                      A
                                                   
                                                
                                             
                                          
                                          
                                             
                                                E
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      A
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             B
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             A
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        

Now applying Corollary 1, 
                              
                                 
                                    A
                                    ⊕
                                    B
                                    =
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             F
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             A
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             B
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       
                                          
                                             F
                                          
                                          
                                             B
                                          
                                       
                                       ⊕
                                       
                                          
                                             E
                                          
                                          
                                             A
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       A
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             b
                                          
                                       
                                       )
                                    
                                    ∪
                                    
                                       (
                                       B
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                           □

From Proposition 5, we know that the Minkowski sum of two polyhedra can be decomposed as the union of the following four components: 
                        
                           –
                           
                              
                                 
                                    
                                       F
                                    
                                    
                                       A
                                    
                                 
                                 ⊕
                                 
                                    
                                       E
                                    
                                    
                                       B
                                    
                                 
                              , which is a series of prisms formed by sweeping each triangle of 
                                 A
                               along each edge of 
                                 B
                              ;


                              
                                 
                                    
                                       F
                                    
                                    
                                       B
                                    
                                 
                                 ⊕
                                 
                                    
                                       E
                                    
                                    
                                       A
                                    
                                 
                              , which is a series of prisms formed by sweeping each triangle of 
                                 B
                               along each edge of 
                                 A
                              ;


                              
                                 A
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       b
                                    
                                 
                              , which is a translation of 
                                 A
                               by a vector defined by any point of 
                                 B
                              ;


                              
                                 B
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       a
                                    
                                 
                              , which is a translation of 
                                 B
                               by a vector defined by any point of 
                                 A
                              .

Each one of these four components can be computed easily. To compute Minkowski sums using Proposition 5, we need to find a way to compute their union efficiently, which will be described in the next section.

Suppose object 
                        A
                      has 
                        
                           |
                           
                              
                                 F
                              
                              
                                 A
                              
                           
                           |
                        
                      triangles and 
                        
                           |
                           
                              
                                 E
                              
                              
                                 A
                              
                           
                           |
                        
                      edges, and object 
                        B
                      has 
                        
                           |
                           
                              
                                 F
                              
                              
                                 B
                              
                           
                           |
                        
                      triangles and 
                        
                           |
                           
                              
                                 E
                              
                              
                                 B
                              
                           
                           |
                        
                      edges, then in total we have 
                        
                           |
                           
                              
                                 F
                              
                              
                                 A
                              
                           
                           |
                        
                        ⋅
                        
                           |
                           
                              
                                 E
                              
                              
                                 B
                              
                           
                           |
                        
                        +
                        
                           |
                           
                              
                                 F
                              
                              
                                 B
                              
                           
                           |
                        
                        ⋅
                        
                           |
                           
                              
                                 E
                              
                              
                                 A
                              
                           
                           |
                        
                      prisms for 
                        
                           (
                           
                              
                                 F
                              
                              
                                 A
                              
                           
                           ⊕
                           
                              
                                 E
                              
                              
                                 B
                              
                           
                           )
                        
                        ∪
                        
                           (
                           
                              
                                 F
                              
                              
                                 B
                              
                           
                           ⊕
                           
                              
                                 E
                              
                              
                                 A
                              
                           
                           )
                        
                     . Including the two translated objects 
                        A
                        +
                        
                           
                              p
                           
                           
                              b
                           
                        
                      and 
                        B
                        +
                        
                           
                              p
                           
                           
                              a
                           
                        
                     , we need to compute the union of 
                        
                           |
                           
                              
                                 F
                              
                              
                                 A
                              
                           
                           |
                        
                        ⋅
                        
                           |
                           
                              
                                 E
                              
                              
                                 B
                              
                           
                           |
                        
                        +
                        
                           |
                           
                              
                                 F
                              
                              
                                 B
                              
                           
                           |
                        
                        ⋅
                        
                           |
                           
                              
                                 E
                              
                              
                                 A
                              
                           
                           |
                        
                        +
                        2
                      polyhedral objects in order to compute 
                        A
                        ⊕
                        B
                      using Proposition 5. The combinatorial complexity of the union can be as high as 
                        O
                        
                           
                              
                                 (
                                 
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          A
                                       
                                    
                                    |
                                 
                                 ⋅
                                 
                                    |
                                    
                                       
                                          E
                                       
                                       
                                          B
                                       
                                    
                                    |
                                 
                                 +
                                 
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          B
                                       
                                    
                                    |
                                 
                                 ⋅
                                 
                                    |
                                    
                                       
                                          E
                                       
                                       
                                          A
                                       
                                    
                                    |
                                 
                                 +
                                 2
                                 )
                              
                           
                           
                              3
                           
                        
                        [8], which is of the same magnitude as the worst-case complexity 
                        O
                        
                           (
                           
                              
                                 
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          A
                                       
                                    
                                    |
                                 
                              
                              
                                 3
                              
                           
                           
                              
                                 
                                    |
                                    
                                       
                                          F
                                       
                                       
                                          B
                                       
                                    
                                    |
                                 
                              
                              
                                 3
                              
                           
                           )
                        
                      of the Minkowski sum 
                        A
                        ⊕
                        B
                     . Even if both 
                        A
                      and 
                        B
                      have just thousands of triangles, the union consists of millions of objects, and in the worst case its number of facets can be on the order of 1018. Computing an exact union of such a large number of polyhedra is not practical. Exact boundary evaluation of a union of this size is slow and prone to robustness problems.

Instead of computing the union exactly, we propose approximating it by using GPU-based voxelization techniques. In a voxelized representation, each object is represented by a 3D grid 
                        
                           
                              M
                           
                           
                              i
                              j
                           
                        
                      (
                        1
                        ≤
                        i
                        ,
                        j
                        ≤
                        n
                     , where 
                        n
                      is the resolution) that corresponds to the 3D space occupied by a bounding box enclosing the object. Each voxel 
                        
                           
                              M
                           
                           
                              i
                              j
                           
                        
                      is set to either 1 or 0 according to whether it is located inside or outside of the object. In a conservative voxelization  [35], as long as the voxel intersects with the object, it is set to 1 (Fig. 9
                     (a)); in other voxelizations, the center of the voxel is used as a representative point to determine whether the voxel is inside or outside of the object (Fig. 9(b)), which is also the behavior of standard rasterization algorithms required by 3D graphics APIs such as OpenGL and Direct3D. In our approach for voxelizing Minkowski sums, we follow the latter convention.

Voxelization algorithms can be classified into surface voxelization (only the boundary is voxelized) and solid voxelization (the whole interior is voxelized). A surface voxelization can be created from a solid voxelization by simply checking if a voxel has any outside neighbors, as in  [17]. A solid voxelization can also be created from a surface voxelization by using the parity check rule (explained below), if a single watertight object is being voxelized  [36]. In the current work we directly create a solid voxelization for the Minkowski sum, since our goal is to avoid the computational complexity involved in evaluating the complete boundary of the Minkowski sum.

Most solid voxelization algorithms are based on parity checking and work for a single watertight object  [36–40]. The parity check is based on the principal that a ray shooting from a point inside (or outside) the object will have an odd (or even) number of intersections with the object boundary respectively, as shown in Fig. 10
                     (a). To perform the parity check using OpenGL, we can set the near clipping plane to the current slice (here we define a slice as the intersection of the object with a plane; the parity check for all the pixels on the same slice will be performed together) and the far clipping plane to be infinity, and then render the object. Only the portion of the object that is between the near and far clipping planes is rendered. The parity flag for each pixel is initialized to be zero. Then it is toggled between one and zero for each rendered fragment at its position (these fragments can be processed in arbitrary order). After the rendering is complete, any pixel inside the object will have a flag of one, and any pixel outside will have a flag of zero. Flag toggling can be implemented using either XOR operations with the color buffer or GL_INVERT operations with the stencil buffer.

The parity check, however, does not work for the union of watertight objects. As shown in Fig. 10(b), to voxelize the union of a rectangle and a triangle, the parity flag of the indicated point is zero after rendering, but in fact it is inside the union. We need a slightly more complex check to correctly classify inside and outside voxels for the union of objects.

The technique used in stencil shadow volumes  [41,42] has been applied to solid voxelization of individual watertight objects as well as their union  [43,44]. It strengthens the above parity check by taking into consideration the orientation of boundary surfaces. Instead of simply toggling the flag between one and zero for each rendered fragment, they increase it by one for back faces and decrease it by one for front faces, as shown in Fig. 11
                     . After the rendering is complete, any pixel inside the union will have a non-zero stencil value, while any pixel outside the union will have a zero stencil value. The increments and decrements can be implemented using the two-sided stencil test provided by OpenGL extension GL_EXT_stencil_two_side. Note that the increments and decrements are performed with wrapping enabled to avoid saturation (otherwise the stencil value will be clamped at the maximum value and zero); thus for an 8-bit stencil buffer, increasing 255 by one will return 0 and decreasing 0 by one will return 255.

The final voxelization is stored in a 3D texture, where a 3D texture of size 
                        X
                        ×
                        Y
                        ×
                        Z
                      can be seen as 
                        Z
                      images of size 
                        X
                        ×
                        Y
                      stacked together, each one of which can be independently set as the draw buffer to store the color of currently rendered pixels. Each image is a 2D array of texels (texture elements), and each texel has four color channels (RGBA), with each color channel using eight bits. Thus each image has 32 slices, with each bit representing the plane of a specific slice. Each voxel is represented by a single bit, thus for a voxelization with a resolution of 512×512×512, the 3D texture should have a size of 512×512×16 (16=512/32), which uses only 16 MB of video memory.

We map bits of the 3D texture to the voxels of the voxelization using color encoding  [37]. Suppose the resolution of the voxelization is 
                        N
                        ×
                        N
                        ×
                        N
                     , the index of a voxel is (
                        
                           
                              x
                           
                           
                              v
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              v
                           
                        
                        ,
                        
                           
                              z
                           
                           
                              v
                           
                        
                     ) (ranging from 0 to 
                        N
                        −
                        1
                     ), and it corresponds to the 
                        
                           
                              n
                           
                           
                              
                                 bit
                              
                           
                        
                      bit of the texel with index (
                        
                           
                              x
                           
                           
                              t
                           
                        
                        ,
                        
                           
                              y
                           
                           
                              t
                           
                        
                        ,
                        
                           
                              z
                           
                           
                              t
                           
                        
                     ) in the 3D texture. Then the following relationships hold: 
                        
                           (9)
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       v
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       y
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       y
                                    
                                    
                                       v
                                    
                                 
                              
                           
                           
                              
                                 
                                    
                                       z
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    ⌊
                                    
                                       
                                          z
                                       
                                       
                                          v
                                       
                                    
                                    /
                                    32
                                    ⌋
                                 
                              
                           
                           
                              
                                 
                                    
                                       n
                                    
                                    
                                       
                                          bit
                                       
                                    
                                 
                                 =
                                 
                                    
                                       z
                                    
                                    
                                       v
                                    
                                 
                                 −
                                 32
                                 
                                    
                                       z
                                    
                                    
                                       t
                                    
                                 
                                 .
                              
                           
                        
                     
                     Fig. 12
                      shows a 2D example of color encoding. For the purpose of illustration, we assume each texel has a bit depth of eight, though in reality it is 32.

The overall algorithm for computing a solid voxelization of 
                        A
                        ⊕
                        B
                      for closed watertight objects 
                        A
                      and 
                        B
                      is given in Algorithm 1 and explained below. Suppose the resolution of voxelization is 
                        N
                        ×
                        N
                        ×
                        N
                     . We first need to create a 3D texture of size 
                        N
                        ×
                        N
                        ×
                        
                           (
                           N
                           /
                           32
                           )
                        
                      with a bit depth of 32. We also create a framebuffer object and a stencil buffer, and attach the stencil buffer to the framebuffer object. Next we create a display list for all the triangular prisms and two translated objects according to Proposition 5. The bounding box of the Minkowski sum, which can be computed easily by adding up the minimum and maximum points of the two input models along the 
                        x
                        ,
                        y
                     , and 
                        z
                      directions, is divided into 
                        N
                      slices along the 
                        z
                      direction.

Now we perform the voxelization slice by slice. For each slice, we first need to set the near clipping plane at the current slice and the far clipping plane slightly beyond the maximum 
                        z
                      of the bounding box. We also need to set the two-sided stencil operation to be increasing for back faces and decreasing for front faces. We disable the draw buffer for now since we do not need to render the display list to a color buffer; instead we only need to fill the stencil buffer. Now we call the display list to render the prisms and the two translated objects. Note that only the portion between the near and far clipping planes is rendered. After rendering, the stencil buffer is filled with zeros and non-zeros, indicating whether the corresponding voxel is outside or inside the Minkowski sum.

Now we can use the stencil buffer to find corresponding bits in the 3D texture. To do this, we first need to attach the current image of the 3D texture (we have 
                        N
                        /
                        32
                      images in total, and each image corresponds to 32 slices) as the draw buffer. If it is the 
                        i
                     th slice (
                        0
                        ≤
                        i
                        ≤
                        N
                        −
                        1
                     ), we attach the 
                        
                           ⌊
                           i
                           /
                           32
                           ⌋
                        
                     th image, so we only need to change the attached image every 32 slices. We also need to compute an RGBA color in which only the bit corresponding to the current slice is set to one and all the other bits are zeros. In fact we create a table in advance that includes all the 32 possible RGBA color values 
                        
                           (
                           0
                           
                              x
                           
                           00000001
                           ,
                           0
                           
                              x
                           
                           00000002
                           ,
                           0
                           
                              x
                           
                           00000004
                           ,
                           0
                           
                              x
                           
                           00000008
                           ,
                           0
                           
                              x
                           
                           00000010
                           ,
                           …
                           ,
                           0
                           
                              x
                           
                           40000000
                           ,
                             and  
                           0
                           
                              x
                           
                           80000000
                           )
                        
                     , and look up the correct color value in the table instead of computing it on the CPU. For the 
                        i
                     th slice, we use the 
                        
                           (
                           i
                           −
                           32
                           
                              ⌊
                              i
                              /
                              32
                              ⌋
                           
                           )
                        
                     th color value in the table. The logical pixel operation is set to OR to avoid overwriting previously computed bits. Since we only need to write to the pixels whose stencil value is non-zero, we set the stencil test to pass if the stencil value is non-zero. Now we render a quadrilateral that is slightly larger than the 
                        x
                        y
                      projection of the bounding box to set the bits on the current slice.

We repeat this process for all the slices. Finally the 3D texture will contain all the information of the solid voxelization.


                     
                        
                           
                        
                     
                  

The main drawback of the above algorithm is the large number of prisms to be rendered. If both 
                        A
                      and 
                        B
                      have thousands of triangles, there will be millions of prisms. However, we can show that we do not need to render all the prisms for each slice. If a prism does not intersect with the current slice, it is either entirely between the near and far clipping planes (prism 
                        C
                      in Fig. 13
                     ), which does not change the final stencil value, or entirely in front of the near clipping plane (prism 
                        B
                      in Fig. 13), which is not rendered at all. Therefore for each slice, instead of rendering all the prisms, we only need to render those prisms with which the current slice intersects. Especially for complex polyhedra generated by tessellating smooth models, their boundary triangles are usually very small. The prisms formed by these triangles are therefore small compared to the Minkowski sum, and they usually intersect with only a small number of slices. Then by first computing a list of prisms intersecting with each slice, we can reduce the number of prisms rendered for each slice and therefore the time needed for rendering. It is straightforward to check whether a prism intersects with a slice or not—since the slice is perpendicular with the 
                        z
                      axis, we just need to check whether its 
                        z
                      value is between the minimum and maximum 
                        z
                      coordinates of the prism.

On the other hand, finding intersecting prisms for each slice also incurs some overhead. If we use just a single display list for all the slices, we only need to create and evaluate (i.e., process the input draw commands to generate final pixel information) the display list once, and then reuse it repeatedly without re-evaluating the data over and over again. But if we render different sets of prisms for each slice, we lose the benefits from using a display list; i.e., we have to re-evaluate the data for each slice.

Therefore as a tradeoff, we group all the slices into several layers, each layer including a fixed number of slices. For each layer we compute a list of prisms intersecting with it, as shown in Fig. 14
                     . We render the same list of prisms for all the slices in one layer, so they can reuse a single display list.

Two factors need to be considered for choosing an appropriate value for the number of layers—the number and the size of display lists. If the number of layers is small, the generated display lists for each layer will be large; if the number of layers is large, the display lists will have smaller sizes, but at the same time we need to create more display lists. To determine an optimal value for the number of layers, we compute the voxelization of two Minkowski sums, representing two different types of input, using varying numbers of layers and compare the running timing. The first example (dragon 
                        ⊕
                      ball, Fig. 15
                     ) uses two polyhedra generated by tessellating smooth models, and the second (grate1 
                        ⊕
                      grate2, Fig. 16
                     ) uses two rectilinear models. The timings of both examples show that for both resolutions of 256×256×256 and 512×512×512, using 16 layers has the best performance. Compared to using a single display list for all the slices (i.e., the number of layers is one), using 16 layers has a 3× to 6× speedup.

@&#RESULTS AND DISCUSSION@&#

In this section, we present timings on additional models. The test models we use come from Lien’s website  [45] and were also used in  [15]. The timing was performed on an NVIDIA Quadro 6000 GPU with 6 GB video memory and an Intel Core 2 Quad CPU at 2.66 GHz with 4 GB RAM. The program runs on CUDA driver 3.2 and 64-bit Windows 7. For all the tests we divide the slices into 16 layers.

The timings of the voxelization algorithm are given in Table 1
                     . We also include the timings reported by Lien  [15] for comparison (performed on two Intel Core 2 CPUs at 2.13 GHz with 4 GB RAM). Note that Lien’s approach uses a convolution-based approach and computes an exact boundary representation, while ours computes an approximate voxelized representation of high resolution.

From Table 1, we can see that the performance of our algorithm is mainly dominated by the sizes (numbers of triangles) of the input polyhedra, while the performance of Lien’s approach is determined by both the sizes and the shape complexity of the input models. This is especially obvious for the “grate1 
                        ⊕
                      grate2” case, which is a worst case example for concave Minkowski sum computation with 
                        O
                        
                           (
                           
                              
                                 m
                              
                              
                                 3
                              
                           
                           
                              
                                 n
                              
                              
                                 3
                              
                           
                           )
                        
                      faces  [7]. Even though the two input polyhedra do not have large numbers of triangles compared to the other examples, Lien’s approach takes 318 s to compute their Minkowski sum boundary, while our approach needs just 10 s to compute a 512×512×512 voxelization. A contrasting example is the “clutch 
                        ⊕
                      ball” case. Since one of the input models is convex, Lien’s approach can take advantage of the convexity so that it takes less than 3 s to compute the Minkowski sum, but our algorithm takes around 20 s to compute a 256×256×256 voxelization.

Overall, the performance of our algorithm does not improve significantly on prior results, which has two explanations. The first is that a large number of prisms need to be rendered even if the input models have a moderate size (thousands of triangles). For most of the examples given in Table 1, we need to render millions of prisms. The other is that our algorithm does not consider the specific shapes of the input models. If one of the input models is convex, its convexity can be used to simplify the computation of Minkowski sums  [27,7,15], but it is not utilized in this voxelization algorithm. (This explains why our algorithm takes much longer than Lien’s to compute “clutch 
                        ⊕
                      ball” in Table 1.) Another limitation of this approach, similar to several convolution-based algorithms  [15,19,20], is that the input models must be closed watertight meshes, which is required by Proposition 3.

An advantage of the voxelization algorithm described in this paper is ease of implementation. It does not require the complex 3D Boolean operations that are usually involved in existing B-rep based algorithms—the only necessary 3D computation is computing the triangular prism formed by a triangle and an edge, which is straightforward.

@&#ACKNOWLEDGMENTS@&#

We would like to thank NVIDIA for providing us with hardware, and the anonymous referees for their feedback. Test models are from Jyh-Ming Lien’s website  [45]; some are reconstructed using Tao Ju’s Polymender to eliminate nonmanifold features  [46]. The authors were supported in part by the National Science Foundation under CAREER Grant No. 0547675, Grant No. 0621198, and Grant No. 1331352.

@&#REFERENCES@&#

