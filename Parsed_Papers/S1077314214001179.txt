@&#MAIN-TITLE@&#Local and global uncertainty in binary tomographic reconstruction

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           In binary tomography the projection data might be insufficient for an accurate reconstruction.


                        
                        
                           
                           We proposed methods to measure the reliability of the pixels of the reconstructions.


                        
                        
                           
                           We described a method for measuring the global uncertainty of the reconstructed image.


                        
                        
                           
                           We gave additional validation of the results.


                        
                        
                           
                           We proposed some possible applications of the given methods as well.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Binary tomography

Reconstruction

Optimization

Uncertainty

DART

Non-destructive testing

@&#ABSTRACT@&#


               
               
                  In binary tomography the goal is to reconstruct the inner structure of homogeneous objects from their projections. This is usually required from a low number of projections, which are also likely to be affected by noise and measurement errors. In general, the distorted and incomplete projection data holds insufficient information for the correct reconstruction of the original object.
                  In this paper, we describe two methods for approximating the local uncertainty of the reconstructions, i.e., identifying how the information stored in the projections determine each part of the reconstructed image. These methods can measure the uncertainty of the reconstruction without any knowledge from the original object itself. Moreover, we provide a global uncertainty measure that can assess the information content of a projection set and predict the error to be expected in the reconstruction of a homogeneous object. We also give an experimental evaluation of our proposed methods, mention some of their possible applications, and describe how the uncertainty measure can be used to improve the performance of the DART reconstruction algorithm.
               
            

@&#INTRODUCTION@&#


                     Tomography 
                     [11,14] is a collection of imaging and image processing techniques for discovering the inner structure of objects from their projections. In transmission tomography, projections are gathered by exposing the object of study to some kind of electromagnetic or particle radiation, and measuring the loss of energy of the beams passing through it. Provided that sufficient measured data is available, one can determine the attenuation coefficient at each point of the object.

In discrete tomography 
                     [12,13] we assume that the object to be reconstructed consists of only few different materials with known attenuation coefficients. Moreover, in the special case called binary tomography our aim is to detect the presence or absence of one single material at each position. With this prior information, it is possible to accurately reconstruct objects from only few (usually not more than 10–12) projections.

However, in practical applications, limitations on the number of projections (as acquiring them can have a high cost, or cause unwanted damaging effects on the object of study) can make it impossible to gather a sufficient amount of projection data, even for binary tomography. Furthermore, even if we have an adequate projection set, we can find ourselves against computational problems, since the general case of the binary reconstruction problem is proved to be NP-hard, if the number of projections is more than two [10]. Finally, projections are always affected by some type of stochastic noise, that should be considered in the reconstruction [1,2,6].

Because of the problems mentioned above, the evaluation of the projection data can be beneficial in practical applications of binary tomography, and new algorithms are developed for this purpose. For example, in [3], authors gave an upper bound on the variability of binary reconstructions from a given projection set, that determines a bound for the expected accuracy of the reconstructed results, too.

In this paper, we provide two methods to investigate the local uncertainty in binary reconstructions. They can measure whether a given projection set provides sufficient information for determining the pixel values of the binary image representing the object of study. We analyse the performance of these measurement techniques in a set of experimental tests. We also derive a formula to summarize the local uncertainties into a global measure, that describes the overall information content of a projection set. Finally, we give some possible applications of our proposed methods.

This work is based on our previous contribution [21] which was significantly extended here by the global uncertainty measurement of the projection sets, additional validation of the results, and the description of possible applications.

The structure of the paper is the following. In Section 2, we give a brief explanation of the reconstruction problem and its algebraic formulation, and describe the foundations of the uncertainty problem. Then, in Section 3, we describe the concept of non-discrete reconstruction and the entropy map, which we will use for approximating the uncertainty of reconstructions. We also provide two methods for calculating these measures. In Section 4, we outline a test environment for evaluating the uncertainty measures and present experimental results. Then, in Section 5, we propose a formula that summarizes the local entropy map into a global measure, that we call cumulated entropy, and also give an experimental validation of this measure. In Section 6, we briefly describe how the noise on the projection values affect the uncertainty measure. In Section 7, we mention some possible applications of our methods in non-destructive testing of objects, adaptive projection acquisition, and improving the DART algorithm [5]. Finally, Section 8 is for the conclusion.

We present our results for the two-dimensional case of binary tomography. The described methods can be extended to higher dimensions in a straightforward way. We use the algebraic formulation of binary tomography (see, e.g., chapter 7 of [14]), and assume that the object to be reconstructed is represented in a two dimensional image. Without the loss of generality, we assume that the image is of size 
                        
                           n
                           ×
                           n
                        
                      (as any rectangular image can be padded to a square shape), and assume that the projection values are given by a finite number of projection rays which interact with the reconstructed pixels. With these assumptions the noiseless binary reconstruction problem can be written in a form of a linear equation system
                        
                           (1)
                           
                              Ax
                              =
                              b
                              ,
                              
                              x
                              ∈
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                    
                                       
                                          n
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              ,
                           
                        
                     where
                        
                           •
                           
                              
                                 
                                    x
                                 
                               is the vector of all 
                                 
                                    
                                       
                                          n
                                       
                                       
                                          2
                                       
                                    
                                 
                               unknown image pixels,


                              
                                 
                                    b
                                 
                               is the vector of all m projection values,


                              
                                 
                                    A
                                 
                               is a projection coefficient matrix of size 
                                 
                                    m
                                    ×
                                    
                                       
                                          n
                                       
                                       
                                          2
                                       
                                    
                                 
                              , that describes the projection geometry by all 
                                 
                                    
                                       
                                          a
                                       
                                       
                                          ij
                                       
                                    
                                 
                               elements representing the intersection between the i-th projection line and the j-th pixel.

With this formulation, the noiseless reconstruction problem gains a versatile description, since any projection geometry (e.g. the well-known parallel beam or fan beam, or even more complex ones) can be applied, as long as the relation between the projections and the image pixels is linear, i.e., a corresponding 
                        
                           A
                        
                      projection coefficient matrix exists.

If there is a reconstruction satisfying the projections, then one can obtain a solution to the noiseless reconstruction problem by solving (1). Although this model is correct in the mathematical sense, it is hardly applicable in practice. The projection data might be distorted by measurement errors causing the equation system to be inconsistent. In this case, no exact reconstruction exists, and only approximate solutions of (1) can be found. A common way for coping with this problem is to minimize
                        
                           (2)
                           
                              ‖
                              Ax
                              -
                              b
                              
                                 
                                    ‖
                                 
                                 
                                    2
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                              x
                              ∈
                              
                                 
                                    [
                                    0
                                    ,
                                    1
                                    ]
                                 
                                 
                                    n
                                 
                              
                              ,
                           
                        
                     that is equivalent to finding the solution of (1) in the noiseless case, while in the noisy case it provides a reconstruction which satisfies the projections the best – in an Euclidean sense.

A further problem could be if we cannot gain enough projections and the system of equations in (1) becomes underdetermined, meaning that many (severely different) reconstructions can satisfy the projections. This causes uncertainty in the reconstruction, where the projections do not determine the exact values of the pixels. In a practical application this also means that we cannot decide if a reconstructed image shows the real structure of the object of study or we got a false result due to the incomplete data. For such cases it would be beneficial to have methods for evaluating the reliability of the projection data.

In this section, we define the uncertainty for the projections in binary tomography assuming that all the solutions are known. We demonstrate our definition in some well-defined cases, then we give two methods to approximate the uncertainty without determining the set of all solutions. For these methods, we also present the results on the well-defined cases.

Assume that the set of binary solutions of the system 
                           
                              Ax
                              =
                              b
                           
                         is not empty and can be determined for the given vector 
                           
                              b
                           
                         of projections. The probability of 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                           
                         can be written as
                           
                              (3)
                              
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             b
                                          
                                          
                                             A
                                          
                                       
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       =
                                       1
                                       )
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             b
                                          
                                          
                                             A
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    N
                                 
                                 
                                    b
                                 
                                 
                                    A
                                 
                              
                           
                         denotes the number of all binary solutions, and 
                           
                              
                                 
                                    N
                                 
                                 
                                    b
                                 
                                 
                                    A
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                              )
                           
                         denotes the number of binary solutions with 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                           
                         for the given reconstruction problem determined by 
                           
                              A
                           
                         and 
                           
                              b
                           
                        .

Clearly, if 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         is close to 1 then the 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         pixel is more likely to take value 1 than 0. The probability of 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                           
                         denoted by 
                           
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         can be defined in the same way. By the definition of the entropy using 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         we can calculate the information content of 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         as
                           
                              (4)
                              
                                 H
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 -
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       log
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 +
                                 (
                                 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 
                                    
                                       log
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 )
                                 .
                              
                           
                        The value 
                           
                              H
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         shows us, how much the given pixel is determined or how uncertain it is (if 
                           
                              H
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              )
                              =
                              0
                           
                         then the pixel is fully determined by the projections, and pixels with an 
                           
                              H
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              )
                              =
                              1
                           
                         value are maximally uncertain). The image composed of these entropy values for all 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         is called the entropy map.

In general, there may be exponentially many possible reconstructions satisfying the projections. Furthermore, it could be also NP-hard to find even just one possible reconstruction. Thus, it is often not feasible to compute the entropy maps. On the other hand, in some special cases, the entropy maps can be precisely determined. In Fig. 1
                         we gave three special phantoms whose exact entropy maps can be determined if only the horizontal and vertical projections are used.

In case of the phantom of Fig. 1a all the horizontal and vertical projection values are equal to one. It can be easily seen that the total number of possible reconstructions is 
                           
                              n
                              !
                           
                        . Furthermore, if we choose one pixel and fix its value to 1, then all other pixels in the row and column of the chosen pixel will be equally 0. By deleting this row and column, we can reduce the problem to reconstructing a binary matrix of size 
                           
                              (
                              n
                              -
                              1
                              )
                              ×
                              (
                              n
                              -
                              1
                              )
                           
                        , having all horizontal and vertical projection values equal to 1. This problem has 
                           
                              (
                              n
                              -
                              1
                              )
                              !
                           
                         solutions. Hence the probability of one pixel taking a 1 value in a reconstruction is 
                           
                              
                                 
                                    (
                                    n
                                    -
                                    1
                                    )
                                    !
                                 
                                 
                                    n
                                    !
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    n
                                 
                              
                           
                        . Thus, the entropy map is homogeneous with
                           
                              (5)
                              
                                 H
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 -
                                 
                                    
                                       
                                          
                                             
                                                1
                                             
                                             
                                                n
                                             
                                          
                                          ·
                                          
                                             
                                                log
                                             
                                             
                                                2
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   1
                                                   -
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             
                                          
                                          ·
                                          
                                             
                                                log
                                             
                                             
                                                2
                                             
                                          
                                          
                                             
                                                
                                                   1
                                                   -
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The second phantom in Fig. 1b shows the image of a square, that is much simpler to reconstruct. From the horizontal and vertical projections, this object can be uniquely reconstructed, hence all the pixels in its entropy map are equal to zero. The third special phantom, shown in Fig. 1c, is similar to the square, but its border holds four extra object points, which yield two switching components. As a consequence, there are four possible reconstructions satisfying the projections, and on the uncertainty maps all pixels have a zero value, except the eight pixels having an uncertainty of one. The uncertainty map of this image from two projections is shown in Fig. 2
                        .

As mentioned above, the determination of an exact entropy map by taking all the reconstructions into account is usually practically impossible, hence – instead of using (4) – the entropy map should be approximated. The idea of our uncertainty approximation is based on finding so-called non-discrete reconstructions for the given set of projections, and calculating the entropy of each pixel in these reconstructions.

The concept behind the non-discrete reconstruction is based on the fact that we have two goals in binary reconstructions. On one hand, we want to find results which satisfy the projections. On the other hand, we try to find binary solutions. The non-discrete reconstruction will (approximately) satisfy the projections, but will also contain non-binary pixel values to represent how easy it is to move the pixel values from the binary domain. By this, as we will see, one can measure the vagueness of the pixel values and determine their uncertainty.

In the ideal (noiseless) case, one possible way to get non-discrete reconstructions is to solve the following minimization problem
                              
                                 (6)
                                 
                                    
                                       
                                          
                                          
                                             
                                                Minimize
                                                :
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            x
                                                            -
                                                            
                                                               
                                                                  1
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            e
                                                         
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ,
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                Subject to
                                                :
                                                
                                                Ax
                                                =
                                                b
                                                ,
                                                
                                                and
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                
                                                
                                                
                                                x
                                                ∈
                                                
                                                   
                                                      [
                                                      0
                                                      ,
                                                      1
                                                      ]
                                                   
                                                   
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 e
                              
                            stands for a vector with all 
                              
                                 
                                    
                                       n
                                    
                                    
                                       2
                                    
                                 
                              
                            positions having value 1. If the projection set is inconsistent, then the condition 
                              
                                 Ax
                                 =
                                 b
                              
                            in (6) should be exchanged to minimizing 
                              
                                 ‖
                                 Ax
                                 -
                                 b
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                              
                           . This approach examines the reconstruction that is as far from the binary domain as possible, and by this, measures how easy it is to move the pixel values from the binary domain.

We approximated a solution of (6) with a bounded version of the Simultaneous Iterative Reconstruction Technique (SIRT) [11,14]. SIRT is an iterative process where we start out from a given initial image and approximate the correct reconstruction by iteratively subtracting the back-projected error of the intermediate state from itself. In general, this method gives a continuous reconstruction with real pixel values and produces an image which is the closest one (in the Euclidean sense) to the initial image. We slightly modified this algorithm by truncating the pixel values in each iteration, to the 
                              
                                 [
                                 0
                                 ,
                                 1
                                 ]
                              
                            interval. The pseudo code of this algorithm is given in Algorithm 1.
                              Algorithm 1
                              Bounded Simultaneous Iterative Reconstruction Technique 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   Input: 
                                                   
                                                      
                                                         A
                                                      
                                                    projection matrix; 
                                                      
                                                         b
                                                      
                                                    expected projection values; 
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               (
                                                               0
                                                               )
                                                            
                                                         
                                                      
                                                    initial solution; 
                                                      
                                                         ∊
                                                      
                                                    step size bound; 
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               max
                                                            
                                                         
                                                      
                                                    maximal iteration count
                                             
                                             
                                                1: 
                                                      
                                                         k
                                                         ←
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                2: repeat
                                                
                                             
                                             
                                                3: 
                                                   
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               (
                                                               k
                                                               )
                                                            
                                                         
                                                         ←
                                                         (
                                                         
                                                            
                                                               Ax
                                                            
                                                            
                                                               (
                                                               k
                                                               )
                                                            
                                                         
                                                         -
                                                         b
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                4: 
                                                   for all 
                                                   
                                                      
                                                         i
                                                         ∈
                                                         1
                                                         ,
                                                         …
                                                         ,
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                    
                                                   do
                                                
                                             
                                             
                                                5: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               i
                                                            
                                                            
                                                               (
                                                               k
                                                               +
                                                               1
                                                               )
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               i
                                                            
                                                            
                                                               (
                                                               k
                                                               )
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  
                                                                     ∑
                                                                  
                                                                  
                                                                     j
                                                                     =
                                                                     1
                                                                  
                                                                  
                                                                     m
                                                                  
                                                               
                                                               
                                                               
                                                                  
                                                                     a
                                                                  
                                                                  
                                                                     ji
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               j
                                                               =
                                                               1
                                                            
                                                            
                                                               m
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     a
                                                                  
                                                                  
                                                                     ji
                                                                  
                                                               
                                                               
                                                                  
                                                                     v
                                                                  
                                                                  
                                                                     j
                                                                  
                                                                  
                                                                     (
                                                                     k
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     ∑
                                                                  
                                                                  
                                                                     l
                                                                     =
                                                                     1
                                                                  
                                                                  
                                                                     n
                                                                  
                                                               
                                                               
                                                               
                                                                  
                                                                     a
                                                                  
                                                                  
                                                                     jl
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                6: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                               +
                                                               1
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           0
                                                                           ,
                                                                        
                                                                        
                                                                           if
                                                                           
                                                                           
                                                                              
                                                                                 y
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                              
                                                                                 k
                                                                                 +
                                                                                 1
                                                                              
                                                                           
                                                                           <
                                                                           0
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 y
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                              
                                                                                 k
                                                                                 +
                                                                                 1
                                                                              
                                                                           
                                                                           ,
                                                                        
                                                                        
                                                                           if
                                                                           
                                                                           0
                                                                           ⩽
                                                                           
                                                                              
                                                                                 y
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                              
                                                                                 k
                                                                                 +
                                                                                 1
                                                                              
                                                                           
                                                                           ⩽
                                                                           1
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           1
                                                                           ,
                                                                        
                                                                        
                                                                           if
                                                                           
                                                                           1
                                                                           <
                                                                           
                                                                              
                                                                                 y
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                              
                                                                                 k
                                                                                 +
                                                                                 1
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                7: 
                                                   end for
                                                
                                             
                                             
                                                8: 
                                                   
                                                      
                                                         k
                                                         ←
                                                         k
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                9: until 
                                                   
                                                      
                                                         ‖
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               (
                                                               k
                                                               +
                                                               1
                                                               )
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               (
                                                               k
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               ‖
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         <
                                                         ∊
                                                      
                                                    or 
                                                      
                                                         k
                                                         >
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               max
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                10: return 
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               (
                                                               k
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

We processed the least binary reconstruction by performing the bounded SIRT algorithm from the 
                              
                                 
                                    
                                       (
                                       0.5
                                       ,
                                       …
                                       ,
                                       0.5
                                       )
                                    
                                    
                                       T
                                    
                                 
                              
                            starting point. Then, from its 
                              
                                 
                                    
                                       x
                                    
                                    
                                       ˆ
                                    
                                 
                              
                            output we produced the entropy maps by using the output pixel values as the probability values given in (3). That is, we calculated the approximate entropy maps as
                              
                                 (7)
                                 
                                    
                                       
                                          H
                                       
                                       
                                          ˆ
                                       
                                    
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    =
                                    -
                                    (
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          log
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    +
                                    (
                                    1
                                    -
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    
                                       
                                          log
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    1
                                    -
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    )
                                    .
                                 
                              
                           
                        

To validate our method we investigated it on the special phantoms shown in Fig. 1. The calculated approximate entropy maps can be observed in Fig. 3
                           . In case of Fig. 1a the width and height of the image was 
                              
                                 n
                                 =
                                 32
                              
                           . The approximation of the entropy map can be seen in Fig. 3a, where all the pixel uncertainty are equal to 
                              
                                 -
                                 
                                    
                                       
                                          
                                             
                                                1
                                             
                                             
                                                32
                                             
                                          
                                          ·
                                          
                                             
                                                log
                                             
                                             
                                                2
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         32
                                                      
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   1
                                                   -
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         32
                                                      
                                                   
                                                
                                             
                                          
                                          ·
                                          
                                             
                                                log
                                             
                                             
                                                2
                                             
                                          
                                          
                                             
                                                
                                                   1
                                                   -
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         32
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ≈
                                 0.2006
                              
                           . That is exactly the same as the real, theoretically deduced entropy map. In case of phantom of Fig. 1b we got an approximate entropy map with all pixels having zero value, which, again, coincide with the theoretical entropy. Finally, for the phantom of Fig. 1c, our approximate uncertainty map again produced the theoretically correct uncertainties, by giving uncertainty values of 1 for the eight uncertain pixels, and zero values otherwise.

Summarizing the results for the special phantoms, we can say that the uncertainty measure calculated by the proposed approximation was equal to the theoretical uncertainty, in all of our tests. Unfortunately, we could only validate the method for some special cases, and other structures might exist where our method does not work properly. Nevertheless, we must mention that we have not found such a counter example so far.

An alternative to calculate non-discrete reconstructions is a random sampling of the set of possible reconstructions belonging to the same set of projections, and then averaging the intensity in all those samples, pixelwisely. A similar approach for the random sampling of the space of reconstructions were previously applied in [4], where the authors generated random blobs for initializing continuous SIRT reconstructions.

We did the random sampling by using a Simulated Annealing based reconstruction method that is the slightly modified version of the algorithm described in [22]. It performs the reconstruction by minimizing an energy function of the form
                              
                                 (8)
                                 
                                    C
                                    (
                                    x
                                    )
                                    =
                                    ‖
                                    Ax
                                    -
                                    b
                                    
                                       
                                          ‖
                                       
                                       
                                          2
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                    x
                                    ∈
                                    
                                       
                                          {
                                          0
                                          ,
                                          1
                                          }
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           with Simulated Annealing [17]. The pseudo code of this method is given in Algorithm 2.
                              Algorithm 2
                              Reconstruction algorithm based on Simulated Annealing 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   Input: 
                                                   
                                                      
                                                         A
                                                      
                                                    projection matrix; 
                                                      
                                                         b
                                                      
                                                    expected projection values; 
                                                      
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               start
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                      
                                                    starting and minimum temperatures; 
                                                      
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               factor
                                                            
                                                         
                                                      
                                                    multiplicative constant for reducing temperature; 
                                                      
                                                         
                                                            
                                                               R
                                                            
                                                            
                                                               objective
                                                            
                                                         
                                                      
                                                    bound for stopping criteria based on the ratio of the final and starting energy function value
                                             
                                             
                                                
                                                   
                                                   1: 
                                                      
                                                         x
                                                         ←
                                                         
                                                            
                                                               (
                                                               0
                                                               ,
                                                               …
                                                               ,
                                                               0
                                                               )
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                      
                                                    {set an initial state}
                                             
                                             
                                                
                                                   
                                                   2: 
                                                      
                                                         T
                                                         ←
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               start
                                                            
                                                         
                                                      
                                                    {set the starting temperature}
                                             
                                             
                                                
                                                   
                                                   3: 
                                                      
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               start
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               old
                                                            
                                                         
                                                         ←
                                                         ‖
                                                         Ax
                                                         -
                                                         b
                                                         
                                                            
                                                               ‖
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                   {calculate the energy of the starting state}
                                             
                                             
                                                
                                                   
                                                   4: repeat
                                                
                                             
                                             
                                                
                                                   
                                                   5: 
                                                   for 
                                                   
                                                      
                                                         i
                                                         =
                                                         0
                                                      
                                                    to n 
                                                   do
                                                
                                             
                                             
                                                
                                                   
                                                   6: choose a random position j in the vector 
                                                      
                                                         x
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   7: 
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               ̃
                                                            
                                                         
                                                         ←
                                                         x
                                                      
                                                    {make a copy of the current state}
                                             
                                             
                                                
                                                   
                                                   8: 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     j
                                                                  
                                                               
                                                            
                                                            
                                                               ̃
                                                            
                                                         
                                                         ←
                                                         (
                                                         1
                                                         -
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                      
                                                    {alter the randomly chosen state}
                                             
                                             
                                                
                                                   
                                                   9: 
                                                   
                                                      
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         ←
                                                         ‖
                                                         A
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               ̃
                                                            
                                                         
                                                         -
                                                         b
                                                         
                                                            
                                                               ‖
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   {calculate the energy after the modification}
                                             
                                             
                                                10: 
                                                   
                                                      
                                                         z
                                                         ←
                                                         Random
                                                         (
                                                         [
                                                         0
                                                         ,
                                                         1
                                                         ]
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   {generate a random number from the 
                                                      
                                                         [
                                                         0
                                                         ,
                                                         1
                                                         ]
                                                      
                                                    interval with uniform distribution}
                                             
                                             
                                                11: 
                                                   
                                                      
                                                         Δ
                                                         C
                                                         ←
                                                         (
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               old
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   {calculate the change of the energy}
                                             
                                             
                                                12: 
                                                   if 
                                                   
                                                      
                                                         Δ
                                                         C
                                                         <
                                                         0
                                                      
                                                    or 
                                                      
                                                         exp
                                                         (
                                                         -
                                                         Δ
                                                         C
                                                         /
                                                         T
                                                         )
                                                         >
                                                         z
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                13: 
                                                   
                                                   
                                                      
                                                         x
                                                         ←
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               ̃
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   {accept the new state with a probability based on the energy change and temperature}
                                             
                                             
                                                14: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               old
                                                            
                                                         
                                                         =
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                15: 
                                                   end if
                                                
                                             
                                             
                                                16: 
                                                   end for
                                                
                                             
                                             
                                                17: 
                                                   
                                                      
                                                         k
                                                         ←
                                                         k
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                18: 
                                                   
                                                      
                                                         T
                                                         ←
                                                         T
                                                         ·
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               factor
                                                            
                                                         
                                                      
                                                    {lower the temperature}
                                             
                                             
                                                19: until 
                                                   
                                                      
                                                         T
                                                         ⩽
                                                         
                                                            
                                                               T
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                      
                                                    or 
                                                      
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               C
                                                            
                                                            
                                                               start
                                                            
                                                         
                                                         ⩽
                                                         
                                                            
                                                               R
                                                            
                                                            
                                                               objective
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Due to the stochastic nature of this process, with each run of Algorithm 2 we get a random element of the possible reconstructions. If we perform several reconstructions from the same (insufficient) projection data, each result of the algorithm might be different. Then, the same pixels in different results may also differ and an averaging of the pixel values through several reconstructions will describe the variability of the pixel values. Pixels with an average value close to 0 or 1 have the same value in most reconstructions, while pixels with a 0.5 average are uncertain. Now, we can use the averaged value of several different runs of Algorithm 2 in a similar way as in the case of non-discrete reconstructions, and calculate approximate entropy maps from them.

As well as in the case of the non-discrete reconstructions, we present our results of the randomized approach on the entropy maps of the special phantoms in Fig. 1. Due to the stochastic nature of the Simulated Annealing we compared the uncertainty maps of the Simulated Annealing based method and the theoretically derived uncertainty maps in a statistical way.

For the phantom in Fig. 1a, we measured the average and standard deviation of the pixel values. By a simple calculation we got that the theoretical uncertainty value is about 
                              
                                 0.2005
                              
                           , in case of a 32 by 32 sized image (i.e., with 
                              
                                 n
                                 =
                                 32
                              
                           ). In our tests, in the experimentally gained entropy map the average pixel uncertainty value was 
                              
                                 0.1930
                              
                           , and the standard deviation was 
                              
                                 0.0078
                              
                           . Thus the difference is not significant. The image of the approximated entropies can be seen in Fig. 4
                           a.

In case of the phantom in Fig. 1b, the expected uncertainty value is 0 for each pixel, and the average of the calculated pixel entropies was 0, with a 0 valued standard deviation, that is an exact match (as it can be seen in Fig. 4b).

With the phantom of Fig. 1c we made two types of statistics because there are two types of pixels on the theoretical uncertainty maps. In most of the pixels, the uncertainty value should be 0 (let us call these pixels fixed pixels). On the other hand, there are eight pixels, which should take uncertainty values of 1 (we will call these pixels vague pixels for now). As for the statistics, the average approximated values of the fixed pixels in our test was 
                              
                                 0.0096
                              
                           , with a 
                              
                                 0.0009
                              
                            standard deviation, and for the vague pixels, this average was 
                              
                                 0.9878
                              
                           , with a standard deviation of 
                              
                                 0.0002
                              
                           . This again shows a good approximation of the entropy map. Fig. 4c shows the uncertainty map generated in this case.

In conclusion, our tests revealed that the results of both the Simulated Annealing based method and the bounded SIRT are in accordance with the theoretically derived entropy maps.

In this section we will show, via experimental tests, that there is a strong relationship between the entropy maps gained from Algorithms 1 and 2.

We took 22 phantom images, produced their projection sets with different numbers of projections, and computed the pixel entropies from the given data with Algorithms 1 and 2. Some of the sample images can be seen in Fig. 5
                        . To perform the computation, the parameters of Algorithm 1 were set empirically. As mentioned before we needed to use the initial 
                           
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 
                                    (
                                    0.5
                                    ,
                                    …
                                    ,
                                    0.5
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         vector in the beginning of the process, and the process was stopped in the k-th iteration, if 
                           
                              ‖
                              
                                 
                                    x
                                 
                                 
                                    k
                                    +
                                    1
                                 
                              
                              -
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                              
                              
                                 
                                    ‖
                                 
                                 
                                    2
                                 
                              
                           
                         became less than 
                           
                              0.001
                           
                         or k was equal to 5000.

As for the parameters of the Simulated Annealing based method, we used the parameter settings as described in [22], except that we did not apply a smoothness regularization term in the process. More exactly, the parameter values were 
                           
                              
                                 
                                    T
                                 
                                 
                                    start
                                 
                              
                              =
                              4.0
                              ,
                              
                              
                                 
                                    T
                                 
                                 
                                    min
                                 
                              
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    14
                                 
                              
                              ,
                              
                              
                                 
                                    T
                                 
                                 
                                    factor
                                 
                              
                              =
                              0.97
                              ,
                              
                              
                                 
                                    R
                                 
                                 
                                    objective
                                 
                              
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    5
                                 
                              
                           
                        . Moreover, for each given projection set we averaged 100 runs of the optimization process to approximate the entropy maps explained in Section 3.2.2.

In order to compare the outputs of Algorithms 1 and 2 we used the average pixel difference
                           
                              (9)
                              
                                 D
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 |
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 |
                                 ,
                              
                           
                        that is a measure for the difference of two images 
                           
                              x
                           
                         and 
                           
                              y
                           
                        . This measure takes values between 0 and 1. If the two images are identical, then 
                           
                              D
                              (
                              x
                              ,
                              y
                              )
                           
                         takes a value of 0, and this value increases as the difference between the two images gets more and more significant.

@&#RESULTS@&#

At the end of the optimization process of Algorithm 1, and after averaging 100 results of Algorithm 2, we got continuous, non-discrete reconstructions. When we calculated the entropies giving the pixel uncertainties, we got approximate entropy maps of the reconstructions, showing for each pixel its vagueness with the given projection data. Some of the results can be seen in Fig. 6
                        .

We used the average pixel difference (9) to compare each non-discrete reconstruction provided by Algorithm 1 to the corresponding non-discrete reconstruction of Algorithm 2, and likewise for the approximate entropy maps of the two methods. Some of these evaluations can be seen in Table 1
                        . The results show that there is a strong correspondence between the two types of uncertainty measures. For the pairs of non-discrete reconstructions and entropy maps the 
                           
                              D
                              (
                              x
                              ,
                              y
                              )
                           
                         values consistently showed small difference between the results of the two algorithms and took values close to 0. This is in accordance with our visual observations, as the image pairs of Fig. 6 show no significant differences.

As a conclusion, we can say that there is a strong connection between the approximate entropy maps generated by the two different methods, and the validity of both is also supported by the similarity with the theoretically derived entropy maps.

The time requirement of Algorithm 1 was about 3–12s for processing each entropy map on a PC with an Intel Q9500 CPU, with a MATLAB implementation. On the other hand, running Algorithm 2 hundred times (with the same input configuration) for obtaining an average reconstruction took about 2days for each image and projection number. Thus, the entire evaluation process took several months on a cluster of computers. Another advantage of Algorithm 1 is that it is suitable for a GPU accelerated highly parallel implementation that can further increase its efficiency. Although both methods are capable of acceptably approximating the local uncertainty of reconstructions the huge computational time requirement of the Simulated Annealing based algorithm makes it impractical for applications. Therefore, we used it just for validation purposes.

With the pixel-wise fusion of the entropy maps we can also get a global description of the uncertainty of the whole reconstruction. For this purpose we used a normalized sum of the pixel entropies of the images, expressed with the formula
                        
                           (10)
                           
                              U
                              (
                              x
                              )
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                    H
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 
                                    
                                       
                                          1
                                       
                                       
                                          p
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                    
                                    
                                       
                                          b
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                              ,
                           
                        
                     where p is the number of projections. We will call this term cumulated entropy.

This measurement summarizes the pixel entropies, and normalizes the sum with the approximated number of non-zero values in the original image. In the ideal case, the sum of the projection values for each projection would contain the number of ones in the original image to reconstruct. Due to the approximation error in the reconstruction, however, the sum of the projection values may not be equal for all projection directions, therefore, we took the average of the projection value sums for the normalization.

Clearly, the entropy maps, again, can usually only be approximated. For the validation of the cumulated entropy measure we performed an experimental test by reconstructing a set of software phantoms from their different projection sets, and investigated the relation between the error of the reconstructions and the (approximated) global uncertainty measurement. We expected that projection sets with smaller uncertainty should lead to smaller reconstruction error.

In the experiments we used three binary reconstruction algorithms to check the correctness of the global uncertainty measure.

This two-step reconstruction method performs a SIRT reconstruction followed by a thresholding of the pixel values. Here, we obtain an approximate binary reconstruction from this continuous one by thresholding the pixels with a 
                              
                                 0.5
                              
                            threshold value.

In this case, the process of the SIRT algorithm was stopped when the difference between two consecutive iteration states became smaller than 
                              
                                 0.01
                              
                            or the process reached a limit of 5000 iterations.

The DART [5] is an iterated thresholding of continuous reconstructions. This algorithm starts out by producing a continuous reconstruction using an algebraic reconstruction method. Then, in each iteration it applies a thresholding on the continuous result, and proceeds with an other continuous reconstruction, performed on the boundary pixels. The DART algorithm as described in [5] contains also a parameter, the fixed ratio, which can be varied between 0 and 1 to keep a certain amount of non-boundary pixels non-fixed, too. It is typically recommended to use a value between 0 and 1 (e.g. 0.85), which results in improved reconstruction of complex structures (such as the ones given later in the paper). Nevertheless, here we used the value 1 for this parameter which results in a non-stochastic version of DART and suits therefore better our purpose.

The third algorithm (that was introduced in [19]) applies D.C. programming (a numerical method for minimizing the difference of convex functions) to minimize a sequence of energy functions given by
                              
                                 (11)
                                 
                                    
                                       
                                          J
                                       
                                       
                                          λ
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    ‖
                                    Ax
                                    -
                                    b
                                    
                                       
                                          ‖
                                       
                                       
                                          2
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          γ
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             
                                                
                                                   n
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             
                                                
                                                   N
                                                
                                                
                                                   4
                                                
                                             
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    -
                                    
                                       
                                          λ
                                       
                                       
                                          2
                                       
                                    
                                    〈
                                    x
                                    ,
                                    x
                                    -
                                    e
                                    〉
                                    ,
                                 
                              
                           where 
                              
                                 x
                                 ∈
                                 
                                    
                                       [
                                       0
                                       ,
                                       1
                                       ]
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           . Here, 
                              
                                 γ
                              
                            is a given constant controlling the weight of a smoothness prior on the image, 
                              
                                 
                                    
                                       N
                                    
                                    
                                       4
                                    
                                 
                                 (
                                 i
                                 )
                              
                            is the set of pixels 4-connected to the i-th pixel, 
                              
                                 e
                              
                            denotes the vector with all 
                              
                                 
                                    
                                       n
                                    
                                    
                                       2
                                    
                                 
                              
                            elements equal to 1, and 
                              
                                 λ
                              
                            is a parameter controlling the strength of the binarity prior. In the beginning of the optimization process 
                              
                                 λ
                                 =
                                 0
                              
                           , thus the best continuous solution is found. In the sequel, 
                              
                                 λ
                              
                            is iteratively increased by 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       Δ
                                    
                                 
                              
                           , to force binary results. From this point, we will simply call this algorithm “DC”.

The parameters of the DC algorithm were mostly set as specified in [22], for example, we used 
                              
                                 γ
                                 =
                                 0.25
                              
                           . Though, instead of calculating 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       Δ
                                    
                                 
                              
                            from the first continuous reconstruction and the projection matrix 
                              
                                 A
                              
                           , we explicitly set it to 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       Δ
                                    
                                 
                                 =
                                 0.1
                              
                           , to avoid performing a large number of computation and keep the running time of the algorithm as low as possible.

For the experiment we used the same 22 binary phantom images which were used for evaluating the entropy maps. We reconstructed the phantoms from different sets of their projections with the three reconstruction algorithms, and compared the accuracy of the results to the cumulated entropy of the projection sets calculated by Algorithm 1.

The projection sets contained parallel-beam projections taken equiangularly from different number of directions. For each phantom image, we produced projections with all integer projection numbers (p) ranging from 
                           
                              p
                              =
                              2
                           
                         to 
                           
                              p
                              =
                              18
                           
                        , and for each projection number we used all possible integer starting angles between 
                           
                              0
                              °
                           
                         and 
                           
                              ⌈
                              180
                              °
                              /
                              p
                              -
                              1
                              °
                              ⌉
                           
                        . Similar experiments were performed in [20] to test the direction-dependency of binary tomographic reconstruction algorithms. The reason of using these projection sets was that previous results revealed that their information content varies on a large interval, thus they are appropriate for checking the cumulated entropy. Also, previous works [20] showed that there is a strong correspondence between the accuracy of the reconstructed results and the information content of projections, that made this type of tests justifiable, again.

The accuracy of the reconstructions was measured by the Relative Mean Error (RME) measure [15] defined by
                           
                              (12)
                              
                                 RME
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ∗
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       ˆ
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                          
                                       
                                       |
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                          
                                             ∗
                                          
                                       
                                       -
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       |
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                           
                         denotes the vector of the pixel values of the original phantom and 
                           
                              
                                 
                                    x
                                 
                                 
                                    ˆ
                                 
                              
                           
                         is the reconstructed image.

@&#RESULTS@&#

We compared the results in different ways. First, for each phantom image and the number of projections we plotted diagrams that showed the reconstruction errors and cumulated entropy values according to the change of the starting angle. The same approach was used in [20] to examine if there is a correlation between the results of different reconstruction algorithms. Some of the plots can be seen in Fig. 7
                        .

Previous studies showed, that for each object of study and projection number, there is a specific direction-dependency characteristic, i.e., the accuracy of the reconstruction depends on the choice of projections. This phenomenon, on the other hand is caused by the different information content of the projections and is independent on the reconstruction method applied, in the sense that the same projection sets will provide better results than others regardless of the reconstruction algorithm used. If there is a correspondence between the cumulated entropy and the accuracy of the reconstructions, then the curves of the diagrams in Fig. 7 should be similar. The curves show that, indeed, this is the case which indicates that the global entropy measure is in accordance with the accuracy of the results.

Nevertheless, we must note that the cumulated entropy and the reconstruction error provide different information about the projection data. The cumulated entropy is an overall description of the information content of the projections which can be calculated without any knowledge about the object of study, whereas the reconstruction error describes the quality of the reconstruction using the ground truth image. The above reconstruction algorithms only choose one possible reconstruction among the ones approximately satisfying the projections. This can be the original image, but images differing from the original one are also possible to be chosen. Therefore, we need a large number of reconstructions to draw a connection between the cumulated entropy, and the RME value.

For supporting the above observations, we also evaluated the correspondence between the results by numerical tools. We took the cumulated entropies given for the projection sets of each phantom image, paired them up with the RME values of the reconstructions from the different algorithms, and calculated the Pearson’s correlation coefficients (see, e.g., [18]) for the given data. The correlation coefficient is calculated as
                           
                              (13)
                              
                                 
                                    
                                       r
                                    
                                    
                                       x
                                       ,
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             
                                                
                                                   n
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                       )
                                       (
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             y
                                          
                                          
                                             ¯
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                           
                         and 
                           
                              
                                 
                                    y
                                 
                                 
                                    ¯
                                 
                              
                           
                         are the mean values of vectors 
                           
                              x
                           
                         and 
                           
                              y
                           
                        . The 
                           
                              
                                 
                                    r
                                 
                                 
                                    x
                                    ,
                                    y
                                 
                              
                           
                         measure takes a value close to −1 or 1 if there is a strong linear correspondence between the entries of the the two compared vectors, and leans towards 0 as the correspondence weakens. With this, we could measure if there is a connection between the entropy measure and the RME values of the reconstructions. The results are summarized in Table 2
                        .

Most of the entries in Table 2 are close to 1, drawing a strong connection between the accuracy of the reconstructions and the cumulated entropies. The only outlier is Phantom 15 that the TSIRT algorithm was not able to reconstruct (even approximately) in most cases, therefore we could not get enough data for a proper analysis.

As an additional preliminary test, we also studied the effects of projection noise to the entropy maps and the cumulated entropy. We evaluated the entropy maps of projection sets corrupted by an additive Gaussian noise to the projection data and processed the entropy maps with Algorithms 1 and 2. The noise on the projections was generated by adding random values to the projections from a Gaussian distribution with 0 mean and different 
                        
                           σ
                        
                      standard deviations, which is a common technique for modeling noise in transmission tomography [7,8,16,22]. In the first experiment we used a smaller 
                        
                           σ
                           =
                           1.0
                        
                      value, while in the second one a higher 
                        
                           σ
                           =
                           5.0
                        
                     .

We found that the outputs of the two measurement techniques still described the uncertainty in the same way, i.e., the same regions were indicated with high entropy by both methods. One such pair of entropy maps is given in Fig. 8
                     . This observation can be supported by calculating the correlation between the cumulated entropies and the RME values of actual reconstructions on the similar tests as it was done in Section 5, performed from noisy projections. Some of the results can be found in Table 3
                     .

Comparing the entropy maps produced from the noisy projections to the original noiseless case we found that – as expected – the entropy values changed; in case of some pixels they increased while for some others they decreased. Adding noise to the projections usually brings more uncertainty to the reconstruction. However, we see also decreasing values in the uncertainty maps, which is an evidence that our measure formulates only the uncertainty arising from the insufficient information in the projection data, and not the uncertainty caused by the projection noise. In case of noisy projections we still see the variability of each pixel in the reconstruction, but this time the distorted projections formulate a new set of reconstructions, and thus the entropy map changes.

With the entropy maps, one can gain useful additional information on the projection set and the reliability of the reconstructions. This information can be exploited in several ways for aiding the reconstructions in practical applications of binary tomography.

The entropy maps and the non-discrete reconstructions together provide prior knowledge of the pixels. Pixels with a low entropy are well-determined and their values can easily be read out from the non-discrete reconstructions. Pixels with high entropy, on the other hand, are vague, and further projections and/or additional prior information knowledge is needed to reconstruct them.

Entropy maps can be used to highlight the areas of the image that need more consideration in the reconstruction, and neglect parts which are precisely determined. This might be used to improve both the accuracy and speed of reconstruction algorithms.

For example, the original version of the DART algorithm uses an iterated thresholding of continuous reconstructions, by fixing the inner pixels of the objects, and adjusting the boundaries. Coming from the concept of the algorithm, this DART had difficulties in finding small holes in large homogeneous areas of objects, or small objects in large empty areas. An improved version of the DART tries to overcome this problem by stochastic modifications [5], but the entropy maps could also be used to highlight the problematic areas of the image and improve the results.

Based on this argument, we implemented an uncertainty aided binary version of the original, non-stochastic DART algorithm, which also takes the local entropy map into account. We defined an extra parameter 
                           
                              ν
                           
                         that will refer to the number of DART iterations. Then, in every iteration of the process, we determine the set of pixels having an entropy greater than a bound 
                           
                              H
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                              )
                              >
                              
                                 
                                    k
                                 
                                 
                                    ν
                                 
                              
                           
                         (where k denotes the current iteration number), and do not threshold these pixels. Thus, we postpone the thresholding of pixels having higher entropies, while we increase the threshold limit on the entropy, as the process carries on. Finally, after the iteration count reaches 
                           
                              ν
                           
                        , the process will be equivalent to the original DART algorithm. The modified process is likely to find the small areas which were hard or even impossible to locate with the original DART. The detailed description of this method called BU-DART is given in Algorithm 3.
                           Algorithm 3
                           Binary Uncertainty aided Discrete Algebraic Reconstruction Technique (BU-DART) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Input: 
                                                
                                                   
                                                      A
                                                   
                                                 projection matrix; 
                                                   
                                                      b
                                                   
                                                 expected projection values; 
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            (
                                                            0
                                                            )
                                                         
                                                      
                                                   
                                                 initial solution; 
                                                   
                                                      ν
                                                   
                                                 entropy threshold parameter
                                          
                                          
                                             
                                                
                                                1: Compute a starting reconstruction 
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            (
                                                            0
                                                            )
                                                         
                                                      
                                                   
                                                 using an algebraic reconstruction method
                                          
                                          
                                             
                                                
                                                2: Compute the entropy 
                                                   
                                                      H
                                                      (
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            (
                                                            0
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                 of each 
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                 pixel based on the 
                                                   
                                                      b
                                                   
                                                 projection data
                                          
                                          
                                             
                                                
                                                3: 
                                                   
                                                      k
                                                      ←
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                4: repeat
                                             
                                          
                                          
                                             
                                                
                                                5: 
                                                
                                                   
                                                      k
                                                      ←
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                6: Compute the segmented image 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                 by thresholding 
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            (
                                                            k
                                                            -
                                                            1
                                                            )
                                                         
                                                      
                                                   
                                                 with value 0.5
                                          
                                          
                                             
                                                
                                                7: Compute 
                                                   
                                                      
                                                         
                                                            I
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                 set of non-boundary pixels of 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                8: Compute 
                                                   
                                                      
                                                         
                                                            J
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            
                                                               i
                                                               
                                                               |
                                                               
                                                               H
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     (
                                                                     k
                                                                     )
                                                                  
                                                               
                                                               )
                                                               >
                                                               1
                                                               -
                                                               
                                                                  
                                                                     k
                                                                  
                                                                  
                                                                     ν
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                 index set of uncertain pixels
                                          
                                          
                                             
                                                
                                                9: 
                                                for all 
                                                
                                                   
                                                      i
                                                      ∈
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             10: 
                                                
                                                
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                      ←
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              s
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                           
                                                                              (
                                                                              k
                                                                              )
                                                                           
                                                                        
                                                                        ,
                                                                     
                                                                     
                                                                        if
                                                                        
                                                                        i
                                                                        ∈
                                                                        (
                                                                        
                                                                           
                                                                              I
                                                                           
                                                                           
                                                                              (
                                                                              k
                                                                              )
                                                                           
                                                                        
                                                                        ⧹
                                                                        
                                                                           
                                                                              J
                                                                           
                                                                           
                                                                              (
                                                                              k
                                                                              )
                                                                           
                                                                        
                                                                        )
                                                                        ,
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                           
                                                                              (
                                                                              k
                                                                              -
                                                                              1
                                                                              )
                                                                           
                                                                        
                                                                        ,
                                                                     
                                                                     
                                                                        otherwise
                                                                        .
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             11: 
                                                end for
                                             
                                          
                                          
                                             12: Using 
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                 as a starting solution, compute a continuous reconstruction 
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                 while keeping the pixels in 
                                                   
                                                      (
                                                      
                                                         
                                                            I
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                      ⧹
                                                      
                                                         
                                                            J
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                 fixed
                                          
                                          
                                             13: Apply a smoothing operation to the pixels that are not in 
                                                   
                                                      (
                                                      
                                                         
                                                            I
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                      ⧹
                                                      
                                                         
                                                            J
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             14: until the stopping criterion is met
                                          
                                          
                                             15: return the segmented image 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            (
                                                            k
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Some examples with our modified and the original, non-stochastic DART algorithm can be found in Fig. 9
                        . Our observations showed that using the entropy map really did improve the performance of the DART algorithm in the binary case.

Another possible application of measuring the local and global uncertainty arises in the field of industrial non-destructive testing. Here, binary tomography is used to determine the inner structure of homogeneous industrial objects looking for defects in the material (e.g., fractures and bubbles).

In this case, the entropy maps can be used together with the results of a binary reconstruction algorithm to check the accuracy at the critical parts of the object and rule out false detections. Also, if taking further projections is possible, the entropy map can show that further information may be needed for the proper assessment of the object. An example can be found in Fig. 10
                        .

In [20] it was shown, that the choice of projections can greatly influence the accuracy of the reconstructed results. Some projection sets contain more information than others, thus one can assure more precise results by properly choosing the projection angles. It was also shown, that if a blueprint of the object is available, then it can be used to choose the best projection directions to improve the accuracy of results. One only have to simulate possible projection sets of the blueprint, perform reconstructions and choose the directions that lead to the best result. This approach is suitable for the non-destructive testing of objects since small distortions in the object of study as well as moderate amount of noise in the projection data do not significantly change the direction of the ideal projections [20].

In Section 5 we showed, that the cumulated entropy describes the information content of the projections and correlates with the accuracy of the reconstructions (see Fig. 7 and Table 2). Also, we argue, that our cumulated entropy measure gives a more reliable description of the set of possible reconstructions, since it gives us information on the whole search space, not only one of its elements. Therefore, it could be used for choosing the projection angles in binary tomography.

In addition, the local entropy maps can be summarized not only for all the pixels, but for a smaller area of the reconstructed image as well. With this, one can get a measure of the reliability of the reconstruction at specific parts of the object of study, and maximize the accuracy at specific regions of interest.

@&#CONCLUSION@&#

In this work we gave a description of the data uncertainty problem of binary tomography and provided measures for the local and global uncertainties of the reconstructed image. Given the projections of homogeneous objects, we described two methods to approximate the uncertainty of pixels. With this, one can get a picture of the information content of a projection set and measure how it determines each part of the reconstructed image. These measures are in accordance with our theoretical observations, too. We also provided a formula for summarizing the local, pixel-based uncertainties into a global measure, that can determine the overall quality of a given set of projections. For the evaluation of our proposed method, we performed computed experiments on a set of phantom images.

The information on the uncertainty in a projection set can be useful in practical applications to measure the accuracy and reliability of the reconstructed results, and also to improve reconstruction methods. As an example, we explained how this information can improve the DART reconstruction algorithm in the binary case.

In our future work we plan to extend the results to the non-binary case of discrete tomography (i.e., when there are more than two possible intensities in the reconstructed images), and improve the uncertainty measure by modeling the noise in the projections. Also, revealing connections to other methods to determine the information content of projection sets, such as the ones described in [3,9], is among our future plans.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank Joost Batenburg for providing test data for the results. Another part of the test images originated from the image database of the IAPR Technical Committee on Discrete Geometry (TC18).

The work of László G. Nyúl was supported by the János Bolyai Research Scholarship of the Hungarian Academy of Sciences. Péter Balázs was supported by the OTKA PD100950 grant of the National Scientific Research Fund. The research of Péter Balázs and László Varga was partially supported by the European Union and Hungary co-funded by the European Social Fund under the grant agreement TÁMOP 4.2.4.A/2-11-1-2012-0001 (“National Excellence Program”). The work of Antal Nagy was supported by the grant agreement TÁMOP-4.2.2.A-11/1/KONV-2012-0073 (“Telemedicine-focused research activities on the field of Mathematics, Informatics and Medical sciences”).

@&#REFERENCES@&#

