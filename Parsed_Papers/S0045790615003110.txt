@&#MAIN-TITLE@&#Automatic modulation format/bit-rate classification and signal-to-noise ratio estimation using asynchronous delay-tap sampling

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A technique for joint modulation format and bit-rate classification is proposed.


                        
                        
                           
                           The proposed technique can simultaneously enable non-data-aided SNR estimation.


                        
                        
                           
                           The technique uses asynchronous delay-tap plots with artificial neural networks.


                        
                        
                           
                           The signal classification accuracy is 99.12% and mean SNR estimation error is 0.88 dB.


                        
                        
                           
                           Due to its simplicity, it is attractive for future cognitive wireless networks.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Automatic modulation classification

Automatic modulation format and bit-rate classification

SNR estimation

Asynchronous delay-tap sampling

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

The incredible advances in digital signal processing (DSP) technologies over the last decade along with the advent of fast and economical analog-to-digital converters (ADCs) have developed a strong interest in cognitive radio for both commercial and military applications. The cognitive radio terminals in future wireless networks are envisioned to be adaptive in nature whereby various transmission parameters such as modulation format, bit-rate, signal power etc., can be varied dynamically depending upon the channel conditions and quality-of-service (QoS) requirements [1–5]. Therefore, the digital receivers in future cognitive wireless networks are expected to be fully capable of blind estimation of these critical parameters.

Automatic modulation classification (AMC) has been an active research area for the past several decades and a number of techniques have been proposed in the literature [6,7]. These include AMC techniques based on iterative expectation-maximization algorithm [8], machine learning method using genetic programming in combination with K-nearest neighbor (KNN) [9], two-stage optimization using greedy convexhull learning algorithm and alternative convexhull shrinkage algorithm [10], maximum likelihood approach using probability density function of signal phase [11], higher-order statistical moments and cumulants [12,13], combination of higher-order statistics and instantaneous properties of digitally modulated signals [14] etc. The existing AMC techniques exploit various characteristics of modulation schemes for the purpose of their recognition for e.g., (i) instantaneous variations in the amplitude, frequency and phase of the carrier, (ii) statistical features such as higher-order moments and cumulants, cyclostationarity etc., (iii) spectral features obtained through Fourier and wavelet transforms, (iv) geometrical features of the constellation diagrams and (v) variance of the zero-crossing interval of the carrier. The current AMC techniques suffer from two main drawbacks. (1) These techniques entail high implementation and computational complexity since they often require coherent detection, high-speed synchronous sampling, and intricate preprocessing steps for the extraction of abovementioned parameters. (2) To the best of authors' knowledge, all these techniques focus merely on modulation format classification and cannot jointly identify the bit-rates of signals, which are also expected to vary dynamically in future wireless networks.

Apart from the need of joint modulation format and bit-rate classification, a priori knowledge of various channel parameters is also crucial in wireless networks since this vital information can be exploited for achieving the optimal performance through various adaptive schemes [1]. In particular, accurate estimation of signal-to-noise ratio (SNR) is indispensable in wireless networks since the performance of many algorithms strongly depends on precise knowledge of SNR. The real-time information about SNR can enable several useful functionalities such as adaptive modulation and coding, dynamic power allocation, soft decoding etc. Over the last few years, a plethora of SNR estimation techniques has been proposed [15]. These include techniques based on higher-order moments [16], fourth-order cross-moments [17], correlation and cyclostationarity properties [18,19], training symbols [20], rank discrimination test [21] etc. The above-mentioned techniques can be categorized as data-aided (DA) and non-data-aided (NDA) techniques. The former approach relies on periodic transmission of pilot symbols known to the receiver while the latter one estimates SNR directly from the information-bearing received signal. Since the use of pilot symbols results in wastage of channel bandwidth and transmission power, NDA SNR estimation techniques are considered more suitable for wireless networks [15].

In this paper, we propose a simple technique which effectively exploits modulation format, bit-rate, and SNR dependent patterns present in asynchronous delay-tap plots (ADTPs) obtained from the received signals. In contrast to existing AMC techniques which target only modulation format classification, the proposed technique can jointly classify modulation format and bit-rate of the received signal from a known set of modulation formats and bit-rates. In addition, it can blindly estimate the SNR of a received data-bearing signal. The proposed technique requires simple envelope detection and low-speed asynchronous sampling (without necessitating timing/clock information) and thus offers reduced implementation complexity as compared to existing AMC and SNR estimation techniques. Furthermore, due to the fact that the proposed technique can simultaneously estimate modulation format, bit-rate and SNR of the received signal, it is also computationally more efficient than the existing techniques which require separate algorithms for the estimation of these three parameters. Numerical simulations performed for three modulation formats at two different bit-rates i.e., 250/500 Mbps non-return-to-zero (NRZ) 2 amplitude-shift keying (2ASK), 250/500 Mbps return-to-zero (RZ) quadrature phase-shift keying (QPSK) and 1/2 Gbps NRZ 16 quadrature amplitude modulation (16QAM) signals validate successful classification of all modulation formats/bit-rates for SNR as low as 0 dB. Similarly, accurate estimation of SNR in the range of 0−30 dB is shown for various signal types.

The rest of paper is organized as follows. Section 2 presents the concept of asynchronous delay-tap sampling (ADTS) technique while in Section 3, the system model used in numerical simulations is described. Section 4 provides information about principal component analysis (PCA) method. In Section 5, the results for joint modulation format/bit-rate classification and blind SNR estimation are presented and discussed. Finally, Section 6 concludes the paper.

The concept of ADTS is illustrated in Fig. 1
                     . In ADTS, the signal envelope is sampled in pairs (pi, qi
                     ) with a known constant delay Δt (called tap-delay) between the two samples [22–24]. It is important to note that the sampling process is completely asynchronous in nature whereby, the sampling period T
                     sampling is not related to the symbol period T
                     symbol and can be many orders of magnitude longer. This implies that there is absolutely no need for timing/clock information in ADTS. Moreover, the sampling can be performed at very low sampling rates. Both of these properties are extremely desirable since they can significantly reduce the implementation complexity and cost. Binning the sample pairs (pi, qi
                     ) into a two-dimensional (2D) histogram produces a scatter plot called an ADTP, which provides information richness similar to conventional eye diagrams with the benefit that unlike eye diagrams, the generation of ADTPs does not necessitate timing information. The patterns reflected by ADTPs depend on various factors such as (i) shape of the signal waveform (and hence, modulation format), (ii) slopes of the signal pulse (and thus, data rate) and (iii) noise as well as other impairments introduced into the signal. Fig. 2
                      shows distinct ADTP patterns corresponding to different modulation formats, bit-rates and SNRs. It is essentially this relation between ADTP patterns and various modulation formats, bit-rates and SNRs which the proposed technique exploits using ANN-based pattern recognition for the joint estimation of these parameters. In order to reduce the complexity of subsequent pattern recognition system, we preprocess ADTPs using PCA for the extraction of most significant and distinctive features [25,26]. These unique features are then utilized for the training of two ANN-based classifiers used for the recognition of modulation format/bit-rate and estimation of SNR of the received signal.

To investigate the applicability of proposed technique, we have conducted numerical simulations and the system model used is shown in Fig. 3
                     . Three modulation formats i.e., one from each of the three families of amplitude, phase, and multilevel-QAM modulation schemes, are selected for evaluation purposes. For each chosen modulation format type, we have considered two different data rates so as to analyze the bit-rate classification ability of the technique. Furthermore, we have considered a combination of NRZ and RZ modulation formats in this work since both types are used in practical communication systems. Hence, the set of selected signals constitutes 250/500 Mbps NRZ-2ASK, 250/500 Mbps RZ-QPSK and 1/2 Gbps NRZ-16QAM signals. The Gaussian pulse-shaping filters are used for transmitted signal pulses while the channel effects are limited to the additive white Gaussian noise (AWGN) only. The noise power is altered so as to vary the SNR of received signal from 0 to 30 dB in steps of 0.5 dB (i.e., 61 SNR values considered for each signal type). The total received power (i.e., sum of signal and noise powers) is −10 dBm. The envelope of received passband signal is sampled by employing ADTS to obtain 100,000 sample pairs (pi, qi
                     ), which are then used to synthesize an ADTP with 30 × 30 bins. We generated a large data set of 366 ADTPs corresponding to three modulation formats, two bit-rates, and 61 SNR values. Two separate subsets namely training and testing data sets are then obtained by randomly selecting 70% (i.e., 256) and 30% (i.e., 110) ADTPs, respectively, from the overall data set. The ADTPs in both data sets are processed using PCA and the extracted feature vectors are then exploited by ANN-based classifiers for joint modulation format/bit-rate classification and NDA SNR estimation.

Principal component analysis, also called Karhunen–Loève transform (KLT), is a classical technique for features extraction and data compression. It has myriad applications in the areas of image processing, pattern recognition, and computer vision. The central idea of PCA is to reduce the large dimensionality of a given data space to a relatively smaller dimensionality of feature space. This reduction is attained by transforming to a new (and more concise) set of uncorrelated variables called principal components (PCs). Thus, PCA results in an economical and more compact representation of data [25,26]. In this work, we apply standard PCA on ADTPs in the training and testing data sets in order to determine the most useful features. For this purpose, first each ADTP in the training data set is represented as a one-dimensional vector φi
                      of length 900 by concatenating all the columns and then a matrix Φ = [φ
                     1 
                     φ
                     2…..φ
                     256] of size 900 × 256 is generated, where each ADTP in the training data set forms one column of the matrix Φ. The mean image vector Γ of matrix Φ is given as
                        
                           (1)
                           
                              
                                 Γ
                                 =
                                 
                                    1
                                    256
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    256
                                 
                                 
                                    φ
                                    i
                                 
                              
                           
                        
                     
                  

Next, we obtained zero-mean image matrix Ψ = [ψ
                     1 
                     ψ
                     2…..ψ
                     256], where ψi
                      = φi
                      − Γ. The covariance matrix C of Ψ is given as
                        
                           (2)
                           
                              
                                 C
                                 =
                                 
                                    1
                                    256
                                 
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    256
                                 
                                 
                                    ψ
                                    i
                                 
                                 
                                    
                                       
                                          ψ
                                          i
                                       
                                    
                                    T
                                 
                                 =
                                 Ψ
                                 
                                    Ψ
                                    T
                                 
                              
                           
                        
                     
                  

Matrix C can have up to 900 eigenvectors (also called PCs) and corresponding eigenvalues which can be determined using
                        
                           (3)
                           
                              
                                 C
                                 
                                    μ
                                    i
                                 
                                 =
                                 
                                    λ
                                    i
                                 
                                 
                                    μ
                                    i
                                 
                                 
                                 for
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 900
                              
                           
                        
                     where μi
                      and λi
                      are the ith eigenvector and eigenvalue of C, respectively. The eigenvalues of a few PCs are plotted in descending order in Fig. 4(
                     a) which clearly shows that the eigenvalues swiftly converge to zero. We ranked the computed eigenvectors according to their eigenvalues and selected only K eigenvectors amongst them such that the parameter Ω, which is ratio of the sum of eigenvalues of chosen eigenvectors and the sum of all the eigenvalues of C, satisfies the following criterion:
                        
                           (4)
                           
                              
                                 Ω
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    K
                                 
                                 
                                    λ
                                    i
                                 
                                 /
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    900
                                 
                                 
                                    λ
                                    i
                                 
                                 >
                                 P
                              
                           
                        
                     where P is often chosen to be above 0.9 [26]. The value of parameter Ω is shown in Fig. 4(b) as a function of number of PCs selected K. It is evident from the figure that Ω > 0.9 for K = 6. This implies that we can retain only six PCs (pertaining to the six largest eigenvalues) and discard the rest without losing significant information. Note that in contrast to original 900-dimensional image space, the chosen eigenvectors span only a K-dimensional subspace. Any vector ψ corresponding to an ADTP in the training or testing data set can thus be approximated as a weighed-sum of the chosen eigenvectors in this K-dimensional subspace i.e.
                        
                           (5)
                           
                              
                                 ψ
                                 ≈
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    K
                                 
                                 
                                    
                                       w
                                       k
                                    
                                    
                                       μ
                                       k
                                    
                                 
                                 
                                 ⇒
                                 
                                    w
                                    k
                                 
                                 =
                                 
                                    μ
                                    k
                                    T
                                 
                                 ψ
                                 
                                 for
                                 
                                 k
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 K
                              
                           
                        
                     
                  

A vector x = [w
                     1 
                     w
                     2…wK
                     ]
                        T
                      containing the weights wk
                      is known as the feature vector of a given ADTP. Using the K selected eigenvectors, we determined feature vectors x (each of length 6) for all the ADTPs in the training and testing data sets. In addition, for each ADTP, we obtained a 6 × 1 binary vector y
                     1 (where, the location of only one non-zero element in y
                     1 signifies actual modulation format and bit-rate of the signal) and the actual SNR value y
                     2.

@&#RESULTS AND DISCUSSION@&#

The vectors x and y
                     1 as well as SNR y
                     2 corresponding to ADTPs in the training data set are utilized for the training of two ANNs i.e., first for the classification of modulation format/bit-rate and second for the estimation of SNR, as shown in Fig. 5
                     . The two ANNs used in this work are multi-layer perceptron (MLP) ANNs with only one hidden layer [27–29]. The role of first ANN in Fig. 5 is that of a classifier while the second ANN is working as a regressor. A supervised learning method called Levenberg–Marquardt (LM) back-propagation (BP) is used for the training of both ANNs. During the ANNs' training process, vectors x and y
                     1 (corresponding to training data set) are applied at the input and output of first ANN, respectively, while vector x and SNR y
                     2 are applied at the input and output of second ANN, respectively. Various network parameters like the number of neurons in the hidden layer, weights of the interconnections etc. are then optimized such that the mean-squared-error (MSE) between the analog ANN output v
                     1,2, and y
                     1,2 i.e., ||v
                     1,2 – y
                     1,2||2, is minimized over the whole training data set. To avoid over-training of ANNs, a small subset of training data set, called validation data set, is used to constantly examine their performances during the course of training. Fig. 6
                      shows that, for the first ANN, the minimum MSE for validation data set (i.e., 6 × 10−3) occurs for 26 epochs and the training is stopped there. For the second ANN, the target MSE (i.e., 2 × 10−4) is attained for 6 epochs and the training is terminated at that point. To evaluate the performances of trained ANNs, 110 feature vectors x corresponding to testing data set are applied at the inputs of two ANNs. For the first ANN, the location of largest element in each corresponding output vector v
                     1 i.e., argmax{v
                     1}, gives the identified modulation format/bit-rate while the output v
                     2 of second ANN directly provides SNR estimate. The estimated modulation formats/bit-rates and SNRs are compared with the actual ones i.e., the ones given by y
                     1,2 of testing data set, and the estimation accuracies are computed.

The simulation results for joint modulation format and bit-rate classification are presented in Table 1
                     . The classification accuracies shown in Table 1 are computed by dividing the number of accurate classifications for a given modulation format and bit-rate with the total number of test cases pertaining to that signal type in the testing data set. Hence, a classification accuracy of 100%, for example, would mean that no error has occurred in classifying that signal type. It is obvious from the table that good classification accuracies are achieved for all the signal types considered in this work and in case of five out of six signal types, not a single identification error is encountered. The overall classification accuracy (i.e., mean of the accuracies for the individual signal types) is 99.12%. These results validate that the proposed technique is capable of simultaneous modulation format and bit-rate classification for SNR as low as 0 dB.


                     Fig. 7
                      shows the results for SNR estimation. It is clear from the figure that SNR estimates are quite accurate and the mean estimation error (i.e., average of the SNR estimation errors for 110 test cases in the testing data set) is 0.88 dB for SNR in the range between 0 and 30 dB. These results prove that the proposed technique is also capable of estimating the SNRs of received information-bearing signals.

From the above results, the proposed technique offers following advantages in terms of performance and complexity as compared to existing AMC techniques. (1) The proposed technique successfully enables joint modulation format and bit-rate classification. This is in contrast to current AMC techniques which focus only on the classification of unknown modulation format of the signal [6–14]. The ability to simultaneously classify the bit-rates of received signals is quite advantageous since the bit-rates are also expected to change dynamically in future wireless networks. The classification accuracy of proposed technique (i.e., 99.12%) is comparable with those of existing AMC techniques [6–14]. (2) One key limitation of the current AMC techniques is that they can only identify the type of signal but provide no information about the quality (in terms of SNR) of signal. On the other hand, the proposed technique enables simultaneous blind SNR estimation with good accuracy and without adding much complexity. (3) The proposed technique offers reduced implementation complexity. This is due to the fact that as compared to existing AMC and SNR estimation techniques which typically require coherent detection along with symbol-rate synchronous sampling [6–21], the proposed technique uses simple envelope detection followed by the low-speed ADTS which inherently does not need timing/clock information. (4) In contrast to existing techniques which employ separate algorithms for the determination of modulation format, bit-rate and SNR of received signal, the proposed technique jointly estimates these three parameters. Therefore, it is computationally more efficient than the current techniques.

We would like to emphasize that in our numerical simulations we have considered non-ideal and practical channel conditions. For example, we have tested the proposed technique against a wide SNR range of 0−30 dB. The results of 110 test cases clearly show that the technique is robust as it demonstrates classification accuracy of 99.12% and mean SNR estimation error of 0.88 dB over this wide SNR range. Therefore, we believe that the proposed technique is capable of delivering good performance in real-world scenarios.

@&#CONCLUSION@&#

In this paper, we proposed a simple technique for simultaneous modulation format/bit-rate classification and NDA SNR estimation in wireless networks. Unlike existing AMC techniques, the proposed technique enables accurate classification of not only modulation formats but also bit-rates of the signals. In addition, it can also accurately estimate the SNRs of received data-bearing signals. Due to its implementation simplicity, this technique can facilitate cost-effective modulation format/bit-rate classification and signal quality estimation in future cognitive radio terminals.

@&#ACKNOWLEDGMENTS@&#

The authors would like to acknowledge the support of Hong Kong Government General Research Fund under project numbers PolyU152079/14E and PolyU152109/14E, and National Science Foundation China under project number 61435006. This work was also supported by the Universiti Sains Malaysia under Research University Individual Grant (1001/PELECT/814203).

@&#REFERENCES@&#

