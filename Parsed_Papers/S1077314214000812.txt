@&#MAIN-TITLE@&#Monocular template-based 3D surface reconstruction: Convex inextensible and nonconvex isometric methods

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A convex SOCP based method with noise in template and image.


                        
                        
                           
                           The use of a continuous surface model based on an FFD.


                        
                        
                           
                           A nonconvex, statistically founded, and truly isometric reconstruction method.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D reconstruction

Template

Isometry

@&#ABSTRACT@&#


               
               
                  We study the 3D reconstruction of an isometric surface from point correspondences between a template and a single input image. The template shows the surface flat and fronto-parallel. We propose three new methods. The first two use a convex relaxation of isometry to inextensibility. They are formulated as Second Order Cone Programs (SOCP). The first proposed method is point-wise (it reconstructs only the input point correspondences) while the second proposed method uses a smooth and continuous surface model, based on Free-Form Deformations (FFD). The third proposed method uses the ‘true’ nonconvex isometric constraint and the same continuous surface model. It is formulated with Nonlinear Least-Squares and can thus be solved with the efficient Levenberg–Marquardt minimization method. The proposed approaches may be combined in a single pipeline whereby one of the convex approximations is used to initialize the nonconvex method. Our contributions solve two important limitations of current state of the art: our convex methods are the first ones to handle noise in both the template and image points, and our nonconvex method is the first one to use ‘true’ isometric constraints. Our experimental results on simulated and real data show that our convex point-wise method and our nonconvex method outperform respectively current initialization and refinement methods in 3D reconstructed surface accuracy.
               
            

@&#INTRODUCTION@&#

Monocular 3D surface reconstruction of deformable objects is a challenging problem which has gained interest over the past decade. Without additional priors, this is an ill-posed problem since there is an infinite number of deformable 3D surfaces with exactly the same projection. In this paper, we study monocular 3D reconstruction of deformable but isometric surfaces from a single input image and under two common assumptions [21,26,17]. First, we assume that point correspondences are available between the input image and a template image; the latter shows the surface flat and fronto-parallel. Second, we assume that the camera follows the pin-hole model with known intrinsic parameters [13]. This type of reconstruction algorithms may be used for thin-shell objects which may be physically flattened and which smoothly deform without stretching. Examples of such objects and deformations are a sheet of paper being gently bent, a flag waving in the wind and a piece of cloth on a moving body. However, non-physically flattening objects such as faces, even if they deform quasi-isometrically, cannot be handled by this type of algorithms.

Different types of constraints have been proposed to disambiguate the problem of monocular 3D reconstruction of deformable surfaces. These constraints can be divided into two main categories: statistical constraints and physical constraints. Constraints coming from both categories may of course be combined [1,7]. Statistical constraints include the very popular low-rank shape model applicable to template-free 3D reconstruction and leading to nonrigid factorization [4,1,3,7,15,27,28]. This constraint has been used in the template-based case by a priori learning a typical shape basis [10,22,24,21]. Physical constraints include temporal and spatial 3D surface priors [12,19] and isometric deformations [23,26,21,17].

Methods for monocular 3D reconstruction of deformable surfaces can be categorized by type of constraints but also by type of 3D surface model. The point-wise surface model uses a sparse set of 3D points, each of which generally associated to a known point correspondence [17]. The mesh-based surface model uses a set of connected, typically triangular facets [23,21]. The continuous surface model uses a smooth surface embedding which maps the template space to 3D [17,1].

The isometric deformation constraint is widely applicable and stable for 3D reconstruction. For instance, it approximates well the deformation of materials such as paper and fabric [17,21,23,26]. An isometric deformation preserves geodesic distances on the 3D surface across time. However, computing geodesics is a hard problem; it is consequently even harder to constrain their length in a 3D reconstruction algorithm. Two main ways have been proposed to implement the isometry constraint. The first way is the inextensibility relaxation that leads to convex inequality constraints on the 3D points’ coordinates. It upper bounds the Euclidean distance by the template geodesic distance for pairs of 3D points [23,21,26,17]. The second way is the Euclidean approximation that leads to quartic constraints on the 3D points’ coordinates. It preserves the Euclidean distance instead of the geodesic distance for pairs of closely spaced 3D points [25].

This paper proposes three new methods to improve template-based 3D reconstruction with the isometric deformation constraint. It extends our conference paper [6].

First, the current literature misses a convex algorithm solving the inextensibility relaxation and handling noise in both the template and the input image. We show that the maximum depth heuristic [17] with the inextensibility relaxation can be cast as an SOCP [2]. While previous work use iterative local optimization and model noise in the template image only [17] or in the input image only [23,21,26], our formulation models noise in both images. Our first implementation of this formulation uses a point-wise surface model; our second implementation uses a continuous surface model. In the latter case, we propose using an FFD with a compact B-spline kernel as opposed to the dense TPS kernel [17,1].

Second, the current literature misses a formulation of the isometric deformation constraint adapted to nonconvex optimization. We show that using a continuous surface model allows one to gracefully formulate the isometric deformation constraint as a Nonlinear Least-Squares cost function on the unknown continuous surface model.

We report extensive experimental results on simulated and real data. They show that our point-wise convex inextensibility method outperforms current initialization methods in terms of 3D reconstruction accuracy, but that directly including the continuous surface model degrades accuracy. Our nonconvex isometric method gives the most accurate results of all compared methods by a substantial margin. We give a careful analysis of these results and draw general conclusions.

We review related work in Section 2. We present our embedding-based continuous surface modeling in Section 3. We give our convex methods using inextensibility in Section 4 and our nonconvex method in Section 5. We report experimental results in Section 6 and conclude in Section 7.

We write scalars in italics, vectors in bold and matrices in sans-serif fonts. 
                           
                              K
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                    ×
                                    3
                                 
                              
                           
                         contains the camera’s intrinsic parameters (the camera lies at the world coordinate frame’s origin) and 
                           
                              
                                 
                                    p
                                 
                                 
                                    k
                                 
                                 
                                    T
                                 
                              
                           
                         is the kth row of matrix 
                           
                              K
                           
                        . The n point correspondences are written 
                           
                              (
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         with 
                           
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              n
                              }
                           
                         the point index, 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                         is the template point and 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ′
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                         the input image point. The homogeneous coordinates of point 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                           
                         are written 
                           
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                           
                        . The sightline corresponding to point 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                           
                         is given by 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          K
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          
                                             
                                                q
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                                 
                                    |
                                    |
                                    
                                       
                                          K
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          
                                             
                                                q
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    |
                                    |
                                 
                              
                           
                        , where 
                           
                              ‖
                              ·
                              ‖
                           
                         stands for the two-norm of a vector, matrix or tensor. The 3D reconstructed surface is written 
                           
                              S
                              ⊂
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                           
                        . The depth of the ith reconstructed 3D point 
                           
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                              ∈
                              S
                           
                         is written 
                           
                              
                                 
                                    μ
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    +
                                 
                              
                           
                        . The geodesic distance between two points 
                           
                              A
                              ∈
                              S
                           
                         and 
                           
                              B
                              ∈
                              S
                           
                         as measured on 
                           
                              S
                           
                         is written 
                           
                              
                                 
                                    d
                                 
                                 
                                    G
                                 
                              
                              (
                              A
                              ,
                              B
                              )
                           
                        , and the Euclidean distance is written 
                           
                              
                                 
                                    d
                                 
                                 
                                    E
                                 
                              
                              (
                              A
                              ,
                              B
                              )
                              =
                              ‖
                              A
                              -
                              B
                              ‖
                           
                        . The ‘reference’ geodesic distance easily measured from the flat fronto-parallel template image is written 
                           
                              
                                 
                                    d
                                 
                                 
                                    A
                                    ,
                                    B
                                 
                              
                           
                        . For the ith and jth point in particular it is written 
                           
                              
                                 
                                    d
                                 
                                 
                                    ij
                                 
                              
                              =
                              ∥
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                              ∥
                           
                        . 
                           
                              
                                 
                                    x
                                 
                                 
                                    ˆ
                                 
                              
                           
                         means the true value of x (for 
                           
                              x
                              ∈
                              {
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              ,
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    μ
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    d
                                 
                                 
                                    ij
                                 
                              
                              }
                           
                        ).

@&#RELATED WORK@&#

We review existing work on template-based isometric deformable 3D surface reconstruction. Mathematically, the isometry constraint can be stated as:
                        
                           (1)
                           
                              
                                 
                                    d
                                 
                                 
                                    G
                                 
                              
                              (
                              A
                              ,
                              B
                              )
                              =
                              
                                 
                                    d
                                 
                                 
                                    A
                                    ,
                                    B
                                 
                              
                              
                              ∀
                              A
                              ∈
                              S
                              
                              ∀
                              B
                              ∈
                              S
                              .
                           
                        
                     
                  

This constraint is nonconvex and has not received a formulation that easily fits in optimization since the geodesic distance 
                        
                           
                              
                                 d
                              
                              
                                 G
                              
                           
                           (
                           A
                           ,
                           B
                           )
                        
                      on the deformed surface 
                        
                           S
                        
                      does not have a general closed-form expression. Two main formulations can be found in the literature: the inextensibility relaxation and the Euclidean approximation.

The principle that underlies the convex inextensibility relaxation [21,17] is simple: the Euclidean distance between two points on an isometrically deforming surface cannot grow larger than the geodesic distance. The isometry constraint (1) can thus be relaxed to the following inextensibility constraint:
                           
                              (2)
                              
                                 
                                    
                                       d
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 A
                                 ,
                                 B
                                 )
                                 ⩽
                                 
                                    
                                       d
                                    
                                    
                                       A
                                       ,
                                       B
                                    
                                 
                                 
                                 ∀
                                 A
                                 ∈
                                 S
                                 
                                 ∀
                                 B
                                 ∈
                                 S
                                 .
                              
                           
                        
                     

It is worth noting that (1)
                        
                        
                           
                              ⇒
                           
                        
                        
                        (2) but that the opposite is not true, which is why the inextensibility constraint (2) is a relaxation of the isometry constraint (1). This relaxation applied to the set of point correspondences was used in conjunction with the maximum depth heuristic. This heuristic consists in forcing each 3D point 
                           
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                           
                         to lie on the sightline 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         by setting 
                           
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    μ
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         and maximizing the depth of the reconstructed 3D points by an ad hoc iterative algorithm [17]. This algorithm accounts for noise in the template image by slightly overestimating the geodesic distances 
                           
                              
                                 
                                    d
                                 
                                 
                                    ij
                                 
                              
                           
                        , replacing them by 
                           
                              
                                 
                                    d
                                 
                                 
                                    ij
                                 
                              
                              +
                              
                                 
                                    ε
                                 
                                 
                                    τ
                                 
                              
                           
                         where 
                           
                              
                                 
                                    ε
                                 
                                 
                                    τ
                                 
                              
                           
                         is an upper bound on the error made in the template point positions. No proof of convergence was given for this algorithm, though in practice it seems to always converge in a few iterations. Another implementation of the inextensibility constraint with the maximum depth heuristic was proposed in [23,21]. This implementation solves an SOCP where the cost function combines the depth of the reconstructed points and the negative reprojection error is maximized. It uses a mesh-based surface model and applies the inextensibility constraint to the mesh vertices. This cost function models noise in the input image point positions but not in the template point positions. A similar approach was explored in [26].

The Euclidean approximation replaces the geodesic distance in the isometry constraint (1) by the Euclidean distance for a set of closely spaced point pairs [22,23,29,26]:
                           
                              (3)
                              
                                 
                                    
                                       d
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 A
                                 ,
                                 B
                                 )
                                 ≈
                                 
                                    
                                       d
                                    
                                    
                                       A
                                       ,
                                       B
                                    
                                 
                                 
                                 ∀
                                 A
                                 ∈
                                 S
                                 
                                 ∀
                                 B
                                 ∈
                                 S
                                 
                                 
                                    
                                       d
                                    
                                    
                                       A
                                       ,
                                       B
                                    
                                 
                                 ⩽
                                 ∊
                                 ,
                              
                           
                        where 
                           
                              ∊
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    +
                                 
                              
                           
                         is a small constant. Note that enforcing 
                           
                              
                                 
                                    d
                                 
                                 
                                    E
                                 
                              
                              (
                              A
                              ,
                              B
                              )
                              =
                              
                                 
                                    d
                                 
                                 
                                    A
                                    ,
                                    B
                                 
                              
                           
                         in the Euclidean approximation (3) would not allow the surface to deform at all, which is why 
                           
                              
                                 
                                    d
                                 
                                 
                                    E
                                 
                              
                              (
                              A
                              ,
                              B
                              )
                              ≈
                              
                                 
                                    d
                                 
                                 
                                    A
                                    ,
                                    B
                                 
                              
                           
                         is used instead. In practice, the constraint is embedded as a nonconvex penalty in a compound cost function, and generally leads to a quartic cost term. Although this approximation works well in some cases it performs poorly when the surface bends too strongly. Note that the Euclidean approximation (3) is a stronger constraint than the inextensibility relaxation (2), though the former does not imply the latter.

@&#SUMMARY@&#

To summarize, existing work lacks two main important pieces. First, it lacks a convex solution which would handle noise in both the template and input images. Second, it lacks a simple formulation of the isometric constraint which could be easily used in a nonconvex optimization program. A direct consequence is that no algorithm was proposed to exploit the ‘true’ isometric constraints. Our contributions address these shortcomings.

We propose to use the template space 
                        
                           Ω
                           ⊂
                           
                              
                                 R
                              
                              
                                 2
                              
                           
                        
                      as a parameterization space for the surface 
                        
                           S
                        
                      to be reconstructed. This is in contrast to almost all previous works, which merely estimate the depth of a small set of point correspondences from the input image. This way, we are able to solve minimization problems over a set of continuous surfaces. We parameterize the set of admissible surfaces by Free-Form Deformations (FFD) [20] based on uniform cubic B-splines [8]. In practice, this amounts to defining an embedding 
                        
                           
                              
                                 W
                              
                              
                                 ℓ
                              
                           
                           :
                           
                           Ω
                           →
                           S
                        
                      that maps the template space to the unknown surface as an FFD, thus parametrized by a grid of 
                        
                           
                              
                                 n
                              
                              
                                 u
                              
                           
                           ×
                           
                              
                                 n
                              
                              
                                 v
                              
                           
                        
                      3D control points 
                        
                           
                              
                                 ℓ
                              
                              
                                 jk
                              
                           
                        
                      with 
                        
                           j
                           ∈
                           {
                           1
                           ,
                           …
                           ,
                           
                              
                                 n
                              
                              
                                 u
                              
                           
                           }
                        
                      and 
                        
                           k
                           ∈
                           {
                           1
                           ,
                           …
                           ,
                           
                              
                                 n
                              
                              
                                 v
                              
                           
                           }
                        
                     , which act as ‘attractors’ for the surface. For a template point 
                        
                           q
                           =
                           
                              
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                              
                                 ⊤
                              
                           
                        
                      the surface point is explicitly given as:
                        
                           (4)
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              q
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             u
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       
                                          
                                             n
                                          
                                          
                                             v
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    ℓ
                                 
                                 
                                    jk
                                 
                              
                              
                                 
                                    N
                                 
                                 
                                    j
                                 
                              
                              (
                              u
                              )
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                              (
                              v
                              )
                              .
                           
                        
                     
                  

The functions 
                        
                           
                              
                                 N
                              
                              
                                 j
                              
                           
                        
                      are the B-spline basis functions [8] which are cubic polynomials. If point 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                              
                                 ⊤
                              
                           
                        
                      is fixed and known then the surface point 
                        
                           
                              
                                 W
                              
                              
                                 ℓ
                              
                           
                           (
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                           )
                        
                      is expressed as a linear combination of the points 
                        
                           
                              
                                 ℓ
                              
                              
                                 jk
                              
                           
                        
                     , and hence can be written in the form 
                        
                           
                              
                                 W
                              
                              
                                 ℓ
                              
                           
                           (
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                           )
                           =
                           
                              
                                 W
                              
                              
                                 i
                              
                           
                           ℓ
                        
                     , where 
                        
                           
                              
                                 W
                              
                              
                                 i
                              
                           
                        
                      is a 
                        
                           3
                           ×
                           3
                           p
                        
                      matrix (
                        
                           p
                           =
                           
                              
                                 n
                              
                              
                                 u
                              
                           
                           
                              
                                 n
                              
                              
                                 v
                              
                           
                        
                     ) depending only on point 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                        
                     , and 
                        
                           ℓ
                        
                      is the vector obtained by concatenating all the control points 
                        
                           
                              
                                 ℓ
                              
                              
                                 jk
                              
                           
                        
                     . Using an FFD parameterization has three major advantages:
                        
                           •
                           
                              Linear continuous surface model. A 3D point is given as a linear function of the control point vector 
                                 
                                    ℓ
                                 
                              . This is especially important in our application, where we will show how to directly reconstruct a continuous surface with a convex formulation.


                              Local control. The control points have a bounded (local) influence. The polynomials 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          j
                                       
                                    
                                 
                               have a local support in cubic B-splines; the matrix 
                                 
                                    
                                       
                                          W
                                       
                                       
                                          i
                                       
                                    
                                 
                               is thus sparse, which is important for computational efficiency.


                              Analytical convex smoothing expression. The surface’s bending energy, which we use as a smoothing term, has a convex, Linear Least-Squares expression, in terms of the control points. This is again important to facilitate a convex formulation (see below).

We define our smoothing term using the bending energy as:
                        
                           (5)
                           
                              
                                 
                                    E
                                 
                                 
                                    s
                                 
                              
                              (
                              ℓ
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                       =
                                       1
                                    
                                    
                                       3
                                    
                                 
                              
                              
                                 ∫
                                 
                                    Ω
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∂
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      ℓ
                                                   
                                                   
                                                      m
                                                   
                                                
                                             
                                             
                                                ∂
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    2
                                 
                              
                              d
                              q
                           
                        
                     where 
                        
                           
                              
                                 W
                              
                              
                                 ℓ
                              
                              
                                 m
                              
                           
                           (
                           q
                           )
                        
                      is the mth coordinate of the point. With the FFD, there exists a simple and Linear Least-Squares closed-form expression for the bending energy:
                        
                           (6)
                           
                              
                                 
                                    E
                                 
                                 
                                    s
                                 
                              
                              (
                              ℓ
                              )
                              =
                              ∥
                              
                                 
                                    B
                                 
                                 
                                    1
                                    /
                                    2
                                 
                              
                              ℓ
                              
                                 
                                    ∥
                                 
                                 
                                    2
                                 
                              
                              =
                              
                                 
                                    ℓ
                                 
                                 
                                    T
                                 
                              
                              B
                              ℓ
                           
                        
                     where 
                        
                           B
                           ∈
                           
                              
                                 R
                              
                              
                                 3
                                 p
                                 ×
                                 3
                                 p
                              
                           
                        
                      is a symmetric, positive, and semi-definite matrix which can be easily computed from the second derivatives of the B-spline basis functions [5].

We propose a convex formulation of the inextensibility relaxation with the maximum depth heuristic that, as opposed to [17,23,21,26], accounts for noise in both the template and the input images. As in [23,21], our approach is formulated as an SOCP, but it does not require one to tune the relative influence of the negative reprojection error and the depths in the cost function.

We first formulate the inextensibility relaxation with the maximum depth heuristic as an SOCP. This first formulation is point-wise: it only reconstructs the point correspondences to 
                           
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                           
                        , using them via their sightlines 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              n
                              }
                           
                        . Importantly, noise is only accounted for in the template image. For any pair of points, the inextensibility constraint 
                           
                              ∥
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    Q
                                 
                                 
                                    j
                                 
                              
                              ∥
                              ⩽
                              
                                 
                                    d
                                 
                                 
                                    ij
                                 
                              
                              +
                              
                                 
                                    ε
                                 
                                 
                                    τ
                                 
                              
                           
                         can be written:
                           
                              (7)
                              
                                 ∥
                                 
                                    
                                       μ
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       μ
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       j
                                    
                                 
                                 ∥
                                 ⩽
                                 
                                    
                                       d
                                    
                                    
                                       ij
                                    
                                 
                                 +
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                                 .
                              
                           
                        
                     

The maximum depth heuristic leads to the following SOCP:
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      max
                                                   
                                                   
                                                      μ
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   μ
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                          
                                       
                                       
                                          
                                             
                                             ∥
                                             
                                                
                                                   μ
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   u
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   μ
                                                
                                                
                                                   j
                                                
                                             
                                             
                                                
                                                   u
                                                
                                                
                                                   j
                                                
                                             
                                             ∥
                                             ⩽
                                             
                                                
                                                   d
                                                
                                                
                                                   ij
                                                
                                             
                                             +
                                             
                                                
                                                   ε
                                                
                                                
                                                   τ
                                                
                                             
                                             
                                             ∀
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             ∈
                                             E
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                                
                                                   μ
                                                
                                                
                                                   i
                                                
                                             
                                             ⩾
                                             0
                                             
                                             i
                                             ∈
                                             {
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                             }
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    μ
                                 
                                 
                                    T
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             μ
                                          
                                          
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        , and 
                           
                              E
                              ⊂
                              
                                 
                                    {
                                    1
                                    ,
                                    …
                                    ,
                                    n
                                    }
                                 
                                 
                                    2
                                 
                              
                           
                         is a set of pairs of points to which the inextensibility constraint is applied. This is merely a reformulation of [17] as an SOCP. It thus shows that this formulation is convex, and does not require an iterative ad hoc minimization algorithm to be solved, as was proposed in [17].

We now suppose that the inaccuracies are expressed in terms of image measurements.

Suppose that points are measured in the image with a maximum error of 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                           . This leads to:
                              
                                 (9)
                                 
                                    ∥
                                    
                                       
                                          
                                             
                                                q
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    -
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    ∥
                                    ⩽
                                    
                                       
                                          ε
                                       
                                       
                                          τ
                                       
                                    
                                    ,
                                    
                                    ∀
                                    i
                                    ∈
                                    {
                                    1
                                    ,
                                    …
                                    ,
                                    n
                                    }
                                    .
                                 
                              
                           
                        

Since we are searching for the true 3D point 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                              
                            we can write:
                              
                                 (10)
                                 
                                    
                                       
                                          
                                             
                                                q
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                p
                                             
                                             
                                                3
                                             
                                             
                                                T
                                             
                                          
                                          
                                             
                                                Q
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            1
                                                         
                                                         
                                                            T
                                                         
                                                      
                                                      
                                                         
                                                            Q
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            2
                                                         
                                                         
                                                            T
                                                         
                                                      
                                                      
                                                         
                                                            Q
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

Eq. (9) can thus be rewritten as:
                              
                                 (11)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         3
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   
                                                      
                                                         Q
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     1
                                                                  
                                                                  
                                                                     T
                                                                  
                                                               
                                                               
                                                                  
                                                                     Q
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     2
                                                                  
                                                                  
                                                                     T
                                                                  
                                                               
                                                               
                                                                  
                                                                     Q
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             -
                                             
                                                
                                                   q
                                                
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    ⩽
                                    
                                       
                                          ε
                                       
                                       
                                          τ
                                       
                                    
                                    .
                                 
                              
                           
                        

Adding the inextensibility constraints and the maximization of the depths (which are given by 
                              
                                 
                                    
                                       p
                                    
                                    
                                       3
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                              
                           ) and we arrive at the following SOCP problem:
                              
                                 (12)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         max
                                                      
                                                      
                                                         Q
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                             
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 p
                                                                              
                                                                              
                                                                                 1
                                                                              
                                                                           
                                                                           T
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 p
                                                                              
                                                                              
                                                                                 2
                                                                              
                                                                           
                                                                           T
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               Q
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               q
                                                            
                                                            
                                                               i
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         
                                                            
                                                               p
                                                            
                                                            
                                                               3
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                         
                                                            
                                                               Q
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                                ⩽
                                                
                                                   
                                                      ε
                                                   
                                                   
                                                      τ
                                                   
                                                
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                ∀
                                                i
                                                ∈
                                                {
                                                1
                                                ,
                                                …
                                                ,
                                                n
                                                }
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                ∥
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      j
                                                   
                                                
                                                ∥
                                                ⩽
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ij
                                                   
                                                
                                                +
                                                
                                                   
                                                      ε
                                                   
                                                   
                                                      τ
                                                   
                                                
                                                
                                                ∀
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                ∈
                                                E
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ⩾
                                                0
                                                
                                                
                                                ∀
                                                i
                                                ∈
                                                {
                                                1
                                                ,
                                                …
                                                ,
                                                n
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 Q
                              
                            is the concatenation of the 3D points 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                              
                           , for 
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 }
                              
                           . This is the first proposed convex formulation which handles noise both in the template via 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            and in the image via 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                           .

We extend the above formulation (12) to incorporate the FFD-based continuous surface model proposed in Section 3, expressing 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                              
                            in terms of the control points 
                              
                                 ℓ
                              
                           , according to 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       W
                                    
                                    
                                       i
                                    
                                 
                                 ℓ
                              
                           . We show that one may solve for 
                              
                                 ℓ
                              
                            directly using SOCP. As in the previous approach, the linear smoothing term may be included in the estimation scheme. It results in the following SOCP formulation:
                              
                                 (13)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         max
                                                      
                                                      
                                                         ℓ
                                                         ,
                                                         r
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ℓ
                                                -
                                                r
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                             
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     W
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               ℓ
                                                               )
                                                            
                                                            
                                                               ⊤
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 p
                                                                              
                                                                              
                                                                                 1
                                                                              
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 p
                                                                              
                                                                              
                                                                                 2
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     W
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               ℓ
                                                               )
                                                            
                                                            
                                                               ⊤
                                                            
                                                         
                                                         
                                                            
                                                               p
                                                            
                                                            
                                                               3
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     q
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                            
                                                               T
                                                            
                                                         
                                                      
                                                   
                                                
                                                ⩽
                                                
                                                   
                                                      ε
                                                   
                                                   
                                                      τ
                                                   
                                                
                                                
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ℓ
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                
                                                
                                                ∀
                                                i
                                                ∈
                                                {
                                                1
                                                ,
                                                …
                                                ,
                                                n
                                                }
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                ∥
                                                (
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                                ℓ
                                                ∥
                                                ⩽
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ij
                                                   
                                                
                                                +
                                                
                                                   
                                                      ε
                                                   
                                                   
                                                      τ
                                                   
                                                
                                                
                                                ∀
                                                (
                                                i
                                                ,
                                                j
                                                )
                                                ∈
                                                E
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            W
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ℓ
                                                      )
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      3
                                                   
                                                
                                                ⩾
                                                0
                                                
                                                ∀
                                                i
                                                ∈
                                                {
                                                1
                                                ,
                                                …
                                                ,
                                                n
                                                }
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                λ
                                                
                                                   
                                                      
                                                         
                                                            
                                                               B
                                                            
                                                            
                                                               1
                                                               /
                                                               2
                                                            
                                                         
                                                         ℓ
                                                      
                                                   
                                                
                                                ⩽
                                                r
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 λ
                              
                            is the regularization weight (set to 
                              
                                 λ
                                 =
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       4
                                    
                                 
                              
                            in our experiments since the surface is already regularized by inextensibility, see the discussion in Section 5.4) and r is an additional variable added to the SOCP problem for minimizing the regularization term. Compared to the previous approach, this one reduces the number of steps to get an initial solution since no surface fitting is required as a post-processing. The reprojection error is now a hard constraint that the FFD must satisfy.

Although the maximum depth heuristic used in the previous section gives reasonable initialization results, it is merely a heuristic, not based on a valid principle related to surface properties. We therefore consider next a new formulation based on the ‘true’ isometry constraints. We start by presenting the principles underlying the 3D reconstruction of a continuous surface model under the isometric assumption expressed by Eq. (1). We then present an estimation method based on point correspondences and our FFD-based surface model. In particular, we will see that this leads to a Nonlinear Least-Squares problem for the continuous surface model’s control points.

Let the surface be modeled as a function 
                           
                              W
                              :
                              
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                              →
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                           
                        , mapping the planar template to 3-dimensional space. The inextensibility constraint is equivalent to having the continuous surface model 
                           
                              W
                           
                         to be a local isometry at every point over its domain. This condition may be expressed in terms of its Jacobian matrix. Let 
                           
                              J
                              (
                              q
                              )
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                    ×
                                    2
                                 
                              
                           
                         be the Jacobian matrix 
                           
                              
                                 
                                    ∂
                                    W
                                 
                                 
                                    ∂
                                    q
                                 
                              
                           
                         evaluated at point 
                           
                              q
                           
                        . The map 
                           
                              W
                           
                         is an isometry at 
                           
                              q
                           
                         if the columns of 
                           
                              J
                              (
                              q
                              )
                           
                         are orthonormal. This local isometry can be enforced for the whole surface with the following Nonlinear Least-Squares constraint:
                           
                              (14)
                              
                                 
                                    ∫
                                    
                                       Ω
                                    
                                 
                                 
                                    
                                       
                                          
                                             J
                                             
                                                
                                                   (
                                                   q
                                                   )
                                                
                                                
                                                   T
                                                
                                             
                                             J
                                             (
                                             q
                                             )
                                             -
                                             
                                                
                                                   I
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 d
                                 q
                                 =
                                 0
                                 .
                              
                           
                        
                     

In practice, we discretize Eq. (14) as:
                           
                              (15)
                              
                                 
                                    
                                       E
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 W
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             J
                                             
                                                
                                                   (
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                                
                                                   T
                                                
                                             
                                             J
                                             (
                                             
                                                
                                                   g
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                             -
                                             
                                                
                                                   I
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    {
                                    
                                       
                                          g
                                       
                                       
                                          j
                                       
                                    
                                    }
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    
                                       
                                          n
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                         is a dense set of 
                           
                              
                                 
                                    n
                                 
                                 
                                    ′
                                 
                              
                           
                         2D points in the template image space taken on a fine and regular grid (for instance, a grid of size 
                           
                              30
                              ×
                              30
                           
                        ). Note that the continuous surface model’s partial derivatives are computed analytically [5]. This term 
                           
                              
                                 
                                    E
                                 
                                 
                                    i
                                 
                              
                              (
                              W
                              )
                           
                         measures the departure from isometry of the continuous surface model 
                           
                              W
                           
                        . Our problem is then to minimize this quantity, over all possible surfaces, subject to the projection constraints, namely that point 
                           
                              W
                              (
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         projects close to the image point 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              ,
                              
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              n
                              }
                           
                        .

The general estimation scheme we use for implementing the isometry constraints consists in minimizing a cost function of the following form:
                           
                              (16)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          μ
                                          ,
                                          ℓ
                                       
                                    
                                 
                                 
                                 
                                    
                                       E
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 μ
                                 ,
                                 ℓ
                                 )
                                 +
                                 α
                                 
                                    
                                       E
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 ℓ
                                 )
                                 +
                                 β
                                 
                                    
                                       E
                                    
                                    
                                       s
                                    
                                 
                                 (
                                 ℓ
                                 )
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    E
                                 
                                 
                                    d
                                 
                              
                              ,
                              
                              
                                 
                                    E
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              
                                 
                                    E
                                 
                                 
                                    s
                                 
                              
                           
                         are the data, isometry, and smoothing terms respectively. The data term ensures the consistency of the reconstructed surface with the data. It is derived in the next section. The isometry term has been discussed directly above. The smoothing term promotes surfaces whose curvature is smallest, in order to cope with, for instance, a lack of point correspondences. A more detailed discussed is provided in the section after next. The relative influence of these three terms is controlled with the weights 
                           
                              α
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    +
                                 
                              
                           
                         and 
                           
                              β
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    +
                                 
                              
                           
                        . In practice, 
                           
                              α
                           
                         weighs the relative influence of the isometric deformation prior. Its optimal value is thus application dependent, since a large value will cause the reconstructed surface to be almost exactly applicable to the template, while a smaller value will relax isometry and let the surface to locally stretch. In our experiments, we have chosen to favor strongly isometric surfaces, since handling this type of surfaces has been our main goal in this paper, and set 
                           
                              α
                              =
                              
                                 
                                    10
                                 
                                 
                                    6
                                 
                              
                           
                        . A discussion on how to choose the value of 
                           
                              β
                           
                         is provided in Section 5.4.

As a consequence of the above discussion, all terms to be minimized are Linear or Nonlinear Least-Squares. We thus use the Levenberg–Marquardt algorithm to solve the minimization problem. This algorithm has proven extremely efficient for solving general geometric 3D computer vision problems [13]. Being iterative it requires an initial estimate, which can be directly provided by one of our convex algorithms as discussed in Section 5.5.

We give an estimation scheme for smooth surfaces that uses point correspondences. Instead of considering a hard upper-bounded constraint, as required by our SOCP approach in Section 4.2.2, which would require constrained Nonlinear Least-Squares optimization, we include the reprojection error into the cost function, leading to an unconstrained problem.

To simplify the formulation of the reprojection error, we introduce the depths 
                           
                              
                                 
                                    μ
                                 
                                 
                                    i
                                 
                              
                           
                         as ancillary variables, for reasons that shall become clear shortly. This is not strictly necessary, but this reduces the degree of the reprojection error term and convexifies the overall cost function. Replacing 
                           
                              
                                 
                                    Q
                                 
                                 
                                    i
                                 
                              
                           
                         by 
                           
                              
                                 
                                    W
                                 
                                 
                                    i
                                 
                              
                              ℓ
                           
                         and minimizing the left-hand side of Eq. (11) gives an expression for the reprojection error associated with point 
                           
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              n
                              }
                           
                        . However, the resulting expression is nonlinear with respect to the parameters 
                           
                              ℓ
                           
                        . A linear reformulation is obtained by introducing the depths 
                           
                              μ
                           
                         of the data points in the optimization problem, leading to the following expression of the data term:
                           
                              (17)
                              
                                 
                                    
                                       E
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 μ
                                 ,
                                 ℓ
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   W
                                                
                                                
                                                   ℓ
                                                
                                             
                                             (
                                             
                                                
                                                   q
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             -
                                             
                                                
                                                   μ
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   K
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         q
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        which measures the distance between the point 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                           
                         on the surface and the point at depth 
                           
                              
                                 
                                    μ
                                 
                                 
                                    i
                                 
                              
                           
                         along the viewing ray defined by 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                           
                        .

The point correspondences and the hypothesis of an inextensible surface may not be sufficient constraints. For instance, imagine that there is no point correspondences in a corner of the surface. In this case, nothing says how the surface behaves. The corners of the surface can bend freely as long as they do not extend or shrink (like the corners of a piece of paper). To overcome this difficulty, we add a third term (the smoothing term) in our cost function that favors non-bending surfaces. Note that usually, such terms are used to compensate for the undesirable effects of under-fitting and over-fitting. Doing so is usually a problem because it requires one to determine a correct value for the weight associated to the smoothing term (value 
                           
                              β
                           
                         in Eq. (16)). This balances the effective complexity of the surface against the complexity of the data. Its value is here not critical. Indeed, the complexity of the surface is limited by the fact that it is inextensible. Any small value (but large enough not to be negligible, for instance 
                           
                              β
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    4
                                 
                              
                           
                        ) is thus suitable for the weight of the smoothing term.

An initial estimate of the control point vector 
                           
                              ℓ
                           
                         and of the reconstructed point correspondences 
                           
                              μ
                           
                         is required to start minimizing the nonconvex cost. It can be directly provided by one of our convex algorithms.

Our convex point-wise surface model based algorithm of Section 4.2.1 directly provides the depth 
                              
                                 μ
                              
                            of the reconstructed point correspondences. The control point vector 
                              
                                 ℓ
                              
                            is then obtained using Linear Least-Squares. The idea is the consider the discrepancy between the estimated 3D points 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 }
                              
                            and the surface estimate, measured by the following equation:
                              
                                 (18)
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      ℓ
                                                   
                                                
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                -
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                    
                                    ⇔
                                    
                                    
                                       
                                          
                                             min
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ℓ
                                                -
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                    .
                                 
                              
                           
                        

We also include the Linear Least-Squares smoothing term (5) in the minimization, giving:
                              
                                 (19)
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                             ℓ
                                          
                                       
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ℓ
                                                -
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    λ
                                    ∥
                                    
                                       
                                          B
                                       
                                       
                                          1
                                          /
                                          2
                                       
                                    
                                    ℓ
                                    
                                       
                                          ∥
                                       
                                       
                                          2
                                       
                                    
                                    .
                                 
                              
                           
                        

In this equation, 
                              
                                 λ
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       +
                                    
                                 
                              
                            controls the desired amount of regularization, similarly to the smoothing term discussed in Section 5.4. We fix this parameter to 
                              
                                 λ
                                 =
                                 
                                    
                                       10
                                    
                                    
                                       -
                                       4
                                    
                                 
                              
                            since the FFD function is internally regularized. It thus only needs external regularization in areas with severely sparse data, where external regularization will not compete with any other terms. A short calculation gives the following closed-form solution:
                              
                                 
                                    ℓ
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                                +
                                                λ
                                                B
                                             
                                          
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          i
                                       
                                       
                                          ⊤
                                       
                                    
                                    
                                       
                                          Q
                                       
                                       
                                          i
                                       
                                    
                                    .
                                 
                              
                           
                        

Our convex continuous surface model based algorithm of Section 4.2.2 directly provides the control point vector 
                              
                                 ℓ
                              
                           . The depth 
                              
                                 μ
                              
                            of the reconstructed point correspondences is then obtained, for each point independently, by solving the point’s error following the data term (17):
                              
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                             
                                                
                                                   μ
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    ‖
                                    
                                       
                                          W
                                       
                                       
                                          ℓ
                                       
                                    
                                    (
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    -
                                    
                                       
                                          μ
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          K
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          
                                             
                                                q
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    
                                       
                                          ‖
                                       
                                       
                                          2
                                       
                                    
                                    .
                                 
                              
                           
                        

This is a convex, Linear Least-Squares problem which has the following closed-form solution:
                              
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            q
                                                         
                                                         
                                                            ¯
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ′
                                                      T
                                                   
                                                
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      -
                                                      T
                                                   
                                                
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      -
                                                      1
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            q
                                                         
                                                         
                                                            ¯
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          
                                             
                                                q
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                          T
                                       
                                    
                                    
                                       
                                          K
                                       
                                       
                                          -
                                          T
                                       
                                    
                                    
                                       
                                          W
                                       
                                       
                                          ℓ
                                       
                                    
                                    (
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    .
                                 
                              
                           
                        

@&#EXPERIMENTAL RESULTS@&#

We test and compare several algorithms from state of the art for template-based surface reconstruction. The details of these are given in Table 1
                     .

In our experiments, we first use synthetic data in order to assess the reconstructed surfaces against ground truth, and thus to measure some 3D surface error.


                           Images. We generated isometric surfaces using the code provided by [16]. The pieces of paper are of size A4 (i.e. 
                           
                              
                                 297
                                 ×
                                 210
                                 
                                 
                                    
                                       mm
                                    
                                    
                                       2
                                    
                                 
                              
                           ) and they are represented by a triangular mesh with 79,158 faces. The input images are simulated by projecting the deformed piece of paper with a virtual perspective camera placed at approximately 1m of the surface and with a focal length of 36mm. As shown in Fig. 1
                           , different texture-maps were used. A total number of 539 different images were generated using this process. A simple model of illumination (flat shading) was used to create the images with a single light source placed near the optical center simulating a flash light. The template image size ranges from 
                              
                                 1000
                                 ×
                                 707
                              
                            pixels to 
                              
                                 2291
                                 ×
                                 1620
                              
                            pixels and always has the aspect ratio of an A4 sheet. The input image size is fixed to 
                              
                                 1024
                                 ×
                                 768
                              
                            pixels. In the generation process, special care was taken to get high quality images by using, in particular, an anti-aliasing mechanism (the input images were first generated at a resolution of 
                              
                                 4096
                                 ×
                                 3072
                              
                            pixels and then subsampled to their final resolution of 
                              
                                 1024
                                 ×
                                 768
                              
                            pixels).


                           Point correspondences. We used two types of point correspondences. The isometric surface generator [17] provides a surface represented as a triangular mesh with 
                              
                                 79
                                 ,
                                 158
                              
                            faces whose vertices are located on a regular grid of size 
                              
                                 238
                                 ×
                                 168
                              
                           . The first type of point correspondences we used were extracted from these vertices (varying the number of extracted points and, if necessary, adding some noise on their location). The second type of point correspondences we used were SIFT keypoints automatically extracted from the generated images and matched using the FBDSD algorithm [18]. In this second case, the point correspondences are of course very realistic even though the images were synthetically generated.


                           Measured reconstruction errors. The discrepancy between the reconstructed and the true 3D surfaces was quantified with two measures, depending on the surface model used by the algorithms. The point-wise reconstruction error (pwre), denoted 
                              
                                 
                                    
                                       e
                                    
                                    
                                       p
                                    
                                 
                              
                           , can be measured for all the algorithms. It is defined by:
                              
                                 (20)
                                 
                                    
                                       
                                          e
                                       
                                       
                                          p
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    ∥
                                    
                                       
                                          Q
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          
                                             
                                                Q
                                             
                                             
                                                ^
                                             
                                          
                                       
                                       
                                          i
                                       
                                    
                                    ∥
                                    ,
                                 
                              
                           where n is the number of point correspondences, 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                              
                            is the ith reconstructed 3D point and 
                              
                                 
                                    
                                       
                                          
                                             Q
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                            is the true 3D location of that point. For algorithms that use more complex surface models, such as a triangular mesh or an FFD-based continuous surface model, we measured the surface reconstruction error (sre), denoted 
                              
                                 
                                    
                                       e
                                    
                                    
                                       s
                                    
                                 
                              
                           . It is defined as the integral difference between the reconstructed surface 
                              
                                 
                                    
                                       W
                                    
                                    
                                       ℓ
                                    
                                 
                              
                            and the true surface 
                              
                                 
                                    
                                       W
                                    
                                    
                                       ^
                                    
                                 
                              
                           :
                              
                                 (21)
                                 
                                    
                                       
                                          e
                                       
                                       
                                          s
                                       
                                    
                                    =
                                    
                                       ∫
                                       
                                          Ω
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   W
                                                
                                                
                                                   ℓ
                                                
                                             
                                             -
                                             
                                                
                                                   W
                                                
                                                
                                                   ^
                                                
                                             
                                          
                                       
                                    
                                    
                                    d
                                    q
                                    .
                                 
                              
                           
                        

In this experiment, we used all the 539 randomly generated paper sheets and we varied two parameters, while measuring pwre and sre:
                              
                                 •
                                 
                                    Point correspondence noise 
                                    
                                       
                                          σ
                                       
                                    
                                    . We added Gaussian noise to the position of the point correspondences with three different standard deviations 
                                       
                                          σ
                                       
                                    : 0, 1 and 2 pixels, keeping 
                                       
                                          n
                                          =
                                          247
                                       
                                    . The results are in Fig. 2
                                    .


                                    Number of point correspondences 
                                    n
                                    . We subsampled the point correspondences with three set sizes: 165, 247 and 368 points, keeping 
                                       
                                          σ
                                          =
                                          1
                                       
                                     pixel. The results are in Fig. 3
                                    .

We observe that the iterative algorithms 
                              
                                 PerrioInit
                              
                            and 
                              
                                 PerrioRef
                              
                            perform well in the absence of noise, but that their performances degrade substantially with noise. In the SOCP-based algorithms (Salz, PointSOCP, FFDSOCP and FFDInit), Salz works best for very small amounts of noise 
                              
                                 σ
                                 ≈
                                 0
                              
                            pixels, and closely follows 
                              
                                 PointSOCP
                              
                            and 
                              
                                 FFDInit
                              
                           . We can see that FFDSOCP gives poor results in most cases. This comes from the fact that this algorithm has to meet hard reprojection error constraints and the continuous surface model may lack flexibility; this may be due to an overweighted smoothing term or an underestimated number of control points. Finally, we can see that FFDRefPoints obtains the best results, except in the absence of noise, but the error is marginal at this point. This algorithm has the nice property of being rather insensitive to noise and number of point correspondences.

This experiment completes the previous one by drawing error statistics from automatically matched keypoint correspondences. Those were extracted as SIFT points [14] and matched using local consistency with the FBDSD method [18]. Contrarily to generated point correspondences, one cannot vary parameters such as noise. However, the whole setup is more realistic, and closely represents the type of results expected on real data, while providing ground truth for error assessment. The results are in Fig. 4
                           . Clearly, things are consistent with the previous set of experiments, confirming their validity. We have that FFDRefPoints performs best, followed by Salz with a discrepancy of a little less than an order of magnitude. The other five tested methods follow, all more or less at an order of magnitude of Salz, at the exception of FFDInit which stays a bit closer to Salz than the others.

For all experiments, we have monitored the computation time of all algorithms. We observed that, as expected, computation time is almost independent of image noise, but is strongly affected by the number of point correspondences. We therefore show representative results only for this parameter, in Fig. 5
                           . We observe that SOCP-based methods are quite slow, as well as our nonconvex FFDRefPoints method. Salz is an order of magnitude faster than the other SOCP methods. This is due to the reduced variable set which it optimizes over, thanks to a learnt surface model. PerrioInit and PerrioRef are extremely fast, as well as the surface initialization method FFDInit.

In this experiment, we measured to which extent our algorithms reconstruct an isometric surface. We evaluated this quantitatively by measuring the discrepancy between straight lines in the template and the geodesic corresponding to its endpoints in the reconstructed surface. We used the same data as in the previous experiments. For each surface, we randomly chose 
                              
                                 10
                                 ,
                                 000
                              
                            pairs of points in the template image. For each pair of points 
                              
                                 (
                                 
                                    
                                       g
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                           , the length 
                              
                                 
                                    
                                       l
                                    
                                    
                                       ij
                                    
                                    
                                       3
                                       D
                                    
                                 
                              
                            of the geodesic between the 3D points 
                              
                                 
                                    
                                       W
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       g
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            and 
                              
                                 
                                    
                                       W
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                            was computated as:
                              
                                 (22)
                                 
                                    
                                       
                                          l
                                       
                                       
                                          ij
                                       
                                       
                                          3
                                          D
                                       
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             
                                                
                                                   n
                                                
                                                
                                                   g
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   W
                                                
                                                
                                                   ℓ
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            
                                                               
                                                                  n
                                                               
                                                               
                                                                  g
                                                               
                                                            
                                                         
                                                      
                                                      ∥
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ∥
                                                   
                                                
                                             
                                             -
                                             
                                                
                                                   W
                                                
                                                
                                                   ℓ
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            k
                                                            -
                                                            1
                                                         
                                                         
                                                            
                                                               
                                                                  n
                                                               
                                                               
                                                                  g
                                                               
                                                            
                                                         
                                                      
                                                      ∥
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ∥
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 
                                    
                                       n
                                    
                                    
                                       g
                                    
                                 
                              
                            is the number of intermediate points used for the approximation (we use 
                              
                                 
                                    
                                       n
                                    
                                    
                                       g
                                    
                                 
                                 =
                                 200
                              
                            since we experimentally observed that the approximation stabilizes for values of 
                              
                                 
                                    
                                       n
                                    
                                    
                                       g
                                    
                                 
                              
                            greater than 180). The length 
                              
                                 
                                    
                                       l
                                    
                                    
                                       ij
                                    
                                    
                                       3
                                       D
                                    
                                 
                              
                            of the geodesic is plotted against the reference length 
                              
                                 
                                    
                                       l
                                    
                                    
                                       ij
                                    
                                    
                                       2
                                       D
                                    
                                 
                              
                            in Figs. 6 and 7
                           
                            against noise and number of points respectively.

We make the same observations on both sets of graphs. We observe that FFDInit violates isometry to a small extent. FFDSOCP however, despite using the same inextensibility relaxation of isometry as FFDInit, violates isometry to a large extent. This is explained by the fact that the continuous surface model, incorporated directly in FFDSOCP, may not be flexible enough to be able to force isometry. Finally, our nonconvex method FFDRefPoints respects isometry to a very good extent, and thus can be said as reconstructing truly isometric surfaces, as required.

The Gaussian curvature is the product of the two principal curvatures (which are the reciprocal of the radius of the osculating circle). For an isometric and developable surface, the Gaussian curvature vanishes. However, the Gaussian curvature is a highly nonlinear function of the surface parameters, and it would be difficult to minimize efficiently compared to the isometry constraint. In this experiment, we checked if this property was satisfied by the continuous surfaces reconstructed with FFDSOCP, FFDInit, and FFDRefPoints. We used the same 539 reconstructed surfaces as in the previous experiments. The Gaussian curvature, denoted 
                              
                                 κ
                              
                           , was computed for 
                              
                                 10
                                 ,
                                 000
                              
                            randomly chosen points on the surface with the formula 
                              
                                 κ
                                 =
                                 
                                    
                                       det
                                       (
                                       II
                                       )
                                    
                                    
                                       det
                                       (
                                       I
                                       )
                                    
                                 
                              
                           , where 
                              
                                 I
                              
                            and 
                              
                                 II
                              
                            are the first and the second fundamental forms of the parametric surface [11]. The results of this experiment are reported in Table 2
                           . It shows that, on average, the Gaussian curvature of the surfaces reconstructed using FFDRefPoints are consistently close to 0. It also shows that FFDRefPoints gives Gaussian curvatures which are two orders of magnitude lower than those obtained with FFDInit. These results demonstrate that the surfaces reconstructed with our approach FFDRefPoints are truly isometric, but also preserves the local surface structure of the template. On the other hand, FFDSOCP does not preserve well this local surface structure.

This set of experiments on synthetic data is intended to test the sensitivity of the algorithms on the various hyperparameters they involve (such as the noise level). All the experiments were conducted on the same synthetic data as previously with 
                              
                                 n
                                 =
                                 247
                              
                            point correspondences.


                           Method 
                           PointSOCP
                           . In the PointSOCP method, we study the influence of the parameters 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            of Eq. (12). These parameters account for the noise in the template and the input images respectively. For each level of noise 
                              
                                 σ
                              
                            added to the data point, we search the best values of 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                           , i.e. the values that minimize pwre. The results are showed in Figs. 8 and 9
                           
                           . These figures show that setting correctly 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            may be critical. Fig. 9 shows that there is an almost linear relationship between the standard deviation of the noise added to the data point and the supposed noise of the algorithm. Both figures show that, as a rule of thumb, 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                                 =
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                                 =
                                 2
                                 σ
                              
                            is an optimal choice, and that in practice, 
                              
                                 σ
                              
                            being generally unknown, overestimating is better than underestimating 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                                 =
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                           .


                           Methods 
                           PerrioInit
                           , 
                           PerrioRef
                           . These two methods have a single parameter to be set: 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                           , the supposed noise in the template image. The influence of this parameter is tested using exactly the same principle as for the PointSOCP algorithm. The results are displayed in Figs. 10 and 11
                           
                           . We draw the same conclusions as for PointSOCP: the results do depend on the hyperparameter. As a rule of thumb, for both PerrioInit and PerrioRef, 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                                 =
                                 4
                                 σ
                              
                            seems to be a quasi optimal choice, and 
                              
                                 
                                    
                                       ε
                                    
                                    
                                       τ
                                    
                                 
                              
                            is better overestimated.


                           Method 
                           Salz
                           . As described in [21], the method Salz has a weight 
                              
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                              
                            that controls the relative influence of two terms in a cost function to minimize (one of these terms accounts for the consistency between the reprojection of the 3D points and their actual location in the input image, the second one quantifies the distance between the 3D points and their corresponding line of sight). In [21], the authors recommend to set 
                              
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                              
                            to 
                              
                                 
                                    
                                       2
                                    
                                    
                                       3
                                    
                                 
                              
                           . We studied the influence of this parameter using a principle similar to the one used previously with two noticeable differences. First, for computational complexity purposes, we added a Gaussian noise to the data points only in the input image (which explains why we used standard deviations twice as large as in the previous cases). Second, the quantification of the quality of a reconstructed surface is evaluated with sre instead of pwre. The results are shown in Figs. 12 and 13
                           
                           . These figures show that a value of 2 for 
                              
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                              
                            is preferable to 
                              
                                 
                                    
                                       2
                                    
                                    
                                       3
                                    
                                 
                              
                           . Besides, when overestimated, 
                              
                                 
                                    
                                       w
                                    
                                    
                                       d
                                    
                                 
                              
                            does not degrade the results much compared to its optimal value.

We compared our algorithms to existing ones on several real datasets. The three first were provided by other authors and we created the last one. Our nonconvex method FFDRefPoints gives the best results in all cases. We deal with the problem of establishing point correspondences with different state-of-the-art methods, from direct video stream tracking [9], robust fitting of a warp function and local consistency based filtering [18]. The first method is only applicable for videos, but is probably the best choice in this case. The second and third methods are applicable to two images. The second method works very well if the images are similar to each other, while the third one is specifically designed to the wide-baseline case, where the input image may be very different from the template.


                        The checkerboard dataset 
                        
                           [17]
                        
                        . This first dataset, provided by [17], shows a bent piece of paper printed with a checkerboard pattern. For this dataset, the point correspondences were established manually by clicking. Ground truth was available from stereo reconstruction, and allowed use to compute pwre for all algorithms:
                           
                              
                                 
                                 
                                 
                                 
                                 
                                 
                                    
                                       
                                          PerrioRef
                                       
                                       
                                          PointSOCP
                                       
                                       
                                          Salz
                                       
                                       
                                          FFDInit
                                       
                                       
                                          FFDRefPoints
                                       
                                    
                                    
                                       2.39mm
                                       2.26mm
                                       4.74mm
                                       2.26mm
                                       
                                          1.99
                                          
                                          mm
                                       
                                    
                                 
                              
                           
                        
                     

A visualization of the reconstruction surfaces is shown in Fig. 14
                        . All methods give decent qualitative visual results. However, in terms of 3D accuracy, Salz gave the worst results, with a 3D error about twice as large as the other methods. PerrioRef, PointSOCP and FFDInit gave similar 3D errors, while FFDRefPoints gave the lowest average 3D error, below 2mm.


                        The self-occluded paper dataset 
                        
                           [9]
                        
                        . This second dataset, provided by [9], shows a piece of paper with a printed natural texture and bent in a way that creates a strong self-occlusion (about half of the surface is hidden in the input image). This makes this dataset difficult for the algorithms since the hidden part of the surface has to be inferred from the visible parts only from isometry. The point correspondences were obtained by sampling an image warp function which was fitted using a direct method to a video stream. The reconstruction results are shown in Fig. 15
                        . For this dataset, we had no ground truth, and could not report quantitative results. However, we can observe that all methods recover the paper’s global shape to some extent. However, only Salz, FFDInit and FFDRefPoints were able to reconstruct the self-occluded part. Our nonconvex method, FFDRefPoints, clearly does better in recovering the paper’s shape than the others, even in the self-occluded part, which we consider as a very successful result.


                        The deforming paper dataset 
                        
                           [22]
                        
                        . This third dataset, provided by [22], shows a piece of paper being smoothly bent in front of the camera. The deformation does not create self-occlusions or external occlusions. However, a difficulty is that the point correspondences provided in this datasets contain noise and a few mismatches. Another difficulty is that the imaging conditions are close to affine, while all tested algorithms explicitly use a perspective camera model. We discard them prior to applying the reconstruction methods, by robustly fitting a 2D FFD warp [20,18] using an M-estimator, and sampling it over a 
                           
                              (
                              25
                              ×
                              25
                              )
                           
                         regular grid. This process reduces the amount of noise in the point positions. The initial correspondences and the estimated warp can be seen in Fig. 16
                        . The reconstruction results are showed in Fig. 17
                        . We do not have groundtruth for this dataset. However, the surface deformation is so simple that the reconstruction quality can be easily assessed visually, at least qualitatively. We observe that the reconstruction of all methods captures the surface’s bulk shape for all frames. All methods then generate artefacts on at least some of the frames. These happen at different places of the surface. The only exception is FFDRefPoints, which visually produces the best surface reconstruction for all frames, closely followed by PointSOCP. The largest artefacts seems to be provided by PerrioRef, FFDInit and FFDSOCP, while PerrioInit and Salz do slightly better.


                        The zooming paper dataset. We propose this new dataset, which is original in that it provides several calibrated levels of zoom for the same surface and the same camera (we here show four levels of zoom in increasing order). The stronger the zoom, the more affine the imaging conditions become, and thus the more challenging the data become for the tested perspective algorithms. The template was matched to the input image entirely automatically using FBDSD [18]. The intuition in FBDSD is that, for a surface, points close in space will tend to move ‘together’; mismatches thus form locally inconsistent motion fields. The correspondence results, as well as the estimated image warp, are shown in Fig. 18
                        . The 3D reconstruction results are shown in Fig. 19
                        . All methods but FFDSOCP find the surface’s bulk shape. Because of the high density of point correspondences, PerrioInit, PerrioRef, Salz, PointSOCP and FFDInit obtain very neat and smooth results, up to some small artefacts. Our refinement method FFDRefPoints clearly gives the best results in terms of visual impression.

@&#CONCLUSION@&#

We have presented new approaches for monocular 3D reconstruction of inextensible surfaces imaged by a perspective camera. First, we have proposed an SOCP formulation of the problem that accounts for noise in both the template and the input images. Second, we have designed an algorithm that directly integrates a continuous surface model based on Free-Form Deformations within the SOCP formulation. Third, we have given a nonconvex algorithm which, using Nonlinear Least-Square refinement, obtains the continuous surface model parameters by refining an initial guess. We have given a thorough experimental evaluation of the sensitivity of our methods and others from the literature to their hyperparameters, and have compared all methods in terms of reconstruction accuracy on simulated and real datasets. This has allowed us to draw the following important conclusions.

(i) SOCP methods are generally working reasonably in terms of accuracy, though they are slow, and do not scale well with the number of point correspondences or surface model complexity. They are sensitive to the selected noise level, and a bit less to the smoothing parameter. (ii) Incorporating a surface model in the SOCP framework has not worked well in most of our experiments, and we do not recommend to do so. (iii) Finally, nonlinear refinement is important, and improves the result of the tested methods by a substantial margin. We have showed that our formulation of nonlinear refinement produces truly isometric deformations, as opposed to initialization methods. Being able to enforce this type of physical constraints is one of the keys to increase 3D accuracy.

In our future work, we are planning to use the image color information directly to further improve 3D reconstruction. We would want to initialize a so-called direct approach from an existing feature-based method, so as to be able to use the whole image content, which we believe is particularly important for tasks such as reconstructing a deformable surface, which by definition requires localized information.

@&#ACKNOWLEDGMENTS@&#

Florent Brunet has been partly funded by Conseil Régional d’Auvergne and Richard Hartley by NICTA and the Australian Government through the Australian Research Council. This research has received funding from the EU’s FP7 through the ERC research Grant 307483 FLEXABLE.

@&#REFERENCES@&#

