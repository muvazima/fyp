@&#MAIN-TITLE@&#Volume element model mesh generation strategy and its application in ship thermal analysis

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present a hexahedral mesh generation strategy for the volume element model.


                        
                        
                           
                           The proposed mesh generation strategy is applied in ship thermal analysis.


                        
                        
                           
                           Highly accurate representations of the ship geometry can be achieved.


                        
                        
                           
                           Plausible ship thermal solutions are obtained using a coarse independent mesh.


                        
                        
                           
                           The strategy enhances the overall computational efficiency of the VEM.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Volume element model

Ship mesh generation

Ship thermal analysis

All-electric ships

Hexahedral mesh

Ray tracing

@&#ABSTRACT@&#


               
               
                  This paper introduces a mesh generation strategy devised and implemented for the volume element model (VEM), and elaborates key contributions of the strategy in enhancing the VEM as a prominent tool in ship thermal modeling and simulation. The VEM mesh generation strategy employs ray crossings and ray– triangle intersection algorithms developed in previous studies, and constructs sufficiently accurate geometric representations of the whole ship within permissible time frame using hexahedral meshes. In addition, this work demonstrates the strategy’s practicality in thermal analysis of a notional all-electric ship, which is characterized by intricate structures and multiple internal components, i.e., thermal loads. Ship thermal solutions obtained in this assessment verify the proposed mesh generation strategy’s ability to improve the overall computational efficiency of the VEM, by allowing it to obtain plausible thermal solutions with respect to time and space using a coarse independent mesh.
               
            

specific heat (J/kg  K)

thermal conductivity (W/m  K)

length (m)

total number

number

normal

array of volume element vertex coordinates

pressure (Pa)

heat transfer rate (W)

point

ray

triangle

temperature

time

volume (m3); vertex

Cartesian coordinates

divider thickness (m)

volume element length (m)

mesh refinement relative error

plane

density (kg/m3)

relative humidity

energy (J)

solution vector

convection

bottom

divider

east

equivalent

generation

VE index

VE face index

maximum

minimum

mesh

north

actual component weighted average

south

top

vapor

volume element

saturation pressure

west


                        x-direction


                        y-direction


                        z-direction

@&#INTRODUCTION@&#

Volume element model (VEM) is a three-dimensional (3D) dynamic reduced-order model developed for its application in thermal systems engineering [1]. The scheme discretizes the domain of interest (i.e., system under analysis) in three dimensions using a cell-centered finite-volume scheme [2]. Subsequently, fundamental laws of thermodynamics and heat transfer are applied to each cell in conjunction with empirical correlations in order to quantify the energy transfer between cells. The resulting system of nonlinear ordinary differential equations (ODEs) with respect to time is solved using an appropriate numerical method according to the problem under consideration. The scheme has been employed to study thermal responses of several dynamic systems [1,3,4], and it has been experimentally validated using Power Electronic Building Blocks [5] and an Off-Grid Zero Emissions Building [6].

The mesh generation strategy devised and implemented into the VEM plays a key role in the enhancement of the overall VEM computational efficiency, defined as accuracy achieved per unit execution time [2]. The proposed VEM mesh generation strategy creates a ship mesh composed of structured hexahedral elements within acceptable time frame, and it allows the VEM to obtain plausible numerical solutions using a coarse independent mesh. Furthermore, the strategy allows for the visualization and analysis of VEM computational grids and numerical results using VisIt visualization software [7].

In recent years, several studies have been published proposing methods to construct and refine hexahedral meshes [8–17]. Mesh generation techniques and algorithms developed in previous works created 3D meshes with great accuracy as a result of novel refinement techniques like the octree node-boundary adjustment. The technique presented by Ito et al. [13], for instance, is an effective mesh generation and refinement method which allows to construct computational grids of large and complex geometries with a small number of hexahedral elements. In addition, Ruiz et al. [16] combined grid-based and advancing front methods to generate unstructured hexahedral meshes of exterior domains and reproduce the shape of distorted boundaries.

According to [18], hexahedral meshes are often preferred over other meshes (e.g., tetrahedral), when available, for a variety of reasons. Typically, tetrahedral meshes require 4–10 times more elements than a hexahedral mesh to obtain the same level of accuracy [19,20]. Furthermore, in some types of numerical approximations (e.g., high deformation structural finite element analysis), tetrahedral elements are mathematically stiffer due to a reduced number of degrees of freedom associated with a tetrahedral element [21]. In their paper [18], Shepherd and Johnson also outline existing constraints of hexahedral meshes and propose possible solutions to overcome such limitations.

Hexahedral meshes have been employed to solve a variety of problems ranging from CFD to metal forming processes [9–11,17,19,21,22]. In [10], Kwak and Im studied the practicality of employing hexahedral elements for 3D metal forming simulations. Based on their assessment using distributions of effective strain-rate graident and posteriori error values, the authors construed that the proposed hexahedral mesh could be effectively used to simulate metal formations. De Santis et al. [17] developed a full-hexahedral structured meshing technique for image-based computational vascular modeling. The authors indicated that in solving the Navier– Stokes equations in a left coronary artery, tetrahedral (unstructured) meshes needed much higher resolution than structured hexahedral meshes to reach mesh independency, with higher computational costs. Such differences were also reported in other studies and were attributed to the misalignment of meshes with the flow direction, causing high numerical diffusion error associated with unstructured meshes [22,23].

Among numerous dynamic systems, ship thermal modeling and simulation, in particular, generally require an exorbitant amount of time to obtain mesh-independent solutions due to large and complex ship geometry (e.g., curved surfaces) and multiple internal components. As a result, numerous ship mesh generation techniques have been presented previously [24–27] in efforts to expedite mesh construction and refinement processes for finite element method. These techniques, however, are restricted to finite element analysis which usually demands high computing power to generate mesh and simulate large systems such as ships. Therefore, the objective of this paper is to present the effort to apply hexahedral mesh generation techniques and algorithms developed previously [13,28,29] to the VEM. In addition, the practicality of the proposed mesh generation strategy in ship thermal modeling and simulation is discussed with an example problem.

The computational domain in the VEM is discretized into a coarse structured mesh constituted of lumped control volumes, i.e., volume elements (VEs). The mesh generation strategy proposed in this paper consists of the following steps: (1) extraction of geometric information from a STL file; (2) generation of an enclosing mesh block that has sufficient size to comprise the entire CAD geometry and (3) intersection of the CAD geometry with the enclosing mesh block to produce the actual mesh. Furthermore, the strategy includes two additional steps in preparation for the numerical solver associated with the VEM: (i) assignment of physical properties to each corresponding volume element in the computational domain and (ii) writing output files for VisIt and the solver. The mesh generation algorithm is written in FORTRAN to facilitate its coupling with the VEM solver [30].

The mesh generation process initiates by reading the geometric information from a STL file in ASCII format, then numbers each triangle and saves the coordinates of its vertex and unit normal vector into separate arrays. In addition, the algorithm reads an user-input text file including: the total desired number of VEs in x, y, and z directions, number of vertical (e.g., walls, bulkheads, etc.) and horizontal (e.g., decks) dividers with predefined thicknesses, and spatial location, physical dimensions, as well as component (e.g., ship equipment) properties. Ships, for instance, feature bulkheads and decks to represent distinct compartments, zones, etc., and they often prevent the energy transfer between these spaces via heat and/or mass. VEs representing dividers may or may not have smaller volume depending on their predefined thickness. Assignment of multiple ship components within the mesh will further be discussed in Section 2.4.

The next step in the VEM mesh generation strategy is to create an enclosing mesh block of hexahedral elements as shown in Fig. 1
                        
                        
                        . The extreme values of x, y, and z (xmin, xmax, ymin, ymax, zmin
                        , and zmax
                        ) are identified in the array of vertices extracted from the STL file discussed in Section 2.1. Then the enclosing mesh block dimensions are determined as: 
                           
                              
                                 L
                                 x
                              
                              =
                              
                                 x
                                 
                                    m
                                    a
                                    x
                                 
                              
                              −
                              
                                 x
                                 
                                    m
                                    i
                                    n
                                 
                              
                              ,
                              
                                 L
                                 y
                              
                              =
                              
                                 y
                                 
                                    m
                                    a
                                    x
                                 
                              
                              −
                              
                                 y
                                 
                                    m
                                    i
                                    n
                                 
                              
                              ,
                           
                         and 
                           
                              
                                 L
                                 z
                              
                              =
                              
                                 z
                                 
                                    m
                                    a
                                    x
                                 
                              
                              −
                              
                                 z
                                 
                                    m
                                    i
                                    n
                                 
                              
                           
                         in the x, y and z directions, respectively.

In order to fit all VEs within the enclosing mesh block, the element size (i.e., volume) is computed based on Lx, Ly, Lz
                        , the total number of elements in each respective spatial direction, and the total number of dividers with predefined thicknesses. The VE length in each spatial direction, δx, δy
                        , and δz
                        , is computed as follows:

                           
                              (1a)
                              
                                 
                                    
                                       
                                          
                                             δ
                                             x
                                          
                                       
                                       
                                          
                                             =
                                             
                                                
                                                   
                                                      L
                                                      x
                                                   
                                                   −
                                                   
                                                      β
                                                      x
                                                   
                                                   ·
                                                   
                                                      N
                                                      
                                                         d
                                                         i
                                                         v
                                                         ,
                                                         x
                                                      
                                                   
                                                
                                                
                                                   
                                                      N
                                                      
                                                         VE
                                                         ,
                                                         x
                                                      
                                                   
                                                   −
                                                   
                                                      N
                                                      
                                                         d
                                                         i
                                                         v
                                                         ,
                                                         x
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (1b)
                              
                                 
                                    
                                       
                                          
                                             δ
                                             y
                                          
                                       
                                       
                                          
                                             =
                                             
                                                
                                                   
                                                      L
                                                      y
                                                   
                                                   −
                                                   
                                                      β
                                                      y
                                                   
                                                   ·
                                                   
                                                      N
                                                      
                                                         d
                                                         i
                                                         v
                                                         ,
                                                         y
                                                      
                                                   
                                                
                                                
                                                   
                                                      N
                                                      
                                                         VE
                                                         ,
                                                         y
                                                      
                                                   
                                                   −
                                                   
                                                      N
                                                      
                                                         d
                                                         i
                                                         v
                                                         ,
                                                         y
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (1c)
                              
                                 
                                    
                                       
                                          
                                             δ
                                             z
                                          
                                       
                                       
                                          
                                             =
                                             
                                                
                                                   
                                                      L
                                                      z
                                                   
                                                   −
                                                   
                                                      β
                                                      z
                                                   
                                                   ·
                                                   
                                                      N
                                                      
                                                         d
                                                         i
                                                         v
                                                         ,
                                                         z
                                                      
                                                   
                                                
                                                
                                                   
                                                      N
                                                      
                                                         VE
                                                         ,
                                                         z
                                                      
                                                   
                                                   −
                                                   
                                                      N
                                                      
                                                         d
                                                         i
                                                         v
                                                         ,
                                                         z
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where βx, βy
                        , and βz
                         are divider thicknesses; N
                        
                           div, x
                        , N
                        
                           div, y
                        , and N
                        
                           div, z
                         are the total number of dividers; and N
                        VE, x
                        , N
                        VE, y
                        , and N
                        VE, z
                         the total number of VEs; all in their respective spatial directions. In the light of the VEM solver, the number of VEs in each respective spatial direction is arbitrarily chosen for the first mesh, then it is successively refined until convergence is established according to the prescribed criterion for the problem under analysis. An example of VEM mesh geometry is illustrated in Fig. 2, where 
                           
                              
                                 N
                                 
                                    d
                                    i
                                    v
                                    ,
                                    x
                                 
                              
                              =
                              
                                 N
                                 
                                    d
                                    i
                                    v
                                    ,
                                    y
                                 
                              
                              =
                              
                                 N
                                 
                                    d
                                    i
                                    v
                                    ,
                                 
                              
                              =
                              1
                           
                         and 
                           
                              
                                 N
                                 
                                    VE
                                    ,
                                    x
                                 
                              
                              =
                              
                                 N
                                 
                                    VE
                                    ,
                                    y
                                 
                              
                              =
                              
                                 N
                                 
                                    VE
                                    ,
                                    z
                                 
                              
                              =
                              3
                           
                        .

Once its size (i.e., volume) is computed, VEs are constructed from the bottom left corner < xmin, ymin, zmin
                         > (refer to Fig. 1) in order to retain the coordinate information and the origin of the CAD geometry. Note that these minimum extreme coordinates are not necessarily the origin since these values may be negative instead of < 0, 0, 0 >. The algorithm then calculates the number of VEs between dividers n
                        
                           div, i
                         according to the following equation:

                           
                              (2)
                              
                                 
                                    
                                       n
                                       
                                          d
                                          i
                                          v
                                          ,
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             N
                                             
                                                VE
                                                ,
                                                i
                                             
                                          
                                          −
                                          
                                             N
                                             
                                                d
                                                i
                                                v
                                                ,
                                                i
                                             
                                          
                                       
                                       
                                          
                                             N
                                             
                                                d
                                                i
                                                v
                                                ,
                                                i
                                             
                                          
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                        where 
                           
                              i
                              =
                              x
                              ,
                           
                         
                        y, or z. Since most physical systems have predefined number of dividers, this equation can be used to determine N
                        VE, i
                         based on the desired number of VEs between dividers. Such calculation also guarantees uniform divisions of volume elements in the mesh.

Three loops are initiated to construct the enclosing mesh block with element length δx, δy
                        , and δz
                         for each respective spatial direction. Fig. 3 illustrates the construction process for the mesh depicted in Fig. 2 in a chronological order. In Fig. 3a, the lines are drawn from the < xmin, ymin, zmin
                         > with lengths δx
                         or βx
                        , depending on the number of VEs and dividers. Pxyz
                         is an array in which Cartesian coordinates of each VE vertex are saved according to its nodal point. In this example, there are two VEs in the x-direction with a divider in the middle. If 
                           
                              <
                              
                                 x
                                 
                                    m
                                    i
                                    n
                                 
                              
                              ,
                              
                                 y
                                 
                                    m
                                    i
                                    n
                                 
                              
                              ,
                              
                                 z
                                 
                                    m
                                    i
                                    n
                                 
                              
                              >
                              =
                              <
                              0
                              ,
                              0
                              ,
                              0
                              >
                              ,
                           
                         then 
                           
                              
                                 P
                                 111
                              
                              =
                              <
                              0
                              ,
                              0
                              ,
                              0
                              >
                           
                        . Similarly, 
                           
                              
                                 P
                                 211
                              
                              =
                              <
                              
                                 δ
                                 x
                              
                              ,
                              0
                              ,
                              0
                              >
                              ,
                           
                        
                        
                           
                              
                                 P
                                 311
                              
                              =
                              <
                              
                                 δ
                                 x
                              
                              +
                              
                                 β
                                 x
                              
                              ,
                              0
                              ,
                              0
                              >
                              ,
                           
                         and 
                           
                              
                                 P
                                 411
                              
                              =
                              <
                              2
                              
                                 δ
                                 x
                              
                              +
                              
                                 β
                                 x
                              
                              ,
                              0
                              ,
                              0
                              >
                           
                        . The same procedure is followed in the y-direction as shown in Fig. 3b. Once the x– y plane is constructed, the algorithm repeats the same steps for P
                        
                           xy2 and so on as illustrated in Fig. 3c and d. For instance, the coordinates of P
                        441, P
                        232, and P
                        113 are 
                           
                              <
                              2
                              
                                 δ
                                 x
                              
                              +
                              
                                 β
                                 x
                              
                              >
                              ,
                           
                        
                        
                           
                              <
                              2
                              
                                 δ
                                 y
                              
                              +
                              
                                 β
                                 y
                              
                              ,
                              0
                              >
                              ,
                           
                        
                        
                           
                              <
                              
                                 δ
                                 x
                              
                              ,
                              
                                 δ
                                 y
                              
                              +
                              
                                 β
                                 y
                              
                              ,
                              
                                 δ
                                 z
                              
                              >
                              ,
                           
                         and 
                           
                              <
                              0
                              ,
                              0
                              ,
                              
                                 δ
                                 z
                              
                              +
                              
                                 β
                                 z
                              
                              >
                              ,
                           
                         respectively. Each loop ends when the counter equals the sum of the number of VEs and dividers in each spatial direction. In case non-uniform divisions (i.e., an unequal number of VEs between dividers) are desired, the user can modify the algorithm to specify the number of VEs between dividers.
                     

Once the enclosing mesh block is generated, every VE is locally numbered with nodal points based on the right hand rule discussed in [28].

In order to obtain the final mesh, VEs lying outside of the actual CAD geometry in the enclosing mesh block as illustrated in Fig. 4, must be eliminated. Previously, Lee and Yang [9] obtained the provisional mesh (final mesh) by taking grid points and cells of the superimposed uniform grid (enclosed mesh block) in the domain to be meshed as nodes and elements of the new mesh, respectively. In their work, a grid point was inside the domain of interest if it belonged to an element in the old mesh and was composed of six pyramids with positive volume. The elimination process in the proposed mesh generation strategy is performed by employing ray crossings and ray– triangle intersection algorithms [29,31].

Ray crossings technique consists of drawing a ray from each mesh element center in an arbitrary direction and counting the number of intersections of the ray with the triangles. The element is located inside or outside of the CAD boundary if the number is odd or even, respectively. An example of ray crossings is elaborated with a 20-edge polygon depicted in Fig. 5
                        , where q
                        1, q
                        2, and q
                        3 are points from which rays R1, R2
                        , and R3
                         are drawn. According to the figure, R1
                         has an odd number of crossings while R2
                         crosses the boundary twice; hence the point q
                        1 is inside and q
                        2 is outside of the domain. Special attention must be paid to any ray that hits a vertex, is collinear with an edge, or lies directly on the domain boundary; this is exemplified by R3
                        . In order to handle these special-case intersections, the algorithm proposed in this paper applies the convention presented in [32], where for an edge to count as a crossing of a ray, one of the edge’s endpoints must be strictly above the ray, and the other endpoint on or below. Based on this convection, edges (4, 5) and (3, 4) are not crossings while edges (6, 7), (11, 12), and (12, 13) do count as crossings. Therefore q
                        3 is determined to lie inside the polygon.

In the ray–triangle intersection algorithm, objects are represented by vertices, edges, and faces; a segment by its endpoints; a ray as an extended segment; and a triangle by its three vertices. A parametric equation, 
                           
                              P
                              
                                 (
                                 r
                                 )
                              
                              
                              =
                              
                              
                                 P
                                 0
                              
                              
                              +
                              
                              r
                              
                                 (
                                 
                                    P
                                    1
                                 
                                 −
                                 
                                    P
                                    0
                                 
                                 )
                              
                              ,
                           
                         is assigned to each line and used for the ray starting at P
                        0 going in the direction 
                           
                              (
                              
                                 P
                                 1
                              
                              −
                              
                                 P
                                 0
                              
                              )
                              ,
                           
                         and 0 ≤ r ≤ 1. In Fig. 6
                        , a plane 
                           π
                         through the point V
                        0 with a normal vector 
                           
                              n
                              →
                           
                         crosses the parametric line at the point 
                           
                              
                                 P
                                 i
                              
                              =
                              P
                              
                                 (
                                 
                                    r
                                    i
                                 
                                 )
                              
                           
                         defined by the following parametric value [31]:

                           
                              (3)
                              
                                 
                                    
                                       r
                                       i
                                    
                                    =
                                    
                                       
                                          
                                             n
                                             →
                                          
                                          ·
                                          
                                             (
                                             
                                                V
                                                0
                                             
                                             −
                                             
                                                P
                                                0
                                             
                                             )
                                          
                                       
                                       
                                          
                                             n
                                             →
                                          
                                          ·
                                          
                                             (
                                             
                                                P
                                                1
                                             
                                             −
                                             
                                                P
                                                0
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        In Fig. 6, consider a ray R from P
                        0 to P
                        1, and a triangle T with vertices V
                        0, V
                        1 and V
                        2 that lies in the plane 
                           π
                         through V
                        0 with the normal vector, 
                           
                              
                                 n
                                 →
                              
                              =
                              
                                 (
                                 
                                    V
                                    1
                                 
                                 −
                                 
                                    V
                                    0
                                 
                                 )
                              
                              ×
                              
                                 (
                                 
                                    V
                                    2
                                 
                                 −
                                 
                                    V
                                    0
                                 
                                 )
                              
                           
                        . The intersection of R and 
                           π
                         is determined first to verify if R lies in the plane, in which case the corresponding VE is eliminated. Furthermore, R does not cross T if R and 
                           π
                         do not intersect, but if R and 
                           π
                         intersect at point 
                           
                              
                                 P
                                 i
                              
                              =
                              P
                              
                                 (
                                 
                                    r
                                    i
                                 
                                 )
                              
                              ,
                           
                         it is necessary to determine whether this point lies inside T or not.

Several techniques to test for the inclusion of a point inside a 3D planar triangle are available. The mesh generation strategy presented in this paper employs the method proposed and written by Sunday [31], which uses direct 3D computations to determine inclusion, avoiding the projection onto a 2D coordinate plane. In this technique, a barycentric coordinate system for point V in the triangle T is defined as:

                           
                              (4)
                              
                                 
                                    V
                                    
                                       (
                                       s
                                       ,
                                       t
                                       )
                                    
                                    =
                                    
                                       V
                                       0
                                    
                                    +
                                    s
                                    
                                       (
                                       
                                          V
                                          1
                                       
                                       −
                                       
                                          V
                                          0
                                       
                                       )
                                    
                                    +
                                    t
                                    
                                       (
                                       
                                          V
                                          2
                                       
                                       −
                                       
                                          V
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       V
                                       0
                                    
                                    +
                                    s
                                    
                                       u
                                       →
                                    
                                    +
                                    t
                                    
                                       v
                                       →
                                    
                                 
                              
                           
                        where s and t are barycentric coordinates of V and 
                           
                              
                                 u
                                 →
                              
                              =
                              
                                 (
                                 
                                    V
                                    1
                                 
                                 −
                                 
                                    V
                                    0
                                 
                                 )
                              
                           
                         and 
                           
                              
                                 v
                                 →
                              
                              =
                              
                                 (
                                 
                                    V
                                    2
                                 
                                 −
                                 
                                    V
                                    0
                                 
                                 )
                              
                           
                         are edge vectors of T. A point 
                           
                              P
                              =
                              V
                              (
                              s
                              ,
                              t
                              )
                           
                         is inside T if and only if s ≥ 0, t ≥ 0, and 
                           
                              s
                              +
                              t
                              
                              ≤
                              
                              1
                           
                        . Hence for a given Pi
                        , it is only required to find the weights (si, ti
                        ) and check these inequalities to verify its inclusion in T. Barycentric coordinates are computed as the following:

                           
                              (5a)
                              
                                 
                                    
                                       
                                          
                                             s
                                             =
                                             
                                                
                                                   
                                                      w
                                                      →
                                                   
                                                   ·
                                                   
                                                      (
                                                      
                                                         n
                                                         →
                                                      
                                                      ×
                                                      
                                                         v
                                                         →
                                                      
                                                      )
                                                   
                                                
                                                
                                                   
                                                      u
                                                      →
                                                   
                                                   ·
                                                   
                                                      (
                                                      
                                                         n
                                                         →
                                                      
                                                      ×
                                                      
                                                         v
                                                         →
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5b)
                              
                                 
                                    
                                       
                                          
                                             t
                                             =
                                             
                                                
                                                   
                                                      w
                                                      →
                                                   
                                                   ·
                                                   
                                                      (
                                                      
                                                         n
                                                         →
                                                      
                                                      ×
                                                      
                                                         u
                                                         →
                                                      
                                                      )
                                                   
                                                
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   ·
                                                   
                                                      (
                                                      
                                                         n
                                                         →
                                                      
                                                      ×
                                                      
                                                         u
                                                         →
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 w
                                 →
                              
                              =
                              
                                 P
                                 1
                              
                              −
                              
                                 V
                                 0
                              
                           
                         is another vector in π described in [31]. Three triangle vertices are given by: 
                           
                              
                                 V
                                 0
                              
                              =
                              V
                              
                                 (
                                 0
                                 ,
                                 0
                                 )
                              
                              ,
                           
                        
                        
                           
                              
                                 V
                                 1
                              
                              =
                              V
                              
                                 (
                                 1
                                 ,
                                 0
                                 )
                              
                              ,
                           
                         and 
                           
                              
                                 V
                                 2
                              
                              =
                              V
                              
                                 (
                                 0
                                 ,
                                 1
                                 )
                              
                              ,
                           
                         and the point 
                           
                              P
                              =
                              V
                              (
                              s
                              ,
                              t
                              )
                           
                         is on an edge of T if one of these three conditions, 
                           
                              s
                              =
                              0
                              ,
                           
                        
                        
                           
                              t
                              =
                              0
                              ,
                           
                         or 
                           
                              s
                              +
                              t
                              =
                              1
                              ,
                           
                         is satisfied (each condition corresponds to one edge).

In the VEM mesh generation strategy, a ray R is drawn from each element center in the positive y-direction and the number of triangles that are crossed by the ray is recorded. Subsequently, the element is inside the CAD geometry if the number is odd, and outside otherwise, as mentioned previously. This part of the algorithm has the greatest cost in terms of computational time due to large calculations. Crossing a block of 30,000 VEs with 30,000 triangle boundaries, for example, requires a total of 30,0002 calculations to obtain the final mesh.

Once the elements outside of the CAD boundary are located and eliminated, all remaining VEs are renumbered using the right hand rule discussed at the end of Section 2.2. The number of VEs representing dividers (e.g., decks, bulkheads, etc.) are counted by searching for VEs with smaller length, width, or height depending on the direction in which the divider is assigned.

Geometry meshing is now complete; however, additional steps are performed to facilitate the integration of the generated mesh with the VEM solver. In ship modeling, the domain of interest is generally constituted by several components (e.g., bulkheads, decks, equipment, etc.), compartment air, and cooling water. Hence in the VEM, every VE represents a control volume that consists of a bounding box containing a fluid, solid, or mixture (solid + fluid), where each solid component is placed in one or more VEs according to its physical dimensions.

The component allocation process starts by identifying the vertex of the component with smallest x, y, and z coordinates, to which component length (dx), width (dy), and height (dz) are added to determine the other seven vertices. The eight resulting vertex coordinates are then compared with the nodal coordinates of all grid elements to determine the VEs to which the component is allocated with respect to the origin. In case the component size is smaller than a single VE, one element is allocated to ensure the component’s presence. The algorithm calculates the number of VEs assigned to each equipment to verify if every ship equipment is included in the mesh.

In order to quantify the energy transfer between cells as depicted in Fig. 7
                           
                           , the mesh generation algorithm searches for the neighboring element type of each VE at its north, south, east, west, top and bottom faces, and identifies it according to the three possible element types described previously: fluid, solid, or mixture (fluid + solid). All VEs contain fluid (i.e., air) by default unless solid or mixture element types are specified. The following interactions and boundaries are possible in the VEM computational domain: (1) fluid–fluid; (2) fluid–mixture; (3) fluid–solid; (4) solid–solid; (5) solid–mixture; (6) mixture–mixture; (7) solid–domain boundary; (8) fluid–domain boundary; and (9) mixture–domain boundary. The domain boundary in the VEM mesh is surrounded by a virtual wall that is modeled using thermal resistance network, which accounts for heat transfers via convection between ship interior and exterior and the wall, conduction through the wall, and radiation between the ambient and the wall.

The VEM mesh generation strategy assigns physical properties (e.g., density, specific heat, thermal conductivity, heat generation rate, etc.) of every element type and component to corresponding VEs. Two possible methods are available in the VEM to address VEs with mixed entities (e.g., solid–fluid) with discrepancies in their physical and mesh volumes [1]:

                              
                                 1.
                                 Treat VE contents as a homogenous mixture of entities and calculate uniform properties for the VE using a weighted average proportional to the mass of each entity, or

Treat VE contents as a group of distinct entities, and separately apply the differential equation to each.

The second alternative requires more differential equations to be solved, therefore increasing the overall computational time. As a result, the first alternative is employed for the current VEM mesh generation technique, where equivalent densities (ρeq
                           ) and thermal conductivities (keq
                           ) for components are estimated as follows:

                              
                                 (6a)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ρ
                                                   
                                                      e
                                                      q
                                                   
                                                
                                                =
                                                
                                                   
                                                      V
                                                      R
                                                   
                                                   
                                                      V
                                                      m
                                                   
                                                
                                                
                                                   ρ
                                                   R
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (6b)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   k
                                                   
                                                      e
                                                      q
                                                   
                                                
                                                =
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            V
                                                            R
                                                         
                                                         
                                                            V
                                                            m
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      1
                                                      3
                                                   
                                                
                                                
                                                   k
                                                   R
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where VR
                           /V
                           m is the ratio between the component physical and mesh volumes and ρR
                            and kR
                            are the actual component weighted average density and thermal conductivity, respectively.

Visualization of the solid component distribution within the VEM computational grid is achieved by assigning specific scalar value to each solid component. VEs containing air, for instance, have a scalar value of zero while those representing solids have non-zero values. VisIt reads these values for its scalar mapping feature [7], where only elements with non-zero scalar values are shown in opaque colors. The output format can easily be modified to export results to alternative visualization software such as ParaView [33] and Mayavi [34].

The VEM mesh generation strategy described above creates three output files: (1) a Visualization Toolkit (VTK) file that can be imported to VisIt for mesh visualization; and text files containing (2) physical properties of every volume element and (3) coordinates, list of nodes, and adjacent element numbers for every VE.

This section presents the application of the proposed mesh generation strategy in thermal modeling and simulation of a notional all-electric ship. An all-electric ship is characterized by complex geometries and exhibits a large number of components and interactions, making it a representative application target. In order to portray how accurately VEM mesh represents the actual ship geometry, ship CAD drawing and VEM mesh are compared and assessed. Furthermore, numerical solutions obtained with independent meshes are discussed to demonstrate the practicality of the proposed mesh generation strategy in VEM-based ship thermal analysis.

Thermal modeling of an all-electric ship elaborated in this paper applies fundamental laws of heat transfer and thermodynamics to each VE, to solve for the temperature and relative humidity fields for the entire ship. Consequently, time-dependent energy equation applied to each VE is expressed as:

                           
                              (7)
                              
                                 
                                    
                                       
                                          d
                                          
                                             T
                                             i
                                          
                                       
                                       
                                          d
                                          t
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          
                                             (
                                             ρ
                                             V
                                             
                                             c
                                             )
                                          
                                          i
                                       
                                    
                                    
                                       
                                          (
                                          
                                             ∑
                                             
                                                j
                                                =
                                                e
                                                ,
                                                w
                                                ,
                                                t
                                                ,
                                                b
                                                ,
                                                n
                                                ,
                                                s
                                             
                                          
                                          
                                             
                                                Q
                                                ˙
                                             
                                             j
                                          
                                          +
                                          
                                             
                                                Q
                                                ˙
                                             
                                             
                                                g
                                                e
                                                n
                                             
                                          
                                          +
                                          
                                             
                                                Q
                                                ˙
                                             
                                             
                                                c
                                                o
                                                n
                                                v
                                             
                                          
                                          )
                                       
                                       i
                                    
                                 
                              
                           
                        where 1 ≤ i ≤ N, with N being the total number of elements in the mesh, Ti
                         is the temperature of VE i, ρ is the density of the material inside the VE (fluid and/or solid), V is the total VE volume, c is either the specific heat of the solid/liquid or the specific heat at constant volume of the gas inside the VE (cv
                        ), 
                           
                              
                                 
                                    Q
                                    ˙
                                 
                                 e
                              
                              ,
                           
                        
                        
                           
                              
                                 
                                    Q
                                    ˙
                                 
                                 w
                              
                              ,
                           
                        
                        
                           
                              
                                 
                                    Q
                                    ˙
                                 
                                 t
                              
                              ,
                           
                        
                        
                           
                              
                                 
                                    Q
                                    ˙
                                 
                                 b
                              
                              ,
                           
                        
                        
                           
                              
                                 
                                    Q
                                    ˙
                                 
                                 n
                              
                              ,
                           
                        
                        
                           
                              
                                 Q
                                 ˙
                              
                              s
                           
                         are the heat transfer rates across the east, west, top, bottom, north, south faces of each volume element, respectively (denoted as ϕ in Fig. 7), 
                           
                              
                                 Q
                                 ˙
                              
                              
                                 g
                                 e
                                 n
                              
                           
                         is the heat sink or source inside the element, and 
                           
                              
                                 Q
                                 ˙
                              
                              
                                 c
                                 o
                                 n
                                 v
                              
                           
                         is the net heat transfer rate collected/rejected through convection by one or more fluid streams that flow through the VE. Appropriate heat transfer correlation can be selected depending on the flow regime, and each of these heat transfer mechanisms and empirical correlations implemented into the VEM is elaborated in [1].

The system of N nonlinear ordinary differential equations defined by Eq. (7) formulates an initial value problem to be solved with a given initial condition T
                        
                           i0. Relative humidity of each VE that contains air is computed based on its temperature and assuming an initial relative humidity φ
                           i0:

                           
                              (8)
                              
                                 
                                    
                                       p
                                       
                                          v
                                          ,
                                          i
                                       
                                    
                                    =
                                    
                                       φ
                                       
                                          i
                                          0
                                       
                                    
                                    ·
                                    
                                       p
                                       
                                          v
                                          s
                                       
                                    
                                    
                                       (
                                       
                                          T
                                          
                                             i
                                             0
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        where p
                        
                           v, i
                         is the partial vapor pressure and pvs
                        (T
                        
                           i0) is the water saturation pressure at T
                        
                           i0. Assuming constant absolute humidity throughout the simulation, the relative humidity φ
                           i
                         is computed as:

                           
                              (9)
                              
                                 
                                    
                                       φ
                                       i
                                    
                                    =
                                    
                                       
                                          p
                                          
                                             v
                                             ,
                                             i
                                          
                                       
                                       
                                          
                                             p
                                             
                                                v
                                                s
                                             
                                          
                                          
                                             (
                                             
                                                T
                                                i
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        where pvs
                        (Ti
                        ) is the water saturation pressure at Ti
                        . Solid VEs have zero relative humidity, i.e., 
                           
                              
                                 φ
                                 i
                              
                              =
                              0
                           
                        .

The numerical method and its parameters are determined according to the numerical stability and desired solution accuracy for the problem under consideration. The VEM features several numerical schemes with adaptive time step size Δt to solve for transient solutions, e.g., Backward Euler, Runge–Kutta–Fehlberg, Adams–Moulton, Gear’s method, etc. If steady-state response is desired, the time derivative term on the left side of Eq. (7) is neglected and the resulting system of nonlinear algebraic equations is solved using Newton– Raphson method. In this ship thermal analysis, 4th order Runge– Kutta method with adaptive Δt was employed to solve the system of nonlinear ODEs with respect to time.
                        
                        
                        
                        
                        
                     

The numerical convergence was verified by successive mesh refinements [35] and monitoring the variation in the Euclidean norm of the solution vector for the entire domain. The solution from a less refined mesh (mesh 1) were compared to the solution from a more refined mesh (mesh 2), and the refinement process stopped when the prescribed mesh refinement relative error, ε
                           mesh
                        , criterion was satisfied. Then mesh 1 was selected as the independent mesh based on the following equation:

                           
                              (10)
                              
                                 
                                    
                                       
                                          ɛ
                                       
                                       
                                          m
                                          e
                                          s
                                          h
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                |
                                                |
                                                |
                                                Ψ
                                                |
                                                |
                                             
                                             
                                                m
                                                e
                                                s
                                                h
                                                1
                                             
                                          
                                          −
                                          
                                             
                                                |
                                                |
                                                Ψ
                                                |
                                                |
                                             
                                             
                                                m
                                                e
                                                s
                                                h
                                                2
                                             
                                          
                                          
                                             |
                                          
                                       
                                       
                                          
                                             |
                                             |
                                             Ψ
                                             |
                                             |
                                          
                                          
                                             m
                                             e
                                             s
                                             h
                                             1
                                          
                                       
                                    
                                    ≤
                                    1
                                    ×
                                    
                                       10
                                       
                                          −
                                          3
                                       
                                    
                                 
                              
                           
                        where Ψ is the solution vector. Meshing and simulation were performed on a computer with the following technical specifications: Core i5-2320 3.0 GHz, 8 GB RAM, and Windows 7 64-bit operating system.

The notional all-electric ship hull similar to a DDG-51 destroyer is depicted in Fig. 8. Table 1 lists ship dimensions and the number of VEs specified in each spatial direction for the independent ship mesh. The ship has five decks and four bulkheads in the z and x-directions, respectively, with predefined thicknesses of 0.2 m. In addition, there are 43 thermal loads (equipment) inside the ship and their physical locations and dimensions are listed in Table 2. For this mesh, uniform divisions were imposed between bulkheads and decks, i.e., there were an equal number of VEs between decks and bulkheads.

Comparisons between the VEM mesh and the actual ship geometry are illustrated in Figs. 9–11, with three meshes of different VE sizes as defined in Table 3
                        . According to these figures, more accurate representations of the ship were obtained as the number of VEs increased. Fig. 11 depicts the top view of the ship superstructure, where the triangular region is not meticulously portrayed with coarse and fine meshes. Triangular geometries are difficult to represent with the VEM mesh due to their curved edges, which are difficult to construct with hexahedral elements unless smaller VE sizes are used.

Missing VEs near the ship boundary is due to the nature of ray-crossings and ray– triangle intersection techniques. If a large VE size (i.e., small N
                        
                           VE, i
                        ) is selected, for instance, more than half of the VE, including its center, may be located outside of the ship boundary, leading the ray 
                           R
                         to cross even number of triangles and consequently, eliminating the element from the final mesh. Although highly accurate representations of the CAD geometry were obtained by increasing the total number of VEs, CPU time required to generate the mesh concurrently increased as indicated in Table 3.

In order to approximate curved and distorted boundaries, Lee and Yang [9] used boundary fitting operation, in which the nodes on the zigzag boundary of the provisional mesh were projected on the boundary of the domain of interest. Subsequently, the layers of elements on the boundary surface (SEL) were constructed without thickness and the nodes were re-positioned by mesh smoothing to improve the shape. Accurate geometric representation, however, does not necessarily guarantee highly accurate numerical solutions, and such an effort often retards the mesh generation time without significant improvement in the solution accuracy, e.g., system-level simulations [1,5].

Local mesh refinement methods allow for a detailed assessment of regions that are subject to delicate perturbations by adapting the precision of the numerical computation and refining the computational grids in and around those regions [36]. Local mesh refinement strategies for hexahedral meshes have been presented in [10,13] by implementing octree-based hexahedral mesh refinement scheme [8] with some modifications. This refinement technique can be applied to the proposed VEM mesh generation strategy by slicing the VE into several structured hexahedral elements (sub-VEs) as illustrated in [10], then assigning sub-indices and coordinates (i.e., Pxyz
                        ) to the vertices of each corresponding sub-VE. Subsequently, adjacent elements (i.e., boundaries) must be re-identified according to Section 2.4.2 and appropriate equations can be applied.

In most system-level simulations such as that of ship, local mesh refinement is not as critical owing to significantly large systems’ scale relative to their constituents. In addition, if the simulation objective is to quickly approximate dynamic system behavior during early design stages, local details may be neglected until meticulous analysis is required.

The independent ship mesh in Fig. 12 was obtained in 259.46 CPU seconds and it consisted of 33,364 VEs, from which 4,407 VEs represented bulkheads and decks. Fig. 13
                         depicts component distribution within the notional all-electric ship comprising 43 equipment, four bulkheads, and five decks, in which all solid components have the same scalar value of 1 (red).

The simulation required 600.41 CPU seconds to solve the initial value problem and to evaluate the ship thermal response for 7200 real-time seconds. Material properties and heat generation of each load included in this simulation are listed in [30]. Ship temperature and relative humidity fields at 7200  s are depicted in Figs. 14
                         and 15
                        , respectively.

In Fig. 14, ship boundary temperature and relative humidity fields at 7200  s are shown. In Fig. 14a, ship substructure temperature is relatively lower since part of it is in the water at 280 K. In addition, solar irradiation imposed on the top ship boundary increases the superstructure temperature. Red spot in the ship superstructure indicates the presence of a heat generating equipment. Relative humidity depicted in Fig. 14b is computed according to Eq. (9).


                        Fig. 15a and b shows temperature and relative humidity fields, respectively, at the ship cross-section in the x–z plane at 7200 s. In Fig. 15a, bulkheads and decks included in the ship mesh prevent the heat flow and thus cause significant temperature difference between the compartments. Moreover, the dividers can be used to separate and identify different zones and compartments, allowing for the zonal or compartmental thermal analysis of the ship. Red spots in Fig. 15a indicate presence of thermal loads and these are identified as blue dots in Fig. 15b since solid components, including bulkheads and decks, have relative humidity of zero.

@&#CONCLUSION@&#

In this paper, a mesh generation strategy devised and implemented for the VEM was presented with its application in ship thermal analysis. In order to construct meshes of large and complex ships with a small number of hexahedral elements, the present strategy adapted ray crossings and ray– triangle intersection algorithms developed in previous studies. In addition, the practicality of the present mesh generation strategy in ship thermal modeling and simulation was illustrated by obtaining thermal responses of a notional all-electric ship comprising 43 thermal loads, four bulkheads, and five decks.

The final independent ship mesh was composed of 33,364 VEs built in 259.46 CPU seconds. In order to obtain ship temperature and relative humidity fields, laws of heat transfer and thermodynamics were applied to each VE along with empirical correlations, and the resulting system of nonlinear ODEs was solved with respect to time. Subsequently, ship temperature and relative humidity fields were visualized in VisIt software.

The following concluding remarks were construed from the mesh generation and simulation results:

                        
                           1.
                           The present VEM mesh generation strategy was able to produce sufficiently accurate hexahedral meshes of complex ship geometry. More accurate representation of the actual ship (e.g., smoother edges and curves) was achieved by increasing the number of VEs in each respective spatial direction. However, this number was directly proportional to the computational cost of the mesh generation process (see Table 3). Therefore mesh independence test, such as the one presented in this paper, must be performed to find the optimal number of VEs for mesh-independent numerical solution.

The VEM mesh generation strategy was demonstrated to play a key role in the enhancement of the VEM computational efficiency by producing a coarse independent mesh of a notional all-electric ship with intricate geometric features and multiple components using a small number of elements. Consequently, the VEM was capable of obtaining plausible ship thermal solutions with respect to time using such a mesh, requiring low computational cost in overall.

In summary, the VEM mesh generation strategy was verified as an efficient method for achieving sufficiently accurate ship representations and numerical solutions using a coarse independent mesh. Similarly, this paper addressed remarkable roles of the mesh generation strategy in demonstrating the VEM as a prominent tool in ship thermal modeling and simulation.

@&#ACKNOWLEDGMENT@&#

This work was supported through the Office of Naval Research (ONR) grant N00014-14-1-0198.

@&#REFERENCES@&#

