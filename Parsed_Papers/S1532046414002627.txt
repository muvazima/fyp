@&#MAIN-TITLE@&#Evaluation and selection of open-source EMR software packages based on integrated AHP and TOPSIS

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Outlined 13 active open-source EMR software packages in the healthcare area.


                        
                        
                           
                           Evaluate the set of metrics based hands-on study.


                        
                        
                           
                           The open-source EMR software packages was scored based on integrated AHP–TOPSIS.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Open-source EMR software

Multi-criteria decision-making

AHP

TOPSIS

@&#ABSTRACT@&#


               
               
                  Evaluating and selecting software packages that meet the requirements of an organization are difficult aspects of software engineering process. Selecting the wrong open-source EMR software package can be costly and may adversely affect business processes and functioning of the organization. This study aims to evaluate and select open-source EMR software packages based on multi-criteria decision-making. A hands-on study was performed and a set of open-source EMR software packages were implemented locally on separate virtual machines to examine the systems more closely. Several measures as evaluation basis were specified, and the systems were selected based a set of metric outcomes using Integrated Analytic Hierarchy Process (AHP) and TOPSIS. The experimental results showed that GNUmed and OpenEMR software can provide better basis on ranking score records than other open-source EMR software packages.
               
            

@&#INTRODUCTION@&#

Open-source software (OSS) packages in health informatics online are increasing and gaining greater prominence. This repertoire of open source options benefits future planners interested in adopting a system by selecting an existing application. Software firms have been producing a variety of OSS that can be customized to meet the specific needs of an organization. The selecting inappropriate OSS adversely affects business processes and organizational functions. The task of selecting OSS packages has become more complex because of (i) difficulties in accessing the applicability of the software for business needs given that a large number of software packages are available in the market; (ii) incompatibilities between various hardware and software systems; (iii) lack of technical knowledge and experience of decision makers; and (iv) ongoing improvements in information technology [1,5]. Evaluators tasked to select an OSS is often under schedule pressure and may not have the time or experience to plan the selection process in detail. Therefore, evaluators may not use the most appropriate method for OSS selection [2]. The process of determining an OSS package that meets specific needs of an organization is complicated and time consuming. Such difficulty has led researchers to investigate better means of evaluating and selecting software packages. Multi-criteria decision-making (MCDM) problem means making preference decisions over the available alternatives characterized by multiple (usually conflicting) attributes [3]. MCDM aims to help decision makers select the best alternative, sort out potential alternatives among the available options, and rank the alternatives in decreasing order of their performance [4,5]. The evaluation and selection processes involve simultaneous consideration of multiple attributes to rank the available alternatives and select the best one. Therefore, this process can be considered an MCDM problem.

As much as there are variety in healthcare subfields and activities, there are different types of applications. This could be noted in the projects categories listed in open source healthcare repositories online, Medical Free/Libre and Open Source Software list [17,18]. An example of application classification in the literature is given in [19], where the author’s defined 15 functional classes specific to the medical domain based on the predominant functionality of the projects. Some of these classes are Clinical Information System/Electronic Medical Records System, Messaging, Continuing Medical Education, Data Acquisition, Decision Support, Imaging, Issue Tracking, Laboratory Information System and Telemedicine. In this paper, we consider only the first (and the dominant application type): open source electronic health record/electronic medical record (HEREHR/EMR) software packages. The focus of this study is to evaluate and select open-source EMR software packages based MCDM using integrated AHP–TOPSIS in group contents from the available options of open-source EMR software. The remaining sections of this paper are organized as follows: Section 2 covers the related research and objectives of the present study. Section 3 describes the decision-making methodology for selecting open-source EMR software packages. Section 4 presents the evaluation and discussion of the results. Sections 5 and 6 discuss the limitations and contributions of this research, respectively. Section 7 presents the conclusion.

@&#LITERATURE REVIEW@&#

The currently available open-source EMR software applications have not been adequately analyzed and compared to guide potential implementers. Commonly used decision-making strategies can be compared with those applied to available open-source software applications. Several frame works and techniques, each with its own benefits and drawbacks, have been proposed for the decision-making process.

A fuzzy-based decision-making technique was proposed in [1], with a fuzzy algorithm was used to describe the appropriate software selection. The evaluation criteria, methodology for the selection of OSS, and evaluation of multiple OSS attributes were explained. In [11], a fuzzy AHP–TOPSIS two-stage method for software selection was presented. The method defines a two-step software selection, which are fuzzy AHP and fuzzy TOPSIS. The authors described the evaluation criteria for OSS and defined the methodology to acquire the appropriate software according to requirements. However, fuzzy appropriateness index and ranking values for all alternatives are difficult to calculate.

In [7], the AHP approach for software selection was utilized, a problem was decomposed into six steps, and the software was selected. The proposed framework defines the criteria and methodology for OSS selection. However, ranking the alternatives depends on the alternatives considered for evaluation; thus, adding or deleting alternatives can change the final rank (rank reversal problem).

In [9], a hybrid knowledge based system (HKBS) approach was proposed, and compared with AHP and Weighted Sum Model (WSM) methods. This framework elaborated on the evaluation criteria for OSS and the methodology for OSS selection, and prioritized OSS according to different requirements and evaluation of its multiple attributes. Resulting score of AHP and WSM indicates relative ranking of the alternatives whereas result of HKBS shows not only ranking of the alternatives but also indicates how well each alternative meet user requirements of that package. In case of AHP and WSM aggregate score of each alternative may not remain consistent even though requirements are same because aggregate score depends on expert’s own judgment which may not remain consistent for all the time. Whereas HKBS produce same results unless user requirements changes. In case of AHP adding an alternative may cause a rank reversal (reversal in ranking) problem that does not happens in case of HKBS. However, the process is time consuming specially in the tanning calculations; the training time typically on this case lasted for 15–20min and will be increase when the number of alternatives and criteria increases.

In [10], a method called EFFORT (Evaluation Framework for Free/Open-souRce projecTs) was used to evaluate OSS, and an evaluation procedure for the multiple attribute so OSS was defined. However, the weights of the attribute were assigned arbitrarily. A high number of criteria make it difficult to assign weight.

In [8], an integrated AHP–TOPSIS model for software selection was proposed and a multi-criteria decision-making evaluation was defined. The model used AHP and TOPSIS. This framework is appropriate for evaluating multi-attribute OSS, and explains the methodology and evaluation criteria for software selection.

Other observations based on review of the literature [5] are presented. First, little work has been performed on developing decision-making frameworks comprising a methodology, criteria, and technique for selecting software packages. Second, a system/tool with inbuilt knowledge of software evaluation criteria and evaluation technique is required to assist decision makers in software selection and produce consistent and transparent selection results efficiently. Third, software packages can be evaluated using other common criteria related to the quality, cost and benefits of software, as well as the vendor, hardware, and software requirements, opinion of different stakeholders, and output characteristics of the software package. Such evaluation option can be utilized although the functional criteria for software selection are different for different software packages.


                     Table 1
                      summarizes the literature reviewed and data collected that consists of the OSS evaluation, selection methodology and criteria, different tools used, multi-criteria selection, and a framework prioritizing OSS. Only the integrated AHP–TOPSIS model considered all the aspects above, thereby helping decision makers understand and decompose the problem into a decision-making hierarchy. The model is a flexible and powerful tool for handling both qualitative and quantitative multi-criteria problems. The procedures are applicable to individual and group decision-making.

@&#METHODOLOGY@&#

The design of our study is follow; on one hand, we give a close-up of those alternative systems with respect to a set of measures, through a relatively infrequent route of actually installing the software and reporting more hands-on information on the installation process, usability, as well as other variables. The input to this part (sources and inclusion criteria of subject articles) is discussed in later subsections.

The selection the open-source EMR software received input from both the preliminary implementations of individual systems on virtual machines and online information in the systems’ websites. The output is a set of comparative between the subject systems, based on our set of variables using Integrated AHP and TOPSIS, as well as more insight into the limitations and merits of each system. All those elements of our study are shown in the overall conceptual framework in Fig. 1
                        . For both aspects of the paper, evaluation and selection.

Methodology for evaluation and selection of the open-source EMR software packages involves procedures and steps that decision maker follows while software selection decision making. Methodology is not intended as rigid structure, it is intended as guideline or aid that can be adapted according to requirements of the individual organization. On the basis of review of literature we have developed a generic stage based methodology for selection of the open-source EMR software packages which comprises three phases as follows:

Several elements confine the scope of our study. With respect to the term Health Informatics Software, the work in this paper applies only to a subset of health informatics, a subset of software systems, and then a subset of the combination of both the later subsets [12–16]. Health informatics comprises a group of fields, each with different types of software applications, and what we consider in this paper is the category of electronic medical records and electronic health records [17–19]. This selection excludes other informatics fields like bioinformatics, and even other health informatics subfields such as imaging and visualization [11].

Further, the sole focus of this paper is to analyze the available options among open-source EMR software exclusively, as opposed to proprietary or commercial systems.

Finally, we have selected 13 available open-source EMR software packages based on the access date at August 2013 and the listed in open source healthcare repositories online Medical Free/Libre and Open Source Software list [17,18]. An example of application classification in the literature is given in [19], and active open-source EHR/EMR systems: FreeMED, GNUmed, GNU Health, Hospital OS, HOSxP, OpenEMR, OpenMRS, OSCAR, THIRRA, WorldVista, ZEPRS, ClearHealth, and MedinTux. This list is not comprehensive of all available open source EHR/EMR systems, but is a representative set of popular open source EHR/EMR systems in the literature as well as in open source repositories. Table 2
                               lists this subject software of the study, along with their respective websites and brief description, each in the vendor’ own words.

The Hans on study divides in two main parts; namely deployed each open-source EMR software packages and establishing criteria for evaluation.

This phase includes two primary sources. Firstly, the available information about the products, online, mostly through their own websites, includes their online documentation and resources. Secondly, actual preliminary implementations of each system, in a separate virtual machine, mainly to experience the installation process, and obtain a first-hand impression about the usability of the system. These implementations can serve a later thorough investigation of the systems, in future research. The considered systems are presented in Table 2.

Our approach was to install each system on a separate virtual machine. For that purpose, we experimented with VMware Player and Virtual Box open virtualization packages. The final delivered images with installed software were produced using Virtual Box exclusively, because the free VMware edition does not export appliances. In every case, we created first the virtual machine, and installed the guest operating system; we do not consider setting the computer system on which to run the healthcare system as part of the installation process of that system. To serve as a convenient reference, we also captured the processes on video screen records.

This report summarizes our main findings about those systems with respect to a set of measures. The aim is to provide a preliminary review of the comparative features of each system, and help researchers and particularly potential implementers understand the available open options in the healthcare information systems industry. The measures against which we recorded the comparisons are summarized in Table 3
                                 .

In this phase criteria to be used for evaluation of the open-source EMR software packages are identified and arranged. The common metrics in our set of review articles to compare between OSS systems include the technical details like platform, programming language and database system [34,35], or functions/features and security [36,37]. To provide a broader scope of evaluation, we added a few other measures. Referring to the literature on software quality models, a frequently referenced modeling standard is the International Organization for Standardization and International Electro-technical Commission 9126-1 quality standard [38]. ISO/IEC 9126-1 specifically addresses quality model definition and its use as a framework for software evaluation. A 9126-1 quality model is defined by means of general software characteristics, which are further refined into sub-characteristics, which in turn are decomposed into attributes [39]. The six quality characteristics defined in the 9126-1 quality standard are: Functionality, Reliability, Usability, Efficiency, Maintainability, and Portability.

Reliability and maintainability metrics are hard to measure in a limited experimental setting, and require long-term real-world evaluation. Also, almost all our sample OSS are cross-platform, excluding the need to include portability as a comparing factor, but we kept the ease of installation metric (a measure under a sub-characteristic of the portability quality characteristic in the 9126-1 standard) to emphasize the implementer perspective in our study. We further chose to highlight the customizability out of the usability measure, and also include user support to the measures set, as separate factors in evaluating OSS programs [40].

In the following subsections, we present the result of evaluating our list of open-source EMR software packages, and comparing between them, according to the eight criteria listed in Table 3, measure by measure. In each case, we formulate the measure as a subset of elements, and report the score of each system based on those elements:
                                    
                                       A.
                                       Technical details

As open source software, all the inspected systems are licensed under free software/open source license [20–24]. They are provided free of charge, except for optional commercial support in some cases. MySQL and PostgreSQL are the dominating database systems, except for the legacy GT.M database engine, supporting the US Veterans Affairs information system (WorldVista). Those details in addition to the supported platforms [30] and development programming languages [31–33] are listed in Table 4
                                 .
                                    
                                       B.
                                       Usability

In order to have a basis to compare between the usability of the systems included, we adopted the following set of measures:
                                    
                                       •
                                       Efficiency (time to accomplish tasks or throughput).

Learnability (time to learn and ease of learning).

Satisfaction (comfort and acceptability of use).

We selected these measures from a number of usability attributes in various standards and models, reported in [14]. Specifically, we adopted efficiency and satisfaction metrics from ISO 9241-11 (1998) standard [41] and learnability from several other books and studies [42–44].

We referred to some common functions in all the systems, and conducted a rudimentary experiment where specific tasks are attempted on the systems and a quantitative index is given to each, per every measure above. The scale of the index is normalized to a range of 1–5.

Three users were selected for this test. Two are from the medical field with low and high IT literacy. The third user is a professional programmer. In each test, the thirteen systems were presented to the subject test user, in its respective virtual machine and two of the researchers evaluated the usability, providing needed instructions, timing, and then questioning the test subjects.

Three very common tasks in an electronic medical records system are to: (1) create a patient, filling at least the basic demographic data, (2) enter a visit at the counter, and (3) generate a report. The test users were asked to find out how to fulfill these tasks, without assistance other than the online help and documentation, and the time consumed during this process is measured. This time would serve to indicate learnability of a given system compared to another, based on the same given tasks. After the user had learnt how to accomplish the task, the actual time taken to actually perform the operations was recorded to measure the relative efficiency associated with each application relative to the others. Finally, the subjective feeling of ease and convenience experienced by the user, as well as his impression of the user interface would gauge the satisfaction factor [27].


                                 Table 5
                                  reports the results of the comparison. It should be noted, however, that we are aware of the preliminary nature of this test. Indeed, we intend to expand the usability measure into a separate study, with adequate sample size. The mere goal here is to provide a taste of the relative satisfaction of each system based on a small reference sample.

Overall, most of the systems are similar on the usability scale, except for those systems with non-English interfaces. We also noted during the study that users with more IT experience tend to give lower satisfaction rate for the subject EMR applications while the specific user with pure medical background was more impressed by the electronic systems, feeding higher satisfaction scores, though spending relatively more time accomplishing the tasks. The scores in Table 5 average the individual scores from the three users.
                                    
                                       C.
                                       Functionality and features

Most of the considered systems share a common set of core functionality, but vary widely in the finer features they offer. Fig. 2
                                  summarizes the main features and their association with each system. For the purpose of comparison, a more compact set of traits is preferable. We follow the eight core functionalities adopted in [45], as the basis of the comparison summarized in Table 6
                                 .

The functionalities reported in [45] are:
                                    
                                       1.
                                       Health information and data.

Results management (e.g., images, clinical dashboard, alerts).

Order entry and management (e.g., computerized provider order entry, prescribing).

Decision support (e.g., drug interactions, prevention and detection alerts).

Electronic communication and connectivity (e.g., email, integrated records).

Patient support (e.g., patient education content).

Administrative processes (e.g., patient scheduling, billing).

Reporting and population health management (e.g., quality indicators, national registries).

The score in the final column reflects the functionality with respect to the eight very general measures, though systems do vary in the degree and richness of support to the components of those measures. From this perspective, the given score might not be strictly fair, as a system is deemed supportive of a particular functionality if it includes even a single component of the functionality, though other systems could outweigh it in the support of other functionalities, but still get smaller score. Nevertheless, most systems have medical records functionality, reporting and some means to bill and schedule patient visits.

We classified the more granular features into four domains, namely Patient handling, Medical records, Support data, and Admin tools. Each of these domains includes sub-features numbered from 1 to 25. In the following list, the number of systems that satisfy each sub-feature is also shown:


                                 Patient handling
                                 
                                    
                                       1.
                                       Add/query (13/13)

Schedules/appointments management (12/13)

Encounters/call e ins management (5/13)

Email/SMS notifications (1/13)


                                 Medical records
                                 
                                    
                                       5.
                                       Patient demographics (13/13)

Allergies (5/13)

Document management (4/13)

Attached documents/images (5/13)

Forms and letters (5/13)

Medication handling (10/13)

Vaccination/immunization handling (2/13)

Hospitalization (4/13)

Socioeconomics (1/13)

Billing functions (11/13)

Reports/statistics (11/13)


                                 Support data
                                 
                                    
                                       16.
                                       Codes management (4/13)

Templates (4/13)

Insurance management (3/13)

Providers (2/13)


                                 Admin
                                 
                                    
                                       20.
                                       Database export/backup (5/13)

Decision alerts (6/13)

Staff/doctor handling (2/13)

Prescriptions (5/13)

Lab admin/order/results (6/13)

Medicine/drugs information/inventory (5/13)

These features distribute the open-source EMR software as follows:
                                    
                                       1.
                                       OpenEMR (19/25)

GNU Health (16/25)

GNUmed (14/25)

WorldVista (14/25)

OSCAR (14/25)

FreeMED (13/25)

HOSxP (10/25)

HospitalOS (9/25)

MedinTux (9/25)

OpenMRS (8/25)

ClearHealth (7/25)

THIRRA (7/25)

ZEPRS (5/25)

Security

An overall evaluation of the software systems’ security is beyond the scope of this paper, and needs an extensive analysis to measure the security on many aspects. From a defense-in-depth perspective, security at the application and data levels is applicable for individual software systems, while security of outer layers (host and network security) is more deployment-dependent. Data security implies secure storage through encryption, and protection against loss through backup policies. Application security implies a multitude of measures, which boils down to ensuring that no vulnerabilities in the application can be exploited to compromise an asset. Thorough assurance of application security would require a vulnerability scan, code analysis, and possibly penetration testing.

In the realm of health information systems, more rigorous security requirements are expected, in particular those related to preserving the privacy of medical records. Few standards began to outline those requirements, most notably the American Health Insurance Portability and Accountability Act(HIPAA)privacy rules. Out of the 13 systems under consideration, only four report their compliance to HIPAA. It is important to note, however, that compliance to security and privacy regulations has more components than just the software through which records are supplied and retrieved, and involves a comprehensive adherence to policies, practices, measures and tools covering the whole life cycle of health information, including storage and exchange.

Nevertheless, to provide an indication of the comparable security of our examined systems, we adopted a subset of security metrics against which the systems are compared, and report the results in Table 7
                                 . Access control, HIPAA compliance, and security of communication and data exchange are adopted from [46], based on security and privacy categories identified in the ISO 27799 standard [47]. Secure storage and backup mechanisms are well-established measures in research and industry literature (e.g. [48,49] respectively). In Table 7, if a system declares its compliance to HIPAA regulations a 
                                    
                                       ✓
                                    
                                  symbol is placed in the corresponding column along that systems’ row. Similarly, if the system provides for a security measure in any perceivable way, the corresponding column would contain a check mark.

The most common security measure in our set of systems is the authentication and access control [28], mainly utilizing passwords. Secure storage and secure communications are totally absent from current open source systems, whereas some systems already started compliance with HIPAA privacy rules. A few systems even lack any security/privacy mechanism, which comes as no surprise, since applications of emerging fields tend to focus on the functionality/usability first, and consider security as an afterthought.
                                    
                                       E.
                                       User support

User support can take many forms. Different users prefer different sources to learn about a system and obtain help. Some people would be comfortable referring to textual materials, while others are visual or auditory learners. Impatient or busy users would appreciate shorter tutorials and to-the-point instructions more than lengthy documents. For a product that spans more than one discipline like a health information system, users might lack enough background in information technology literacy, for example, and in many situations a committed technical support is necessary even through paid options. Therefore, documentation of a product usually, and aptly, varies in media, volume and level of details. We broke the support notion into several components to provide a finer view, and compared the studied systems based on those elements. The results are presented in Table 8
                                 . Our set of user support sources is based on a comprehensive survey of any available online help for all the studied open source software. From a user perspective, all these elements can provide useful information about the process of selecting, installing and then using the software in production. For web-based applications, a common practice among software providers is to offer a demo implementation of the application, hosted on the provider’s own server or a donated hosting server. Some factors are well-known means of communicating with users (e.g. forums and web blogs), whereas others are becoming more common among software developers (e.g. webcasts [50]).

Almost all systems have a website, and the worst systems in this respect are those directed towards specific audiences, and not meant to address the general English-speaking public. Notably few systems (e.g. OpenEMR) satisfy all our measures of user support [25,26,29]. Availability of a demo website is a common practice among web-based systems, and indeed most of the web-based open source systems provide for this option.
                                    
                                       F.
                                       Developer support

Similar to user support, support for developers can be regarded as a composite of several characteristics [51]. Table 9
                                  enumerates the software systems and indicates their provision of each support feature. Availability of a discussion group to share ideas, questions and answers is a very common practice in open source projects, and provides for a first resort when encountering undocumented issues during the development process. The same is true for mailing lists where subscribed developers can receive up-to-date news as well as recent discussion threads. For new developers in particular, a developer guide is often essential to explain core modules, coding styles and similar aspects special for the target project. Comments density is also an established quality indicator for OSS [52]. We relied on the analysis of the open source directory (www.ohloh.net/) to estimate the adequacy of code comments, where we deem more than 10% of code lines an adequate comments percentage.

Apparently from the corresponding table, support for developers is less taken care of than support for users. Nevertheless, most systems except those of individual, governmental or project-oriented natures have code repositories, as expected from open source projects. Generally, similar to the security measure, much is still needed towards supporting developers in available open source healthcare applications.
                                    
                                       G.
                                       Customization

Considering that the systems under study are open source software, it is always possible, in theory at least, to modify the software to one’s own needs, provided the required technical knowledge and documentation are available and affordable. However, we consider here the ability to customize the system from a user’s perspective. To help manage the comparison, we decomposed the customizability into aspects of localization, controlling the interface elements, add-on functionality, dynamic reporting and the ability to run custom scripts. All these measures are derived by inspecting the OSS applications under study. We do not consider here the system-level customization that requires highly qualified personnel to conduct in a production environment (e.g. as pertaining to the operating system or web server configurations). Table 10
                                  lists the details of the adopted components.

GNUmed by far is the most customizable system, while GNU and popular open source projects (community-wise) like OpenEMR, do support localization options. Many systems enable the user to change some aspect of the appearance, including color theme and fonts. Following this ability in support is to add custom plug-ins, possibly developed by third parties, to extend the functionality of the open source application.
                                    
                                       H.
                                       Ease of deployment

Deployment of software systems is a somewhat general term that can comprise many activities and span a long period since installing the software until decommission. We restrict our attention here to the most obvious, and conceivably, most difficult aspect of installing the software, starting from a requirements-compliant computer system and finishing with a launched copy of the software on that system. Ease of installation is one of the measures included in the ISO 9126 standard [38], under install ability quality sub-characteristic. Installation effort and flexibility are other measures in this category.

In our experience, the examined systems vary widely when it comes to the installation process, ranging from being as straightforward as a single-button installation to as frustrating as spending several days trying to figure out what went wrong. Most of the systems assume a minimum level of technical literacy, at least to the level of familiarity with setting up common software libraries and database engines. Probably part of the difficulty we encountered is due to the variety of the systems’ technologies, which calls for broader expertise with different settings rather than a difficulty in the systems themselves.

To facilitate the comparison of systems’ installations, we identify a few measures that can assess the relative ease of installing each examined system. We interpret the ease with which software can be installed as the time required for installation, expected technical skills, availability of easy-to-follow instructions, and the requirement of non-common dependencies required for the installation process to succeed. All these elements are induced from our own experience installing the sample OSS under analysis. We summarize the results of comparing the systems, based on those measures, in Table 11
                                 . It should be noted that the reported installation times measure only the consumed time during the actual installation, excluding any time spent in frustration due to troubleshooting or learning about the process. Times of installation are relatively low, but the level of expertise expected is somewhat high in at least half of the systems. Although instructions are provided most of the time, a certain level of familiarity with setting web and database servers is implied.

The phase metrics are collected on one table and weights are assigned to each basic attribute in the criteria hierarchy using AHP. Each basic criterion is rated in the hierarchy for each open-source EMR software package considered for evaluation. The available alternatives are ranked in descending order of the score, and the best software is selected based on TOPSIS. Aggregate scores provided only an idea about which software package is better than the other, as shown in Fig. 3
                              . However, individuals can always be relied on to select the best software package, as in other selection options.

AHP is a multi-criteria decision-making approach for handling complex decision problems. Saaty in [53] first introduced this approach in his seminal work. AHP is a multi-level structured technique, providing a comprehensive framework for evaluating different alternative solutions for a certain problem. The alternative solutions are provided by defining the objective, criteria, sub-criteria, and alternatives to a decision problem. The decision problem is first decomposed into different criteria. The AHP can be further decomposed in to sub-criteria, and so on, when the criteria are complex. Each criterion is then analyzed independently. AHP analytically evaluates its different criteria by comparing them to one another after the hierarchy has been constructed. AHP uses a pair-wise comparison technique for evaluating different alternatives. Pair-wise comparisons define the relative importance of each alternative with reference to each criterion. The AHP extracts the weight of importance of each criterion from the pair-wise comparison, and measures the performance of each alternative based on each criterion. AHP transforms these assessments into numerical values, which are then used to elaborate the priorities of each alternative. The final decision is made based on these priorities. Saaty in [53] described the following steps to apply AHP:
                                 
                                    •
                                    A hierarchy model that describes alternatives, criteria, and sub-criteria for evaluation of these alternatives is constructed.

Pair-wise comparison for the criteria and alternatives is established to extract the decision matrices with a nine-point scale.

The pair-wise comparison procedure is repeated for each criterion, and then the priority of alternatives is acquired by accumulating the weights.

A final decision is made on the basis of these priorities.

A scale that describes how many times more or less one element is important from another is utilized to compare the different attributes. Saaty in [53] used the nine-point scale to compare two attributes. The AHP hierarchy used in this study is shown in Table 12
                              , wherein the objective is first defined followed by the criteria, sub-criteria, and alternatives.

TOPSIS allocates the scores to each alternative based on their geometric distance from positive and negative ideal solutions. The best alternative is selected, which according to this technique, would be the one with the shortest geometric distance to the positive ideal solution and longest geometric distance to the negative ideal solution, as described in the in the following steps:
                                 
                                    
                                       Step 1: Construct the normalized decision matrix

This process tries to transform the various attributes dimensions into non-dimensional attributes; this process allows a comparison across the attributes. The matrix (xij
                              )
                                 m
                              
                              ∗
                              
                                 n
                               is then normalized form (xij
                              )
                                 m
                              
                              ∗
                              
                                 n
                               to the matrix, R
                              =(rij
                              )
                                 m
                              
                              ∗
                              
                                 n
                               using the normalization method:
                                 
                                    (1)
                                    
                                       
                                          
                                             r
                                          
                                          
                                             ij
                                          
                                       
                                       =
                                       
                                          
                                             x
                                          
                                          
                                             ij
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            
                                                               m
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            ij
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

This process will result a new Matrix R where R is as shown below
                                 
                                    
                                       R
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               11
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               12
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               1
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               21
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               22
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               2
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               m
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               m
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               mn
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           


                              
                                 
                                    
                                       Step 2: Construct the weighted normalized decision matrix

In this process, a set of weights w
                              =
                              w
                              1,
                              w
                              2,
                              w
                              3,⋯,
                              wj
                              ,⋯,
                              wn
                              , from the decision maker is accommodated to the normalized decision matrix; the resulted matrix can be calculated by multiplying each column from normalized decision matrix (R) with its associated weight wj
                              . It should be noted that the set of the weights is equal to 1,
                                 
                                    (2)
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                m
                                             
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             j
                                          
                                       
                                       =
                                       1
                                    
                                 
                              
                           

This process will result a new Matrix V where V is as shown below:
                                 
                                    
                                       V
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               11
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               12
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               1
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               21
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               22
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               2
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               m
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               m
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               v
                                                            
                                                            
                                                               mn
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               11
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               12
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               n
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               1
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               21
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               22
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               n
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               2
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                      
                                                         ⋮
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               m
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               m
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         …
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               n
                                                            
                                                         
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               mn
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           


                              
                                 
                                    
                                       Step 3: Determining the ideal and negative ideal solutions

In this process, two artificial alternatives A
                              ∗ (the ideal alternative) and A
                              − (the negative ideal alternative) are defined as:
                                 
                                    (3)
                                    
                                       
                                          
                                             A
                                          
                                          
                                             ∗
                                          
                                       
                                       =
                                       {
                                       (
                                       (
                                       
                                          
                                             max
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             ij
                                          
                                       
                                       |
                                       j
                                       ∈
                                       J
                                       )
                                       ,
                                       (
                                       
                                          
                                             min
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             ij
                                          
                                       
                                       |
                                       j
                                       ∈
                                       
                                          
                                             J
                                          
                                          
                                             -
                                          
                                       
                                       )
                                       |
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       m
                                       )
                                       }
                                       =
                                       {
                                       
                                          
                                             v
                                          
                                          
                                             1
                                          
                                          
                                             ∗
                                          
                                       
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             2
                                          
                                          
                                             ∗
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                          
                                             ∗
                                          
                                       
                                       ,
                                       ⋯
                                       
                                          
                                             v
                                          
                                          
                                             n
                                          
                                          
                                             ∗
                                          
                                       
                                       }
                                    
                                 
                              
                              
                                 
                                    (4)
                                    
                                       
                                          
                                             A
                                          
                                          
                                             -
                                          
                                       
                                       =
                                       {
                                       (
                                       (
                                       
                                          
                                             min
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             ij
                                          
                                       
                                       |
                                       j
                                       ∈
                                       J
                                       )
                                       ,
                                       (
                                       
                                          
                                             max
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             ij
                                          
                                       
                                       |
                                       j
                                       ∈
                                       
                                          
                                             J
                                          
                                          
                                             -
                                          
                                       
                                       )
                                       |
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       m
                                       )
                                       }
                                       =
                                       {
                                       
                                          
                                             v
                                          
                                          
                                             1
                                          
                                          
                                             -
                                          
                                       
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             2
                                          
                                          
                                             -
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                          
                                             -
                                          
                                       
                                       ,
                                       ⋯
                                       
                                          
                                             v
                                          
                                          
                                             n
                                          
                                          
                                             -
                                          
                                       
                                       }
                                    
                                 
                              
                           

It should be noted that J is a subset of {i
                              =1,2,…,
                              m}, that present the benefit attribute while J
                              − is the complement set of J, it can be noted as Jc
                              , which the set of cost attribute
                                 
                                    
                                       Step 4: Separation measurement calculation based on the Euclidean distance

In the process, the separation measurement is done by calculating the distance between each alternative in V and the ideal vector A
                              ∗ using the Euclidean distant which is given by:
                                 
                                    (5)
                                    
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ∗
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       ,
                                       
                                       i
                                       =
                                       (
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       m
                                       )
                                    
                                 
                              
                           

Similarly, the separation measurement for each alternative in V from the negative ideal A
                              − is given by:
                                 
                                    (6)
                                    
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   -
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         -
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       ,
                                       
                                       i
                                       =
                                       (
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       m
                                       )
                                    
                                 
                              
                           

In the end of step 4, two values namely 
                                 
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                       
                                          -
                                       
                                    
                                 
                               for each alternative has been counted, these two values represent the distance between each alternative and both (the ideal and the negative ideal).
                                 
                                    
                                       Step 5: Closeness to the ideal solution calculation

In the process, the closeness of Ai
                               to the ideal solution A
                              ∗ is defined as:
                                 
                                    (7)
                                    
                                       
                                          
                                             C
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ∗
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   -
                                                
                                             
                                          
                                       
                                       /
                                       (
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   -
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ∗
                                                
                                             
                                          
                                       
                                       )
                                       ,
                                       
                                       0
                                       <
                                       
                                          
                                             C
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ∗
                                                
                                             
                                          
                                       
                                       <
                                       1
                                       ,
                                       
                                       i
                                       =
                                       (
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       m
                                       )
                                    
                                 
                              
                           

It is obvious that, 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                       
                                          ∗
                                       
                                    
                                    =
                                    1
                                 
                               if and only if (
                                 
                                    
                                       
                                          A
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          A
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              ), similarly, 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                       
                                          ∗
                                       
                                    
                                    =
                                    0
                                 
                               if and only if (Ai
                              
                              =
                              A
                              −)
                                 
                                    
                                       Step 6: Ranking the alternative according to the closeness to the ideal solution

The set of the alternative Ai
                               can now be ranked according to the descending order of 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          i
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              , the highest value the better performance.

The metrics are collected on one table, with security, user support, developer support, and customizability representing the assigned true value as a scale of 1, and the assign nor into a scale of 0. Usability and ease of installation are used as the same values, which are included in Tables 5 and 11, respectively. The experimental results on the functionality and features are obtained based on two aspects. In the first experiment, the eight core functionalities adopted in [45] are utilized. The total scores of each application are combined for all eight cores, with the true value assigned as a scale of 1, as shown in Table 6. The scores are then normalized, as shown in Table 13
                     . In the second experiment, the more granular features of the functionalities are classified into four domains, namely, patient handling, medical records, support data, and admin tools. Each of these domains includes sub-features numbered from 1 to 25, as shown in Fig. 4
                     . The total scores of each application are combined for these features to be distributed in the EMR open-source software systems as OpenEMR (19/25), GNUHealth (16/25), GNUmed (14/25), WorldVista (14/25), OSCAR (14/25), FreeMED (13/25), HOSxP (10/25), HospitalOS (9/25), MedinTux (9/25), OpenMRS (8/25), ClearHealth (7/25), THIRRA (7/25) and ZEPRS (5/25). The normalized scores are shown in Table 13.

The first and second experiments based on the above table are executed differently for weighted and non-weighted cases. The scores without the weight of perspective from different developers are shown in column 1 (non-weighted) of Table 14
                     . The scores that applied the weight of perspective from different developers; developer 1 and 2, and 3 and 4 on columns 4, 7, 10, and 13 (W1, W2, W3, and W4, respectively), are shown in Table 14.

The average of the four weighted cases from different perspectives of the developers are shown in Table 14 and compared with non-weighted decisions in Fig. 4(a) and (b). This chart shows distinctively the variation in the scoring of all open-source EMR software packages with or without the weight factor. The x-axis represents EMR-OSS, FreeMED, GNUmed, GNU Health, Hospital OS, HOSxP, OpenEMR, OpenMRS, OSCAR, THIRRA, WorldVista, ZEPRS, ClearHealth, and MedinTux from software 1–13. The y-axis represents the results from integrated AHP–TOPSIS.


                     Fig. 4(a) and (b) indicates that the system numbers 2, 6, 7, 10, 11, and 13 are not different in ranking when weighted and non-weighted cases are used in both experiments. However, the discrepancies of the scores are more noticeable in the other systems, particularly 1, 4, and 8. From this summary of figures, we can conclude that some systems potentially serve as a good basis for ranking scores. System number 6, in particular, is an outstanding application, but is inadequate in providing customization and support for developers. Similarly, system number 2 is a promising product provided more attention is given to its security aspects. System number 7 has been deployed in many developing countries, and is a capable application when the full spectrum of functionalities is covered beyond its original scenarios in resource-constrained environments. System number 13 competes well in the functionality aspect, but serves only a narrow audience because English interface or user/developer support is not provided. System number 11 is not recommended because it is bound to the initial project it was developed for. System number 10 is a mature system that has been supported over the years, which, however, could have led to the system being less flexible in adapting to a new situation. This argument becomes more pertinent because of the unique underlying technology in terms of the database system and programming language.

Even though our approach in this paper is multifaceted, and we aimed to cover the subject from both evaluation and selection perspectives, we have to acknowledge several limitations in our study. In the following subsections, we discuss a few of these limitations.

One of important limiting factor in our study is the nature of our implementation of the subject software. It is more of an artificial prototype than a real-world setting. Though many installations did contain sample data, the limited operations performed by the researchers to probe the systems are certainly short of coping with an actual usage model. Although we believe that our investigation revealed the differences between systems relative to our defined set of comparative measures, we plan to exploit our ready preliminary installations on separate virtual machines as the basis towards more extensive investigations of more complete and real-like deployments.

The study is thorough in methodology and represents a relevant contribution to help decision making processes in the software application selection. It is pertinent, though, to highlight a couple of notes on the sample of OSS that formed the target of this study. First, as mentioned earlier, the list of included software is not comprehensive, but it is representative of current active and popular projects, as of the time of study. The exact list was compiled from the more compact inventory in [17] (under the Electronic health or medical record category) in order to provide for a manageable and valid software sample. Second, this list was selected in August 2013. In the open source world, a lot of change could be expected in the span of one year, including the rise and fall of projects. As of November 2014, the study sample still forms almost the same list in [17]. More studies are required to keep the evaluation up-to-date, as many open-source EMR systems might be updated and/or added within coming years. The highlight of the study is not the results per se as much as the description of the application of a sound evaluation methodology to a specific type of software applications. It should serve as an example for using the evaluation methodology for the open-source EMR software packages.

Finally, as indicated in the results of the hands-on analysis, many of the assessments regarding the comparative set of measures have a subjective quality. What mitigates this effect in our opinion is the fact that those particular judgments are formed by the same researcher, making a single reference for comparison, however this reference was inaccurate.


                     
                        
                           •
                           Outlined samples of selection and active open-source EMR software packages in the healthcare area.

Investigated alternative systems relative to a set of metrics by installing the software and reporting a hands-on experience of the installation process, usability, as well as other factors.

The open-source EMR software was scored based on a set of metric outcomes using integrated AHP–TOPSIS.

@&#CONCLUSION@&#

Investigating open-source EMR software alternatives is necessary because few studies in the literature analyzed the available open-source EMR software options beyond reporting their status and profiling their spectrum. In the current research, a hands-on study was performed, implementing the set of applications locally on separate virtual machines, to examine the systems more closely. Several measures were set as a comparison basis, and the systems were scored based a set of metric outcomes using integrated AHP–TOPSIS. GNUmed and OpenEMR software are the most promising candidates for providing a good basis on ranking score records compared with the other open-source EMR software packages. Our study also revealed the lack several features, most notably security and interoperability, support from developers. The systems, as software applications, feel similar from a usability perspective and share a common set of functionality although they vary considerably in community support and activity, and as we envision open-source EMR software packages as a building block and a source of reference materials and consumer service.

@&#ACKNOWLEDGMENTS@&#

This Research has been funded by the High Impact Research unit (HIR) University of Malaya, under grant number UM.C/HIR/MOHE/FCSIT/12. We would like to express our very great appreciation to Assoc. Prof. Dr. Paul Hansen from University of Otago, New Zealand for his valuable comments and constructive suggestions during the planning and development of this research work. His willingness to give his time so generously has been very much appreciated.

@&#REFERENCES@&#

