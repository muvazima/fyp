@&#MAIN-TITLE@&#Solving the shortest path tour problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We address the shortest path tour problem (SPTP).


                        
                        
                           
                           Two innovative solution methods for the SPTP are defined and implemented.


                        
                        
                           
                           An extensive computational phase is performed on a large class of instances.


                        
                        
                           
                           A comparison with the state-of-art algorithm to solve the SPTP is also carried out.


                        
                        
                           
                           The proposed approaches outperform remarkably the existing solving method.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Network flows

Shortest path

Structure path constraints

Labeling method

@&#ABSTRACT@&#


               
               
                  In this paper, we study the shortest path tour problem in which a shortest path from a given origin node to a given destination node must be found in a directed graph with non-negative arc lengths. Such path needs to cross a sequence of node subsets that are given in a fixed order. The subsets are disjoint and may be different-sized. A polynomial-time reduction of the problem to a classical shortest path problem over a modified digraph is described and two solution methods based on the above reduction and dynamic programming, respectively, are proposed and compared with the state-of-the-art solving procedure. The proposed methods are tested on existing datasets for this problem and on a large class of new benchmark instances. The computational experience shows that both the proposed methods exhibit a consistent improved performance in terms of computational time with respect to the existing solution method.
               
            

@&#INTRODUCTION@&#

The shortest path tour problem 
                        
                           (
                           SPTP
                           )
                        
                      is a variant of the shortest path problem 
                        
                           (
                           SPP
                           )
                        
                      and appeared for the first time in the scientific literature in Bertsekas’s dynamic programming and optimal control book [2].

The 
                        
                           SPTP
                        
                      has been recently studied by Festa in [13]. The paper of Festa is the first systematic contribution for solving the 
                        
                           SPTP
                        
                     . The author proved that the problem belongs to the complexity class P. The polynomial Karp-reduction of the 
                        
                           SPTP
                        
                      to the single-source single-destination 
                        
                           SPP
                        
                      involves the construction of an expanded graph in which different algorithms for the 
                        
                           SPP
                        
                      were tested and compared on pseudo-randomly generated instances. The results presented in [13] showed that Dijkstra’s algorithm outperforms all the competitor algorithms.

Applications of the 
                        
                           SPTP
                        
                      arise for example in the context of the manufacture workpieces, where a robot has to perform at least one operation selected from a set of S types of operations. In such case, the problem may be modeled as a 
                        
                           SPTP
                        
                      in which operations are associated with nodes of a directed graph and the time needed for a tool change is represented by the distance between two nodes (see [13]).

The main scientific contribution of this paper consists in analyzing some basic theoretical properties of the 
                        
                           SPTP
                        
                     , in designing a dynamic programming-based algorithm 
                        
                           (
                           DPA
                           )
                        
                      for solving it, and showing how an ad hoc algorithm for acyclic graphs may be used to solve the 
                        
                           SPTP
                        
                      after efficiently reducing it to a classical 
                        
                           SPP
                        
                      through the method referred to as modified graph algorithm 
                        
                           (
                           MGA
                           )
                        
                     .

The remainder of the paper is organized as follows. The problem is formally described in Section 2. The state-of-the-art algorithm to address the 
                        
                           SPTP
                        
                      is presented in Section 3. Some properties concerning the reducibility of the problem to a classical 
                        
                           SPP
                        
                      and the relevant consequences in terms of solvability are described in Section 4. A dynamic programming algorithm is illustrated in Section 5. Computational results and the analysis of the performance of the proposed algorithms are presented in Section 6. The paper ends with some concluding remarks stated in Section 7.

Consider a directed graph G
                     =(N,
                     A) defined by a set of nodes N
                     ≔{1,…,
                     n} and a set of arcs A
                     ≔{(i,
                     j)∈
                     N
                     ×
                     N: i
                     ≠
                     j}, where ∣A∣=
                     m. A non-negative length c
                     
                        ij
                      is assigned to each arc (i,
                     j)∈
                     A. Let F(i)≔{j
                     ∈
                     N: (i,
                     j)∈
                     A} and B(i)≔{j
                     ∈
                     N: (j,
                     i)∈
                     A} be the forward star and backward star associated with each node i
                     ∈
                     N, respectively. Moreover, let S denote a certain number of node subsets T
                     1,…, T
                     
                        S
                      such that T
                     
                        h
                     
                     ∩
                     T
                     
                        k
                     
                     =∅,
                     h, k
                     =1,…, S,
                     h
                     ≠
                     k.

Given two nodes i
                     1, i
                     
                        π
                     
                     ∈
                     N,
                     i
                     1
                     ≠
                     i
                     
                        π
                     , the path 
                     
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                      from i
                     1 to i
                     
                        π
                      is defined as a sequence of nodes 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                           =
                           {
                           
                              
                                 i
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 i
                              
                              
                                 π
                              
                           
                           }
                        
                      such that (i
                     
                        j
                     ,
                     i
                     
                        j+1)∈
                     A,
                     j
                     =1,…, π
                     −1. Observe that i
                     
                        j
                     , j
                     =1,…, π, represents the node index occurring in position j in path 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                     . A path 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                      is said to be elementary whether i
                     
                        l
                     
                     ≠
                     i
                     
                        j
                     , l, j
                     =1,…, π and l
                     ≠
                     j. We refer to the length of path 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                      as 
                        
                           l
                           (
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                           )
                        
                      representing the sum of the lengths of the arcs connecting consecutive nodes in 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                     , i.e., 
                        
                           l
                           (
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                           )
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 π
                                 -
                                 1
                              
                           
                           
                              
                                 c
                              
                              
                                 j
                                 ,
                                 j
                                 +
                                 1
                              
                           
                        
                     .

The 
                        
                           SPTP
                        
                      aims at finding a shortest path 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 d
                              
                           
                        
                      from origin node s
                     ∈
                     V to destination node d
                     ∈
                     V in the directed graph G, such that it visits successively and sequentially the following subsets T
                     
                        k
                     , k
                     =0,…, S
                     +1, such that T
                     0
                     ={s} and T
                     
                        S+1
                     ={d}. Note that sets T
                     
                        k
                     , k
                     =1,…, S, must be visited in exactly the same order in which they are defined.

Consequently, a path 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                      is said to be a feasible solution for the 
                        
                           SPTP
                        
                      if:
                        
                           (1)
                           
                              
                                 
                                    
                                    
                                       
                                          ∃
                                          
                                          
                                             
                                                g
                                             
                                             
                                                0
                                             
                                          
                                          ,
                                          
                                             
                                                g
                                             
                                             
                                                1
                                             
                                          
                                          …
                                          
                                             
                                                g
                                             
                                             
                                                S
                                                +
                                                1
                                             
                                          
                                          ∈
                                          [
                                          1
                                          ,
                                          π
                                          ]
                                          :
                                          
                                             
                                                g
                                             
                                             
                                                0
                                             
                                          
                                          <
                                          
                                             
                                                g
                                             
                                             
                                                1
                                             
                                          
                                          <
                                          ⋯
                                          <
                                          
                                             
                                                g
                                             
                                             
                                                S
                                                +
                                                1
                                             
                                          
                                          ,
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                i
                                             
                                             
                                                
                                                   
                                                      g
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                          ∈
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      π
                                                   
                                                
                                             
                                          
                                          ∩
                                          
                                             
                                                T
                                             
                                             
                                                0
                                             
                                          
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                
                                                   
                                                      g
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                          ∈
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      π
                                                   
                                                
                                             
                                          
                                          ∩
                                          
                                             
                                                T
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                
                                                   
                                                      g
                                                   
                                                   
                                                      S
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          ∈
                                          
                                             
                                                P
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      π
                                                   
                                                
                                             
                                          
                                          ∩
                                          
                                             
                                                T
                                             
                                             
                                                S
                                                +
                                                1
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

Conditions (1) mean that an increasing sequence of natural numbers exists such that the corresponding nodes of the path 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       π
                                    
                                 
                              
                           
                        
                      belong to the ordered sequence of subsets T
                     0, T
                     1,…, T
                     
                        S+1. A small instance of the 
                        
                           SPTP
                        
                      is depicted in Fig. 1
                     , where N
                     ={s
                     =1, 2, 3, 4, 5, 6, d
                     =7}, S
                     =2,T
                     0
                     ={s
                     =1}, T
                     1
                     ={3}, T
                     2
                     ={2, 4}, T
                     3
                     ={d
                     =7}. The shortest path from node 1 to node 7 is 
                        
                           
                              
                                 P
                              
                              
                                 1
                                 ,
                                 7
                              
                           
                           =
                           {
                           1
                           ,
                           3
                           ,
                           7
                           }
                        
                      with length 5, while the shortest path tour between the same origin and destination nodes is P
                     1,7
                     ={1, 3, 2, 3, 7} with length 11. Such path is not elementary, since it passes twice through node 3.

The state-of-the-art consists of the expanded graph method proposed by Festa in [13], and referred to as 
                        
                           EGA
                        
                      in the sequel. A brief description of how the 
                        
                           EGA
                        
                      works is given in the following.

The 
                        
                           EGA
                        
                      relies on a polynomial-time reduction algorithm that transforms any 
                        
                           SPTP
                        
                      instance defined on a single-stage graph G into a single-source single-destination 
                        
                           SPP
                        
                      instance defined on a multi-stage graph G′=(V′,
                     A′) with S
                     +2 stages, each replicating G, and such that V′={1,…, (S
                     +2)n} and ∣A′∣=(S
                     +1)m. More precisely, the reduction algorithm performs the following operations:
                        
                           i.
                           
                              V′≔{1,…, (S
                              +2)n}; A′≔∅;

at each iteration, an arc(a,
                              b) is added to A′. In particular, for each stage k
                              ∈{0,…, S}, for each node v
                              ∈{1,…, n}, and for each adjacent node w
                              ∈
                              FS(v), (a,
                              b)=(v
                              +
                              kn,
                              w
                              +(k
                              +1)n) with length c
                              
                                 vw
                              , if w
                              ∈
                              T
                              
                                 k+1; (a,
                              b)=(v
                              +
                              kn,
                              w
                              +
                              kn) with length c
                              
                                 vw
                              , otherwise.

Since ∣A′∣=(S
                     +1)m, the computational complexity of the reduction algorithm is O(Sm).
                        1
                        For bounding the computational complexity of an algorithm, several asymptotic notations are used [6]. If n is the input size, the computational complexity of an algorithm f(n) is O(g(n)), if there exist positive constants a and n
                           0 such that 0⩽
                           f(n)⩽
                           ag(n) for all n
                           ⩾
                           n
                           0.
                     
                     
                        1
                      Once the multi-stage graph G′ is obtained, to solve the resulting 
                        
                           SPP
                        
                      any shortest path algorithm can be applied. By applying Dijkstra’s algorithm that uses a binary heap for storing temporary node labels, the overall worst case computational complexity of 
                        
                           EGA
                        
                      is O(∣A′∣log∣V′∣+∣V′∣log∣V′∣), which is dominated by O(∣A′∣log∣V′∣), that is O(Smlog
                     n).

In this section, we will focus on some basic properties related to the reducibility of any 
                        
                           SPTP
                        
                      instance into a single-source single-destination 
                        
                           SPP
                        
                      instance.

Given an instance of the 
                           
                              SPTP
                           
                         on a directed graph G
                        =(N,
                        A) the following definition is applied.
                           Definition 1
                           Let G
                              (a)
                              =(N
                              (a),
                              A
                              (a),
                              c
                              (a)) be a weighted directed graph obtained from G in such a way that:
                                 
                                    •
                                    
                                       
                                          
                                             
                                                
                                                   N
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                             =
                                             
                                                
                                                   ⋃
                                                
                                                
                                                   k
                                                   =
                                                   0
                                                
                                                
                                                   S
                                                   +
                                                   1
                                                
                                             
                                             
                                                
                                                   T
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       ;


                                       
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                             =
                                             
                                                
                                                   ⋃
                                                
                                                
                                                   k
                                                   =
                                                   0
                                                
                                                
                                                   S
                                                
                                             
                                             
                                                
                                                   A
                                                
                                                
                                                   k
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                          
                                       , where 
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   k
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                             ≔
                                             {
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             ∈
                                             
                                                
                                                   T
                                                
                                                
                                                   k
                                                
                                             
                                             ×
                                             
                                                
                                                   T
                                                
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             :
                                             i
                                             ∈
                                             
                                                
                                                   T
                                                
                                                
                                                   k
                                                
                                             
                                             
                                             and
                                             
                                             j
                                             ∈
                                             
                                                
                                                   T
                                                
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             }
                                          
                                       ;


                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                             :
                                             
                                                
                                                   A
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                             
                                             ↦
                                             
                                             
                                                
                                                   Z
                                                
                                                
                                                   +
                                                
                                             
                                          
                                        is a function that associates an integer non-negative number 
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   ij
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                          
                                        to each arc (i,
                                       j)∈
                                       A
                                       (a), where 
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   ij
                                                
                                                
                                                   (
                                                   a
                                                   )
                                                
                                             
                                             ≔
                                             l
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             )
                                          
                                        is the length of a shortest path from node i
                                       ∈
                                       T
                                       
                                          k
                                        to node j
                                       ∈
                                       T
                                       
                                          k+1 on graph G.

The following property holds for the arc set A
                        (a).
                           Property 1
                           
                              Let G
                              
                                 (a)
                               
                              be the weighted directed graph associated with an instance of the 
                              
                                 
                                    SPTP
                                 
                              
                              , then ∣A
                              
                                 (a)
                              ∣⩽
                              n(n
                              −
                              2).
                           

Solving a 
                           
                              SPTP
                           
                         instance may be performed by finding a shortest path in G
                        (a). Indeed, the following property holds.
                           Property 2
                           
                              Every path 
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          (
                                          a
                                          )
                                       
                                    
                                 
                               
                              from s to d in G
                              
                                 (a)
                               
                              defines a 
                              
                                 
                                    SPTP
                                 
                               
                              solution in G with the same cost, and vice versa.
                           

Such a property derives from the construction of graph G
                        (a) given in Definition 1.

The optimal cost of any 
                           
                              SPTP
                           
                         instance is equal to the cost of the shortest path from node s to node d computed on G
                        (a), as shown in the following property.
                           Property 3
                           
                              The cost of a shortest path 
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          (
                                          a
                                          )
                                       
                                    
                                 
                               
                              in G
                              
                                 (a)
                               
                              is equal to the cost of an optimal 
                              
                                 
                                    SPTP
                                 
                               
                              in G.
                           

Such property can be proved by contradiction. From Property 2, it follows that the shortest path 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          (
                                          a
                                          )
                                       
                                    
                                 
                               in G
                              (a) corresponds to a feasible path tour 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               in G. Hence, suppose that a shortest path tour P
                              
                                 s,d
                               different from 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               exists in G, such that 
                                 
                                    l
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                    
                                    )
                                    <
                                    l
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   s
                                                   ,
                                                   d
                                                
                                                
                                                   ∗
                                                
                                             
                                          
                                       
                                    
                                 
                              . This means that a feasible path 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          
                                             
                                                (
                                                a
                                                )
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                               exists in G
                              (a), associated with P
                              
                                 s,d
                              , whose cost is less than the cost of the shortest path 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          (
                                          a
                                          )
                                       
                                    
                                 
                              . This conclusion contradicts the initial assumption.□

The framework of the proposed 
                           
                              MGA
                           
                         is sketched in Algorithm 1:
                           Algorithm 1
                           Modified graph algorithm 
                                 
                                    
                                       
                                       
                                          
                                             Step 1 (Initialization)
                                          
                                          
                                             Compute a shortest path from each node i
                                                ∈
                                                T
                                                
                                                   k
                                                 to each node j
                                                ∈
                                                T
                                                
                                                   k+1, k
                                                =0,…, S.
                                          
                                          
                                             Step 2 (Graph Construction)
                                          
                                          
                                             Build the digraph G
                                                (a)
                                                =(N
                                                (a),
                                                A
                                                (a)) as detailed in Definition 1.
                                          
                                          
                                             Step 3 (Topological enumeration of N
                                                (a))
                                          
                                          
                                             Step 4 (Shortest Path Computation)
                                          
                                          
                                             Let 
                                                   
                                                      l
                                                      (
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            1
                                                            ,
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                 denote the length of the shortest path from node s
                                                =1 to node d
                                                =
                                                i, and p(i) denote
                                          
                                          
                                             the predecessor node of i in 
                                                   
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            1
                                                            ,
                                                            i
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             Set 
                                                   
                                                      l
                                                      (
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            1
                                                            ,
                                                            1
                                                         
                                                      
                                                      )
                                                      ≔
                                                      0
                                                      ,
                                                      p
                                                      (
                                                      1
                                                      )
                                                      ≔
                                                      1
                                                   
                                                 and 
                                                   
                                                      
                                                         
                                                            iteration
                                                         
                                                         
                                                            MGA
                                                         
                                                      
                                                      ≔
                                                      0
                                                   
                                                .
                                          
                                          
                                             
                                                for all 
                                                j
                                                =2,…, ∣N
                                                (a)∣ do
                                             
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      l
                                                      (
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            1
                                                            ,
                                                            j
                                                         
                                                      
                                                      )
                                                      =
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            i
                                                            ∈
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  (
                                                                  a
                                                                  )
                                                               
                                                            
                                                            :
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                            ∈
                                                            
                                                               
                                                                  A
                                                               
                                                               
                                                                  (
                                                                  a
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      {
                                                      l
                                                      (
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            1
                                                            ,
                                                            i
                                                         
                                                      
                                                      )
                                                      +
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            ij
                                                         
                                                      
                                                      }
                                                   
                                                . Update p(j) with the value of i whereby the minimum of 
                                                   
                                                      l
                                                      (
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            1
                                                            ,
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                 occurs.
                                          
                                          
                                             
                                                Update the number of iterations as 
                                                   
                                                      
                                                         
                                                            iteration
                                                         
                                                         
                                                            MGA
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            iteration
                                                         
                                                         
                                                            MGA
                                                         
                                                      
                                                      +
                                                      1
                                                   
                                                .
                                          
                                          
                                             
                                                end for
                                             
                                          
                                       
                                    
                                 
                              
                           


                              The worst case computational complexity of 
                              
                                 
                                    MGA
                                 
                               
                              is O(n
                              
                                 3
                              
                              ).
                           

In order to evaluate the computational complexity of the proposed algorithm, it is useful to observe that the total number C of shortest paths to be computed in Step 1 is given by:
                                 
                                    
                                       C
                                       =
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                0
                                             
                                             
                                                S
                                             
                                          
                                       
                                       |
                                       
                                          
                                             T
                                          
                                          
                                             i
                                          
                                       
                                       |
                                       |
                                       
                                          
                                             T
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       |
                                       .
                                    
                                 
                              Note that C
                              =
                              O(n
                              2) and the worst case arises when S
                              =2 and 
                                 
                                    |
                                    
                                       
                                          T
                                       
                                       
                                          i
                                       
                                    
                                    |
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   n
                                                   -
                                                   2
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    i
                                    =
                                    1
                                    ,
                                    2
                                 
                              . In this latter case, Step 1 reduces to computing a shortest path between each pair of nodes i, j
                              ∈
                              N
                              (a) such that i
                              ∈
                              T
                              1 and j
                              ∈
                              T
                              2 and can be solved in the worst case in O(mn
                              +
                              n
                              2logn) by applying Dijkstra’s algorithm with Fibonacci’s heap. As already underlined, the complexity of Step 2 is O(Sm). Step 3 is performed in O(∣N
                              (a)∣)=
                              O(n), while the theoretical complexity of the shortest path problems in acyclic graphs is linear in the number of arcs, so that the complexity of Step 4 in Algorithm 1 is O(∣A
                              (a)∣), which is O(n
                              2). Since m
                              =
                              O(n
                              2), it follows that the problem can be solved in the worst case in O(n
                              3).□

In this section, we describe a dynamic programming algorithm 
                        
                           (
                           DPA
                           )
                        
                      to solve the 
                        
                           SPTP
                        
                     . 
                        
                           DPA
                        
                      has been designed by considering the 
                        
                           SPTP
                        
                      as an extension of the weight constrained shortest path problem, where the resource r
                     
                        i
                      associated to a path P
                     
                        s,i
                      from node s to node i represents the index of the last set T
                     
                        k
                     , k
                     =0,…, S
                     +1, visited along the path and the resource consumption of an arc is label-dependent.

Recent scientific literature on the study of the classical weight constrained shortest path problem includes among others a paper of Dumitrescu and Boland [10], where the authors propose several alternative algorithms, including an exact method based on the weight-scaling approach, later improved by the same researchers in [11]. In 2009, Muhandiramge and Boland [19] designed a method to find simultaneous solution of Lagrangean dual problems interleaved with preprocessing. Dynamic programming approaches for the weight constrained shortest path problem and the shortest path problem with resource constraints have been proposed in [1,12,20].

In our case, viewing the 
                        
                           SPTP
                        
                      as an extension of the weight constrained shortest path problem, to each path P
                     
                        s,i
                      from node s to node i is associated a label y
                     
                        i
                     . It stores information about the length of the path and the resource consumption along the path, that is, y
                     
                        i
                     
                     =(l(P
                     
                        s,i
                     ),
                     r
                     
                        i
                     ). With reference to the same network depicted in Fig. 1, label y
                     2 associated with the subpath P
                     1,2
                     ={1, 3, 2} takes the following form: y
                     2
                     =(6, 2). Similarly, subpath P
                     1,3
                     ={1, 2, 3} has label y
                     3
                     =(2, 1).

It is worth observing that more than one path P
                     
                        s,i
                      may exist to reach node i starting from node s. This means that several labels y
                     
                        i
                     
                     =(l(P
                     
                        s,i
                     ), r
                     
                        i
                     ) can be associated with each node i and they are stored in the set D(i).

Let 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ′
                              
                           
                        
                      and 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                        
                      be two distinct paths from node s to node i and let 
                        
                           
                              
                                 r
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                        
                      and 
                        
                           
                              
                                 r
                              
                              
                                 i
                              
                              
                                 ″
                              
                           
                        
                      denote the resource consumption along path 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ′
                              
                           
                        
                      and 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                        
                     , respectively.

From the definition of resource consumption, it follows that for the path 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ′
                              
                           
                        
                      a sequence of natural numbers 
                        
                           
                              
                                 g
                              
                              
                                 0
                              
                              
                                 ′
                              
                           
                           ,
                           
                           
                              
                                 g
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                           …
                           
                              
                                 g
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                              
                                 ′
                              
                           
                        
                      exists such that 
                        
                           
                              
                                 g
                              
                              
                                 0
                              
                              
                                 ′
                              
                           
                           <
                           
                              
                                 g
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                           <
                           ⋯
                           <
                           
                              
                                 g
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                              
                                 ′
                              
                           
                        
                      and 
                        
                           
                              
                                 i
                              
                              
                                 
                                    
                                       g
                                    
                                    
                                       0
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           ∈
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ′
                              
                           
                           ∩
                           
                              
                                 T
                              
                              
                                 0
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 i
                              
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                           ∈
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ′
                              
                           
                           ∩
                           
                              
                                 T
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        
                     . Similarly, for the path 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                        
                      it is possible to find a sequence of natural number 
                        
                           
                              
                                 g
                              
                              
                                 0
                              
                              
                                 ″
                              
                           
                           ,
                           
                              
                                 g
                              
                              
                                 1
                              
                              
                                 ″
                              
                           
                           …
                           
                              
                                 g
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                              
                                 ″
                              
                           
                        
                      such that 
                        
                           
                              
                                 g
                              
                              
                                 0
                              
                              
                                 ″
                              
                           
                           <
                           
                              
                                 g
                              
                              
                                 1
                              
                              
                                 ″
                              
                           
                           <
                           …
                           <
                           
                              
                                 g
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                              
                                 ″
                              
                           
                        
                      and 
                        
                           
                              
                                 i
                              
                              
                                 
                                    
                                       g
                                    
                                    
                                       0
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           ∈
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                           ∩
                           
                              
                                 T
                              
                              
                                 0
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 i
                              
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ″
                                          
                                       
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                           ∈
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                           ∩
                           
                              
                                 T
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                           
                        
                     .

Suppose that 
                        
                           
                              
                                 r
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                           ⩾
                           
                              
                                 r
                              
                              
                                 i
                              
                              
                                 ″
                              
                           
                        
                     , there exists a path 
                        
                           
                              
                                 P
                              
                              
                                 i
                                 ,
                                 d
                              
                              
                                 ‴
                              
                           
                        
                      such that the path resulting from the concatenation of 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                        
                      with 
                        
                           
                              
                                 P
                              
                              
                                 i
                                 ,
                                 d
                              
                              
                                 ‴
                              
                           
                        
                     , say 
                        
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       ^
                                    
                                 
                              
                              
                                 s
                                 ,
                                 d
                              
                           
                           =
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                           ⊕
                           
                              
                                 P
                              
                              
                                 i
                                 ,
                                 d
                              
                              
                                 ‴
                              
                           
                        
                     , is a feasible solution for the 
                        
                           SPTP
                        
                     . The following result holds.
                        Lemma 2
                        
                           If 
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ″
                                    
                                 
                                 ⊕
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                              
                            
                           is a feasible 
                           
                              
                                 SPTP
                              
                            
                           solution, then 
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 ⊕
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                              
                            
                           is also a feasible 
                           
                              
                                 SPTP
                              
                            
                           solution.
                        

Since 
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ″
                                    
                                 
                                 ⊕
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                              
                            is a feasible 
                              
                                 SPTP
                              
                            solution, there exists a sequence of natural numbers 
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ″
                                          
                                       
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       g
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                              
                            such that 
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ″
                                          
                                       
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                                 <
                                 ⋯
                                 <
                                 
                                    
                                       g
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       i
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   i
                                                
                                                
                                                   ″
                                                
                                             
                                             +
                                             1
                                          
                                          
                                             ‴
                                          
                                       
                                    
                                 
                                 ∈
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                                 ∩
                                 
                                    
                                       T
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ″
                                          
                                       
                                       +
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             S
                                             +
                                             1
                                          
                                          
                                             ‴
                                          
                                       
                                    
                                 
                                 ∈
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                                 ∩
                                 
                                    
                                       T
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                 
                              
                           .

Owing to the feasibility of path 
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ″
                                    
                                 
                                 ⊕
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 ⩾
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                           , it is possible to extract the subsequence 
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       g
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                              
                            from the sequence 
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ″
                                          
                                       
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       g
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                              
                           , such that 
                              
                                 
                                    
                                       g
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                                 <
                                 ⋯
                                 <
                                 
                                    
                                       g
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                    
                                       ‴
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       i
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                             +
                                             1
                                          
                                          
                                             ‴
                                          
                                       
                                    
                                 
                                 ∈
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                                 ∩
                                 
                                    
                                       T
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             S
                                             +
                                             1
                                          
                                          
                                             ‴
                                          
                                       
                                    
                                 
                                 ∈
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                                 ∩
                                 
                                    
                                       T
                                    
                                    
                                       S
                                       +
                                       1
                                    
                                 
                              
                           . Consequently, 
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 ⊕
                                 
                                    
                                       P
                                    
                                    
                                       i
                                       ,
                                       d
                                    
                                    
                                       ‴
                                    
                                 
                              
                            is a feasible path for the 
                              
                                 SPTP
                              
                           .□

Let us assume that 
                        
                           l
                           
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                           <
                           l
                           
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          i
                                       
                                       
                                          ″
                                       
                                    
                                 
                              
                           
                        
                     . It follows that path 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 i
                              
                              
                                 ″
                              
                           
                        
                      can be discarded.
                        Lemma 3
                        
                           If 
                           
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 <
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                           
                           , then 
                           
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                          ⊕
                                          
                                             
                                                P
                                             
                                             
                                                i
                                                ,
                                                d
                                             
                                             
                                                ‴
                                             
                                          
                                       
                                    
                                 
                                 <
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                          ⊕
                                          
                                             
                                                P
                                             
                                             
                                                i
                                                ,
                                                d
                                             
                                             
                                                ‴
                                             
                                          
                                       
                                    
                                 
                              
                           
                           , thus from path 
                           
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                            
                           it is not possible to generate the optimal 
                           
                              
                                 SPTP
                              
                            
                           solution.
                        


                           Lemma 3 can be proved by contradiction. Thus, for the purpose of contradiction, let us assume that 
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                          ⊕
                                          
                                             
                                                P
                                             
                                             
                                                i
                                                ,
                                                d
                                             
                                             
                                                ‴
                                             
                                          
                                       
                                    
                                 
                                 ⩾
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                          ⊕
                                          
                                             
                                                P
                                             
                                             
                                                i
                                                ,
                                                d
                                             
                                             
                                                ‴
                                             
                                          
                                       
                                    
                                 
                              
                           . Such an expression can be rewritten as follows: 
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 +
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                i
                                                ,
                                                d
                                             
                                             
                                                ‴
                                             
                                          
                                       
                                    
                                 
                                 ⩾
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                                 +
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                i
                                                ,
                                                d
                                             
                                             
                                                ‴
                                             
                                          
                                       
                                    
                                 
                              
                           . It follows that 
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 -
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                                 ⩾
                                 0
                              
                           . This means that 
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 ⩾
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                           , contradicting the assumption.□


                     Lemma 3 suggests us to define a dominance relation between labels. In particular the following results can be drawn.
                        Definition 2
                        Let 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       
                                          l
                                          
                                             
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         s
                                                         ,
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                r
                                             
                                             
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                                 =
                                 
                                    
                                       
                                          l
                                          
                                             
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         s
                                                         ,
                                                         i
                                                      
                                                      
                                                         ″
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                r
                                             
                                             
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                            be two labels associated with paths 
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       P
                                    
                                    
                                       s
                                       ,
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                           , respectively. If 
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 <
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 ⩾
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                           , then 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                            is dominated by 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                            and path 
                              
                                 
                                    
                                       P
                                    
                                    
                                       si
                                    
                                    
                                       ″
                                    
                                 
                              
                            can be discarded.

Let 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       
                                          l
                                          
                                             
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         s
                                                         ,
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                r
                                             
                                             
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                                 =
                                 
                                    
                                       
                                          l
                                          
                                             
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         s
                                                         ,
                                                         i
                                                      
                                                      
                                                         ″
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                r
                                             
                                             
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                            be two labels. Such labels are said to be equivalent if 
                              
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 =
                                 l
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                s
                                                ,
                                                i
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       ″
                                    
                                 
                              
                           .

Starting from label 
                        
                           
                              
                                 y
                              
                              
                                 s
                              
                              
                                 0
                              
                           
                           =
                           (
                           0
                           ,
                           0
                           )
                        
                      associated with the origin node s, the solution space is explored in order to obtain efficient solutions for each node. Through the algorithm iterations, a label 
                        
                           
                              
                                 y
                              
                              
                                 j
                              
                              
                                 ″
                              
                           
                           =
                           
                              
                                 
                                    l
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   s
                                                   ,
                                                   j
                                                
                                                
                                                   ″
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    
                                       
                                          r
                                       
                                       
                                          j
                                       
                                       
                                          ″
                                       
                                    
                                 
                              
                           
                        
                      is generated starting from a label 
                        
                           
                              
                                 y
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                           =
                           
                              
                                 
                                    l
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   s
                                                   ,
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    
                                       
                                          r
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                        
                      using the following updating rules:
                        
                           (2)
                           
                              l
                              
                                 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             s
                                             ,
                                             j
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                              =
                              l
                              
                                 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             s
                                             ,
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              
                              +
                              
                                 
                                    c
                                 
                                 
                                    ij
                                 
                              
                              ;
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    r
                                 
                                 
                                    j
                                 
                                 
                                    ″
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                +
                                                1
                                                ,
                                             
                                             
                                                if
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                +
                                                1
                                                ⩽
                                                S
                                                +
                                                1
                                                
                                                and
                                                
                                                j
                                                ∈
                                                
                                                   
                                                      T
                                                   
                                                   
                                                      
                                                         
                                                            r
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      +
                                                      1
                                                   
                                                
                                                ;
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ,
                                             
                                             
                                                otherwise
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     At the end of the algorithm, D(j), j
                     ∈
                     N, is an efficient set, that is, it contains efficient and feasible solutions. In addition, 
                        
                           
                              
                                 l
                              
                              
                                 d
                              
                              
                                 ∗
                              
                           
                           =
                           l
                           
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              
                           
                           :
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           =
                           
                              
                                 
                                    l
                                    
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   s
                                                   ,
                                                   d
                                                
                                                
                                                   ∗
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    S
                                    +
                                    1
                                 
                              
                           
                           ∈
                           D
                           (
                           d
                           )
                        
                      represents the length of the optimal solution of the shortest path tour from node s to node d.

Let L be the set storing the labels associated with the partial paths to be processed, the steps of the proposed labeling method are depicted in Algorithm 2.

An upper bound on l(P
                     
                        s,d
                     ), named h
                     max, may be obtained by considering that, in the worst case, a tour contains S
                     +1 subpaths, each of them involving n
                     −1 arcs having the maximum cost.

Therefore it results that
                        
                           (4)
                           
                              l
                              (
                              
                                 
                                    P
                                 
                                 
                                    s
                                    ,
                                    d
                                 
                              
                              )
                              ⩽
                              
                                 
                                    h
                                 
                                 
                                    max
                                 
                              
                              ⩽
                              (
                              S
                              +
                              1
                              )
                              (
                              n
                              -
                              1
                              )
                              
                                 
                                    c
                                 
                                 
                                    max
                                 
                              
                              ,
                              
                              
                                 
                                    c
                                 
                                 
                                    max
                                 
                              
                              =
                              
                                 
                                    
                                       max
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    ij
                                 
                              
                              .
                           
                        
                     
                     
                        Algorithm 2
                        Multidimensional labeling algorithm 
                              
                                 
                                    
                                    
                                       
                                          Step 1 (Initialization)
                                       
                                       
                                          Set: 
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         s
                                                         ,
                                                         s
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   ≔
                                                   {
                                                   s
                                                   }
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         s
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   ≔
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                            
                                                               
                                                                  r
                                                               
                                                               
                                                                  s
                                                               
                                                               
                                                                  0
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                              with 
                                                
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         s
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   ≔
                                                   0
                                                
                                             , and 
                                                
                                                   
                                                      
                                                         iteration
                                                      
                                                      
                                                         DPA
                                                      
                                                   
                                                   ≔
                                                   0
                                                
                                             .
                                       
                                       
                                          Set: 
                                                
                                                   L
                                                   ≔
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  y
                                                               
                                                               
                                                                  s
                                                               
                                                               
                                                                  0
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                   D
                                                   (
                                                   s
                                                   )
                                                   ≔
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  y
                                                               
                                                               
                                                                  s
                                                               
                                                               
                                                                  0
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                   D
                                                   (
                                                   j
                                                   )
                                                   ≔
                                                   ∅
                                                   ,
                                                   ∀
                                                   j
                                                   ∈
                                                   N
                                                   ,
                                                   j
                                                   
                                                   ≠
                                                   
                                                   s
                                                
                                             .
                                       
                                       
                                          Step 2 (Label Selection)
                                       
                                       
                                          Select and delete from L a label 
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          Update the number of iterations as 
                                                
                                                   
                                                      
                                                         iteration
                                                      
                                                      
                                                         DPA
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         iteration
                                                      
                                                      
                                                         DPA
                                                      
                                                   
                                                   +
                                                   1
                                                
                                             .
                                       
                                       
                                          Step 3 (Label Extension)
                                       
                                       
                                          
                                             for all (i,
                                             j)∈
                                             A 
                                             do
                                          
                                       
                                       
                                          
                                             Set:
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               P
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         s
                                                         ,
                                                         j
                                                      
                                                   
                                                   ≔
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         s
                                                         ,
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   ∪
                                                   {
                                                   j
                                                   }
                                                
                                             .
                                       
                                       
                                          
                                             
                                             
                                                
                                                   l
                                                   (
                                                   
                                                      
                                                         
                                                            
                                                               P
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         s
                                                         ,
                                                         j
                                                      
                                                   
                                                   )
                                                   ≔
                                                   l
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  s
                                                                  ,
                                                                  i
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          
                                             
                                             if 
                                             
                                                
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   <
                                                   S
                                                   +
                                                   1
                                                
                                              
                                             then
                                          
                                       
                                       
                                          
                                             Set: 
                                                
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   ≔
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   +
                                                   1
                                                
                                             .
                                       
                                       
                                          
                                             
                                             if 
                                             
                                                
                                                   j
                                                   ∈
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         
                                                            
                                                               k
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                   
                                                
                                              
                                             then
                                          
                                       
                                       
                                          
                                             
                                             Set 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ≔
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          
                                             
                                             else
                                          
                                       
                                       
                                          
                                             
                                             Set 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ≔
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          
                                             
                                             end if
                                          
                                       
                                       
                                          
                                             
                                             else
                                          
                                       
                                       
                                          
                                             Set: 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ≔
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          
                                             
                                             end if
                                          
                                       
                                       
                                          
                                             Set 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ≔
                                                   (
                                                   l
                                                   (
                                                   
                                                      
                                                         
                                                            
                                                               P
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         s
                                                         ,
                                                         j
                                                      
                                                   
                                                   )
                                                   ,
                                                   
                                                      
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             .
                                       
                                       
                                          
                                             
                                             if 
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                              is not dominated by any label 
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                              belonging to D(j) then
                                          
                                       
                                       
                                          
                                             Remove from D(j) and from L all labels 
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                              that are dominated by 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          
                                             Add 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                              to D(j) and to L.
                                       
                                       
                                          
                                             
                                             end if
                                          
                                       
                                       
                                          
                                             end for
                                          
                                       
                                       
                                          Step 4 (Termination check)
                                       
                                       
                                          
                                             if 
                                             L
                                             =∅ then
                                          
                                       
                                       
                                          
                                             STOP
                                       
                                       
                                          
                                             else
                                          
                                       
                                       
                                          
                                             Go to Step 2.
                                       
                                       
                                          
                                             end if
                                          
                                       
                                    
                                 
                              
                           
                        

In view of the relation (4), the following property stands.
                        Theorem 4
                        
                           The computational complexity of 
                           
                              
                                 DPA
                              
                            
                           is O(S
                           
                              2
                           
                           n
                           
                              3
                           
                           c
                           
                              max
                           
                           ).
                        

The number of iterations performed by the algorithm depends on the total number B of different labels generated. There are at most O(B)=
                           O(Sh
                           max) different labels. Each label may be replicated on different nodes, but it is expanded at most 
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       N
                                    
                                 
                                 ∣
                                 F
                                 (
                                 i
                                 )
                                 ∣
                                 =
                                 m
                              
                            times, and each expansion requires O(1) times, then the total number of performed iterations is:
                              
                                 
                                    O
                                    (
                                    Bm
                                    )
                                    =
                                    O
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          nmc
                                       
                                       
                                          max
                                       
                                    
                                    )
                                    .
                                 
                              
                           Since O(m)=
                           O(n
                           2), the resulting overall complexity is O(S
                           2
                           n
                           3
                           c
                           max) in the worst case.□

The running time of Algorithm 2 could be improved by considering a pruning strategy based on the path length. Let 
                        l
                     
                     
                        i
                      be the least length from node i to node d and let UB be the length of a feasible solution for the 
                        
                           SPTP
                        
                     . A label 
                        
                           
                              
                                 y
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                        
                      can be discarded if 
                        
                           l
                           
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                           +
                           
                              
                                 
                                    
                                       l
                                    
                                    
                                       ̲
                                    
                                 
                              
                              
                                 i
                              
                           
                           >
                           UB
                        
                     . In addition, whenever a feasible 
                        
                           SPTP
                        
                      solution 
                        
                           
                              
                                 P
                              
                              
                                 s
                                 ,
                                 d
                              
                              
                                 ′
                              
                           
                        
                      is found such that 
                        
                           l
                           
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          s
                                          ,
                                          d
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                           <
                           UB
                        
                     , then UB is updated.

In this section, we discuss and compare the computational results obtained with the 
                        
                           DPA
                           ,
                           
                           MGA
                        
                      and 
                        
                           EGA
                        
                     . The experiments were carried out on a PC equipped with one Intel Core X5680 Processor@3.33GHz, with 50Gbyte RAM. All algorithms were coded in java.

The main goal of these experiments is to study the behavior of the proposed algorithms (i.e., 
                        
                           DPA
                           ,
                           
                           MGA
                        
                     ) and compare them with the state-of-the-art algorithm (i.e., 
                        
                           EGA
                        
                     ). A computational analysis is outlined to show how the performance of 
                        
                           DPA
                        
                      and 
                        
                           MGA
                        
                      are affected by network topology and characteristics, i.e., number and size of subsets T
                     
                        k
                     , k
                     =0,…, S
                     +1. In all the test problems, the following setting is used: s
                     =1 and d
                     =
                     n. Details related to the basic shortest path algorithms used inside the proposed methods are given below.

As far as the construction of G
                     (a) in the 
                        
                           MGA
                        
                      is concerned, the Floyd–Warshall algorithm [15] is used to compute the length of the shortest path between all node-pairs of G. Observe that graph G
                     (a) is built explicitly within 
                        
                           MGA
                        
                     . The shortest path solutions in 
                        
                           EGA
                        
                      is provided by Dijkstra’s algorithm [7] with binary heaps [17]. It is worth observing that for 
                        
                           EGA
                        
                      an iteration corresponds to process the node just selected from the heap, while for 
                        
                           MGA
                        
                      and 
                        
                           DPA
                        
                      an iteration is defined implicitly inside the corresponding algorithmic sketches.

Given that the performance of 
                        
                           DPA
                        
                      is strongly influenced by an Upper Bound (UB) on the minimum cost, a feasible solution is found heuristically by selecting a node sequence {1,
                     i
                     1, 
                     i
                     2,…,
                     i
                     
                        S
                     ,
                     n} starting from the source node 1 and ending with the destination node n, and such that i
                     
                        k
                     
                     ∈
                     T
                     
                        k
                     , k
                     =1,…, S. The length of the path associated with this sequence is evaluated as the shortest path cost obtained by applying Dijkstra’s algorithm between two consecutive nodes in the sequence.

The collected computational results are reported in Tables A.1–A.9 reported in the Appendix. For each instance and each algorithm, the number of iterations and the execution times are detailed. The column headings of such tables are defined as follows: “Test” denotes the instance name; “Time” denotes the computational time in milliseconds (ms) required by each one of the proposed algorithms in order to find the optimal 
                        
                           SPTP
                        
                      solution; “Iterations” denotes the overall number of iterations performed by each of the designed algorithm; “FW Time” denotes the Floyd–Warshall running time performed by 
                        
                           MGA
                        
                      on G and required to construct G
                     (a); “SpTime” indicates the running time required by 
                        
                           EGA
                        
                      to compute the shortest path on the expanded graph; the running time required by 
                        
                           EGA
                        
                      to build the expanded graph is reported in column “EgTime”. Due to the use of java as programming language, the running time required by 
                        
                           DPA
                           ,
                           
                           MGA
                        
                      and 
                        
                           EGA
                        
                      are averaged over 30 runs, executed for each 
                        
                           SPTP
                        
                      instance.

Three classes of networks are considered: grid random, fully random, and fully dense networks. The rationale of this choice is motivated by the fact that these networks are well recognized and used extensively to assess the behavior of the solution algorithms for the classical 
                           
                              SPP
                           
                         and some of its variants (see for example, [4,5,16,9,8]). For all test networks, the arc lengths are chosen according to a uniform distribution in the range from [1,1000].

Such problems are generated by using the Gridgen generator written by Bertsekas [3]. Problem sizes are outlined in Table 1
                           . Both square (G
                           
                              τ
                           , with τ
                           =1, 2, 3) and rectangular grid networks (G
                           
                              τ
                           , with τ
                           =4, 5, 6) are designed. The nodes are arranged in a planar grid. Nodes s and d are placed at the corners. Each pair of adjacent nodes are connected in both directions. Sets T
                           
                              k
                           , k
                           =1,…, S, are generated by randomly selecting one node at a time and placing it into T
                           
                              k
                            up to achieve the corresponding size.

A set of nine networks of different size and density (i.e., the number of arcs over the number of nodes) is designed. These networks, named R
                           
                              τ
                           , τ
                           =1,…, 9, in the sequel, are generated by using the public domain Netgen program [18]. Table 2
                            reports the sizes of the random networks. For each problem, the number of nodes, the number of arcs, and the density are provided.

Three fully dense networks are generated by using the Compligen generator written by Bertsekas [3]. Each of these problems, referred to as C
                           
                              τ
                           , τ
                           =1, 2, 3, in the sequel, includes all the possible n(n
                           −1) arcs. The number of nodes is set equal to 100 for C
                           1, 300 for C
                           2, and 500 for C
                           3.

For each network of the type described above, a set of 
                              
                                 SPTP
                              
                            s is built by varying the number of node subsets S, and the size of ∣T
                           
                              k
                           ∣, k
                           =1,…, S, for a given S. More precisely, let n′=
                           n
                           −2 be the number of nodes in the original network from which the source and destination nodes are discarded, four instances of the 
                              
                                 SPTP
                              
                            are obtained by setting S in 
                              
                                 S
                                 =
                                 {
                                 5
                                 ,
                                 10
                                 ,
                                 15
                                 ,
                                 20
                                 }
                              
                           . For each value of S, three 
                              
                                 SPTP
                              
                            s are designed by varying ∣T
                           
                              k
                           ∣ in the set
                              
                                 
                                    
                                       
                                          T
                                       
                                       
                                          S
                                       
                                    
                                    =
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   T
                                                
                                                
                                                   S
                                                
                                             
                                             
                                                
                                                   |
                                                
                                                
                                                   lower
                                                
                                             
                                             ≔
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                         
                                                            3
                                                            S
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                             |
                                             
                                                
                                                   T
                                                
                                                
                                                   S
                                                
                                             
                                             
                                                
                                                   |
                                                
                                                
                                                   middle
                                                
                                             
                                             ≔
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                         
                                                            2
                                                            S
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                             |
                                             
                                                
                                                   T
                                                
                                                
                                                   S
                                                
                                             
                                             
                                                
                                                   |
                                                
                                                
                                                   upper
                                                
                                             
                                             ≔
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                         
                                                            S
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           More generally, it is:
                              
                                 
                                    
                                       
                                          T
                                       
                                       
                                          S
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ρ
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                         
                                                            S
                                                         
                                                      
                                                   
                                                
                                             
                                             :
                                             ρ
                                             ∈
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            3
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      ,
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where ρ represents the consistency of sets T
                           
                              k
                           , k
                           =1,…, S, associated with S. Observe that 
                              
                                 |
                                 
                                    
                                       T
                                    
                                    
                                       S
                                    
                                 
                                 |
                                 =
                                 3
                              
                            for each 
                              
                                 S
                                 ∈
                                 S
                              
                           , and it will be referred to as 
                              
                                 |
                                 T
                                 |
                              
                            in the sequel. In this way, a set of 12 benchmark instances remains associated with each original network.

In what follows, we use the notation 
                              
                                 
                                    
                                       type
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             |
                                             T
                                             |
                                          
                                       
                                    
                                 
                              
                            to identify each 
                              
                                 SPTP
                              
                            instance. Indeed, 
                              
                                 
                                    
                                       R
                                    
                                    
                                       1
                                    
                                    
                                       
                                          
                                             5
                                          
                                          
                                             8
                                          
                                       
                                    
                                 
                              
                            refers to the fully random problem R
                           1, with S
                           =5 node subsets T
                           1,…,T
                           5, such that ∣T
                           1∣=…=∣T
                           5∣=8, and ∣T
                           0∣=∣T
                           6∣=1. The 
                              
                                 SPTP
                              
                            instances are available for download at the following URL: http://uweb.deis.unical.it/guerriero/benchmark-instances-for-sptp. In addition, computational experiments were carried out on the instances defined by Festa in [13] and provided by the same author.

We look at several statistics to evaluate the performance of the proposed algorithms on a large number of different-sized test problems. The statistics we will consider are defined below:
                           
                              (a)
                              
                                 n-Average execution time: mean value of the overall execution times related to the 
                                    
                                       SPTP
                                    
                                  instances associated with a network with a given topology (grid random, fully random, fully dense), and a given number n of nodes.


                                 S-Average execution time: mean value of the average execution times associated with a set of 
                                    
                                       SPTP
                                    
                                  instances defined by all the networks with a given topology (grid random, fully random, fully dense), and a given value of S.


                                 S-Average iteration number: computed as for the S-Average execution time with respect to the number of iterations.


                                 ρ-Average execution time: average execution time computed with respect to a given consistency value, for a given S and for all the networks with a given topology (grid random, fully random, fully dense).

In this section, the behavior of the proposed methods is studied for the set of 
                           
                              SPTP
                           
                         s based on grid random networks. Computational results are detailed in Tables A.1–A.2 of the Appendix. Generally, the computational results show how the performances of the proposed algorithms seem to be affected by the structure of the networks, expressed by means of the number of nodes n, and density 
                           
                              δ
                              =
                              
                                 
                                    m
                                 
                                 
                                    n
                                 
                              
                           
                        . In general, the computational effort increases with n.

This trend is well highlighted in Fig. 2
                        , where the n-Average execution times are plotted as a function of the number of nodes. The n-Average time of 
                           
                              MGA
                           
                         increases more quickly than 
                           
                              DPA
                           
                         as long as n increases beyond 1250. Since the most computational part of 
                           
                              MGA
                           
                         is represented by Floyd–Warshall algorithm, that is involved in construction of G
                        (a), the reported computational times of 
                           
                              MGA
                           
                        , that is, the times required by Floyd–Warshall, grow according to the computational complexity O(n
                        3). Therefore, for grid networks with large value of n, that is, n greater than 1250, the time required by 
                           
                              MGA
                           
                         is more expensive than the one implied by 
                           
                              DPA
                           
                        . On the other hand, since paths P
                        
                           s,d
                         in grid network with a large number of nodes n contain a large number of intermediate nodes (at least g
                        
                           x
                        
                        +
                        g
                        
                           y
                        
                        −1 nodes in a g
                        
                           x
                        
                        ×
                        g
                        
                           y
                         grid), then the possibility to meet several sets T
                        
                           k
                        , k
                        =1,…, S, could increases with n. Therefore, the convergence of 
                           
                              DPA
                           
                         towards the optimal 
                           
                              SPTP
                           
                         solution does not deteriorate with the increase of n in the same manner as it occurs for 
                           
                              MGA
                           
                        .

The same trend occurs if iteration numbers are considered instead of average times (see Tables A.1–A.2 of the Appendix).


                        Figs. 3 and 4
                        
                         help to explain the differences underlined so far. In case of 
                           
                              DPA
                           
                        , the more high the value of S becomes, the more increase in the execution time occurs. This is motivated by the theoretical computational complexity of 
                           
                              DPA
                           
                         that increases explicitly more than linearly with S.

On the contrary, the theoretical computational complexity of 
                           
                              MGA
                           
                         varies implicitly with S, depending on whether it is building G
                        (a) or finding the shortest path on G
                        (a). More precisely, the increase of S reduces the cardinality of sets T
                        
                           k
                        , k
                        =1,…, S, and thus the number of arcs of G
                        (a). In fact, 
                           
                              |
                              
                                 
                                    A
                                 
                                 
                                    (
                                    a
                                    )
                                 
                              
                              |
                              =
                              O
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   ρ
                                                   n
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             S
                                          
                                       
                                    
                                 
                              
                           
                        ; therefore, the time to build G
                        (a) is reduced also as well as the time for finding the shortest path on G
                        (a). Observe that for square grid random network-based 
                           
                              SPTP
                           
                         instances there exists a value of S from which 
                           
                              MGA
                           
                         outperforms 
                           
                              DPA
                           
                        .


                        Table 3
                         brings out clearly the difference in the relationship between the S-Average iteration number performed by each algorithm and the number S of sets. Such a table shows that the average number of iterations performed by 
                           
                              DPA
                           
                         increases with S, while it decreases for 
                           
                              MGA
                           
                        . In effect, the number of labels generated by 
                           
                              DPA
                           
                         for each node increases with S, and then the number of iterations also increases. As mentioned earlier, the running time of 
                           
                              MGA
                           
                         decreases with the increase of S.

The impact of ρ on the performance of the solving algorithms emerges in Figs. 5 and 6
                        
                        . They show how the average execution times vary with respect to the values of ρ. More precisely, for a given S the time performance of 
                           
                              DPA
                           
                         decreases significantly with the values of ρ. The rationale of such a behavior can be explained by taking into account that large value of ρ, that is large size of T
                        
                           k
                         with k
                        =1,…, S, makes easier to improve the resource labels and also generate new labels with increasing resources allowing to remove a large number of dominated labels from L, so that the algorithm converges quickly to the optimal solution. This is specially true for large values of S. For 
                           
                              MGA
                           
                         an opposite trend is observed. The occurrence of increasing value of ρ for a given S, that is increasing size of sets T
                        
                           k
                         with k
                        =1,…, S, affects the construction of G
                        (a) by enlarging the size of N
                        (a), and increases also the number of arcs belonging to A
                        (a) and connecting pairs of disjoint nodes of N
                        (a). Moreover, the running time to find the shortest path on G
                        (a) grows with the size of T
                        
                           k
                        , that depends directly on ρ for a given S. Therefore, the more the performance of 
                           
                              MGA
                           
                         deteriorates with the increase of ρ, the lower are the values of S.

The computational results collected for the grid random network-based 
                           
                              SPTP
                           
                         s indicate that 
                           
                              DPA
                           
                         behaves the best. In particular, on the rectangular grid networks 
                           
                              DPA
                           
                         is on average 7.95 times faster than 
                           
                              MGA
                           
                        . A similar behavior can be observed for the square grid random networks where the average execution time of 
                           
                              DPA
                           
                         is 2.13 times faster than the average time required by 
                           
                              MGA
                           
                        .

The behavior observed for grid random networks remains confirmed in case of fully random networks. Fig. 7
                         shows how the n-Average execution time, for both 
                           
                              DPA
                           
                         and 
                           
                              MGA
                           
                        , increases with n, even if the slope related to 
                           
                              DPA
                           
                         is clearly higher that the one corresponding to 
                           
                              MGA
                           
                        . The cost of an iteration of 
                           
                              DPA
                           
                         is greater than the computational effort required to execute an iteration of 
                           
                              MGA
                           
                        . Fully random graphs are expected to contain P
                        
                           s,d
                         paths with less and less arcs as δ increases for a fixed number of nodes n. Furthermore, the cost of the single iteration of 
                           
                              DPA
                           
                         clearly grows with δ. On the other hand, for sufficiently small n, the cost of Floyd–Warshall algorithm that is involved in construction of G
                        (a) is limited, and 
                           
                              MGA
                           
                         outperforms 
                           
                              DPA
                           
                        ; note that this happens for both fully random and grid random networks, with a number of nodes n
                        ⩽1250. Definitively, the computational results collected on fully random networks confirm that 
                           
                              DPA
                           
                         can outperform 
                           
                              MGA
                           
                        , but only for sufficiently large n.


                        Fig. 8
                         shows clearly how the S-Average time of 
                           
                              DPA
                           
                         increases with S, while the average performance of 
                           
                              MGA
                           
                         seems not be influenced by the values of S. Table 4
                         indicates that the average number of iterations of 
                           
                              DPA
                           
                         increases more than linearly with S, while the average number of iterations of 
                           
                              MGA
                           
                         decreases less than linearly with S. The rationale is the same highlighted for the grid random network-based 
                           
                              SPTP
                           
                         s.

Finally, the impact of ρ on the performance of both algorithms is numerically underlined by looking inside Tables A.3–A.5, and globally depicted in Figs. 9 and 10
                        
                        .

In particular, Fig. 9 shows the impact of ρ on the performance of 
                           
                              DPA
                           
                         for a given S. The increase of ρ enlarges the size of T
                        
                           k
                        , where k
                        =1,…, S, so that the improvement of the resource labels becomes easier. In case of 
                           
                              MGA
                           
                         the trend is opposite as follows from Fig. 10. In such a case, the execution times of 
                           
                              MGA
                           
                         increase with ρ, so the performance of 
                           
                              MGA
                           
                         decreases with ρ. More precisely, the size of T
                        
                           k
                        , with k
                        =1,…, S, increases with ρ, and the impact of such an increase has an effect on the computational complexity of 
                           
                              MGA
                           
                        .

The computational results collected for the fully random network-based 
                           
                              SPTP
                           
                        s indicate that 
                           
                              MGA
                           
                         outperforms 
                           
                              DPA
                           
                        . More precisely, 
                           
                              MGA
                           
                         is on average 13.81 times faster than 
                           
                              DPA
                           
                        .

Concerning experiments on fully dense networks, since n assumes the smallest value with respect to that occurring in grid and fully random networks, then the computational time required by Floyd–Warshall is very limited compared to the one implied in an iteration of 
                           
                              DPA
                           
                        . Therefore, the performance of 
                           
                              MGA
                           
                         is clearly better than 
                           
                              DPA
                           
                        . Figs. 11 and 12
                        
                         show how the n-Average execution time and the S-Average execution time of 
                           
                              DPA
                           
                         quickly increases with n, while they have a very slow increase in case of 
                           
                              MGA
                           
                        .


                        Table 5
                         brings out that the S-Average number of iterations of 
                           
                              DPA
                           
                         increases monotonically and more than in a linear way with S, while it decreases less than linearly with S in case of 
                           
                              MGA
                           
                        . Table A.6 gives numerically evidence of the above considerations.

The trend of the ρ-Average execution time for 
                           
                              DPA
                           
                         and 
                           
                              MGA
                           
                         is coherent with the dependence already observed for the test problems based on grid and fully random network-based 
                           
                              SPTP
                           
                        s, as confirmed by Figs. 13 and 14
                        
                        . The rationale of these behaviors is implied into the nature of the computational complexity of 
                           
                              DPA
                           
                         and 
                           
                              MGA
                           
                         that is emphasized by this type of networks.

The computational results summarized and discussed on fully dense network-based 
                           
                              SPTP
                           
                        s show that 
                           
                              MGA
                           
                         clearly outperforms 
                           
                              DPA
                           
                        . In fact, 
                           
                              MGA
                           
                         is on average 814.02 times faster than 
                           
                              DPA
                           
                        .

In this section, for each set of test problems, the best performing algorithm selected between 
                           
                              DPA
                           
                         and 
                           
                              MGA
                           
                         is compared with the algorithm devised by Festa in [13]. In particular, the comparison involves the average computational times and the number of iterations performed by the best algorithm between 
                           
                              DPA
                           
                         and 
                           
                              MGA
                           
                        , and 
                           
                              EGA
                           
                        .

The performance of 
                           
                              EGA
                           
                         with respect to 
                           
                              MGA
                           
                         is affected by the topology of graph G′ that is not necessarily acyclic, unlike G
                        (a) that is acyclic and explicitly built within 
                           
                              MGA
                           
                        . The computational results obtained by testing 
                           
                              EGA
                           
                         on the considered three random datasets are reported in Tables A.7–A.9. In order to assess the behavior of 
                           
                              EGA
                           
                         on these test problems, let us to consider them separately.

The computational results obtained by testing 
                           
                              EGA
                           
                         on the first set of the 
                           
                              SPTP
                           
                         instances based on grid random networks underline that the best algorithm between 
                           
                              DPA
                           
                         and 
                           
                              MGA
                           
                         outperforms 
                           
                              EGA
                           
                        . In particular, 
                           
                              DPA
                           
                         is on average 28.27 and 18.19 times faster than 
                           
                              EGA
                           
                         on the rectangular and square grid random networks, respectively. 
                           
                              MGA
                           
                         performs better than 
                           
                              EGA
                           
                         with an average time reduction by a factor of 21.94 on fully random network-based 
                           
                              SPTP
                           
                         instances. Finally, 
                           
                              MGA
                           
                         clearly outperforms 
                           
                              EGA
                           
                         on fully dense random network-based 
                           
                              SPTP
                           
                         instances by a factor of 301.13.

As for the datasets provided by Festa in [13], named 
                           
                              TF
                           
                         in the sequel, they refer to the same three network topologies already defined. Tables 6–8
                        
                        
                         report the characteristics of the 
                           
                              SPTP
                           
                         instances belonging to 
                           
                              TF
                           
                         and defined on the basis of grid random networks G
                        
                           TF
                        , fully random networks R
                        
                           TF
                         and fully dense networks C
                        
                           TF
                        , respectively. Observe that these networks are designed by using the generator described in [14]. The source and destination nodes are randomly selected among all the nodes, according to a uniform distribution. Each node of the networks belongs to a set T
                        
                           k
                        , where k
                        =0,…, S
                        +1. Moreover, the 
                           
                              SPTP
                           
                         instances in the 
                           
                              TF
                           
                         datasets are generated for each network and value of S specified in the last column of Tables 6–8. For a detailed description of how such instances are generated, the reader is referred to [13].

The computational results collected on the instances of 
                           
                              TF
                           
                         can be found in Tables 9–11
                        
                        
                        . They show that the best performing algorithm is 
                           
                              MGA
                           
                        , even on the grid network-based instances. This behavior is coherent with the trend analyzed in Section 6.3. The rationale lies in the fact that the 
                           
                              SPTP
                           
                         instances of 
                           
                              TF
                           
                         have a very small number of nodes, thus the running time of 
                           
                              MGA
                           
                         is slower than that required by 
                           
                              DPA
                           
                        .

In comparison with 
                           
                              EGA
                           
                        , one may observe that 
                           
                              MGA
                           
                         is on average 2051.50 times faster than 
                           
                              EGA
                           
                         on grid network-based instances, 3415 times faster in case of fully random network-based instances, and 3213.46 times faster in case of fully dense network-based instances. This behavior may be explained by observing that the 
                           
                              SPTP
                           
                         instances of 
                           
                              TF
                           
                         are designed in such a way that the size of expanded graph built in the method proposed in [13] grows linearly with S since for each of the S node subsets it replicates the original graph, whereas working on the modified graph G
                        (a) determines considerable improvements in performance.

@&#CONCLUSIONS@&#

This paper exhibits the results of the study concerning a variant of the 
                        
                           SPP
                        
                     , called the Shortest Path Tour Problem 
                        
                           (
                           SPTP
                           )
                        
                     , in which the shortest path from a given origin node to a given destination node flows through a given number of node subsets ordered according to a given sequence. We provide two competitive solving algorithms. The former is based on an explicit reduction of the 
                        
                           SPTP
                        
                      into an instance of the 
                        
                           SPP
                        
                     , the latter on a dynamic programming method where the 
                        
                           SPTP
                        
                      is considered as an extension of the resource constrained shortest path problem. Some basic properties are highlighted and an extensive computational analysis of both the proposed methods is carried out on new large size benchmark instances, and the dataset considered in [13]. The numerical results show that the performance of the proposed algorithms depends mainly on the structure of the networks. More precisely, the dynamic programming-based algorithm 
                        
                           (
                           DPA
                           )
                        
                      outperforms the modified graph-based algorithm 
                        
                           (
                           MGA
                           )
                        
                      on the 
                        
                           SPTP
                        
                      instances that are generated from grid random networks, while the latter is more competitive than the former as long as fully random and fully dense networks are involved. This appears from the computational results obtained with the new datasets. The numerical experiments carried out on the 
                        
                           TF
                        
                      dataset show that the most efficient proposed algorithm outperforms clearly the state-of-the-art solution strategy [13]. The obtained results also suggest that these methods could be extended to address other variants of the classical 
                        
                           SPP
                        
                     , which represent a new and challenging research area.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to convey their deep appreciation to the anonymous referees for their valuable comments, that permitted to improve significantly the overall quality of the paper.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.ejor.2013.04.029.


                     
                        
                           Supplementary material
                           
                              Supplementary material contains Tables A.1–A.9.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

