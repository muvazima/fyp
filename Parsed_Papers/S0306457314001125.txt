@&#MAIN-TITLE@&#Learning combination weights in data fusion using Genetic Algorithms

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Genetic Algorithm is an effective scheme in determining data fusion weights.


                        
                        
                           
                           Tuning Genetic Algorithm increases time efficiency.


                        
                        
                           
                           Weight learning from only top ranked documents is useful.


                        
                        
                           
                           Redundant runs can be removed based on correlation between scores.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Information retrieval

Data fusion

Linear combination

Genetic Algorithms

@&#ABSTRACT@&#


               
               
                  Researchers have shown that a weighted linear combination in data fusion can produce better results than an unweighted combination. Many techniques have been used to determine the linear combination weights. In this work, we have used the Genetic Algorithm (GA) for the same purpose. The GA is not new and it has been used earlier in several other applications. But, to the best of our knowledge, the GA has not been used for fusion of runs in information retrieval. First, we use GA to learn the optimum fusion weights using the entire set of relevance assessment. Next, we learn the weights from the relevance assessments of the top retrieved documents only. Finally, we also learn the weights by a twofold training and testing on the queries. We test our method on the runs submitted in TREC. We see that our weight learning scheme, using both full and partial sets of relevance assessment, produces significant improvements over the best candidate run, CombSUM, CombMNZ, Z-Score, linear combination method with performance level, performance level square weighting scheme, multiple linear regression-based weight learning scheme, mixture model result merging scheme, LambdaMerge, ClustFuseCombSUM and ClustFuseCombMNZ. Furthermore, we study how the correlation among the scores in the runs can be used to eliminate redundant runs in a set of runs to be fused. We observe that similar runs have similar contributions in fusion. So, eliminating the redundant runs in a group of similar runs does not hurt fusion performance in any significant way.
               
            

@&#INTRODUCTION@&#

Data fusion has been used as an effective tool for improving information retrieval performance. Several IR researchers have proposed several methods of combining two or more retrieved lists to produce a single list that contains the useful documents from all the lists at higher ranks. Given a set of retrieved lists (or runs, as they are popularly referred to) and given a fusion algorithm, it is vital to choose the combination weights which will result in improvement in performance. Previous results show that weighted fusions have scored over unweighted fusions when appropriate weights are assigned to the fused runs (Wu et al., 2009). Much research has been done on learning or optimizing the fusion weights. Vogt and Cottrell (1998) have tried to predict the fusion performance of run pairs using multiple linear regression based on several features. Wu et al. (2009) stated that power functions can be useful in finding good weights for fusion. Bartell et al. (1994) also tried to maximize fusion performance. In the last two papers, Conjugate Gradient method (Press et al., 1995) on Guttman’s Point Alienation function (Guttman, 1978) was used. Vogt and Cottrell used golden search method (Press et al., 1995) for optimization.

The Genetic Algorithm (GA) has been used in finding useful solutions to optimization and search problems. GAs generate solutions to optimization problems by using techniques inspired by natural evolution. GAs can thus be used in learning the optimum fusion weights for a weighted linear combination of retrieval scores of different runs.

Next, we study how the use of the top ranked documents on linear combination of scores can be used to get an optimal retrieval performance. We consider runs at a given depth k per query and run the optimization algorithm on them. The optimum weights thus learned are tested on the runs. The idea of using the top k documents is modeled on Multi-armed Bandits problem (Auer et al., 1995) where the gambler has no initial knowledge about the levers and tries to maximize the gain based on existing knowledge of each lever. Here we attempt to use partial knowledge about the IR performance of each run to learn the optimal fusion weights. Pal et al. (2011) found that reducing pool size per topic does not have much effect on evaluation. We draw our motivation from this observation also.

We also study how the correlation between the scores of runs can help in removing the redundant runs in data fusion. We calculate the correlation values among the run pairs. First we choose the run pair with the highest correlation between them and drop the run which has the inferior retrieval performance. We fuse the remaining runs and see if there is any significant drop in fusion performance. If not, we consider the pair with the next highest correlation. We repeat the procedure until there is a significant drop in performance. This study is aimed at exploring if highly correlated runs in terms of retrieval scores have similar contribution in fusion performance.

Our contributions made in the present paper are summarized below:
                        
                           1.
                           Given a set of runs, a GA based approach to finding the optimal weights for an efficient fusion of these runs on the basis of their retrieval scores, is proposed.

It is shown that if the learning of the fusion weights by the GA is based only on the top-ranked documents, there is not much loss in efficiency of the resulting fusion. In other words, if only lower depths in the ranked pool of documents are used by the GA to learn the fusion weights, the performance of the resulting fusion is not hurt much.

A new approach to determination of the runs that make insignificant contributions in fusion, and hence to determination of the smallest subset of the runs to be fused, without much loss in efficiency, is proposed. It is based on the fusion weights learnt by the GA and the correlation coefficients between pairs of runs obtained on the basis their retrieval scores.

The rest of the paper is organized as follows:

We provide a discussion on the related works in Section 2. In Section 3, we describe the GA and discuss how this algorithm can be used in the present fusion problem. The experimental setup is described in Section 4. We present our experimental results and a comparative study in Section 5 and conclude in Section 6.

@&#RELATED WORK@&#

Work of different genres has been done on data fusion. Many new data fusion techniques have been proposed. On the other hand, approaches that focussed on improving the existing methods were also reported. Fox and Shaw proposed CombMIN, CombMAX, CombSUM, CombANZ and CombMNZ algorithms based on linear combinations of scores (Fox and Shaw, 1993). CombSUM and CombMNZ have emerged as effective methods based on linear combinations of scores. Lee (1997) performed an experiment on six submitted runs of TREC 3 and concluded that CombMNZ was slightly better than CombSUM. This claim, however, was contradicted in many works like Montague and Aslam (2001), Lillis et al. (2006), Wu et al. (2009), and no clear inference could be drawn about the supremacy of any single approach. Popular voting algorithms were also used effectively in data fusion. Montague and Aslam (2002) used popular voting method called Condorset method (named after French mathematician and philosopher Marquis de Condorset) to good effect in data fusion. The fusion algorithm was called Condorset fusion. Another voting algorithm, viz., Borda count (named after another French mathematician Jean-Charles de Borda) was used by Aslam and Montague (2001) and was referred to hitherto as Borda fusion. Cormack et al. (2009) showed that Reciprocal Rank Fusion paired with learning to rank outperforms Condorset fusion and individual rank learning method. Lillis et al. (2006) proposed a fusion algorithm named ProbFuse which estimated the probability of relevance of documents based on the position in the ranked list. Khudyak Kozorovitsky and Kurland (2011) used document cluster-based approach (named ClustFuse) to find retrieval scores in the fused list. But there is a fundamental factor differentiating the fusion algorithms. CombSUM (and other Comb variants), ProbFuse and ClustFuse make use of the relevance scores assigned to the documents in the input runs that are fused, while Condorset, Borda and Reciprocal Rank fusions use the rank of the documents in the ranked lists.

In the case of the algorithms that use the relevance scores, Lee (1997) introduced a score normalization scheme to the algorithms proposed by Fox and Shaw and showed that score normalization is important in data fusion. Similarly, Savoy (2004) used a new score normalization formula on linear combination fusion algorithms. He called the normalized score Z-Score. Montague and Aslam (2001) also studied different score normalization schemes.

Many researchers have tried to improve the fusion performance by optimizing the weights used in the linear combination of runs. Vogt and Cottrell (1998) tried to predict the fusion performance of run pairs using multiple linear regression based on several features. Wu et al. (2009) used power functions to find good weights for fusion. Bartell et al. (1994) also tried to maximize fusion performance using Conjugate Gradient (Press et al., 1995) method on Guttman’s Point Alienation function (Guttman, 1978). Wu (2012) used multiple linear regression to learn appropriate combination weights for data fusion. Wu (2013) used linear discriminant analysis based approach to learning of weights for Condorset fusion. Wu and McClean (2005) used correlation coefficient between runs to assign linear combination weights in data fusion on the submitted runs of TREC 5. Sheldon et al. (2011) used neural networks in generating different query reformulations and merging their results. Hong and Si (2012) used Expectation Maximization algorithm to learn the combination weights. In this paper, we learn the linear fusion weights to maximize the performance of the fused run using the GA. We learn the weights using all the documents in the runs. Also, we learn the weights using the performance information from the top few documents per query. Previous researchers have learned the weights using all the documents in each run (Wu et al., 2009; Bartell et al., 1994). Finally, we do a twofold training and testing on the queries.

Correlation among the runs has been used effectively by researchers in data fusion. Wu and McClean (2005) determined combination weights using the correlation of each pair of runs. They also suggested that (1) good results strongly correlate with each other, and (2) a strong correlation among the component runs (that is, the runs participating in fusion) is harmful for data fusion performance. Wu et al. (2009) opined that the runs submitted by the same group are likely to be similar. They chose at most one run from any particular group for fusion and there were no marked difference in performance from the case when no discrimination was done based on groups. In this paper, we have studied how the redundant runs can be identified and removed from the fusion exercise without sacrificing retrieval performance in any significant way.

@&#INTRODUCTION@&#

Suppose f is a real-valued function defined on a bounded set 
                           
                              A
                              =
                              [
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              ]
                              ×
                              [
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                              ]
                              ×
                              ⋯
                              ×
                              [
                              
                                 
                                    a
                                 
                                 
                                    p
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    p
                                 
                              
                              ]
                           
                         where 
                           
                              [
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    i
                                 
                              
                              ]
                           
                         is an interval on the real line. The goal of the GA is to find a point 
                           
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              =
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                                 
                                    0
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         in A such that 
                           
                              f
                              (
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              )
                              =
                              
                                 
                                    max
                                 
                                 
                                    x
                                    ∈
                                    A
                                 
                              
                              f
                              (
                              x
                              )
                           
                        . For actual implementation of the GA, a grid is super-imposed on the set A and let S be the set of the grid points. S represents A in a discretised manner and the representation becomes more accurate with a higher resolution of the grid. What the GA actually finds is a point 
                           
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                              =
                              (
                              
                                 
                                    y
                                 
                                 
                                    1
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                                 
                                    0
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    y
                                 
                                 
                                    p
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         in S such that 
                           
                              f
                              (
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                              )
                              =
                              
                                 
                                    max
                                 
                                 
                                    y
                                    ∈
                                    S
                                 
                              
                              f
                              (
                              y
                              )
                           
                        . A higher resolution of the grid will take 
                           
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                           
                         closer to 
                           
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                           
                        . Every grid point 
                           
                              y
                           
                         in S corresponds to a binary string of length, say, L where a larger L indicates a higher resolution of the grid.

For example, let us consider a function f defined on 
                           
                              A
                              =
                              [
                              0
                              ,
                              10
                              ]
                              ×
                              [
                              0
                              ,
                              10
                              ]
                           
                         (Fig. 1
                        ) as 
                           
                              f
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              exp
                              {
                              -
                              
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    -
                                    5
                                    )
                                 
                                 
                                    2
                                 
                              
                              -
                              
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    -
                                    5
                                    )
                                 
                                 
                                    2
                                 
                              
                              }
                           
                        . Note that the maximum value of f occurs at 
                           
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              =
                              (
                              5
                              ,
                              5
                              )
                           
                        . Now, let the interval corresponding to each 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         be discretised on the basis of binary strings of length 3 where the binary strings 000 and 111 represent the values 0 and 10 respectively. In general, suppose 
                           
                              M
                              =
                              (
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    4
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    5
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    6
                                 
                              
                              )
                           
                         is a grid point in S where the binary strings 
                           
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    3
                                 
                              
                           
                         and 
                           
                              
                                 
                                    b
                                 
                                 
                                    4
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    5
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    6
                                 
                              
                           
                         represent the discretised values of 
                           
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                           
                         respectively (Fig. 2
                        ). Then the corresponding point in 
                           
                              A
                              =
                              [
                              0
                              ,
                              10
                              ]
                              ×
                              [
                              0
                              ,
                              10
                              ]
                           
                         is computed as follows. Let 
                           
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                              
                           
                         be the two decimal values corresponding to the binary numbers 
                           
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    3
                                 
                              
                           
                         and 
                           
                              
                                 
                                    b
                                 
                                 
                                    4
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    5
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    6
                                 
                              
                           
                         respectively. Clearly, 
                           
                              
                                 
                                    z
                                 
                                 
                                    i
                                 
                              
                           
                         belongs to 
                           
                              {
                              0
                              ,
                              1
                              ,
                              ⋯
                              ,
                              7
                              }
                           
                        . Then 
                           
                              (
                              
                                 
                                    y
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              (
                              10
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                              
                              /
                              7
                              ,
                              10
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                              
                              /
                              7
                              )
                           
                         is the point in A corresponding to the grid point M in S. Thus, the value of f at the grid point 
                           
                              M
                              =
                              (
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    4
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    5
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    6
                                 
                              
                              )
                           
                         is in fact the value of f at 
                           
                              (
                              
                                 
                                    y
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         in A. The task of the GA is to find the grid point at which the value of f is maximum. Note that here the number of grid points is only 64 and the maximum f value attainable at these grid points (i.e., 
                           
                              f
                              (
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                              )
                           
                        ) will be much less than 
                           
                              f
                              (
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              )
                           
                        . However, if the length of the binary string is increased for discretising 
                           
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                           
                        , the value of 
                           
                              f
                              (
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         will be closer to 
                           
                              f
                              (
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         due to higher resolution of the grid. For example, if the length of the binary string is increased from 6 to 8, the number of grid points will increase from 64 to 256 resulting in an enhanced value of 
                           
                              f
                              (
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                              )
                           
                        . The GA in fact operates on the binary strings representing the grid points of S. However, it converts such a string into a point 
                           
                              x
                           
                         in A whenever needed. The details are provided in the sub-sections below.

An optimization approach is based either on exploration or on exploitation or on both. The GA is based on both these aspects and hence is capable of avoiding getting stuck at a local optimum. Mutation and crossover operations described below contribute to exploration and exploitation respectively. Moreover, the GA is applicable even if the function to be optimized is not differentiable or not even continuous or not even having a closed form. The convergence properties of the GA are discussed later in this section.

The basic steps of the GA are:

A initial population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       y
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 ⋯
                                 
                                    
                                       y
                                    
                                    
                                       m
                                    
                                 
                                 }
                              
                            of m grid points (or members) selected at random from S is formed where m (called the population size) is an even integer. One way of making such a random selection is to select 0 or 1 each with probability 0.5 for all the positions in the binary string corresponding to each of the m members in 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                           . This population undergoes changes through several iterations (each such iteration is called a generation in the GA parlance). One generation consists of selection, crossover, mutation and elitism operations that are described below. The value of m is taken as 30 in our experiments.

The fitness value of a member 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                              
                            of the population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            is defined as 
                              
                                 f
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           . Let 
                              
                                 F
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       m
                                    
                                 
                                 f
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           . Now, a random selection of one member from 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            is made in such a way that the probability of 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                              
                            being selected is 
                              
                                 f
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 /
                                 F
                              
                           . Note that a member having a higher fitness value is more likely to be selected. This process is repeated m times so that a new set 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                            of m members is generated from 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                           . The two sets 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                            are not necessarily the same. A member having a smaller fitness value in 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            is more likely to disappear from 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                           . On the other hand, a member having a higher fitness value in 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            is more likely to appear more than once in 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                           .

A random pairing of the m members of 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                            is done. Each such pair creates a pair of offspring through crossover operation. A site (in the binary string) is first selected at random with equal probability (here there are 
                              
                                 L
                                 -
                                 1
                              
                            sites). On the basis of this site, the two members are split into heads and tails as (
                              
                                 
                                    
                                       head
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       tail
                                    
                                    
                                       1
                                    
                                 
                              
                           ) and (
                              
                                 
                                    
                                       head
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       tail
                                    
                                    
                                       2
                                    
                                 
                              
                           ). Then the two offspring are defined as (
                              
                                 
                                    
                                       head
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       tail
                                    
                                    
                                       2
                                    
                                 
                              
                           ) and (
                              
                                 
                                    
                                       head
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       tail
                                    
                                    
                                       1
                                    
                                 
                              
                           ). Each pair of members undergoes the crossover operation with probability 
                              
                                 
                                    
                                       p
                                    
                                    
                                       c
                                    
                                 
                              
                           . If a pair is selected for crossover operation, the question of site selection arises. Otherwise, this does not arise and the members become their offspring (that is, the two corresponding binary strings remain unchanged). Let 
                              
                                 
                                    
                                       P
                                    
                                    
                                       3
                                    
                                 
                              
                            denote the population obtained after crossover. In our experiments, the value of 
                              
                                 
                                    
                                       p
                                    
                                    
                                       c
                                    
                                 
                              
                            is taken as 0.7. In Table 1
                           , a crossover example is shown where 
                              
                                 L
                                 =
                                 15
                              
                            and the selected site is 5.

In mutation operation, one of the L positions in a binary string is randomly selected with equal probability and the binary value in the selected position is swapped (that is, “0” is changed to “1” and “1” is changed to “0”). Each offspring after crossover operation undergoes the mutation operation with probability 
                              
                                 
                                    
                                       p
                                    
                                    
                                       m
                                    
                                 
                              
                           . The value of 
                              
                                 
                                    
                                       p
                                    
                                    
                                       m
                                    
                                 
                              
                            is taken as 0.2 in our experiments. If an offspring is not selected for mutation operation, its corresponding binary string stays unchanged. In Table 2
                           , offspring 1 and 2 are mutated at positions 4 and 7 respectively. Let 
                              
                                 
                                    
                                       P
                                    
                                    
                                       4
                                    
                                 
                              
                            denote the population obtained after mutation operation. We reduce the mutation probability over time initially starting at 
                              
                                 
                                    
                                       p
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 0.2
                              
                           . Mutation operation takes care of the exploration aspect of the GA search algorithm. A larger value of 
                              
                                 
                                    
                                       p
                                    
                                    
                                       m
                                    
                                 
                              
                            leads to more exploration. This value is normally kept fixed at a value around 0.01. However, in our implementation, we start with a high value and keep reducing it through generations. Initially starting at 
                              
                                 
                                    
                                       p
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 0.2
                              
                           , we reduce it by a factor of 0.9 after every 25 generations. The idea here is that as the algorithm progresses, the need for exploration gets reduced. In that case, a lower value of 
                              
                                 
                                    
                                       p
                                    
                                    
                                       m
                                    
                                 
                              
                            suffices. On the other hand, if the value is large compared to the progress that the algorithm has made, unnecessary time is spent on exploration. In other words, we deliberately reduce the search space while making sure that the reduced search space contains the globally maximum value.

In elitism operation, the member having the highest fitness value in the population in one generation is carried over to the population in the next generation replacing the member having the lowest fitness value. Thus, in any generation, the population contains the member having the highest fitness value across all the past generations. Note that this fittest member takes part in selection, crossover and mutation operations and is more likely to produce members with high fitness values. Let 
                              
                                 
                                    
                                       P
                                    
                                    
                                       5
                                    
                                 
                              
                            be the population obtained after elitism operation.

The role of mutation in GA has been that of restoring lost or unexplored genetic material into the population to prevent the premature convergence of the GA to suboptimal solutions (Srinivas and Patnaik, 1994). Large values of mutation probability transform the GA into a purely random search algorithm, while some mutation is required to prevent the premature convergence of the GA. Rudolph (Rudolph, 1994) has described the GA as a Markov chain, and has proved that an elitist GA converges to the global maximum of the fitness value irrespective of the initial population.

We will now illustrate how the above operations in the GA described above, are actually implemented. For this, we consider the exponential function described in the beginning of this section. Let m, the population size, be 4. Thus, in the initialization stage, 4 grid points are randomly selected from the 64 grid points shown in Fig. 2 to form the initial population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            of size 4. Let us assume that these 4 randomly selected grid points representing population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                           , are what is shown in the first column of Table 3
                           . Now the functional values of these 4 grid points are computed the way it is described in the beginning of this section. These functional values are shown in the second column of Table 3. The probabilities of the 4 members of the population are computed as described in Section 3.1.2. These probabilities are shown in the third column of Table 3. Now a member from the first column is selected at random using the probabilities in the third column. Let it be “101011”. This is the first entry in the fourth column representing population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                           . This random selection is repeated another three times and the outcomes are shown in the last three entries of the fourth column. Note that the member (i.e., “101011”) in population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            having the highest probability is selected twice in population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                           . Also, the member (i.e., “000001”) in population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            having the lowest probability is not selected in population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                              
                           . Here stronger members (i.e., having higher f values) are more likely to survive in the selection process.

Now, the members in the fourth column are paired at random. An example of such pairing is shown in the fifth column. A pair is now selected for crossover with probability 
                              
                                 
                                    
                                       p
                                    
                                    
                                       c
                                    
                                 
                                 =
                                 0.7
                              
                           . Suppose both the pairs in the fifth column are selected for crossover. For crossover, we have L
                           −1=5 possible sites here. For each crossover, a site is selected with probability 1/5 (see Section 3.1.3). Suppose the two sites for the two pairs are 4 and 2 respectively. The population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       3
                                    
                                 
                              
                            thus created after crossover is shown in the sixth column. On the basis of the mutation operation as described in Section 3.1.4, suppose the fifth and sixth bits of the last two entries in the sixth column are selected for mutation. The resulting population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       4
                                    
                                 
                              
                            after mutation is shown in the seventh column. Now, note that the highest fitness value in the population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            corresponds to “101011” while the member having the lowest fitness value in the population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       4
                                    
                                 
                              
                            is “100111”. So, in the elitism operation, “101011” replaces “100111” in 
                              
                                 
                                    
                                       P
                                    
                                    
                                       4
                                    
                                 
                              
                           . Thus, the final population of the current iteration is 
                              
                                 
                                    
                                       P
                                    
                                    
                                       5
                                    
                                 
                              
                            that is shown in the eighth column. The functional values of the members of 
                              
                                 
                                    
                                       P
                                    
                                    
                                       5
                                    
                                 
                              
                            are shown in the last column.

Thus, in one generation, the old population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                              
                            (first column) is changed through the GA operations to a new population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       5
                                    
                                 
                              
                            (eighth column). In the next generation, the new population 
                              
                                 
                                    
                                       P
                                    
                                    
                                       5
                                    
                                 
                              
                            takes the position (first column) of the old population and the whole process is repeated.

Now we will discuss how the GA is implemented for our fusion data task. The value of L depends on the number of runs to be fused. In our experiments, we use 16 bits for the weight of each run. Asymptotically, the GA converges in the sense that the strongest member in the population converges to the optimal point 
                              
                                 
                                    
                                       y
                                    
                                    
                                       0
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       1
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       2
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 ⋯
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       p
                                    
                                    
                                       0
                                    
                                 
                                 )
                              
                            in S (Rudolph, 1994). However, we run the algorithm for a finitely many generations and the output of the algorithm is the member of the population for which the value f is the maximum. The number of generations needed for convergence of the GA depends largely on the number of runs to be fused. In our experiments, the number of generations varies from 25 to 1000.

Let 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                         be N runs on a query set Q with scores 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                              
                           
                         respectively, for a given document and a query. Our aim here is to find a linear combination (in fact, a weighted average) of 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                              
                           
                         that produces maximum MAP value over all possible combinations. In other words, we would like to determine the weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                           
                         (
                           
                              0
                              ⩽
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              1
                           
                         and 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                           
                        ) such that the new score 
                           
                              s
                              =
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              +
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              +
                              ⋯
                              +
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                              
                           
                         leads to the highest MAP. We will use the GA described above to find these optimal weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                           
                        . However, for the GA, the search space needs to be unconstrained while the search space A of 
                           
                              (
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                              )
                           
                         here is constrained in the N-dimensional space. To overcome this, we will convert the constrained search space A in N dimensions to an unconstrained search space B in 
                           
                              (
                              N
                              -
                              1
                              )
                           
                         dimensions such that there is one-to-one and onto mapping between A and B. It is clear that A corresponds to the surface of the positive quadrant of the unit N-dimensional hyper-sphere. B that we intend to map A to, is a rectangle in the 
                           
                              (
                              N
                              -
                              1
                              )
                           
                         dimensional space. Just as an example, consider the surface of the positive quadrant of the unit sphere and the 2-dimensional rectangle 
                           
                              [
                              0
                              ,
                              π
                              /
                              2
                              ]
                              ×
                              [
                              0
                              ,
                              π
                              /
                              2
                              ]
                           
                        . One can see that there is one-to-one and onto mapping between them. Formally, B and the corresponding mapping are defined as follows:


                        
                           
                              B
                              =
                              [
                              0
                              ,
                              π
                              /
                              2
                              ]
                              ×
                              [
                              0
                              ,
                              π
                              /
                              2
                              ]
                              ×
                              ⋯
                              ×
                              [
                              0
                              ,
                              π
                              /
                              2
                              ]
                           
                         (
                           
                              (
                              N
                              -
                              1
                              )
                           
                         times), and
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   
                                                      
                                                         sin
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         sin
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         sin
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                   
                                                      
                                                         sin
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         N
                                                         -
                                                         1
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   …
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         N
                                                         -
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         sin
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         N
                                                         -
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         N
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   …
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         N
                                                         -
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         cos
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         N
                                                         -
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    θ
                                 
                                 
                                    i
                                 
                              
                              ∈
                              [
                              0
                              ,
                              π
                              /
                              2
                              ]
                           
                         for all i.

Let 
                           
                              (
                              
                                 
                                    θ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    N
                                    -
                                    1
                                 
                              
                              )
                           
                         be a point in B and let 
                           
                              (
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                              )
                           
                         be the corresponding point in A. Suppose 
                           
                              g
                              =
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              +
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              +
                              ⋯
                              +
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                              
                           
                         denotes the score of the run r produced by the linear combination (fusion) of the runs 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                         with respective weights as 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                           
                        . Note that g is a function of 
                           
                              (
                              
                                 
                                    θ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    N
                                    -
                                    1
                                 
                              
                              )
                           
                        . Let the number of relevant documents for an information need 
                           
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                              ∈
                              Q
                           
                         be 
                           
                              
                                 
                                    m
                                 
                                 
                                    j
                                 
                              
                           
                        . Suppose, for the fused run 
                           
                              r
                              ,
                              
                              
                                 
                                    R
                                 
                                 
                                    j
                                    ,
                                    k
                                 
                              
                              =
                              {
                              
                                 
                                    d
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    d
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    d
                                 
                                 
                                    k
                                 
                              
                              }
                           
                         is the set of k top ranked retrieved results. Now let a function 
                           
                              f
                              (
                              
                                 
                                    θ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    N
                                    -
                                    1
                                 
                              
                              )
                           
                         be defined as:

MAP(
                           
                              g
                              ,
                              Q
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    |
                                    Q
                                    |
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    |
                                    Q
                                    |
                                 
                              
                              
                                 
                                    1
                                 
                                 
                                    
                                       
                                          m
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    
                                       
                                          m
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         Precision(
                           
                              
                                 
                                    R
                                 
                                 
                                    jk
                                 
                              
                           
                        ) which is the mean average precision of run r on Q. Precision(
                           
                              
                                 
                                    R
                                 
                                 
                                    jk
                                 
                              
                           
                        ) is the proportion of retrieved documents that are relevant for 
                           
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                           
                         at the point in the ranked list when we get to the document 
                           
                              
                                 
                                    d
                                 
                                 
                                    k
                                 
                              
                           
                        . Now our task is to determine the values of 
                           
                              
                                 
                                    θ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    N
                                    -
                                    1
                                 
                              
                           
                         (equivalently, the values of 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                           
                        ) for which f is maximum.

We use the GA described above to maximize the function 
                           
                              f
                              (
                              
                                 
                                    θ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    N
                                    -
                                    1
                                 
                              
                              )
                           
                         over the unconstrained space B. Once the values of 
                           
                              
                                 
                                    θ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    θ
                                 
                                 
                                    N
                                    -
                                    1
                                 
                              
                           
                         maximizing f are obtained, the values of the optimal weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                           
                         are obtained from the Eqs. (1) above. These optimal weights define the best linear combination of the runs 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                         providing the highest MAP.


                        Pal et al. (2011) found that if pooling is done by choosing lower depths for each query, the quality of evaluation is not hurt. So, the top documents can be a good representative of the quality of the run. This is likely to be more prominent when top heavy measures like Mean Average Precision are used for evaluation. In this paper, we study how the documents at lower depths can be used in learning the fusion weights by the GA.


                        Table 4
                         shows the correlation coefficients between the MAPs of the fused runs at depth 1000 and the MAPs of the same runs at lower depths, viz., 100, 50 and 25. The MAPs even at lower depths show high correlation with the MAP values at depth 1000. This led us to believe that using only the documents at shallower depths may be sufficient in achieving good fusion runs by the GA.

Let 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                         be N runs which we want to fuse with optimum weights. For the GA, the objective function is the MAP of the fused run. That is, we want to maximize the MAP of the fused run. For each query 
                           
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                           
                        , we select the top d documents of each run. Let these new runs be 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                                 
                                    d
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                                 
                                    d
                                 
                              
                           
                        . Fig. 3
                         gives a pictorial view of the situation. It shows, for a given query, N runs with documents at ranks 1 to 1000. 
                           
                              dk
                              _
                              l
                           
                         is the document of run k at rank l. For example, 
                           
                              d
                              1
                              _
                              1
                              ,
                              d
                              1
                              _
                              2
                              ,
                              ⋯
                              ,
                              d
                              1
                              _
                              1000
                           
                         are the documents of run 1 at ranks 
                           
                              1
                              ,
                              2
                              ,
                              ⋯
                              ,
                              1000
                           
                         respectively. Now if we consider top 
                           
                              d
                              =
                              25
                           
                         documents of run 1, then the corresponding variant of run 1, say 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                                 
                                    25
                                 
                              
                           
                        , will contain the documents 
                           
                              d
                              1
                              _
                              1
                              ,
                              d
                              1
                              _
                              2
                              ,
                              ⋯
                              ,
                              d
                              1
                              _
                              25
                           
                         and the documents at lower ranks will not be considered. We fuse these new runs with some weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                                 
                                    d
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                                 
                                    d
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                                 
                                    d
                                 
                              
                           
                         to get a fused run, say, 
                           
                              
                                 
                                    f
                                 
                                 
                                    d
                                 
                              
                           
                        . This can be visualized in Fig. 4
                        . In this figure K is the total number of documents in the fused run. Since each of the N runs contributes d documents in the fused run, so the fused run will contain ⩽
                           
                              N
                              *
                              d
                           
                         unique documents. Note that the inequality is because of the fact that some documents may appear in more than one run. If, for a given query, each of the N runs has d documents, then the fused run will contain a ranked union of all the documents in the runs participating in fusion. This fused run 
                           
                              
                                 
                                    f
                                 
                                 
                                    d
                                 
                              
                           
                         is nothing but a ranked pool of the top d documents (per query) in 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                        . Let the optimal weights (for which MAP of 
                           
                              
                                 
                                    f
                                 
                                 
                                    d
                                 
                              
                           
                         is maximized) learned by the GA be 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                                 
                                    d
                                    _
                                    opt
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                                 
                                    d
                                    _
                                    opt
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                                 
                                    d
                                    _
                                    opt
                                 
                              
                           
                        . These optimal weights are then tested on the runs 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                         at depth 1000 (note that training was done using depth d which is much less than 1000). We will see if these learned weights yield good retrieval performance.

Let 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    r
                                 
                                 
                                    N
                                 
                              
                           
                         be N runs on a query q. Suppose, for the sake of simplicity, d is a document that appears in each of the N runs. Let 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                              
                           
                         respectively be the similarity scores of d with q in the N runs. A run is the retrieval result of a search system which follows a certain retrieval algorithm. This retrieval algorithm varies largely over the runs and it is likely that different ranges of score are assigned to the retrieved documents in different runs. For example, in run 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                           
                         the similarity scores may range from 43.085 to 447.169 whereas in run 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                           
                         the range can be −0.99 to −0.56. Clearly, these values cannot be combined unless they are mapped to a common range, say, [0,1]. So, we use the following normalization scheme proposed by Lee (1997):
                           
                              
                                 normalized
                                 _
                                 score
                                 =
                                 
                                    
                                       score
                                       -
                                       min
                                       _
                                       score
                                    
                                    
                                       max
                                       _
                                       score
                                       -
                                       min
                                       _
                                       score
                                    
                                 
                                 .
                              
                           
                        
                     

So, a score 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                           
                        , for a document d and run 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                           
                        , is normalized to, say 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                                 
                                    norm
                                 
                              
                           
                        , using the above scheme, where 
                           
                              min
                              _
                              score
                           
                         and 
                           
                              max
                              _
                              score
                           
                         are the minimum and maximum scores respectively among all the documents in the run for the given query q. Note that this normalization scheme maps all the scores in a run, for a given query, to the range [0,1]. That is, the maximum score is mapped to 1 and the minimum score is mapped to 0. The intermediate values are adjusted accordingly. We do this normalization for each run and get a set of normalized scores for document d (for query q): 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                                 
                                    norm
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                                 
                                    norm
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                                 
                                    norm
                                 
                              
                           
                        . Then we perform a weighted combination (say, g) of the scores as 
                           
                              g
                              =
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                                 
                                    norm
                                 
                              
                              +
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                                 
                                    norm
                                 
                              
                              +
                              ⋯
                              +
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    N
                                 
                                 
                                    norm
                                 
                              
                           
                        . So, g is the score of d in the fused run for a given query q. Now, we determine the weights 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                           
                         using the GA such that for all the documents in all the N runs we get g scores that lead to optimum performance of the fused run. For the documents that appear in less than N runs for a given query, their scores in the runs where they do not appear, are set to zero.

Let 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                           
                         be two runs and 
                           
                              Q
                              =
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    q
                                 
                                 
                                    M
                                 
                              
                           
                         be a query set. Let 
                           
                              D
                              =
                              
                                 
                                    d
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    d
                                 
                                 
                                    2
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    d
                                 
                                 
                                    n
                                 
                              
                           
                         be the set of documents appearing in at least one of the two runs for at least one query. Let us now consider a query q from Q. Then for each document 
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                           
                        , we have an ordered pair of scores (
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                    i
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                    i
                                 
                              
                           
                        ), where 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                    i
                                 
                              
                           
                         is the score of 
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                           
                         for run 1 and 
                           
                              
                                 
                                    s
                                 
                                 
                                    2
                                    i
                                 
                              
                           
                         is the score of 
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                           
                         for run 2. We assign a zero score to the document in the run where it does not appear. For example, if document d appears in run 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                           
                         with score s and is absent in run 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                           
                        , then the pair of scores for the document d will be (
                           
                              s
                              ,
                              0
                           
                        ). Thus, for each query, we have n pairs of scores 
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    1
                                    i
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                    i
                                 
                              
                              )
                           
                        . For all the queries in Q, we have Mn such pairs. We remove 
                           
                              (
                              0
                              ,
                              0
                              )
                           
                         pairs, i.e., pairs where both the scores are zero. On the basis of the rest of the pairs, we compute the correlation coefficient between the scores obtained by 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                           
                        .

@&#EXPERIMENTAL RESULTS@&#

We run the GA on the submitted Ad Hoc runs of TREC 3, 5, 6 and 7 found at http://trec.nist.gov/results.html. The entire list of the runs used in our experiments can be found in Table 17 towards the end of the paper. The table shows the runs in the decreasing order of MAP values. The total number of submitted runs for TREC 3, 5, 6 and 7 are 40, 61, 74 and 103 respectively. We used simple GA code implemented at Kanpur Genetic Algorithms laboratory found at http://www.iitk.ac.in/kangal/codes.shtml. We compared GA with the following baselines:
                        
                           •
                           
                              
                                 
                                    CombSUM
                                    ,
                                    
                                    CombMNZ
                                 
                               and 
                                 
                                    Z
                                    -
                                    Score
                                 
                              : These are unsupervised parameter-free methods (Fox and Shaw, 1993) (Savoy, 2004).

Linear combination method with performance level (LC) and performance level squared (
                                 
                                    LC
                                    2
                                 
                              ): These are supervised parameter-free methods (Wu et al., 2009).

Multiple linear regression based method (RegFuse): This is a supervised method (Wu, 2012). For this algorithm, the logistic model parameters a and b are trained on all the documents for all the queries in Section 5.1, on top-ranked documents for all the queries in Section 5.2 and on disjoint query sets in Section 5.3.

Mixture Model (MixModel): This is also a supervised method (Hong and Si, 2012). Here, we chose K, the number of latent groups, as 3.

Lambda Merge (LambdaMerge): This is another supervised method (Sheldon et al., 2011). For LambdaMerge, we optimized MAP. Here, we used all the “Query-document features” and “Gating Features”. However, Gating features like IsRewrite, RewriteScore, RewriteRank, Overlap@N and RewriteLen did not have much significance since our original query and the reformulated query were the same. In other words, we did not do any query reformulation and used the Lambda-Merge scheme as a baseline for data fusion method.

ClustFuse variants ClustFuseCombSUM and ClustFuseCombMNZ: These are unsupervised baselines (Khudyak Kozorovitsky and Kurland, 2011). In this paper, Kozorovitsky et al. have considered top d highest ranked documents in a retrieved list for fusion, where the chosen d values were 20, 30, 40 and 50. In addition, they fused only three runs at a time. These considerations were done to cope with the high resource complexity of their algorithm. So, we did our experiment with the top 10 runs only (a larger number of runs takes a very long computing time) and we chose the d value as 50. For clustering used in ClustFuse, as mentioned in the paper, we performed K Nearest Neighbour algorithm where, the value of K was chosen as 10. The ClustFuse method incorporates a single free parameter, λ. The value of λ is chosen from the set 
                                 
                                    {
                                    0
                                    ,
                                    0.1
                                    ,
                                    ⋯
                                    ,
                                    1
                                    }
                                 
                              .

First we consider d to be 1000 and the top 30 runs in terms of MAP. The results are shown in Table 5
                         which shows that GA produces numerical improvements in MAP, P@5 and P@10 over the best component run as well as the unweighted linear combination methods (
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                           
                         and 
                           
                              Z
                              -
                              Score
                           
                        ), the linear combination method with performance level (LC) and performance level squared (
                           
                              LC
                              2
                           
                        ), multiple linear regression RegFuse, mixture model for result merging MixModel and LambdaMerge. These pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test (Siegel, 1956). In other words, the performance improvement (in terms of MAP, P@5 and P@10) achieved by GA over all the other runs shown in Table 5 is statistically significant.

However, for comparison with ClustFuse variants ClustFuseCombSUM and ClustFuseCombMNZ, we had to make some considerations. These have been already discussed when we described the baselines. Table 6
                         shows the comparisons of GA with two variants of ClustFuse, viz., ClustFuseCombSUM and ClustFuseCombMNZ. Note that all the reported values are obtained on the basis of the top 50 documents in a run. We can see that GA outperforms both ClustFuseCombSUM and ClustFuseCombMNZ in MAP, P@5 and P@10 and these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

Here the training was done at depths 
                           
                              d
                              =
                              100
                           
                        , 50 and 25 while the testing was done at depth d
                        =1000. Tables 7 and 8
                        
                         show the results. For all the depths and top 30 runs, GA produced numerical improvements in MAP, P@5 and P@10 over the best component run as well as 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge and all these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test. For the top 10 runs and d
                        =50, this experiment was done for comparison with the ClustFuse variants. But note that here the experiment was done for d
                        =50 and 25. Table 8 shows that GA outperforms both ClustFuseCombSUM and ClustFuseCombMNZ in MAP, P@5 and P@10 and these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

It is evident that the ranked pool produced by fusion achieves retrieval performance that is at least as good as the case when all the documents are used for optimization. Also, in almost all the cases, the number of documents in the fused run, as shown in Fig. 4, is much less than 1000 when only the top documents are used. This indicates that the ranked pool formed out of the top documents contains a rich collection of useful documents that consistently produces encouraging retrieval performance.


                        Table 9
                         shows that the average number of documents per query in the fused run highly varies over datasets and also over different depths. When the top documents for a query are considered for each run that is fused, the average number of documents per query in the fused run can be as high as 1000 (as in TREC 6, top 100). On the other hand, it can be as low as 78 (TREC 7, top 25). We now consider a more resource constrained situation. We take only the top d (=100, 50, 25) documents per query in the fused run. So, now we use the relevance assessments of only the top d documents per query. This guarantees that the relevance assessments of only the top d documents per query are used for finding the MAP of the fused run. Tables 10 and 11
                        
                         show the results. We see a slight drop in performance since a lesser amount of ground truth is used for evaluation. Nevertheless, for TREC 3, 6 and 7, the performance in MAP, P@5 and P@10 using the top d relevance assessments remains significantly better than the best component run as well as 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test. However, for TREC 5, the MAP values for 
                           
                              GA
                              @
                              100
                              rel
                              ,
                              
                              GA
                              @
                              50
                              rel
                           
                         and 
                           
                              GA
                              @
                              25
                              rel
                           
                         are numerically comparable with RegFuse MAP value and these pairwise differences are not statistically significant at 95% confidence level (p-value>0.05) by Wilcoxon signed-rank test. But, the TREC 5 
                           
                              GA
                              @
                              100
                              rel
                              ,
                              
                              GA
                              @
                              50
                              rel
                           
                         and 
                           
                              GA
                              @
                              25
                              rel
                           
                         MAP values are numerically better than all the remaining baselines, viz., the best component run as well as 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              MixModel
                           
                         and LambdaMerge and these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test. But for P@5 and P@10, the TREC 5 
                           
                              GA
                              @
                              100
                              rel
                              ,
                              
                              GA
                              @
                              50
                              rel
                           
                         and 
                           
                              GA
                              @
                              25
                              rel
                           
                         values are numerically better than all the baselines and these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test. Table 11 shows that each of 
                           
                              GA
                              @
                              100
                              rel
                              ,
                              
                              GA
                              @
                              50
                              rel
                           
                         and 
                           
                              GA
                              @
                              25
                              rel
                           
                         is better than ClustFuseCombSUM and ClustFuseCombMNZ in terms of MAP, P@5 and P@10, and these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

In the previous sections, we have learned the optimal weights using either all the relevant judgements or the relevant judgements of the top-ranked documents. However, training was done using all the queries. In this sub-section, we divide the queries into two disjoint groups: even-numbered queries and odd-numbered queries. First, we perform the training on the even-numbered queries only and test the learned optimal weights on the odd-numbered queries. Let the optimal MAP thus obtained be MAPTrainOnEvenTestOnOdd. Then, we swap the train-test sets. In other words, we train on the odd-numbered queries and test on the even-numbered queries to get the optimal MAP MAPTrainOnOddTestOnEven. Finally, we take an average of MAPTrainOnEvenTestOnOdd and MAPTrainOnOddTestOnEven values to get MAPTrainTestAverage. We report MAPTrainTestAverage values in Tables 12 and 13
                        
                        . P@5 and P@10 values reported in the table are also obtained in the same way. Note that apart from GA, the same train-test procedure was followed for finding the values for 
                           
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge. The remaining methods are unsupervised and so the same values are reported for them as found in the previous tables. The values are calculated for the top 10 performing runs in case of the ClustFuse variants and the top 30 runs for all the remaining methods. We see that GA outperforms, in MAP, P@5 and P@10, the best component run as well as 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                              ,
                              
                              LambdaMerge
                              ,
                              
                              ClustFuseCombSUM
                           
                         and ClustFuseCombMNZ, and all these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

In the previous subsections, we have obtained the evaluation measures for the top performing Ad Hoc runs submitted in TREC 3, 5, 6 and 7. In this subsection, for each year’s Ad Hoc runs, we choose runs randomly from all the submitted Ad Hoc runs in that year and test our method by considering different number of runs (instead of 30 and 10) at a time for fusion. We choose k runs at random from all the submitted runs, where k
                        =2, 3, 5, 10, 20 and 30, and for each value of k the random selection is done 12 times. For a particular k value, the experiments were performed using the train-test procedure discussed in the last subsection. Then, we take an average of all the 12 values for each evaluation measure.


                        Figs. 5 and 6
                        
                         show the MAP and P@5 values for TREC 3 at different values of k (number of runs) of GA against the best component, 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge. Figs. 7–12
                        
                        
                        
                        
                        
                         depict the MAP and P@5 values for TREC 5, 6 and 7. In MAP, for each randomly chosen set, GA outperforms the best component, CombSUM, CombMNZ, Z-Score, 
                           
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge for all the four years, and all these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test. In P@5, for three sets of size 3 (k
                        =3) in TREC 7, the 
                           
                              RegFuse
                              ,
                              
                              LC
                           
                         and 
                           
                              LC
                              2
                           
                         values are numerically comparable with GA and these pairwise differences are not statistically significant at 95% confidence level (p-value>0.05) by Wilcoxon signed-rank test. For all the remaining sets of runs, for all values of k and all the four years, in P@5 GA outperforms the best component, 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge and all these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.


                        Figs. 13 and 14
                        
                         show the MAP and P@5 comparisons of GA with ClustFuseCombSUM and ClustFuseCombMNZ for TREC 3. Figs. 15–20
                        
                        
                        
                        
                        
                         show the same for TREC 5, 6 and 7. Note that here k
                        =2, 3, 5, 10 due to high resource requirements of ClustFuse. For all the four years, GA is numerically better in MAP and P@5 than ClustFuseCombSUM and ClustFuseCombMNZ, and all these pairwise differences are statistically significant at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

The GA is a time consuming method. The high time requirements can be ascribed to the extensive search exercise performed by GA over the solution space to find the optimal performance. However, the time requirements can be reduced by considering a smaller number of generations. Fig. 21
                         shows the MAP values of GA for TREC 3, 5, 6 and 7 when the number of generations varies from 200 to 150, 100, 75, 50 and 25. For each year, we found the time required when the maximum number of runs are considered for fusion. In our experiments, this number is 30. These runs are chosen randomly and the MAPs are obtained based on the train-test procedure. We see that there is no notable drop in performance when the number of generations is reduced. This is true for all the four years of data and pairwise differences over the different values of number of generations are not statistically significant at 95% confidence level (p-value>0.05) by Wilcoxon signed-rank test. The performance achieved by GA for generations 200, 150, 100, 75, 50 and 25 remain statistically significantly better than all the baselines at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

However, reduction in the number of generations reduces the time requirements considerably. Table 14
                         shows the time requirements of GA for different numbers of generation along with the time requirements of 
                           
                              CombSUM
                              ,
                              
                              CombMNZ
                              ,
                              
                              Z
                              -
                              Score
                              ,
                              
                              LC
                              ,
                              
                              LC
                              2
                              ,
                              
                              RegFuse
                              ,
                              
                              MixModel
                           
                         and LambdaMerge. The time was calculated on a Intel Core i5 processor machine with 5GB RAM. The values are averages over TREC 3, 5, 6 and 7. We see that although the time taken by GA is very high when the number of generations is 200, it can be reduced considerably when fewer generations are considered. For generations less than 100, GA is less time intensive than MixModel and LambdaMerge. Table 15
                         shows the comparison of GA with ClustFuseCombSUM and ClustFuseCombMNZ in terms of time requirement. Here, 10 runs are fused and top 50 documents per query are considered for each run. GA was run for 200 generations. We see that GA is superior to both ClustFuseCombSUM and ClustFuseCombMNZ in terms of time requirement even when the number of generations is not reduced.

So, we see that GA is not the most expensive algorithm in terms of computation time. It betters MixModel and LambdaMerge at a lower number of generations and also the ClustFuse variants even when the number of generations is not compromised. For the remaining methods, the higher time requirements can be justified by the consistent superiority of GA in terms of standard evaluation measures.

In the fusion task described above, we have considered all the 30 runs and achieved significantly better performance. Now we would like to see if all the runs are indeed necessary to give rise to a fusion with an enhanced performance. For this we consider only the 10 runs having the highest 10 MAP values. We then separately run GA on these 10 runs and get the optimum fused run for each dataset. The MAP values of these fused runs are shown in Table 16
                        
                        . It is seen that removal of the 20 runs does not hurt the performance of the fused run in any significant way. Though theoretically the MAP value achieved by the fusion of 10 runs cannot be higher than that by the fusion of 30 runs, it is in fact higher for TREC 3, 6 and 7 data. This is because of the iterative nature of GA that generates a solution that is close to the global optimum of an objective function, but not necessarily the global optimum itself. Anyhow, the lesson learnt here is that not all the runs are necessarily required for an efficient fusion. Next we will see if the number of runs to be fused can be further reduced.

In the previous sections, we have fused the runs and determined their optimal weights irrespective of how similar the runs are. There may be runs which are similar to each other in terms of the correlation coefficient among the retrieval scores (discussed in Section 4.3) of the same set of documents. So, these similar runs add similar information regarding the relative superiority of a document common to them. Here we explore if we can further remove the redundant information by considering only one of the similar runs instead of considering all of them. Let S be the set of M runs (M
                        =10 in the present case). Our algorithm is as follows:
                           
                              1.
                              Calculate the correlation coefficient between the retrieval scores of each pair of runs in S. Let 
                                    
                                       
                                          
                                             MAP
                                          
                                          
                                             1
                                          
                                       
                                    
                                  be the MAP value of the fused run obtained by GA on the basis of the runs in S.

Take the pair of runs in S with the highest correlation coefficient. Drop the run in the pair with the lower MAP value from the set S. Let the new set be 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 .

Run GA on the runs in 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  and let 
                                    
                                       
                                          
                                             MAP
                                          
                                          
                                             2
                                          
                                       
                                    
                                  be the MAP value of the new fused run.

If 
                                    
                                       
                                          
                                             MAP
                                          
                                          
                                             2
                                          
                                       
                                    
                                  is lower than 
                                    
                                       
                                          
                                             MAP
                                          
                                          
                                             1
                                          
                                       
                                    
                                  by 
                                    
                                       x
                                       %
                                    
                                  or more, stop. Else set 
                                    
                                       S
                                       =
                                       
                                          
                                             S
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  and 
                                    
                                       
                                          
                                             MAP
                                          
                                          
                                             1
                                          
                                       
                                       =
                                       
                                          
                                             MAP
                                          
                                          
                                             2
                                          
                                       
                                    
                                 , and go to Step 2.

The algorithm is designed to drop one run at a time. Note that the pair with the next highest correlation will be considered if both of them appear in the current set 
                           
                              
                                 
                                    S
                                 
                                 
                                    ′
                                 
                              
                           
                        . The threshold x measures the tolerance in the drop of performance that results when a run is barred from participating in a fusion. We chose x as 3%.

The experiment was done on the top 10 runs of TREC 3, 5, 6 and 7. Fig. 22
                         shows the trend. We see that there is no serious drop in performance if some of the similar runs do not participate in fusion. However, the performance drop crosses our tolerance level at 3, 2, 4 and 5 runs for TREC 3, 5, 6 and 7 respectively. So, the number of optimum runs chosen by our algorithm is 4, 3, 5 and 6 for TREC 3, 5, 6 and 7 respectively. The MAP produced by the optimum sets are significantly better than the best component run and all the baselines at 95% confidence level (p-value<0.05) by Wilcoxon signed-rank test.

Given a set of a high number of runs, GA naturally selects the highly contributing runs in a fusion setup. High fusion weights are automatically assigned to the runs which have higher number of relevant documents at the top and hence contribute more to the fused run. These runs are naturally the best runs in the set. Thus, natural selection, through cross-over and mutation, plays its part in identifying the superior candidates in a linear combination of runs. Fig. 23
                         shows the weights assigned to the top runs by GA. It shows that the highest fusion weights are assigned to the best candidate runs over four datasets of TREC.

@&#CONCLUSION@&#

We have proposed a Genetic Algorithm based approach to determination of an efficient fusion of a set of existing runs. We show that considerable improvement can be obtained in fusion performance even if partial relevance assessments are used for determining the optimal weights. The proposed approach also determines the redundant runs that may be removed from fusion without much harm. No Ad Hoc or manual settings for selection of a subset of runs for fusion or the fusion weights for the selected runs, are necessary. All these parameters are automatically and efficiently learnt through optimization by the Genetic Algorithm.

@&#REFERENCES@&#

