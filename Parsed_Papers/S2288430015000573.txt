@&#MAIN-TITLE@&#An automatic 3D CAD model errors detection method of aircraft structural part for NC machining

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The 3D CAD model of an aircraft structural part is partitioned into multiple local regions in terms of the base faces.


                        
                        
                           
                           The fillet association level graph is proposed to represent the local region for exploring the CAD model errors.


                        
                        
                           
                           An automatic CAD model error detection method based on heuristics rule is proposed.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Heuristic rule

CAD model errors

Aircraft structural part

Feature-based NC machining

@&#ABSTRACT@&#


               
               
                  Feature-based NC machining, which requires high quality of 3D CAD model, is widely used in machining aircraft structural part. However, there has been little research on how to automatically detect the CAD model errors. As a result, the user has to manually check the errors with great effort before NC programming. This paper proposes an automatic CAD model errors detection approach for aircraft structural part. First, the base faces are identified based on the reference directions corresponding to machining coordinate systems. Then, the CAD models are partitioned into multiple local regions based on the base faces. Finally, the CAD model error types are evaluated based on the heuristic rules. A prototype system based on CATIA has been developed to verify the effectiveness of the proposed approach.
               
            

@&#INTRODUCTION@&#

With the rapid development of aircraft manufacturing technology, plenty of integral aircraft structural parts with thin walls are used in new generation aircraft [1]. However, the NC programming time of integral aircraft structural part is much longer than its NC machining time, which affects the production efficiency of enterprise seriously. Under the supports of application requirements drive and high-tech, the emerging feature-based NC programming system [2,3], which has the characteristics of intelligence, automation and rapidity, greatly improves the efficiency of NC programming for aircraft structural parts. However, the input of the feature-based NC programming system usually requires that no CAD model errors (e.g. tiny faces, sharp face angles, non-tangent faces, etc.) exist in the aircraft structural parts. Unfortunately, the 3D CAD models of the aircraft structural parts generated from the design departments are far from the model requirements of the NC programming systems due to the complex shapes of the aircraft structural parts. In addition, the 3D CAD models with errors will result in the failure of feature recognition [4] and the tool path generation [5], and thus make the feature-based NC programming systems lose its function and advantages. Therefore, how to find the errors in the 3D CAD model becomes an urgent problem to be solved for the featured-based NC programming systems.

Previous studies on finding 3D CAD model errors can be classified into two kinds: CSG model based approach and B-Rep model based approach. In the CSG model based approach [6], the relationships between the various feature commands, as well as the relationships between the parametric data of each feature, are defined to check the CAD models errors through rule reasoning of an expert system. Yang et al. [7] proposed a method based on the design history for 3D CAD model errors detection, which can preserve parametric information and capture the design intent. However, it is usually suitable for the simple part without complex structure, not for the aircraft structural parts. In the B-Rep model based approach [8], CAD model errors are checked through a mathematical computation of a data structure that represents the topological and geometric elements of the B-Rep model. Gu et al. [9] proposed an approach to identify, correct, and avoid errors in CAD models which affect interoperability. However, it is not for NC machining, and thus cannot be directly used in the preprocessing stage of the feature-based NC programming.

In this paper, a novel CAD model errors detection method of aircraft structure parts for NC machining is proposed to overcome the above-mentioned problems. First, the base faces of the aircraft structural part are identified according to the reference directions, which are manually selected by the user. Then, according to the base faces, the 3D CAD model is partitioned into multiple local regions, which can be represented by an attributed adjacency graph (AAG) [10]. Finally, for the CAD model errors imbedded in the local regions, their error types are detected based on the heuristic rules, which are constructed in terms of the characteristics of topology and shape of the CAD model errors.

In this section, we first define some basic concepts, and then briefly outline our approach.


                        
                           Definition 1
                           CAD model error. A CAD model error is a local face region which has adverse impact on feature-based NC programming.


                        
                           Definition 2
                           Reference direction (RD). The reference direction 
                                 n
                              
                              
                                 z
                               is defined as the z-axis of the machining coordinate system (MCS).


                        
                           Definition 3
                           Base face. If a planar face f
                              
                                 i
                               meets the following condition: 
                                 n
                              (f
                              
                                 i
                              )//
                                 n
                              
                              
                                 z
                              , f
                              
                                 i
                               is defined as the base face of 
                                 n
                              
                              
                                 z
                              , where 
                                 n
                              (f
                              
                                 i
                              ) is the normal of f
                              
                                 i
                              .


                        
                           Definition 4
                           Edge convexity. The edge convexity between two adjacency faces can be classified into three kinds: convex, concave and smooth.


                        
                           Definition 5
                           Associated fillet (AF). The fillets adjacent to the base face with a concave edge or smooth edge are called associated fillet.


                        
                           Definition 6
                           Extended associated fillet (EAF). The adjacent associated fillets and its side corners with a concave edge or smooth edge are called extended associated fillet (
                              Fig. 1).

By statistics analysis, above 70% of the CAD model errors of the aircraft structural parts are generated due to the misuse of fillet operations, and the others are mainly generated since the designers are lack of machining experience or they make mistakes in the design process. According to the base faces, from bottom to up with respect to the reference direction, the 3D CAD model of the aircraft structural part can be represented with a set of associated fillet or extended associated fillet, and then the CAD model fillet errors detection can be set in the base face and its associated fillet or extended fillet. The systematic overview of our approach is described in 
                        Fig. 2. It can be seen that our approach contains three main parts:
                           
                              (1)
                              Heuristic rules library construction. According to the topology and shape characteristics of the existed CAD model errors, the experienced engineers construct the heuristic rules library. For the new emerging CAD model errors not covered in the heuristic rules library, we need to update and extend the heuristics rules library constantly.

Faces clustering based on reference direction. According to the given reference direction, the base faces {f
                                 
                                    i
                                 } of the aircraft structural part are identified first. Then, taking the base face f
                                 
                                    i
                                  as the seed face respectively, all associated fillet or extend associated fillet, which can be represented with an AAG denoted as {G(f
                                 
                                    i
                                 )}, are generated from the AAG G of 3D CAD model, and the other faces not contained in {G(f
                                 
                                    i
                                 )} are denoted as G/{G(f
                                 
                                    i
                                 )}.

CAD model errors type evaluation. Based on the heuristic rules, traverse {G(f
                                 
                                    i
                                 )} and G/{G(f
                                 
                                    i
                                 )} to identify the CAD model errors respectively.

Based on the analysis of the modeling history for the CAD model errors, they can be classified into the following three categories (
                        Fig. 3):
                           
                              (1)
                              Missing fillet errors that come from the missing fillet operations, which mainly appeared in the pockets, ribs, etc., and the topological representation of these errors is the concave edges on the CAD model.

Fillet errors that occur in the misuse of fillet operations, which mainly appeared in the complex pockets, and the topological and shape characteristics of these errors are the discontinuity, local variation, inconsistent radiuses and tiny faces of fillets on the CAD model.

Other errors that take place due to the poor machining experience or mistakes of the designers, and the topological and shape representation of these errors are the narrow spaces or residual faces on the CAD model.

We analyzed all existed CAD model errors in all aircraft structural parts which are provided by a large aircraft manufacturer. Based on common topological and geometric characteristics of these CAD model errors, we establish the following heuristic rules:
                           Rule 1
                           If the relative area s
                              
                                 pi
                               of the non-fillet f
                              
                                 i
                               is smaller than a certain threshold δ, then f
                              
                                 i
                               is a tiny non-fillet face, that is
                                 
                                    (1)
                                    
                                       
                                          
                                             s
                                          
                                          
                                             p
                                             i
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         A
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      k
                                                   
                                                
                                                +
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       <
                                       δ
                                    
                                 
                              where s
                              
                                 k
                               is the area of f
                              
                                 k
                              , S
                              
                                 A
                               is the adjacent faces of f
                              
                                 i
                              .

If the common edge between a non-fillet face f
                              
                                 i
                               and its adjacent face f
                              
                                 p
                               is a concave edge e
                              
                                 concave
                              , then f
                              
                                 i
                               is a concave edge face, that is
                                 
                                    (2)
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∩
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         c
                                                         o
                                                         n
                                                         c
                                                         a
                                                         v
                                                         e
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   ∈
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         ,
                                                         ⋯
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               n
                                                            
                                                         
                                                      
                                                      }
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where {f
                              1, f
                              2, f
                              3, …, f
                              
                                 n
                              } is the adjacent face set of f
                              
                                 i
                              .

If the common edge between a fillet f
                              
                                 i
                               (f
                              
                                 i
                              
                              
                                 ∈
                              
                              AF) and its adjacent face f
                              
                                 j
                               (f
                              
                                 j
                              
                              
                                 ∈
                              
                              AF) is a concave edge e
                              
                                 concave
                              , then AF is discontinuity, that is

Given two fillets f
                              
                                 i
                               (f
                              
                                 i
                              
                              
                                 ∈
                              
                              AF) and f
                              
                                 j
                               (f
                              
                                 j
                              
                              
                                 ∈
                              
                              AF), and their radiuses are r
                              
                                 i
                               and r
                              
                                 j
                               respectively, if r
                              
                                 i
                               is not equal to r
                              
                                 j
                              , we call that the fillet radius of AF is inconsistent, that is
                                 
                                    (4)
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ≠
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

If the relative area s
                              
                                 fi
                               of the fillet f
                              
                                 i
                               is smaller than a certain threshold σ, then f
                              
                                 i
                               is a tiny fillet, that is
                                 
                                    (5)
                                    
                                       
                                          
                                             s
                                          
                                          
                                             f
                                             i
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ∈
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      k
                                                   
                                                
                                                +
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       <
                                       σ
                                    
                                 
                              
                           

Suppose that the edge between tiny fillet f
                              
                                 j
                               and base face f is e
                              
                                 j
                              , and the radius of the non-tiny fillet f
                              
                                 k
                               is r
                              
                                 k
                              , if r
                              
                                 k
                               is different from the curvature radius of e
                              
                                 j
                              , we call that there exists local variation in AF, that is
                                 
                                    (6)
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   f
                                                   ∩
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   f
                                                   ∩
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ≠
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ∈
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   j
                                                   ≠
                                                   k
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Given two side corner f
                              
                                 i
                               and f
                              
                                 j
                               (f
                              
                                 i
                              , f
                              
                                 j
                              
                              
                                 ∈
                              
                              EAF/AF), if there exists a common edge between f
                              
                                 i
                               and f
                              
                                 j
                              , we call that the side corner is discontinuity, that is
                                 
                                    (7)
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∩
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   =
                                                   e
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   E
                                                   A
                                                   F
                                                   /
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   E
                                                   A
                                                   F
                                                   /
                                                   A
                                                   F
                                                
                                             
                                             
                                                
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

According to the characteristics of CAD model errors, we classify all CAD model errors into two categories: narrow space and residual faces errors, and fillet errors. Based on the combination of the above rules, the corresponding detection rules of the two types can be established. The corresponding rules are as follows:
                           
                              (1)
                              
                                 Narrow space and residual faces detection rule. The narrow space and residual faces are tiny parts generated by overcut or undercut during modeling, and there exist tiny faces and concave edge faces in narrow space or residual faces, thus the corresponding rule is


                                 Rule 1+Rule 2:=Narrow space/Residual faces


                                 Fillet errors detection rule. Fillet errors in a CAD model mainly appear in the base face loop FL(f) (FL(f
                                 
                                    i
                                 )=f
                                 
                                    i
                                 
                                 
                                    ∪
                                 
                                 AF), and actually there are seldom more than three types of errors in one FL(f
                                 
                                    i
                                 ). Since each fillet error in FL(f
                                 
                                    i
                                 ) is only single CAD model error or the combination of multiple CAD model errors, the corresponding detection rule is one rule or the combination of multiple rules. 
                                 Fig. 4 illustrates the detection rules for fillet errors.

Faces clustering based on reference direction is to explore the associated fillets and corners for a base face. In this paper, it can be described by the fillet association level graph (FALG). Through the analysis of node and edge attribute of FALGs, we can find out the corresponding hints of the CAD model errors. Therefore, the construction of FALG is crucial to efficiently detecting all fillet errors. The FALG construction algorithm is as follows:

Input: AAG of CAD model (G), and reference direction set O
                        
                           R
                        ={
                           n
                        
                        
                           i
                        }, 1≤i≤m
                     

Output: FALG set G
                        
                           S
                        ={G(f
                        
                           j
                        )}, 1≤j≤n
                        
                           
                              Step1.
                              Traverse O
                                 
                                    R
                                 . According to the reference direction 
                                    n
                                 
                                 
                                    i
                                 , find out all base faces, and then add them to the base face list BL.

Sort the base faces in BL from bottom to up based on the reference directions;

Select f
                                 
                                    i
                                  (f
                                 
                                    i
                                 
                                 
                                    ∈
                                 
                                 BL) as the seed face, and then search all connected nodes from G, denoted as V(f
                                 
                                    i
                                 )={v
                                 
                                    i
                                 }, 1
                                    ≤
                                 
                                 i
                                 
                                    ≤
                                 
                                 p.

Traverse V(f
                                 
                                    i
                                 ):
                                    
                                       1)
                                       If 
                                             ∀
                                          
                                          v
                                          
                                             i
                                          
                                          
                                             ∈
                                          
                                          V(f
                                          
                                             i
                                          )|v
                                          
                                             i
                                          
                                          
                                             ∉
                                          
                                          EAF(f
                                          
                                             i
                                          ), there exists missing fillet between v
                                          
                                             i
                                           and f
                                          
                                             i
                                          , and v
                                          
                                             i
                                           is not the node of the first association level.

If ∃v
                                          
                                             i
                                          
                                          
                                             ∈
                                          
                                          V(f
                                          
                                             i
                                          )|v
                                          
                                             i
                                          
                                          
                                             ∈
                                          
                                          EAF(f
                                          
                                             i
                                          ), and the common edge e between v
                                          
                                             i
                                           and f
                                          
                                             i
                                           is not convex, denoted as θ(v
                                          
                                             i
                                          )
                                             ≠
                                          −1, then v
                                          
                                             i
                                           is stored as the node of the first association level, where if e is smooth, denoted as θ(v
                                          
                                             i
                                          )=0, v
                                          
                                             i
                                           is a base corner, else if e is concave, denoted as θ(v
                                          
                                             i
                                          )=1, v
                                          
                                             i
                                           is a side corner.

Set the traversing node v
                                          
                                             i
                                           as true, denoted as s(v
                                          
                                             i
                                          )=true.

Select one node v
                                 
                                    j
                                  in the first association level as the seed face, and then search all connected nodes v
                                 
                                    k
                                  (v
                                 
                                    k
                                 
                                 
                                    ∈
                                 
                                 EAF(f
                                 
                                    k
                                 )
                                    ∧
                                 
                                 s(v
                                 
                                    k
                                 )
                                    ≠
                                 true) to construct the second association level. Repeat Step5 until all nodes are traversed, and then one FALG is constructed.

Select the next base face, and repeat Steps 3–5 to construct the FALGs until all base faces are traversed.


                        
                        Fig. 5 shows an example of FALG construction. First, sort all base faces of CAD model from bottom to up according to the reference direction (Fig. 5a): f
                        1 and f
                        9 (z=2mm), f
                        2 and f
                        8 (z=4mm), f
                        3 and f
                        6 (z=5mm), f
                        4 (z=7mm), f
                        7 (z=35mm), and f
                        5 (z=45mm). Then, select a base face as the seed face to search all connected fillets. Since base face f
                        9 (Fig. 5b) is lower than base face f
                        8, f
                        9 is priority to f
                        8. The association nodes in the first level of f
                        8 are v
                        7, v
                        8, v
                        9, v
                        10, v
                        11 in all connected nodes, and then select v
                        8 and v
                        10 as the seed face to search out v
                        12 and v
                        13 as the nodes of the second association level. Since there exists no node met the conditions to be extended in the third association level, the search process is terminated. Fig. 5c illustrates the association levels of base face f
                        8 and f
                        9.

The CAD model errors type evaluation plays a significant role in identifying the CAD model errors. For the ease of classification and future work of repairing the CAD model errors, the fillet errors are detected first, and then the other errors. The detailed steps are as follows (
                        Fig. 6):
                           
                              
                                 
                                 
                                    
                                       Input: G
                                          
                                             S
                                          ={G
                                          
                                             j
                                          (f
                                          
                                             i
                                          )}(j=1, 2,3…n) and G
                                          
                                             m
                                          
                                          =G/G
                                          
                                             s
                                          
                                       
                                    
                                    
                                       Output: CAD model errors
                                    
                                    
                                       Step 1. Select a FALG G
                                          
                                             k
                                           in G
                                          
                                             S
                                          , and delete it from G
                                          
                                             S
                                          .
                                    
                                    
                                       Step 2. Call cEval(G
                                          
                                             k
                                          ).
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          procedure cEval (G
                                          
                                             k
                                          )
                                    
                                    
                                       
                                          
                                          
                                          
                                          Case 1. If f(G
                                          
                                             k
                                          )
                                             ↦
                                          Rule 2 then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          store the error as missing fillet
                                    
                                    
                                       
                                          
                                          
                                          
                                          Case 2. Else if f(G
                                          
                                             k
                                          )
                                             ↦
                                          Rule 3∧Rule 7 then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          store the error as discontinuity
                                    
                                    
                                       
                                          
                                          
                                          
                                          Case 3. Else if f(G
                                          
                                             k
                                          )
                                             ↦
                                          Rule 4 then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          store the error as inconsistent radius
                                    
                                    
                                       
                                          
                                          
                                          
                                          Case 4. Else if f(G
                                          
                                             k
                                          )
                                             ↦
                                          Rule 6 then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          store the error as local variation
                                    
                                    
                                       Step 3. If G
                                          
                                             S
                                          ≠Ø then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          go to step1.
                                    
                                    
                                       
                                          
                                          
                                          
                                          Else if G
                                          
                                             S
                                          =Ø then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          go to step4.
                                    
                                    
                                       Step4. Traverse G
                                          
                                             m
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          Case 1. If f(G
                                          
                                             m
                                          )
                                             ↦
                                          Rule 1∧Rule 2 then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          store the error as narrow space or residual faces
                                    
                                    
                                       
                                          
                                          
                                          
                                          Case 2. Else if f(G
                                          
                                             m
                                          )
                                             ↦
                                          Rule 2 then
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          store the error as sharp corner
                                    
                                    
                                       Step5. Output the CAD model errors.
                                    
                                 
                              
                           
                        where f(G
                        
                           i
                        ) is a function calculating the attributes of the nodes and edges of G
                        
                           i
                        , and 
                           ↦
                         is a function which means that the attributes match the rules.

In order to verify the feasibility and effectiveness of our proposed approach in this paper, we have developed a prototype system for CAD model errors detection of aircraft structural parts automatically on the platforms of Microsoft Visual Studio 2005 and CATIA V5R19 component application architecture (CAA).


                     
                     Fig. 7a shows the prototype system of CAD model errors detection, the using steps are as follows: (1) select the reference faces interactively to compute the reference directions, (2) detect the CAD model errors based on the reference directions, and (3) record the detection results and generate a report in the form of a HTML file.


                     Fig. 7c shows a complex aircraft structural part Model_1 from an aviation manufacturing enterprise, composed of 3590 faces. According to the detection results, there exist various kinds of CAD model errors: 1 narrow space error, 2 residual faces errors, 126 missing fillets errors, 2 inconsistent radius errors, 5 discontinuity errors, 37 local variation errors and 6 sharp corner errors. Some of the CAD model errors are illustrated in Fig. 7d–m. Faces of the CAD model errors are highlighted in the detection results. Specially, for the cases of missing fillet errors, discontinuity and inconsistent radius errors, their corresponding faces are colored. The red faces are the base faces and the yellow faces are the AF. After the detection, a HTML file is generated as a report which records the details of the detection results, as shown in Fig. 7b.

Another sample with complex topological and shape characteristics is used to illustrate the CAD model errors detection in 
                     Fig. 8a. In this example, the part is composed of 3510 faces and the detection result indicates that there exist 1 narrow space error, 1 residual faces errors, 91 missing fillets errors, 21 inconsistent radius errors, 6 discontinuity errors, 3 local variation errors and 8 sharp corner errors. Some of these errors are illustrated in Fig. 8b–k in the same way as Model_1.

The computation time for Model_1 and Model_2 is about 5min. By statistics analysis, the user takes nearly 5h to check these errors manually. Therefore, it is obvious that the user can find CAD model errors much faster and more accurately by using our proposed approach, and thus the proposed approach is helpful to effectively speed up the NC programming process.

In this paper, we propose a novel CAD model errors detection approach of aircraft structural part for NC programming. First, the base faces are identified according to the reference directions. Based on the base faces, the AAG of the 3D CAD model is partitioned into two kinds of sub-graphs: one includes the base faces and their AFs or EAFs, and the other is the graph of the remaining faces. Then, the CAD model errors are detected based on the heuristic rules. Finally, the experiments with a prototype system indicate our approach can effectively detect the CAD model errors of aircraft structural part.

In the near future, several issues are worth to be further explored to improve the practicability of our approach: (1) extend the application domain by accumulating more kinds of CAD model errors from more cases and (2) repair the CAD model errors automatically to decrease the user interactions for feature-based NC programming system.

The authors declare no conflict of interest associated with this manuscript.

@&#REFERENCES@&#

