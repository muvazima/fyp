@&#MAIN-TITLE@&#VAAPA: A web platform for visualization and analysis of alternative polyadenylation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A web platform for visualization and analysis of alternative polyadenylation (VAAPA) was developed.


                        
                        
                           
                           It was designed in a multi-tier architecture and developed based on Smart Google Web Toolkit using Java language.


                        
                        
                           
                           It can visualize the distribution of poly(A) sites and poly(A) clusters of a gene or a section of a chromosome.


                        
                        
                           
                           It can highlight genes with switched APA sites among different conditions and display the respective sequence and poly(A) signals.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Web platform

Alternative polyadenylation

Poly(A) tag

Poly(A) site

Poly(A) cluster

@&#ABSTRACT@&#


               
               
                  Polyadenylation [poly(A)] is an essential process during the maturation of most mRNAs in eukaryotes. Alternative polyadenylation (APA) as an important layer of gene expression regulation has been increasingly recognized in various species. Here, a web platform for visualization and analysis of alternative polyadenylation (VAAPA) was developed. This platform can visualize the distribution of poly(A) sites and poly(A) clusters of a gene or a section of a chromosome. It can also highlight genes with switched APA sites among different conditions. VAAPA is an easy-to-use web-based tool that provides functions of poly(A) site query, data uploading, downloading, and APA sites visualization. It was designed in a multi-tier architecture and developed based on Smart GWT (Google Web Toolkit) using Java as the development language. VAAPA will be a valuable addition to the community for the comprehensive study of APA, not only by making the high quality poly(A) site data more accessible, but also by providing users with numerous valuable functions for poly(A) site analysis and visualization.
               
            

@&#INTRODUCTION@&#

Polyadenylation is one of the critical post-transcriptional processes in eukaryotic cells. It involves cleavage at the 3′ end and addition of a tract of adenosines [poly(A) tail] [1]. Polyadenylation is essential for many aspects of mRNA metabolism in the cell, including stability of mRNA, export of mRNA from the nucleus, and regulation of mRNA translation [2]. It is also interconnected to other mRNA biogenesis and functions, such as transcription initiation, termination, and pre-mRNA splicing. Because of the microheterogeneity [3], the cleavage at the 3′ end may be imprecise, resulting in mRNAs with variable ends. A poly(A) tag is a short RNA tag sequenced from the 3′ end and poly(A) site junction of the fully processed mRNA. We refer to the poly(A) site as a location where one or more poly(A) tags are mapped. Poly(A) sites in the same gene that fall within 24 nucleotides (nts) of each other are defined as a poly(A) cluster. The number of poly(A) tags assigned to each poly(A) cluster reflects its expression level or frequency of utilization. The location of a poly(A)cluster is the position of the poly(A) site supported by the most number of poly(A) tags [4].

If a gene has more than one poly(A) cluster, the nature of the expressed mRNA may be altered via the choice of alternative poly(A) sites. This process is called alternative polyadenylation (APA). APA as an important layer of gene expression regulation has been increasingly recognized in different species. More than 70% of genes in mammals and about 50% of genes in flies, worms, and zebrafish have been shown to display APA [5]. APA is also widespread in plants and algae. Nearly 30% of genes in algae, up to 70% of genes in Arabidopsis, and more than 50% of genes in rice undergo APA [4,6]. A poly(A) site can be located in different genomic regions, such as 3′ UTR (untranslated region), 5′ UTR, intron, and coding sequences (CDS) [4]. Choice of different poly(A) sites can produce mRNAs with variable 3′ ends or encode different protein isoforms, which contributes to the complexity of the transcriptome [5]. Moreover, APA site could be utilized in a tissue/stage-specific manner [7]. The gene that possesses at least two poly(A) sites and shows significant difference in the use of poly(A) sites between different conditions is called APA site switching gene [8]. APA site switching could lead to the gain or loss of miRNA binding sites in the 3′ UTRs, which may affect the stability of mRNA and translation.

Currently, several web-based browsers such as GBrowse [9], UCSC Genome Browser [10], and CBrowse [11] can be utilized for the visualization of genome and the respective sequence features. In addition, some poly(A) site databases are available, such as polyA_DB [12], polyA_DB2 [13], PACdb [14], and the polyadenylation atlas database (http://bioinfolab.muohio.edu/polya/) which is currently under development. However, these browsers are not specific for the study of polyadenylation and cannot be used to visualize poly(A) sites of genes. Poly(A) site databases can provide only the plain poly(A) data rather than the function of visualizing and analyzing poly(A) site distributions on the whole genome level. It is still challenging to visualize and analyze poly(A) sites and APA site switching between different conditions in a genome-wide fashion. With the development of next generation sequencing, biologists are able to obtain unprecedented amount of poly(A) site data from different conditions. It is in urgent need to develop a user friendly tool to visualize the massive poly(A) site data to assist biologists for further APA analysis. To meet this demand, VAAPA was developed. VAAPA is intended to leverage existing poly(A) site data sets, genomic sequences, and annotations by providing users with easy-to-use web-based tool for analyzing and visualizing poly(A) sites and APA site switching under different conditions. VAAPA is available as a web server at http://bmi.xmu.edu.cn:8001/VAAPA.

Users can upload their data of the targeted species to the platform for visualization and analysis of APA. Currently, the poly(A) site dataset of Arabidopsis was tested in VAAPA, which was obtained from a previous study [4]. A background database was constructed to store the data for the server. There are three kinds of tables to in the database: genomic annotation table which stores the annotation of the genome; relation table which is used to connect other tables; poly(A) site tables which store the information of poly(A) sites in different samples/conditions. VAAPA provides numerous functions to query, analyze, and visualize poly(A) sites from the database according to the user input.

VAAPA was developed based on the Smart GWT (Google Web Toolkit) with Java language. It integrates MySQL, Spring, Hibernate, and MVP (Model-View-Presenter) design pattern. This platform implements a multi-tier architecture (
                        Fig. 1). The infrastructure layer designs the adapter components, providing an interface for data access. The log service module was created through Spring AOP (Aspect Oriented Programming), which is separate from other functional modules. The persistence layer implemented based on Hibernate and Gilead shields the differences between various databases for upper level applications. The business logic layer encapsulates several business components, in which modules of comprehensive poly(A) analysis, data uploading and downloading, and other services are integrated. The interface layer interacts with the client and the server based on GWT RPC (Remote Procedure Calls). The presentation layer is mainly designed with Smart GWT, which shows results in different web browsers and provides a user interface for data query and task operation.

VAAPA can generate visual query results with detailed poly(A)site information according to the user input. It can also display a gene model, the distribution of poly(A) sites and clusters, and the respective sequence and poly(A) signals.

Poly(A) sites located within 24nt of each other are dynamically clustered as a poly(A) cluster using a background program. The expression level of this poly(A) cluster is the sum of the number of poly(A) tags that are clustered [4]:
                           
                              (1)
                              
                                 P
                                 A
                                 T
                                 N
                                 U
                                 
                                    
                                       M
                                    
                                    
                                       P
                                       A
                                       C
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    k
                                 
                                 
                                    P
                                    A
                                    T
                                    N
                                    U
                                    
                                       
                                          M
                                       
                                       
                                          P
                                          
                                             
                                                A
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 k
                              
                           
                        where
                           P
                           A
                           C
                         denotes the poly(A) cluster, 
                           P
                           A
                           T
                           N
                           U
                           
                              
                                 M
                              
                              
                                 P
                                 A
                                 C
                              
                           
                         represents the number of poly(A) tags of the poly(A) cluster, 
                           P
                           
                              
                                 A
                              
                              
                                 i
                              
                           
                         means the i-th poly(A) site, 
                           P
                           A
                           T
                           N
                           U
                           
                              
                                 M
                              
                              
                                 P
                                 
                                    
                                       A
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         is the number of poly(A) tags of the i-th poly(A) site, 
                           k
                         denotes the number of poly(A) sites that are clustered.

The coordinate of this poly(A) cluster is the coordinate of the poly(A) site with the most number of poly(A) tags among all clustered poly(A) sites [4]:
                           
                              (2)
                              
                                 C
                                 o
                                 o
                                 r
                                 
                                    
                                       d
                                    
                                    
                                       P
                                       A
                                       C
                                    
                                 
                                 =
                                 C
                                 o
                                 o
                                 r
                                 
                                    
                                       d
                                    
                                    
                                       P
                                       
                                          
                                             A
                                          
                                          
                                             I
                                          
                                       
                                    
                                 
                              
                           
                        
                     

and
                           
                              (3)
                              
                                 P
                                 A
                                 T
                                 N
                                 U
                                 
                                    
                                       M
                                    
                                    
                                       P
                                       
                                          
                                             A
                                          
                                          
                                             I
                                          
                                       
                                    
                                 
                                 =
                                 
                                 max
                                 (
                                 P
                                 A
                                 T
                                 N
                                 U
                                 
                                    
                                       M
                                    
                                    
                                       P
                                       
                                          
                                             A
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 )
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 k
                              
                           
                        where 
                           C
                           o
                           o
                           r
                           
                              
                                 d
                              
                              
                                 P
                                 A
                                 C
                              
                           
                         means the coordinate of the poly(A) cluster, 
                           C
                           o
                           o
                           r
                           
                              
                                 d
                              
                              
                                 P
                                 
                                    
                                       A
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         means the coordinate of the ith poly(A) site.

VAAPA provides functions to analyze and compare the difference of poly(A) sites among different conditions. The user can recognize switching genes with significant difference in the choice of poly(A) site from genes that have at least two poly(A) sites or clusters. To make a fair comparison among different conditions, the TPM (Tag Per Million) normalization method was adopted:
                           
                              (4)
                              
                                 T
                                 =
                                 t
                                 ×
                                 1000
                                 ,
                                 000
                                 /
                                 S
                              
                           
                        where t is the number of poly(A) tags of one poly(A) cluster, S means the sum of the number of poly(A) tags in this condition.

VAAPA cannot only visualize the distribution of poly(A) sites and clusters of any given gene or a section of a chromosome in one condition, but also compare the difference of the distribution of poly(A) sites and clusters among different conditions if the user chooses more than one condition. The visualization of alternative poly(A) sites from different conditions can assist biologists for APA analysis, especially for the study of APA site switching.

@&#RESULTS@&#

There are two major viewers in VAAPA, including Arabidopsis data viewer and user data viewer. Arabidopsis data viewer adopts whole genome poly(A) site data in Arabidopsis for the analysis of polyadenylation in Arabidopsis. The user data viewer allows the user to upload their own poly(A) site data in the required format for further analysis and visualization. Browsers with IE (Internet Explorer) core, or other browsers such as FireFox and Chrome are recommended.

The interface of Arabidopsis data viewer in this platform is divided into seven panels (
                        Fig. 2):
                           
                              ①
                              “Query poly(A) sites”: users can search poly(A) sites via various options in this panel, including “Tissue”, “Gene”, “Chromosome”, “Start”, and “End”. Poly(A) sites of a gene or a section of a chromosome can be queried according to the combination of “Tissue” and “Gene” or the combination of “Tissue”, “Chromosome”, “Start”, and “End”, respectively. In “Tissue” list, users can choose one condition or more than one condition by pressing “CTRL” key. After clicking the “Search” button, qualified poly(A)sites will be displayed in “Poly(A) sites” panel and can be exported by clicking “Export …” button.

“Poly(A) sites”: the output poly(A) site information is displayed in this list. By double-clicking a record in the list, an additional window will be prompted to display the gene model viewer showing the distribution of poly(A) sites and poly(A) clusters as well as the sequence viewer displaying the respective sequence marked with poly(A) sites and signals.

“Poly(A) tag distribution”: when the user selects one record (or poly(A) site) in the “Poly(A) sites” list, the detailed information of this site such as poly(A) tag numbers in different samples will be shown in this list.

“Summary”: statistics information such as the number of poly(A) tags in each condition is summarized in this panel.

“Statistics”: statistical diagrams including pie charts and bar charts can be plotted.

“Links to Other Websites”: this panel provides links to several relevant websites, such as UCSC, Ensembl, Phytozome, and TAIR.

“Help”: by clicking the “Help” button, the platform will jump to the manual page.

VAAPA can visualize poly(A) sites and clusters of a gene or a section of a chromosome under different conditions. When the user inputs a gene and chooses one condition, it will show detailed poly(A) site records, gene model, the distribution of poly(A) sites and clusters, and the respective sequence and poly(A) signals (see Supporting material). In addition, this platform can compare poly(A) sites and clusters under diverse conditions, which can assist biologists for APA analysis. It can visualize the use of a poly(A) site under different conditions for the user to filter genes especially the switching genes with significantly different choice of alternative poly(A) sites. The result page after the user inputting a gene and choosing two conditions from Arabidopsis data viewer is shown in 
                        Fig. 3A. Detailed information of all poly(A) sites in the given gene is shown in related panels. The gene model with the poly(A) site/tag distribution can be also visualized (Fig. 3B). Users can also choose to view the respective sequence at a single-nucleotide resolution and identify canonical poly(A) signals AATAAA and its variants (Fig. 3C). In addition, users can get statistical results for the usage or distribution of poly(A) sites of different conditions and draw related diagrams using “Statistics” function (
                        Fig. 4). It can be seen from Fig. 4 that a large proportion of genes in Arabidopsis have more than four poly(A) tags, and a vast majority of poly(A) clusters are located in 3′ UTR, intergenic region, and CDS.

@&#DISCUSSION@&#

VAAPA is an easy-to-use web-based tool for the visualization and analysis of poly(A) site data, which provides various functions for poly(A) site query, analysis of poly(A) site choice, data uploading and downloading. Qualified poly(A) sites of a gene or a section of a chromosome in one condition can be tabulated and analyzed. The visualization of gene model with the distribution of poly(A) sites facilitates biologists to analyze the use of poly(A) sites in one condition. Because the choice of poly(A) sites may happen in a tissue/stage-specific manner [7], visualization of the use of poly(A) sites under different conditions will contribute to a more comprehensive study of APA. VAAPA provides users with the capability to visualize poly(A) sites under multiple conditions, which benefits the analysis of APA and APA site switching for the study of APA associated mechanisms in gene expression regulation.

To date, there are numerous web-based tools for the visualization of biological data. For example, GBrowse [9] and UCSC Genome Browser [10] are widely used for the visualization of genome and genomic sequence features. CBrowse [11] was built for the visualization and analysis of transcriptome assemblies and contigs. However, these browsers typically provide little or no integration with polyadenylation data. There are also several poly(A) site databases available. PolyA_DB contains poly(A) sites of human and mouse identified by cDNA/EST sequences [12]. PolyA_DB2 provides poly(A) sites in zebrafish, chicken, rat, mouse, and human, as well as sequence alignments between orthologous sites [13]. PACdb contains poly(A) sites identified by ESTs from 14 organisms [14]. The polyadenylation atlas database is currently under development, which contains a large number of poly(A) sites in Arabidopsis based on RNA-Seq and other transcriptomics data from dbEST and NCBI SRA. Although poly(A) sites from diverse species can be retrieved from these databases, limited or no function is provided for the visualization of poly(A) sites or APA site switching. To our knowledge, there is no web platform available for polyadenylation visualization and analysis so far. Our web platform was developed for this purpose, which is specific for the visualization and analysis of poly(A) site data for the study of APA. VAAPA not only stores the poly(A) site data but also provides a framework to intuitively present poly(A) sites of any species to meet user needs. This platform can visualize the distribution of poly(A) sites and poly(A) clusters of a gene or a section of a chromosome under multiple conditions for comprehensive analysis of polyadenylation. VAAPA also provides additional functions, such as data uploading, data downloading, and displaying statistical tables and figures. Moreover, VAAPA is of good flexibility in that its function can be strengthened and expanded for other species beyond Arabidopsis.

@&#CONCLUSIONS@&#

VAAPA was specifically designed for the analysis and visualization of poly(A) site data. It was developed based on Smart GWT using Java language. VAAPA provides various functions for comprehensive polyadenylation analysis, including data query, uploading, downloading, visualization of poly(A) site choice, and display of sequence and poly(A) signals. VAAPA will be a valuable addition to the community, not only by making the high quality poly(A) site data more accessible, but also by providing users with numerous valuable modules to enhance the functionality and usability.

None declared.

@&#ACKNOWLEDGMENT@&#

Funding supports were in part from US National Science Foundation (IOS-1353354 to QQL), the Hundred Talent Plans of Fujian Province and Xiamen City (to QQL).This project was also funded by the National Natural Science Foundation of China (nos. 61201358 and 61174161), the Natural Science Foundation of Fujian Province of China (no. 2012J01154), and the specialized Research Fund for the Doctoral Program of Higher Education of China (nos. 20120121120038 and 20130121130004), and the Fundamental Research Funds for the Central Universities in China (Xiamen University: nos. 2013121025, 201412G009, and CBX2014007).

Supplementary data associated with this article can be found in the online version at doi:10.1016/j.compbiomed.2014.11.010.


                     
                        
                           
                              Supplementary data
                           
                           
                        
                     
                  

@&#REFERENCES@&#

