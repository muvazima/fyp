@&#MAIN-TITLE@&#Vehicle routing to minimize time-dependent emissions in urban areas

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We investigate the impact of varying travel speeds and loads on emissions.


                        
                        
                           
                           We propose a way of keeping the load and time-dependent VRP tractable.


                        
                        
                           
                           We analyze how the structure of routes changes following varying speeds and loads.


                        
                        
                           
                           Comparison with traditional objectives shows the trade-off between emissions and costs.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Emissions

Vehicle routing

Green logistics

Load dependency

@&#ABSTRACT@&#


               
               
                  This paper focuses on the problem of minimizing CO2 emissions in the routing of vehicles in urban areas. While many authors have realized the importance of speed in minimizing emissions, most of the existing literature assumes that vehicles can travel at the emissions-minimizing speed on each arc in the road network. In urban areas, vehicles must travel at the speed of traffic, which is variable and time-dependent. The best routes also depend on the vehicle load. To solve the problem, we take advantage of previous work that transforms the stochastic shortest path subproblems into deterministic problems. While in general, these paths must be computed for each combination of start time and load, we introduce a result that identifies when the emissions-minimizing path between customers is the same for all loads. When this occurs, we can precompute the paths and store them in a lookup table which saves on runtime. To solve the routing problem, we adapt an existing tabu search algorithm. We test our approach on instances from a real road network dataset and 230 million speed observations. Experiments with different numbers of vehicles, vehicle weights, and pickup quantities demonstrate the value of our approach. We show that large savings in emissions can occur particularly in the suburbs, with heavier vehicles, and with heterogeneous pickup quantities as compared with routes created with more traditional objectives. We show that the savings in emissions are proportionally larger than the associated increases in duration, indicating improved emissions are achievable at a fairly low cost.
               
            

@&#INTRODUCTION@&#

The reduction of emissions from heavy-duty trucks has become an important part of worldwide efforts to reduce CO2 emissions. As a result, as a way to reduce fuel usage and thus emissions, many delivery companies have reported on their efforts to lower the total number of miles traveled by their vehicles (Express, 2012; UPS, 2014). However, emissions are nonlinear in speed, yielding higher emissions at both low and high speeds (Demir, Bektas, & Laporte, 2011). Thus, focusing on distance alone does not necessarily minimize emissions. While many authors have realized the importance of speed in minimizing emissions, most of the existing literature assumes that vehicles can travel at the emissions-minimizing speed on each arc in the road network. Yet, in urban areas, vehicles must travel at the speed of traffic, which is both variable and time-dependent. Furthermore, because emissions are also a function of the load being carried by the truck, the order that customers are visited should also be considered.

This paper focuses on the problem of minimizing expected CO2 emissions in the routing of a fleet of capacitated vehicles in an urban area. We assume that each vehicle will visit multiple customers over the course of a day, and the driver will not wait at any customer location. Each customer requires a pickup of a particular weight, and as a result, the load of the vehicle changes as pickups are made. Traveling between customers, the vehicle produces emissions. The expected emissions-minimized path between any two customers can vary due to the impact of time-dependent speeds as well as the load on the vehicle. As a result, the best path between each pair of customers cannot as a rule be precomputed as in most vehicle routing problems (VRP).

To solve the problem, we adapt an existing local search procedure. The procedure is a tabu search heuristic that was originally developed for time-dependent vehicle routing problems. In our case, the procedure is adapted to include the computation of time-dependent, expected emissions-minimized paths between each pair of customers on the route. We introduce a result that allows us to precompute and store a large number of these paths. In the cases where we cannot precompute the path, we draw on previous work that demonstrates that such paths can be effectively determined by computing a time-dependent average emissions cost for each arc and solving the resulting time-dependent, deterministic minimum emissions cost path problem.

This paper makes several important contributions to the literature. It is the first paper to consider the impact of traveling at the speed of traffic and the load on the vehicles in the minimization of emissions. We propose a clever technique to reduce the computational burden and investigate the question of when it is really important to incorporate the load of the vehicle into the optimization. We use instances derived from a real road network dataset and 230 million speed observations. We show that large savings in emissions can occur particularly in the suburbs, with heavier vehicles, and with heterogeneous pickup quantities as compared with routes created with more traditional objectives. We also show that the savings in emissions are proportionately larger than the associated increases in duration, indicating improved emissions may be achievable at a fairly low cost.

The remainder of this paper is outlined as follows. In the next section, we review the existing literature. In Section 3, we present a model of the problem. Section 4 presents our solution approach, and Section 5 introduces our experimental design. We present computational results in Section 6 and provide conclusions in Section 7.

@&#LITERATURE REVIEW@&#

In the following, we provide an overview of the related literature. We begin by discussing existing models for determining vehicle emissions. We then present literature on vehicle routing with emissions minimization objectives. Unlike in traditional vehicle routing applications, we must also compute the shortest paths between customers on the route. Consequently, we also offer a brief review of the literature on determining emissions-minimized paths.


                        Demir et al. (2011) and Demir, Bektaş, and Laporte (2014) provide an overview of existing models of emissions as well as applications. A key feature of all of the models of emissions is that they are nonlinear in speed. These nonlinearities can be particularly impactful in urban areas, where vehicles must travel at the speed of traffic and are often slowed by congestion (van Woensel, Creten, & Vandaele, 2001).

We focus on the Comprehensive Emissions Model (CEM) introduced in Barth and Boriboonsomsin (2008). The CEM determines fuel consumption and thus emissions on a given arc as a function of speed, vehicle weight, and numerous vehicle and arc-specific constants. The advantage of the CEM versus other emissions models in the literature is that it accounts for the impact of a vehicle’s load on emissions. In our implementation, we focus on the time-dependent version of the CEM first presented in Franceschetti, Honhon, Van Woensel, Bektaş, and Laporte (2013). We also use the parameters presented in Franceschetti et al. (2013).

In recent years, there have been a number of papers that explore the minimization of emissions in the routing of vehicles across multiple customers. Reviews of the literature considering emissions and vehicle routing can be found in Demir et al. (2014) and Lin, Choy, Ho, Chung, and Lam (2014). Most of the existing literature assumes that the vehicle can travel at the emissions-minimizing speed on each arc in the road network. We will first present the related literature that is not time-dependent, and then we will discuss the literature that includes time dependency.

Similar to this paper, Bektas and Laporte (2011) use the CEM in addressing the VRP with an emissions-minimizing objective. In contrast to the work in this paper, Bektas and Laporte (2011) determine the speed for a given load that minimizes CO2 emissions and assume the vehicle will travel at that speed. They only consider speeds of 40 kilometers/hour or higher, and the authors note that environments where speeds are less than 40 kilometers/hour will require a different approach. Their results show that the minimization of fuel and driver costs do not necessarily minimize emissions. Extending the approach of Bektas and Laporte (2011), Demir, Bektas, and Laporte (2012) solve larger instances using an Adaptive Large Neighborhood Search. They relax the restriction on speeds below 40 kilometers/hour. For each route, they minimize the costs of fuel consumption and driver wages by controlling the route length and the optimal speed on each arc.

Using an alternative emissions model that does not consider load, Figliozzi (2010) investigates the impact of congestion on emissions in a network with time-dependent travel times and speeds. Travel speeds are controlled by waiting at customer locations. The results demonstrate that congestion adversely affects emissions and travel times in vehicle routing. Xiao and Konak (2015) extend Figliozzi (2010) to include time constraints on customer deliveries. Jabali, Van Woensel, and de Kok (2012) minimize travel time, fuel, and CO2 emissions costs (also using an emissions model that does not consider load) when travel times are time-dependent. Jabali et al. (2012) assume that speeds are fixed due to congestion during a rush hour period. Outside of the congested period, speeds are set to emissions-minimizing levels. Their time-dependent routing problem is solved by a tabu search procedure. Franceschetti et al. (2013) consider time-dependent speeds while minimizing fuel and driver costs. Like Jabali et al. (2012), they consider just two time periods: a low-speed congested period with relatively high emissions and a higher-speed uncongested period with relatively lower emissions. They also use the CEM which is capable of accounting for the impact of load on emissions. Franceschetti et al. (2013) allow waiting at the depot and post-service waiting to help the vehicles avoid driving during the congested period. We consider more than two periods, do not allow vehicles to wait, account for the variability in the travel times, and always assume that vehicles must travel at the speed of traffic, as is common in urban areas.

Also related are the recent papers by Wen, Çatay, and Eglese (2014) and Qian and Eglese (2014). In Wen et al. (2014), the authors solve a VRP where the total cost consists of fuel costs, driver costs, and a congestion charge. Fuel charges are influenced by time-dependent speeds, and congestion charges are applied whenever a vehicle enters a congestion charge zone during the day. Here, fuel charges do not estimate the impact of load, and congestion charges are imposed once per day for a vehicle. By modeling the costs in this way, few vehicles enter the congestion zone and incur the daily charge. In Qian and Eglese (2014), the authors create a single route that minimizes emissions. They use an emissions model that does not account for load. They choose the order that customers will be visited, as well as the vehicle speed and the amount of waiting time at the customers. Vehicles may travel below the speed limit, and the speed limit varies with time. The authors offer two methods to solve the problems, one of which is based on dynamic programming. They compare their solutions with the fastest routes serving the same customers and show emissions can be optimized with 9–10 percent more trip time. Unlike Qian and Eglese (2014), we consider multiple vehicles and account for the impact of load, as well as account for the variability in travel times and do not allow vehicles to wait.

Another related problem is the energy minimization vehicle routing problem (EMVRP). In the EMVRP, the cost of traveling an arc is the product of the vehicle load on that arc and the length of the arc. The cost function is motivated by the fact that both fuel usage and emissions are correlated with vehicle weight and distance traveled. The emissions function used in this paper captures both of these elements as well as the speed and variation in speeds on arcs. The EMVRP is introduced in Kara, Kara, and Yetis (2007), Kramer and Subramanian (2015) and Zachariadis, Tarantilis, and Kiranoudis (2015) present metaheuristic approaches, and Fukasawa, He, and Song (2015) introduce a branch-cut-and-price approach.

The existing literature on vehicle routing with emissions objectives that uses time-dependent speeds treats these speeds as deterministic. In this paper, we assume that the vehicle must move at the speed of traffic, which can vary. Furthermore, because the loaded weight of the vehicle changes as the vehicle moves along the route, the paths between customers must also account for the impact of vehicle weight in minimizing emissions. We are aware of no work that addresses both of these issues in the computation of expected emissions-minimized paths between customers.

The only work of which we are aware that determines expected emissions-minimized paths in urban areas is the work by Hwang and Ouyang (2015) and Ehmke, Campbell, and Thomas (2015). Ignoring load, Hwang and Ouyang (2015) seek to find expected emissions-minimized shortest paths between origin and destination pairs. The authors do not include time-dependent speeds, but do include a time limit on the length of the path. Hwang and Ouyang (2015) propose two methods. To control label proliferation, one method discretizes the arrival time distributions in a forward dynamic programming approach. Because of the computation time, the authors also introduce a second approach that transforms the cost of each arc to an expected emissions value and thus reduces the problem to its deterministic equivalent. The heuristics are tested on a relatively small road network with randomly generated travel speed distributions.

In Ehmke et al. (2015), the authors incorporate real-world speed data with shortest path approaches to determine a priori expected emission-minimized paths. As in this paper, Ehmke et al. (2015) draw their data from the road network for Stuttgart, Germany, and 230 million speed observations from the years 2003–2005. A detailed discussion of the dataset can be found in Lorkowski et al. (2004).

To make use of this data for constructing time-dependent expected emissions-minimized paths, Ehmke et al. (2015) present two methods for determining such paths. The first method is an adaptation of the A
                        ⋆ algorithm that samples the data to evaluate the emissions cost of traversing an arc. The A
                        ⋆ algorithm is itself a variant of Dijkstra’s algorithm that uses a heuristic estimate of future costs to determine node expansion. Because of the computation time required for the sampling-based method, Ehmke et al. (2015) introduce a second solution approach, referred to as the “arc-averaging” approach, that reduces the problem to a time-dependent, deterministic shortest path problem. Because most emission functions are convex in the speed term and as a result of Jensen’s Inequality, using an average speed value for an arc does not translate to an appropriate estimate of the average emissions. Thus, it is important to capture the variability in the computation of the emissions. Ehmke et al. (2015) show that using sampled speeds from a particular time bucket for a particular arc to generate emissions and then averaging these emissions values is an effective way to predict the emissions associated with using an arc at a specific time of day. The downside of the deterministic method is that it does not allow for estimation of the arrival time distribution at each node in the path. Yet, computational results in Ehmke et al. (2015) show the impact to be minimal, in part because the paths are relatively short in an urban setting. Thus, in this paper in which we will need to solve many emissions-minimized paths, we focus on the time-dependent, but deterministic method. We refer the reader to Ehmke et al. (2015) for a discussion of algorithms for time-dependent, stochastic shortest path algorithms.

Related work includes Wen et al. (2014) and Yildirim and Catay (2014). In Wen et al. (2014), given a starting time, the authors try to identify the least cost paths between nodes in a time-dependent network. As in Wen and Eglese (2015), costs include fuel costs, driver costs, and congestion charges, imposed once per day. Again, no variability in travel speeds is considered. The authors develop heuristics to identify paths that either may enter the congestion charge zone or try to avoid the congestion charge zone. If the one that enters the congestion zone is of lower cost, it is the only path recorded. These heuristics are used to identify the paths between customers in Wen and Eglese (2015). Yildirim and Catay (2014) extend the shortest path algorithm of Wen et al. (2014) to make use of upper bounds on the path cost. The resulting algorithm offers comparable solution quality to Wen et al. (2014) but with less computation time.

In this section, we present our formal model of the problem being solved in this paper and the emissions cost model we will use to evaluate the expected emissions cost of a particular path. We consider a set 
                        C
                      of C customers such that each customer 
                        
                           c
                           =
                           1
                           ,
                           …
                           ,
                           C
                        
                      is associated with a load of weight wc
                     . The customers are situated on a graph 
                        
                           G
                           =
                           (
                           N
                           ,
                           A
                           )
                           ,
                        
                      where 
                        N
                      is a set of nodes, representing intersections and customers, with 
                        
                           C
                           ⊂
                           N
                           ,
                        
                      and 
                        A
                      a set of directed arcs connecting the nodes in 
                        N
                     . We seek to serve the customers with a fleet of capacitated vehicles 
                        M
                      consisting of M vehicles.

To travel between two customers i and j in 
                        
                           C
                           ,
                        
                      the vehicle travels a series of arcs, called a path. Traversing an arc a incurs a time- and load-dependent expected emissions cost Fa
                     (t, l), where t is the time at which the vehicle begins traveling on arc a and l is the load of the vehicle when traversing a. In this sense, our paper contrasts with most of the routing literature in which the cost and required time to travel between two customers is given by a parameter. We represent the cost of a path 
                        
                           
                              p
                              
                                 i
                                 j
                              
                           
                           =
                           
                              (
                              
                                 a
                                 1
                                 p
                              
                              ,
                              …
                              ,
                              
                                 a
                                 n
                                 p
                              
                              )
                           
                        
                      starting at time τ between customers i and j as 
                        
                           
                              ϕ
                              p
                           
                           
                              (
                              τ
                              ,
                              l
                              )
                           
                           =
                           
                              ∑
                              
                                 k
                                 =
                                 1
                              
                              n
                           
                           
                              F
                              
                                 a
                                 k
                              
                           
                           
                              (
                              t
                              
                                 (
                                 p
                                 ,
                                 τ
                                 )
                              
                              ,
                              l
                              )
                           
                           ,
                        
                      where t(p, τ) makes explicit that the time-dependent cost of kth arc ak
                      depends on the path p having been begun at time τ. In this paper, we assume that there is no waiting at either customer or intersection nodes.

A route r is a sequence of customers in 
                        C
                     . We assume that ri
                      is the ith customer on route r. The expected cost of route r depends on the start time of the route and the paths chosen for travel from customer to customer on the route. We assume that the loads at each customer are being picked up, and thus, the load on the vehicle increases over the route. Then, the expected cost of a route r starting at time T is

                        
                           (1)
                           
                              
                                 
                                    Φ
                                    r
                                 
                                 
                                    (
                                    T
                                    )
                                 
                                 =
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       C
                                       −
                                       1
                                    
                                 
                                 
                                    ϕ
                                    
                                       
                                          r
                                          k
                                       
                                       ,
                                       
                                          r
                                          
                                             k
                                             +
                                             1
                                          
                                       
                                    
                                 
                                 
                                    (
                                    τ
                                    
                                       (
                                       r
                                       ,
                                       T
                                       )
                                    
                                    ,
                                    l
                                    
                                       (
                                       r
                                       )
                                    
                                    )
                                 
                                 ,
                              
                           
                        
                     where τ(r, T) makes explicit the dependence of the cost of the path from rk
                      to 
                        
                           r
                           
                              k
                              +
                              1
                           
                        
                      on the start time of route r and l(r) the load on the vehicle after serving customer rk
                      on r. The expected cost of a set of routes R is the sum of the expected costs of the routes r in R. We assume that there are M routes in R, one for each vehicle in the fleet 
                        M
                     .

For a given start time T, the objective is to find a set of routes R
                     ⋆ such that 
                        
                           
                              ∑
                              
                                 r
                                 ∈
                                 
                                    R
                                    ☆
                                 
                              
                           
                           
                              Φ
                              r
                           
                           
                              (
                              T
                              )
                           
                           ≤
                           
                              ∑
                              
                                 
                                    r
                                    ′
                                 
                                 ∈
                                 R
                              
                           
                           
                              Φ
                              
                                 r
                                 ′
                              
                           
                           
                              (
                              T
                              )
                           
                        
                      for any other set of routes R.

Next, we discuss how we compute the expected emissions cost Fa
                     (t, l) of traversing arc a starting at time t with load l. Following Bektas and Laporte (2011) and Franceschetti et al. (2013), we use the CEM to model emissions. We use the same equations and parameters as in Franceschetti et al. (2013) modified to account for time-dependent speeds. The CEM takes as input the vehicle load l (in kilograms), distance da
                      (in meters) associated with arc a, the speed on arc a (in meters/second) at time t, which for our purposes is a random variable, denoted v
                     
                        a, t
                     . The resulting time- and load-dependent expected emissions are

                        
                           (2)
                           
                              
                                 
                                    F
                                    a
                                 
                                 
                                    (
                                    t
                                    ,
                                    l
                                    )
                                 
                                 =
                                 E
                                 
                                    [
                                    λ
                                    
                                       (
                                       k
                                       
                                          N
                                          e
                                       
                                       V
                                       
                                          
                                             d
                                             a
                                          
                                          
                                             v
                                             
                                                a
                                                ,
                                                t
                                             
                                          
                                       
                                       +
                                       γ
                                       β
                                       
                                          d
                                          a
                                       
                                       
                                          v
                                          
                                             a
                                             ,
                                             t
                                          
                                          2
                                       
                                       +
                                       γ
                                       α
                                       
                                          (
                                          μ
                                          +
                                          l
                                          )
                                       
                                       
                                          d
                                          a
                                       
                                       )
                                    
                                    ]
                                 
                                 ,
                              
                           
                        
                     where Ne, V, μ, λ, k, γ, β, and α are parameters related to the vehicle and its engine. Following Franceschetti et al. (2013), we set the engine speed 
                        
                           
                              N
                              e
                           
                           =
                           33
                           ,
                        
                      the engine displacement 
                        
                           V
                           =
                           5
                           ,
                        
                      the engine friction factor 
                        
                           k
                           =
                           0.2
                           ,
                        
                      and the curb-weight 
                        
                           μ
                           =
                           6350
                        
                      for a standard vehicle and 
                        
                           μ
                           =
                           12700
                        
                      for a heavy vehicle, respectively. Note that α, β, γ and λ represent the product of multiple factors presented in Franceschetti et al. (2013). The corresponding values are 
                        
                           α
                           =
                           0.0981
                           ,
                        
                     
                     
                        
                           β
                           =
                           1.6487
                           ,
                        
                     
                     
                        
                           γ
                           =
                           0.0028
                           ,
                        
                      and 
                        
                           λ
                           =
                           1
                           /
                           32428
                        
                     . For a given truck, the parameter values are assumed to be identical for each arc. As in Bektas and Laporte (2011) and Franceschetti et al. (2013), we assume that the gradient of the road is zero.

In this section, we discuss our approach to finding expected emissions-minimized routes. The determination of routes requires that we know the time- and load-dependent emissions-minimized path between any two customers in the route for any given load. Because of our focus on both stochastic, time-dependent travel times and emissions, our approach to finding these paths is tied to how we model the travel times and emissions as well as their variations over the course of the day. As such, we first discuss how we transform a database of speed data into time-dependent, expected emissions and travel time values. We then discuss our computation of expected load and time-dependent emissions-minimizing paths between customers as well as the precomputation of such paths. Finally, we discuss the tabu search heuristic that we use to search the space of expected emissions-minimizing routes.

As discussed in Section 2.3, Ehmke et al. (2015) show that high quality time-dependent expected emissions-minimized paths can be efficiently determined by taking advantage of a transformation of the data that results in a time-dependent, deterministic shortest path problem. To take advantage of the result, we first need expected time-dependent travel times and expected time-dependent emissions for each arc in the network. In this paper, we derive these values using real speed data from the metropolitan area of Stuttgart, a major city in southern Germany. The metropolitan area of Stuttgart is well-known for its congestion, especially at peak times (Kröger, 2013). We use a database of approximately 230 million speed observations from the years 2003–2005. These speed observations were collected by the German Aerospace Center with FCD technology using a fleet of 700 taxis (Lorkowski et al., 2004). For details regarding filtering of outliers and incorrect measurements, see Ehmke, Meisel, and Matt-feld (2009). In addition, due to the speed limitations often imposed on freight vehicles, we set a speed limit of 100 kilometers/hour, i.e., whenever we observe a speed larger than 100 kilometers/hour, we set it to 100 kilometers/hour.

To account for time dependency, we follow standard practice in time-dependent routing and divide the day into one-hour time buckets (06:00–07:00, 07:00–08:00, 08:00–09:00, etc.) (Ehmke, Meisel, & Mattfeld, 2012). It is then assumed that the travel time and emissions for traversing an arc starting at time t is given by the expected travel times and expected emissions of the bucket that contains t. For example, if 
                           
                              t
                              =
                              06
                              :
                              30
                              ,
                           
                         then we would use values associated with the bucket 06:00–07:00. If the neighboring bucket is entered while traversing an arc (e.g., when the start time is close to the end of a bucket), the different speed levels are linearized in the transition area as described by Fleischmann, Gietz, and Gnutzmann (2004).

Having divided the data by arc and time of day as prescribed by the one-hour time buckets, computing the expected time-dependent travel times is straightforward. For a given arc a and time bucket b, for example 06:00–07:00, the expected time-dependent travel time is given by 
                           
                              
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          K
                                          a
                                          b
                                       
                                    
                                    
                                       s
                                       
                                          a
                                          ,
                                          
                                             b
                                             k
                                          
                                       
                                    
                                 
                                 
                                    K
                                    a
                                    b
                                 
                              
                              ,
                           
                         where 
                           
                              s
                              
                                 a
                                 ,
                                 
                                    b
                                    k
                                 
                              
                           
                         is the kth speed observation in time bucket b for arc a and 
                           
                              K
                              a
                              b
                           
                         is the number of observations in bucket b for arc a. We note that these values can be precomputed for each arc and time bucket.

Precomputation of the expected time-dependent emissions is more challenging. Notably, we have the additional challenge of the load of the vehicle as it crosses an arc. However, given the load l and departure time t for a given arc a, we can rearrange Eq. (2) such that we have

                           
                              (3)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             E
                                             
                                                [
                                                λ
                                                
                                                   (
                                                   k
                                                   
                                                      N
                                                      e
                                                   
                                                   V
                                                   
                                                      
                                                         d
                                                         a
                                                      
                                                      
                                                         v
                                                         
                                                            a
                                                            ,
                                                            t
                                                         
                                                      
                                                   
                                                   +
                                                   γ
                                                   β
                                                   
                                                      d
                                                      a
                                                   
                                                   
                                                      v
                                                      
                                                         a
                                                         ,
                                                         t
                                                      
                                                      2
                                                   
                                                   +
                                                   γ
                                                   α
                                                   
                                                      (
                                                      μ
                                                      +
                                                      l
                                                      )
                                                   
                                                   
                                                      d
                                                      a
                                                   
                                                   )
                                                
                                                ]
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             =
                                             λ
                                             γ
                                             α
                                             
                                                (
                                                μ
                                                +
                                                l
                                                )
                                             
                                             
                                                d
                                                a
                                             
                                             +
                                             E
                                             
                                                [
                                                λ
                                                
                                                   (
                                                   k
                                                   
                                                      N
                                                      e
                                                   
                                                   V
                                                   
                                                      
                                                         d
                                                         a
                                                      
                                                      
                                                         v
                                                         
                                                            a
                                                            ,
                                                            t
                                                         
                                                      
                                                   
                                                   +
                                                   γ
                                                   β
                                                   
                                                      d
                                                      a
                                                   
                                                   
                                                      v
                                                      
                                                         a
                                                         ,
                                                         t
                                                      
                                                      2
                                                   
                                                   )
                                                
                                                ]
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        Now, the expectation in Eq. (3) no longer depends on the vehicle’s load, but only the arc and time at which the vehicle enters the arc.

For convenience, we denote the terms 
                           
                              λ
                              (
                              k
                              
                                 N
                                 e
                              
                              V
                              
                                 
                                    d
                                    a
                                 
                                 
                                    v
                                    
                                       a
                                       ,
                                       t
                                    
                                 
                              
                              +
                              γ
                              β
                              
                                 d
                                 a
                              
                              
                                 v
                                 
                                    a
                                    ,
                                    t
                                 
                                 2
                              
                              )
                           
                         in Eq. (3) as g(v
                        
                           a, t
                        ). Because it does not depend on the vehicle load, we can precompute the expectation in Eq. (3). Then, we estimate E[g(v
                        
                           a, t
                        )] as 
                           
                              
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       K
                                       a
                                       b
                                    
                                 
                                 g
                                 
                                    (
                                    
                                       s
                                       
                                          a
                                          ,
                                          
                                             b
                                             k
                                          
                                       
                                    
                                    )
                                 
                              
                              
                                 K
                                 a
                                 b
                              
                           
                        .

The just computed expected time-dependent travel times and emissions are the foundation of the “arc-averaging” shortest path method introduced in Ehmke et al. (2015) and summarized in Section 2.3. Essentially, with the expected time-dependent travel times and emissions, the problem is deterministic. In our approach, we use a Dijkstra-like label-setting algorithm that efficiently finds shortest paths. One downside of the approach is that the arrival time distributions at each node in the path are reduced to an expected arrival time. However, the results in Ehmke et al. (2015) show that the approach is effective given the short path lengths often found in urban areas.

Yet, even with the efficiency of our shortest path approach, the need to account for load in Eq. (2) suggests that the paths between customers must be computed at runtime. However, in Proposition 1, we present a result that identifies the condition under which a time-dependent path between two customers is load invariant. The result allows us to reduce the computational challenge of finding the time- and load-dependent paths between customers by making it possible to precompute expected time-dependent emissions minimizing paths between some customers. For convenience of exposition, in the proof, we refer to the three terms of Eq. (2) as the engine module, the speed module, and the weight module.

                           Proposition 1
                           
                              If a path p
                              1 
                              between a pair of nodes is optimal in terms of emissions for an empty truck as well as a full truck, p
                              1 
                              is optimal in terms of emissions for all load sizes in between.
                           

We define em as the weight of an empty truck and 
                                 
                                    e
                                    m
                                    +
                                    L
                                 
                               as the weight of a full truck. Consider a proof by contradiction where we assume that it is possible that there is a path p
                              2 that is optimal for some load level between empty and full (
                                 
                                    e
                                    m
                                    +
                                    g
                                 
                               where 0 < g < L). For a particular path, if we sum Eq. (2) across all arcs in the path, we get a sum of the engine modules, a sum of the speed modules, and a sum of the weight modules. For any path, the sums of the engine and speed modules are not impacted by load, so we need only to compute that sum once for all load levels. For conciseness, we represent the sum of the engine and speed modules for a path pi
                               by bi
                              . As shown in Eq. (2), the impact of load on emissions is determined by a scalar multiplied by the load. Thus, we can also sum the scalars across the arcs of a path pi
                               and determine emissions by multiplying by the load value. Call this sum of the scalars ci
                              . Then, the optimality of p
                              1 for empty loads implies

                                 
                                    (4)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      b
                                                      1
                                                   
                                                   +
                                                   
                                                      c
                                                      1
                                                   
                                                   
                                                      (
                                                      e
                                                      m
                                                      )
                                                   
                                                   ≤
                                                   
                                                      b
                                                      2
                                                   
                                                   +
                                                   
                                                      c
                                                      2
                                                   
                                                   
                                                      (
                                                      e
                                                      m
                                                      )
                                                   
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              and the optimality of p
                              1 for a full load implies

                                 
                                    (5)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      b
                                                      1
                                                   
                                                   +
                                                   
                                                      c
                                                      1
                                                   
                                                   
                                                      (
                                                      e
                                                      m
                                                      +
                                                      L
                                                      )
                                                   
                                                   ≤
                                                   
                                                      b
                                                      2
                                                   
                                                   +
                                                   
                                                      c
                                                      2
                                                   
                                                   
                                                      (
                                                      e
                                                      m
                                                      +
                                                      L
                                                      )
                                                   
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              The optimality of p
                              2 for load 
                                 
                                    e
                                    m
                                    +
                                    g
                                 
                               implies

                                 
                                    (6)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      b
                                                      2
                                                   
                                                   +
                                                   
                                                      c
                                                      2
                                                   
                                                   
                                                      (
                                                      e
                                                      m
                                                      +
                                                      g
                                                      )
                                                   
                                                   <
                                                   
                                                      b
                                                      1
                                                   
                                                   +
                                                   
                                                      c
                                                      1
                                                   
                                                   
                                                      (
                                                      e
                                                      m
                                                      +
                                                      g
                                                      )
                                                   
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              The combination of Eqs. (4) and (6) implies that c
                              1 > c
                              2. The combination of Eqs. (5) and (6) implies that c
                              1 < c
                              2. Because both cannot be true, we have a contradiction.□

To implement Proposition 1, we compute the emissions-minimized paths for each time bucket and pair of customer nodes with an empty vehicle and with a fully loaded vehicle. We assume that the departure time of each path is the mid-point of a time bucket (06:30, 07:30, 08:30, etc.). Note that this is an approximation and paths with a departure time near the beginning or end of a time bucket might differ from those with a departure time in the middle of the time bucket. In general, any effects of this approximation can be reduced by working with narrower time buckets, though that would increase the number of paths to be computed and require more data to ensure there are adequate observations in each time bucket. We make use of Proposition 1 and check to see if the paths computed for an empty vehicle and fully loaded vehicle match. If they do, we can store the load-independent emissions costs of the path in a lookup table that will be used by the routing algorithm. If they are not a match, no values are placed in the precomputed lookup table, and we compute the cost of each arc in a path at runtime.

To solve the routing problem, we use a tabu search algorithm. We use tabu search because it is considered one of the most successful solution approaches for different variants of the VRP (Vidal, Crainic, Gendreau, & Prins, 2013). In particular, we implement the LANTIME tabu search algorithm, which was designed for time-dependent variants of the VRP. Details of the algorithm are provided by Maden, Eglese, and Black (2010).

LANTIME requires a feasible initial solution as an input. We construct this initial feasible solution using Solomon’s I1 heuristic (Solomon, 1987). In addition, as in the literature, our LANTIME implementation uses the neighborhoods Adapted Cross Exchange, Insertion/Removal, One Exchange, and Swap. A neighboring solution is considered superior if the number of vehicles is smaller (main objective for VRP optimization) or the number of vehicles is the same and the total cost of all routes is smaller (secondary objective for VRP optimization, only objective for traveling salesman problem, TSP). For cost, we will minimize the total expected emissions cost as defined by the CEM.

Because the precomputation discussed above does not allow for every pair of customer nodes at every time of day to use precomputed paths, we must sometimes compute the time- and load-dependent path within the routing algorithm. More formally, if a search routine changes the solution from s to s′, we evaluate s′ in conjunction with our shortest path algorithm broadly as shown in Algorithm 1
                        . Whenever the lookup of shortest path costs between customer nodes i and 
                           
                              i
                              +
                              1
                           
                         fails for a given time bucket b and load l, we compute the costs of the emissions-minimized path online and store it for potential retrieval. Algorithm 1 is embedded both in Solomon’s I1 heuristic to find the initial solution and LANTIME to find the improved solution. As with our precomputation, any paths that need to be determined during the execution of the routing algorithm are found using the “arc-averaging” algorithm. As computational experiments will show, the proposed combination of precomputation and shortest path computation allows for high-quality solutions in a sufficient amount of runtime.

@&#EXPERIMENTAL DESIGN@&#

As discussed in the previous section, we demonstrate and evaluate the construction of expected emissions-minimized routes based on real speed data from the metropolitan area of Stuttgart, a major city in southern Germany. For our experiments, we focus on Tuesday data, as Tuesday is considered a “typical” day by traffic engineers (Ehmke, 2012). We pair the database with a digital roadmap and derive a network that consists of 5385 nodes and 8629 arcs. In the following, we explain how we design our test sets and computational experiments.

We develop several test sets that consider spatio-temporal dimensions relevant for freight transportation in urban areas. In particular, we consider that inner city customers are closer to one another than suburban customers are to one another, and that congestion patterns on inner city roads differ from congestion patterns connecting the inner city and the suburbs and from patterns connecting the suburbs. To this end, based on their geographical location, we divide the set of 5385 nodes into an inner city and a suburban node set with 1160 and 4225 nodes, respectively. Using this node division, three categories of test sets are generated:

                           
                              •
                              
                                 Inner city sets (I) each consisting of 30 nodes that are randomly drawn from the nodes located in the inner city,


                                 Suburban sets (S) each consisting of 30 nodes that are randomly drawn from the nodes located outside the inner city, and


                                 Mixed sets (M) each consisting of half of the nodes being contained in the inner city and suburban sets.

For each category, we produce five instances, resulting in instances denoted by I1...I5, S1...S5, and M1...M5. For an example visualization of instances I1 and S1 with 30 inner city and 30 suburban nodes, respectively, see Fig. 1
                        . We also investigate smaller variants of these sets with 10 nodes, where the nodes are the first 10 from the 30-nodes instances, respectively. The depot is the same for all instances; it is located in the suburbs in the North Western part of the city, but close to the inner city area.

To investigate the impact of minimizing emissions on route structures, we analyze the following parameters. For the optimization of a single route (time-dependent TSP), we consider the above node sets I, S and M with 10 and 30 customers. For each instance and number of customers, we consider four starting times: two rush hour times (06:30, 15:30) and two non-rush hour times (12:30, 19:30). For each combination of instance, number of customers, and start time, we consider both a standard vehicle (gross weight of 6350 kilograms) and a heavy vehicle (gross weight of 12700 kilograms). We assume that the capacity of the vehicle is equal to the gross weight of the vehicle, so that, when fully loaded, the vehicle weighs twice as much as when empty. Thus, each customer has a pickup with a weight of

                           
                              
                                 
                                    
                                       
                                          gross
                                          
                                          weight
                                          
                                          of
                                          
                                          vehicle
                                       
                                       
                                          total
                                          
                                          number
                                          
                                          of
                                          
                                          customers
                                       
                                    
                                    ,
                                 
                              
                           
                        implying that a vehicle is “fully loaded” on the way from the last customer to the depot. In total, we have 240 “homogeneous load” TSP instances.

We also consider instances with heterogeneous loads to test the impact of heavily varying load quantities on route structures. To this end, based on the I, S, and M instances with 10 customers, we generate four load distributions for each of the gross truck weights (standard and heavy). For three of the load distributions, we assign the loads for three selected customers such that their load totals 90 percent of the vehicle’s capacity, and the remaining 10 percent is evenly divided among the other seven customers. The three customers with heavy load quantities are chosen as follows:

                           
                              
                                 Random three heavy: random selection of three customers with heavy load quantities,


                                 Farthest three heavy: identification of the three customers farthest from the depot in terms of distance,


                                 Closest three heavy: identification of the three customers closest to the depot in terms of distance.

We assign higher weights to only three loads to help build insights on where heavy pickups can have the most impact on solutions. For the fourth load distribution, we assign loads for all customers as follows:

                           
                              
                                 Random decreasing load: all customers are given a load such that the second heaviest pickup is half the heaviest pickup, the third heaviest pickup is half the second heaviest pickup, etc., and we scale the sum of the pickup weights such that it equals the total capacity of the vehicle. These decreasing loads are randomly assigned to the customers. We use this type of instance to represent a more typical case where customers’ pickup quantities show a large diversity in sizes.

As with the homogeneous load instances, we run each of these heterogeneous load instances for two rush hour times (06:30, 15:30) and two non-rush hour times (12:30, 19:30) and for two different gross weights, i.e. the standard and heavy vehicle. The result is 480 “heterogeneous load” TSP instances.

To see how emissions impact the solutions of a multiple vehicle problem, we also generate VRP instances. The VRP instances are based on the 30-customer instances introduced above. We consider fleets of three vehicles. We consider both homogeneous fleets (three standard or three heavy vehicles) and a mixed fleet of a heavy vehicle and two standard weight vehicles. We vary the load at each customer so that three vehicles are required to process all pickups. Specifically, we set the load as follows:
                        
                           
                              
                                 Homogeneous loads: we define the mean weight as

                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         vehicle
                                                         
                                                         type
                                                      
                                                   
                                                   gross
                                                   
                                                   weight
                                                   
                                                   of
                                                   
                                                   vehicle
                                                   ×
                                                   
                                                      number
                                                      
                                                      of
                                                      
                                                      trucks
                                                      
                                                      of
                                                      
                                                      each
                                                      
                                                      vehicle
                                                      
                                                      type
                                                   
                                                
                                                
                                                   total
                                                   
                                                   number
                                                   
                                                   of
                                                   
                                                   customers
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              

Thus, when considering only standard (heavy) vehicles, the numerator will be three times the weight of a standard (heavy) vehicle. For the mixed fleet instances, the numerator will be the sum of two standard weight vehicles and one heavy vehicle. For the Homogeneous loads experiments, all customers are assigned a load equal to the mean weight.

For the mixed fleet, we also experiment with heterogeneous pickup quantities. These experiments should help us gain insight into the characteristics of pickups that are assigned to different vehicle types when there is a choice. We consider three different load assignments for the mixed fleet experiments:

                           
                              
                                 Random loads: we randomly choose 15 customers to have a load of 1.5 times the mean weight and 15 customers to have a load of 0.5 times the mean weight.


                                 Closest 15 heavy: the 15 customers closest to the depot have a load of 1.5 times the mean weight, and the 15 customers farthest from the depot have a load of 0.5 times the mean weight.


                                 Farthest 15 heavy: the 15 customers closest to the depot have a load of 0.5 times the mean weight, and the 15 customers farthest from the depot have a load of 1.5 times the mean weight.

As with the TSP instances, for each I, S, and M VRP instance, we consider two rush hour times (06:30, 15:30) and two non-rush hour times (12:30, 19:30). This creates a total of 360 VRP experiments.

An overview of all test sets is provided in Table 1. Note that each test set is investigated for four different departure times (6:30, 12:30, 15:30, 19:30) and five inner city, suburban and mixed instances. We run the same experiment five times.

@&#EXPERIMENTS@&#

For each of the TSP and VRP instances, we generate solutions for each of the following objectives using the routing algorithm from Section 4.2 adapted for each objective:

                           
                              
                                 Objective 1 minimizing distances, which is often taken as a proxy for minimizing emissions,


                                 Objective 2 minimizing time-dependent travel times, focusing on the shortest working time, which is a well-known objective in routing,


                                 Objective 3 minimizing time-dependent emissions given the gross weight of an empty truck, which does not consider variation of load in the course of a route and is hence computationally efficient, and


                                 Objective 4 minimizing time-dependent emissions given detailed information about the load at every arc in the course of a route, which is computationally challenging, but the most realistic model with respect to emissions computation. Objective 4 is the time- and load-dependent objective given in Eq. (1).

To compare the emissions found using each of the objectives, we evaluate the solutions from Objectives 1, 2 and 3 using Objective 4. This provides the emissions from a route in terms of fuel used in liters, which is equivalent to CO2 emissions. We denote the Objective 1 solutions as the distance solution and abbreviate it as DIST. We refer to the Objective 2 solutions as time-dependent travel time solution and abbreviate it as TT. We refer to the Objective 3 solutions as the load-independent solution and abbreviate it as EM-LI. The Objective 4 solutions are called the load-dependent solutions and are abbreviated as EM-LD.

In addition to the emissions, we compare the four solutions for each instance in terms of the distance traveled by the solution in kilometers, the total duration of the solution in minutes, the runtime needed to find the solution in seconds, and the percentage of online path computations that were needed to find the solution (EM-LD only). For each of the four objectives, the measures reported are for the best solution found in five runs. The runtime is the total runtime needed to complete the five runs. To help facilitate comparisons, the numbers reported for emissions, distance traveled, and total duration for TT, EM-LI, and EM-LD are the percentage change relative to the values found with DIST. A positive percentage represents an increase in the value relative to DIST, where a negative value represents a decrease.

The creation of lookup tables follows the structure outlined in Section 4.1. For Objectives 1, 2 and 3, varying load does not need to be considered. We can thus precompute and store the costs of DIST, TT and EM-LI paths for each time bucket and pair of customer nodes. As discussed previously, this is not the case in general for EM-LD paths. In addition to using Proposition 1 to reduce the computation, we further reduce the computational cost for Objective 4 by storing any EM-LD path found for a particular bucket and particular load size in each of the five runs of each instance. Thus, for example, Run 5 benefits from all of the online path computations conducted in the previous four runs. The percentage of online path computations reported is the number of online path computations required over all five runs relative to the sum of shortest path requests over the five runs.

Our experiments are performed on a Windows 7 64-bit operating system with an Intel Core i5-3470 processor and 8 gigabyte of RAM. Algorithms are coded and executed in Java 64-bit with a memory allocation of 4 gigabyte. We let the tabu search metaheuristic run for 1000 iterations per experiment.

In this section, we present our computational results. We first examine the value that Proposition 1 provides in terms of reducing online computation time. We then discuss results that demonstrate the value in explicitly modeling emissions. We start with looking at the results with a single vehicle. We present a summary of the results with homogeneous loads across different numbers of customers and then look at more detailed results for 10 customer instances. With 10 customers, we next examine results with heterogeneous load quantities. Last, we present a summary of results with multiple vehicles. Detailed results for all experiments can be found in the electronic appendix.
                     
                  

In this section, we present a comparison of the runtime when we consider our advanced precomputation to precompute time- and load-dependent paths. Table 2 provides an analysis of runtimes. The table gives the number of customers in an instance (cust), the gross weight of the vehicle (wt), and the category of instances (inst). In the next four columns, the table shows the number of online computations (# of online comp) and the CPU times for the computation of the first run of each instance in seconds when we (1) ignore our analytical result, i.e., we only precompute emissions-minimized paths for an empty vehicle (standard precomputation) and compute everything else online, versus (2) the same values considering our advanced precomputation. To avoid prohibitive runtimes, we keep the emissions-minimized costs readily available in memory for potential further lookups once we have computed them.

On average, we are able to reduce the number of online computations by 87 percent and 83 percent for standard and heavy vehicles, respectively, on the 10 customer instances, and 88 percent and 83 percent for standard and heavy vehicles, respectively, on the 30 customer instances. This reduction leads to an average decrease in runtimes of 34–72 percent for small instances and 10–64 percent for large instances. Note that the differences in runtimes are very large for suburban and mixed instances, but relatively small for inner city instances where the additional online computations can be done quite quickly because of the short distance of the paths.

Overall, as a consequence of Proposition 1, we are able to precompute an average of 85 percent of all paths for standard vehicles and 81 percent for heavy vehicles. For both standard vehicle and heavy vehicles, Fig. 2 shows the impact of time of day on our ability to precompute paths. Interestingly, the figure shows that the ability to precompute the emissions-minimized paths varies by time of day. There is more path variability in the morning (07:00–10:00) and afternoon buckets (16:00–18:00). Furthermore, sometimes the proportion of precomputed paths for the heavy vehicles can be higher than for the standard vehicles. This occurs because the impact of speed variation becomes smaller with increasing weight in the CEM, so a larger weight does not necessarily lead to a larger variation of path structures.


                        Table 3
                         presents a summary of the results from our TSP experiments with homogeneous load quantities. As with Table 2, the table gives the number of customers in an instance (cust), the gross weight of the vehicle (wt), and the category of instances (inst). We present the average results from the five customer instances per category (inner city/suburban/mixed) over the four departure times. We label the metrics associated with each objective as follows: the average total duration of the route (dur), the average total distance of the route (dist), the average total fuel consumption as equivalent for emissions (em), and the average runtime of the routing algorithm (CPU). As indicated in Section 5.2, for TT, EM-LI, and EM-LD, we report the results for duration, distance, and emissions in terms of the percentage change in the values relative to the values found when computing DIST routes. For the EM-LD routes, we also report the percentage of online path computations that were needed to find the solution (paths).

First, we see that, as expected, the actual emissions increase with the number of customers for each type of instance, but there does not seem to be an increasing percentage savings from optimizing emissions. The number of customers clearly has a direct impact, though, on the CPU time. For all four objectives, the runtimes get longer with more customers because the routing problem becomes harder to solve. For the EM-LD routes, the online path computations cause some increase in the time to produce EM-LD routes over EM-LI routes (e.g. 2442 seconds versus 2149 seconds for 30 customer suburban instances with a standard weight vehicle).

Across the different types of datasets, we consistently see that the most emissions occur with the suburban and mixed instances. This is expected since vehicles are traveling further than with inner city instances. Interestingly, we see that the savings found from optimizing emissions is consistently highest for the mixed instances, even though, on average, suburban instances yield higher total emissions. For example, with 10 customers and a heavy weight vehicle, the savings in emissions with EM-LD are 2.15 percent for inner city instances, 2.15 percent for suburban instances, and 3.40 percent for mixed instances. These results imply that it is particularly important to consider emissions objectives for mixed instances.

In comparing the EM-LI and EM-LD routes, the incorporation of load translates to lower average emissions (and larger savings) in all of these tests. In general, the savings found from EM-LD versus EM-LI tends to be higher for the mixed and suburban instances and is the highest for the instances with heavy weight vehicles. For example, for 10 customers and the heavy weight vehicle, the savings from EM-LD versus EM-LI are 2.15 percent versus 2.10 percent for inner city instances, 2.15 percent versus 0.87 percent for suburban instances, and 3.40 percent versus 1.42 percent for mixed instances. These results indicate the consideration of load is less important for inner city instances than for suburban and mixed instances and is particularly important with heavy weight vehicles. The average runtime for the EM-LD experiments is always larger than for the EM-LI experiments, with the largest percentage gains in runtime occurring with the suburban instances. Thus, the more accurate modeling of EM-LD leads to reduced emissions but at the cost of runtime.


                        Table 3 also indicates an interesting tradeoff between distance, duration, and emissions. Since DIST routes minimize distance, it is not surprising that the distance increases when emissions are optimized. It is interesting, though, that the percentage changes in distance are usually less than the percentage changes in emissions. For example, with 10 customers/standard weight vehicles, the distance increases, on average, by 1.37 percent to create 3.10 percent savings in emissions for inner city instances with EM-LD, the distance increases by 2.16 percent to create 3.22 percent savings in emissions for suburban instances with EM-LD, and the distance increases by 2.49 percent to create 3.79 percent savings in emissions for mixed instances with EM-LD. The EM-LD solutions are using paths that are slightly longer but are faster to travel. For example, for the same 10 customer/standard weight vehicle instances, these distance increases are accompanied by decreases in duration of 2.04 percent for inner city instances, 5.42 percent for suburban instances, and 2.98 percent for mixed instances. To optimize emissions, these results indicate that a company would need to pay workers to drive less time than with optimizing for distance, potentially yielding an additional cost savings depending on the specific costs involved.
                        
                     

In comparing EM-LD with TT routes, we see many opposite changes as compared with DIST routes. The emissions-optimized routes are shorter in distance and longer in duration, as expected, than TT routes. TT routes do yield improvements in emissions as compared with DIST routes for inner city instances, but result in worse emissions as compared with DIST routes for suburban and mixed instances. This indicates that the TT objective, which is a common objective used for urban route planning, is a bad proxy for emissions for suburban and mixed instances, but can yield a reasonable improvement in emissions versus DIST routes for inner city instances. EM-LD solutions, though, still yield better savings in emissions even for the inner city instances.
                        
                        
                     

Next, we look in more detail at how the optimization of emissions affects the construction of single routes with homogeneous load quantities across different instances and departure times. Table 4 shows the results for the five inner city, suburban and mixed instances (inst) with 10 customers and a standard vehicle. The results in Table 4 follow the structure of Table 3, but the results are specific to a particular instance/departure time.

In Table 4, we see that the savings in emissions can vary quite a bit among instances. Of note are instances such as M3 with a departure time of 06:30 that offers an improvement of 13.04 percent in emissions with an EM-LD route. We also see that the savings in emissions can vary quite a bit among the different departure times for the same instance. For example, instance S5 has savings in emissions of 1.81 percent at 6:30, 4.29 percent at 12:30, 3.95 percent at 15:30, and 1.30 percent at 19:30 when using an EM-LD route. For the DIST routes, the highest emissions tend to occur when start times lead to driving during rush hour periods, which is not surprising because DIST routes tend to take paths that are shorter, but more likely to include emissions causing congestion. The emissions objectives create consistent improvements in emissions, but there does not seem to be a pattern with regard to what time of day the most emissions savings can be obtained.
                        
                        
                     

In looking at these detailed results, we see that the EM-LI routes can sometimes yield much higher emissions than the DIST routes. For example, the EM-LI route for instance M4 at 19:30 has 6.51 percent higher emissions than the DIST route. This compounds the importance of considering load for suburban and mixed instances. Table 3 shows that EM-LI and EM-LD yield average differences in emissions of around 1–2 percent. This average is based on instances where both methods choose the same routes (and thus no difference in savings) and instances with much higher differences in emissions, such as a difference of 8.39 percent for the M4 instance at 19:30. However, these improvements can come at a cost in terms of CPU time. For example, instance S2 at 12:30 has a runtime 10 seconds longer when load is considered (25.97 vs. 15.72 seconds).

To understand how the different objectives impact the underlying structure of the routes, we examine the different routes created for a sample instance and departure time. For instance S3 at 6:30, the routes are shown in Fig. 3(a), (d), (b) and (c). The DIST route goes counterclockwise around the city (Fig. 3(a) with a total length of 64.35 kilometers and total fuel consumption of 15.58 liters). This route uses shortcuts wherever possible. The TT and EM-LI routes switch to clockwise customer visits (Fig. 3(d) and (b)) and include some highways, which extends the total distance (68.65/65.57 kilometers) and increases emissions compared to the DIST solution (16.13/15.60 liters of fuel). Finally, the EM-LD route (Fig. 3(c)) switches back to counterclockwise again, following different paths than the DIST solution and assembling more customers, and thus more load, at the end of the route (65.95 kilometers, 15.18 liters of fuel).

As described in Section 5, we also experiment with heterogeneous load sizes to understand if this impacts the savings from minimizing emissions. We again focus on 10 customer instances. Table 5 describes the type of load size considered (load), the gross weight of the vehicle (wt), and the category of instances (inst). The solution values are presented as in Table 3. In the table, we also present our prior results from homogeneous loads for comparison.

For homogeneous loads, the gain from EM-LD versus EM-LI routes is less than 2 percent for suburban instances with heavy vehicles. In Table 5, for random three heavy, the additional savings are almost 3 percent. For farthest three heavy, the additional savings are over 4 percent. For closest three heavy, the savings are more than 4.5 percent. For random decreasing load, the additional savings are over 7 percent. Overall, these tests show that larger savings in emissions can occur with heterogeneous loads, and it is particularly important to optimize for loads when they are heterogeneous and vehicles are heavy.

Because the EM-LI routes do not consider varying loads on the arcs, the average distance and duration of these routes do not change with heterogeneous versus homogeneous loads. EM-LD routes with heterogeneous loads are on average longer and take slightly longer to travel than those with homogeneous loads. Essentially, the routes are slightly longer so that the heavy loads can be handled more efficiently in terms of emissions, which sometimes means driving longer distances with less weight.

To understand the changes in the underlying structure that occur with heterogeneous loads, we examine Fig. 4(a), (b) and 5(a), and 5(b). In Fig. 4(a) and 4(b), we examine S1 at 12:30 with the three closest customers to the depot having heavy loads, and the vehicle is heavy weight. The EM-LI route serves the heavy customers in the early part of the route (position 1, 4 and 5). In the EM-LD route, the heavy customers are shifted to the end of the route (position 6, 9 and 10), making a difference of 3.5 liters of fuel between these routes. In Fig. 5(a) and (b), we examine S5 at 19:30 with the three farthest customers having heavy loads, and the vehicle is of standard weight. The EM-LI route goes around the city clockwise, picking up the heavy ones early (position 2, 4 and 8). The EM-LD partially changes the direction shifting the heavy customers later in the route (position 3, 7, and 9) and saving an additional 0.7 liters of fuel.

To understand the impact of emissions in the case of multiple vehicles, Table 6 presents a summary of results of VRP optimization with different objectives. Except for the first column, the metrics are comparable to those reported for the TSP. As described in Section 5, VRP optimization is based on the 30-customer instances. However, the pickup quantity at each customer is varied in a way such that three vehicles are required. We present the results where the fleet includes three standard vehicles, three heavy vehicles, and a mixed fleet comprised of one heavy and two standard vehicles.

For the fleets of three standard and three heavy vehicles, we can compare the results in Table 6 with the 30 customer, one vehicle results in Table 3. The average total duration, distance, and emissions increase when the number of customers per vehicle decreases and the number of vehicles increases. The CPU time, though, decreases as the routing problems become easier when the 30 customers are spread over three vehicles instead of just one. With more vehicles, there does not seem to be a significant pattern with regard to the savings in emissions for the fleet of three standard and three heavy vehicles as compared with the one vehicle case. What stands out in Table 6 is the increased savings in emissions that result with the use of a mixed fleet. For example, with the mixed fleet, the savings from EM-LD for the mixed instances is 9.52 percent. This indicates that with a mixed fleet it is particularly important to consider emissions in the route planning.

With more vehicles, the performance of EM-LI versus EM-LD routes do not seem to exhibit any notable changes from the one vehicle case. The EM-LD routes always yield better emissions, on average, but the EM-LI results are usually within 1–2 percent. It is somewhat surprising that the gap between the emissions found from EM-LI versus EM-LD is not larger for the mixed fleet. The reason why EM-LI seems to perform relatively well is that it does consider the empty weight of the vehicles when assigning customers to the different vehicles. This consideration is enough to capture a significant portion of the differences in emissions when using mixed fleet.

For the mixed fleet, we also experiment with heterogeneous loads to help build insights into what types of loads are assigned to the different vehicle types. These results are presented in Table 7. Table 7 reveals some of the highest average savings from optimizing emissions in all of the experiments. For example, the results for closest 15 heavy demonstrate a savings in emissions of 10.25 percent for EM-LD versus DIST routes for mixed instances. As with the single vehicle experiments, the most savings in emissions typically come from the mixed instances with one major exception. For the farthest 15 heavy instances, the savings in emissions are higher for inner city instances than with suburban and mixed instances. This indicates that the DIST routes are not a very good proxy for emissions even in the inner city with mixed fleets and heterogeneous loads.

Across the different types of load assignments, we see the biggest savings in emissions from EM-LD come from these closest 15 heavy instances. To understand what is happening in such instances, we examine Fig. 6(a), (b), and (c). In these pictures, we examine the route that is assigned to the heavy vehicle for EM-LI and EM-LD routes and compare it to the DIST route as a benchmark. Fig. 6(a) shows that, in the DIST solution, the heavy vehicle makes 15 stops and travels a long route. From a distance perspective, this makes sense as a bigger vehicle can make more deliveries, creating a lower total distance but high emissions. Note that we do not show the TT route here because it also assigns many customers to the first vehicle because of its larger capacity. As shown in Fig. 6(b), the heavy vehicle remains close to the depot in the EM-LI solution to pick up the heavy customers and travels much less distance, creating less emissions. The difference between the EM-LI and DIST solutions comes from the fact that the EM-LI solution recognizes the weight of the heavy vehicle, even if it does not account for the impact of customers’ loads. In Fig. 6(c), the consideration of load by EM-LD route leads to an even tighter/shorter route than the one chosen by EM-LI, which translates to even less emissions for EM-LD. As with single vehicle results, these results imply that optimizing for emissions is particularly important for heterogeneous loads. The main difference is that with the mixed fleet the resulting percentage change in emissions can be much higher than in the single vehicle case.

@&#CONCLUSIONS@&#

In this paper, we explore the minimization of expected emissions from vehicle routing in urban areas, where minimization of emissions will be one of the major challenges in the short- and mid-term future. A key challenge in the paper is the development of a computationally tractable way of considering detailed load information. Unlike in the case of traditional vehicle routing objectives, the presence of the load requires customer-to-customer expected time-dependent emissions-minimizing paths to be computed online. We introduce an analytical result that allows us to precompute the majority of such paths.

Through our experiments, we identify that significant savings in emissions can be achieved when optimizing emissions for mixed customer instances, while inner city tours show significantly less improvements, mainly because routes are relatively short. We show that it is also more important to minimize emissions when trucks are heavier and can potentially handle more load. The most significant savings in emissions with single vehicles were noted for routes with heterogeneous loads. For heterogeneous loads, our solution framework shifts heavy pickups to the end of a route, ensuring that we carry most of the load over a short distance. In general, we find that savings in emissions can be found with relatively small increases in tour durations, indicating that big savings in emissions can be possible without large costs to companies. We also extend our results to multiple vehicles. We find large savings with mixed fleets since vehicle weights are a big driver in emissions. For the mixed fleet, we see particular savings with heterogeneous loads, especially when heavy customers are close to the depot. Our emissions-optimized solutions find that the heavy vehicle stays close to the depot using a short route to pick up the heavy customers.

There exist a number of interesting avenues of future work. For one, this paper does not include the possibility that vehicles might wait at the depot or at customers for favorable road conditions. Adding waiting would change the objective, and, depending on the costs involved, may change the routes that are selected. Furthermore, it would be interesting to see how different emissions models impact the structure of resulting routes. In addition, an interesting path for future research would be to extend local search procedures such that deliveries can be handled as efficiently as pickups. So far, local-search based evaluation of a route for deliveries would lead to re-evaluation of costs for the whole route, which is computationally inefficient. Finally, the functions describing emissions are similar to those that describe fuel consumption. As a result, the methods discussed in this paper could be applied to routing problems that seek to incorporate the costs of fuel in urban areas with uncertain speeds.

Supplementary material associated with this article can be found, in the the online version, at 10.1016/j.ejor.2015.11.034
                  


                     
                        
                           Supplementary Data S1
                           
                              Supplementary Raw Research Data. This is open data under the CC BY license http://creativecommons.org/licenses/by/4.0/
                              
                           
                           
                        
                     
                  

@&#REFERENCES@&#

