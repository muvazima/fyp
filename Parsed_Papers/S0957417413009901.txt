@&#MAIN-TITLE@&#A decision-making algorithm for automatic flow pattern identification in high-speed imaging

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           High-speed imaging analysis with image processing algorithms.


                        
                        
                           
                           Intelligent system replaces aerodynamic expert in identifying shock waves.


                        
                        
                           
                           Decision-making algorithm automatically identifies flow patterns.


                        
                        
                           
                           Vibrations, poor illumination and optical set-up corrected by fuzzy logic.


                        
                        
                           
                           Low quality aerodynamic visualisations transformed into a precise data.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Image processing

Intelligent decision-making

Pattern recognition

Shock wave

Schlieren

@&#ABSTRACT@&#


               
               
                  A digital image processing algorithm was developed to identify flow patterns in high speed imaging. This numerical tool allows to quantify the fluid dynamic features in compressible flows of relevance in aerospace and space related applications. This technique was demonstrated in a harsh environment with poor image quality and illumination fluctuations. This original pattern recognition tool is based on image binarization and object identification. The geometrical properties of the detected elements are obtained by measuring the characteristics of each object in the binary image. In case of multiple shock waves or shock bifurcations, a “decision-making” algorithm chooses the best shock-wave path, based on the original image intensity and local pattern orientation. The algorithm was successfully used for validation on numerical Schlieren images, where the shock-wave fluctuation was triggered by vortex shedding. The applicability of the algorithm was finally evaluated in two Schlieren imaging studies: at the trailing edge of supersonic airfoils and for hypersonic research. The program correctly identified the fuzzy flow features present in all applications.
               
            

@&#INTRODUCTION@&#

In multiple engineering applications, refractive flow imaging, such as Schlieren and shadowgraphy, allows the investigation of complex flow field in a non-intrusive way. Those techniques find their application into flows in which density variations are sufficiently important such as high speed flows, but also low speed flows with natural convection. The extreme conditions in which the measurements are performed in the first case often lead to vibrations, poor image quality or illumination fluctuations, that, in turn, risk to compromise the flow pattern identification itself.

Decision making algorithms are used in a wide variety of fields, from cancer diagnosis (Wu et al., 1993) to airbag control (Mahmud & Alrabady, 1995). These programs are typically tailored ad hoc on the specific problem, since the creation of a computer-aided decision procedure requires the transformation of the particular phenomenon properties into measurable quantities. In order to do so, either a large dataset to train a neural network based software or a strict mathematical representation of the pattern to identify are required. Cheng, Cai, Chen, Hu, and Lou (2003) summarised and compared the methods used in various stages of the computer-aided detection systems of micro-calcifications in mammograms. In particular, the enhancement and segmentation algorithms, mammographic features, classifiers and their performances were studied and compared. In order to deal with a relatively small training dataset an Augmented Behaviour Knowledge Space method was developed (Constantinidis, Fairhurst, & Rahman, 2001) and applied to the detection of circumscribed masses in digital mammograms. This multiple expert fusion algorithm based its decisions on several classifiers (e.g. Multivariate Gaussian, 1-nearest-neighbour classifier…), which were first trained and initialised, providing a more reliable method of classifier integration.

In order to avoid misclassification, Le Capitaine and Frelicot (2012) presented a family of measures for best top-n class-selective decision rules, deriving a general class-selective rule which allowed, in a single step, either to distance reject, to classify or to ambiguously reject a pattern, given only one user-specified threshold. El-Dahshan, Hosny, and Salem (2010) and later Zhang, Dong, Wu, and Wang (2011) used hybrid intelligent techniques for classification of magnetic resonance images of brain. Discrete wavelet transformation and principal component analysis were used for feature extraction, whereas neural network based classifier were used for image classification.

Textural and chromatic features were used (Bianconi, González, Fernández, & Saetta, 2012) together with several classifiers (i.e. linear classifier, support vector classifier) in order to automatically classify granite tiles, showing that classification based on both colour and texture outperformed previous methods based on textural features alone, with a limited amount of training samples.

Intelligent decision making systems are utilised in image processing for various applications. Cena, Cardenas, Pazmino, Puglisi, and Santonja (2013) used an automated image processing algorithms for the intelligent decision making of the movement of a robotic system by multiple real time image manipulation for obstacle detection. Moreover, images of human lymphocytes were analyzed by an automated algorithm to enhance and accelerate tracing the effects of toxicity (Frieauff, Martus, Suter, & Elhajouji, 2013). Detection of the flow patterns with intelligent systems were studied for turbomachinery combustion by Bryanston-Cross, Burnett, Timmerman, Lee, and Dunkley (2000). The 3-D velocity field was quantified by integrated narrow-angle tomographic flow visualisations and intelligent software. Density gradient based techniques have been widely exploited for qualitative and quantitative analysis of flow imaging (Settles, 2001). Quantitative analysis was mainly concentrated on calibrated Schlieren, background oriented Schlieren (BOS), and rainbow Schlieren techniques. Quantitative flow field analysis through software assisted image processing compared the aforementioned methods (Hargather & Settles, 2012), concluding that the calibrated Schlieren and BOS outperformed the rainbow Schlieren method.

The improvement of reliability and efficiency in compact fluid machinery is a challenging task that requires acute understanding of shock wave interactions. Schlieren images are often used to analyse the flow topology. An algorithm able to read and analyse automatically the images needed to be designed to allow a quantitative assessment of flow features, i.e. shock waves inclination and relevant frequencies.

The main goal of the present paper is to define mathematical operations that allow shock waves identification and the correct pattern orientation measurement in case of ambiguity. When multiple shock wave paths are found, due to weak bifurcations or reflections, mathematical, geometrical or logical criteria were implemented to allow the program to take the correct decision.

The algorithm was validated on numerical Schlieren images, where shock waves were generated at a generic trailing edge of an airfoil. The system was then successfully implemented on two discrete set of raw images obtained during two different wind-tunnel experiments to trace the shock waves at the trailing edge of supersonic airfoils and to identify curved shock waves in hypersonic research.

A Digital Image Processing algorithm was developed with Matlab® 2009b to automatically analyse the Schlieren images. Image preprocessing represents a crucial part in each feature extraction algorithm, especially when real-life, experimentally obtained images need to be analysed and poor image quality and illumination fluctuations would impede otherwise any correct pattern recognition.

In order to maximise the accuracy of the subsequent steps, each single image was read and cropped around the area of interest. According to the type of background the image was then pre-treated.

In case of a uniform background texture, a local background was created and subtracted from the image to compensate for illumination variations. The background was computed row by row, by evaluating the average columns intensity. On the other hand, in case of a noisy image with smaller textures coexisting with major patterns, it was first necessary to clean the image. The image was therefore filtered, first with a flat, disk-shaped structuring element of radius R, to smooth out the imperfections, then with a Prewitt and a Sobel horizontal edge-emphasising filters, to enhance the edges.

The contrast of the greyscale picture was enhanced by means of a contrast-limited adaptive histogram equalisation function, adapthisteq (Gonzalez, Woods, & Eddins, 2009).

In order to correctly analyse Schlieren images captured in a fluctuating environment, it was necessary to suppress the vibration-induced image shift by re-centring them. A devoted algorithm named Vibration-Suppression-Algorithm (VSA) was developed (Fig. 1
                        ). The algorithm was tested with Schlieren images obtained in a supersonic turbine test section (Fig. 2
                        (a)). The incoming flow accelerated to the supersonic speeds along the model surface and decelerated through the trailing edge shock waves where the strong density gradient was observed. Schlieren images were recorded through aligned optical windows.
                           
                              •
                              Each image was read from the Schlieren video. In order to re-centre the images, an object that preserves its shape and size despite vibrations and illumination inhomogeneities was required to be used as reference target. In this case two setup elements were suitable: the airfoil trailing edge and the set-up optical window. The latter was selected since its results were found to be more reliable and stable. The image was cropped around the bottom left optical window quadrant, that was the least sensitive image portion to light variation.

The image was binarized with a modified global image threshold based on Otsu’s method (Otsu, 1979). The threshold was halved respect to the default value, so that the optical window was emphasised. The holes inside the binary image were filled, in order to obtain a unique continuous circle corresponding to the window itself.

The exterior boundary (Fig. 2(b)) of the window was traced via the bwboundaries function (Gonzalez et al., 2009), which identifies the boundaries of the closed geometrical objects in a binary image. A subset of points was selected for the fitting. Those points correspond to the bottom left quadrant of the circle and were automatically found by the program.

The points belonging to the circle boundary were fitted with Bucher’s circle-fit function (Bucher, 2004), which was based on the minimisation of the sum of squared radial deviations. The method provided the centre coordinate and the radius of the circle (Fig. 2(c)).

The program stored both the centre (x
                                 
                                    c
                                 ,
                                 y
                                 
                                    c
                                 ) and the radius of the circle for further analysis. A crop-rectangle was then built starting from the circle centre. The rectangle was a four-element position vector [x
                                 
                                    min
                                 ,
                                 y
                                 
                                    min
                                 ,width,height] that specifies the size and position of the crop rectangle. Due to the noisy environment the selected width and height was 50% larger than the mean diameter, in other experiments with less vibrations one could select a narrower range, which will speed up the processing of the images. The new image was cropped, centred at (x
                                 
                                    c
                                 ,
                                 y
                                 
                                    c
                                 ), and saved.

The vibration suppression algorithm was validated by re-running the program on the new re-centred images (no initial crop applied) and comparing the centre dispersions (x
                                 
                                    c
                                 
                                 −
                                 x
                                 
                                    m
                                 ,
                                 y
                                 
                                    c
                                 
                                 −
                                 x
                                 
                                    m
                                 ). Fig. 2(d) and (e) show the centre coordinates dispersion and the centre distance distribution, respectively. Both in the x and y direction the shift was reduced of about six times from an average mean-centre distance (
                                    
                                       Δ
                                    
                                 ) of 2.5pixels to a mean distance of 0.45pixels.

The algorithm converted the image portion (Fig. 3
                        (a)) into a binary image (Fig. 3(b)), i.e. a logical array. Spurious objects, such as small (d
                        <10 pixels) dirt on the camera lens, were finally removed thanks to morphological operations, such as hbreak, spur, open, which removes H-connected pixels, remove spur pixels, performs morphological opening (erosion followed by dilation), respectively.

This program does not require any training, is robust and fast, allowing the analysis of a large database. The flow chart of the program is shown in Fig. 4
                        .

In order to detect the different objects belonging to the image, the concept of connected component labelling was used. A connected component of value v is defined as a set of pixels C, each having value v, and such that every pair of pixels in the set are connected with respect to v. The program labelled the connected components according to an eight-neighbourhood connection definition, providing a label matrix L, where each object was identified with a positive integer number, following the general procedure outlined by Haralick and Shapiro (1992). The properties of the detected objects were obtained by measuring the characteristics of each labelled component. Both shape properties (e.g. area, centroid, eccentricity, equivalent diameter) and pixel value measurements (e.g. maximum intensity, pixel values) were provided by Matlab® built-in function regionprops (Gonzalez et al., 2009), which calculates the geometrical and greyscale properties of a designated region in an image.

A reduced subset of pixels, having an intensity value higher than the median intensity value computed over all the pixels belonging to a given identified object, was selected among those belonging to the object itself (Fig. 3(c)) in order to eliminate small unphysical bifurcations, minor waves or reflections. Since there were multiple columns 
                              
                                 
                                    
                                       j
                                    
                                    
                                       ∗
                                    
                                 
                              
                           , per each row i, a mean bifurcation line was computed by Eq. (1):
                              
                                 (1)
                                 
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                       
                                          m
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                          ,
                                          
                                             
                                                j
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       i
                                       ,
                                       
                                          
                                             j
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                 
                              
                            indicates the horizontal coordinate of the pixel located at row i and column 
                              
                                 
                                    
                                       j
                                    
                                    
                                       ∗
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       i
                                    
                                    
                                       m
                                    
                                 
                              
                            is the mean horizontal coordinate at row i. Only the points 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       i
                                       ,
                                       
                                          
                                             j
                                          
                                          
                                             #
                                          
                                       
                                    
                                 
                              
                            that lie within a distance 
                              
                                 ε
                              
                            (e.g. 
                              
                                 ε
                                 =
                                 3
                              
                           
                           pixels) from 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       i
                                    
                                    
                                       m
                                    
                                 
                              
                            were chosen to exclude outliers. The correct mean line was finally re-built row by row:
                              
                                 (2)
                                 
                                    if
                                    
                                    |
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                          ,
                                          
                                             
                                                j
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                    -
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                       
                                          m
                                       
                                    
                                    |
                                    <
                                    ε
                                    →
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                       
                                          m
                                       
                                    
                                 
                              
                           
                        

Upstream and downstream border coordinates (Y
                           
                              up
                            and Y
                           
                              dw
                           , Fig. 3(d)) were selected from the intensity-identified cloud of points (
                              
                                 
                                    
                                       X
                                    
                                    
                                       i
                                       ,
                                       
                                          
                                             j
                                          
                                          
                                             #
                                          
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       Y
                                    
                                    
                                       i
                                       ,
                                       
                                          
                                             j
                                          
                                          
                                             #
                                          
                                       
                                    
                                 
                              
                           ) per each row i. The continuity of the bifurcation line 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       m
                                    
                                 
                              
                            was verified by evaluating the normalised difference between the two border lines:
                              
                                 (3)
                                 
                                    Δ
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    |
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                       
                                          up
                                       
                                    
                                    -
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                       
                                          dw
                                       
                                    
                                    |
                                 
                              
                           
                           
                              
                                 (4)
                                 
                                    d
                                    Δ
                                    Y
                                    =
                                    (
                                    Δ
                                    Y
                                    
                                       
                                          ∣
                                       
                                       
                                          max
                                       
                                    
                                    -
                                    Δ
                                    Y
                                    
                                       
                                          ∣
                                       
                                       
                                          min
                                       
                                    
                                    )
                                    /
                                    Δ
                                    Y
                                    
                                       
                                          ∣
                                       
                                       
                                          mean
                                       
                                    
                                    <
                                    
                                       
                                          ε
                                       
                                       
                                          b
                                       
                                    
                                 
                              
                           
                           
                              
                                 •
                                 If the normalised distance difference 
                                       
                                          d
                                          Δ
                                          Y
                                       
                                     was lower than a threshold value (e.g. 1.5), the coordinates cloud (
                                       
                                          
                                             
                                                X
                                             
                                             
                                                i
                                                ,
                                                
                                                   
                                                      j
                                                   
                                                   
                                                      #
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                Y
                                             
                                             
                                                i
                                                ,
                                                
                                                   
                                                      j
                                                   
                                                   
                                                      #
                                                   
                                                
                                             
                                          
                                       
                                    ) were handed over to the main program, to be transformed into a binary image, identified as an object and measured,

If 
                                       
                                          d
                                          Δ
                                          Y
                                          >
                                          
                                             
                                                ε
                                             
                                             
                                                b
                                             
                                          
                                       
                                     the orientation-based decision module was called.

The two lines Y
                           
                              up
                            and Y
                           
                              dw
                            were filtered with a low pass filter in order to exclude the higher and sharper peaks. Consequently, their piecewise derivative is computed over k sets of m points each, by linearly fitting the latter. The best fit is found by solving the least square problem over the m points. The line with the minimal derivative variation (absolute value and number of sign inversions) was indicated as the correct shock wave outer border, Y
                           
                              out
                           .

Finally the inner border of the bifurcation was computed as follows:
                              
                                 •
                                 per each row i, starting from the selected outer border 
                                       
                                          
                                             
                                                Y
                                             
                                             
                                                i
                                             
                                             
                                                out
                                             
                                          
                                       
                                     and going towards the image centre, the difference between two successive points among 
                                       
                                          
                                             
                                                Y
                                             
                                             
                                                i
                                                ,
                                                
                                                   
                                                      j
                                                   
                                                   
                                                      #
                                                   
                                                
                                             
                                          
                                       
                                     was computed:
                                       
                                          (5)
                                          
                                             Δ
                                             
                                                
                                                   Y
                                                
                                                
                                                   i
                                                   ,
                                                   
                                                      
                                                         j
                                                      
                                                      
                                                         #
                                                      
                                                   
                                                
                                             
                                             =
                                             |
                                             
                                                
                                                   Y
                                                
                                                
                                                   i
                                                   ,
                                                   
                                                      
                                                         j
                                                      
                                                      
                                                         #
                                                      
                                                   
                                                
                                             
                                             -
                                             
                                                
                                                   Y
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                   -
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         #
                                                      
                                                   
                                                
                                             
                                             |
                                          
                                       
                                    
                                 

the last point that separates from the previous one of less than 1.5pixels was selected as the inner border of the shock 
                                       
                                          
                                             
                                                Y
                                             
                                             
                                                i
                                             
                                             
                                                in
                                             
                                          
                                       
                                    .

The coordinate of the points lying within 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       in
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       out
                                    
                                 
                              
                            (Fig. 3(e)) were transferred to the main program, where they were transformed into a binary image, identified as an object and measured.

Eccentricity was used as ultimate criterion to select, among the detected items, the one that corresponds to the compression wave or to verify that the selected object was compatible with a shock wave. If the eccentricity was bigger than the threshold imposed,
                              1
                              Eccentricity varies between 0 and 1, which corresponds to a circle or a line, respectively.
                           
                           
                              1
                            the centre and orientation of the shock wave were computed and stored for further analysis, otherwise no data was saved.

After all the shock waves identified in the selected area were verified, the data were saved as structured variables and the program loops over all the Schlieren images, providing the time-resolved shock wave angle and centre coordinate. The computational time required to perform the identification of the shock patterns were about 10s per video frame, in a 2.6GHz Intel Core i7 computer with 8GB RAM. Once all the images were analysed, the software redirected the user to post-processing algorithms for further analysis, such as unsteady shock angle variation analysis and determination of unsteady shock impingement location.

Synthetic Schlieren images were created by means of unsteady Navier–Stokes numerical simulations to demonstrate the validity of the proposed approach. Validation of the approach was performed using the commercial Computational Fluid Dynamics (CFD) package ANSYS 14 (Fluent) with second order accuracy in space and time. The fluid with main stream Mach number of 1.5 was considered as an ideal gas and the equations were solved explicitly using the density-based solver. The turbulence of this high Reynolds number flow is modelled using the two-equation realizable 
                        
                           k
                           –
                           ε
                        
                      model. The unsteady flow field obtained from the simulations were analysed by the novel shock wave detection algorithm to obtain the unsteady fluctuations on the trailing edge shock angle. Pressure fluctuations induced by the shock wave-vortex shedding interaction were recorded throughout the simulations. Fig. 5
                     (left) displays an example of the shock patterns obtained from the numerical simulations. Fig. 5(right) represents the results of the intelligent system, the shear layer is identified in solid lines while the shock waves are represented with dashed lines, and the vortices with dotted circles. Nevertheless, the flow patterns that is not of interest, e.g. weak compression waves upstream of the trailing edge with low light intensity, were disregarded by the image processing algorithm.


                     Fig. 6
                     (a) depicts the time evolution of the shock wave normalised angle (
                        
                           
                              
                                 α
                              
                              
                                 ∗
                              
                           
                        
                     ) obtained by the proposed algorithm and the time evolution of the normalised base pressure (
                        
                           
                              
                                 p
                              
                              
                                 ∗
                              
                           
                        
                     ) calculated as the area-averaged static pressure on one side of the trailing edge solid surface and their best fit: a first order Fourier Series which gives a frequency value of 19.9–19.8kHz, respectively. An excellent match is observed between the pressure data and the angle both in time series (Fig. 6(a)) and frequency spectra (Fig. 6(b)). The analysis of the numerically generated flow pattern revealed that the method is able to detect the shock position with an uncertainty of better than 3pixels, and estimate the right frequency in the fluctuation.

Shock waves appear at the trailing edge of transonic airfoils. The impact of the shocks on the downstream airfoils causes boundary layer separation and fatigue problems. A possible method to attenuate the shock waves in transonic turbines is the use of unsteady trailing edge blowing (Saracoglu et al., 2012).

An experimental campaign to investigate the influence of pulsating cooling on the trailing edge shock waves was carried out for a wide range of supersonic Mach numbers. Pulsating ejection was introduced at a frequency of 200Hz.

High-speed Schlieren flow visualisations were performed with the Z-type Schlieren setup sketched in Fig. 7
                        . The pictures of 800 by 600pixel resolution were acquired at a rate of 3200Hz by a Phantom V9 high-speed camera.

The experiments were performed at high pressure levels (5 to 200bars), which resulted in undesired vibrations on the surroundings and elements of Schlieren setup (mirrors, illumination and recording system). This phenomenon caused the picture illumination to be inhomogeneous and the target to be in different position inside the image itself, seriously compromising the possibility of automating the analysis of the results. Vibration-Suppression-Algorithm was first run to centre the images, that were then analysed with the algorithm described in Section 2.3.

@&#RESULTS AND DISCUSSION@&#

A unique application of the novel decision making algorithm was performed on the images of fish tail shock structures at the model trailing edge (Figs. 8 and 9
                        
                        ). In order to identify the global wave angle, the identified shock points were finally fitted with a linear regression.

In case of multiple shock waves, the algorithm can also extract the information regarding shock-wake interaction and wave-wave intersection, storing the coordinates of these points for further analysis (Fig. 9). Per each wave segment, the program chose automatically the equation that best fit the data (linear, parabolic, cubic…), plotted it accordingly and saved the coefficients together with fit-structure.

Time resolved data were also analysed in the frequency domain. From the comparison of the pressure sensor and the primary shock wave angle power spectra (Fig. 10
                        ) in the absence of cooling (Fig. 10(a)), it appears that there was no correlation between the two spectra and that at relatively low frequency (i.e. below 350Hz) the main peak observed was only indicating frequency resolution of the signal. In case of pulsating cooling (Fig. 10(b)), it appeared instead that the shock angle variation was in phase with the pulsating cooling (at about 208Hz), demonstrating therefore that there was a direct connection between the cooling and the shock wave behaviour.

In hypersonic re-entry vehicles, it is of vital importance to accurately predict the transition in the boundary layer from laminar to turbulent state to design the Thermal Protection System (Schneider, 2008).

The potential use of active control to trigger transition in a hypersonic flow was investigated by Schloegel, Paniagua, and Tirtey (2008), by injecting a perpendicular flow over a flat plate. The injection presented the advantage that the mass flow could be adjusted to the specific hypersonic flow conditions, ensuring the transition over a wide range of flight conditions.

Experiments were conducted in the von Karman Institute hypersonic blow down wind tunnel equipped with a Mach 6 contoured nozzle. Typical operating conditions where a Mach number of 5.5, a stagnation pressure of 2MPa, a stagnation temperature of 500K, and a unit Reynolds number of 20×106/m. Fig. 11
                        (a) depicts the wind tunnel layout and main elements. A pebbled bed heater warmed the air prior to each test series. A 16-bit data acquisition system was used to monitor the relevant flow parameters. The total pressure and total temperature were measured with a Staham strain gauge and a type K thermocouple, respectively. During a typical test, the model was maintained outside of the flow, to allow the free stream to fully develop, then the model was injected using a fast pneumatic actuator. The model consisted of a flat plate manufactured with a built in settling chamber, equipped with a pressure tap and a thermocouple to monitor the jet conditions Fig. 11(b).

@&#RESULTS AND DISCUSSION@&#

The research program focused on the identification of the flow topologies generated by the injection of gas and liquid into crossing hypersonic flow, as depicted in Fig. 11(c). In particular the use of Schlieren photography was utilised to characterise the bow, and barrel shocks at different injection blowing ratios. The decision making algorithm was applied to these images in order to show the variety of flow topology to which it can be applied. A typical result was reported in Fig. 12
                        , where not only the injection, but also the bow and barrel shocks where identified automatically from the video streams.

@&#CONCLUSIONS@&#

An original decision-making algorithm was developed to identify shock waves in complex Schlieren images. In order to successfully identify the flow pattern three main obstacles needed to be overcome: the vibration-induced image shift, the presence of background noise and illumination variations and the appearance of minor reflections. The first two difficulties arose from the extreme conditions in which the experiments were performed, i.e. high Mach number and high pressure flow. Shock wave reflections and bifurcations could be originated by faulty end-walls or optical windows. In this environment the automatic analysis and comparison with numerical data is cumbersome. Vibrations were suppressed by identifying a reference object and re-centring the images. The background noise and illumination inhomogeneities were removed by a dedicated pre-processing algorithm, which made use of image filtering and morphological operations. The intelligent system to identify the shock waves relies on the use of image processing algorithms that first require treatment of the image and local orientation of the patterns.

The algorithm was first tested on synthetic Schlieren images generated by numerical simulation, where shock wave oscillation was triggered by vortex shedding. This challenging test case proved the ability of the developed tool to identify small angle variation and to identify correctly the shock-wave fluctuation frequency.

The developed algorithm was then utilized to process two experimental cases with rather distinct environmental settings and producing different quality raw images. In the supersonic turbine cascade, the post-processing of high-speed imaging (Schlieren) allowed to demonstrate that pulsating cooling is beneficial to reduce the shock fluctuations. The shock waves are then fluctuating at the same frequency than the pulsating coolant flow.

In case of hypersonic flow over a flat plate, it was possible to identify both the bow and barrel shock path, opening to quantitative studies on the shock position variation as function of the injection flow rate.

The use of the new decision-making algorithm proved therefore to be extremely effective in the shock wave identification, transforming a noisy flow visualisation into a precise measurement data.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to acknowledge the financial support of US Air Force under the frame of the Project AFOSR FA 8655-08-1-3033 for the “shock modulation experiments”. The authors also wish to thank the support of Prof. Bosschaerts and Mr. Christoffels from the Royal Military Academy of Brussels, Belgium.

@&#REFERENCES@&#

