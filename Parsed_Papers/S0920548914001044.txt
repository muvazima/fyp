@&#MAIN-TITLE@&#Integrated vetronics survivability: Architectural design and framework study for vetronics survivability strategies

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The paper proposes a framework for vetronics networks to protect them from cyber-attacks


                        
                        
                           
                           The paper uses preventive and reactive mechanism to protect and recover from cyber threats


                        
                        
                           
                           The utilization of existing safety critical time triggered architectures is discussed


                        
                        
                           
                           Through-life capability and cryptographic management is presented


                        
                        
                           
                           The framework is presented for open, modular, and scalable vetronics architectures


                        
                        
                           
                           The paper highlights applicability of the framework to current and future standards


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Vetronics

Survivability

Security

Safety

Architecture

@&#ABSTRACT@&#


               
               
                  Network enabled capabilities (NEC) and electronic architectures in modern-day military vehicles fundamentally change the way in which the military conduct its operations. In-vehicle electronic (vetronics) architectures consist of the integration of a variety of safety-critical, deterministic and non-deterministic sub-systems through gateways and backbone networks. This assimilation provides the military with the required information superiority, battle space information integration and new capabilities. However, with this integration comes added security and safety risk. In essence, different communication nodes within the vehicle could be accessed with malicious intentions through NEC or by allowing tampered nodes to be part of the system during reconfiguration. Attacks on safety-critical sub-systems can affect the safety of the crew and also the completion of the military mission. This paper presents a novel integrated vetronics survivability architecture framework to protect and recover vehicle's vetronics from the growing threats of attacks. Architecture components are identified, and their behaviour is analysed to present an innovative vetronics survivability architectural framework.
               
            

@&#INTRODUCTION@&#

NEC magnifies military efficiency by incorporating sensors to collect information, network to merge, distribute and communicate information and weapon systems to achieve military success. This integration of battle space information provides the military and decision makers with information superiority [1]. NEC equipped military vehicles operate in a system-of-systems environment using in-vehicle electronics (vetronics) architectures, which allow sharing of reconnaissance information, vehicle health, fire power and navigational coordinates, enabling common understanding among commanders at all levels.

It is envisioned that in the near future, vetronics architectures would form the core of NEC equipped military vehicles. In Fig. 1
                     , an example of a generic vetronics architecture partitioned by function is shown [2]. This example vetronics architecture consists of safety-critical (SC) sub-systems (Drive-by-Wire (DbW), Weapons), deterministic (D) sub-systems (light control, GPS, Bowman, command and control (C2)) and non-deterministic (ND)/ high speed sub-systems (video for situational awareness). The different sub-systems are connected together using gateways and backbone networks into integrated vetronics architecture. The assimilation of different sub-systems using gateways and backbone networks provides benefits in terms of general architecture across the whole fleet of vehicles, cost, ease of upgrade and in-service maintenance [3]. However, this combination of integrated vetronics is susceptible to security attacks, which may lead to system and, or mission failures.

Recent events have shown that there are several vulnerabilities in modern-day military platforms. A key logger was found in the base station cockpits of the Predator and Reaper unmanned aerial vehicles (UAVs) [4]. The key logger computer virus logged key strokes of pilots as they steered the UAVs remotely through Afghanistan and other war zones. In this case, the virus was a key logger, but there could be cases in the future where similar viruses with a reactive nature could be used to cause an accident or mission failure. Another incident occurred when a stealth drone was landed inside hostile territory by exploiting its navigational weakness. An external jamming/spoofing attack was carried out by the enemy, forcing the UAV into autopilot and making the drone land on its own in enemy territory [5]. Thus, these events identify a major security problem in the current and future military vetronics architectures. Plausible attacks could originate from an internal source as described by Shachtman [4] or external to the vehicle through NEC or other means such as on-board diagnostics [6].

Traditional security approach is based on the fortress model of security. It relies on the assumption that the system that is protected would not have a successful intrusion and the intruder is external to the system. However, there is a need for the evolution of this approach. It is vital to consider security which can not only protect but also detect and recover from intrusions in case the security protection mechanisms are breached. Survivability is the ability of a system to complete its mission in a timely manner, in presence of attacks, failures or accidents [7]. It focuses on preserving essential services in environments, even when systems in such environments are compromised. It is important to note that it is not any particular system or sub-system that must survive; it is the mission that must survive.

The remaining contents of this paper are as follows. Section 2 describes related work in the field of security within vehicle networks. Section 3 explains the concept of survivability and its application in vetronics and classifies threats in order to build a survivable vetronics architecture framework. Section 4 presents vetronics survivability as a case study using an example safety-critical DbW sub-system and derives a novel architecture framework. Section 5 states the conclusion and future work.

In the last 5years, a lot of research has been done in security-related issues within vehicle networks. Nolte et al. [8] provide an overview of the current and future automotive technologies and describe the need for interconnection of variety of in-vehicle networks in the commercial automotive environment in order to support future automotive systems. Wolf et al. [9] discuss security vulnerabilities of in-vehicle network protocols such as FlexRay and CAN. The authors explain that the lack of security can affect safety and describe the need for controller authentication and gateway firewalls for in-vehicle networks. Nilsson et al. [10] classify vehicle functional domains based on their safety and security characteristics. The authors analyse cyber-attack introduced by enabling wireless communication to the vehicle. Larson et al. [11] describe possible security issues to the in-vehicle network by allowing wireless communication to the vehicle; in the military sense, the wireless communication could be through NEC. The authors also describe a need for multi-layered defence-in-depth security approach consisting of protection, detection, deflection, countermeasures and recovery. The recovery technique mentioned is used to trace a security attack. In this work, maintaining the services of integrated vetronics despite an attack is used as recovery. Kleberger et al. [12] identify the lack of security and weak authentication as security issues within the in-vehicle networks and establish that the threats to the in-vehicle networks are due to links with the outside world.

Nilsson et al. [13] demonstrated a variety of cyber-attacks on the automotive communication protocol CAN. The authors describe the need for layered security approach consisting of prevention, detection, countermeasures and recovery for future in-vehicle networks. Nilsson et al. [14] have evaluated the ability of FlexRay protocol to withstand a cyber-attack and describe certain attacker actions. In this paper, inspiration is taken from the attacker model described in Nilsson et al. [14] and used it to classify the threats further. Hoppe et al. [15] demonstrate attack scenarios on electronic throttle control system and power window system of a modern automobile and illustrate how an attacker can initiate an actual attack but do not provide any approach to mitigate the threats. Pretschner et al. [16] explain that unauthorized tuning of code must be prohibited or at-least detectable and realize that susceptibility of in-vehicle networks from cyber-attacks due to connections with the outside world.

Hoppe et al. [17] implement a network-based intrusion detection system on CAN and describe a means of acoustic, visual or haptic notification of detected intrusions. However, this approach of intrusion notification and response has safety implications which need to be addressed. Muter et al. [18] implement an entropy-based anomaly intrusion detection system on CAN of a modern automobile. The authors describe various attack scenarios and evaluate detection of these attacks but do not specify intrusion response techniques. Larson et al. [19] discuss the implementation of host-based intrusion detection systems for individual electronic control units (ECUs) within the in-vehicle network. ECUs operate in resource constraint environments, and implementing a host-based intrusion system does not satisfy the needs of node authentication.

Bogdanov et al. [20] present security solutions for in-vehicle networks based on customized security controllers and trusted platform modules. Security controllers and TPMs might provide appropriate level of security however; their computational performance is slow compared to the needs of safety-critical real-time communications. Wollinger et al. [21] describe the implementation of cryptographic algorithms on embedded systems. The authors provide performance analysis of symmetric key and asymmetric key algorithms on embedded systems such as digital signal processing boards. The authors conclude that embedded system security is vital and feasible for future applications. Hayat et al. [22] describe the UK MOD's drive towards NEC and its impact on maintaining the conventional information security triangle of confidentiality, integrity and availability. The author describes that in the NEC environment military communication and information systems are vulnerable to cyber-attacks. The same level of threat could be assumed for NEC vehicles with vetronics infrastructures in the system-of-systems environment.

In some vehicle environments, for example, future military vetronics, which could be heavily based on vetronics integration, data classification and information sharing (NEC), it is a challenge to achieve a completely secure system. Despite best efforts, new ways are being derived to counteract these measures, thus posing safety risk to the crew and completion of the military mission. The notion of survivability takes into account system behaviour in presence of attacks, faults and failures. It can be expressed as the ability to handle the effects of an attack and adjust the system accordingly, unlike traditional security techniques that rely on excluding the possibility of intrusion.

In Deshpande et al. [23], the concept of survivability was applied to integrated vetronics, requirements, and a top level architecture for vetronics survivability was presented. In this paper, further analysis of the top level architecture was carried out to present a novel architecture framework for survivable vetronics architectures.

Recall from Section 1 that survivability is the ability of a system to complete its mission in a timely manner in presence of attacks, failures or accidents. Survivability in vetronics architectures can be achieved by four main mechanisms. These are resistance, recognition, recovery and evolutionary and adaptive mechanisms (EAM), respectively. Resistance is the ability of the system to protect against attacks and includes classical security techniques to provide integrity, authentication and confidentiality. Recognition is the ability of the system to detect attacks and intrusions. Recovery is the ability of the system to maintain essential services and involves fault tolerance. EAM involves strategies to improve vetronics survivability based on knowledge gained from intrusions [24].

Reliable system survivability requires accurate understanding of the system's threat environment and the impact of that environment on system operations. Intrusion scenarios for vetronics architectures using attack trees are discussed by Deshpande et al. [23], and requirements are identified. These scenarios identified plausible sources of cyber-attacks. Each attack scenario is a threat and has a behaviour or occurrence of some sort. Example attack scenarios are classified in order to determine the impact of threat, direct recovery strategies and provide analysis required for architecture design of vetronics survivability. The classification of threats involves the following steps [25]. A stimulus is a state that must be examined when it arrives at a system. The source of the stimulus is the essence that produced the stimulus. Environment is the situation under which the instigation occurs. The target of attack is the affected functionality of the system. Response is the desired reaction to prevent the exploitation by the stimulus and response measure is the restraint that must be fulfilled by the response.


                           
                              
                                 •
                                 Stimulus: malicious/corrupt data sent from one node to other

Source of the stimulus: malicious firmware/application software, communication error

Environment: vehicle is operational/on a mission

Target of attack: vehicle capability, for example, DbW functionality, safety-critical protocol

Response: integrity of messages, authentication of nodes

Response measure: implementing security on safety-critical and deterministic sub-systems has resource and time constraints.


                           
                              
                                 •
                                 Stimulus: node produces messages at a high rate (flood attack)

Source of the stimulus: unauthorized access to the node

Environment: vehicle operational/on a mission

Target of attack: vehicle capability, network protocols

Response: detection of unauthorized access, blocking unauthorized access

Response measure: implementation of in-vehicle intrusion detection, reduction of false positives, resource and time constraints

The above-mentioned scenarios are basic examples, and plenty of scenarios could be derived based on the actions of attackers. Characterizing all the scenarios is beyond the scope of this paper. These example scenarios are used to give an idea of the effect of attacker action and possible approach that could be developed to prevent and recover from such actions.

Use case scenarios are utilized to construct a view of the system and derive how the system is used in the global sense. In terms of vetronics survivability, three kinds of actors are considered in the use case that interacts with the vehicle or the vetronics. The three kinds of actors are, driver, crew and maintainer. Fig. 2
                         illustrates a use case scenario for the driver, crew and maintainer of the vehicle. The driver starts the vehicle, drives and turns it off. The crew could use the above use case for intrusions detected on deterministic or non-deterministic networks since any delay in re-configuring the capability to recovery will not affect the safety of the vehicle. For safety-critical sub-systems, the recovery capability needs to be embedded in the communications protocol as any delay in the recovery measures could affect the safety of the platform and the crew. In the third case, the maintainer applies signature updates to the recognition mechanism.

In order to derive a vetronics survivability architecture framework, safety-critical DbW sub-system consisting of steer-by-wire (SbW), throttle-by-wire (TbW) and brake-by-wire (Bbw) is used as a case study. Fig. 3
                      shows an example of a safety-critical network. Nodes of each DbW sub-systems are connected to the safety-critical network bus. Safety-critical networks are usually broadcast networks, which normally use time division multiple access schemes. Each node has an allocated time slot and sends the data packet onto the bus within that time slot. This data packet is broadcasted to all the other nodes connected onto the bus [26]. In typical integrated vetronics architecture, the DbW sub-system would be connected to other sub-systems using a gateway and backbone network.

The survivability protection mechanism ensures that the system is able to protect itself against malicious attacks [24]. The attacks can be well-planned intrusion attempts to disrupt the safety-critical network that could affect the safety of the crew and completion of the mission. The presence of a protection mechanism is vital during the penetration and exploration phase of an electronic attack and thus can deter the ability of an intruder and prevent the system from being exploited.

The software architecture of an ECU consists of software components that include real-time operating system (RTOS), network control, sensor control, actuator control and on-board and off-board Health Usage Monitoring Systems (HUMS). The RTOS handles the scheduling of the software tasks. Sensor and actuator control components control the sensors and the actuators, respectively. The safety-critical bus is managed by network control component that enables communication with other ECUs. The required functionality for DbW system, for example, steering, is implemented within the application control component. The application control uses the RTOS, which performs the scheduling with sensors, actuators and also the communication with other ECUs. The on-board and off-board HUMS components collect data for HUMS.

The current ECU software architecture can benefit with the security framework provided by the protection mechanism. The network control component that communicates with other nodes using embedded wired control protocols such as time-triggered protocol (TTP), FlexRay and MilCAN do not have any provision for security such as authentication [27]. TTP supports message sender identification; however, an additional effort by the adversary can masquerade the node. Error detection techniques have been incorporated in these embedded wired control protocols; however, research has proven that these techniques do not prevent a malicious intruder from performing masquerade or replay attacks on a node. The intruder can perform masquerade attacks by changing identifier field and recalculating error checking codes [27]. Security attacks on the individual node can affect the safety. Incorporating security policies on individual nodes can satisfy the security requirements discussed in refs. [1,9,23]. Fig. 4
                         below shows the proposed ECU software architecture enhanced with security capabilities.

The crypto module in individual node must contain a security framework or a set of security libraries. These security libraries consisting of variety of cryptographic algorithms could be used by the application software, underlying network control and on-board and off-board HUMS to provide the security capabilities of authentication, authorisation, confidentiality and integrity. Fig. 5
                         below shows a data flow diagram for the crypto module.


                        Fig. 5 considers crypto module as a black box and shows data flowing in and out of the crypto module. For example, data sent between nodes by the network control software of the node could use the crypto module to attach security information with the message in order to provide integrity. This security information can also allow detection of malformed and dropped packets. The on-board and off-board HUMS units will use the crypto module to prevent unauthorized access.

Gateways allow bridging of vetronics networks and offer more flexibility and integration by relaying the information flow between different bus systems. Currently, there is no protection mechanism on the gateway. The gateway has interfaces for the interconnecting networks. The current gateway software architecture does not have any provisions for security and cryptographic techniques. Fig. 6
                         below shows the software architecture of the gateway with the proposed crypto module.

Data are passed from one network to the other by the router, and the network management block does the scheduling for different networks. Gateways are crucial in the operation of various capabilities within the platform. Hence, it is vital to have a protection mechanism at the gateway to verify the integrity of messages passing from one network to other. In addition, a crypto module at the individual node and the gateway would allow authentication of nodes with the gateway using digital signature techniques, combination of asymmetric and symmetric cryptographic algorithms [9] or by authentication techniques discussed in refs. [27,28], thus preventing a crew or the maintainer who has physical access to the vehicle from installing unauthorised software on the vehicle's ECU. Only digitally signed OEM software could be installed on the ECU. The following sequence of activities is described as an example when combinations of symmetric and asymmetric keys are used. The activities occur between, when the driver starts the vehicle and the engine starts running or when the vehicle is ready to move.
                           
                              •
                              The driver starts the vehicle.

Each individual ECU in the safety-critical network generates its public and private key pair.

The gateway also generates a public and private key pair.

The ECUs send their public keys to the gateway.

The gateway stores the public keys of all the ECUs.

The gateway sends its public key to all the nodes within the network.

The gateway also generates a symmetric key pair that will be used for message authentication.

The gateway distributes this symmetric key pair to the individual nodes by encrypting it using the nodes public keys and signing it with gateway's public key. The gateway attaches its signature on the encrypted data so that nodes understand that the information received is genuine and is coming from the gateway.

The nodes decrypt this symmetric key using their own private key and also verify the signature using gateway's public key.

The nodes then use the symmetric key pair to encrypt the message. For example, in a safety-critical network, the node would encrypt the message in every TDMA cycle using the symmetric key pairs.

The key distribution process would then be initialised at the vehicle start-up.


                        Fig. 7
                         shows the sequence of activities undertaken by the nodes and the gateway in a safety-critical network to achieve the security requirements.

This process of using public-key infrastructure to distribute symmetric keys has some possible risks. The problem of key-management is a research area in itself. Key generation, distribution and storage must be done securely. An attacker getting an access to the symmetric key pair can authenticate itself. As a result, public-key infrastructure is used to distribute the symmetric key pair.

Public-key cryptography is more secure than symmetric key cryptography. However, there are limitations with respect to resources and latency in the automotive environment. There are various asymmetric key cryptography algorithms such as elliptic curve cryptography that could be utilized using the above-mentioned security architecture to satisfy the latency and resource constraints

The above-mentioned software architecture can also be deployed in deterministic and non-deterministic networks. The algorithms and cryptographic techniques used, however, will differ.

Recognition is the ability of the system to detect attacks [24]. Vetronics survivability can only be achieved if attacks/intrusions that by-pass the protection mechanism are detected. Hence, recognition forms a vital aspect of survivability. In vetronics, the recognition system refers to intrusion detection systems (IDS) that could be used in the vetronics environment to detect attacks.

Intrusion detection systems can be classified into host-based and network-based IDS. Host-based IDS monitor the behaviour of a single host for suspicious activity. In the case of platform vetronics survivability, the host-based IDS would monitor a single ECU or a gateway. The attacks are detected by monitoring modifications to the node's processes and configurations. Network-based IDS monitor the network traffic. A traditional network-based IDS consists of the following components [29]:
                           
                              •
                              Sensor: A sensor monitors the network traffic. In automotive environment, an IDS sensor could be a software that checks data, which is broadcasted throughout the network.

Management server: A management server in traditional IDS is a centralized device that receives and manages the information from the sensor.

Database server: This is a database to store events detected by sensors or management servers.

Console: Console provides an interface for users and administrators of traditional enterprise IDS.

Intrusion detection systems use a variety of techniques to detect attacks. Signature/rule-based detection techniques have a signature database for certain kinds of attacks and intrusions. The events in the network are compared with the signature database to detect attacks. The anomaly detection technique has a set of models for normal operation of the sub-system/network. Any events deviating from this normal behaviour are considered as attacks by this technique. Challenges related to application of intrusion detection systems in vetronics are discussed by Hoppe et al. [17]. Intrusion detection sensors that could be used in the vetronics environment are discussed by Muter et al. [30].

When an intrusion detection system is applied in automotive safety-critical network, it has certain components irrespective of the detection techniques and the kind of intrusion sensors used:
                           
                              •
                              Sensors: Intrusion sensors are software components that are connected to the network to monitor data.

Repository: Database for signatures. If anomaly detection technique is used, then the repository contains models of normal behaviour of the sub-system/network. In case of signature detection, the repository contains threat signatures.

Session log: Logging capabilities are required to log details of detected intrusions.

Recovery: Response to a detected intrusion is required especially if an intrusion is detected on a safety-critical network. An example of recovery procedure for a safety-critical DbW network would be to operate the sub-system in a fail-operational safe mode.

Main application: The main application blocks are concerned with scheduling and download of new signatures in the repository.


                        Fig. 8
                         shows the proposed architecture for vetronics survivability recognition mechanism

The gateway connects the safety-critical network to the deterministic/non-deterministic backbone networks. In order to make the messages available to the backbone, the gateway integrates the safety-critical and backbone networks by having their respective network interfaces. The router routes the packet from one network to the other.

The intrusion detection system is employed at the gateway. The sensors check the data, which is going into the gateway using the intrusion detection signatures. Since the safety-critical network is crucial, the sensor monitoring the safety-critical network has the priority over any other backbone traffic. In case a sensor detects an intrusion or an attack, it initiates the recovery process for the concerned network. The same vetronics survivability intrusion detection architecture can be applied for deterministic and non-deterministic sub-systems. The only difference being the type of sensors and the intrusion detection approach used to detect attacks.

The sequence of activities for an intrusion detection system is as follows and is also illustrated in Fig. 9
                        .
                           
                              •
                              Data are received at the safety-critical network interface of the gateway during each TDMA slot.

The sensor application monitors the data using threat signatures from the repository (the scheduling is done by the main application).

If an attack is not detected, then the packet is forwarded to the router. If the packet is not requested by the router, then the packet is discarded.

If an attack is detected, then the main application initiates a recovery process.

A log is recorded, which can be used by the evolutionary and adaptive mechanism to enhance the security and recognition capabilities.

The concept of survivability defines recovery as the ability of the system to maintain its essential services in case of intrusions, failures or accidents [24]. Fault tolerance is a major requirement for survivability recovery mechanism. For a safety-critical sub-system to be survivable, it must not only detect intrusions but also be tolerant to faults and failures. Fault tolerance can be briefly distinguished into three operational states. A component that tolerates a failure and is still operational is termed as fail operational. Fail safe is where the component reaches a safe state after one or several failures, and fail silent is where the component displays quiet behaviour after one/multiple failures and does not affect other components.

DbW systems need to be fail operational [31]. A fault, failure or an intrusion must not lead to complete system failure. In order for the recovery mechanism to be fail operational, active redundancy must be used. Redundant nodes and communication bus systems need to make active decisions during operation in order to be synchronized. Redundancy can be utilised in different ways to achieve fault tolerance. A pair of fail-silent units (FSUs) is connected to a redundant safety-critical bus forming a fault-tolerant unit (FTU) or using triple modular redundancy technique where three nodes are connected to a voting mechanism and the output of these three nodes is compared. Redundant bus systems are also used using triple-modular redundancy. However, using this technique requires triplicate hardware and hence adds to the cost [31].

The use of FTU comprising of redundant fail-silent nodes suits the vetronics survivability recovery architecture. The FTU architecture is also supported by the safety-critical communication protocols (for example, TTP, FlexRay) [32]. FTUs are assigned specific part of the overall functionality and arranged on the safety-critical bus to achieve a fault-tolerant sub-system. For example, a single FTU can be assigned the functionality of steering wheel node/ECU in a DbW sub-system, and another FTU can be assigned the functionality of the steering actuator node/ECU and both the ECUs connected to the safety-critical bus. The FTU property at individual nodes can be extended to more than two FSUs. In case more than two FSUs are used, then a voting mechanism will be required in order to mask certain failures, for example, value failures.

In order for the FTU to function correctly, a fail-silent property is required on the communication (safety-critical) network. Fig. 10
                         below shows vetronics survivability recovery architecture for an example safety-critical DbW sub-system. As discussed above, each FTU can be assigned a specific functionality, for example, FTU1 can be assigned the functionality of steering wheel ECU, and FTU2 can be assigned the functionality of steering actuator ECU. The sensors and actuators are connected to the host within the FTUs.

The safety-critical communication network normally uses time-triggered communication in which FTUs access the network in individual time slot. Time-triggered communication protocols allow the separation of host's data processing and communication tasks of the FTU. The separation of communication activities from the hosts prevents any faults within the host propagating to the network interface and provides protection against babbling-idiot failures.

Time-triggered communication protocols allow the reintegration and initialisation of node in case of node failure. Redundancy along with fault-tolerant properties of safety-critical network could be utilised to direct an intrusion response from the gateway, preventing an inflicted node from broadcasting on the network or turning off the host completely. Redundancy would ensure that DbW functionality is still operational in a safe mode until the affected node is reconfigured. Recovery for deterministic and non-deterministic sub-systems could be carried out after the intrusion has been detected and notified to the crew.

The evolutionary and adaptive mechanism enhances the vetronics survivability recognition mechanisms [23,24]. The enhancement of vetronics survivability IDS is essential in maintaining the capabilities of the sub-system. The proposed evolutionary and adaptive mechanism needs to have the role of vetronics survivability management system.

This role is achieved by designing the evolutionary and adaptive mechanism architecture that allows update of intrusion detection capabilities at the system of systems level. This approach provides benefits in updating the entire fleet of vehicles and thus enhancing the capability of protecting and recognising attacks for the entire fleet in the event of single vehicle detects an intrusion. The evolutionary and adaptive mechanism must be present at a secure location on the platform. It also needs to have access to all the networks (SC/D/ND) and devices (Gateways) in order to enhance intrusion detection capabilities. Fig. 11
                         shows an example vetronics architecture with the evolutionary and adaptive mechanism. The vetronics architecture consists of SC, D and ND networks. The survivability protection mechanism is shown for nodes at the sub-system level. The recognition mechanism with IDS is on the gateways of SC, D and ND networks. The SC, D and ND networks are interconnected using a backbone network. The vetronics architecture also has a wireless gateway for links and exchange of data with the outside world.

The evolutionary and adaptive mechanism architecture core components include receiving intrusion and recovery logs from the vetronics survivability recognition mechanism. This allows determining the kinds of intrusions detected and the number of ECUs available to maintain the essential services after the recovery process is initiated. The architecture must have provisions for analysing the threat characteristics in determining the cause of attack and requesting new signature updates or anomaly detection models for the recognition capability. These updates can be then downloaded on the vehicle through a secured wireless links. This allows secure download of updates. The application of the signature updates is achieved by re-configuring the gateways. The repository can hold new firmware for nodes/ECU which can be utilised to enhance the recovery mechanism by re-configuration of nodes to maintain essential capability. The evolutionary and adaptive mechanism could also have a human machine interface (HMI) so that a maintainer or the crew are able to re-configure nodes and gateways. The sequence of activities for the evolutionary and adaptive mechanism architecture is as follows:
                           
                              •
                              The crew/maintainer checks the recognition and the recovery log.

The crew also checks the security threat analysis and requests for signature updates and firmware for nodes/ECUs.

The downloaded signature updates are stored in the repository.

The crew then re-configures gateways and applies security updates.

The crew also checks affected nodes/ECUs and checks for firmware in the repository.

Reconfiguration of nodes/ECUs through flashing new firmware on the repository.

Once this process is completed, the crew then initialises the security mechanism using the sequence shown in Fig. 12
                        .

The application of survivability techniques in the vetronics environment is vital. It provides an approach to prepare the platform's vetronic architectures against growing threats of cyber warfare. At present, there are no resistance or recognition strategies employed. The use of survivability principles allows having a preventive and reactive mechanism for cyber-attacks. The recovery mechanism can be utilized with the existing safety-critical network architectures to provide reconfiguration capabilities in case of intrusions and faults.

Current safety standards such as the Defence Standard (Def-Stan) 00-56 [33], functional safety standard such as the International Electro-technical Commission (IEC) 61508 [34] and the automotive safety standard International Standards Organisation (ISO) 26262 [35] do not discuss security or cyber-threats. Security standards such as ISO 27001 Information Security Management [36] and ISO 27002 Information Technology–Security Techniques–Code of Practice for Information Security Management [37] do not discuss safety. The current UK MOD Defence Standard 23-09 Generic Vehicle Architecture (GVA) describes generic system security requirements for GVA-based data infrastructure. The standard also lists security aspects such as data integrity and authentication to be considered when designing/implementing military vetronics systems. However, the system security requirements are not considered in co-ordination with system safety requirements. In addition, for adherence to GVA, military vetronics contractors designing/implementing systems relating to information/system security must get the systems accredited by the Defence Security Accreditation Service. The Defence Security and Accreditation Service list security requirements and policy guidance only for the information and system security. The security accreditation is not considered along with system safety. Applying survivable systems principles in vetronics allows bridging the gap between safety and security. The survivability framework aims to enhance and direct the current research for GVA system security aspects to derive safety and security requirements. For example, the classification of threats discussed in Section 3.1 aids in identifying security and safety requirements for safety-critical systems and the vetronics survivability architecture provides suitable mitigation strategies for safety and security hazards, risks and attacks.

Recent developments in standardisation for North Atlantic Treaty Organisation (NATO) military vehicles through NATO Generic Vehicle Architecture (NGVA) [38] and European Defence Agency (EDA) funded Land Vehicle Open Systems Architecture (LAVOSAR) [39] are considering system safety and security requirements in coordination and not in isolation. The survivability framework is used as a case study to augment the NGVA Safety Allied Publication (AEP) (under development) in identifying and bridging the gaps in design and development of systems that involve overlap of safety, security and land vehicle (vetronics) architecture design. The AEP under development aims to provide guidelines for system designers and integrators for safety-critical applications that could be affected by security. Fig. 13
                      below describes the area of consideration for the UK, EU and NATO defence standards. Note that the VRC actively contributes and participates towards the development and enhancements of these standards.

There is also a notion that too much security can affect safety. For example, use of cryptographic controllers for safety-critical systems may not cope with the real-time needs affecting the safety of the vehicle. Survivable systems principles in vetronics cover an umbrella of topics including safety and security. The current safety and security standards do not cover aspects that overlap safety and security. This is vital considering network enabled capability in the military vetronics domain and the fact that the lack of security can impact on the safety of the vehicle, crew and completion of military mission.

In the civilian automotive domain, the advent of Automotive Open System Architecture (AUTOSAR), which is a consortium of automotive manufacturers and suppliers, provides a standardised approach to the ECU architecture [40]. The standardised architecture is further expanded to include safety and security applications. However, the security aspects of AUTOSAR are limited to secure flashing of ECU software and preventing unauthorised access for diagnosis. It does not consider security attacks in real time, which could be possible from having Internet connection to the vehicle and from the concepts of connected car. The concept discussed in this paper can enhance AUTOSAR to include mechanisms to protect, detect and recover from real-time threats. Also, the evolutionary and adaptive mechanism discussed in Section 4.4 could be incorporated in the standard to provide secure delivery of cryptographic updates.

The vetronics survivability framework can also aid in safety-security certification of systems. Current practice involves safety certification and security accreditation separately. The recent research projects such as SafSec [41] discuss the benefits of adopting methodologies and designing frameworks that can help realise security requirements in conjunction with safety requirements. The vetronics survivability framework can derive safety and security requirements, which provide the safety and security argumentation, and the implementation of the vetronics survivability architecture provides the evidence required for the argumentation to support the certification.

In this paper, a novel architectural framework for vetronics survivability is discussed. Security attacks on vehicles are increasing due to interconnection of various vetronics networks and also links with the wireless world. The threats arising from such interconnections are inevitable and could affect the safety of the crew and completion of the military mission. The vetronics survivability architectural framework presents a possible approach that could be utilised not only in the military sense but also in commercial automotive environment where a whole fleet of vehicles from a manufacturer receives security and firmware updates in case of any detected intrusions. The highlight of this framework is that it presents an ability to update the cryptographic services throughout the life cycle of the vehicle. A typical military vehicle has a life of 20–30years and maintaining the cryptographic services, threat signatures, for such a long duration is a challenge. Vetronics survivability architectural framework provides a solution to this challenge.

A technology-independent way of applying the concept of survivability in vetronics is presented. The components of each of the vetronics survivability mechanisms are identified and their behaviour is analysed. In-vehicle network technologies such as CAN, FlexRay and TTP/C will need to be analysed along with specific algorithms to achieve the security objectives of authentication, authorisation, availability, confidentiality and integrity, and their feasibility would need to be studied for their application in the vetronics survivability protection mechanism. The application intrusion detection techniques and intrusion response (recovery) would be designed based on the safety-critical network technology used. The evolutionary and adaptive mechanism could utilise an HMI to show the crew real-time intrusion logs, reconfiguration information and a console to download and apply specific updates.

The next step would be to identify specific technologies and simulate the vetronics survivability framework to show the proof of concept.

@&#ACKNOWLEDGEMENTS@&#

This work is supported by the UK Ministry of Defence. The VRC actively contributes towards the development of standards such as the UK GVA, NATO GVA and EDA funded LAVOSAR.

@&#REFERENCES@&#

