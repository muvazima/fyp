@&#MAIN-TITLE@&#Deformable part inspection using a spring–mass system

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A spring–mass system is proposed for modeling deformation of shell parts.


                        
                        
                           
                           An expression to calculate the stiffness of the bending springs is presented.


                        
                        
                           
                           Radial basis functions are used to set the initial value for optimization.


                        
                        
                           
                           Radial basis functions are applied to speed up the calculation of deformations.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Spring–mass model

Physics based deformation

Deformable part inspection

@&#ABSTRACT@&#


               
               
                  In order to inspect deformable parts, recent works use virtual deformation on a digitized version of a real-part to bring the part model back to its nominal shape. This simulation mimics the real process called fixturing, which is normally used by the manufacturer to bring back the part into its nominal shape once installed. To perform such virtual deformation Finite Element Methods (FEMs) are used in order to meet the precision requirements of the inspection process. This paper presents a method based on a spring–mass system, whose formulation is much simpler than the FEM, which allows the calculation of deformations of shell type parts with accuracy comparable to FEM. Furthermore, due to the simplicity in its formulation the algorithm can be implemented more easily than the FEM. The system is composed of two types of springs: one type models membrane behavior of the part’s mesh model and the second type models the flexion behavior between each mesh elements. We show that by applying the proposed mass-spring model, it is possible to reduce the calculation time by 80% over standard FEM calculation opening the door to real-time inspection.
               
            

@&#INTRODUCTION@&#

Today’s 3D part inspection commercial systems, operate under the assumption that the shape of the inspected parts remains constant when they are attached to the final assembly  [1,2]. But in reality, there are many parts whose shape changes until they are assembled. Since the nominal part is defined according to its position after assembly, in order to perform an adequate inspection, it is necessary to fixture the parts on a rigid support that simulate the assembly process  [3]. The assembly process itself causes a deformation to the part due to the application of forces and restrictions at the fixation points. Without this fixturing process an acceptable part may be deemed out of tolerance as a result of a normal rigid inspection process.

In industry today, typically a worker takes a part from a lot, install it on a jig, performs the measurements, and finally dismounts the part from the rigid support. These tasks are usually carried out manually making it impossible to automate. In order to avoid human intervention during the inspection of deformable parts, we propose a method that does not require the attachment of the part. This method is based on the comparison of the deformed CAD model against the measured data model. The deformation of the CAD model is obtained by applying displacements from its fixation points to the corresponding points in the data model. In that sense, it is essential that the applied simulated deformation is based on real-physics principles. In a previous work  [4], a Finite Element Method (FEM) was used to model the virtual model deformation of the part under inspection in order to approximate the actual physical deformation. Even though an FEM trained interpolation method using Radial Basis Functions (RBFs) was developed to accelerate the calculation of the deformations, FEM does not have an easy mathematical formulation and its implementation is complex. For these reasons, and because of its computational efficiency a spring–mass models is proposed instead of FEM  [5,6].

The proposed method has three stages and is based on the application of a spring–mass system that simulate deformations on a polygonal mesh of the part’s CAD model. The first stage is intended to reduce the initial mesh size of the CAD model in order to accelerate the deformation calculations. The second stage applies an optimization process to calculate the deformation on the reduced polygonal mesh. In the last stage, an interpolation using RBFs is used to deform the full mesh model.

The rest of the paper is organized as follows. The next section presents a brief discussion of some recent works related to spring–mass systems used for modeling deformation on flexible objects. Section  3 describes the proposed inspection method. Section  4 describes the procedure to calculate the deformations. Section  5 presents the results of the tests on several parts and its corresponding analysis. Finally, Section  6 concludes and indicates some possibilities for future work.

Models based on spring–mass systems are probably the simplest and easiest models to implement among all deformable models one can find in the literature  [7,8]. Instead of applying a discretization to a continuous media, one can discretize the deformation model as a set of punctual masses connected to each other by reticule-shaped massless springs.

Spring–mass systems have been widely used to simulate deformation of various real-world objects. In some cases, the deformations obtained using spring–mass system are not sufficiently precise  [9,10], therefore, other methods need to be used. In other cases, those methods are the best option as they offer the highest simplicity in its formulation and implementation and much more computationally efficient than its FEM counterpart. Spring–mass models have been implemented successfully to simulate the dynamic behavior of deformable objects in numerous applications  [11–14].

Most of the applications of the spring–mass systems one can find in the literature include: simulation of soft tissues for surgical training  [15,16], facial animation  [17], and simulation of clothing  [18,19,5]. The following is a brief review of the recent works that used spring–mass systems to model deformation of non-rigid objects in different applications.

Recent developments in Minimally Invasive Surgery (MIS) techniques in which surgical procedures are carried out indirectly through the use of endoscopic cameras and laparoscopes. MIS procedures have been shown to reduce post-operative complications and have improved patient recovery time significantly. Because of the extreme difficulties of indirect manipulations, new training techniques have been developed based on virtual reality. This virtual reality trainer requires the development of real-time simulation software in which the behavior of organs is done realistically. Arnab and Raja proposed a new spring–mass system to simulate surface deformation of soft volumetric objects i.e. the breast, taking into account the characteristics of volumetric deformation  [15] in a spring–mass framework. To achieve this, a new type of spring–mass model called volumetric spring was developed. Kawamura et al. applied a spring–mass-shock absorber model for dynamic simulation of organs in MIS surgery  [16]. Even though most of the work found in the literature is to simulate the deformation of soft-tissues, it has been also applied to the processing of medical images. In the work presented by Matuszewski et al. a spring–mass system is used to perform the non-rigid registration of medical images that represent both rigid and deformable structures  [20].

Other application in which spring–mass systems have been used is facial animation. Kahler et al. used a spring–mass with a layer model for dynamic simulation of the human face  [17]. The layers represent different tissues simulated such as: bone, muscle, and skin. The spring–mass system is used to unify the different layers of the model. In general, Vassilev and Spanlang proposed a spring–mass system to simulate deformable solids in real time  [21]. In this work, a new type of spring called supporting spring is introduced to guaranty volume preservation.

Another application in which significant advances have been made using spring models is clothing simulation. Ji et al. used a squared spring–mass mesh and introduced a new method to detect collisions in order to simulate the behavior of cloths when they get in touch with other solid objects or on itself  [18]. A similar technique was proposed by Yeung et al.  [19]. They used spring–mass meshes to model the flattening of surfaces that cover 3D objects. In addition, Bridson et al. used a model with spring–mass in which the folding of the fabric is taken into account  [5]. They define a folding energy between triangular elements to model sheets. A similar expression for the folding energy was developed in a work presented by Grinspun et al.  [6]. In their work, they propose a general form for thin objects such as fabrics, paper, or sheet metal.

In many applications spring–mass models are used to simulate the behavior of different real-world objects without the need to define the problem using continuous mechanics as with FEM. It can be applied where FEM simulation would be computationally unfeasible for real-time applications. In addition, its implementation is rather simple as well as its computational efficiency. Taking into consideration these advantages, the present work proposes a method to calculate deformations based on the use of spring–mass system. The model is used to calculate the deformation of flexible parts such as shell-type objects when they are fixed to a mechanical jig in order to be compared to a CAD model.

It is relevant to mention that one of the main difficulties of using spring–mass systems is to determine the model parameters such as weight of the punctual masses and the spring stiffness constants. In most cases an empirical determination of these parameters is performed. For example, Duysak et al. proposed a method based on neural networks to determine the spring stiffness and damping constants in a facial tissue simulation  [22]. Similarly, Lloyd et al. introduce a method to calculate the spring stiffness constants by using isotropic elastic models as a Ref.  [23]. Analytical expressions that allow the calculation of the stiffness constants are derived from equations describing the material behavior using FEM. Finally, San-Vicente et al. presented a method to determine the parameters of volumetric spring–mass systems made of cubic elements; those parameters are used to model biological tissues in interactive applications  [24]. The method is based on the adjustment of analytical expressions resulting from the behavior of testing models.

The present work takes into consideration two parameters in order to define the energy function of the system. The first one is the material thickness, which is represented as a parameter that affects the spring system uniformly. The second parameter is the one defined locally according to the geometry of the polygonal mesh. In order to introduce such parameters, an experimental analysis was performed to simulate the behavior of a simple system by using FEM.

This section describes the physical–mathematical model proposed to calculate the deformation of virtual models for part inspection. It assumes that the geometry of the parts is represented by a virtual model made of polygonal elements. The deformation modeling involves, initially, a discrete geometrical representation of the object, and then, the introduction of constraints and the physical laws that governs deformation.

As for real elastic deformation, virtual objects must store potential energy in its own structure as a result of deformation. We assume that the deformation energy is stored in a spring system associated to the polygonal mesh that represents the geometry of the object. Taking into account that the equilibrium position of the system corresponds to minimum energy, the calculation of the positions of the nodes in the deformed mesh is obtained using an iterative energy minimization algorithm.

A model is built to simulate the deformation of shell-type parts whose geometry can be represented approximately by a surface in a three-dimensional space. It is assumed that the inspected objects are made of homogeneous and isotropic materials.

For simplicity, the polygonal model that represents the object is considered to be composed only by triangular elements. In order to model the deformation of the polygonal surface, two types of springs are defined as well as a structure of articulations. In this model, it is considered that there is a spring that joins together the two nodes of the polygonal model. This set of springs is located on the same polygonal surface. We also consider that a spring is connected to the opposite corners of each pair of adjacent faces that share a common edge. This second set of springs is not part of the geometry of the polygonal model.

Let 
                           
                              {
                              
                                 
                                    f
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    2
                                 
                              
                              }
                           
                         be a pair of adjacent triangular faces connected to each other as an articulation, 
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              }
                           
                         the nodes of the common edge that act as the articulation and 
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              }
                           
                         the opposite nodes (see Fig. 1
                        ). The first type of spring is defined by the connections between the pairs of nodes 
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              }
                           
                           ,
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              }
                           
                           ,
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                              }
                           
                           ,
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              }
                           
                         and 
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              }
                           
                        . The second type of spring is represented by a connection between nodes 
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              }
                           
                         which are the opposite nodes of the articulation.


                        Fig. 1 shows an articulation formed by two faces. Each of the edges of the triangular faces represents a spring, so each of the faces is elastic and therefore can be deformed on the same plane. In other words, each triangular element behaves as a membrane. The external spring between the opposite nodes of the articulation allows to model bending behavior for a two-faces system.

In the model, we assumed that for each spring in the model, the length change 
                           u
                         is directly proportional to the longitudinal force 
                           F
                         applied to the spring. This relationship called Hooke’s Law is expressed mathematically as the following: 
                           
                              (1)
                              
                                 F
                                 =
                                 k
                                 u
                                 ,
                              
                           
                         where is a proportionality constant 
                           k
                         and is called the spring’s stiffness constant. When we have real springs, the value of this constant can be calculated by using different experimental methods  [25,26]. Nevertheless, as in this case it is being dealt with a virtual spring model, this work proposes a simulated experiment using FEM from which a mathematical expression to determine the constant value of the model stiffness is put forward.

The energy of deformation 
                           E
                         stored in a spring that follows Hooke’s law (Eq. (1)) is expressed by: 
                           
                              (2)
                              
                                 E
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 k
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

Then, for a system made of 
                           n
                         linear springs, the total energy of the system 
                           
                              
                                 E
                              
                              
                                 T
                              
                           
                         is expressed by the sum of the individual springs, 
                           
                              (3)
                              
                                 
                                    
                                       E
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

Taking into account that the system is made by two types of springs, one associated to the membrane behavior of the polygonal mesh and the other one associated to the bending between polygonal faces, the stiffness constants are noted in a different way: 
                           
                              
                                 k
                              
                              
                                 m
                              
                           
                         for membrane springs and 
                           
                              
                                 k
                              
                              
                                 f
                              
                           
                         for bending springs. Separating the terms according to the stiffness constants, the energy is expressed by: 
                           
                              (4)
                              
                                 
                                    
                                       E
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       f
                                       ,
                                       j
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                         where 
                           i
                         and 
                           j
                         sub-indexes are for the membrane and the bending springs respectively.

Let 
                           
                              
                                 E
                              
                              
                                 m
                              
                           
                         be the term for the energy associated to the membrane behavior and 
                           
                              
                                 E
                              
                              
                                 f
                              
                           
                         be the term associated to the bending behavior, we have: 
                           
                              (5)
                              
                                 
                                    
                                       E
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       E
                                    
                                    
                                       m
                                    
                                 
                                 +
                                 
                                    
                                       E
                                    
                                    
                                       f
                                    
                                 
                                 .
                              
                           
                        
                     

Similarly to the work of Lloyd et al.  [23], in order to calculate the stiffness constant associated to the membrane behavior, a relation that depends linearly on the model’s thickness 
                              h
                            is proposed; that is: 
                              
                                 (6)
                                 
                                    
                                       
                                          k
                                       
                                       
                                          m
                                       
                                    
                                    =
                                    α
                                    h
                                    ,
                                 
                              
                            where 
                              α
                            is a constant of proportionality. Since it is assumed that the part has uniform thickness, the constant 
                              
                                 
                                    k
                                 
                                 
                                    m
                                 
                              
                            is the same for all membrane springs and, therefore, the energy of the membrane is expressed by: 
                              
                                 (7)
                                 
                                    
                                       
                                          E
                                       
                                       
                                          m
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          k
                                       
                                       
                                          m
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                 
                              
                            here, the sub-index 
                              i
                            indicates the 
                              i
                           th spring associated to the polygonal mesh.

In order to determine a mathematical expression to calculate the stiffness constant associated to the bending behavior an experiment was carried out using an FEM based simulator. A model made of two triangular shell-type elements was used in the experiment as illustrated in Fig. 2
                           . The thickness 
                              h
                           , the length of the common side 
                              b
                           , and the average length of the opposite sides before applying the deformation 
                              
                                 
                                    a
                                 
                                 
                                    ̃
                                 
                              
                           , were used as parameters of the model. A force 
                              
                                 F
                              
                            was applied at one end of the model while the other end was fixed. Constraints were imposed on the model’s nodes in order to give stability to the system.

Initially with the model parameters fixed, applying different values for 
                              
                                 F
                              
                            and calculating the displacement 
                              
                                 u
                              
                            which results in each case to be a linear relationship between the two variables, as expressed in Eq. (1). The stiffness constant associated with the bending 
                              
                                 
                                    k
                                 
                                 
                                    f
                                 
                              
                            can be calculated by the ratio 
                              
                                 ‖
                                 
                                    F
                                 
                                 ‖
                              
                              /
                              
                                 ‖
                                 
                                    u
                                 
                                 ‖
                              
                           . Then, we studied the variation of this ratio with respect to each of the model parameters. Each one of the parameters was taken as single variable while keeping constant the others. A quadratic dependence on 
                              h
                           , a linear dependence on 
                              b
                           , and a reverse linear dependence on 
                              
                                 
                                    a
                                 
                                 
                                    ̃
                                 
                              
                            were observed. This is expressed in the following equation: 
                              
                                 (8)
                                 
                                    
                                       
                                          k
                                       
                                       
                                          f
                                       
                                    
                                    =
                                    β
                                    
                                       
                                          h
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          b
                                       
                                       
                                          
                                             
                                                a
                                             
                                             
                                                ̃
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                            were 
                              β
                            is a proportionality constant. Since parameters 
                              
                                 
                                    a
                                 
                                 
                                    ̃
                                 
                              
                             and 
                              b
                            depend on the geometry of the triangular faces of the part, the value of the 
                              
                                 
                                    k
                                 
                                 
                                    f
                                 
                              
                            constant is calculated for each of the springs associated to the bending between faces.

Rewriting Eq. (4) with the expression for the membrane energy given by Eq. (7), we have: 
                              
                                 (9)
                                 
                                    
                                       
                                          E
                                       
                                       
                                          T
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       (
                                       
                                          
                                             k
                                          
                                          
                                             m
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                u
                                             
                                          
                                          
                                             i
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             k
                                          
                                          
                                             f
                                             ,
                                             j
                                          
                                       
                                       
                                          
                                             
                                                u
                                             
                                          
                                          
                                             j
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        

By defining 
                              
                                 
                                    k
                                 
                                 
                                    m
                                    f
                                    ,
                                    j
                                 
                              
                              =
                              
                                 
                                    k
                                 
                                 
                                    f
                                    ,
                                    j
                                 
                              
                              /
                              
                                 
                                    k
                                 
                                 
                                    m
                                 
                              
                            and absorbing the constants that result as a common factor one gets: 
                              
                                 (10)
                                 
                                    
                                       
                                          E
                                       
                                       
                                          T
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          
                                             u
                                          
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          k
                                       
                                       
                                          m
                                          f
                                          ,
                                          j
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                       
                                          2
                                       
                                    
                                    .
                                 
                              
                           
                        

When displacements are applied to some of the surface points of a real elastic object, this object becomes deformed in a specific way. From a physics perspective, this means that the points of the system adopt a configuration of minimum energy, which represents the elastic potential energy stored in the object due to its deformation. Taking into account this principle, the proposed method applies an optimization process to determine the configuration that presents the minimum value of the system’s energy function. Then, such configuration represents the node position on the deformed polygonal model.

As an example, let us consider a one-dimensional system made of two linear springs with stiffness constants 
                              
                                 {
                                 
                                    
                                       k
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       k
                                    
                                    
                                       2
                                    
                                 
                                 }
                              
                            and assembled as shown in Fig. 3
                           . The nodes are identified as 
                              
                                 {
                                 
                                    
                                       n
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       2
                                    
                                 
                                 }
                              
                           ; the 
                              
                                 {
                                 
                                    
                                       x
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 }
                              
                            positions represent the configuration when the system is idle, e.g. non-deformed. If 
                              
                                 
                                    n
                                 
                                 
                                    0
                                 
                              
                            remains fixed and a displacement 
                              
                                 
                                    Δ
                                 
                                 
                                    2
                                 
                              
                            is applied to the 
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                            node, then, the 
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                            node will move to the new 
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    ′
                                 
                              
                            position. Taking into account the restrictions 
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                            and 
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              +
                              
                                 
                                    Δ
                                 
                                 
                                    2
                                 
                              
                           , the deformed system becomes represented by a new configuration 
                              
                                 {
                                 
                                    
                                       x
                                    
                                    
                                       0
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       ′
                                    
                                 
                                 }
                              
                           , for which the minimum value of the system’s energy function is calculated.

In terms of deformations 
                              
                                 {
                                 
                                    
                                       u
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                                 }
                              
                           , the system’s energy function is expressed by: 
                              
                                 (11)
                                 
                                    E
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          k
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                       
                                          2
                                       
                                    
                                    .
                                 
                              
                           
                        

Taking into account the relationship between deformations and displacements 
                              
                                 {
                                 
                                    
                                       Δ
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       2
                                    
                                 
                                 }
                              
                            around the initial position of equilibrium we have: 
                              
                                 (12)
                                 
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          Δ
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          Δ
                                       
                                       
                                          2
                                       
                                    
                                    −
                                    
                                       
                                          Δ
                                       
                                       
                                          1
                                       
                                    
                                    .
                                 
                              
                           
                        

The energy function is rewritten as: 
                              
                                 (13)
                                 
                                    E
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       [
                                       
                                          (
                                          
                                             
                                                k
                                             
                                             
                                                1
                                             
                                          
                                          +
                                          
                                             
                                                k
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       
                                          
                                             Δ
                                          
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       −
                                       
                                          
                                             k
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             Δ
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             Δ
                                          
                                          
                                             1
                                          
                                       
                                       +
                                       
                                          
                                             k
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             Δ
                                          
                                          
                                             2
                                          
                                          
                                             2
                                          
                                       
                                       ]
                                    
                                    .
                                 
                              
                           
                        

Since the applied displacement 
                              
                                 
                                    Δ
                                 
                                 
                                    2
                                 
                              
                            is a constant, the energy is a quadratic function of the 
                              
                                 
                                    Δ
                                 
                                 
                                    1
                                 
                              
                            variable. The minimum value of this function 
                              
                                 
                                    E
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                            is the new equilibrium point 
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    ′
                                 
                              
                            of the 
                              
                                 
                                    n
                                 
                                 
                                    1
                                 
                              
                            node, which can be determined through a minimization process of the system’s energy function.

As shown in this example, starting from an equilibrium initial position and then applying a displacement to a point (or a set of points) of the system, such system adopts a new configuration of equilibrium to which the system’s energy value is minimum.

The deformation process is necessary to carry out the non-rigid alignment, and then a comparison, of the acquired data model against its CAD model. Such comparison determines if the real part meets the expected specifications defined in advance by engineering design considerations.

In order to simulate the deformation of a real part, the transformation applied to the virtual model needs to be a deformation based on physics. This section describes the proposed method to calculate the deformation of a CAD model of deformable parts; such method is based on the spring model described in the previous section. In summary, the process inspection method is composed of three stages: in the first stage, a polygon reduction is applied to the initial part’s CAD mesh in order to reduce the computational burden; the second phase consists at minimizing the system’s energy function by which a simplified deformed model is obtained; finally, in the third stage, an interpolation process is used to obtain a deformed model with all the points of the initial CAD model mesh. Fig. 4
                      illustrates the proposed process by using a general scheme which is explained in detail in the following sections.

In order to apply the proposed method, it is assumed that the part’s surface is represented by a polygonal model of triangular faces. Basically, the model has the information about the coordinates of the nodes on the surface and their connections. For each triangular face, its corners represent the nodes of the polygonal model and the edges represent the connections among such nodes.

Similar to what happens during the assembly of a real part, the deformation of a virtual model happens when fixation points become displaced. As opposed to a real part where the fixation points are the ones that are displaced to their assembly position, in the proposed method the fixation points from the CAD model are the ones displaced instead of the points in the real part. The main advantage of this approach is that in order to carry out the non-rigid alignment stage between both models, there is no need to acquire the whole surface of the inspected part using a 3D sensor. It is assumed that the CAD model represents the full model of the part for a correct simulation of deformation.

In this work, it is assumed that the two models to be compared are: the data model and the CAD model and that they have been previously aligned to each other by using a rigid transformation method. Such transformation can be calculated in a simple way by taking as starting point the correspondences between fixation points of both models (Fig. 5
                     ). Even though, it is also useful to carry out a fine alignment by using an iterative algorithm such as the Iterative Closest Point (ICP) algorithm  [27]. Once the rigid transformation has been applied, the calculation of the displacements of the fixation points from the CAD model towards the data model is done. Those displacements are then applied to the spring model to propagate the deformation to the entire model (Fig. 6
                     ).

Taking into account that a dense polygonal mesh involves a greater computational burden than a simpler one, one can start the inspection process by an optimization stage to reduce the initial polygonal mesh. The only condition that prevails during this process is that the fixation points on the CAD mesh need to be preserved as nodes of the reduced polygonal model (Fig. 7
                        ). That is necessary as the fixation points are required to calculate the deformation.

In the literature, there are various methods proposed to perform this reduction process on triangular mesh in 3D. Many of them follow the same principle which is to preserve the shape of the general model while eliminating nodes of the polygonal model  [28–30]. Since the main interest in this work is to model deformation and not to simply reduce the model for visualization, a commercial software called PolyWorks/IMCompress®
                           [31] was used to perform polygon reduction. The core of the program is an iterative algorithm that reduces the nodes of the triangular model while keeping the minimum distance between the reduced triangulation and the original; in that way, the shape of the original CAD model is preserved while the number of triangular faces is reduced significantly. In order to ensure a low computational burden when performing the optimization stage, the number of nodes of the triangular meshes fluctuated between 20 and 30 nodes during the tests. In most cases, the approximation value needs to be assigned by the users according to the need for speed and precision.

The calculation of the final position of the nodes is performed on the deformed mesh. Such calculation is carried out using an iterative optimization process in which the energy function 
                           
                              
                                 E
                              
                              
                                 T
                              
                           
                         (Eq. (10)) is minimized.

Since the iterative minimization process needs an initial value for the positions to be calculated, an interpolation technique based on RBFs is applied to obtain it. The centers of the RBFs are the fixation points of the inspected part and the input values are the nodes of the reduced mesh. As explained in  [4], the position of the corresponding points of the deformed mesh 
                              
                                 F
                              
                              
                                 (
                                 
                                    
                                       
                                          p
                                       
                                    
                                    
                                       
                                          i
                                       
                                    
                                 
                                 )
                              
                            is obtained from the displacements of the control points 
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    
                                       j
                                    
                                 
                              
                            and the position of the non-deformed mesh 
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    
                                       i
                                    
                                 
                              
                           . This calculation is carried out using the following equation: 
                              
                                 (14)
                                 
                                    
                                       F
                                    
                                    
                                       (
                                       
                                          
                                             
                                                p
                                             
                                          
                                          
                                             
                                                i
                                             
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          
                                             C
                                          
                                       
                                       
                                          j
                                       
                                    
                                    R
                                    
                                       (
                                       d
                                       )
                                    
                                    +
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          
                                             i
                                          
                                       
                                    
                                    ,
                                 
                              
                            where 
                              
                                 
                                    
                                       C
                                    
                                 
                                 
                                    j
                                 
                              
                            is the weight associated to each center 
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    
                                       j
                                    
                                 
                              
                            and 
                              R
                            represents the base function. In the present work, multi-quadrics are used as basis functions: 
                              R
                              
                                 (
                                 d
                                 )
                              
                              =
                              
                                 
                                    
                                       (
                                       
                                          
                                             d
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             β
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                 
                                 
                                    1
                                    /
                                    2
                                 
                              
                           , where 
                              d
                              
                                 (
                                 
                                    a
                                 
                                 ,
                                 
                                    b
                                 
                                 )
                              
                            is the Euclidean distance between each pair of points 
                              
                                 (
                                 
                                    a
                                 
                                 ,
                                 
                                    b
                                 
                                 )
                              
                            and 
                              β
                            which is a parameter calculated for every center 
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    
                                       j
                                    
                                 
                              
                            as the minimum distance to the other centers 
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    
                                       k
                                    
                                 
                              
                              [32] as defined by: 
                              
                                 (15)
                                 
                                    
                                       
                                          β
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          min
                                       
                                       
                                          j
                                          ≠
                                          k
                                       
                                    
                                    
                                       
                                          d
                                       
                                       
                                          j
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                q
                                             
                                          
                                          
                                             
                                                k
                                             
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        


                           Fig. 8
                           (a) shows an example of initialization on a bar model. In this example, control points are the extreme of the bar model. The orange curve represents the initial mesh without deformation. The interpolation with RBFs, using only the fixation points, is shown in green. The result of the optimization applying the spring model is shown in blue. The obtained curve with the RBFs (green) represents an intermediate stage between the initial CAD (orange) and the final deformed model (blue). Fig. 8(b) shows again the deformed spring–mass model but now it is compared to the deformation obtained through an FEM simulation with beam-type elements. In this figure, the green curve is very close to the blue one representing the deformed model using FEM. In this example, a reduction of the initial mesh is not applied, nevertheless, the interpolation with RBFs is applied to generate the initial position required by the energy minimization process.

In order to choose the initial value required for the iterative optimization process, it is also possible to take the same set of node positions of the non-deformed CAD mesh. In this case, the initial value is the CAD mesh itself except for the control points. The result obtained using this method is not acceptable compared to the one obtained when selecting the initial value from the RBF interpolation. In Fig. 9
                           (a), the orange curve represents the non-deformed CAD mesh. The initial mesh from the CAD is shown in blue and the deformed mesh obtained applying the spring model is shown as a red curve. As the initial value is taken from the CAD, the blue curve overlaps the orange one except in the control points. Fig. 9(b) shows a comparison between the two results: the result obtained with the initialization by RBFs is shown in blue and the result of the initialization with the position of the non-deformed is shown in red. The green curve is very close to the blue one and represents the FEM deformation used as a reference.

This process determines the value of the nodes’ final positions on the reduced mesh 
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    
                                       j
                                    
                                 
                              
                            that present the minimum value in the energy function 
                              
                                 
                                    E
                                 
                                 
                                    T
                                 
                              
                            defined by Eq. (10). This is an iterative process where given an initial position, a new position that minimize the system’s energy function is calculated at each iteration. As described previously, RBFs are applied in order to generate the initial value for the iterative process. The required value is taken from the reduced deformed mesh by using interpolation with the RBFs.

In order to compute the minimization process, an iterative solution function fminunc from Matlab®  is used  [33]. This function is based on an algorithm using the well known quasi-Newton method. In this method, using the gradient of the function as a starting point, the information of the curve is built in every iteration to structure a quadratic problem as follows: 
                              
                                 (16)
                                 
                                    
                                       
                                          min
                                       
                                       
                                          x
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          
                                             T
                                          
                                       
                                    
                                    
                                       Hx
                                    
                                    +
                                    
                                       
                                          
                                             c
                                          
                                       
                                       
                                          
                                             T
                                          
                                       
                                    
                                    
                                       x
                                    
                                    +
                                    b
                                    ,
                                 
                              
                            where is the Hessian matrix 
                              
                                 H
                              
                            and is assumed to be a positive definite matrix, 
                              
                                 c
                              
                            is a constant vector, and 
                              b
                            is a constant. The solution to this problem is found when the partial derivatives of 
                              
                                 x
                              
                            converge towards zero, that is: 
                              
                                 (17)
                                 
                                    ∇
                                    f
                                    
                                       (
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             ∗
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          
                                             Hx
                                          
                                       
                                       
                                          ∗
                                       
                                    
                                    +
                                    
                                       c
                                    
                                    .
                                 
                              
                           
                        

The value for the optimal solution 
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    ∗
                                 
                              
                            is expressed by: 
                              
                                 (18)
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          ∗
                                       
                                    
                                    =
                                    −
                                    
                                       
                                          
                                             H
                                          
                                       
                                       
                                          −
                                          
                                             1
                                          
                                       
                                    
                                    
                                       c
                                    
                                    .
                                 
                              
                           
                        

In this implementation, 
                              
                                 x
                              
                            represents the positions of the nodes of the deformed and simplified model.

The final step at interpolating the full model deformation using RBFs. This time the nodes of the reduced mesh are taken as control points and the interpolation is applied on all the nodes of the original CAD mesh (Fig. 10
                        ). The result obtained in this process is the full and deformed polygonal mesh which represents an approximation of the real deformed model.

In order to validate the method based on the proposed spring–mass model, a Matlab®  implementation was developed. Tests were carried out in a machine equipped with an Intel Core Duo with a 2.16 GHz processor, 2.0 GB in RAM, and Microsoft Windows XP. Data from the real deformed parts were acquired using a range scanner Vivid 9i from Minolta. Fig. 11
                      shows the experimental setup. The calculation of the reference deformation for the synthetic part was performed using SAP2000®  package.

This section presents the results of the tests carried out on a synthetic model and the models of three real parts. For each of the parts, a comparison of the deformation computed with the proposed method was compared against a reference deformation. For the synthetic part the reference model is obtained by using an FEM simulation, whereas for the real parts the reference model is the polygonal model built from the surface data of the deformed part. The following are the material parameters of the models used in the FEM simulations: Young module=25.000 kgf/cm2 and Poisson ratio=0.35.

The geometrical dimensions of the bounding box on the coordinates 
                        
                           (
                           x
                           ,
                           y
                           ,
                           z
                           )
                        
                      and the average thickness 
                        h
                      of the parts are indicated in Table 1
                     . The Table 2
                      shows numerical values of the displacement applied to the fixation nodes of the parts.


                     Figs. 12
                     (a), 13
                     (a), 14
                     (a), and 15
                     (a) show a visual comparison between the non-deformed CAD model (in orange), the deformed model used as reference (in green) and the deformed model using the spring system (in blue). The transversal cut shown in those figures is the one generated by section in Figs. 12(c) 13(c), 14(c), and 15(c). Figs. 12(b), 13(b), 14(b), and 15(b) show the reduced polygonal model used to calculate the deformation. The black points are the fixation points and the arrows indicate the direction of the applied displacements, whose numerical values are shown in Table 2. Figs. 12(d) 13(d), 14(d), and 15(d) represent the deviations of the deformed model obtained with the spring system in relation to the reference deformation.

In all cases, the deformed model that results from the application of the proposed method is similar to the reference deformation. Nevertheless, whereas in models 1 and 2 the deviations are smaller than the average thickness of the parts, in models 3 and 4 there are regions with deviations greater. In the tests, some factors that affect the quality of the deformation approximation have been identified. A factor that, in general, affects the result of the simulations is the irregularity of the part thickness, whereas the synthetic part is defined with uniform thickness and the part 2 presents high uniformity in thickness, parts 3 and 4 present noticeable variations in their thickness. Similarly, the complexity of the part and the degree of the mesh reduction are contributing factors to the precision of the simulation. This factor affects particularly the result of the approximation for part 3, as the original mesh has regions of greater detail that are not present in the reduced mesh. Finally, regions that are further away from the minimum box containing all the dots show deviations greater than those found within the mentioned box. Again, parts 3 and 4 are the ones that present the most points outside the box (such box is defined from the fixation points), whereas in parts 1 and 2 most of the points in the model are within the mentioned box.


                     Table 3
                      summarizes the results of the tests. For the synthetic model the comparison is made against the model deformed applying the FEM, and for real parts the comparison is made against the data model reconstructed from the real deformed part’s 3D data. The number of nodes for the initial CAD model and the number of points for the reduced mesh on which the spring system is applied are indicated. The fixation points are the nodes of the reduced mesh on which forces are applied in order to deform the part. The maximum comparison distance is a limit established manually. For parts 2 and 3, such limit is the maximum value of the absolute standard deviation. The positive and negative deviations are the deviation values above and below the reference value, respectively. The Root Mean Square (RMS) deviation offers a global evaluation of the absolute deviation, which is, in all cases, lower than the average thickness. Since CAD mesh can be reduced beforehand, the time to calculate deformations, during the inspection of the parts, mainly depends of the time required by the minimization process. Computation time to find the minimum value in the iterative optimization is also presented. The last line is the RMS deviation obtained by applying the FEM on the full original mesh. The approximation obtained with the FEM is more accurate, except for the part 3. This is because the real part has great variation in its thickness in some regions, but this was not considered to build the model to calculate the deformation.


                     Table 4
                      shows a comparison of timing and accuracy between the deformation obtained by applying the proposed spring–mass model and the deformation obtained with the FEM. Unlike the previous tests, instead of applying the minimization process, in these tests, an explicit inversion of the stiffness matrix is carried out to find the solution. The deformation obtained with the FEM is taken as the deformed reference model. In the case of reduced mesh, there is a reduction in calculation time of around 50% over the time required for the FEM solution for the same mesh. As proposed, the deformation of the full mesh is obtained by performing a RBF interpolation on the deformed reduced mesh obtained with the spring–mass model. In this case, the time reduction is about 80% with regard to the computation time obtained with the FEM.

It is appreciated that by using the matrix inversion of stiffness lower accuracy occurs in the result, regarding the accuracy obtained by applying the minimization solution (Table 3), which can be explained due to the numerical approximation errors  [34]. It is also noted that the accuracy of the approximation obtained with the proposed method is less than that obtained with the FEM solution mainly due to the spring–mass model is less accurate than the FEM, and is applied onto a reduced mesh, but the RMS value does not increase when performing interpolation with the RBFs.

@&#CONCLUSION@&#

The present work proposes a deformable model based on a simple spring–mass system which allows simulate deformation on real objects whose shape can be represented by surfaces in a three-dimensional space. The proposed model associates a spring–mass system to a polygonal mesh that represents the CAD model of the part. Two types of springs are defined: a first set of springs located on the polygonal edges which are associated to the behavior of a membrane; and, another set associated to the bending behavior between adjacent faces of the polygonal mesh.

An expression is presented in order to calculate the stiffness constant of the springs associated to the bending of the model, which depend on the part thickness and the geometry of the triangular faces of the polygonal mesh. Similarly, it is presented a relationship to calculate the system’s deformation energy taking into account the energy of the springs associated to the membrane and bending behavior of the system.

Based on the spring–mass model, a new method to calculate deformations on surface models of deformable parts is presented. In order to apply the method, it is assumed that the object is represented by a polygonal mesh with triangular elements. In summary, the method consists of the following stages: the reduction of the initial mesh; the calculation of the initial value for the optimization process using RBFs; the optimization to determine the position of the deformed system and the final RBF interpolation.

The parts’ surfaces considered in this work have some curvature, so that they have a curved initial state, and depending on the forces applied, this curvature increases or decreases. If the parts have straight surfaces, it should be taken into account a small curvature in the initial state for the solution with the buckling in the minimization process.

Depending on the initial value, the optimization process may produce different solutions or relative minimum values, RBF interpolation was used in order to generate such initial position. It was observed that when the value generated by the RBF interpolation was used as initial value in the optimization process, the solution converges to a value closer to the real deformation unlike the case when other initial values are used as starting points. Even though, it could be inferred that the solution found in this case is the absolute minimum of the system’s energy function, such inference needs to be demonstrated in future works.

@&#REFERENCES@&#

