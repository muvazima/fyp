@&#MAIN-TITLE@&#An error diffusion based method to generate functionally graded cellular structures

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel approach to generate functionally graded cellular structures was evaluated.


                        
                        
                           
                           The relationships between the method parameters and cell size were investigated.


                        
                        
                           
                           Variation in cell edge length was greatest for the Voronoi connection scheme.


                        
                        
                           
                           There was approximately an 8% underestimation of cell area for both target regions.


                        
                        
                           
                           Practical implementation implications were discussed for tackling 3D problems.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cellular structure

Functional grading

Error diffusion

Additive manufacturing

Voronoi

Delaunay

@&#ABSTRACT@&#


               
               
                  The spatial variation of cell size in a functionally graded cellular structure is achieved using error diffusion to convert a continuous tone image into binary form. Effects of two control parameters, greyscale value and resolution on the resulting cell size measures were investigated. Variation in cell edge length was greatest for the Voronoi connection scheme, particularly at certain parameter combinations. Relationships between these parameters and cell size were identified and applied to an example, where the target was to control the minimum and maximum cell size. In both cases there was an 8% underestimation of cell area for target regions.
               
            

@&#INTRODUCTION@&#

Cellular structures, also commonly described as lattice structures, consist of a number of connected members or tessellated unit cells that form a complex structural network. Modern manufacturing techniques, such as additive manufacturing (AM), enable the fabrication of highly complex small to medium sized parts which can include cellular structures. Large scale truss structures are commonly seen in architectural applications where strength and stiffness can be combined with freedom of design. Smaller scale structures have other potential applications such as tailored impact absorption capacity [1–3] and heat dissipation [1,4–11]. An example of such a structure manufactured using an AM process: selective laser melting (SLM) is shown in Fig. 1
                     . This demonstrates a regular tessellation of a unit cell connected to an outer skin. The outer skin can be useful to provide mating faces for adjacent parts, to provide protection for the cellular structure and for maintenance reasons. In this case, a solid outer skin has been used; however, other forms of skin may also be used, where appropriate, such as a ‘net’ skin [2,3].

Compared to many other manufacturing methods, AM has a comparatively inexpensive cost of complexity [12], and this can actually decrease as part complexity increases as the necessity for support structure for SLM can reduce. The design of these structures, however, remains a challenge. With increased geometric complexity comes increased design complexity, and this is exacerbated when including computational analysis methods and mathematical optimisation techniques in the design process [13–15]. Hence, there is a general requirement for efficient methods for the design and analysis of cellular structures.

This paper focuses on the problem of generating a cellular structure with a spatial variation in the cell size. Different regions of a component generally require different extents of internal structure support. With a fixed, uniformly tessellated cellular structure, this variation can only be achieved by varying the structural member dimensions, which leads to a large number of design variables. As the variation in functionality can only be achieved by varying structural member dimensions, this is restricted by the unit cell size defined prior to optimisation. In addition, some efforts have been made to vary the individual cell design such that the structure is constructed of differing cells [16]; however, this has many challenges and still does not address the cell size variation. This leads us to consider how the design space could be explored more fully by allowing variation of the cell sizes. Some existing cellular structure design approaches do exhibit different sized cells as a by-product of requiring the structure to conform to a shape with curved faces; instead of trimming tessellated cells to this shape, they are either swept [17] or based upon an unstructured mesh [18]; however, these variations are slight.

A novel method is proposed that employs dithering (also known as half-toning) method to achieve spatial variation of cells and subsequent control over component behaviour. Learning from developments linking dithering to meshing techniques [19–22], the dithering defines spatially varying points which are then connected with structural members. These points determine the spatial variation of the cell sizes (area/volume). This paper first introduces the error diffusion methodology used for dithering, and then applies this to some examples to demonstrate the functionality using two point connection schemes. The relationships between the method parameters and the resulting cell size are investigated and their use for controlling cell size and distribution demonstrated.

@&#METHODOLOGY@&#

Dithering converts a continuous tone image into a binary (white–black) representation. This is useful for bi-level printers and displays. When viewed from a certain distance, the binary representation appears similar to the continuous representation to the human eye. There are several dithering methods, which can be divided into two categories: ordered dither and error diffusion [23]. Error diffusion was used for this work as it does not exhibit undesirable grid-like patterns in the dithered result while ordered dithering does [24]. Error diffusion uses an adaptive algorithm based on a fixed threshold to produce a binary representation of the original input.

Consider a 2D array of values where each array location represents a pixel colour value. Each pixel value in the greyscale array, 
                           
                              
                                 
                                    p
                                 
                                 
                                    xy
                                 
                                 
                                    i
                                 
                              
                           
                        , is compared to a predefined threshold value, t, which in this case was 127. The difference determines whether the corresponding pixel in the binary array, 
                           
                              
                                 
                                    b
                                 
                                 
                                    xy
                                 
                                 
                                    i
                                 
                              
                           
                         should be represented by either a white or black value:
                           
                              (1)
                              
                                 
                                    
                                       b
                                    
                                    
                                       x
                                       ,
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   255
                                                   ,
                                                
                                                
                                                   if
                                                   
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         x
                                                         ,
                                                         y
                                                      
                                                   
                                                   >
                                                   t
                                                
                                             
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 255=white, 0=black.

The value difference between bxy
                         and pxy
                         is termed the ‘error’, exy
                        , and is calculated as:
                           
                              (2)
                              
                                 
                                    
                                       e
                                    
                                    
                                       x
                                       ,
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       p
                                    
                                    
                                       x
                                       ,
                                       y
                                    
                                 
                                 -
                                 
                                    
                                       b
                                    
                                    
                                       x
                                       ,
                                       y
                                    
                                 
                              
                           
                        The values of adjacent pixels in p are modified based on this thresholding error using a predefined filter (the error is being diffused, hence the name of the method):
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            +
                                                            1
                                                            ,
                                                            y
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            +
                                                            1
                                                            ,
                                                            y
                                                            +
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            ,
                                                            y
                                                            +
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            -
                                                            1
                                                            ,
                                                            y
                                                            +
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            +
                                                            1
                                                            ,
                                                            y
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            +
                                                            1
                                                            ,
                                                            y
                                                            +
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            ,
                                                            y
                                                            +
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            x
                                                            -
                                                            1
                                                            ,
                                                            y
                                                            +
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       e
                                    
                                    
                                       x
                                       ,
                                       y
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                         +
                                                         1
                                                         ,
                                                         y
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                         +
                                                         1
                                                         ,
                                                         y
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                         ,
                                                         y
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                         -
                                                         1
                                                         ,
                                                         y
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where f are the error diffusion fractions from each corresponding location of the 2D filter, specifically 7/16, 1/16, 5/16, 3/16, respectively (see Fig. 2
                        a).

Following this update, the procedure is repeated for each subsequent location in turn. The proportions of the error diffused to adjacent pixels are determined heuristically and a typical filter for this in 2D is shown in Fig. 2a [25]. An empty location in the filter represents zero error diffused to this pixel.

3D error diffusion, while less common than 2D (as there are fewer potential applications), is a simple extension of the 2D process, where the error is diffused in 3D space to voxels around the current voxel. Again, the proportions of the original error to diffuse are determined heuristically and the filter used in this work is shown in Fig. 2b [23]. In this case, Eq. (3) will consist of 20 locations of Pxyz
                         corresponding to the locations and fractions shown in Fig. 2b. In the 1D case, the error is diffused completely to the following pixel.


                        Fig. 3
                         presents a coarse numerical example that shows the actual value changes resulting from following this procedure for a 2D case. A better visual binary representation would be possible with a higher resolution array. The application of 1D and 2D dithering methods to enable design of a cellular structure with variably sized cells is demonstrated with a larger example problem in the following section.

The method can be split into 3 main stages:
                           
                              (1)
                              Definition of functional grading.

Error diffusion to generate dithered points of boundary and area.

Application of connection scheme to generate structure cells.

To generate a variable cellular structure, a continuous representation of the desired functional variation is first required. This could be a result of a finite element analysis (FEA), for example, providing a temperature (for thermal problems) or stress (for structural problems) distribution, or a result of a density based topology optimization [26] without penalisation of the intermediate densities. However the functional variation is defined, it represents the magnitude distribution of the analysis response. To demonstrate this method, the functional variation representation used is shown in Fig. 4
                           a.

This stage consists of two steps: the part boundaries are tackled first, followed by the part area (or volume for a 3D part). In the 2D example, the boundary is identified as a single layer of pixels, as shown in Fig. 4a. This layer is transformed into a single row of pixels per boundary using a boundary tracing method to preserve pixel order. For the part shown in Fig. 4, this gives a single one-dimensional row of variable greyscale pixels; this row is then dithered using 1D error diffusion. The dithered pixel row can then be transformed back to the correct shape, as shown in Fig. 4c.

This boundary dithering stage serves two purposes. Firstly, it provides a more precise positional boundary than just using 2D dithering alone, as this does not necessarily place node points on the boundary. Secondly, it enables identification of the edges between the node points that are to be constrained for stage 3 of the method where the connection schemes are applied.

Once the boundary points have been generated, the area can be tackled. Firstly, the area is reduced inwards by a pixel, as the boundary pixels have already been used. Secondly, by passing the filter from Fig. 2 over this representation and diffusing the error of binarisation accordingly, a point distribution is generated representing the cell spacing. The 1D (boundary) and 2D (area) dithered results are then combined to form a complete set (Fig. 5
                           a). Due to the different filters used for the boundary and area, there is calibration required to ensure the resulting dithered points from the stages spatially correspond. This requires insight into how each filter affects the spacing of the dithering points which is investigated in Section 3. With this information the appropriate calibration parameter can be set.

The third stage of the method is to apply a connection scheme to the dithered points to form the basis for the cellular structure. In this work, two example connection schemes were used: Delaunay triangulation [27] and Voronoi tessellation [28,29]. The triangulation generates structural members that connect up the points whilst the Voronoi tessellation generates members that lie in the line/plane equidistant from the two nearest points. It is the edges of the polygons generated that form the member longitudinal axes onto which a geometric shape can be mapped, for instance a cylinder. These cellular structures are shown in Fig. 5 and the mapping of cylindrical members to these edges, along with spherical end caps, is shown in Fig. 6
                           .

While the triangular cellular structure is more suited to applications where high stiffness is required as these cells are stretch-dominated [30], a Voronoi cellular structure, which has cells of a similar shape to those found in natural foams that should deform readily under load [2], is more suited to impact absorption applications as the cells are bending-dominated [30].

The minimum and maximum cell sizes shown in the previous example are determined by two parameters: the image pixel/voxel resolution and greyscale value. Specifying real design limits for the cellular structure ensures that it can be optimised for a given load case, but this requires determination of the effect of these parameters on the cell size range, which in turn enables local control over the generated node spacing and the overall quantity of generated nodes.

As mentioned in the previous section, a calibration is required between the boundary and area/volume dithers owing to the different filters used. Without this calibration, there is a mismatch between the minimum and maximum sizes of the resulting 1D boundary and 2D area geometries. This is also the case when combining 2D and 3D dithering stages in a 3D example. It is therefore useful to be able to link 1D, 2D and 3D dithering methods so that the required sizes of the cells throughout the area or volume and the boundaries are matched. With this in mind, experiments were carried out to investigate the effects of image pixel/voxel resolution and greyscale value on the cell size range for both Delaunay and Voronoi connection schemes.

A range of test 1D, 2D and 3D greyscale arrays were generated of varying image pixel/voxel resolution, 
                           L
                         between 10 and 100 pixels in increments of 10, and greyscale level, 
                           V
                         between 0 and 240 in increments of 10. The greyscale ranges from 0 to 255, but an upper limit of 240 was used because in a pure white region, no dithered points would be generated. This means that the samples with greyscale values above 240 there would be very few points or none at all to connect. On application to a real part, the boundary points would be included and allow connection but the samples did not include boundary points to reduce edge effects skewing the results. Each of the constant greyscale level samples was subjected to the relevant 1D, 2D or 3D error diffusion filter.

Following dithering, in the case of the 1D samples, the average distance between the points was determined. In the case of the 2D and 3D samples, two connection schemes: Delaunay and Voronoi were used to generate either triangular/tetrahedral cells, or Voronoi cells respectively. From these cells, the average element edge length, and area or volume was calculated. These measures are required to control the sizes of the cells within the cellular structure. The results are presented in Sections 3.2 and 3.3. The Voronoi cells on the boundary, i.e. those that have a vertex at infinity were excluded from the calculations. In addition, vertices that were closer together than a specified distance were merged to avoid skewing the edge length results. For the Delaunay connection scheme, highly distorted (sliver) triangular/tetrahedral cells, generally located on the perimeter, were filtered out based on a radius tolerance. This filtering of edge effects increased the accuracy of the sample results.

To investigate relationships between the parameters and the cell edge length for the five cases: 1D, 2D and 3D for both Delaunay and Voronoi connection schemes, a surface defined by Eq. (4) was fitted to the sample results using a nonlinear least squares method as implemented in MATLAB using variable bounds determined from parametric studies. The relationships between the two parameters, 
                           V
                         and 
                           L
                        , and the mean cell area (2D) or cell volume (3D) were found to be a close fit to Eq. (4) as demonstrated by the goodness of fit measures in Table 1
                        . The corresponding coefficients for the five cases are also presented in Table 1. It was found that there was a power relationship between 
                           L
                         and edge length and there was a double exponential relationship between 
                           V
                         and edge length.

It can be seen from Fig. 7
                         that in the Voronoi cell case, the data is not as smooth as the Delaunay method and there are several peaks over the range of parameter 
                           V
                        . The error between the fitted surface and data is shown by the goodness of fit measures in Table 1. This artefact is investigated further in Section 3.4.
                           
                              (4)
                              
                                 A
                                 =
                                 
                                    
                                       10
                                    
                                    
                                       ∧
                                    
                                 
                                 (
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       5
                                    
                                 
                                 
                                    
                                       L
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             6
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       c
                                    
                                    
                                       7
                                    
                                 
                                 )
                                 ×
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             2
                                          
                                       
                                       V
                                    
                                 
                                 )
                                 +
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       3
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             4
                                          
                                       
                                       V
                                    
                                 
                                 )
                                 )
                              
                           
                        
                     

The same samples were used to evaluate the effect on the cell size, specifically the area in 2D and volume in 3D. Results for the 2D cases for Delaunay and Voronoi connection schemes are shown in Fig. 8
                        . Similar to the edge length results, the relationships between 
                           V
                         and 
                           L
                         and the mean cell area or volume were found to be a close fit to Eq. (4) as demonstrated by the goodness of fit measures in Table 2
                        . In contrast to the edge length results, the Voronoi results are more closely represented by the fitted surface.

The variability in edge length and area was investigated for both the Delaunay and Voronoi connection schemes. Each greyscale integer point was evaluated for a fixed sample size, the results of which are shown in Figs. 9 and 10
                        
                        . The mean is represented by the solid central line and the standard deviation is shown by the grey region either side. The inset squares show the sample cells for different regions over the greyscale range.

Across both sets of samples, the variability in the member edge length was more significant than that of the cell area. For the area, the variability dropped to zero or close to zero at several positions along the greyscale range. At these regions, the cellular structure consists of identical or very similar size cells as can be seen from the samples shown. For the Delaunay results, as the triangular cells are not equilateral this decrease in variability is only marginally apparent in the edge length variability results. However, for the Voronoi results, the reductions in variability correspond to square cells which do have equal edge lengths.

Also of interest in the Voronoi edge length results is the increase in the mean when the variability decreases. Very short cell edges were filtered out before analysis by merging vertices, but due to the greater variation in cell shape (as can be seen in Fig. 11
                        ) compared with Delaunay, there is still more variation in edge length for Voronoi cells. This means that it will be more difficult to correlate the member length at the boundary and area or volume of cells generated using the Voronoi connection scheme compared with Delaunay.

To evaluate the use of the defined relationships between the cell area or volume and the two parameters discussed above, a demonstration example was used (Fig. 12
                           ) for both Delaunay and Voronoi connection schemes.
                              
                                 (5)
                                 
                                    L
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            log
                                                         
                                                         
                                                            10
                                                         
                                                      
                                                      A
                                                      -
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            3
                                                         
                                                      
                                                      
                                                         
                                                            e
                                                         
                                                         
                                                            
                                                               
                                                                  c
                                                               
                                                               
                                                                  4
                                                               
                                                            
                                                            V
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      
                                                         
                                                            e
                                                         
                                                         
                                                            
                                                               
                                                                  c
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            V
                                                         
                                                      
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            5
                                                         
                                                      
                                                   
                                                
                                                -
                                                
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            7
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            5
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          1
                                          /
                                          
                                             
                                                c
                                             
                                             
                                                6
                                             
                                          
                                       
                                    
                                 
                              
                           To satisfy the requirement of a minimum cell area, 
                              A
                           , of 5mm2 in the black region (
                              V
                           
                           =0), Eq. (4) was rearranged to obtain Eq. (5), which can then be used to calculate the input image pixel/voxel resolution, 
                              L
                            required to achieve our desired 
                              A
                           . For the Delaunay example, 
                              L
                            was calculated to be 34. This image size can then be used to satisfy the second requirement of a maximum cell area, 
                              A
                            of 20mm2. It is not possible to rearrange Eq. (4) to isolate the grayscale parameter, 
                              V
                           , so an iterative procedure can be used to find the closest value of 
                              A
                            to the target by varying 
                              V
                            using the previously calculated 
                              L
                            from the determination of the minimum cell size. In this case, the difference was minimised using the simplex search method [31] as implemented in MATLAB, and the value for 
                              V
                            was found to be 193.

This updated grayscale value is accommodated by modifying the input image grayscale distribution by multiplying by the difference (grayscale darkening/lightening) between the two 
                              V
                            values (for 5mm2 and 20mm2). Because the lowest value of the range is 0, the previously defined minimum cell size is unchanged. The desired extreme element sizes are therefore defined by modifying the image size for the minimum size and then modifying the greyscale level for the maximum size. Both the Delaunay and Voronoi connection schemes were evaluated for these two size requirements and the results are shown in Fig. 13
                           . It was found that in both cases, there was an underestimation of the cell area in both the minimum and maximum regions. For the Delaunay case these errors were 7% and 8.4%, and for Voronoi, 8.6% and 8.5%. This error is due to deviation of the fitted surface from the data; however, because it is reasonably consistent, it could be empirically compensated for.

As the boundary and area or volume dithering stages are carried out independently using different error diffusion filters, the resulting spacing of the dithered points are unlikely to match. This mismatch can be seen in Fig. 14
                            which shows the fitted surfaces for the 1D case and 2D Delaunay case, with the only matching instance shown by the plotted intersection curve. The difference as shown in Fig. 15
                            can be compensated for by modifying 
                              V
                            whilst keeping 
                              L
                            as previously calculated.

@&#DISCUSSION@&#

Depending on the application of the cellular structure, local control of member orientation can be beneficial, primarily for load bearing applications. However, the error diffusion filter does not inherently allow local orientation control for two reasons: firstly, the filter is passed row by row across the part and does not follow its geometric profile, and secondly, the Delaunay triangulation and Voronoi tessellation connection methods do not handle direction constraints. The end result of this is likely to be a sub-optimal solution and so the approach may be more suited to applications where the orientation of members has less of an effect or is not known in advance, potentially for heat dissipation and impact absorption applications.

There are some instances of the use of a variable diffusion filter to allow local control of the dithered result, for example, to emphasise edges [32,33]. A similar approach could potentially be adopted to improve upon the current method by taking account of principal stress tensors or force flow directions to influence the structural member orientation by making a corresponding adjustment to the error diffusion filter. However, it is difficult to see how this would have a significant effect on the member orientation, especially with the Voronoi connection scheme where members are generated around the dithered points.

An alternative approach could be to identify members that exist in a particular orientation and increasing the cross sectional dimensions of these members, while also reducing the dimensions of members in differing orientations.

In the example shown in Section 2.2, the boundary dithering is carried out using a 1D filter. This requires that the boundary pixels be transformed into a straight path as shown in Fig. 16
                        a. The filter is then passed along this path from the start to the end diffusing the pixel error accordingly. However, because the start and end of the path are no longer adjacent, these adjacent pixels are not included in the error diffusion processing causing incorrect dithering to some extent. In the specific case presented in Section 2.2, this is not of significance as the greyscale values of the pixels at A and B are consistent, but in other cases this may not be the case.

This issue is more complex when tackling 3D problems as the boundaries are surfaces and so require 2D error diffusion. For a simple shape such as the cube shown in Fig. 16b the process of transforming the boundaries to 2D is straightforward, but for a more complex shape, mapping procedures [34] could be applied. In the same way that for the 1D case, the adjacent pixels A and B are no longer adjacent following transformation, in the 2D case several adjacent edges are no longer adjacent following transformation. For instance, in Fig. 16, edges 2 and 3 are separated while edges 15 and 16 remain adjacent. The error diffusion filter is passed over the rectangular region surrounding the unwrapped boundary surface from A to B in a row by row fashion and so does not account for the separated adjacent edges in the process.

This paper has presented a novel method of generating a functionally graded cellular structure based on a functional variation representation input. The spatial variation in the area/volume of the cells is achieved using error diffusion to convert a continuous tone image into binary form. It is not claimed that this is an overall optimal solution, but it is an efficient and novel way to create a functionally graded cellular structure with a small number of design variables.

The effect of the two parameters, image pixel/voxel resolution and greyscale value on the resulting cell edge length and area/volume was investigated. For both the edge length and area/volume results, Eq. (4) represented the mean data well. In the case of the Voronoi edge length results, the variation in the cell shape causes peaks at certain parameter combinations resulting in a worse fit. At these combinations, the edge lengths of the cells are equal and so the variability becomes zero and the mean value increases relative to the other combinations.

The fitted relationships were applied to an example, where the target was to control the minimum and maximum cell size for the two connection schemes. In both cases there was approximately an 8% underestimation of cell area for both minimum and maximum target regions. A comparison of the edge length results for the boundary and area was also made, and a step outlined for adjusting the boundary results to ensure a closer match between the edge lengths.

The limitations of using this error diffusion based approach were discussed, the main ones being the difficulties of specifying structural member orientation and the complexities of error diffusion of boundaries especially when tackling 3D problems. The first of these issues could be addressed by using a variable diffusion filter or by applying local dimensional changes based on structural member orientation. The second of these issues could be addressed to some extent by using mapping techniques, but a more advanced filtering process where edges that are adjacent are considered simultaneously would be useful.

To extend the proposed method to 3D, a volumetric functional variation representation is required as an input, which can be obtained by taking slices through a 3D FEA mesh fringe at the same resolution as the in plane dimensions. It is important that these resolutions are the same or the cellular structure will be distorted in a particular dimension. As would be expected, a 3D error diffusion filter such as that shown in Fig. 2b should be used. A constrained 3D Delaunay algorithm capable of handling non-convex point envelopes and connecting interior and boundary dithered points could be used to generate the 3D cellular structure.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank the UK Technology Strategy Board (TSB) and the UK Engineering and Physical Sciences Research Council (EPSRC) for funding this work.

@&#REFERENCES@&#

