@&#MAIN-TITLE@&#Determining common insertion sites based on retroviral insertion distribution across tumors

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We highlight the CISs and detect the new ones based on insertion distribution across tumor types.


                        
                        
                           
                           The density based clustering can not only classify data correctly, but also filter noises effectively.


                        
                        
                           
                           Taking insertion distribution into consideration improves to distinguish CISs from each other.


                        
                        
                           
                           Novel CISs can be found by taking insertion quantity and insertion distribution into consideration.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Common insertion site

Retroviral insertion

DBScan

Normal standard deviation

@&#ABSTRACT@&#


               
               
                  A CIS (common insertion site) indicates a genome region that is hit more frequently by retroviral insertions than expected by chance. Such a region is strongly related to cancer gene loci, which leads to the detection of cancer genes. An algorithm for detecting CISs should satisfy the following: (1) it does not require any prior knowledge of underlying insertion distribution; (2) it can resolve the insertion biases caused by hotspots; (3) it can detect CISs of any biological width; (4) it can identify noises resulting from statistic mistakes and non-CIS insertions; and (5) it can identify the widths of CISs as accurately as possible. We develop a method to resolve these difficulties. We verify a region's significance from two perspectives: distribution width and distribution depth. The former indicates how many insertions in a region while the latter evaluates the insertion distribution across the tumors in a region. We compare our method with kernel density estimation and sliding window on the simulated data, showing that our method not only identifies cancer-related insertions effectively, but also filters noises correctly. The experiments on the real data show that taking insertion distribution into account can highlight significant CISs. We detect 53 novel CISs, some of which have been proven correct by the biological literature.
               
            

@&#INTRODUCTION@&#

Mutagenesis resulting from retroviral insertion (Oja et al., 2007) is one of main causes of carcinogenesis (Uren et al., 2008; Mikkers and Berns, 2003; Lewinski et al., 2006). By infection, retroviruses insert their own DNA into the host cell's genome, which could lead to gene mutation of the host cell. The gene, which is close to or includes the location in which the retrovirus inserts, may be altered. If this gene is an oncogene or tumor suppressor gene (Liu et al., 2009; Tran et al., 2008), such mutation leads to the proliferation of cells without control. Finally, a tumor could develop (Miething et al., 2007; Suzuki et al., 2006; Slape et al., 2007).

The process of tumor development actually involves multi-genes and stages. In this process, the tumor tissues with the retroviral insertions are copied many times while those without the retro viral insertions might be copied a few times. As a result, research on tumor tissue can find genome regions in which there are many retroviral insertions. Therefore, the genes corresponding to these regions are very probably associated with carcinogenesis. A region is called CIS (common insertion site) if it meets two criteria: (1) it includes more insertions than can be expected by chance; and (2) the insertions are distributed across multiple independent tumors. Based on the definition and features of CISs, CIS detection should resolve the following challenges:
                        
                           (1)
                           
                              Insertion distribution: There is no evidence demonstrating that retroviral insertions conform to any known distribution. So, a CIS detection algorithm with a known underlying distribution may not be able to identify real CISs.


                              Insertion biases: The biological experiments show that retroviral insertions are not absolutely random. Some insertions favor distinct genes or loci, called hotspots (Nielsen et al., 2005; Hematti et al., 2004; Wu et al., 2003). For example, 25% of MLV integration is detected near transcription start sites (Lewinski et al., 2006). A hotspot related to a CIS, which also leads to gene alteration, is always detected near the genes that they impact, therefore it is important that CIS detection should be not based on any underlying distribution because an assumed distribution may filter useful hotspots.


                              Biological variance: A CIS could impact multiple genes that are far from or close to it. In turn, a gene could be impacted by multiple CISs. So far, the only thing which can be confirmed is that there is no a fixed CIS width available for any biological environment. So, when detecting CISs, the algorithm should provide for candidate genes coming from any biologically relevant CIS width.


                              The identification of noises: Noises in a CIS dataset can be divided into two categories: statistical errors and non-CIS insertions. If a noise, which we call noise I, is either a statistical error or a non-CIS insertion that happens in the later stage of tumorigenesis, it should be filtered. If a noise, which we call noise II, is a non-CIS insertion that happens in the early stage of tumorigenesis, it will be copied many times on the same tumor. Therefore, it can become a false CIS, which should be identified.


                              The detection of CIS boundaries: Although the exact detection of CIS boundaries is still impossible, identifying CIS boundaries as much as possible is very important for understanding CIS functions and gene features. Taking TP/FP (True Positive/False Positive) as the only criterion cannot effectively identify CIS boundaries, as shown in Fig. 1
                              . From the point of view of data mining, identifying boundaries indicates that the algorithm can match the original data exactly. So, a CIS detection algorithm should be able to match the dataset maximally. In other words, it can correctly classify as many insertions as possible.

A large volume of literature identifies CISs by assuming to integrate all the insertions on tumors into one long genome, as shown in Fig. 2A and B (Ridder et al., 2006; Akagi et al., 2004; An et al., 2005; Mikkers et al., 2002; Suzuki et al., 2002; Zhang et al., 2005; Pyrz et al., 2010). In A, retroviral insertions distribute across five tumors. For detecting CISs, all of them are integrated into one long genome to identify the regions in which there are many more insertions than others. These regions are considered to be CISs, so the genes which are close to or include them are potentially cancer related. The significance of CISs is determined by the number of insertions (Akagi et al., 2004). So CIS 2 and 3 in (B) are significant.

According to this thinking, the Sliding window (Akagi et al., 2004) uses sliding window to construct a fixed range (30k for 2 insertions, 50k for 3 insertions, 100k for 4 or more insertions). This method does not require a pre-defined parameter and is independent of insertion distribution. But it does not provide enough analysis about CIS width and insertion biases. When the size of the data is not very big, Monte Carlo simulation (Suzuki et al., 2002) and Poisson distribution (Mikkers et al., 2002) can perform very well. But these methods do not take noise and insertion biases into consideration (Nielsen et al., 2005; Hematti et al., 2004; Wu et al., 2003). The kernel framework resolves the first three challenges effectively (Ridder et al., 2006; Uren et al., 2008). It is not only independent of insertion distribution, it can also identify hotspots by smoothing the difference between insertions. Simultaneously, the window width can employ any CIS width which is biologically meaningful. So, it can also analyze CIS with distinct biological variances.

However, all these methods only focus on situation 1 being a significant CIS. They do not take insertion distribution across tumors into account. In addition, they do not consider challenges 4 and 5. First, they do not have a method to filter noise I. Second, they can not find false CISs caused by noise II because they ignore insertion distribution. Last, they take TP/FP as the only criterion, which fails to identify CIS boundaries. Based on the above analysis, we have developed a method, called DNSD (DBScan and normal standard deviation), to meet all five challenges. A stochastic review of this method is shown in Fig. 2A and C.

We consider a region to be a CIS based on two criteria: distribution width (DW) and distribution depth (DD). Firstly, DW is evaluated, which indicates the number of insertions in a region. It meets criterion 1 of being a CIS, which is consistent with the current CIS detection algorithms. DD, that is for criterion 2, evaluates the distribution of the insertions across the tumors. DBScan is used for calculating DW and filtering noise I (Stefanakis, 2007; Parimala et al., 2011). DBScan is a density-based clustering algorithm, which does not need any pre-distribution knowledge. It can filter noise I while detecting CISs. Due to its goal, that is, to cluster insertions correctly, it can identify CIS boundaries maximally. In addition, its parameter (Eps) can meet any CIS width which is significant biologically. When detecting CISs by DBScan, all the insertions related to cancer genes are divided into core insertions and border insertions. Core insertions indicate those in CISs. Border insertions represent hotspots. So DBScan can resolve the issue of insertion biases. Secondly, based on standard deviation, we have developed NSD (normal standard deviation) to calculate DW to analyze how the insertions are distributed across tumors. To further our research step-by-step, we use tumor types instead of tumors in this paper. NSD overcomes two drawbacks of standard deviation in CIS detection: (1) standard deviation cannot compare two CIS involving different tumor types; and (2) standard deviation cannot compare two CISs with different insertion quantities. Due to the consideration of insertion distribution, false CISs caused by noise II can be filtered effectively. So, CIS 2 in Fig. 2C is the most significant due to combining insertion quantity and distribution. Consequently, our method offers a better CIS ranking, which is very meaningful practically when the size of the CIS datasets increases dramatically. In addition, we also designed four novel criteria when we conducted our method on the simulated data. Including TP/FP, all the five criteria evaluate how accurately an algorithm can match the original dataset from different aspects.

We compare DNSD with the kernel framework and the sliding window on simulated data, showing that DNSD can match on average 80% of simulated data (kernel: 65.4%; sliding window: 25.4%). At the same time, noise I can be filtered with very high accuracy. On average, 98.2% of noises that we detected belonged to noise I. In addition, when the three methods perform similarly in identifying TPs, our method identifies the fewest FPs. We also tested our method on a real dataset, the Retroviral Tagged Cancer Gene Database (RTCGD), to compare our result with the sliding window. We detected 53 novel CISs, some of them already having been proven to be correct. For instance, Elovl5 is associated with breast cancer (Van’t et al., 2002). The discovery of Lck, 6330548G22Rik and Ddx3x confirms the results found in Uren et al. (2008). As the same time, we found that 51.2% of CISs in RTCGD are not significant enough when the α level is 0.05.

@&#RESULTS@&#

We designed the simulated data based on RTCGD (Akagi et al., 2004). In RTCGD, there are 503 CISs and 12 tumor types. There are a total of 6759 retroviral insertions, 2715 of which are CIS-related insertions. So, we designed 6800 retroviral insertions, 3000 of which are CIS related and 3800 of which are not. All the insertions are distributed on a genome with a length of 2×109bp. We defined 500 CIS centers and 12 tumor types on which 6800 insertions are distributed. To analyze biological variance, we design 14 CIS widths: [0.2, 1, 2, 10, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200] kbp. A CIS's range is the location of its center ±width/2. During the process of constructing the stimulated dataset, two or more CISs could be combined if their centers are close enough when the width varies. So the number of CISs changes when the width varies. Then, in every CIS, insertions are defined stochastically. Non-CIS insertions are located in the other regions except for pre-defined CISs. The criterion is to make sure the densities of CISs are higher than those of non-CIS ranges, which guarantees the pre-defined CISs are meaningful. A stochastic illustration of the dataset design is shown in Fig. 3
                        .

To analyze how insertion distribution has an influence on CIS significance, we divide all the CISs into two categories: CIS I and CIS II according to how many tumor types are involved in the CISs. In RTCGD, there is only one CIS in which the insertions are distributed on seven tumor types. The insertions in 78.9% of CISs are only distributed on 1 or 2 tumor types. Only 21.1% of CISs involve 3–7 tumor types. So, in our stimulated data, we define CIS I as involving 1–2 tumor types and CIS II indicates those CISs in which the insertions are distributed on 3–7 tumor types. The CIS classification will be used to demonstrate if an algorithm can evaluate insertion distribution effectively. All the information on the simulated data is listed in Table 1
                        .

We compare DNSD with the kernel framework and the sliding window. For DNSD, we use the parameter set {14, 16, 18, 20, 30, 40, 50, 60, 80, 100} kbp for Eps. For the kernel framework, we employ the parameter set {0.1, 0.5, 1, 2, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100} kbp for window width. For the sliding window, we follow the parameters in RTCGD: {30k for 2 insertions, 50k for 3 insertions, 100k for 4 or more insertions} for window width. As the goal of our comparison is to find which method can identify the boundaries of the CISs as much as possible, we use the following strategy: for every CIS width, all the methods use every parameter. Then, the parameters leading to the highest matching ratio will be selected for comparison. Table 2
                         details the parameters leading to the highest matching ratio in every CIS width.

To evaluate every method, we developed four novel criteria: matching ratio, non-CIS insertion involvement ratio, CIS combination ratio and filtering noises. With the inclusion of TP/FP, all these five criteria are used to compare the three methods in relation to different aspects.

A matching ratio, as an overall criterion, evaluates if one insertion can be classified correctly as a CIS. A detected CIS is not a satisfying discovery if it includes a lot of non-CIS insertions, leading to a low matching ratio. In Fig. 4
                           , the stars indicate 10 retroviral insertions distributed on a part of a genome (black line). The ellipse with the continuous boundary indicates a real CIS which includes five insertions. The ellipse with the broken boundary is a detected CIS in which six insertions are involved. This means only three insertions are classified correctly. So, for this part of the genome, the matching ratio is: 3/(5+6−3)×100%=27.5%.


                           Fig. 5
                            shows the comparison of the three methods on the matching ratio when different CIS width is used. We also calculate the average matching ratio. The experiments demonstrate that DNSD can match on average 80% of the simulated data (kernel density estimation 65.4%; sliding window 25.4%). When small widths are used (200bp, 1kbp, 2kbp), DNSD has its best matching ratio of 100%. The kernel framework reaches its best matching ratio (76%) when the CIS width is 40kbp. When the CIS width=180kbp, the sliding window has a matching ratio of 48%.

For DNSD, the matching ratio when the CIS width=160kbp is higher than when the CIS width is 140kbp and 180kbp, which means the performance of DNSD will not decline as the CIS width increases. The other two methods do not perform better as the CIS width increases. Kernel density estimation performs best when the CIS width is 40kbp. The sliding window has the best matching ratio when the CIS width is 180kbp. Hence, we can speculate that DNSD will still perform better than the other two, even when the CIS width is larger than 200kbp.

In addition, the reason why DNSD performs worse when a large CIS width is used is because the DBScan, which DNSD employs, is a density-based clustering algorithm. In our simulated data, the length of the genome is consistent. When the CIS width increases, the ranges of the CIS regions become larger while the ranges of the non-CIS regions become smaller. But the number of insertions is consistent. Therefore, the density of CIS regions becomes increasingly similar to that of non-CIS regions. When the density of non-CIS regions is higher than that of CIS regions, DNSD can detect the FPs because it considers the non-CIS regions to be CIS regions. But, from the biological point of view, the density of CIS regions must be higher than that of non-CIS regions. Hence, we can speculate that no matter which CIS width is employed, DNSD will be always capable of distinguishing CIS regions from non-CIS regions.

TP (FP) refers to the number of CISs that we detect which are real (false). The performance of the three methods in detecting TPs is very similar, as shown in Fig. 6
                           . Comparatively, sliding window is the best method. No matter which CIS width is used, it can find more TPs than the others. DNSD is a little better than kernel density estimation, because when the CIS width is [0.2, 1, 2, 10, 20, 40, 60, 80, 140, 160] kbp, DNSD can find more TPs than kernel density estimation. B evaluates how many FPs are detected. DNSD and kernel density estimation perform better than the sliding window on this criterion. Combining the fact that sliding window has the lowest matching ratio in Fig. 5, we think the reason the sliding window can find more TPs and FPs than the others is because the CISs that it detects involve many non-CIS insertions and combine many CISs. For instance, one detected CISs includes two or more CISs and non-CIS insertions. Then, from the point of view of TP, all the CISs in the simulated data can be detected. But the ranges of these CISs are extended incorrectly. Consequently, the regions of CISs and non-CISs could overlap, which could lead to another mistake, this being, a non-CIS region could be detected as an effective CIS.

This explanation suits kernel density estimation too, which performs better than the sliding window. When the CIS width is [140, 180, 200] kbp, it detects fewer FPs than DNSD. But its matching ratio is lower than DNSD's. This is because the CISs detected by the kernel density estimation are big enough to cover almost all the insertions in the simulated data. Therefore, most of the insertions are considered to be CIS insertions so there are not enough insertions left to be FPs.

This explanation on including non-CIS insertions and combining CISs will be illustrated in the following experiments.

The non-CIS insertion involvement ratio evaluates how many non-CIS insertions are involved in the detected CISs. It determines whether the method can correctly determine the ranges of CISs from the non-CIS insertion point of view. A detected CIS with more non-CIS insertions will interfere with the determination of the CIS ranges. In addition, the non-CIS insertions that are categorized incorrectly into the detected CISs could be considered to be insertions which are associated with cancer-related genes. Therefore, false genes could be detected. For example, there are 3745 non-CIS insertions in which 2631 are categorized into CISs, which means the non-CIS insertion involvement ratio is: 2631/3745×100%=63.1%. Fig. 7
                            shows a comparison of the non-CIS insertion involvement ratios of the three methods on all the CIS widths.

On average, only 15.4% of non-CIS insertions are involved in the detected CISs when DNSD is used while the sliding window and kernel framework are 54.9% and 45.1%, respectively. In most situations, kernel density estimation performs better than the sliding window. However, Table 3
                            shows kernel density estimation involves many more non-CIS insertions in the detected CISs than the sliding window when the CIS width is [140, 180, 200] kbp. The involvement of more non-CIS insertions must incorrectly extend the ranges of CISs. This phenomenon explains why kernel density estimation detects fewer FPs than DNSD when CIS width=[140, 180, 200] kbp, as shown in Fig. 6.


                           Fig. 7 demonstrates that DNSD can determine the ranges of CISs with higher accuracy because the involvement of fewer non-CIS insertions ensures that the CIS boundaries cannot be extended incorrectly. Accordingly, we can explain why the sliding window can detect most TPs and most FPs, as shown in Fig. 6. Although identifying CISs must be based on biological technology according to current research, detecting CIS ranges maximally can provide a reasonable speculation. Therefore, research costs will be decreased and detection accuracy will be improved dramatically.

The CIS combination ratio indicates how many CISs are combined. If a detected CIS includes two or more CISs, then the ranges of CISs must be extended incorrectly. At the same time, CIS combination can lead to an incorrect exploration and speculation on cancer-related genes. For instance, CIS A is related to the gene responsible for cancer C1, and CIS B is related to the gene responsible for cancer C2. But we combine A and B in one detected CIS. Even though we still can find C1 and C2, we cannot observe their own features and functions.

Let us take an example to calculate the CIS combination ratio. There are five CISs, two of which are combined in one detected CIS. So, the CIS combination ratio is 2/5×100%=40%. A detected CIS could be effective for gene speculation if it does not contain any combined CISs. But we cannot distinguish genes from each other when their own CISs are combined incorrectly. Therefore, we could misunderstand these CISs’ functions, which is vital in research such as drug design and discovery (Chen and Chen, 2008a,b, 2006, 2010; Ambrosi et al., 2008; Kontijevskis et al., 2007).

In Fig. 8
                           , we not only illustrate the number of combined CISs, but also compare the CIS combination ratio when all 14 CIS widths are used. As the number of real CISs is different when the CIS width varies, the number and the ratio of combined CISs are not always exactly consistent. On average, only 10% of CISs are combined when DNSD is employed while kernel density estimation and the sliding window have a CIS combination ratio of 21.2% and 44.4%, respectively.

In summary, we can see that taking TP/FP as the only criterion is not reasonable. The result could be “twisted” so that it cannot guide the exploration of cancer-related genes. When we change our goal to match the original data as much as possible and determine the ranges of CISs, DNSD performs best on every criterion.

This criterion has been especially designed for DNSD because kernel density estimation and the sliding window do not have a special step to filter noises. It calculates the number of noises that DNSD finds which are non-CIS insertions. As shown in Fig. 7, DNSD involves much fewer non-CIS insertions in the detected CISs than the other methods. One of main reasons is that DNSD can filter non-CIS insertions as noises in advance. Fig. 9
                            shows that on average, 98.2% of all the noises that we detect are non-CIS insertions.

Noise filtration is also effective to avoid CIS combination. For example, according to the definition of CIS in the sliding window, if there are three insertions in 50kbp, this region will be considered to be a CIS. If there are several non-CIS insertions existing between two CISs, then these two CISs could be combined because these non-CIS insertions “link” them. Consequently, the detected CIS not only incorrectly extends the ranges of CISs, but also includes non-CIS insertions. This issue can be avoided using DNSD because most of the non-CIS insertions between CISs can be filtered in advance as noises. So, CIS combination and non-CIS insertion involvement can be avoided effectively.

Due to the combination of DW and DD, our method can rank CISs more reliably, which is very important when the size of biological datasets increases dramatically. We divide all the CISs into two categories (CIS I and CIS II) to illustrate the impact of our method on ranking all the CISs. In addition, we add another category, combined CIS, to indicate that the detected CISs include two or more real CISs in the simulated data.


                           Fig. 10
                            shows how to rank all the detected CISs when every CIS width is employed. We can see that no matter which CIS width is used, DNSD can effectively distinguish CIS I from CIS II. However, kernel density estimation and the sliding window mix CIS I and CIS II together, so that we cannot determine which CIS is more significant. At the same time, DNSD finds the fewest combined CISs, which is shown in Fig. 8.

The obvious feature of the sliding window is that too many CISs are combined. These combined CISs are always located at the top of the CIS list. In addition, the number of CIS II that it detects drops dramatically. We can speculate reasonably that most CIS II are combined. In most situations, the ranges of combined CISs are much larger than CIS I and CIS II. Consequently, the combined CISs have more insertions, which make them seem to be more significant. Kernel density estimation hardly detects CIS II. However, it can detect CIS I effectively. It detects fewer combined CIS than the Sliding window. Through analyzing our simulated data and the results of kernel density estimation, we find this situation is because several very big CISs are always combined. These combined CISs are much bigger than those in the Sliding window and they include most CIS II. So, kernel density estimation can detect fewer combined CISs than the Sliding window, but the Sliding window can find more real CISs than kernel density estimation.

In summary, when we compare these three methods, we find kernel density estimation and the Sliding window have the following shortcomings:
                              
                                 (1)
                                 Too many CIS II are combined.

Very few boundaries of CIS II can be detected.

CIS II and CIS I cannot be distinguished effectively.

The first two occur because kernel density estimation and the Sliding window do not resolve data biases and noises effectively. The third occurs because: (1) kernel density estimation and the Sliding window do not take insertion distribution across tumors into consideration; and (2) determining the significance of CISs only by considering the number of insertions in them is not an effective method as the result can be easily influenced by noises.

On the real data, RTCGD, we compare DNSD with the sliding window to: (1) compare the CISs in RTCGD and ones that we detect to find the novel CISs; (2) find potential noise I; and (3) speculate on the significance of CIS in RTCGD according to the null hypothesis. In addition, we also compare DNSD with kernel density estimation according to Uren et al. (2008) to demonstrate that our method is effective and promising.

When α
                           =0.05, we use every Eps to detect CISs for a comparison with the sliding window. In other words, the CISs that we detect would be suitable for diverse biological regions. We illustrate the comparison in Fig. 11
                           . A shows how many CISs can be detected by DNSD and the sliding window, respectively. Although the sliding window can find more CISs than DNSD, it is not good at filtering false CISs according to our analysis on the simulated data as shown in Fig. 6. So, the sliding window cannot determine the ranges of CISs effectively.

B shows the number of CISs which can be detected not only by DNSD but also by RTCGD. Both methods are considered to be informative as they both detected 314 CISs, on average. Some significant CISs can still be found in DNSD, such as Gfi1 and Myc. In RTCGD, Gfi1 is considered to be the first significant CIS because it includes 82 retroviral insertions. Myc ranks second for including 78 insertions. In DNSD, Gfi1 is still more important than Myc because both of them can be found on five tumor types (Bcell, Tcell, HS, lymphoma and myeloid). Further analysis shows that they have similar insertion distribution across tumors. For instance, they both have only two insertions on myeloid. Gfi1 has 38 insertions on Tcell. 46 insertions of Myc can be found on Tcell, too. Therefore, insertion distribution does not have an influence on them. But for some CISs, their significance could change because of insertion distribution. Let us take Evi8 and Lvis1 as an example. In RTCGD, they are equally significant because both have 38 insertions. However, in DNSD, Evi8 is more significant. This is because its insertions distribute on six tumor types (stem, myeloid, Lymphoma, Bcell, Tcell and myeloid_mix). Comparatively, the insertions belonging to Lvis1 can only be detected on three tumor types: Bcell, T, Bmix and Tcell. In addition to this, RTCGD assumes Fgf3 is as significant as Evi8 and Lvis1 for including 38 retroviral insertions. But in DNSD, Fgf3 is less significant than Evi8 and Lvis1 because all the insertions in it are located on mammary_tumor. This example illustrates vividly that our method can rank CISs because it takes insertion distribution into consideration.

In addition to identifying known significant CISs, DNSD can also detect novel CISs, which is shown in C. Combining biological analysis and Ensembl (http://www.ensembl.org/index.html) search, we detect 53 novel CISs. Table 4
                            lists the genes resulting from the top 5 CISs by DNSD (all 53 novel CISs are listed in Table S1, including details such as CIS center, CIS range, insertion number, putative targets and so on). Some novel CISs have already been identified as being related with cancer although they cannot be detected by the sliding window. For example, the first putative target Elovl5 is associated with breast cancer (Van’t et al., 2002). Elovl5 (hepatic fatty acid elongase 5) is ELOVL family member 5, elongation of long chain fatty acids. Its expression can be regulated by sterol regulatory element binding protein-1c (Yang et al., 2003; Qin et al., 2009; Xiong et al., 2000; Yamamoto et al., 2007). When it up-expresses, the breast cancer types with which it is associated are BRCA1 mutation positive vs BRCA2 mutation positive and lymphocytic infiltrate positive vs negative. When it is down-regulated, it is related with breast cancer type sporadic vs BRCA1 mutation positive, BRCA2 mutation positive (details in G2SBC: http://www.itb.cnr.it/breastcancer; breast cancer database: http://www.breastcancerdatabase.org). In addition, the reason why Elovl5 and Agpat3 are considered to be in one CIS is because (1) they are close to each other; and (2) from a biological point of view, they were identified as being in the same gene cluster when exploring atopic eczema (Saaf et al., 2008). Elovl5 is one of the genes encoding key enzymes in polyunsaturated fatty acid pathways. Agpat3 plays an important role in the phospholipid pathways as an acyltransferase. In addition, Ankrd24 in the third CIS is associated with breast cancer as well (Han et al., 2006). The discovery of Lck, 6330548G22Rik and Ddx3x confirms the findings of Uren et al. (2008).

As previously discussed, filtering noises can contribute to the detection of CISs, as shown in Fig. 12
                           . On average, 554 non-CIS insertions are filtered as noises. The increase of Eps indicates that the ranges of the CISs that we detect have increased, which means an increased number of insertions are included in CISs while a lower number of insertions are considered to be noises. As shown in Fig. 9, we demonstrate that DNSD can detect noises effectively and correctly.

According to the null hypothesis, we evaluate how many CISs could be not significant when α
                           =0.05. Fig. 13
                            shows how many CISs in RTCGD are not considered to be significant when Eps varies. The horizontal axis is 10 Eps values and the average value. The vertical axis represents the percentage of CISs with low significance. On average, 51.2% of CISs are considered to be less significant. These CISs are discarded for the following reasons: (1) they could be noises; (2) they could be false CISs; or (3) they could be real CISs with lower significance.


                           Table 5
                            shows the sets of the top 15 CISs from the three methods. The results from the sliding window and DNSD are based on the RTCGD dataset. The CISs from the kernel framework are from Uren et al. (2008). RTCGD includes retroviral insertions from a variety of tumors. The dataset in Uren et al. (2008) focuses on p19ARF and p53, which is composed of more than 10,000 insertions. The dataset includes many insertions that are also included in RTCGD. At the same time, it also includes many novel insertions about p19ARF and p53. So, a comparison of the sliding window and DNSD shows that our method regulates CISs more reasonably. A comparison of DNSD and kernel density estimation to determine which one is better is not made because they use different datasets.

Similar to Uren et al. (2008), we use 30k as the DNSD parameter. A comparison with the sliding window indicates that our method ranks CISs effectively. For example, Sox4 ranks the first because it involves 7 tumor types although it includes 75 insertions while Gfi1 has 82 insertions. This result does not confirm Section 3.2.1 in which Gfi1 is still the most important CIS from DNSD. This is because in Section 3.2.1, we combine and evaluate all the CISs of different CIS widths while here we use 30k as the only parameter. Based on the fact that there is an overlapping part between RTCGD and the dataset in Uren et al. (2008), our results on RTCGD find the same number of CISs as Uren et al. (2008). 7 CISs are detected by both DNSD and kernel density estimation (Gfi1, Myc, Rras2, Notch1, Ccnd3, Jundm2 and Pim1). The difference in the results of DNSD and kernel density estimation is due to the fact that they use different datasets.

In addition, 3 CISs from the entire novel CISs that we detected were discovered by kernel density estimation (Uren et al., 2008). As shown in Table 6
                           , Lck, 6330548G22Rik and Ddx3x were detected by both methods with different orders. According to kernel density estimation, Lck is the most important, which is similar to our result. However, the order of 6330548G22Rik and Ddx3x by kernel density estimation is different to that of DNSD. We think this difference may result from: (1) different datasets including different insertions; and (2) we consider the insertion distribution while kernel density estimation does not. This example demonstrates that DNSD is still suitable for small CISs that include very few insertions after taking insertion into account. This means our method can detect CISs of any size.

@&#DISCUSSION@&#

Retroviral insertional mutagenesis plays a very important role in carcinogenesis. Tumors could occur if retroviral insertions alter the expression of cancer-related genes. So, a very promising method for identifying cancer-related genes is to identify the regions that retroviral insertions, which are distributed on multiple independent tumors, have hit more frequently than expected. Detecting CISs should overcome the following challenges: (1) the method should be independent of any underlying insertion distribution; (2) the method should take hotspots into consideration; (3) the method should detect CISs of any size to meet biological variance; (4) the noises should be classified and filtered effectively; and (5) the boundaries of the CISs should be estimated as accurately as possible.

Although they perform well based on different technology, none of the current methods can address: noise filtering, insertion distribution on tumors and evaluation criteria. So, they fail to determine the boundaries of the CISs maximally, neither can they rank all the CISs. We have developed a method, DNSD (DBScan and normal standard deviation), to resolve these challenges. DNSD uses two criteria to evaluate if a CIS is significant: distribution width (DW) and distribution depth (DD). DW clusters all the insertions into diverse regions, calculating the number of insertions in every region and filtering noises. DD evaluates how insertions distribute across tumor types for every region. One region with a large DW and DD will be considered to be a significant CIS. Finally, all the CISs will be ranked according to DW×DD.

We compare DNSD with kernel density estimation and the Sliding window on simulated data. To consider CISs of variable widths, we define 14 CIS widths from 200bp to 200kbp. All the experiments show that DNSD can match 80% of the simulated data (kernel density estimation: 65.4%, Sliding window: 25.4%). In addition to evaluating the extent of matching the simulated data, we developed three other criteria to evaluate DNSD: (1) non-CIS insertion involvement ratio; (2) CIS combination ratio; and (3) noise in non-CIS. The first evaluates how many non-CIS insertions could be categorized into CISs incorrectly. The experiments illustrate that only 15.4% of non-CIS insertions are included in the detected CISs by DNSD, which is much better than kernel density estimation by 29.7% and the Sliding window by 35.9%. The second is taken to calculate how many CISs in the simulated data are combined in the detected CISs. DNSD combines 10% of CISs in the simulated data, compared with 44.4% of CISs by the Sliding window and 21.2% by kernel density estimation. The high CIS combination ratio indicates the incorrect evaluation of the ranges of CISs. So, our DNSD is the best way to determine the ranges of the CISs. The third evaluates if noise filtering is effective. Fig. 5 illustrates that on average, 98.2% of noises that we detected were identified correctly.

We also compare these three methods on two traditional criteria: TP and FP. Based on Fig. 6, we can see that the three have a similar performance in detecting TPs, but DNSD performs much better than the other two when detecting FPs. For instance, when the CIS width is 2kbp, both the Sliding window and DNSD can detect 497 TPs. But the Sliding window also detects 150 FPs while no FPs are detected by DNSD. In addition to this, from Fig. 10, it is easily seen that DNSD is good at distinguishing CISs from each other according to their significance. This ranking indicates how significant one CIS is due to the combination of the insertion quantity and the insertion distribution. Consequently, our method not only finds as many TPs and as few FPs as possible, it also highlights the real significant CISs.

We analyzed the real data, RTCGD, using DNSD under α
                     =0.05 of the null hypothesis. The experiments show that DNSD not only regulates the order of the CISs, it also identifies novel CISs. Some novel CISs have already been proven in the biological literature (Uren et al., 2008; Saaf et al., 2008; Han et al., 2006). In addition, a comparison with Uren et al. (2008) demonstrates that our method detects small CISs with very few insertions as well.

Summarizing, our method is able to meet all the challenges mainly because: (1) we employ DBScan to identify the boundaries of the CISs as accurately as possible; and it considers hotspots and filter noises; (2) we use NSD to analyze retroviral insertion distribution across tumor types; and (3) we develop four criteria for evaluating the methods correctly. All the experiments on the simulated and real data demonstrate that our method is promising and effective.

@&#METHOD@&#

DNSD is a hierarchical algorithm, as shown in Fig. 14
                      (Embrechts et al., 2013; Cassisi et al., 2013). A is the original data which includes five tumors and insertions, including CIS and non-CIS insertions, on them. B is the first step of DNSD, in which DBScan is used to cluster insertions and filter noises (Sharma and Ram Anant Singh, 2011). The four ellipse areas indicate detected CISs. Two separated stars indicate two noises (non-CIS insertions) that are deleted by DBScan. For each detected CIS i, this step is to determine how many insertions are in it, i.e., DW:
                        
                           (1)
                           
                              
                                 
                                    DW
                                    i
                                 
                                 =
                                 
                                    n
                                    i
                                 
                              
                           
                        
                     where DW
                        i
                      indicates the distribution width of the detected CIS i, and n
                     
                        i
                      is the number of insertions in detected CIS i.


                     C extends to two-dimensional space from one dimension to evaluate how insertions distribute across tumor types (DD). We have designed normal standard deviation to deal with this. For CIS i, its DD
                        i
                      is:
                        
                           (2)
                           
                              
                                 D
                                 
                                    D
                                    i
                                 
                                 =
                                 
                                    1
                                    
                                       
                                          
                                             (
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                
                                                   
                                                      T
                                                      
                                                         sum
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      (
                                                      
                                                         n
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                      /
                                                      
                                                         n
                                                         i
                                                      
                                                      )
                                                      −
                                                      (
                                                      1
                                                      /
                                                      
                                                         T
                                                         
                                                            sum
                                                         
                                                      
                                                      )
                                                      )
                                                   
                                                   2
                                                
                                             
                                             )
                                             /
                                             
                                                T
                                                
                                                   sum
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where n
                     
                        i
                      indicates how many insertions there are in detected CIS I, T
                     sum is the number of tumor types, and n
                     
                        ij
                      indicates how many insertions distribute on tumor type j in detected CIS i. The rectangles in C represent the distributions of the insertions in the four detected CISs. A CIS with a higher rectangle is more significant because the insertions in it are distributed on more tumor types, implying the related cancer genes involve more tumor types. Therefore, for a detected CIS i,
                        
                           (3)
                           
                              
                                 
                                    DNSD
                                    i
                                 
                                 =
                                 
                                    DW
                                    i
                                 
                                 ×
                                 
                                    DD
                                    i
                                 
                              
                           
                        
                     
                  

D describes the application of the null hypothesis for threshold:
                        
                           (4)
                           
                              
                                 
                                    H
                                    0
                                 
                                 :
                                 
                                    ζ
                                    ¯
                                 
                                 =
                                 ζ
                                 (
                                 
                                    DNSD
                                    i
                                 
                                 )
                              
                           
                        
                     where a null hypothesis is that the value of ith CIS (ζ(DNSD
                        i
                     )) is equal to the mean of all the CISs 
                        
                           (
                           
                              ζ
                              ¯
                           
                           )
                        
                     . When DNSD
                        i
                      is much higher than 
                        
                           
                              ζ
                              ¯
                           
                        
                     , H
                     0 is rejected, which means DNSD
                        i
                      is significant. On the simulated data, we do not use any threshold. We compare all the CISs from the three algorithms for a comprehensive analysis. On the real data, we let α level be 0.05.

Therefore, a CIS will be significant if it contains many insertions that are distributed on a variety of tumor types. The introduction of distribution depth can filter false CISs from noise II. Combining DD and DW can provide a better method by which to rank CISs. At the same time, taking insertion distribution into consideration will not impact the ability of our method to detect the small CISs which include very few insertions (the details of DBScan and normal standard deviation are given in Appendix 1).

@&#CONCLUSION@&#

One CIS is a region on a genome that is hit more frequently by retroviral insertions than expected by chance. CISs are closely related to cancer gene discovery as their loci are always relevant to cancer gene loci. So, identifying important CISs theoretically equals the discovery of cancer genes. We have designed a method to find the CISs, by which a genome region is significant if it not only includes many insertions, but also allocates these insertions on a variety of genome fragments. The comparison of our method with kernel density estimation and the sliding window shows that our method not only identities cancer-related insertions effectively, it also filters noises correctly. The experiments on the real data show that taking insertion distribution into account can highlight significant CISs.

@&#ACKNOWLEDGEMENTS@&#

The work in this paper was partially supported by Australian Research Council Grant DP0559251, National Natural Science Foundation of China (NSFC 61203265, 61001099), Henan Key Project (122102110106) and Ph.D. Fund of Henan University of Technology (150121).

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.compbiolchem.2014.03.001.


                     
                        
                           
                        
                     
                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

