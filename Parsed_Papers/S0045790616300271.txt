@&#MAIN-TITLE@&#A cross-layer framework for joint routing and rate adaptation in infrastructure Wireless Mesh Networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           New routing metric is analytically derived using IEEE 802.11 DCF mechanism.


                        
                        
                           
                           Routing metric and rate adaptation decisions are strongly related.


                        
                        
                           
                           Joint routing and rate adaptation framework is proposed by exploiting cross-layer information.


                        
                        
                           
                           Link quality is estimated using passive monitoring to minimize routing overhead.


                        
                        
                           
                           NS2 results reveals that joint framework performs better than existing approaches.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Wireless Mesh Networks

Multi-radio

Routing metrics

Cross-layer

Passive metric

Rate control

@&#ABSTRACT@&#


               
               
                  In this paper, we propose a cross-layer framework for joint routing and rate adaptation in multi-rate, Multi-Channel, Multi-Radio (MCMR) infrastructure Wireless Mesh Networks (WMNs). These networks use MCMR capabilities of mesh routers to achieve high performance. However, the MCMR nodes introduce interference in the multi-hop mesh networks and can degrade QoS. Thus, the design of routing metrics to improve the QoS has become an important research issue. Furthermore, as the routing metric and rate adaptation decisions are closely related, the joint approach is needed to improve the performance of the network. Towards this, we analytically derive our routing metric using IEEE 802.11 Distributed Coordination Function (DCF) basic access mechanism. Using this model, we propose Passive Interference and Delay Aware (P-IDA) routing metric which estimates the delay and interference by exploiting cross-layer information. We extend the work by performing joint routing and rate adaptation. The simulation results using NS2 reveal that proposed framework improves throughput and delay compared to existing approaches with reduced routing overhead.
               
            

@&#INTRODUCTION@&#

Wireless Mesh Networks (WMNs) [1] are emerging as a popular technology in the field of multi-hop wireless networks in recent years. These networks are becoming more popular as backbone network to provide ubiquitous internet access and broadband wireless coverage of large areas with minimal upfront investments. WMNs are composed of gateways, mesh routers and mesh clients. Mesh routers generally have the minimum mobility and are employed to form infrastructure/backbone mesh network. These routers act as an access point for mesh clients or forward packets from other routers. The gateways allow backbone WMNs to connect to other types of networks like the internet. Recently, many real-time applications like Voice over IP, online gaming and video streaming are becoming popular in WMNs. These applications depend on adequate QoS support with strict delay requirements. Thus, providing QoS for these applications has become an important research issue [2].

With the reduction in 802.11 hardware costs, mesh routers in WMNs are equipped with single or more radios that enhance the network capability and improve QoS. However, the QoS degrades significantly as the number of nodes or hops increases. Thus, there is the need for routing protocols together with routing metrics to guarantee the QoS. The traditional hop-count metric is unsuitable in these networks as wireless link quality varies over a time in terms of delay, loss ratios and link capacity. As mesh routers in these networks forward heavy traffic from mesh client to internet gateways, routers spend a considerable amount of time in binary exponential backoff process. This increases the effective packet delay at the network layer. Thus, there is a need to effectively measure the packet transmission delay, including retransmissions, contention delay and queuing delay. Apart from delay, estimating the inter-flow and intra-flow interference has become an important issue with the increase in the number of radio interfaces. Hence, there is a need for better routing metric that takes into account delay, link capacity and interference to estimate the link quality accurately using cross-layer mechanism.

In addition to MCMR routing, rate adaptation has become an important issue with each node capable of operating at multiple transmission rates depending on 802.11 standards. Many rate adaptation techniques are proposed in the literature. These techniques evaluate current channel conditions and adapt the transmission rate at MAC layer. However, the rate adaptation and routing metrics are strongly related as the link quality estimated by routing metrics is based on the chosen transmission rate. Thus, there is a need for a joint approach to routing metrics and rate adaptation which can improve the QoS. Towards this, to the best of our knowledge, only three works on a joint approach to routing and rate adaptation are reported in the literature [3–5]. However, these approaches are based on single-radio routing metrics and lack analytical model in the design. The contributions of this paper are threefold.

                        
                           •
                           We analytically derive a delay component of our routing metric by considering transmission and contention delays using IEEE 802.11 DCF model [6].

Design and implement a new routing metric called Passive Interference and Delay Aware (P-IDA) by estimating the link quality using the above model by accessing PHY, MAC and Network layer parameters.

Carry out the joint routing and rate adaptation at the MAC layer by using the statistics provided by the routing metric.

The outline of the paper is as follows. In Section 2, we discuss literature review on routing metrics, rate adaptation and joint approaches separately. In Section 3, we discuss about the 802.11 DCF model and proposed routing metric and rate adaptation mechanism based on this model. The Sections 4 and 5 present the simulation environment and evaluation of results respectively. The Section 6 gives the conclusion and future work.

@&#RELATED WORK@&#

In this section, we discuss the work reported in the literature about routing metrics, rate adaptation and three joint approaches separately.

Several routing metrics are proposed in the literature. Here, we review important metrics which are related to our work. Most of the routing metrics proposed in the literature are based on the Expected Transmission Count (ETX) metric as discussed in [7]. The ETX [8] is the first QoS-aware routing metric which is deployed in the WMNs testbed. ETX estimates the total number of packet transmissions required to send the packet to the destination through a wireless link successfully. It is measured by multiplying the forward delivery ratio df
                         and reverse delivery ratio dr
                         of a link. df
                         is the measured probability that the packet is successfully received at destination node and dr
                         is the probability that acknowledgment of the packet is successfully received. The authors demonstrate through testbed results that ETX computes high-throughput routes than the hop count based routing. The problem with ETX is that it does not consider the differences in multiple transmission rates which are very important in multi-rate mesh networks. Furthermore, metric does not explicitly compute the inter-flow interference experienced by the links. Expected Transmission Time (ETT) is proposed in [9] to incorporate the limitations of ETX. The metric estimates the delay of packet at a transmission rate of each individual link. ETT estimates the link quality using packet losses, packet size and available transmission rate of each individual link. The cost of each path is estimated by summing up the ETT values of each link. However, ETT inherits the drawbacks of ETX as it does not consider load and interference.

Another routing metric called Channel utilization and Contention Window (C2WB) is proposed in [10]. The metric is derived using 802.11 MAC delay model but lacks many details. The metric computes the link service time using three QoS parameters, namely transmission time, backoff time and defer time. Using these parameters, the authors estimate the link quality using channel utilization, average contention window and ETT. The metric considers logical interference implicitly using channel contention and balances the load. However, it does not consider interference explicitly and available capacity computation of ETT is static. Another routing metric QUIT which estimates the link quality parameters, namely link quality, channel utilization, interference and traffic load is proposed in [11]. The metric is derived using non-utilized outage capacity analysis, but metric is basically designed for single-radio network.

All the above metrics are proposed for single-radio wireless networks. With an increased demand for multi-radio mesh networks, design of interference-aware routing metrics has become an important research issue. The most popular and the first routing metric proposed for multi-radio networks is the Weighted Cumulative Expected Transmission Time (WCETT) [9]. The metric explicitly estimates the intra-flow interference among the links that uses the same channel. However, WCETT does not incorporate the inter-flow interference and load. In addition, WCETT is not isotonic and cannot compute loop free minimum weight paths. The Metric of Interference and Channel-switching (MIC) [12] metric addresses the drawback of The WCETT. It scales up ETT by capturing inter-flow interference using the protocol interference model. It also estimates the intra-flow interference using the virtual node concept. However, it does not consider interference in a dynamic way as all the neighboring nodes may not be involved in the transmission. This may overestimate the link cost. In addition, the load on each interfering nodes is not considered.

Another routing metric which estimates the inter-flow interference in realistic way using physical interference model was proposed in [13]. The metric Interference Aware Routing (iAWARE) estimates both inter-flow and intra-flow interference. The metric gives more weightage to ETT compared to inter-flow interference on the wireless link. However, it does not consider the effect of contention delay in the estimation of ETT. Additionally, iAWARE is a non-isotonic routing metric. The Contention-Aware Transmission Time (CATT) metric which estimates the contention over wireless channel and rate diversity is proposed in [14]. It captures the delay of interfering links between 1 and 2 hop neighbors. Hence, the CATT metric avoids the congested paths and provides better performance. CATT metric also has disadvantages as it assumes that all the neighboring nodes are participating in the interference (whether or not they are involved in transmitting the packets), which may overestimate the link quality. The metric is derived using 802.11 MAC throughput model for multi-rate capabilities of nodes but lacks the details.

The Expected End-to-End Delay (EED) proposed in [15] estimates the queuing and transmission delay to compute the path with minimum delay. The authors use this metric in design of weighted end-to-end delay metric for multi-radio networks by incorporating inter-flow and intra-flow interference. The inter-flow interference is estimated using concepts similar to physical interference. However, metric does not consider the contention delay in the estimation of delay. Another routing metric called Interference and Channel Diversity (MIND) proposed is proposed in [16] by employing the passive monitoring mechanism. It considers the inter-flow interference using a physical interference model similar to iAWARE and calculates the intra-flow interference based on the local information. The estimation of traffic load is based on channel busy time. This metric also has some disadvantages since the metric does not perform well in the lightly loaded networks. All the above metrics except CATT, C2WB, QUIT are based on computing routes based on the measurement based approach and lack analytical model. The CATT, C2WB and QUIT derive the routing metrics using the analytical model but lack in-depth analysis in choosing the link quality parameters in the metric design. The summary of the important parameters considered by recent multi-radio routing metrics and which are important for the design of our metric P-IDA is given in Table 1
                        .

Rate adaptation schemes are classified into three approaches, namely frame loss based, signal strength/SNR based and statistical based. Similar to routing metric design, there is a trade-off between control overhead in terms of channel state estimation and rate convergence [17] in the design of these approaches. The first category of rate adaptation techniques are based on sensing channel condition using frame or packet loss and adapting the transmission rate appropriately. Auto Rate Fallback (ARF) [18] is one of the first rate adaptation mechanism developed for WaveLAN-II 802.11 cards. The mechanism lowers its rate after encountering a second missed acknowledgement of data packets. Rates are updated based on a counter which keeps track of the number of good and bad acknowledgement packets. However, ARF is designed for a few rates and does not work well with current IEEE 802.11 implementations. Adaptive Auto Rate Fallback (AARF) [19] extends ARF by using fixed and dynamic frame error thresholds. The technique is proposed to improve the performance in stable and low latency networks. It adaptively adjusts the rate increase threshold value which is kept constant in ARF (Auto Rate Fallback). This mechanism uses binary exponential backoff to adapt the threshold value.

The second category of rate adaptation mechanisms which are reported in the literature are based on signal strength. The sender chooses the transmission rate based on the signal strength received by the receiver. One such technique called as Receiver Based Auto Rate (RBAR) is proposed in [20]. The authors use RTS/CTS packets to transmit sender transmission rate and receiver estimated transmission rate. The receiver estimates the channel state using Signal to Noise Ratio (SNR) and Bit Error Rate (BER) to compute the transmission rate. Another approach Loss Differentiation Rate Adaptation (LDRA) which differentiates frame losses from collisions and channel fading is proposed in [21]. Similar to RBAR, it periodically collects the information about the channel state through SNR, RSSI or BER and estimate the appropriate rate which is sent to the sender in beacon. It also doubles the contention window if no beacon is received. These techniques are based on the RTS/CTS mechanism to compute the transmission rate, which adds control overhead in a well planned infrastructure mesh networks.

Third category of rate adaptation mechanisms are based on observing statistics over a period of time using throughput, delay or packet losses. The popular technique in this category is SampleRate [22], which uses the delay as the channel state indicator. It improves the throughput by sending packets at the transmission rate that has the smallest average packet transmission time which is measured over a sampling period. Another technique Throughput Enabled Rate Adaptation (TERA) which considers interference and congestion is proposed in [23]. It is based on measurements of the throughput attained at different data rates over a sampling period and selecting the suitable rate. These approaches perform better compared to frame loss and signal strength based mechanisms.

The joint approaches to routing, rate adaptation, channel assignment, and scheduling for multi-hop wireless mesh networks are explored in the literature [24–26]. With the multi-radio capabilities, these joint approaches are becoming more popular as a lot of complexity is involved with increased capacity. The joint approaches to routing and rate adaptation has become an important research issue as the routing metric computation is based on the chosen rate. The only three approaches which address the joint problem of routing metrics and MAC layer rate adaptation are reported in [3–5]. In [3], the authors propose multi-rate anypath routing algorithm where they consider link rate in computing the route. The authors extend the ETT metric to compute the link costs for each available PHY rate. In [4], the authors propose the joint approach to routing metrics and rate adaptation. The routing metric statistics are used to adapt the MAC layer transmission rate of a node. The authors use ETX metric which is computed using SNR values for each rate and perform the rate adaptation. The authors in [5] propose a joint framework for routing and link rate adaptation based on new routing metric Expected Transmission cost for Multi-rate (ETM). The authors use the position of the link on the route to avoid the frequent route changes. All these joint approaches are based on single-radio based routing metrics. In addition, these approaches use active probing mechanism for routing and rate control. In this work, we design and implement the joint approach of routing metric and rate adaptation for multi-radio mesh networks using passive mechanism.

In this section, we discuss the 802.11 DCF delay model which is used to derive our routing metric. Later, we discuss the design and implementation of our routing metric with rate adaptation in the OLSR routing protocol using cross-layer mechanism.

We use the model presented in [27] to analytically derive our routing metric. Our model considers the frame retries limits. We use 802.11 MAC Distributed Coordination Function (DCF) which has two techniques for frame transmission, namely basic access mechanism and RTS/CTS mechanism. We use the basic access method with two-way handshaking using the DATA and ACK packets. In this mechanism, access to wireless channel is controlled using two Inter-frame Space (IFS) intervals namely short IFS (SIFS), and DCF-IFS (DIFS). This mechanism is designed to avoid collisions using an exponential backoff algorithm. In DCF basic access mechanism, if the channel is busy, a backoff time is chosen randomly in the interval [0, CW], where CW is a contention window. This timer is decreased by one when the station senses the channel at idle state for a period known as distributed interframe spacing time (DIFS). The timer stops when the channel is busy and resumes when the channel is idle again. CW is an integer value determined by physical layer characteristics such as CWmin
                         and CWmax
                        . After each unsuccessful transmission, CW is doubled up to the maximum value CWmax
                        . When the backoff timer reaches zero, the source transmits the data packet when the channel is idle. The receiver transmits the ACK after waiting for SIFS. When a data packet is transmitted, all other stations hearing this transmission adjusts their Net Allocation Vector (NAV). We consider the saturated scenario for all our derivations as all of the nodes in a infrastructure wireless mesh network will be sending frames. The important notations used and their meaning is listed in Table 2
                        .

The average backoff delay is defined as the average time a packet spends in the backoff process for the successful transmission of the frame. Let DB
                            be the backoff delay and NB
                            be the number of backoff stages, each with a length of LB
                           , and then the average backoff delay experienced by a transmitted frame for a station is given by

                              
                                 (1)
                                 
                                    
                                       E
                                       
                                          [
                                          
                                             D
                                             B
                                          
                                          ]
                                       
                                       =
                                       E
                                       
                                          [
                                          
                                             N
                                             B
                                          
                                          ]
                                       
                                       ·
                                       E
                                       
                                          [
                                          
                                             L
                                             B
                                          
                                          ]
                                       
                                    
                                 
                              
                           where E[NB
                           ] is the average number of backoff stages and E[LB
                           ] is the average length of each backoff stage. These two parameters are derived as follows.

the average number of backoff stages E[NB
                              ] is calculated using average contention window. In exponential backoff process of DCF, the contention window is initially set to CWmin
                              . When the collision occurs, the station reduces its transmission rate by doubling the size of its CW. Larger contention window reduces the collisions, but slows down the transmission of packets. Thus,

                                 
                                    
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      C
                                                      
                                                         W
                                                         i
                                                      
                                                      =
                                                      
                                                         2
                                                         i
                                                      
                                                      ×
                                                      C
                                                      
                                                         W
                                                         
                                                            m
                                                            i
                                                            n
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      if
                                                      
                                                      i
                                                      
                                                      <
                                                      
                                                      m
                                                      
                                                         
                                                         ′
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      C
                                                      
                                                         W
                                                         i
                                                      
                                                      =
                                                      
                                                         2
                                                         
                                                            m
                                                            ′
                                                         
                                                      
                                                      ×
                                                      C
                                                      
                                                         W
                                                         
                                                            m
                                                            i
                                                            n
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      if
                                                      
                                                      i
                                                      
                                                      
                                                         >m
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    C
                                    W
                                    =
                                    C
                                    
                                       W
                                       
                                          m
                                          i
                                          n
                                       
                                    
                                    +
                                    1
                                    ,
                                 
                              
                              
                                 
                                    
                                       2
                                       
                                          m
                                          ′
                                       
                                    
                                    ×
                                    C
                                    W
                                    =
                                    C
                                    
                                       W
                                       
                                          m
                                          a
                                          x
                                       
                                    
                                    +
                                    1
                                    ,
                                 
                               
                              m′ is backoff stage and m is maximum backoff stage (permitted number of retransmissions). Assuming that p is a collision probability, a packet is transmitted with probability of 
                                 
                                    (
                                    1
                                    −
                                    p
                                    )
                                 
                              . The average contention window for this packet is 
                                 
                                    
                                       C
                                       
                                          W
                                          
                                             m
                                             i
                                             n
                                          
                                       
                                       +
                                       1
                                    
                                    2
                                 
                              . If this transmission fails, the packet will be transmitted successfully with the probability of 
                                 
                                    p
                                    (
                                    1
                                    −
                                    p
                                    )
                                    .
                                 
                               The average contention window for this packet is 
                                 
                                    (
                                    2
                                    *
                                    C
                                    
                                       W
                                       
                                          m
                                          i
                                          n
                                       
                                    
                                    +
                                    1
                                    )
                                    /
                                    2
                                 
                              . This is continued till the last (
                                 
                                    m
                                    th
                                 
                              ) permitted retransmissions. The contention window will be increased till CWmax
                               and remains constant thereafter. Thus, the average number of backoff stages can be computed as follows.

                                 
                                    (2)
                                    
                                       
                                          
                                             
                                                
                                                   E
                                                   [
                                                   
                                                      N
                                                      B
                                                   
                                                   ]
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   α
                                                   
                                                      (
                                                      
                                                         
                                                            C
                                                            
                                                               W
                                                               
                                                                  m
                                                                  i
                                                                  n
                                                               
                                                            
                                                            +
                                                            1
                                                         
                                                         2
                                                      
                                                      )
                                                   
                                                   +
                                                   α
                                                   p
                                                   
                                                      (
                                                      
                                                         
                                                            2
                                                            C
                                                            
                                                               W
                                                               
                                                                  m
                                                                  i
                                                                  n
                                                               
                                                            
                                                            +
                                                            1
                                                         
                                                         2
                                                      
                                                      )
                                                   
                                                   +
                                                   ⋯
                                                   +
                                                   α
                                                   
                                                      p
                                                      
                                                         m
                                                         ′
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               2
                                                               
                                                                  m
                                                                  ′
                                                               
                                                            
                                                            C
                                                            
                                                               W
                                                               
                                                                  m
                                                                  i
                                                                  n
                                                               
                                                            
                                                            +
                                                            1
                                                         
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   +
                                                   
                                                   α
                                                   
                                                      p
                                                      
                                                         
                                                            m
                                                            ′
                                                         
                                                         +
                                                         1
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               2
                                                               
                                                                  
                                                                     m
                                                                     ′
                                                                  
                                                                  +
                                                                  1
                                                               
                                                            
                                                            C
                                                            
                                                               W
                                                               
                                                                  m
                                                                  i
                                                                  n
                                                               
                                                            
                                                            +
                                                            1
                                                         
                                                         2
                                                      
                                                      )
                                                   
                                                   +
                                                   α
                                                   
                                                      p
                                                      
                                                         m
                                                         −
                                                         1
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               2
                                                               m
                                                            
                                                            C
                                                            
                                                               W
                                                               
                                                                  m
                                                                  i
                                                                  n
                                                               
                                                            
                                                            +
                                                            1
                                                         
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    α
                                    =
                                    
                                       
                                          1
                                          −
                                          p
                                       
                                       
                                          1
                                          −
                                          
                                             p
                                             m
                                          
                                       
                                    
                                    ,
                                 
                               
                              m is the backoff stage, 
                                 
                                    (
                                    1
                                    −
                                    
                                       p
                                       m
                                    
                                    )
                                 
                               is the normalization factor which ensures that probability of each backoff stage follows a valid probability distribution. After some algebraic manipulation, we obtain

                                 
                                    (3)
                                    
                                       
                                          E
                                          
                                             [
                                             
                                                N
                                                B
                                             
                                             ]
                                          
                                          =
                                          
                                             1
                                             
                                                1
                                                −
                                                
                                                   p
                                                   m
                                                
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   C
                                                   
                                                      W
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                   
                                                   
                                                      (
                                                      1
                                                      −
                                                      p
                                                      )
                                                   
                                                   
                                                      (
                                                      1
                                                      −
                                                      
                                                         
                                                            (
                                                            2
                                                            p
                                                            )
                                                         
                                                         
                                                            m
                                                            ′
                                                         
                                                      
                                                      )
                                                   
                                                
                                                
                                                   2
                                                   (
                                                   1
                                                   −
                                                   2
                                                   p
                                                   )
                                                
                                             
                                             +
                                             
                                                
                                                   1
                                                   −
                                                   
                                                      p
                                                      
                                                         m
                                                         ′
                                                      
                                                   
                                                
                                                2
                                             
                                             )
                                          
                                          +
                                          
                                             (
                                             
                                                
                                                   
                                                      (
                                                      
                                                         2
                                                         
                                                            m
                                                            ′
                                                         
                                                      
                                                      C
                                                      
                                                         W
                                                         
                                                            m
                                                            i
                                                            n
                                                         
                                                      
                                                      −
                                                      1
                                                      )
                                                   
                                                   
                                                      (
                                                      
                                                         p
                                                         
                                                            m
                                                            ′
                                                         
                                                      
                                                      −
                                                      
                                                         p
                                                         m
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           

Generally, maximum backoff stage is 
                                 
                                    m
                                    =
                                    5
                                 
                               to 7 for data packets for basic access mechanism [32, 33]. The default value specified in the 802.11 standard is 4. Assuming finite retransmissions, i.e. m ≤ m′, we obtain the following (by substituting 
                                 
                                    m
                                    =
                                    
                                       m
                                       ′
                                    
                                 
                              ).

                                 
                                    (4)
                                    
                                       
                                          E
                                          
                                             [
                                             
                                                N
                                                B
                                             
                                             ]
                                          
                                          =
                                          
                                             1
                                             
                                                1
                                                −
                                                
                                                   p
                                                   
                                                      m
                                                      ′
                                                   
                                                
                                             
                                          
                                          ×
                                          
                                             (
                                             
                                                
                                                   C
                                                   
                                                      W
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                   
                                                   
                                                      (
                                                      1
                                                      −
                                                      p
                                                      )
                                                   
                                                   
                                                      (
                                                      1
                                                      −
                                                      
                                                         
                                                            (
                                                            2
                                                            p
                                                            )
                                                         
                                                         
                                                            m
                                                            ′
                                                         
                                                      
                                                      )
                                                   
                                                
                                                
                                                   2
                                                   (
                                                   1
                                                   −
                                                   2
                                                   p
                                                   )
                                                
                                             
                                             +
                                             
                                                
                                                   1
                                                   −
                                                   
                                                      p
                                                      
                                                         m
                                                         ′
                                                      
                                                   
                                                
                                                2
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (5)
                                    
                                       
                                          E
                                          
                                             [
                                             
                                                N
                                                B
                                             
                                             ]
                                          
                                          =
                                          
                                             (
                                             
                                                
                                                   
                                                      (
                                                      1
                                                      −
                                                      p
                                                      )
                                                   
                                                   (
                                                   1
                                                   −
                                                   
                                                      
                                                         (
                                                         2
                                                         p
                                                         )
                                                      
                                                      
                                                         m
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                                
                                                   
                                                      (
                                                      1
                                                      −
                                                      
                                                         p
                                                         
                                                            m
                                                            ′
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      (
                                                      1
                                                      −
                                                      2
                                                      p
                                                      )
                                                   
                                                
                                             
                                             ×
                                             C
                                             
                                                W
                                                
                                                   m
                                                   i
                                                   n
                                                
                                             
                                             +
                                             
                                                1
                                                2
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           

this is the average time station spends in each backoff stage before decrementing its backoff counter. This time depends on the channel state at new backoff stage as well as previous backoff stage. Generally, the channel at each backoff stage can be in three states, namely idle, successful and collision. Thus, the length of each backoff stage is given by

                                 
                                    (6)
                                    
                                       
                                          E
                                          
                                             [
                                             
                                                L
                                                B
                                             
                                             ]
                                          
                                          =
                                          
                                             (
                                             1
                                             −
                                             
                                                P
                                                
                                                   t
                                                   r
                                                
                                             
                                             )
                                          
                                          ·
                                          
                                             T
                                             
                                                i
                                                d
                                                l
                                                e
                                             
                                          
                                          +
                                          
                                             P
                                             
                                                t
                                                r
                                             
                                          
                                          ·
                                          
                                             P
                                             s
                                          
                                          ·
                                          
                                             T
                                             
                                                s
                                                u
                                                c
                                                c
                                             
                                          
                                          +
                                          
                                             (
                                             1
                                             −
                                             
                                                P
                                                s
                                             
                                             )
                                          
                                          ·
                                          
                                             P
                                             
                                                t
                                                r
                                             
                                          
                                          ·
                                          
                                             T
                                             
                                                c
                                                o
                                                l
                                                l
                                             
                                          
                                       
                                    
                                 
                              where Ptr
                               is the probability that at least one transmission occurs in a given slot time. Ps
                               is the probability of successful transmission. It is the probability that a station is transmitting and the remaining 
                                 
                                    n
                                    −
                                    1
                                 
                               stations remains silent with condition that at least one station must transmit. These two probabilities are given as follows.

                                 
                                    (7)
                                    
                                       
                                          
                                             P
                                             
                                                t
                                                r
                                             
                                          
                                          =
                                          1
                                          −
                                          
                                             
                                                (
                                                1
                                                −
                                                τ
                                                )
                                             
                                             n
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (8)
                                    
                                       
                                          
                                             P
                                             s
                                          
                                          =
                                          
                                             
                                                n
                                                τ
                                                
                                                   
                                                      (
                                                      1
                                                      −
                                                      τ
                                                      )
                                                   
                                                   
                                                      n
                                                      −
                                                      1
                                                   
                                                
                                             
                                             
                                                1
                                                −
                                                
                                                   
                                                      (
                                                      1
                                                      −
                                                      τ
                                                      )
                                                   
                                                   n
                                                
                                             
                                          
                                       
                                    
                                 
                              where τ is the probability that station attempts to transmit in an arbitrary slot, i.e. 1/E[NB
                              ], Tsucc
                               is the average time of a successful transmission when the medium is sensed busy, Tcoll
                               is the average time of the collision when the medium is sensed busy after a collision and Tidle
                               is the duration of an idle slot time. The values for Tsucc
                               and Tcoll
                               are given as follows.

                                 
                                    (9)
                                    
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      
                                                         T
                                                         
                                                            s
                                                            u
                                                            c
                                                            c
                                                         
                                                      
                                                      =
                                                      D
                                                      I
                                                      F
                                                      S
                                                      +
                                                      H
                                                      +
                                                      L
                                                      +
                                                      S
                                                      I
                                                      F
                                                      S
                                                      +
                                                      A
                                                      C
                                                      K
                                                      +
                                                      σ
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         T
                                                         
                                                            c
                                                            o
                                                            l
                                                            l
                                                         
                                                      
                                                      =
                                                      H
                                                      +
                                                      L
                                                      +
                                                      D
                                                      I
                                                      F
                                                      S
                                                      +
                                                      σ
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where H, L and ACK are the transmission times needed to send packet headers (MAC, PHY), the payload and the acknowledgment respectively. σ is the propagation delay. The payload length of transmitting and collided frame is the same. All the parameters except L and ACK are constant for a given 802.11 specification. The above equation can be simplified as

                                 
                                    (10)
                                    
                                       
                                          E
                                          
                                             (
                                             
                                                L
                                                B
                                             
                                             )
                                          
                                          =
                                          
                                             P
                                             
                                                i
                                                d
                                                l
                                                e
                                             
                                          
                                          ·
                                          
                                             T
                                             
                                                i
                                                d
                                                l
                                                e
                                             
                                          
                                          +
                                          
                                             P
                                             
                                                s
                                                u
                                                c
                                                c
                                             
                                          
                                          ·
                                          
                                             T
                                             
                                                s
                                                u
                                                c
                                                c
                                             
                                          
                                          +
                                          
                                             P
                                             
                                                c
                                                o
                                                l
                                                l
                                             
                                          
                                          ·
                                          
                                             T
                                             
                                                c
                                                o
                                                l
                                                l
                                             
                                          
                                       
                                    
                                 
                              where Pidle
                               is the probability of the station being idle, Psucc
                               is the probability of successful transmission and Pcoll
                               is the probability of collision. When a packet is transmitted, the successful transmission occurs when an ACK is received. If the ACK is not received the packet transmission results in the collision. In both the cases, the channel is busy. Thus, the length of each backoff stage depends on the idle and busy time as follows.

                                 
                                    (11)
                                    
                                       
                                          E
                                          
                                             (
                                             
                                                L
                                                B
                                             
                                             )
                                          
                                          =
                                          
                                             P
                                             
                                                i
                                                d
                                                l
                                                e
                                             
                                          
                                          ·
                                          
                                             T
                                             
                                                i
                                                d
                                                l
                                                e
                                             
                                          
                                          +
                                          
                                             (
                                             
                                                P
                                                
                                                   s
                                                   u
                                                   c
                                                   c
                                                
                                             
                                             ·
                                             +
                                             
                                                P
                                                
                                                   c
                                                   o
                                                   l
                                                   l
                                                
                                             
                                             )
                                          
                                          ·
                                          
                                             T
                                             
                                                b
                                                u
                                                s
                                                y
                                             
                                          
                                       
                                    
                                 
                              where Tbusy
                               is the sum of time spent in successful transmission and collided transmission when the channel is busy. The average length of backup stage can be found by estimating the length of each backoff stage over a certain time interval.

The packet delay is defined as the time when the packet becomes the head of the queue and when a positive acknowledgment is received. The average packet delay experienced by a transmitted frame for a station can be estimated by summing up the following time durations.

                              
                                 •
                                 Differing time at all the backoff stages i.e. the average backoff delay.

Time spend on unsuccessful transmission.

Time spend on the final packet’s successful transmission.

Thus, the average packet delay is given by

                              
                                 (12)
                                 
                                    
                                       E
                                       
                                          [
                                          
                                             D
                                             P
                                          
                                          ]
                                       
                                       =
                                       E
                                       
                                          [
                                          
                                             D
                                             B
                                          
                                          ]
                                       
                                       +
                                       j
                                       ·
                                       
                                          T
                                          
                                             c
                                             o
                                             l
                                             l
                                          
                                       
                                       +
                                       
                                          T
                                          
                                             s
                                             u
                                             c
                                             c
                                          
                                       
                                    
                                 
                              
                           where j is the number of retransmission attempts, Tcoll
                            is the duration of the collision and Tsucc
                            is the duration of packets successful transmission. As basic access mechanism of DCF is used, the collision and transmission durations are same. Thus, the above equation becomes

                              
                                 (13)
                                 
                                    
                                       E
                                       
                                          [
                                          
                                             D
                                             P
                                          
                                          ]
                                       
                                       =
                                       E
                                       
                                          [
                                          
                                             D
                                             B
                                          
                                          ]
                                       
                                       +
                                       
                                          (
                                          j
                                          +
                                          1
                                          )
                                       
                                       
                                          T
                                          
                                             s
                                             u
                                             c
                                             c
                                          
                                       
                                    
                                 
                              
                           
                        

The number of retransmission 
                              
                                 j
                                 +
                                 1
                              
                            can be obtained using 
                              
                                 
                                    1
                                    
                                       1
                                       −
                                       
                                          p
                                          
                                             j
                                             +
                                             1
                                          
                                       
                                    
                                 
                                 ,
                              
                            where p is the probability of collision. Thus, the average packet delay is given as

                              
                                 (14)
                                 
                                    
                                       E
                                       
                                          [
                                          
                                             D
                                             P
                                          
                                          ]
                                       
                                       =
                                       E
                                       
                                          [
                                          
                                             D
                                             B
                                          
                                          ]
                                       
                                       +
                                       
                                          1
                                          
                                             1
                                             −
                                             
                                                p
                                                
                                                   j
                                                   +
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          T
                                          
                                             s
                                             u
                                             c
                                             c
                                          
                                       
                                    
                                 
                              
                           
                        

As shown in Eq. (9), Tsucc
                            mainly consists of duration of payload which is variable. The DIFS, SIFS and σ are constant. The header H is transmitted at a basic data rate, which is constant as we our model does not consider the RTS / CTS mechanism which introduces control overhead. The payloadL and ACK are transmitted at an available data rate. Then, the above equation can be simplified as,

                              
                                 (15)
                                 
                                    
                                       E
                                       
                                          [
                                          
                                             D
                                             P
                                          
                                          ]
                                       
                                       =
                                       E
                                       
                                          [
                                          
                                             D
                                             B
                                          
                                          ]
                                       
                                       +
                                       
                                          (
                                          
                                             1
                                             
                                                1
                                                −
                                                
                                                   p
                                                   
                                                      j
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       ·
                                       
                                          (
                                          
                                             L
                                             
                                                D
                                                a
                                                t
                                                a
                                                R
                                                a
                                                t
                                                e
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

From the above analysis, we conclude that the link quality depends on the following parameters.

                              
                                 •
                                 
                                    Average backoff delay: the first part of Eq. (15) i.e E[DB
                                    ] calculates the average backoff delay. This is the product of average number of backoff stages and average length of each backoff stage as shown in Eq. (1). E[NB
                                    ] depends on retransmission attempts, contention window and collision probability p as shown in Eq. (5). The average backoff stage depends on average idle and busy transmission periods, i.e. total channel utilization as shown in Eq. (11).


                                    The expected transmission delay: the second part of Eq. (15) i.e E[DP
                                    ] calculates the expected transmission time. This is the time required for successful transmission of the packet including the time involved in retransmission. This is mainly dependent on the transmission of payload L on available data rate including the retransmission attempts.


                                    Number of interfering nodes: as shown in Eqs. (7) and (8), as the number as the number of station increases, the conditional collision probability increases. Hence the delay increases. The number of stations here indicates the total number of nodes in the collision domain. Thus, in the routing process, the number of interfering stations for a given node to find the optimal path is the one important factor to minimize the delay and improve the throughput.

We propose a new routing metric, called P-IDA based on the proposed analytical model. Our routing metric assigns weights to individual links which considers the link delay, inter-flow interference and intra-flow interference. The link delay consists of transmission delay and contention delay. P-IDA for path p is defined as follows:

                           
                              (16)
                              
                                 
                                    P
                                    −
                                    I
                                    D
                                    A
                                    
                                       (
                                       p
                                       )
                                    
                                    =
                                    α
                                    
                                       ∑
                                       
                                          l
                                          i
                                          n
                                          k
                                          
                                          i
                                          
                                          ∈
                                          
                                          p
                                       
                                       n
                                    
                                    D
                                    e
                                    l
                                    a
                                    
                                       y
                                       i
                                    
                                    ·
                                    
                                       (
                                       1
                                       −
                                       I
                                       
                                          R
                                          i
                                       
                                       )
                                    
                                    +
                                    
                                       (
                                       1
                                       −
                                       α
                                       )
                                    
                                    
                                       ∑
                                       
                                          l
                                          i
                                          n
                                          k
                                          
                                          j
                                          
                                          ∈
                                          
                                          m
                                       
                                       n
                                    
                                    I
                                    C
                                    
                                       D
                                       j
                                    
                                 
                              
                           
                        where n is the number of links and m is the number of nodes of path p. Delayi
                         is the delay on link i, IRi
                         is interference ratio, which estimates the inter-flow interference on link i and ICDj
                         is the intra-path channel diversity for link j which computes the intra-flow interference. α gives the weight to the interfering delay component and channel diversity. The optimal path is found using summation the link qualities on path p. We choose α value of 0.6 after experimentation, giving more weight to interfering delay component. This is because the infrastructure wireless mesh networks are heavily congested networks and thus ICD has a relatively less effect on the performance.

Link delay is estimated using average contention delay and expected transmission delay using Eq. (15). We estimate the contention delay in terms of the average contention window and total channel utilization. Later we estimate the expected transmission delay. These two estimations are described in detail as follows.

every node in the network contends for the channel before every successful transmission. The contention delay can be calculated using the average contention window and total channel utilization as shown in Eq. (1). Average contention window can be calculated in terms of Packet Error Rate (PER) and present contention window. PER depends on the collision probability, thus we replace p of Eq. (5) with PER. Consider a link i from node m to n. The average contention window for this link i is calculated using Eq. (5) as follows:

                              
                                 (17)
                                 
                                    
                                       C
                                       
                                          W
                                          
                                             a
                                             v
                                             g
                                          
                                       
                                       =
                                       
                                          
                                             
                                                (
                                                1
                                                −
                                                P
                                                E
                                                R
                                                )
                                             
                                             (
                                             1
                                             −
                                             
                                                
                                                   (
                                                   2
                                                   P
                                                   E
                                                   R
                                                   )
                                                
                                                r
                                             
                                             )
                                          
                                          
                                             
                                                (
                                                1
                                                −
                                                P
                                                E
                                                
                                                   R
                                                   r
                                                
                                                )
                                             
                                             
                                                (
                                                1
                                                −
                                                2
                                                P
                                                E
                                                R
                                                )
                                             
                                          
                                       
                                       ·
                                       C
                                       
                                          W
                                          
                                             m
                                             i
                                             n
                                          
                                       
                                       +
                                       
                                          1
                                          2
                                       
                                    
                                 
                              
                           
                        

As shown in above, the average contention window is calculated in terms of packet error rate, minimum contention window CW
                           0 and backoff stage r. The CW
                           0 is a contention window at stage 1. The average contention window is calculated at each back off stage. As the back-off stage increases, the average contention window value increases indicating congestion in the network. PER of a given link represents the probability of the packet loss. We use the passive mechanism of computing PER at MAC layer using ErrorModel. We refer PER as FER to denote the MAC layer data unit. The technique computes FER for each transmitted frame using SNR, BER and frame size for each of the available rates of 802.11a/b/g. To estimate the PER, the precomputed table is used. PER is estimated based on SNR of the transmitted frame for each of the transmission rate with different receiver noise. The SNR for node u in a link 
                              
                                 i
                                 =
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                            is computed as follows.

                              
                                 (18)
                                 
                                    
                                       S
                                       N
                                       
                                          R
                                          i
                                       
                                       
                                          (
                                          u
                                          )
                                       
                                       =
                                       
                                          
                                             
                                                P
                                                u
                                             
                                             
                                                (
                                                v
                                                )
                                             
                                          
                                          N
                                       
                                    
                                 
                              
                           where Pu
                           (v) is received signal strength at v from u and N is background noise. To estimate the contention delay effectively, the routing metric needs to incorporate the average slot duration or the length of each backoff stage as given in Eq. (11). The slot duration mainly consists of idle time and busy time. As discussed, the busy time indicates the node is transmitting or there is a collision. To measure average slot duration Sn
                            for a node n, it periodically senses the shared channel to determine whether it is idle or busy. Two counters are maintained, one for idle sensing times and the other for busy sensing times. After a certain time interval (2 s in our implementation), average slot utilization is computed by summing the busy sensing times and idle sensing times as shown in Eq. (11). Thus, the Average Contention Delay (ACD) for link i is calculated as a product of the total channel utilization and average contention window as follows.

                              
                                 (19)
                                 
                                    
                                       A
                                       C
                                       
                                          D
                                          i
                                       
                                       =
                                       
                                          S
                                          n
                                       
                                       ×
                                       C
                                       
                                          W
                                          
                                             a
                                             v
                                             g
                                          
                                       
                                    
                                 
                              
                           
                        

we use the second part of Eq. (15) to estimate the Expected Transmission Delay (ETD). We estimate the delay using the PER and available bandwidth by a passive mechanism. The transmission delay on link i is given as follows.

                              
                                 (20)
                                 
                                    
                                       E
                                       T
                                       
                                          D
                                          i
                                       
                                       =
                                       
                                          (
                                          
                                             1
                                             
                                                1
                                                −
                                                P
                                                E
                                                R
                                             
                                          
                                          )
                                       
                                       ·
                                       
                                          (
                                          
                                             L
                                             
                                                B
                                                
                                                   W
                                                   a
                                                
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

The above equation is same as that of Expected Transmission Time proposed in [9] where ETX can be represented as 
                              
                                 (
                                 
                                    1
                                    
                                       1
                                       −
                                       P
                                       E
                                       R
                                    
                                 
                                 )
                              
                           . But the ETT uses the probe packets to estimate ETX and available bandwidth BWa
                           . As discussed above, we compute PER using precomputed table using a passive mechanism which is based on SNR for each transmission rate. Apart from PER, the time taken for successful packet transmission is calculated by dividing the payload L by the available bandwidth BWa
                            for current transmission rate. In the literature, the BWa
                            is generally estimated using probe packets which incur control overhead but give better results. We approximately estimate the available bandwidth BWa
                            on link i for given transmission rate using Utilized Bandwidth (UB) and Channel Bandwidth (CB) using a passive mechanism as follows.

                              
                                 (21)
                                 
                                    
                                       B
                                       
                                          W
                                          a
                                       
                                       =
                                       
                                          C
                                          B
                                          −
                                          U
                                          
                                             B
                                             i
                                          
                                       
                                    
                                 
                              
                           where utilized bandwidth on link i is approximated by

                              
                                 (22)
                                 
                                    
                                       U
                                       
                                          B
                                          l
                                       
                                       =
                                       C
                                       B
                                       T
                                       ·
                                       
                                          T
                                          x
                                       
                                       R
                                       a
                                       t
                                       e
                                    
                                 
                              
                           where TxRate is the rate at which packets are sent per second on a link. The Channel Busy Time (CBT) is estimated using idle and 
                              
                                 T
                                 o
                                 t
                                 a
                                 l
                                 _
                                 T
                                 i
                                 m
                                 e
                              
                            as follows.

                              
                                 (23)
                                 
                                    
                                       C
                                       B
                                       T
                                       =
                                       
                                          
                                             T
                                             o
                                             t
                                             a
                                             l
                                             _
                                             T
                                             i
                                             m
                                             e
                                             −
                                             I
                                             d
                                             l
                                             e
                                             _
                                             T
                                             i
                                             m
                                             e
                                          
                                          
                                             T
                                             o
                                             t
                                             a
                                             l
                                             _
                                             T
                                             i
                                             m
                                             e
                                          
                                       
                                    
                                 
                              
                           
                        

In summary, the total delay experienced by a packet for the successful transmission of packet is calculated by summing up the contention delay and expected transmission delay. The total delay for link i is given as

                              
                                 (24)
                                 
                                    
                                       D
                                       e
                                       l
                                       a
                                       
                                          y
                                          i
                                       
                                       =
                                       A
                                       C
                                       
                                          D
                                          i
                                       
                                       +
                                       E
                                       T
                                       
                                          D
                                          i
                                       
                                    
                                 
                              
                           
                        

In the literature, three types of interference models are used to estimate the inter-flow interference. The most widely used and realistic model to estimate the inter-flow interference is a physical interference model which is described in [28]. We use this to compute the inter-flow interference based on the ratio of SINR and SNR as shown in Eq. (25). If the IRi
                            value is 1, there is no inter-flow interference, i.e. no interfering neighbors or no traffic generated by interfering neighbors as the SINR is equal to the SNR. Thus the link i is not dependent on inter-flow interference and the link quality is determined by the delay and intra-flow interference component of the metric. IRi
                           (u) for a node u on a link 
                              
                                 i
                                 =
                                 (
                                 u
                                 ,
                                 v
                                 )
                              
                            is defined as

                              
                                 (25)
                                 
                                    
                                       I
                                       
                                          R
                                          i
                                       
                                       
                                          (
                                          u
                                          )
                                       
                                       =
                                       
                                          
                                             S
                                             I
                                             N
                                             
                                                R
                                                i
                                             
                                             
                                                (
                                                u
                                                )
                                             
                                          
                                          
                                             S
                                             N
                                             
                                                R
                                                i
                                             
                                             
                                                (
                                                u
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Our metric considers both physical and logical interference models to estimate the inter-flow interference. The logical interference is estimated using the contention delay. The contention delay is a product of the average contention window and average slot utilization. Thus, this component of our metric which is included in the delay computation contributes to logical interference. The combination of these interference models results in least interfering routes.

ICD captures the intra-flow Interference in P-IDA. Considering a scenario where source node has two paths to the destination that have the same values with regards to the first component of Eq. (15), the path that use different channels to transmit data have less intra-flow interference than the path that always uses the same channel to transmit. ICDi
                            for link i is defined as follows.

                              
                                 (26)
                                 
                                    
                                       I
                                       C
                                       
                                          D
                                          i
                                       
                                       =
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      w
                                                      1
                                                   
                                                
                                                
                                                   
                                                      C
                                                      
                                                         H
                                                         
                                                            i
                                                            −
                                                            1
                                                         
                                                      
                                                      ≠
                                                      C
                                                      
                                                         H
                                                         i
                                                      
                                                      ,
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      w
                                                      2
                                                   
                                                
                                                
                                                   
                                                      C
                                                      
                                                         H
                                                         
                                                            i
                                                            −
                                                            1
                                                         
                                                      
                                                      =
                                                      C
                                                      
                                                         H
                                                         i
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           0 ≤ w1 ≤ w2where CHi
                            is a channel used by node i, 
                              
                                 C
                                 
                                    H
                                    
                                       i
                                       −
                                       1
                                    
                                 
                              
                            is a channel used by node 
                              
                                 i
                                 −
                                 1
                              
                            and w1, w2 are the weights. Node i should transmit data through different channel (CHi
                           ) than the channel 
                              
                                 (
                                 C
                                 
                                    H
                                    
                                       i
                                       −
                                       1
                                    
                                 
                                 )
                              
                            used by previous node 
                              
                                 i
                                 −
                                 1
                              
                            to eliminate intra-flow interference. If the node i uses the same channel as the previous node 
                              
                                 i
                                 −
                                 1
                                 ,
                              
                            a higher weight is assigned i.e. w2. Instead, if node i uses two different channels for reception and transmission, a lower weight of w1 is assigned such that 0 ≤ w1 ≤ w2. In our implementation, we use w1 and w2 as 0 and 1 respectively.

We propose a joint routing and rate adaptation scheme which is implemented at MAC layer. We illustrate our RA mechanism with a brief flowchart as shown in Fig. 1
                        . The rate adaptation mechanism starts with the initialization of link rate and transmission power with maximum values. Then the routing algorithm computes the delay for each rate as part of the routing process. The delay is updated for each rate over a probe interval. The delay parameter indicates the level of congestion on the link. Next, for each packet received on the link, the RA mechanism checks if the delay is less than the Threshold. If it is less than the Threshold, the link rate and the transmission power are not changed. Otherwise, the best rate and transmission power are chosen based on the Threshold. The packet is transmitted on the link at decreased rate and power. This process continues for each packet received.

The implementation details of the joint rate adaptation mechanism are described in Algorithm 1
                        . We consider the delay component of proposed routing metric P-IDA as the criteria to perform rate adaptation. To estimate the probable data rate for each packet transmission, the delay of the routing metric is computed for each rate of 802.11b standard. To compute FER component of delay, the algorithm uses a precomputed table Ber_Snr[rate][SNR] where the mapping of SNR to BER is done for each transmission rate. Using FER, average contention delay and expected transmission delay are computed. We use the Exponentially Weighted Moving Average (EWMA) to store these values over time period of 
                           
                              P
                              r
                              o
                              b
                              e
                              _
                              W
                              i
                              n
                              d
                              o
                              w
                           
                        . We use α as 0.6 for current transmission delay and β as 0.4 for the previous transmission delay for each rate in computing EWMA. We use the 
                           
                              P
                              r
                              o
                              b
                              e
                              _
                              W
                              i
                              n
                              d
                              o
                              w
                           
                         of 2 s. Since we are using OLSR where routing updates occur after 2 s, this is a reasonable time period to collect the statistics. These constants are kept same for all the tested topologies. Apart from the estimated delay for each rate, the algorithm computes the required power level for each rate based on the SNR values and stores it in the array Transmission_Power. Based on these statistics, the algorithm adapts the rate and power for each transmitted packet.

There are three categories of implementations of rate adaptation algorithms in the literature. In the first category of implementation, algorithms start at a lower rate and change the rate based on channel conditions. In second category, algorithms start at the middle rate and keep on changing the rate. In the third category, the algorithm starts at the maximum rate and keep on changing the rates based on channel conditions. We use the third category, where we start at the higher rate (11 Mbps) and keep on changing the rate based on the level of congestion in the network. We use Threshold as 0.2 s in our implementation. We observed the threshold values for different topologies and arrived at this value. Thus, if Transmission_Delay [2] is less than 0.2 s, the rate is set to 11 Mbps. If it is more than 0.2 s, indicating that there is more congestion in the network, then the algorithm chooses the rate at 5.5 Mbps and so on. Thus, in the event of congestion the algorithm reduces the transmission rate. We use the EnergyModel in NS2 to perform the power control based on the Choosen_Power. The transmission and receiver power is decreased in PHY layer by DecTxEnergy() and DecRxEnergy () functions of energy-model.cc. This rate adaptation algorithm can be generalized for 802.11a/g IEEE MAC. The same algorithm is used to implement modified sample rate algorithm (M-SR).

We use Optimized Link State Routing Protocol (OLSR) [29] to implement our proposed cross-layer framework. We select OLSR for following two reasons. 1. OLSR is the most popular proactive link state routing protocol which can be used for static infrastructure WMNs. 2. The protocol is recommended as one of the standard protocol for 802.11s mesh standard. In addition, many routing metrics are implemented in OLSR using which can be used to compare our metric. OLSR uses three kinds of the control messages: Hello, Topology Control (TC) and Multiple Interface Declaration (MID). Hello messages are used for finding the information about the link status and the host’s neighbors. The MID message is used by the MIMC node to advertise its associate interface’s addresses. OLSR has mainly four components, namely neighbor detection, MPR selection, optimized flooding and route selection. Periodic HELLO messages are used to sense the link type and detect the neighbors. During the neighbor detection phase, one hop neighbor set and two hop neighbor set are generated for each node. OLSR reduces overhead of packet flooding using MPR nodes, which are selected in MPR selection phase. The node with maximum coverage is selected as MPR node. Link cost is embedded in the TC message. TC messages are used for broadcasting information about own advertised neighbors with their estimated link costs. These messages are broadcasted throughout the entire network. Dijkstras algorithm finds the shortest and least cost path between the source and destination using the link cost estimators.

The proposed implementation architecture using cross-layered approach with OLSR modification details at the network layer; rate and power control at MAC and PHY layer are shown in Fig. 2
                        . The right side of the protocol stack shows the components of OSLR protocol and the cross-layer parameters acquisition from PHY, MAC and network layer in the routing protocol. As shown in Fig. 2, the most important component of the protocol design is the Parameter Acquisition module which extracts parameters such as average contention window, CBT and IR from MAC layer and passes it to network layer. PHY layer sends the Received Signal Strength (RSSI) to MAC layer which is used to calculate IR. The ETD and ICD are calculated at the network layer. Finally, Updatelinkquality () function of OLSR at the network layer calculates the link cost using the parameters accessed from MAC and PHY layers. The updated link cost is embedded in TC message and this message is flooded in the network by MPRs. The OLSR node uses Dijkstra’s algorithm to create a topology with the link costs obtained from TC messages from all other nodes and constructs a routing table.

The rate and power control is carried out in the MAC and PHY layer as shown on the left side of the protocol stack. The parameters of transmission delay are computed at the chosen data rate at the MAC layer and are sent to the OLSR protocol at Network layer for the link quality estimation. Based on the chosen rate, the power control is carried out at the PHY layer using NS2 EnergyModel.

This section describes the simulation tool and parameters chosen to simulate the routing metrics and rate adaptation algorithms. Later, we discuss performance parameters which are used to evaluate the routing metrics and rate adaptation mechanisms.

We use NS2 [30] to carry out extensive simulation and evaluate our routing metric. The CMU tools are used to create the wireless network scenario with the random traffic flows and node locations. The topologies are created using the CMU tool ‘setdest’ which generates the number of nodes with random and fixed locations. We also set up random CBR traffic connections between nodes using a traffic-scenario generator script cbrgen.tcl. The packet size of all the flows is 512 bytes. The queue type used is DropTail and the maximum queue size is set as 50 packets. The number of radio interfaces is set to 2. We use default values of OLSR parameters where Hello messages and TC messages are sent every 2 and 5 s respectively. We evaluate the performance of our routing metric and joint approach using five scenarios with all static nodes, representing the backbone mesh network. The parameters used for simulation are listed in Table 3
                        . Our simulation study uses the physical layer of Direct Sequence Spread Spectrum (DSSS) with a shadowing propagation model whose parameters are specified in Table 4
                        . The type of topologies and unique parameters used to create these scenarios are listed in Table 5
                        . We use the MAC and PHY layer parameters as specified in 802.11b Proxim ORiNOCO client PC card. These parameters help us to simulate the realistic outdoor mesh network. Thus, all the considered topologies use the common parameters listed in Tables 3 and 4.

The performance of proposed routing metric is compared using the following performance metrics.


                        Throughput: this is the number of packets received by the destination per second. It gives the aggregate throughput for all the traffic flows in the network.


                        Average end-to-end delay: the end-to-end delay is the time needed for a data packet to be delivered from the source to the destination node in seconds. The average end-to-end delay is aggregate delay of all the packets of different traffic flows in the network.


                        Routing overhead: it is the number of routing packets sent in the network as part of the routing process. We compute the number of routing packets sent per second.


                        Energy consumption: it is the average energy utilized by all the nodes of the network for the transmission of data packets successfully.

@&#RESULTS AND DISCUSSION@&#

This section presents the performance evaluation of proposed routing metric and compares the results obtained with the MIND, CATT and iAWARE routing metrics in medium to heavily congested networks. In addition, we present the results of joint approach. We consider 5 different scenarios as listed in Table 4. The scenarios are created to evaluate the effect of different level of congestion and interference by varying the transmission rate and CBR flows respectively. The scenarios are created to evaluate the effectiveness of interference and contention delay on the routing metrics and rate adaptation mechanisms. We have chosen the combination of routing metrics which estimate the three different types of inter-flow interferences namely protocol, physical and logical interference. We also consider both categories of routing metrics namely the active (iAWARE, CATT) as well as passive metric (MIND) to compare the performance of the proposed passive routing metric. CBR flows carry the UDP traffic. The locations of nodes are random and fixed based on the scenario. The CBR flows introduce inter-flow interference in the network. The packet rate introduces the different levels of congestion in the network. The number of source/destination traffic sources assigned to the nodes varies in the area of 750 m × 750 m for each of the scenarios. The flows cover the whole width of the network to reach 15–20 nodes in case of 30 node scenarios and 20–30 nodes in case of 40 node scenarios. This allows for longer routes, giving more routing choices for the implemented routing metrics of OLSR. The flows start sending the packets at different times during the simulation. Thus, the congestion is created in the network at different time during the simulation. We present the results for routing metrics and joint approach separately in the following sections.

In this section, we discuss the results of routing metrics without the rate adaptation. The results are obtained for fixed 11 Mbps rate.

As shown in Fig. 3
                           , throughput of the P-IDA routing metric is better compared to other metrics as the congestion is increased. P-IDA metric estimates both logical and physical interference using contention delay and IR respectively. The delay component of metric estimate expected transmission time, as well as contention delay and IR component estimate the inter-flow interference using the physical interference model. Thus, P-IDA helps OLSR protocol to choose the least congested routes improving the overall throughput of the network. The MIND metric performs better compared to iAWARE and CATT as it captures load using channel busy time (CBT) and considers both logical as well as physical interference. As the tested topologies are heavily loaded except Scen1 as shown in Table 4, the effect of logical interference is important in the estimation of routing metric. CBT estimates the logical interference as well as the load. The CATT metric considers the effect of inter-flow interference using the protocol interference model. It considers the physical interference implicitly using link loss ratios and finds the least congested paths. However, at the higher level of congestion, the estimation of loss ratios using probe packets is error prone as the probe packets itself can be lost. In addition, the metric assumes that all the neighboring nodes as interfering nodes irrespective of whether the nodes transmit the packet or not. Thus the interfering delay estimation is not accurate. iAWARE routing metric captures physical interference using the SNR and SINR in a dynamic way. It also estimates the expected transmission time. But it does not consider the logical interference, i.e. effect of contention in the routing metric. This is a very important factor as the congestion in the network is increased. In addition, the estimation of ETT using packet loss ratios and available BW estimation becomes inaccurate as the load in the network is increased. The individual scenario results also reveal that the CATT and iAWARE metrics performance is relatively better compared to passive metrics P-IDA and MIND in the lightly loaded scenario such as Scen1. However, in heavily loaded scenarios such as Scen2 to Scen5, the performance of active metrics CATT and iAWARE is poor.

As shown in Fig. 4
                           , the average end-to-end delay of P-IDA is improved compared to other three routing metrics. This is because the P-IDA estimates delay accurately using expected transmission delay and contention delay. The delay estimation for each link is based on a delay model of 802.11 MAC. In addition, the P-IDA computes the packet delay of interfering nodes using physical and logical interference. This helps P-IDA to find the least congested path as the traffic density is increased. The average delay of CATT is better than iAWARE and MIND as it estimates the delay of interfering nodes using ETT and protocol interference. But the delay component of CATT does not consider the backoff delay and it does not capture the interference in realistic way using the physical interference model. The delay of iAWARE and MIND is the lowest as they do not estimate the delay effectively. iAWARE gives more weightage to ETT, but it does not consider contention delay which is important in congested networks. The CBT calculation in MIND is based on per channel rather than link basis. Hence, iAWARE and MIND have poor delay performance compared to P-IDA and CATT as shown in Fig. 4.

One more differentiating parameter for the evaluation of routing metrics is the routing overhead. This QoS parameter is very important for proactive OLSR as routing overhead increases the congestion and affects the performance. We estimate overhead as the total number of routing packets sent per second. As shown in Fig. 5
                           , P-IDA and MIND have sent relatively same number of routing packets compared to other two metrics CATT and iAWARE. This is because the P-IDA and MIND use passive mechanism and introduce less control packets. The CATT and iAWARE employ the probe packets and hence incur a control overhead. Both the metrics use ETX which are implemented using probe packets. In addition, available bandwidth estimation in iAWARE and CATT is implemented using the packet pair technique. Thus, these two metrics introduces maximum control overhead in the network effectively affecting the performance.

This section discusses about the routing metrics results with rate adaptation. The link quality of all the metrics is estimated based on the chosen rate and optimal path is computed. The rates are varied from 11 Mbps, 5.5 Mbps, 2 Mbps and 1 Mbps based on the congestion in the network. We compute the average throughput of all the tested topologies for each rate adaptation mechanism used by the every metric. We implement the three rate adaptation mechanisms namely Delay Based Rate Adaptation (DBRA), Modified-Sample Rate (M-SR) and ARF for all the four tested metrics. The sample rate algorithm is modified to consider ETT as the delay. The joint rate adaptation is carried out for all the four routing metrics using these three mechanisms.

As shown in Figs. 6
                            and 7
                           , the average throughput and delay of the P-IDA routing metric is better compared to other metrics for all the tested topologies for the three rate adaptation mechanisms. Thus the routing metric results of all metrics with three rate adaptation mechanisms are consistent with the results discussed in Section 5.1. However, the performance compared to fixed rate has decreased as rate adaptation mechanisms select lower rate in the event of congestion. The Section 5.1 results are at the fixed rate 11 Mbps. Our rate adaptation mechanism starts at a higher rate and then decreases the rate based on congestion.

As shown in Fig. 6, the DBRA with P-IDA routing metric performs better than M-SR and ARF. Its results are comparable with fixed 11 Mbps with 6% decrease in throughput of P-IDA with delay (DBRA) and 15% decrease with a second best combination of P-IDA with M-SR. This is a comparable performance considering the very high level of congestion in the network. This is because DBRA uses the delay as channel state indicator, which computes contention and transmission delay. In addition, the metric employs a passive mechanism which is suitable for heavily congested networks. The M-SR mechanism estimates the delay based on ETT, but this is not effective for heavily congested networks as ETT is based on ETX. The ETX computes the link loss ratios using probe packets at the chosen rate. However, the estimation of link loss ratios at higher level of congestion is error prone. In addition, the ETT does not consider the effect of contention which is important in highly congested network. The ARF mechanism estimates the packet losses using retransmission count at MAC layer over a sampling period. But it cannot differentiate whether packet losses are due to congestion, collision or link failures. Thus, ARF performance is poor.

As shown in Fig. 7, the average end-to-end delay of P-IDA with delay based rate adaptation is improved compared to M-SR and ARF. This is because the P-IDA estimates delay accurately using expected transmission delay, backoff delay at chosen rate. The delay estimation for each link for chosen rate is based on a delay model of 802.11 MAC. Similarly, the delay performance of M-SR and ARF are according to the throughput performance as shown in Fig. 7.

The most important and differentiating parameter for the evaluation of routing metrics with rate adaptation that is least explored in the literature is energy consumption. This QoS parameter is very important as the rate adaptation mechanisms often choose the lower transmission rate. The lower transmission rate can result in lower power consumption if power control is carried out effectively. We use the initial energy as 100 J for all the nodes. The transmission power and receiver power are decreased based on the rate change. The initial power used for 11 Mbps rate is 20 dB. We decrease this power by 1–2 dB for 5.5 Mbps, 2–3 dB for 2 Mbps and so on. We decrease power at PHY layer and MAC layer using EnergyModel of NS2. We choose these values after carrying out the experiments such that throughput is not affected with decrease in power levels keeping RxThresold as constant. However, these values can be computed using SNR and antenna gain values. The reduced power results in saving the energy consumption as shown in Fig. 8
                           . The figure shows the energy saving results of three rate adaptation mechanisms (in %) compared to fixed rate readings at 11 Mbps. As the rate is chosen between 11 Mbps to 1 Mbps, the power consumption with power control is always better compared to normal readings whose power consumption is at a higher level. As our algorithm chooses lower transmission rate in the event of congestion that results in lower throughput, the energy consumption saving is inversely proportional to the throughput performance. This is because at the lower chosen rate, the transmission power required to send the packet is less with the implemented power optimization mechanism.

As shown in Fig. 8, the energy saving of P-IDA with DBRA is 14% compared to fixed 11 Mbps. Thus, along with the rate adaptation, the energy consumption is minimized with our proposed algorithm. The energy saving of P-IDA with M-SR and ARF is more as these techniques have chosen unsuitable rate which has resulted in lower throughput. Thus, DBRA with P-IDA performs better in terms of throughput as well as energy consumption. The similar results for energy saving are observed for other three routing metrics depending on the throughput gain as shown in Fig. 7. It is important to note that the energy saving is achieved by a decrease in throughput. Thus, energy optimization is useful for highly loaded networks and there is a tradeoff between the throughput and energy saving parameters.

Multi-radio wireless mesh networks need new cross-layer routing metrics which can find the best routes using minimum end-to-end delay and least interference to improve the performance. Additionally, the routing metric should estimate the delay considering contention delay and interference using a combination of interference models. To address this, new metric called P-IDA is proposed which is based on 802.11 DCF basic access mechanism. The P-IDA metric estimates the link quality in terms of delay, including transmission and contention delay, inter-flow interference using logical as well as physical interference model and intra-flow interference. In addition, as the link quality estimation is based on chosen transmission rate, the joint approach to routing metric computation and rate adaptation is required. Towards this, Delay Based Rate Adaptation (DBRA) mechanism based on the delay component of the P-IDA metric is proposed. The unique feature of the design is that, the link quality parameters are estimated using a passive mechanism which minimizes the control overhead. The joint approach is implemented in OLSR for multi-radio mesh networks by accessing parameters from PHY, MAC and network layers and estimating link quality based on the chosen rate. The extensive simulations using NS2 demonstrate that proposed metric P-IDA performs better compared to MIND, CATT and iAWARE routing metrics. Additionally, a joint approach of P-IDA with DBRA and power control performs better compared to well known ARF and M-SR in terms of throughput, average end-to-end delay and energy consumption.

As a future work, we plan to optimize the power control mechanism and extend the work for 802.11n based mesh networks.

@&#REFERENCES@&#

