@&#MAIN-TITLE@&#Incremental network design with shortest paths

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We study the optimal choice and timing of network expansions.


                        
                        
                           
                           We introduce a new class of incremental network design problems.


                        
                        
                           
                           We develop a 4-approximation algorithm for incremental network design with shortest paths.


                        
                        
                           
                           Analysis shows that coordinating timing of expansions increases the complexity of network design.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Network design

Multi-period

Heuristic

Approximation algorithm

Integer programming

@&#ABSTRACT@&#


               
               
                  We introduce a class of incremental network design problems focused on investigating the optimal choice and timing of network expansions. We concentrate on an incremental network design problem with shortest paths. We investigate structural properties of optimal solutions, show that the simplest variant is NP-hard, analyze the worst-case performance of natural greedy heuristics, derive a 4-approximation algorithm, and conduct a small computational study.
               
            

@&#INTRODUCTION@&#

Consider a network optimization problem, e.g., a shortest path problem, a maximum flow problem, or a traveling salesman problem. Next, assume that this optimization problem has to be solved in a number of consecutive time periods and that in each time period the value of an optimal solution is incurred, e.g., the cost of an 
                        
                           s
                           –
                           t
                        
                      path, the value of an 
                        
                           s
                           –
                           t
                        
                      flow, or the cost of a TSP tour. Let the objective be to minimize or maximize the total (cumulative) cost or value over the planning horizon. At this point, that simply means solving the network optimization problem and multiplying the value of an optimal solution with the number of time periods in the planning horizon. It becomes more interesting when a budget is available in each time period to expand the network, i.e., to build additional links. Expanding the network may improve the cost or value of an optimal solution to the network optimization problem in future time periods and thus may improve the total cost or value over the planning horizon. However, deciding which links to build and the sequence in which to build them is nontrivial. In part, because in some situations the benefits of building a link will only materialize when other links have been built as well, e.g., adding a single link to the network does not lead to a shorter TSP tour, but adding two links to the network does.

We introduce a class of incremental network design problems that focuses on the optimal choice and timing of network expansions given that these network expansions impact the value of a solution to an optimization problem that is solved on the network in each of the periods of the planning horizon.

We are primarily interested in establishing the complexity of incremental network design problems, and, in case they are NP-hard, in their approximability, i.e., establishing whether a 
                        
                           ρ
                        
                     -approximation algorithm exists, where an algorithm achieves an approximation ratio 
                        
                           ρ
                           ⩾
                           1
                        
                      for a minimization problem if, for every instance, it produces a solution of value at most 
                        
                           ρ
                           
                              
                                 v
                              
                              
                                 opt
                              
                           
                        
                      with 
                        
                           
                              
                                 v
                              
                              
                                 opt
                              
                           
                        
                      the value of an optimal solution. Therefore, we focus on what appears to be one of the most basic incremental network design problems, namely the incremental network design problem with shortest paths.

We investigate structural properties of optimal solutions, show that even the simplest variant is NP-hard, establish a class of instances that can be solved in polynomial time, analyze the worst-case performance of natural greedy heuristics, derive a 4-approximation algorithm, and conduct a small computational study.

Even though single-stage or single-period network design problems have been studied extensively by the operations research community, multi-stage or multi-period network design problems, which occur just as often in practice, have received much less attention. We hope that our investigation demonstrates that multi-period network design problems present interesting challenges and can produce intriguing and surprising results.

The remainder of the paper is organized as follows. In Section 2, we introduce the class of incremental network design problems. In Section 4, we introduce the incremental network design problem with shortest paths. In Sections 5–7, we analyze the complexity of the incremental network design problem with shortest paths, and we explore greedy heuristics and design an approximation algorithm, respectively. In Section 8, we introduce an integer programming formulation and present the results of a small computational study. Finally, in Section 9, we discuss possible extensions and future research.

Incremental network design problems have two characteristic features: a design feature, since we are deciding which arcs will be part of a network, and a multi-period feature, since the ultimate network design is built over a number of time periods.

The general structure of an incremental network design problem is as follows. We are given a network 
                        
                           D
                           =
                           (
                           N
                           ,
                           A
                           )
                        
                      with node set N and arc set 
                        
                           A
                           =
                           
                              
                                 A
                              
                              
                                 e
                              
                           
                           ∪
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                     , where 
                        
                           
                              
                                 A
                              
                              
                                 e
                              
                           
                        
                      contains existing arcs and 
                        
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                      contains potential arcs. Each arc 
                        
                           a
                           ∈
                           A
                        
                      has a capacity 
                        
                           
                              
                                 C
                              
                              
                                 a
                              
                           
                        
                     . Let T be the planning horizon. A budget 
                        
                           
                              
                                 B
                              
                              
                                 t
                              
                           
                        
                      is available in every time period 
                        
                           t
                           ∈
                           {
                           1
                           ,
                           …
                           ,
                           T
                           }
                        
                     . The budget can be used to build potential arcs 
                        
                           a
                           ∈
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                     , which will be available for use in the following period. For each potential arc 
                        
                           a
                           ∈
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                     , there is an associated build-cost 
                        
                           
                              
                                 c
                              
                              
                                 a
                              
                           
                           ⩽
                           B
                        
                     . Let 
                        
                           
                              
                                 y
                              
                              
                                 a
                              
                              
                                 t
                              
                           
                        
                      be a 0–1 variable indicating whether arc 
                        
                           a
                           ∈
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                      has been built in or before time period t, with all potential arcs initially unbuilt (
                        
                           
                              
                                 y
                              
                              
                                 a
                              
                              
                                 0
                              
                           
                           =
                           0
                        
                     ). Thus, 
                        
                           
                              
                                 y
                              
                              
                                 a
                              
                              
                                 t
                              
                           
                           -
                           
                              
                                 y
                              
                              
                                 a
                              
                              
                                 t
                                 -
                                 1
                              
                           
                           =
                           1
                        
                      indicates that arc a is built in time period t and can be utilized in period 
                        
                           t
                           +
                           1
                        
                     . In every time period, a network optimization problem P has to be solved over the usable arcs in time period t, i.e., the existing arcs and the potential arcs that have been built before time period t. Let 
                        
                           
                              
                                 x
                              
                              
                                 a
                              
                              
                                 t
                              
                           
                        
                      represent the flow on arc 
                        
                           a
                           ∈
                           A
                        
                      in time period 
                        
                           t
                           ∈
                           {
                           1
                           ,
                           …
                           ,
                           T
                           }
                        
                      in an optimal solution to the network optimization problem. Let 
                        
                           F
                           (
                           P
                           )
                        
                      define the “structure” of feasible solutions to the network optimization problem, i.e., the set of constraints imposed on the flow variables (that it has to be an 
                        
                           s
                           –
                           t
                        
                      path, 
                        
                           s
                           –
                           t
                        
                      flow, a TSP tour, etc.). The value of an optimal solution to the network optimization problem P in time period t is a function of the flows on the arcs in that period and denoted by 
                        
                           v
                           (
                           
                              
                                 x
                              
                              
                                 t
                              
                           
                           )
                        
                     . The objective is to minimize the total cost over the planning period. Thus, the generic formulation of an incremental network design problem is as follows:
                        
                           (2.1)
                           
                              
                                 min
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       t
                                       ∈
                                       {
                                       1
                                       ,
                                       …
                                       ,
                                       T
                                       }
                                    
                                 
                              
                              v
                              (
                              
                                 
                                    x
                                 
                                 
                                    t
                                 
                              
                              )
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       t
                                       ∈
                                       {
                                       1
                                       ,
                                       …
                                       ,
                                       T
                                       }
                                       ,
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             p
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    a
                                 
                              
                              (
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                    -
                                    1
                                 
                              
                              )
                           
                        
                     s.t.
                        
                           (2.2)
                           
                              
                                 
                                    x
                                 
                                 
                                    t
                                 
                              
                              ∈
                              F
                              (
                              P
                              )
                              
                              ∀
                              t
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              T
                              }
                           
                        
                     
                     
                        
                           (2.3)
                           
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              ⩽
                              
                                 
                                    C
                                 
                                 
                                    a
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                    -
                                    1
                                 
                              
                              
                              ∀
                              a
                              ∈
                              
                                 
                                    A
                                 
                                 
                                    p
                                 
                              
                              ,
                              
                              t
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              T
                              }
                           
                        
                     
                     
                        
                           (2.4)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             p
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    a
                                 
                              
                              (
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                    -
                                    1
                                 
                              
                              )
                              ⩽
                              
                                 
                                    B
                                 
                                 
                                    t
                                 
                              
                              
                              ∀
                              t
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              T
                              }
                           
                        
                     
                  

The objective function (2.1) has two components: (1) the total cumulative value of the solutions to the network optimization problem solved in each period of the planning horizon and (2) the total cumulative cost of the network expansions carried out during the planning horizon. Constraints (2.2) ensure that the solution in each period of the planning horizon has the required structure (i.e., the structure that characterizes solutions to the network optimization problem). Constraints (2.3) ensure that flow on an arc occurs only when the arc has been built in any of the previous periods and that the flow on the arc does not exceed the capacity of the arc. Constraints (2.4) ensure that the cost of building arcs in a period does not exceed the budget available for construction in that period of the planning horizon.

Incremental network design problems have characteristics in common with various network design problems. A brief review of some relevant literature is given below.

@&#LITERATURE REVIEW@&#

Network design is a fundamental optimization problem and has a rich research tradition. The seminal paper by Magnanti and Wong (1984) discusses many of its features, applications, models, and algorithms, with an emphasis on network design in transportation planning. Kerivin and Mahjoub (2005) survey many network design problems studied in telecommunications. The paper by Magnanti and Wong (1984) mentions “Time Scale” as one of the characteristics of a network design problem that can vary in different planning environments, e.g., transportation and water resource design decisions have long-term effects whereas communication system designs frequently are more readily altered. Not withstanding, the paper focuses exclusively on single-period or single-stage network design problems. Recently, the interest in multi-period or multi-stage network design problems in the area of transportation planning has picked up, partly because it better meets practitioners needs, as in many environments network design decisions span planning periods of up to 25years and the intermediate network configurations are of concern as well as the final network configuration, see for example Kim, Kim, and Song (2008) and Ukkusuri and Patil (2009). The research reported in Kim et al. (2008) and Ukkusuri and Patil (2009) focuses specifically on traffic networks and the network optimization problem solved in each period is a user equilibrium model. In addition, Ukkusuri and Patil (2009) consider the stochasticity and elasticity of traffic demand. Because the nature and characteristics of user equilibrium models are different from the more traditional network optimization problems that we are interested in, such as the shortest path, maximum flow, and multicommodity flow problem, the resulting bi-level optimization problems are different from the incremental network design problems as well. Furthermore, the focus in Kim et al. (2008) and Ukkusuri and Patil (2009) is primarily on gaining insight into the impact of the timing of network expansions, whereas our focus is on gaining an understanding of the theoretical complexity of incremental network design problems and their approximability.

A class of network design problems where construction over time has been studied extensively is dynamic facility location. The recent review Arabani and Farahani (2012) is completely dedicated to dynamic facility location.

An example of an incremental network design problem that has received a lot of attention recently is the transformation of an electrical power grid into a smart grid (e.g., DeBlasio & Tom, 2008; Farhangi, 2010; Mahmood, Aamir, & Anis, 2008; Momoh, 2009), where it is often the case that resource and budget constraints allow only a limited number of upgrades per time period (e.g., annually). Network design over time also occurs naturally in disruption management, where the functioning of critical infrastructures needs to be restored after a disruption due to environmental, technological or intentional damage to system components (e.g., Lee, Mitchell, & Wallace, 2007, 2009; Matisziw, Murray, & Grubesic, 2010). In this context, Guha, Moss, Naor, and Schieber (1999), Averbakh (2012), and Averbakh and Pereira (2012) focus on the recovery times of nodes, which is the first time a node is connected to a special depot node. Recovery time is also the objective in the work of Xu et al. (2007) on the restoration of a power network after an earthquake.

Closer to the problem proposed in this paper, in the sense that the focus is on optimizing the cumulative performance of the network over time, is Matisziw et al. (2010) on a multi-objective approach to network restoration where the performance of the network is measured by connectivity, and Cavdaroglu, Hammel, Mitchell, Sharkey, and Wallace (2013) on maximizing the cumulative flow through a set of interdependent networks.

A general problem class which integrates network design and scheduling decisions, and contains the class of incremental network design problems as a special case, is introduced in Nurre, Cavdaroglu, Mitchell, Sharkey, and Wallace (2012) and Nurre and Sharkey (in press). The authors prove a number of complexity results that complement our NP-completeness proof for the incremental network design problem with shortest paths. The incremental network design problem with minimum spanning trees provides an interesting boundary case, in that it can be solved efficiently when at most one edge can be added per time period (Engel, Kalinowski, & Savelsbergh, 2013), while it is NP-complete in a more general setting (Nurre & Sharkey, in press).

Studying approximation algorithms for network design problems has been popular as well, especially in the computer science community. Two prime examples are Goemans et al. (1994) and Gupta, Kumar, and Roughgarden (2003). The approximation algorithms presented in these papers are for single-period network design problems. Multi-period or incremental approximation has been introduced in the context of facility location in Mettu and Plaxton (2003). The authors consider a situation where a company is building facilities in order to supply its customers, but because of capital considerations, the company will build the facilities over time. The question asked is whether the company can plan its future expansion in such a way that when it has opened the first k facilities, it is close, in value, to that of an optimal solution in which any choice of k facilities is opened. This problem is known as the incremental k-median problem. More formally, in the incremental k-median problem, we are given the input of the k-median problem without the parameter k and must produce a sequence of the facilities. For each k, consider the ratio of the cost of opening the first k facilities in the ordering to the cost of an optimal k-median solution. The goal of the problem is to find an ordering that minimizes the maximum of this ratio over all values of k. See Lin, Nagarajan, Rajaraman, and Williamson (2010) for more on incremental optimization problems.

This brief literature review has covered areas of research that are relevant to the study of the class of incremental network design problems introduced in this paper. The review identified survey papers on single-period network design, recent papers discussing the practical importance of investigating multi-period network design, and fundamental papers on approximation algorithms for network design.

For the remainder of the paper, we focus on one particular incremental network design problem, namely the incremental network design problem with shortest paths (INDP-SP).

We are given a network 
                        
                           D
                           =
                           (
                           N
                           ,
                           A
                           )
                        
                      with node set N (
                        
                           ∣
                           N
                           ∣
                           =
                           n
                        
                     ) and arc set 
                        
                           A
                           =
                           
                              
                                 A
                              
                              
                                 e
                              
                           
                           ∪
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                      (
                        
                           ∣
                           A
                           ∣
                           =
                           m
                        
                     ), where 
                        
                           
                              
                                 A
                              
                              
                                 e
                              
                           
                        
                      is the set of existing arcs and 
                        
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                      is the set of potential arcs, as well as a source 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           ∈
                           N
                        
                      and sink 
                        
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                           ∈
                           N
                        
                     . For each arc 
                        
                           a
                           ∈
                           A
                        
                     , we are given a length 
                        
                           
                              
                                 l
                              
                              
                                 a
                              
                           
                           ⩾
                           0
                        
                     . Let 
                        
                           T
                           =
                           ∣
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                           ∣
                           +
                           1
                        
                      be the planning horizon. In every time period, we have the option to expand the usable network, which initially consists of only the existing arcs, by “building” a single potential arc 
                        
                           a
                           ∈
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                     , which will be available for use in the following period. In every period, the cost (or length) of a shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           -
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path is incurred (using only usable arcs, i.e., existing arcs and potential arcs that have been built in previous periods). The objective is to minimize the total (cumulative) cost over the planning horizon. Note that the length of the planning horizon ensures that every potential arc can be built. This also implies that a shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path in D will always be built. We will refer to such a shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path as an ultimate shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path to distinguish it from a shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path in a time period, which depends on the potential arcs that have been built up to that period. Note that there may be many ultimate shortest paths in the network, and the sequence of potential arcs built in an optimal solution may not be unique. This problem is related to, but also quite different from, shortest path re-optimization problems as studied in Gallo (1980) and extended in Pallottino and Scutellà (2003), in which the costs of a subset of arcs in the network changes (increases or decreases) and the question is how to efficiently identify a shortest path in the modified network.


                     An example. Consider the network shown in Fig. 1
                     , where solid arcs represent existing arcs and dashed arcs represent potential arcs. A path of length 52 can be constructed in three periods and the ultimate shortest path of length 4 can be constructed in 4 periods. However, the optimal solution is to first build arcs 
                        
                           a
                           ,
                           b
                        
                     , and c to give a path of length 54, and then to build arcs 
                        
                           d
                           ,
                           e
                        
                     , and f to complete the ultimate shortest path for a total cost over the planning horizon of 3174.

We start by observing a useful property of an optimal solution. Let 
                        
                           
                              
                                 T
                              
                              
                                 ‾
                              
                           
                        
                      denote the time period in which an ultimate shortest path is completed in an optimal solution.
                        Observation 4.1
                        Let 
                              
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                 
                                 )
                              
                            be an optimal sequence of potential arcs to build 
                              
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                           . Let 
                              
                                 (
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             ‾
                                          
                                       
                                       +
                                       1
                                    
                                 
                                 )
                              
                            be a sequence of associated shortest paths, where 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                              
                            is the path used while 
                              
                                 
                                    
                                       a
                                    
                                    
                                       i
                                    
                                 
                              
                            is being constructed. Let 
                              
                                 
                                    
                                       c
                                    
                                    
                                       i
                                    
                                 
                              
                            be the cost of path 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                              
                           . By grouping paths with identical costs, we obtain subsequences 
                              
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       K
                                    
                                 
                              
                           . Let 
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                            denote a path associated with subsequence 
                              
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                              
                           . Let 
                              
                                 
                                    
                                       A
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                            denote the potential arcs built during subsequence 
                              
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                 
                              
                           . Then we have
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          P
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                       
                                    
                                    ∩
                                    
                                       
                                          A
                                       
                                       
                                          p
                                       
                                    
                                    ⧹
                                    (
                                    
                                       
                                          P
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    ∪
                                    …
                                    ∪
                                    
                                       
                                          P
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    )
                                    
                                    for
                                    
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    K
                                    -
                                    1
                                    .
                                 
                              
                           
                        

Each arc 
                              
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                              
                            for 
                              
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 
                                    
                                       T
                                    
                                    
                                       ‾
                                    
                                 
                              
                            must contribute to the construction of some path 
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                            with 
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 K
                                 }
                              
                           , otherwise an improved solution is obtained by simply removing 
                              
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                              
                            from 
                              
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       a
                                    
                                    
                                       
                                          
                                             T
                                          
                                          
                                             ‾
                                          
                                       
                                    
                                 
                                 )
                              
                           . Furthermore, suppose there exist j and 
                              
                                 
                                    
                                       j
                                    
                                    
                                       ′
                                    
                                 
                              
                            with 
                              
                                 j
                                 <
                                 
                                    
                                       j
                                    
                                    
                                       ′
                                    
                                 
                              
                            and i and 
                              
                                 
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                            with 
                              
                                 i
                                 <
                                 
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                            such that 
                              
                                 
                                    
                                       a
                                    
                                    
                                       
                                          
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              
                            contributes to the construction of path 
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                              
                            contributes to the construction of path 
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           , but not to the construction of paths 
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                            with 
                              
                                 k
                                 ∈
                                 {
                                 i
                                 ,
                                 i
                                 +
                                 1
                                 ,
                                 …
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 -
                                 1
                                 }
                              
                           . By interchanging 
                              
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       a
                                    
                                    
                                       
                                          
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              
                           , the paths 
                              
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                            with 
                              
                                 k
                                 ∈
                                 {
                                 i
                                 ,
                                 i
                                 +
                                 1
                                 ,
                                 …
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 -
                                 1
                                 }
                              
                            are completed earlier, while all other paths are completed at the same time, which reduces the total cost.□

Thus, the problem can be viewed as seeking a sequence of potential arcs to build, but also as seeking a sequence of paths to be constructed, and the last property establishes that in an optimal solution any potential arc that is built before an ultimate shortest path is completed will be part of the next shortest path.

Since the shortest path problem is polynomially solvable, the complexity of the incremental network design problem with shortest paths is not obvious. The following theorem shows that even the simplest variant of the incremental network design problem with shortest paths as defined above is NP-hard.
                        Theorem 5.1
                        
                           The incremental network design problem with shortest paths is NP-hard.
                        

Reduction from 3-SAT. Consider an instance of 3-SAT with n Boolean variables 
                              
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       n
                                    
                                 
                              
                            and m clauses, i.e., 
                              
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 ∧
                                 
                                    
                                       c
                                    
                                    
                                       2
                                    
                                 
                                 ∧
                                 ⋯
                                 ∧
                                 
                                    
                                       c
                                    
                                    
                                       m
                                    
                                 
                              
                           , each of which contains three literals, i.e., 
                              
                                 
                                    
                                       c
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       l
                                    
                                    
                                       i
                                       1
                                    
                                 
                                 ∨
                                 
                                    
                                       l
                                    
                                    
                                       i
                                       2
                                    
                                 
                                 ∨
                                 
                                    
                                       l
                                    
                                    
                                       i
                                       3
                                    
                                 
                                 )
                              
                           , where each literal is a Boolean variable 
                              
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                              
                            or its negation. We construct the instance of INDP-SP given in Fig. 2
                           . As before, existing arcs are shown as solid arcs and potential arcs are shown as dashed arcs, so that there are 
                              
                                 3
                                 n
                                 +
                                 m
                                 +
                                 1
                              
                            potential arcs, which gives a time horizon of 
                              
                                 T
                                 =
                                 3
                                 n
                                 +
                                 m
                                 +
                                 2
                              
                           . Let the arc labels represent costs where 
                              
                                 
                                    
                                       M
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                    
                                       M
                                    
                                    
                                       m
                                       -
                                       1
                                    
                                 
                                 =
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    
                                       M
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 m
                                 ,
                                 
                                    
                                       M
                                    
                                    
                                       0
                                    
                                 
                                 =
                                 m
                                 +
                                 1
                              
                            and 
                              
                                 I
                                 >
                                 (
                                 m
                                 +
                                 1
                                 )
                                 (
                                 n
                                 +
                                 1
                                 +
                                 m
                                 /
                                 2
                                 )
                              
                           , and unlabeled arcs have a cost of 0. We claim that the 3-SAT instance can be satisfied if and only if the INDP-SP instance has a feasible solution with objective value at most 
                              
                                 z
                                 =
                                 nI
                                 +
                                 (
                                 m
                                 +
                                 1
                                 )
                                 (
                                 n
                                 +
                                 1
                                 +
                                 m
                                 /
                                 2
                                 )
                              
                           . First suppose that the 3-SAT instance can be satisfied, fix a solution 
                              
                                 y
                                 =
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       n
                                    
                                 
                                 )
                              
                            where 
                              
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 {
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 ¬
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                            for 
                              
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                              
                           , and consider the following solution for the INDP-SP instance:
                              
                                 •
                                 In the first n time periods, build the arcs corresponding to the literals in y, i.e., in time period i (
                                       
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          n
                                       
                                    ), build the arc leaving the node labeled 
                                       
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                       
                                    .

In time periods 
                                       
                                          n
                                          +
                                          1
                                          ,
                                          …
                                          ,
                                          2
                                          n
                                          +
                                          m
                                          +
                                          1
                                       
                                     build the arcs
                                       
                                          
                                             (
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             ,
                                             
                                                
                                                   s
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             ,
                                             (
                                             
                                                
                                                   s
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   s
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             ,
                                             …
                                             ,
                                             (
                                             
                                                
                                                   s
                                                
                                                
                                                   n
                                                   -
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   s
                                                
                                                
                                                   n
                                                
                                             
                                             )
                                             ,
                                             (
                                             
                                                
                                                   s
                                                
                                                
                                                   n
                                                
                                             
                                             ,
                                             
                                                
                                                   c
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             ,
                                             (
                                             
                                                
                                                   c
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   c
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                             ,
                                             …
                                             ,
                                             (
                                             
                                                
                                                   c
                                                
                                                
                                                   m
                                                   -
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   c
                                                
                                                
                                                   m
                                                
                                             
                                             )
                                             ,
                                             (
                                             
                                                
                                                   c
                                                
                                                
                                                   m
                                                
                                             
                                             ,
                                             
                                                
                                                   t
                                                
                                                
                                                   ¯
                                                
                                             
                                             )
                                             .
                                          
                                       
                                    
                                 

The assumption that the arcs built in the first n periods correspond to a satisfying assignment, implies that from period 
                              
                                 n
                                 +
                                 1
                              
                            on, for every 
                              
                                 j
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 }
                              
                            there is a path of cost 
                              
                                 
                                    
                                       M
                                    
                                    
                                       j
                                    
                                 
                              
                            from 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                              
                            to t. Consequently, the objective value for the described solution is
                              
                                 
                                    nI
                                    +
                                    (
                                    n
                                    +
                                    1
                                    )
                                    
                                       
                                          M
                                       
                                       
                                          0
                                       
                                    
                                    +
                                    
                                       
                                          M
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    ⋯
                                    +
                                    
                                       
                                          M
                                       
                                       
                                          m
                                       
                                    
                                    =
                                    nI
                                    +
                                    (
                                    n
                                    +
                                    1
                                    )
                                    (
                                    m
                                    +
                                    1
                                    )
                                    +
                                    m
                                    (
                                    m
                                    +
                                    1
                                    )
                                    /
                                    2
                                    =
                                    z
                                    .
                                 
                              
                           Conversely, suppose that the INDP-SP instance has a solution with objective value at most z. Since 
                              
                                 (
                                 n
                                 +
                                 1
                                 )
                                 I
                                 >
                                 z
                              
                           , this implies that in time period 
                              
                                 n
                                 +
                                 1
                              
                            a path of cost less than I has to be reached, and this can only be done by building n arcs corresponding to literals in the first n time periods. But then 
                              
                                 
                                    
                                       M
                                    
                                    
                                       0
                                    
                                 
                              
                            is a lower bound for the cost of the shortest path in time periods 
                              
                                 n
                                 +
                                 1
                                 ,
                                 n
                                 +
                                 2
                                 ,
                                 …
                                 ,
                                 2
                                 n
                                 +
                                 1
                              
                            and 
                              
                                 
                                    
                                       M
                                    
                                    
                                       i
                                    
                                 
                              
                            is a lower bound for the shortest path in period 
                              
                                 2
                                 n
                                 +
                                 1
                                 +
                                 i
                              
                            for 
                              
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                              
                           . This implies that 
                              
                                 nI
                                 +
                                 (
                                 n
                                 +
                                 1
                                 )
                                 (
                                 m
                                 +
                                 1
                                 )
                                 +
                                 m
                                 (
                                 m
                                 +
                                 1
                                 )
                                 /
                                 2
                                 =
                                 z
                              
                            is a lower bound for the objective value of the INDP-SP instance. In order to achieve this lower bound, the arcs
                              
                                 
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                    ,
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    ,
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    ,
                                    …
                                    ,
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          n
                                          -
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          s
                                       
                                       
                                          n
                                       
                                    
                                    )
                                    ,
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          n
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    ,
                                    (
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    ,
                                    …
                                    ,
                                    (
                                    
                                       
                                          c
                                       
                                       
                                          m
                                          -
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          m
                                       
                                    
                                    )
                                    ,
                                    (
                                    
                                       
                                          c
                                       
                                       
                                          m
                                       
                                    
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          ¯
                                       
                                    
                                    )
                                 
                              
                           have to be build in time periods 
                              
                                 n
                                 +
                                 1
                                 ,
                                 …
                                 ,
                                 2
                                 n
                                 +
                                 m
                                 +
                                 1
                              
                           , and for every 
                              
                                 j
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 }
                              
                            there needs to be a path of cost 
                              
                                 
                                    
                                       M
                                    
                                    
                                       j
                                    
                                 
                              
                            from 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                              
                            to 
                              
                                 
                                    
                                       t
                                    
                                    
                                       ¯
                                    
                                 
                              
                           . The last condition is satisfied if and only if the set of literals corresponding to the arcs that are built in the first n periods contains at least one literal from every clause. In other words, these literals represent a solution for the 3-SAT instance.□

Even though the incremental network design problem with shortest paths is NP-hard, we next show that there exist special cases which are polynomially solvable. Consider the special case of disjoint paths graphs, in which the arcs 
                        
                           a
                           ∈
                           A
                        
                      form node-disjoint paths from s to t. More specifically, consider a disjoint paths graph with 
                        
                           r
                           +
                           1
                        
                      paths 
                        
                           
                              
                                 P
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 P
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 P
                              
                              
                                 r
                              
                           
                        
                     . Because the paths are disjoint, the order in which the potential arcs on a path are build is immaterial. Therefore, for 
                        
                           i
                           ∈
                           {
                           0
                           ,
                           1
                           ,
                           …
                           ,
                           r
                           }
                        
                     , let 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                        
                      denote the number of potential arcs on 
                        
                           
                              
                                 P
                              
                              
                                 i
                              
                           
                        
                     , and, as before, let 
                        
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                        
                      denote the cost of path 
                        
                           
                              
                                 P
                              
                              
                                 i
                              
                           
                        
                     . It is easy to see that if 
                        
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                           >
                           
                              
                                 c
                              
                              
                                 j
                              
                           
                        
                      and 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                           ⩾
                           
                              
                                 q
                              
                              
                                 j
                              
                           
                        
                     , then the path 
                        
                           
                              
                                 P
                              
                              
                                 i
                              
                           
                        
                      will not be constructed in an optimal solution. Therefore, we may assume that 
                        
                           0
                           =
                           
                              
                                 q
                              
                              
                                 0
                              
                           
                           <
                           
                              
                                 q
                              
                              
                                 1
                              
                           
                           <
                           ⋯
                           <
                           
                              
                                 q
                              
                              
                                 r
                              
                           
                        
                      and 
                        
                           
                              
                                 c
                              
                              
                                 0
                              
                           
                           >
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           >
                           ⋯
                           >
                           
                              
                                 c
                              
                              
                                 r
                              
                           
                        
                     . We construct an auxiliary digraph 
                        
                           
                              
                                 D
                              
                              
                                 ‾
                              
                           
                        
                      with node set 
                        
                           {
                           0
                           ,
                           1
                           ,
                           …
                           ,
                           r
                           +
                           1
                           }
                        
                     . An arc set of 
                        
                           (
                           r
                           ,
                           r
                           +
                           1
                           )
                        
                      with weight 
                        
                           
                              
                                 c
                              
                              
                                 r
                              
                           
                        
                     , and arcs 
                        
                           (
                           i
                           ,
                           j
                           )
                        
                      for 
                        
                           0
                           ⩽
                           i
                           <
                           j
                           ⩽
                           r
                        
                      with weights
                        
                           
                              w
                              (
                              i
                              ,
                              j
                              )
                              =
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                i
                                                +
                                                1
                                             
                                             
                                                j
                                                -
                                                1
                                             
                                          
                                       
                                       
                                          
                                             q
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    r
                                 
                              
                              .
                           
                        
                     The paths from 0 to r in 
                        
                           
                              
                                 D
                              
                              
                                 ‾
                              
                           
                        
                      are in one-to-one correspondence to solutions of the given disjoint paths instance: a path 
                        
                           (
                           0
                           =
                           
                              
                                 i
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 i
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 i
                              
                              
                                 s
                              
                           
                           =
                           r
                           )
                        
                      corresponds to building the paths 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                              
                           
                           ,
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                      in this order, and the weight of the path in 
                        
                           
                              
                                 D
                              
                              
                                 ‾
                              
                           
                        
                      equals the objective value for the disjoint paths instance. Note that 
                        
                           
                              
                                 q
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                              
                           
                           
                              
                                 c
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       j
                                       -
                                       1
                                    
                                 
                              
                           
                        
                      for 
                        
                           j
                           =
                           1
                           ,
                           …
                           ,
                           s
                        
                      captures the cost of building path 
                        
                           
                              
                                 P
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                      and 
                        
                           (
                           
                              
                                 ∑
                              
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 r
                                 }
                                 ⧹
                                 {
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       s
                                    
                                 
                                 }
                              
                           
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                           )
                           
                              
                                 c
                              
                              
                                 r
                              
                           
                        
                      captures the cost incurred after the ultimate shortest path has been built. Thus, we have proved the following result.
                        Proposition 5.1
                        
                           An instance associated with a disjoint paths graph with r paths and characterized by vectors 
                           
                              
                                 (
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       q
                                    
                                    
                                       r
                                    
                                 
                                 )
                              
                            
                           and 
                           
                              
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       c
                                    
                                    
                                       r
                                    
                                 
                                 )
                              
                            
                           can be solved in time 
                           
                              
                                 O
                                 (
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                           
                           .
                        

In the following proposition, we completely characterize the instances associated with disjoint paths graphs where all potential arcs need to be build.
                        Proposition 5.2
                        
                           For an instance associated with a disjoint paths graph with r paths and characterized by vectors 
                           
                              
                                 (
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       q
                                    
                                    
                                       r
                                    
                                 
                                 )
                              
                            
                           and 
                           
                              
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       c
                                    
                                    
                                       r
                                    
                                 
                                 )
                              
                            
                           all potential arcs have to be built in any optimal solution if and only if
                           
                              
                                 (5.1)
                                 
                                    (
                                    
                                       
                                          q
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    -
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    
                                       
                                          c
                                       
                                       
                                          i
                                          -
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          c
                                       
                                       
                                          r
                                       
                                    
                                    >
                                    
                                       
                                          q
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    
                                       
                                          c
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                           for all 
                           
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 r
                                 -
                                 1
                                 }
                              
                           .

Suppose the inequality (5.1) holds for all 
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 r
                                 }
                              
                            and there is an optimal solution with 
                              
                                 I
                                 ⊆
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 r
                                 }
                              
                            being the set of indices i such that 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                              
                            is built in this solution. Writing 
                              
                                 I
                                 =
                                 {
                                 
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 <
                                 
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                                 <
                                 ⋯
                                 <
                                 
                                    
                                       i
                                    
                                    
                                       s
                                    
                                 
                                 =
                                 r
                                 }
                              
                            and putting 
                              
                                 
                                    
                                       i
                                    
                                    
                                       0
                                    
                                 
                                 =
                                 0
                              
                           , the optimal objective value is
                              
                                 
                                    f
                                    (
                                    I
                                    )
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             s
                                          
                                       
                                    
                                    
                                       
                                          q
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                    
                                       
                                          c
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                                -
                                                1
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          c
                                       
                                       
                                          r
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      {
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      r
                                                      }
                                                      ⧹
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   q
                                                
                                                
                                                   i
                                                
                                             
                                             +
                                             1
                                          
                                       
                                    
                                 
                              
                           Suppose there is some 
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 r
                                 -
                                 1
                                 }
                              
                            with 
                              
                                 i
                                 
                                 ∉
                                 
                                 I
                              
                           . Then we may assume that 
                              
                                 i
                                 =
                                 
                                    
                                       i
                                    
                                    
                                       l
                                    
                                 
                                 -
                                 1
                                 >
                                 
                                    
                                       i
                                    
                                    
                                       l
                                       -
                                       1
                                    
                                 
                              
                            for some 
                              
                                 l
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 s
                                 }
                              
                            and the objective value for the index set 
                              
                                 
                                    
                                       I
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 I
                                 ∪
                                 {
                                 i
                                 }
                              
                            is
                              
                                 
                                    f
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                    =
                                    f
                                    (
                                    I
                                    )
                                    -
                                    (
                                    
                                       
                                          q
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    -
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    
                                       
                                          c
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                l
                                                -
                                                1
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          q
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    
                                       
                                          c
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          c
                                       
                                       
                                          r
                                       
                                    
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    <
                                    f
                                    (
                                    I
                                    )
                                 
                              
                           and this contradicts the optimality of I.

Conversely, suppose 
                              
                                 I
                                 =
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 r
                                 }
                              
                            is the index set of the paths build in the unique optimal solution with objective value 
                              
                                 f
                                 (
                                 I
                                 )
                              
                            and that there is an 
                              
                                 i
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 r
                                 -
                                 1
                                 }
                              
                            violating (5.1). The objective value for building the paths with indices in 
                              
                                 
                                    
                                       I
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 I
                                 ⧹
                                 {
                                 i
                                 }
                              
                            is
                              
                                 
                                    f
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                    =
                                    f
                                    (
                                    I
                                    )
                                    +
                                    (
                                    
                                       
                                          q
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    -
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    
                                       
                                          c
                                       
                                       
                                          i
                                          -
                                          1
                                       
                                    
                                    -
                                    
                                       
                                          q
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    
                                       
                                          c
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          c
                                       
                                       
                                          r
                                       
                                    
                                    ⩽
                                    f
                                    (
                                    I
                                    )
                                 
                              
                           contradicting the assumption that all paths have to be build in any optimal solution.□

One possible way to satisfy the condition in Proposition 5.2 is to put 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                           
                           =
                           i
                        
                      for 
                        
                           i
                           =
                           0
                           ,
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           r
                        
                     , and to define 
                        
                           
                              
                                 c
                              
                              
                                 r
                              
                           
                        
                      recursively by 
                        
                           
                              
                                 c
                              
                              
                                 r
                              
                           
                           =
                           0
                        
                      and 
                        
                           
                              
                                 c
                              
                              
                                 i
                                 -
                                 1
                              
                           
                           =
                           (
                           i
                           +
                           1
                           )
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                           +
                           1
                        
                      for 
                        
                           i
                           =
                           r
                           -
                           1
                           ,
                           r
                           -
                           2
                           ,
                           …
                           ,
                           0
                        
                     . This is illustrated in Fig. 3
                      for 
                        
                           r
                           =
                           5
                        
                     .

Two simple natural greedy heuristics are to
                        
                           1.
                           Always build arcs that lead to a shorter 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          ¯
                                       
                                    
                                    -
                                    
                                       
                                          t
                                       
                                       
                                          ¯
                                       
                                    
                                 
                               path as quickly as possible (
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                              ); and

Build an ultimate shortest path as quickly as possible (
                                 
                                    
                                       
                                          H
                                       
                                       
                                          2
                                       
                                    
                                 
                              ).

Next, we show that the performance of both these heuristics, as well as of the heuristic where we take the best of the two solutions (
                        
                           
                              
                                 H
                              
                              
                                 3
                              
                           
                        
                     ), can be bad. Let the sequence 
                        
                           (
                           
                              
                                 c
                              
                              
                                 k
                              
                           
                           )
                        
                      be given by values 
                        
                           
                              
                                 c
                              
                              
                                 0
                              
                           
                           =
                           1
                           ,
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           =
                           1
                           ,
                           
                              
                                 c
                              
                              
                                 2
                              
                           
                           =
                           4
                        
                     , and the recursion 
                        
                           
                              
                                 c
                              
                              
                                 k
                              
                           
                           =
                           5
                           
                              
                                 c
                              
                              
                                 k
                                 -
                                 1
                              
                           
                           -
                           3
                           
                              
                                 c
                              
                              
                                 k
                                 -
                                 2
                              
                           
                        
                      for 
                        
                           k
                           >
                           2
                        
                     .
                        Lemma 6.1
                        
                           We have 
                           
                              
                                 
                                    
                                       c
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       k
                                       -
                                       1
                                    
                                 
                                 (
                                 i
                                 +
                                 2
                                 )
                                 
                                    
                                       c
                                    
                                    
                                       k
                                       -
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       c
                                    
                                    
                                       0
                                    
                                 
                              
                            
                           for all k.

Induction on k. For 
                              
                                 k
                                 ⩽
                                 2
                              
                            it is easy to check, and for 
                              
                                 k
                                 >
                                 2
                              
                            we get
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          k
                                       
                                    
                                    =
                                    5
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          1
                                       
                                    
                                    -
                                    3
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          2
                                       
                                    
                                    =
                                    3
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          1
                                       
                                    
                                    +
                                    2
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      k
                                                      -
                                                      2
                                                   
                                                
                                             
                                             (
                                             i
                                             +
                                             2
                                             )
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                   -
                                                   1
                                                   -
                                                   i
                                                
                                             
                                             +
                                             
                                                
                                                   c
                                                
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                    -
                                    2
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          2
                                       
                                    
                                    -
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      k
                                                      -
                                                      3
                                                   
                                                
                                             
                                             (
                                             i
                                             +
                                             2
                                             )
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                   -
                                                   2
                                                   -
                                                   i
                                                
                                             
                                             +
                                             
                                                
                                                   c
                                                
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                    =
                                    3
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          1
                                       
                                    
                                    +
                                    4
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      2
                                                   
                                                   
                                                      k
                                                      -
                                                      2
                                                   
                                                
                                             
                                             2
                                             (
                                             i
                                             +
                                             2
                                             )
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                   -
                                                   1
                                                   -
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      k
                                                      -
                                                      3
                                                   
                                                
                                             
                                             (
                                             i
                                             +
                                             2
                                             )
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                   -
                                                   2
                                                   -
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          c
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    3
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          1
                                       
                                    
                                    +
                                    4
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      3
                                                   
                                                   
                                                      k
                                                      -
                                                      1
                                                   
                                                
                                             
                                             2
                                             (
                                             i
                                             +
                                             1
                                             )
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                   -
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      3
                                                   
                                                   
                                                      k
                                                      -
                                                      1
                                                   
                                                
                                             
                                             
                                                
                                                   ic
                                                
                                                
                                                   k
                                                   -
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          c
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             k
                                             -
                                             1
                                          
                                       
                                    
                                    (
                                    i
                                    +
                                    2
                                    )
                                    
                                       
                                          c
                                       
                                       
                                          k
                                          -
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          c
                                       
                                       
                                          0
                                       
                                    
                                    .
                                    
                                    □
                                 
                              
                           
                        

Now consider the instance given in Fig. 4
                     . We have 
                        
                           T
                           =
                           
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          p
                                       
                                    
                                 
                              
                           
                           +
                           1
                           =
                           2
                           +
                           3
                           +
                           ⋯
                           +
                           (
                           k
                           +
                           1
                           )
                           +
                           T
                           /
                           2
                           +
                           1
                        
                     , hence 
                        
                           T
                           =
                           (
                           k
                           +
                           1
                           )
                           (
                           k
                           +
                           2
                           )
                        
                     . We compare the following three strategies:
                        
                           1.
                           
                              
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                              , i.e. build the bottom path first, and then the remaining paths from bottom to top;


                              
                                 
                                    
                                       
                                          H
                                       
                                       
                                          2
                                       
                                    
                                 
                              , i.e., build only the top path; and

Build all paths except the bottom one.

For large enough k, we can bound the corresponding objective function values as follows.
                        
                           1.
                           For 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                       
                                    
                                 
                               we get
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                0
                                             
                                             
                                                T
                                                /
                                                2
                                             
                                          
                                       
                                       (
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       -
                                       i
                                       )
                                       +
                                       (
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       -
                                       T
                                       /
                                       2
                                       )
                                       +
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                k
                                                -
                                                1
                                             
                                          
                                       
                                       (
                                       i
                                       +
                                       2
                                       )
                                       
                                          
                                             c
                                          
                                          
                                             k
                                             -
                                             i
                                          
                                       
                                       +
                                       
                                          
                                             c
                                          
                                          
                                             0
                                          
                                       
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      T
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                3
                                             
                                          
                                       
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       -
                                       
                                          
                                             T
                                             (
                                             T
                                             +
                                             2
                                             )
                                          
                                          
                                             8
                                          
                                       
                                       -
                                       
                                          
                                             T
                                          
                                          
                                             2
                                          
                                       
                                       ⩾
                                       
                                          
                                             kc
                                          
                                          
                                             k
                                          
                                       
                                       .
                                    
                                 
                              
                           

For 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          2
                                       
                                    
                                 
                               we get
                                 
                                    
                                       (
                                       k
                                       +
                                       1
                                       )
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       +
                                       (
                                       T
                                       -
                                       k
                                       -
                                       1
                                       )
                                       
                                          
                                             c
                                          
                                          
                                             0
                                          
                                       
                                       ⩾
                                       
                                          
                                             kc
                                          
                                          
                                             k
                                          
                                       
                                       .
                                    
                                 
                              
                           

For the third strategy we get
                                 
                                    
                                       2
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       +
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                k
                                                -
                                                1
                                             
                                          
                                       
                                       (
                                       i
                                       +
                                       2
                                       )
                                       
                                          
                                             c
                                          
                                          
                                             k
                                             -
                                             i
                                          
                                       
                                       +
                                       
                                          
                                             c
                                          
                                          
                                             0
                                          
                                       
                                       +
                                       
                                          
                                             T
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             c
                                          
                                          
                                             0
                                          
                                       
                                       =
                                       3
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       +
                                       
                                          
                                             T
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             c
                                          
                                          
                                             0
                                          
                                       
                                       ⩽
                                       4
                                       
                                          
                                             c
                                          
                                          
                                             k
                                          
                                       
                                       .
                                    
                                 
                              
                           

This implies that the two simple natural greedy heuristics produce solutions with values that are at least 
                        
                           
                              
                                 k
                              
                              
                                 4
                              
                           
                        
                      times the optimal value for this instance. The above shows that the two simple natural greedy heuristics do not provide constant-factor approximation algorithms.

For 
                        
                           k
                           =
                           0
                           ,
                           1
                           ,
                           …
                           ,
                           T
                        
                     , let 
                        
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                        
                      denote the cost of the shortest path from source to sink using at most k arcs from 
                        
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                     . The value of 
                        
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                        
                      can be computed using the modified Bellman–Ford algorithm shown in Algorithm 1, where 
                        
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                           (
                           u
                           ,
                           v
                           )
                        
                      is the cost of a shortest 
                        
                           u
                           -
                           v
                        
                      path using at most k arcs from 
                        
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                     . Set 
                        
                           
                              
                                 Δ
                              
                              
                                 ′
                              
                           
                           =
                           
                              
                                 d
                              
                              
                                 T
                              
                           
                        
                      to be the cost of an ultimate shortest path, and 
                        
                           Δ
                           =
                           
                              
                                 d
                              
                              
                                 0
                              
                           
                           -
                           
                              
                                 d
                              
                              
                                 T
                              
                           
                        
                      be the cost of the initial shortest path, less the cost of an ultimate shortest path.
                        Algorithm 1
                        Computing the cost of a shortest path from source to sink with at most k potential arcs. 
                              
                                 
                                    
                                    
                                       
                                          
                                             for 
                                             
                                                
                                                   k
                                                   =
                                                   0
                                                   ,
                                                   …
                                                   ,
                                                   T
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             
                                             if 
                                             
                                                
                                                   k
                                                   =
                                                   0
                                                
                                              
                                             then
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   s
                                                   )
                                                   ←
                                                   0
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   v
                                                   )
                                                   ←
                                                   ∞
                                                
                                              for all 
                                                
                                                   v
                                                   
                                                   ≠
                                                   
                                                   s
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             else
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   v
                                                   )
                                                   ←
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                         -
                                                         1
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   v
                                                   )
                                                
                                              for all 
                                                
                                                   v
                                                   ∈
                                                   N
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             for 
                                             
                                                
                                                   a
                                                   =
                                                   (
                                                   v
                                                   ,
                                                   w
                                                   )
                                                   ∈
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   w
                                                   )
                                                   ←
                                                   min
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  d
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            s
                                                            ,
                                                            w
                                                            )
                                                            ,
                                                            
                                                            
                                                               
                                                                  d
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            s
                                                            ,
                                                            v
                                                            )
                                                            +
                                                            
                                                               
                                                                  c
                                                               
                                                               
                                                                  a
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             for 
                                             
                                                
                                                   i
                                                   =
                                                   1
                                                   ,
                                                   …
                                                   ,
                                                   n
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             for 
                                             
                                                
                                                   a
                                                   =
                                                   (
                                                   v
                                                   ,
                                                   w
                                                   )
                                                   ∈
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         e
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   w
                                                   )
                                                   ←
                                                   min
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  d
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            s
                                                            ,
                                                            w
                                                            )
                                                            ,
                                                            
                                                            
                                                               
                                                                  d
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            s
                                                            ,
                                                            v
                                                            )
                                                            +
                                                            
                                                               
                                                                  c
                                                               
                                                               
                                                                  a
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          return 
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   s
                                                   ,
                                                   t
                                                   )
                                                
                                              as 
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                              for all k
                                          
                                       
                                    
                                 
                              
                           
                        

Denote the value of 
                        
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                        
                      as the minimum number of arcs that need to be constructed to obtain an 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path with cost less than 
                        
                           
                              
                                 Δ
                              
                              
                                 ′
                              
                           
                           +
                           
                              
                                 Δ
                              
                              
                                 
                                    
                                       2
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        
                     . For convenience, we also introduce parameters 
                        
                           
                              
                                 k
                              
                              
                                 0
                              
                           
                           =
                           
                              
                                 κ
                              
                              
                                 0
                              
                           
                        
                      and 
                        
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                           -
                           
                              
                                 κ
                              
                              
                                 i
                                 -
                                 1
                              
                           
                        
                      for 
                        
                           i
                           ⩾
                           1
                        
                     , which gives 
                        
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 k
                              
                              
                                 0
                              
                           
                           +
                           
                              
                                 k
                              
                              
                                 1
                              
                           
                           +
                           ⋯
                           +
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                        
                     . Let K be the minimal index k with 
                        
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                           =
                           
                              
                                 d
                              
                              
                                 T
                              
                           
                        
                     , and r be the smallest integer with 
                        
                           
                              
                                 d
                              
                              
                                 K
                                 -
                                 1
                              
                           
                           ⩾
                           
                              
                                 Δ
                              
                              
                                 ′
                              
                           
                           +
                           
                              
                                 Δ
                              
                              
                                 
                                    
                                       2
                                    
                                    
                                       r
                                    
                                 
                              
                           
                        
                     . This gives 
                        
                           
                              
                                 κ
                              
                              
                                 r
                              
                           
                           =
                           
                              
                                 k
                              
                              
                                 0
                              
                           
                           +
                           
                              
                                 k
                              
                              
                                 1
                              
                           
                           +
                           ⋯
                           +
                           
                              
                                 k
                              
                              
                                 r
                              
                           
                           =
                           K
                        
                     .
                        Algorithm 2
                        Approximately solving the incremental network design problem with shortest paths. 
                              
                                 
                                    
                                    
                                       
                                          Compute the values 
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                              using Algorithm 1
                                          
                                       
                                       
                                          
                                             
                                                
                                                   K
                                                   ←
                                                   min
                                                   {
                                                   k
                                                   :
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   }
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                   =
                                                   {
                                                   i
                                                
                                              such that 
                                                
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   >
                                                   0
                                                   }
                                                
                                             
                                          
                                       
                                       
                                          
                                             for 
                                             
                                                
                                                   i
                                                   =
                                                   0
                                                   ,
                                                   …
                                                   ,
                                                   r
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         κ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ←
                                                   min
                                                   {
                                                   k
                                                   :
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   <
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   +
                                                   (
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   )
                                                   /
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   }
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   j
                                                   ←
                                                   0
                                                
                                              {number of added arcs}
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         ‾
                                                      
                                                   
                                                   ←
                                                   ∅
                                                
                                              {set of added arcs}
                                       
                                       
                                          
                                             for 
                                             
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             Determine an s–t path P of cost 
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         
                                                            
                                                               κ
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                              using at most 
                                                
                                                   
                                                      
                                                         κ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                              arcs from 
                                                
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             for 
                                             
                                                
                                                   a
                                                   ∈
                                                   (
                                                   P
                                                   ∩
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   )
                                                   ⧹
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         ‾
                                                      
                                                   
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   j
                                                   ←
                                                   j
                                                   +
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ←
                                                   a
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         ‾
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         ‾
                                                      
                                                   
                                                   ∪
                                                   {
                                                   a
                                                   }
                                                
                                             
                                          
                                       
                                       
                                          Build arcs 
                                                
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                              in that order.
                                       
                                    
                                 
                              
                           
                        

The approach that is taken in Algorithm 2, is to firstly determine the smallest number of arcs that can be constructed such that cost of a shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path is less than 
                        
                           
                              
                                 Δ
                              
                              
                                 
                                    
                                       2
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           +
                           
                              
                                 Δ
                              
                              
                                 ′
                              
                           
                        
                      for each 
                        
                           i
                           =
                           0
                           ,
                           1
                           ,
                           …
                           ,
                           r
                        
                     . This defines the values of 
                        
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                        
                      and 
                        
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                        
                     . If 
                        
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                           >
                           0
                        
                     , then 
                        
                           
                              
                                 Δ
                              
                              
                                 
                                    
                                       2
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           +
                           
                              
                                 Δ
                              
                              
                                 ′
                              
                           
                        
                      provides a lower bound on the cost incurred while constructing a path that has 
                        
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                        
                      more potential arcs than the previously used shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path. Furthermore, 
                        
                           
                              
                                 Δ
                              
                              
                                 
                                    
                                       2
                                    
                                    
                                       i
                                       -
                                       1
                                    
                                 
                              
                           
                           +
                           
                              
                                 Δ
                              
                              
                                 ′
                              
                           
                        
                      provides an upper bound on the cost incurred while constructing a path that has 
                        
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                        
                      more potential arcs than the previously used shortest 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path. The number of arcs that must be constructed to complete this path depends on the number of arcs previously constructed on the 
                        
                           
                              
                                 s
                              
                              
                                 ¯
                              
                           
                           –
                           
                              
                                 t
                              
                              
                                 ¯
                              
                           
                        
                      path that is utilized. The lower bound on the number of arcs that need to be constructed is 
                        
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                        
                     , and the upper bound is given by 
                        
                           
                              
                                 κ
                              
                              
                                 i
                              
                           
                        
                     . The upper bound represents the case where the path is disjoint, and requires all potential arcs in the path to be constructed. In Fig. 5
                     , these two cases refer to the top branch and the bottom 
                        
                           r
                           +
                           1
                        
                      branches respectively. We can combine the bounds on both the number of arcs constructed and their cost to obtain upper and lower bounds on the solution returned by Algorithm 2.

A cost of at least 
                           
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                           
                         is incurred every time period so the baseline cost is 
                           
                              T
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                           
                        . As a lower bound, 
                           
                              
                                 
                                    Δ
                                 
                                 
                                    
                                       
                                          2
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         is incurred for 
                           
                              
                                 
                                    k
                                 
                                 
                                    i
                                 
                              
                           
                         periods, while constructing the path that has 
                           
                              
                                 
                                    k
                                 
                                 
                                    i
                                 
                              
                           
                         more potential arcs than the previously used shortest 
                           
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                              –
                              
                                 
                                    t
                                 
                                 
                                    ¯
                                 
                              
                           
                         path. The total cost of construction is bounded below by 
                           
                              L
                              =
                              T
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                              +
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    ∈
                                    I
                                 
                              
                              
                                 
                                    k
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    Δ
                                 
                                 
                                    
                                       
                                          2
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                        .

Again, the baseline cost is 
                           
                              T
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                           
                        . As an upper bound, 
                           
                              
                                 
                                    Δ
                                 
                                 
                                    
                                       
                                          2
                                       
                                       
                                          i
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                         is incurred for 
                           
                              
                                 
                                    κ
                                 
                                 
                                    i
                                 
                              
                           
                         periods, while constructing the path that has 
                           
                              
                                 
                                    k
                                 
                                 
                                    i
                                 
                              
                           
                         more potential arcs than the previously used shortest 
                           
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                              –
                              
                                 
                                    t
                                 
                                 
                                    ¯
                                 
                              
                           
                         path. The total cost of construction is bounded above by 
                           
                              U
                              =
                              T
                              
                                 
                                    Δ
                                 
                                 
                                    ′
                                 
                              
                              +
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    ∈
                                    I
                                 
                              
                              
                                 
                                    κ
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    Δ
                                 
                                 
                                    
                                       
                                          2
                                       
                                       
                                          i
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                        .

Combining these two bounds, we can bound the approximation ratio of Algorithm 2.
                           Proposition 7.1
                           
                              Algorithm 2 
                              is a 4-approximation for the incremental network design problem with shortest paths.
                           

We can now demonstrate that Algorithm 2 is a 4-approximation, by showing that 
                                 
                                    U
                                    ⩽
                                    4
                                    L
                                 
                              :
                                 
                                    
                                       
                                          
                                             
                                             
                                                
                                                   U
                                                   =
                                                   T
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            ∈
                                                            I
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         κ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         
                                                            
                                                               2
                                                            
                                                            
                                                               i
                                                               -
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                   =
                                                   T
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            ∈
                                                            I
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              ∑
                                                                           
                                                                           
                                                                              j
                                                                              =
                                                                              0
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           k
                                                                        
                                                                        
                                                                           j
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  Δ
                                                               
                                                               
                                                                  
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        i
                                                                        -
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                
                                                   
                                                   =
                                                   T
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            j
                                                            =
                                                            0
                                                         
                                                         
                                                            r
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              ∑
                                                                           
                                                                           
                                                                              i
                                                                              ∈
                                                                              I
                                                                              ,
                                                                              i
                                                                              ⩾
                                                                              j
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           Δ
                                                                        
                                                                        
                                                                           
                                                                              
                                                                                 2
                                                                              
                                                                              
                                                                                 i
                                                                                 -
                                                                                 1
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  k
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ⩽
                                                   T
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            j
                                                            =
                                                            0
                                                         
                                                         
                                                            r
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         
                                                            
                                                               2
                                                            
                                                            
                                                               j
                                                               -
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ⩽
                                                   4
                                                   T
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   +
                                                   4
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            j
                                                            =
                                                            0
                                                         
                                                         
                                                            r
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         Δ
                                                      
                                                      
                                                         
                                                            
                                                               2
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   =
                                                   4
                                                   L
                                                   .
                                                   
                                                   □
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

The worst case behavior for this algorithm can be observed in Fig. 5. The optimal solution is to build the upper path which gives an objective value of
                           
                              
                                 2
                                 ·
                                 
                                    
                                       2
                                    
                                    
                                       r
                                    
                                 
                                 +
                                 k
                                 
                                    
                                       
                                          
                                             
                                                2
                                             
                                             
                                                r
                                                -
                                                1
                                             
                                          
                                          +
                                          
                                             
                                                2
                                             
                                             
                                                r
                                                -
                                                2
                                             
                                          
                                          +
                                          ⋯
                                          +
                                          
                                             
                                                2
                                             
                                             
                                                1
                                             
                                          
                                          +
                                          
                                             
                                                2
                                             
                                             
                                                0
                                             
                                          
                                       
                                    
                                 
                                 =
                                 (
                                 k
                                 +
                                 2
                                 )
                                 
                                    
                                       2
                                    
                                    
                                       r
                                    
                                 
                                 -
                                 k
                                 .
                              
                           
                        But Algorithm 2 builds the other paths from top to bottom and this yields
                           
                              
                                 
                                    
                                       2
                                    
                                    
                                       r
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          r
                                          +
                                          1
                                       
                                    
                                 
                                 (
                                 ik
                                 +
                                 1
                                 )
                                 (
                                 
                                    
                                       2
                                    
                                    
                                       r
                                       -
                                       i
                                       +
                                       1
                                    
                                 
                                 -
                                 1
                                 )
                                 =
                                 (
                                 4
                                 k
                                 +
                                 3
                                 )
                                 
                                    
                                       2
                                    
                                    
                                       r
                                    
                                 
                                 -
                                 k
                                 
                                    
                                       (
                                       r
                                       +
                                       2
                                       )
                                       (
                                       r
                                       +
                                       3
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 -
                                 k
                                 -
                                 r
                                 -
                                 2
                                 .
                              
                           
                        Now the claim follows since for sufficiently large 
                           
                              k
                              =
                              r
                           
                        ,
                           
                              
                                 (
                                 4
                                 k
                                 +
                                 3
                                 )
                                 
                                    
                                       2
                                    
                                    
                                       r
                                    
                                 
                                 -
                                 k
                                 
                                    
                                       (
                                       r
                                       +
                                       2
                                       )
                                       (
                                       r
                                       +
                                       3
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 -
                                 k
                                 -
                                 r
                                 -
                                 2
                                 >
                                 (
                                 4
                                 -
                                 ε
                                 )
                                 
                                    
                                       
                                          (
                                          k
                                          +
                                          2
                                          )
                                          
                                             
                                                2
                                             
                                             
                                                r
                                             
                                          
                                          -
                                          k
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Even though the primary focus of our research has been establishing the complexity and approximability of INDP-SP, we are also interested in determining how well instances of INDP-SP can be solved using an off-the-shelf integer programming solver and to identify features that make instances difficult to solve in practice. Therefore, in this section, we present an integer programming formulation for INDP-SP and present the results of a computation study.

Let 
                        
                           
                              
                                 x
                              
                              
                                 a
                              
                              
                                 t
                              
                           
                           ∈
                           {
                           0
                           ,
                           1
                           }
                        
                      be the flow on arc 
                        
                           a
                           ∈
                           A
                        
                      in time period t and let 
                        
                           
                              
                                 y
                              
                              
                                 a
                              
                              
                                 t
                              
                           
                           ∈
                           {
                           0
                           ,
                           1
                           }
                        
                      indicate whether potential arc 
                        
                           a
                           ∈
                           
                              
                                 A
                              
                              
                                 p
                              
                           
                        
                      has been built at or before time period t. INDP-SP can be formulated as an integer program as follows:
                        
                           (8.1)
                           
                              
                                 min
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       t
                                       =
                                       1
                                    
                                    
                                       T
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    c
                                 
                                 
                                    a
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                           
                        
                     
                     
                        
                           (8.2)
                           
                              s
                              .
                              t
                              .
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       =
                                       (
                                       
                                          
                                             s
                                          
                                          
                                             ¯
                                          
                                       
                                       ,
                                       v
                                       )
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              -
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       =
                                       (
                                       v
                                       ,
                                       
                                          
                                             s
                                          
                                          
                                             ¯
                                          
                                       
                                       )
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              =
                              1
                              
                              t
                              =
                              1
                              ,
                              …
                              ,
                              T
                           
                        
                     
                     
                        
                           (8.3)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       =
                                       (
                                       u
                                       ,
                                       v
                                       )
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              -
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       =
                                       (
                                       v
                                       ,
                                       u
                                       )
                                       ∈
                                       A
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              =
                              0
                              
                              for all
                              
                              u
                              ∈
                              N
                              ⧹
                              {
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    ¯
                                 
                              
                              }
                              ,
                              
                              t
                              =
                              1
                              ,
                              …
                              ,
                              T
                           
                        
                     
                     
                        
                           (8.4)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             p
                                          
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                    -
                                    1
                                 
                              
                              )
                              ⩽
                              1
                              
                              t
                              =
                              1
                              ,
                              …
                              ,
                              T
                           
                        
                     
                     
                        
                           (8.5)
                           
                              
                                 
                                    x
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              ⩽
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    t
                                 
                              
                              
                              for all
                              
                              a
                              ∈
                              
                                 
                                    A
                                 
                                 
                                    p
                                 
                              
                              ,
                              
                              t
                              =
                              1
                              ,
                              …
                              ,
                              T
                           
                        
                     
                     
                        
                           (8.6)
                           
                              
                                 
                                    y
                                 
                                 
                                    a
                                 
                                 
                                    0
                                 
                              
                              =
                              0
                              
                              for all
                              
                              a
                              ∈
                              
                                 
                                    A
                                 
                                 
                                    p
                                 
                              
                           
                        
                     Constraints (8.2) enforce that exactly one unit of flow leaves the source in each period. Constraints (8.3) enforce flow balance at all nodes except the source and the sink in each period. Constraints (8.4) enforce that at most one potential arc is built in each period. Constraints (8.5) enforce that there can only be flow on a potential arc when it has been built. Constraints (8.6) set initial conditions. The objective (8.1) seeks to minimize to total cost over the planning horizon.

Initial computational experiments revealed that 
                        
                           
                              
                                 T
                              
                              
                                 ‾
                              
                           
                        
                     , i.e., the number of time periods required to complete the construction of the ultimate shortest path in an optimal solution, tends to be small compared to the planning horizon T. As the size of the above integer program, and thus its solution time, strongly depends on the planning horizon T, we opted to use Algorithm 3, which assumes a much shorter planning horizon and increases that planning horizon only when needed.
                        Algorithm 3
                        Algorithm to solve INDP-SP using integer programming 
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                
                                                   v
                                                   (
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                   ←
                                                   cost of a shortest
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   –
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   
                                                   path in
                                                   
                                                   D
                                                   =
                                                   (
                                                   N
                                                   ,
                                                   A
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   T
                                                   ←
                                                   20
                                                
                                              {Set the initial planning horizon}
                                       
                                       
                                          
                                             
                                                
                                                   Done
                                                   ←
                                                   False
                                                
                                             
                                          
                                       
                                       
                                          
                                             while 
                                             
                                                
                                                   
                                                   ¬
                                                   
                                                   Done
                                                
                                              
                                             do
                                          
                                       
                                       
                                          
                                             
                                             Solve integer program with planning horizon T
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                   ←
                                                   cost of
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   –
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   
                                                   path in period
                                                   
                                                   T
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             if 
                                             
                                                
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                   =
                                                   v
                                                   (
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                   )
                                                
                                              
                                             then
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   Done
                                                   ←
                                                   True
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             else
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   T
                                                   ←
                                                   2
                                                   ×
                                                   T
                                                
                                              {Double the current planning horizon}
                                       
                                    
                                 
                              
                           
                        

For our computational study, we generated random data sets and focused on the following characteristics of instances:
                        
                           
                              Instance Size: We measure the size of an instance in terms of the number of potential arcs. We look at instances with under just 100 potential arcs through to just under 1000 potential arcs.


                              Arc Cost Range: The range of arc costs has an impact on the effort required to solve an instance. For example, when all arcs have the same cost, we just have to construct the shortest path with the fewest number of potential arcs. We consider integer arc costs generated uniformly in the range 
                                 
                                    [
                                    1
                                    ,
                                    C
                                    ]
                                 
                               for 
                                 
                                    C
                                    =
                                    10
                                    ,
                                    
                                    
                                       
                                          10
                                       
                                       
                                          3
                                       
                                    
                                 
                              , and 
                                 
                                    
                                       
                                          10
                                       
                                       
                                          5
                                       
                                    
                                 
                              .


                              Network Topology: The topology of the network has an impact on the effort required to solve an instance. For example, disjoint path instances can be solved in polynomial time. We consider the following types of network topologies:
                                 
                                    
                                       Unstructured: In these instances, arcs are selected randomly from a complete graph. Instances are created with 10%, 30%, 50%, 70% and 90% of all possible arcs included, and 10%, 30%, 50%, 70% or 90% of the arcs marked as potential arcs. A total of 375 instances are generated using an underlying graph with 120 nodes; 5 instances for each possible combination of control parameters. To ensure feasibility a single existing arc with cost 
                                          
                                             
                                                
                                                   10
                                                
                                                
                                                   6
                                                
                                             
                                          
                                        is added from source to sink in each instance.


                                       Layered: The network topology of the layered instances is illustrated in Fig. 6
                                       . Here nodes, other than the source and the sink, are arranged in 10 layers of 10 nodes each. Of the 100 potential arcs from each layer to the next 25 were selected randomly. Arcs from the source to each node in the first layer and arcs from each node in the last layer to the sink are added as well. All arcs are potential arcs with the exception of a single arc from the source to the sink with cost 
                                          
                                             
                                                
                                                   10
                                                
                                                
                                                   6
                                                
                                             
                                          
                                       . This structure ensures that every 
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             –
                                             
                                                
                                                   t
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                        path consists of exactly 11 arcs. The optimal solution simply constructs the shortest 
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             –
                                             
                                                
                                                   t
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                        path. We generated 150 instances of this type; 50 for each arc cost range.


                                       Layered with Existing Arcs: To make the layered instances more difficult, we modified each instance by adding existing arcs. For each instance 50 existing arcs were added by selecting 5 nodes randomly from each layer and then connecting these nodes to a node from a later layer selected at random. The costs for the existing arcs are chosen so as to ensure that these arcs are not part of the ultimate shortest 
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   ¯
                                                
                                             
                                             –
                                             
                                                
                                                   t
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                        path.

For each instance, results are obtained using CPLEX 12.1.1 on a 64-bit Intel Xeon CPU with 2 processors of 8 cores (2.27gigahertz) each with 48gigabytes of RAM. The results of our experiments are found in Table 1
                     . Each row provides the average results over all instances of a particular class. Instances are grouped by topology and range of arc costs. We report the following statistics:
                        
                           # Nodes:
                           The average number of nodes in the branch and bound tree. A value of zero indicates that all instances were solved at the root node.

The runtime in seconds as reported by CPLEX. Note that this is elapsed time not CPU time, which may be significantly higher if there are a large number of branch and bound nodes that were searched in parallel.

The LP gap is calculated as 
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                IP
                                             
                                          
                                          -
                                          
                                             
                                                v
                                             
                                             
                                                LP
                                             
                                          
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                IP
                                             
                                          
                                       
                                    
                                 
                              , where 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          IP
                                       
                                    
                                 
                               is the value of an optimal IP solution and 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          LP
                                       
                                    
                                 
                               is the value of an optimal LP solution.

The root node gap is calculated as 
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                IP
                                             
                                          
                                          -
                                          
                                             
                                                v
                                             
                                             
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                IP
                                             
                                          
                                       
                                    
                                 
                              , where 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          IP
                                       
                                    
                                 
                               is the value of an optimal IP solution and 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          0
                                       
                                    
                                 
                               is the value of relaxation at the end of root node processing. The root node gap may be smaller than the LP Gap due to CPLEX preprocessing and cut generation.

Below we will discuss these results in more detail, including the question of what they tell us about the difficulty of solving instances of INDP-SP using integer programming. For now the only thing to comment on is that we have arbitrarily chosen to solve each instance with a planning horizon of 20 periods. This was sufficient to find an optimal solution in each case, i.e., the ultimate shortest path is constructed within 20 periods. In some cases, a shorter planning horizon would have been sufficient, particularly for the basic layered instances (since we know in advance that 
                        
                           
                              
                                 T
                              
                              
                                 ‾
                              
                           
                           =
                           11
                        
                     ), and this would reduce the run time slightly and also change the objective value and hence the gaps. Hence what is important here is not so much the absolute size of the gaps but the relative size for the different types of instances.

Below we discuss the impact of instance size, network topology, and range of arcs costs in more detail.

The averaged results in Table 1 make it difficult to see the effect of instance size on runtime. Analyzing the instances independently shows that the runtime is indeed correlated to the proportion of potential arcs in the network. Every single instance requiring over 100seconds of runtime had over 80% of its arcs being potential arcs. A smaller ratio of potential to existing arcs reduced the expected value of 
                           
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                           
                        , and allowed the CPLEX presolver to make significant reductions in the problem size, which decreased solver runtime.

However as Figs. 7 and 8
                        
                         show, the relationship between runtime as a measure of difficulty of solving an instance, and instance size, in terms of either 
                           
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                           
                         or the percentage of potential arcs, is not that simple.

For the unstructured instances, the number of arcs in an ultimate shortest path is much less than the number of arcs in the network. On average there were 913 arcs in the network, but only 3.75 arcs in a shortest path.

In order to focus on instances with a relatively large value of 
                           
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                           
                        , we consider the layered instances. In the layered instances, every path (other than the initial expensive direct arc between s and t) consists of exactly 11 potential arcs. Hence, the optimal solution is to build a shortest 
                           
                              
                                 
                                    s
                                 
                                 
                                    ¯
                                 
                              
                              –
                              
                                 
                                    t
                                 
                                 
                                    ¯
                                 
                              
                           
                         path. Thus, 
                           
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                              =
                              11
                           
                         and a cost of 
                           
                              
                                 
                                    10
                                 
                                 
                                    6
                                 
                              
                           
                         is incurred 10 times before the construction of the shortest path is completed. By adding existing arcs, the layered instances can be made more challenging as shown in the last row of Table 1, which shows significantly higher runtimes. Due to the presence of existing arcs, it becomes possible to avoid the cost of 
                           
                              
                                 
                                    10
                                 
                                 
                                    6
                                 
                              
                           
                         in early periods by constructing intermediate paths with fewer potential arcs. This results in larger values of 
                           
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                           
                         and additional decisions, in terms of the number and choice of intermediate shortest paths.

Symmetry also plays a role in the difficulty that integer programming solvers have with layered instances. Symmetry arises because the order in which potential arcs are constructed on a path is immaterial. To illustrate the impact of symmetry consider instances of the form depicted in Fig. 9
                        , where all potential arcs have cost 0 and are on the ultimate shortest path, and all existing arcs have cost 100 and “shortcut” each pair of consecutive potential arcs. In Table 2
                        , we provide results for such instances with different numbers of potential arcs. CPLEX’s cut generation is switched off to more clearly illustrate the effect of symmetry.

Even though the LP gap steadily decreases as the problem size grows, the number of nodes in the search tree and the runtime grows rapidly. In an LP solution, two potential arcs are build fractionally to replace an existing arc, with 50% of each arc being built in one time period and 50% in the following time period, while in an optimal IP solution the two potential arcs are build in consecutive time periods. To eliminate fractional LP solutions, the integer programming solver branches. Unfortunately, when a variable representing the building of a potential arc is set to 0, the linear programming solver simply finds another way of obtaining a solution with the same cost, by fractionally constructing arcs that bypass a different existing arc. It is this effect that is likely the biggest contributor to the increase in number of nodes and runtime when existing arcs are added to the layered instances.

The negative impact of symmetry in integer programs is well-known and better handling symmetry is an area of active research (see for example Margot, 2009; Ostrowski, Linderoth, Rossi, & Smriglio, 2011).

As we have seen, having a smaller range of arc costs is likely to increase the amount of symmetry and hence the size of the branch and bound tree. This effect can be clearly seen for the instances with costs in the range 
                           
                              1
                              –
                              10
                           
                         for layered instances with existing arcs in Table 1. However there are also other effects of arc costs at work in the layered instances.

Note that in Table 1, CPLEX ability to reduce the gap at the root node is far less when the arc costs have a larger range. We conjecture that this is due to the large cost coefficients making the integer rounding in Gomory cuts less effective. We observed that on average CPLEX added 20.8 and 21.3 Gomory fractional cuts for the instances with a maximum arc cost of 10 and 
                           
                              
                                 
                                    10
                                 
                                 
                                    3
                                 
                              
                           
                        , respectively, while only adding an average of 12.6 cuts for the instances with maximum cost 
                           
                              
                                 
                                    10
                                 
                                 
                                    5
                                 
                              
                           
                        .

In this paper, we have introduced a class of incremental network design problems and studied one member of the class, INDP-SP, in more detail. We have established that the problem is NP-hard, but have also identified a polynomially solvable special case. We have analyzed natural greedy heuristics and developed a 4-approximation algorithm. Finally, we conducted a small computational experiment to assess how well instances of INDP-SP can be solved using integer programming solvers. The computational study revealed that “random” or unstructured instances are generally easy to solve. However, when the network topology or the costs are structured in particular ways, even relatively small instances can be very hard to solve, particularly when symmetry is present.

Rather than considering network expansion, we can consider network maintenance. A class of multi-period network maintenance problems can be defined in a similar way to the class of incremental network design problems. In this setting, arcs are required to undergo maintenance, either once or with a certain frequency, and when an arc undergoes maintenance it is unavailable and cannot be used in the network optimization problem that has to be solved each period. This class of multi-period network maintenance problems also offers a rich environment for further research.

@&#ACKNOWLEDGMENT@&#

We thank the anonymous referees for their constructive feedback and helpful suggestions.

@&#REFERENCES@&#

