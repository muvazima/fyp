@&#MAIN-TITLE@&#A fast algebraic non-penetration filter for continuous collision detection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present a low-cost filtering algorithm using algebraic analysis techniques.


                        
                        
                           
                           Our algorithm can significantly reduce the number of elementary collision tests that occur in the narrow stage of continuous collision detection.


                        
                        
                           
                           We demonstrated that cubic-solvers augmented by our filtering algorithm are able to achieve up to 99.


                        
                        
                           
                           We observed more than ten times performance improvement against the standard cubic-solver without any filters.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Continuous collision detection

Non-penetration filter

Cubic equation

Deformable objects

@&#ABSTRACT@&#


               
               
                  Continuous collision detection is a key technique to meet non-penetration requirements in many applications. Even though it is possible to perform efficient culling operations in the broad stage of a continuous collision detection algorithm, such as bounding volume hierarchies, a huge number of potentially colliding triangles still survive and go to the succeeding narrow stage. This heavily burdens the elementary collision tests in a collision detection algorithm and affects the performance of the entire pipeline, especially for fast moving or deforming objects. This paper presents a low-cost filtering algorithm using algebraic analysis techniques. It can significantly reduce the number of elementary collision tests that occur in the narrow stage. We analyze the root existence during the time interval [0, 1] for a standard cubic equation defining an elementary collision test. We demonstrate the efficiency of the algebraic filter in our experiments. Cubic-solvers augmented by our filtering algorithm are able to achieve up to 99% filtering ratios and more than 10 ×  performance improvement against the standard cubic-solver without any filters.
               
            

@&#INTRODUCTION@&#

Enforcing non-penetration constraints between movable/deformable objects has been widely used in collision responses in physically-based simulation [1,2], motion planning in robotics [3], god-object computation in haptic rendering [4], tolerance verification in virtual prototyping [5], etc. Continuous collision detection (CCD) is one of the major techniques to maintain non-penetration constraints and to robustly handle collision responses. For movable/deformable objects, two filtering techniques have been used to accelerate the queries of continuous collision detection: dynamic bounding volume hierarchies (BVHs) in broad stage [6] and non-penetration filters [7] in narrow stage. More specifically, in broad stage, dynamic BVHs is used to efficiently localize the potentially colliding regions by traversing precomputed BVHs. In narrow stage, non-penetration filters can be used to reduce the false positives of elementary collision tests for those potentially colliding triangles. Here, false positive means that a collision test is performed, but no collision is found.

For fast moving objects and severely deformable objects, the filtering efficiency of dynamic BVHs may significantly degrade due to over-conservativeness of bounding volumes, so that a large number of potentially colliding triangles survive from the broad stage and go to the narrow stage. In the narrow stage, continuous collision detection is performed for a huge number of moving/deforming triangles, which eventually boils down to performing hundreds of thousands or even tens of millions elementary collision tests between triangle primitive features. For example, in our cloth dynamics benchmark (see Fig. 5), the elementary collision tests vary from 13 thousands to 52 millions for each frame through the entire simulation. Given the high number of potentially colliding triangles survived from the broad stage, the use of continuous collision detection can be limited by its higher computational costs than discrete collision detection. We restrict our attention to reducing elementary collision tests in the narrow stage.

There are two types of elementary collision tests between two moving/deforming triangles: a vertex against a triangular face (face-vertex test) and an edge against another edge (edge-edge test) [8]. Continuous collision detection for a pair of deforming triangles includes 15 elementary collision tests, including six face-vertex tests and nine edge-edge tests. If none of these 15 elementary tests reports collision, the two triangles do not collide. Otherwise, the earliest time instance among these 15 tests is obtained as the time of contact of the two triangles. Given the high number of elementary collision tests, however, its false positive ratios are typically very high [7]. It reports to be as high as, or often even higher than 95%
                        1
                     
                     
                        1
                        Among 100 elementary tests, there are merely less than five real collisions.
                     . For elementary collision tests, false positives refer to the case where face-vertex or edge-edge pairs are tested, but do not actually intersect. In this paper, we derive a fast and low cost algebraic filter that can significantly reduce the false positives and eventually reduce the number of elementary collision tests in the narrow stage.

We organize the rest of this paper as follows. The related work is given in Section 2. The filtering problem, its formulation and the main ideas of our algebraic filtering algorithm are described in Section 3. Our filtering algorithm is given in Section 4, which is based on Vincent’s theorem. The implementation details, experimental results and comparisons are given in Section 5. The paper is concluded in Section 6.

@&#RELATED WORK@&#

There are two main approaches of performing elementary CCD tests for moving objects: algebraic equation solvers [2,8,9] and local conservative advancement [10,11]. As for the former, Moore and Wilhelms [9] first presented a solution using fifth order algebraic equations and later Provot [8] reduced them to cubic equations. The elementary CCD test for moving triangles reduces to perform face-vertex tests (a vertex against a triangular face) and edge-edge tests (an edge against another edge). In Provot’s formulation, each of them corresponds to a cubic algebraic equation (refer to Section 3). This approach has been used as a standard method in many applications such as games, virtual environment, and interactive computer graphics. As for the latter, given a closest distance between two triangle features, local conservative advancement states that the two features must travel at least this distance in order to come into contact; otherwise, the two features can move without worrying about collision. Repetitively applying conservative advancement to the two triangle features can be used for obtaining the lower bound of the time of contact between these two features. The conservative advancement technique has been used for rigid [12], articulated [6] and deformable objects [10,11].

To reduce redundant elementary collision tests, connectivity (i.e. adjacency), geometric constraints and dimension reduction have been used in [7,13–18]. More specifically, Crutis et al. [13] presented representative-triangles (R-Triangle) to eliminate duplicate elementary tests. Tang et al. [7] derived a non-penetration filter using coplanarity and convex hull properties. Tang et al. [18] reduced redundant elementary tests in 1D and 2D subspace. Continuous normal cones [15] can be used to remove false positives for regions with relatively low curvatures. An exact algorithm was presented in [19] to eliminates 99% elementary tests, but its computational cost is very high. Two recent work [20,21] handled exact CCD problem using error analysis and Bernstein sign classification. In [11], a sequence of simple feature-level filtering tests based on local conservative advancement are used to accelerate continuous collision detection for deforming triangles.

For a pair of moving/deforming triangles, we assume that their vertices move with constant velocity during the time step t ∈ [0, 1] and that the triangles are linearly interpolated between their vertices at intermediate times. Continuous collision detection between two moving/deforming triangles includes a set of face-vertex tests or edge-edge tests. Given four points 
                           
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              
                                 (
                                 t
                                 )
                              
                              
                                 (
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                                 ,
                                 4
                                 )
                              
                           
                         and their constant velocities 
                           
                              
                                 
                                    v
                                    →
                                 
                                 i
                              
                              
                                 (
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                                 ,
                                 4
                                 )
                              
                              ,
                           
                         a distance function d(t) between a vertex 
                           
                              
                                 x
                                 →
                              
                              4
                           
                         and a triangle 
                           
                              
                                 
                                    x
                                    →
                                 
                                 1
                              
                              
                                 
                                    x
                                    →
                                 
                                 2
                              
                              
                                 
                                    x
                                    →
                                 
                                 3
                              
                           
                         or between an edge 
                           
                              
                                 
                                    x
                                    →
                                 
                                 1
                              
                              
                                 
                                    x
                                    →
                                 
                                 2
                              
                           
                         and another edge 
                           
                              
                                 
                                    x
                                    →
                                 
                                 3
                              
                              
                                 
                                    x
                                    →
                                 
                                 4
                              
                              ,
                           
                         can be defined in a unified form as follows:

                           
                              
                                 
                                    
                                       
                                          
                                             d
                                             
                                                (
                                                t
                                                )
                                             
                                             =
                                             
                                                [
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   2
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                −
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   1
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                ]
                                             
                                             ×
                                             
                                                [
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   3
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                −
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   1
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                ]
                                             
                                             ·
                                             
                                                [
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   4
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                −
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   1
                                                
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                ]
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where t ∈ [0, 1], 
                           
                              
                                 
                                    v
                                    →
                                 
                                 i
                              
                              =
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              
                                 (
                                 1
                                 )
                              
                              −
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              
                                 (
                                 0
                                 )
                              
                              ,
                           
                        
                        
                           
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              
                                 (
                                 t
                                 )
                              
                              =
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              
                                 (
                                 0
                                 )
                              
                              +
                              t
                              
                                 
                                    v
                                    →
                                 
                                 i
                              
                           
                        . For the sake of simplicity, we let 
                           
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              =
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              
                                 (
                                 0
                                 )
                              
                           
                        . Then the above formulation can be represented as

                           
                              
                                 
                                    
                                       
                                          
                                             d
                                             
                                                (
                                                t
                                                )
                                             
                                             =
                                             
                                                [
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   21
                                                
                                                +
                                                t
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   21
                                                
                                                ]
                                             
                                             ×
                                             
                                                [
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   31
                                                
                                                +
                                                t
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   31
                                                
                                                ]
                                             
                                             ·
                                             
                                                [
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   41
                                                
                                                +
                                                t
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   41
                                                
                                                ]
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where we use the shorthands 
                           
                              
                                 x
                                 →
                              
                              
                                 i
                                 j
                              
                           
                         and 
                           
                              
                                 v
                                 →
                              
                              
                                 i
                                 j
                              
                           
                         to denote 
                           
                              
                                 
                                    x
                                    →
                                 
                                 i
                              
                              −
                              
                                 
                                    x
                                    →
                                 
                                 j
                              
                           
                         and 
                           
                              
                                 
                                    v
                                    →
                                 
                                 i
                              
                              −
                              
                                 
                                    v
                                    →
                                 
                                 j
                              
                              ,
                           
                         respectively. Rearranging d(t) yields to the standard form of a cubic polynomial as follows:

                           
                              
                                 
                                    d
                                    
                                       (
                                       t
                                       )
                                    
                                    =
                                    
                                       a
                                       3
                                    
                                    
                                       t
                                       3
                                    
                                    +
                                    
                                       a
                                       2
                                    
                                    
                                       t
                                       2
                                    
                                    +
                                    
                                       a
                                       1
                                    
                                    t
                                    +
                                    
                                       a
                                       0
                                    
                                 
                              
                           
                        where

                           
                              
                                 
                                    
                                       
                                          
                                             a
                                             3
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   v
                                                   →
                                                
                                                21
                                             
                                             ×
                                             
                                                
                                                   v
                                                   →
                                                
                                                31
                                             
                                             ·
                                             
                                                
                                                   v
                                                   →
                                                
                                                41
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             a
                                             2
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   v
                                                   →
                                                
                                                21
                                             
                                             ×
                                             
                                                
                                                   v
                                                   →
                                                
                                                31
                                             
                                             ·
                                             
                                                
                                                   x
                                                   →
                                                
                                                41
                                             
                                             +
                                             
                                                (
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   21
                                                
                                                ×
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   31
                                                
                                                +
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   21
                                                
                                                ×
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   31
                                                
                                                )
                                             
                                             ·
                                             
                                                
                                                   v
                                                   →
                                                
                                                41
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             a
                                             1
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   21
                                                
                                                ×
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   31
                                                
                                                +
                                                
                                                   
                                                      x
                                                      →
                                                   
                                                   21
                                                
                                                ×
                                                
                                                   
                                                      v
                                                      →
                                                   
                                                   31
                                                
                                                )
                                             
                                             ·
                                             
                                                
                                                   x
                                                   →
                                                
                                                41
                                             
                                             +
                                             
                                                
                                                   x
                                                   →
                                                
                                                21
                                             
                                             ×
                                             
                                                
                                                   x
                                                   →
                                                
                                                31
                                             
                                             ·
                                             
                                                
                                                   v
                                                   →
                                                
                                                41
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             a
                                             0
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                   →
                                                
                                                21
                                             
                                             ×
                                             
                                                
                                                   x
                                                   →
                                                
                                                31
                                             
                                             ·
                                             
                                                
                                                   x
                                                   →
                                                
                                                41
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              d
                              (
                              t
                              )
                              =
                              0
                           
                         (i.e., coplanarity of the four points) is a necessary condition for collision between two triangle features (face-vertex or edge-edge), as shown in Fig. 1
                        . A cubic equation can therefore be derived. The smallest root t ∈ [0, 1] of the cubic 
                           
                              d
                              (
                              t
                              )
                              
                              =
                              
                              0
                           
                         will be the time of contact for two triangle features. In practice, a collision can be reported when a time interval is smaller than a threshold during root finding. In some other algorithms, a collision occurs when the distance between the feature pairs is smaller than a threshold. Any t ∉ [0, 1] can be discarded. Non-existence of t ∈ [0, 1] indicates the absence of collision between two triangle features during the time interval [0, 1].

We derive a low cost filtering algorithm to reduce the number of elementary collision tests (each corresponds to solving a cubic equation) happening in the narrow stage. The main idea is to determine if there exists any root during the time interval [0, 1] in simple and low cost ways. If the absence of roots during the time interval t ∈ [0, 1] can be more quickly determined, the process of solving redundant and expensive cubic equations can be avoided. Specifically, we provide the following algorithm for quickly filtering cubic equations (see Section 4). We use Descartes’ sign rules and Vincent theorem to isolate roots for any intervals. Both theorems utilize coefficients’ sign variations to determine if there is the absence of roots or not. If there exists any root over the interval, there must be coefficients’ sign variations for some derived cubic polynomials.

We first introduce the fundamental definitions and lemmas, including sign variation, Descartes’ rule of signs and Vincent theorem.


                     Sign variation: Let f(t) be a polynomial in descending powers of t. A sign variation occurs whenever adjacent nonzero coefficients are opposite in sign. The number of sign variations, denoted as 
                        
                           VAR
                           
                              (
                              
                                 f
                                 (
                                 t
                                 )
                              
                              )
                           
                           ,
                        
                      is the number of adjacent nonzero coefficient pair whose signs are opposite.

Consider the cubic polynomial in Example 4.1, there are two sign variations (0.4388, 
                        −
                     0.4446) and (
                        −
                     0.4446, +0.2215), so the number of sign variations, 
                        
                           VAR
                           
                              (
                              
                                 d
                                 (
                                 t
                                 )
                              
                              )
                           
                           ,
                        
                      is 2.

                        Theorem 4.1
                        
                           (Descartes’ rule of signs) the number of positive roots of the polynomial is either equal to the number of sign variations or less than it by a multiple of 2. 
                           
                              [22]
                           
                        

Use Descartes’ rule of signs to get the number of roots

                              
                                 
                                    
                                       
                                          
                                             
                                                d
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                =
                                                0.2566
                                                
                                                   t
                                                   3
                                                
                                                +
                                                0.4388
                                                
                                                   t
                                                   2
                                                
                                                −
                                                0.4446
                                                t
                                                +
                                                0.2215
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In Example 4.1, as there are two sign variations, the number of roots could be either 2 or 0. From Descartes’ rule of signs, we see that, if there are no sign variations (i.e. 
                        
                           VAR
                           
                              (
                              
                                 d
                                 (
                                 t
                                 )
                              
                              )
                           
                           =
                           0
                        
                     ), there does not exist any positive root.

However, we are aware that this filtering rule is very conservative as it considers the interval [0, ∞). In fact, we are only interested in the interval [0, 1].

Vincent’s Theorem results from Descartes’ Rule of signs when mapping t from (0, ∞) to (0, 1) with the map 
                        
                           t
                           →
                           
                              1
                              
                                 1
                                 +
                                 t
                              
                           
                        
                     . Vincent’s Theorem is given as follows.

                        Theorem 4.2
                        
                           (Vincent’s theorem) consider the function
                           
                              
                                 g
                                 =
                                 
                                    
                                       (
                                       t
                                       +
                                       1
                                       )
                                    
                                    n
                                 
                                 f
                                 
                                    (
                                    
                                       1
                                       
                                          t
                                          +
                                          1
                                       
                                    
                                    )
                                 
                                 ,
                              
                            
                           if
                           
                              
                                 VAR
                                 (
                                 g
                                 )
                                 =
                                 0
                                 ,
                              
                            
                           where n is the degree of f(t) then f(t) has no roots over the interval (0, 1) . 
                           
                              [22,23]
                           
                        

The number of positive real roots of g is equal to the number of real roots of f over the interval (0, 1). If we apply Descartes’ rule of signs for the polynomial g, we have the following conclusion:

                        
                           •
                           if 
                                 
                                    VAR
                                    (
                                    g
                                    )
                                    =
                                    0
                                    ,
                                 
                               
                              f(t) has no root over the interval (0, 1);

if 
                                 
                                    VAR
                                    (
                                    g
                                    )
                                    =
                                    1
                                    ,
                                 
                               
                              f(t) has exactly one root over the interval (0, 1);

if 
                                 
                                    VAR
                                    (
                                    g
                                    )
                                    =
                                    2
                                    ,
                                 
                               
                              f(t) has two roots or no root over the interval (0, 1);

if 
                                 
                                    VAR
                                    (
                                    g
                                    )
                                    =
                                    3
                                    ,
                                 
                               
                              f(t) has three roots or one root over the interval (0, 1).

In the case of cubic polynomials, we may notice that the number of roots is uncertain if 
                        
                           VAR
                           (
                           g
                           )
                           =
                           2
                           ,
                        
                      which is either two or zero. We may recursively apply Vincent’s algorithm by substitute 
                        
                           
                              h
                              1
                           
                           =
                           g
                           
                              (
                              t
                              +
                              1
                              )
                           
                        
                      and 
                        
                           
                              h
                              2
                           
                           =
                           
                              
                                 (
                                 t
                                 +
                                 1
                                 )
                              
                              3
                           
                           g
                           
                              (
                              
                                 1
                                 
                                    t
                                    +
                                    1
                                 
                              
                              )
                           
                        
                     . We observe that the number of positive real roots of h
                     1 corresponds to the number of real roots of f over the interval 
                        
                           (
                           0
                           ,
                           
                              1
                              2
                           
                           )
                        
                      and the number of positive real roots of h
                     2 corresponds to the number of real roots of f over the interval 
                        
                           (
                           
                              1
                              2
                           
                           ,
                           1
                           )
                        
                     . Then h
                     1 and h
                     2 are subjected to the same substitution and the algorithm eventually terminates whenever there exists zero or one root for every interval. The algorithm, in principle, always terminates with finite recursions [23]. However, in the case of cubic equations, if the number of recursions is high, its computational cost can be rather high in comparison with directly solving the equation. Therefore we suggest using a fixed number of recursions, for example two recursions in the case of cubic equations. It is still conservative, but preserves the correctness.

We now deduce the explicit formulas for filtering cubic equations with Vincent’s theorem. Instead of applying the complete Vincent’s algorithm to isolate all the roots of a cubic equation, we merely use two recursions to conservatively report whether f has any root over the interval [0, 1] (in the first recursion) and over the interval 
                        
                           (
                           0
                           ,
                           
                              1
                              2
                           
                           )
                        
                      and 
                        
                           (
                           
                              1
                              2
                           
                           ,
                           1
                           )
                        
                      (in the second recursion if necessary). Based on Vincent’s theorem, we know that f(t) has no roots in the interval (0, 1) if 
                        
                           VAR
                           
                              (
                              g
                              )
                           
                           =
                           0
                        
                     . Here g can be formulated as follows:

                        
                           (1)
                           
                              
                                 
                                    
                                       g
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             
                                                (
                                                t
                                                +
                                                1
                                                )
                                             
                                             3
                                          
                                          f
                                          
                                             (
                                             
                                                1
                                                
                                                   t
                                                   +
                                                   1
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             b
                                             3
                                          
                                          
                                             t
                                             3
                                          
                                          +
                                          
                                             b
                                             2
                                          
                                          
                                             t
                                             2
                                          
                                          +
                                          
                                             b
                                             1
                                          
                                          t
                                          +
                                          
                                             b
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                     where
                     
                     
                        
                           
                              
                                 
                                    
                                       
                                          b
                                          3
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          a
                                          0
                                       
                                    
                                 
                                 
                                    
                                       
                                          b
                                          2
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             a
                                             1
                                          
                                          +
                                          3
                                          
                                             a
                                             0
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          b
                                          1
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             a
                                             2
                                          
                                          +
                                          2
                                          
                                             a
                                             1
                                          
                                          +
                                          3
                                          
                                             a
                                             0
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          b
                                          0
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             a
                                             3
                                          
                                          +
                                          
                                             a
                                             2
                                          
                                          +
                                          
                                             a
                                             1
                                          
                                          +
                                          
                                             a
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

However, if 
                        
                           VAR
                           
                              (
                              g
                              )
                           
                           =
                           2
                           ,
                        
                      it is uncertain whether the number of roots is two or zero. We then evaluate the following two substitutions:

                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          h
                                          1
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          g
                                          (
                                          t
                                          +
                                          1
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             b
                                             3
                                          
                                          
                                             t
                                             3
                                          
                                          +
                                          
                                             (
                                             
                                                b
                                                2
                                             
                                             +
                                             3
                                             
                                                b
                                                3
                                             
                                             )
                                          
                                          
                                             t
                                             2
                                          
                                          +
                                          
                                             (
                                             
                                                b
                                                1
                                             
                                             +
                                             2
                                             
                                                b
                                                2
                                             
                                             +
                                             3
                                             
                                                b
                                                3
                                             
                                             )
                                          
                                          t
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          
                                          (
                                          
                                             b
                                             0
                                          
                                          +
                                          
                                             b
                                             1
                                          
                                          +
                                          
                                             b
                                             2
                                          
                                          +
                                          
                                             b
                                             3
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                     and

                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          h
                                          2
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             
                                                (
                                                t
                                                +
                                                1
                                                )
                                             
                                             3
                                          
                                          g
                                          
                                             (
                                             
                                                1
                                                
                                                   t
                                                   +
                                                   1
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             b
                                             0
                                          
                                          
                                             t
                                             3
                                          
                                          +
                                          
                                             (
                                             
                                                b
                                                1
                                             
                                             +
                                             3
                                             
                                                b
                                                0
                                             
                                             )
                                          
                                          
                                             t
                                             2
                                          
                                          +
                                          
                                             (
                                             
                                                b
                                                2
                                             
                                             +
                                             2
                                             
                                                b
                                                1
                                             
                                             +
                                             3
                                             
                                                b
                                                0
                                             
                                             )
                                          
                                          t
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          
                                          (
                                          
                                             b
                                             3
                                          
                                          +
                                          
                                             b
                                             2
                                          
                                          +
                                          
                                             b
                                             1
                                          
                                          +
                                          
                                             b
                                             0
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                     Then we examine the number of sign variations 
                        
                           VAR
                           
                              (
                              
                                 h
                                 1
                              
                              )
                           
                        
                      and 
                        
                           VAR
                           
                              (
                              
                                 h
                                 2
                              
                              )
                           
                        
                      with Descartes’ Rule of signs. If 
                        
                           VAR
                           
                              (
                              
                                 h
                                 1
                              
                              )
                           
                           =
                           0
                           ,
                        
                      
                     f has no root over the interval 
                        
                           (
                           0
                           ,
                           
                              1
                              2
                           
                           )
                        
                      and if 
                        
                           VAR
                           
                              (
                              
                                 h
                                 2
                              
                              )
                           
                           =
                           0
                           ,
                        
                      
                     f has no root over the interval 
                        
                           (
                           
                              1
                              2
                           
                           ,
                           1
                           )
                        
                     .


                     Early culling: If 
                        
                           VAR
                           
                              (
                              g
                              )
                           
                           ≠
                           0
                           ,
                        
                      but 
                        
                           VAR
                           
                              (
                              
                                 h
                                 1
                              
                              )
                           
                           =
                           0
                           ,
                        
                      then the positive root must be greater than 
                        
                           1
                           2
                        
                     . In the meanwhile, if the global time of contact which has been realized by other cubic equations is less than 
                        
                           
                              1
                              2
                           
                           ,
                        
                      the final time of contact cannot be implemented by the current cubic equation. Therefore, we can immediately filter this cubic equation no matter whether or not f has any roots over the other interval 
                        
                           (
                           
                              1
                              2
                           
                           ,
                           1
                           )
                        
                     .

                        Example 4.2
                        Use Descartes’ rule of sign and Vincent algorithm to determine whether f(t) has any roots over the interval [0, 1]

                              
                                 
                                    
                                       
                                          
                                             
                                                d
                                                
                                                   (
                                                   t
                                                   )
                                                
                                                =
                                                0.0056
                                                
                                                   t
                                                   3
                                                
                                                +
                                                0.1597
                                                
                                                   t
                                                   2
                                                
                                                −
                                                0.2231
                                                t
                                                +
                                                0.0847
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

We first count the number of sign variations for d(t). There are two sign variations so that the expected number of roots is two or zero. Therefore, with Descartes’ rule of sign, we are not certain how many roots there are exactly (2 or 0?). Descartes’ rule of sign does not helps us to reject the cubic equation 
                        
                           d
                           (
                           t
                           )
                           =
                           0
                           ,
                        
                      though we will see that in fact f(t) has no roots over the interval [0, 1].

Then we use Vincent theorem to find the number of roots over the interval [0, 1]. We first compute the polynomial g using formulation (1) as follows:

                        
                           
                              
                                 
                                    
                                       
                                          g
                                          =
                                          0.0847
                                          
                                             t
                                             3
                                          
                                          +
                                          0.0308
                                          
                                             t
                                             2
                                          
                                          −
                                          0.0326
                                          t
                                          +
                                          0.0269
                                       
                                    
                                 
                              
                           
                        
                     The number of sign variations for g is still two. Therefore, it is still uncertain whether the number of roots of f is two or zero over the interval [0, 1]. Then the cubic polynomial g is subjected to the following two substitutions using Formulas (2) and (3):

                        
                           
                              
                                 
                                    
                                       
                                          
                                             h
                                             1
                                          
                                          =
                                          0.0847
                                          
                                             t
                                             3
                                          
                                          +
                                          0.2848
                                          
                                             t
                                             2
                                          
                                          +
                                          0.2831
                                          t
                                          +
                                          0.1098
                                       
                                    
                                 
                              
                           
                        
                     and

                        
                           
                              
                                 
                                    
                                       
                                          
                                             h
                                             2
                                          
                                          =
                                          0.0269
                                          
                                             t
                                             3
                                          
                                          +
                                          0.0482
                                          
                                             t
                                             2
                                          
                                          +
                                          0.0465
                                          t
                                          +
                                          0.1098
                                       
                                    
                                 
                              
                           
                        
                     Clearly, both cubic polynomials has zero sign variations, so that we can conclude that d has no root over the interval [0, 1]. Therefore, solving this cubic equation can be avoided.


                     Table 1 summaries the filtering results and computational costs for Example 4.1, using Theorems 4.1 and 4.2.

For a better understanding of the role of sign variation in Descartes and Vincent theorems, Table 2 summaries the percentage of sign variations for these three filters (refer to the cloth-ball simulation in Section 5).

More results and analysis can be found in Section 5. The pseudocodes of this filtering algorithm is given in appendix (see Algorithms 1 and 2).

@&#EXPERIMENTAL RESULTS@&#

We now present some experimental results and comparison analysis. This filtering algorithm was implemented using C++ under Windows. And all the computational performance in our experiments were measured on a desktop with 2.3G GHz Dual Core Processor and 4GB of memory. In our experiments, AABB trees are used as bounding volume hierarchies for broad collision culling. We used a bisection method as a standard cubic solver. We use our filtering algorithm in the narrow stage.

We denote the speedup before modification as β and the false positive ratio as α. Then the modified speedup β′ can be calculated with

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                β
                                                ′
                                             
                                             =
                                             
                                                β
                                                
                                                   α
                                                   +
                                                   β
                                                   ×
                                                   (
                                                   100
                                                   %
                                                   −
                                                   α
                                                   )
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        To obtain different false positive ratios for elementary collision tests, we randomly generate a large number of deforming triangle pairs in our experiment, where each pair of triangles don’t collide at their initial configurations (
                           
                              t
                              =
                              0
                           
                        ), but can be either colliding or non-colliding at the final configuration (
                           
                              t
                              =
                              1
                           
                        ). We repeat the experiment for many times and measure the false positive ratios for elementary collision tests. Then we measure the average timings when using the different non-penetration filters. In Fig. 2
                        , we show the modified speedup with respect to the false positive ratios. After modification, for example, the speedup of Descartes algorithm becomes rather low. In the figure, we show a dot line at 95% which is reported as a lower bound of typical false positive ratios. At such a false positive ratio, we observe that Descartes algorithm has the worst filtering performance and one-recursion Vincent algorithm, however, achieve the best filtering performance.

We have tested our algorithm using four simulations (courtesy of the UNC dynamic
                         scene benchmarks).

In the cloth-ball model, a piece of cloth is dropped onto a ball and complex folds and wrinkles quickly increase with the rotation of the ball (see Fig. 3(a)–(d)). The cloth-ball model consists of 46K vertices and 92K triangles. The false positive ratios of elementary collision tests in continuous collision detection increase very quickly with the evolution of simulation (varying from 13K to 50M). The filtering efficiency of these algorithms is shown in Fig. 3(e). The best filters are able to achieve up to 99% filtering ratios.

In the N-body simulation, there are many moving balls (see Fig. 4(a)). In total, these models consist of 73K vertices and 146K triangles. The balls collide with each other and with the cones. In this benchmarking scenario, the false positive ratios of elementary collision tests in the narrow stage of continuous collision detections vary between 3M and 334M through the entire simulation. The filtering efficiency of our algorithms is shown Fig. 4(b).

In the exploding dragon and bunny simulation, a dragon model breaks into many small pieces (Fig. 5(a)). The model consists of 126K vertices and 252K triangles. The false positive ratios of elementary collision tests vary from 1.5M to 127M through the explosion. The filtering efficiency of our algorithms is shown in Fig. 5(b).

In the last simulation, a ball falls onto the top of a stone Lion and the Lion gradually breaks into many pieces (Fig. 6
                        (a)). This benchmark contains 800K vertices and 1.6M triangles. The false positive ratios of elementary collision tests varies from 282M to about 1B during the simulation. The filtering efficiency of our algorithm is shown in Fig. 6(b).

In this section, we compare our new algebraic filter with prior algorithms. These filter are complementary to many broad stage culling algorithms for continuous collision detection such as dynamic BVHs [6], continuous normal cones [15], representative-triangles [13], error-defending algorithms [20], exact algorithm based on Bernstein sign classification [21], etc. [20] and [21] are used to handle numerical errors and rounding errors. They can be used in a succeeding stage. The work in [7] is most relevant to ours and their filter was derived using convex hull properties, an idea borrowed from computational geometry. Performance in [7] is comparable to our Vincent algorithm (see Figs. 3–6). As shown in Figs. 7
                        
                        
                        –10
                        , their computational costs are higher than our Vincent algorithms. The work based on dimension reduction [18] worked well for the simulation undergoes large step time and is usually more conservative than our algorithms in general cases. Continuous normal cones [15] were designed for large flat models and their filtering efficiency degrades quickly for the high curvature objects. The algorithm in [11] was mainly designed for conservative advancement using local distance computation, which in principle differs from cubic-solvers. Exact CCD algorithm [19] can eliminates 99% elementary tests (see Figs. 3–6). However, their computational cost is much higher than ours. The computational costs of these algorithms are given in Figs. 7–10. Table 3
                         lists the quantitative comparison of average computational costs in the given simulations.

@&#CONCLUSIONS@&#

We have presented our non-penetration filter for continuous collision detection using algebraic analysis techniques. Our filter offer various properties and performance advantages. For example, the filter based Vincent theorem can offer a trade off between conservativeness and accuracy by tuning the number of recursions. It can be used in the standard continuous collision detection method that involves cubic-solvers. And it can reduce the false positive ratios of elementary collision detection. Moreover, the proposed filter is complementary to many prior broad culling algorithms for continuous collision detection such as dynamic BVHs [6], continuous normal cones [15], representative-triangles [13], etc. For error-sensitive applications, some complementary error-defending or exact algorithms [20,21] can be applied further.

For future work, many optimizations could be carried out to improve the performance of our filter. Many modern microprocessors have SIMD (single instruction, multiple data) instruction sets. These SIMD instructions execute a single operation on multiple values (4, 8 or 16 scalars) in parallel. It would be interesting to design parallel filtering algorithm using streaming SIMD. The presence of many-core processors such as GPUs is becoming ubiquitous and many continuous collision detection algorithms have been implemented on GPUs. It would also be useful to devise the corresponding GPU versions of our filtering algorithm.

@&#ACKNOWLEDGMENTS@&#

This research work was supported in part by the Foundation for Innovative Research Groups of the NSFC (grant no. 61321064), the Shanghai NSF (grant no. 14ZR1412300), the SRF for ROCS, SEM and the Open Project Program of the State Key Laboratory of CAD&CG (grant no. A1504), Zhejiang University.

The following are pseudocodes for the filters using one recursion Vincent algorithm (Vincent1, see Algorithm 1) and using two recursion Vincent algorithm (Vincent2, see Algorithm 2). The procedure 
                        
                           VAR
                           
                              (
                              g
                              )
                           
                        
                      counts the number of sign variations for adjacent nonzero coefficients of a cubic polynomial. The procedure cubic(·) is used to represent a cubic polynomial for the given coefficients.

@&#REFERENCES@&#

