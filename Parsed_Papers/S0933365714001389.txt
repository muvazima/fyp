@&#MAIN-TITLE@&#Brain-controlled applications using dynamic P300 speller matrices

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Control of web-browser and multimedia player with BCI.


                        
                        
                           
                           Dynamic matrices enable control with high speeds.


                        
                        
                           
                           Evaluation with healthy participants and end-users.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Assistive technology

Brain-computer interface

Motor impairment

@&#ABSTRACT@&#


               
               
                  Objectives
                  Access to the world wide web and multimedia content is an important aspect of life. We present a web browser and a multimedia user interface adapted for control with a brain-computer interface (BCI) which can be used by severely motor impaired persons.
               
               
                  Methods
                  The web browser dynamically determines the most efficient P300 BCI matrix size to select the links on the current website. This enables control of the web browser with fewer commands and smaller matrices. The multimedia player was based on an existing software. Both applications were evaluated with a sample of ten healthy participants and three end-users. All participants used a visual P300 BCI with face-stimuli for control.
               
               
                  Results
                  The healthy participants completed the multimedia player task with 90% accuracy and the web browsing task with 85% accuracy. The end-users completed the tasks with 62% and 58% accuracy. All healthy participants and two out of three end-users reported that they felt to be in control of the system.
               
               
                  Conclusions
                  In this study we presented a multimedia application and an efficient web browser implemented for control with a BCI.
               
               
                  Significance
                  Both applications provide access to important areas of modern information retrieval and entertainment.
               
            

@&#INTRODUCTION@&#

The idea that brain signals can be used to control external devices or computers was proposed in [1]. As most brain-computer interface (BCI) systems today, the design was based on fluctuations of electrical potential recorded using electroencephalogram (EEG) [2]. Various phenomena can be used to control BCIs such as slow cortical potentials (SCPs), the sensorimotor-rhythm (SMR) and event-related potentials (ERPs) [3–5]. Many applications have been developed for BCIs. For instance the SMR can be used to control prosthetic devices for rehabilitative or restorative purposes [6]. BCIs used for communication are continuously being adapted to improve usability and communication speed for people with motor or even visual impairments by using different stimulation techniques or improving the software used for communication [7–11]. Additionally, new insights contribute to the models behind BCI control and how usage and training can be improved [12–16].

Ultimately, much of the research conducted with BCIs is focused on providing communication methods for people with severe motor impairments preventing the use of assistive devices that require control of muscles [17]. Much of this research has focused on the BCI paradigm that uses visually elicited P300 ERPs [5]. In this paradigm the possible commands (usually letters for communication) are displayed in a matrix on a screen in front of the user. The rows and columns are then highlighted using an unpredictable sequence. When the user focuses on an element of the matrix a P300 and other ERPs components are elicited whenever this row or column is highlighted. This response can be detected online and is used for selection. Several repetitions are needed to achieve a sufficient signal to noise ratio. Highlighting was up until recently performed by increasing the brightness of the row or column but it has now been shown that stimuli such as faces are much more efficient at eliciting ERPs due to their higher psychological salience [18]. The pattern with which the stimulation is performed can also be improved by lifting the row and column restriction [19] or using different colours for stimulation [20].

Various neurodegenerative diseases and injuries can lead to degrees of motor impairment at which the use of a BCI can provide an improvement in quality of life by restoring communication. These degrees of impairment are termed the locked-in state (LIS), in which only rudimentary muscle control (over e.g. the eye muscles) remains, and the complete locked-in state (CLIS) in which no control and thus no communication or control possibilities remain [21]. People with such severe disabilities would benefit from improvement in areas of manipulation, communication, computer access/entertainment, and environmental control [22,23]. BCIs have been proposed for many of these areas. Mostly SMR based BCIs have been used to control robotic arms or neuroprostheses [24–27]. Communication applications have been implemented using visual and auditory ERPs and motor potentials [28–32]. For a review see [33]. In the area of entertainment BCIs can provide methods of artistic expression and gaming [34–38]. Finally, BCIs can also be adapted to control smart homes [39,40].

In this paper we focused on a particular aspect of modern communication, namely the use of information technology such as web browsing [41]. The first BCI controlled web browsers were operated using SCPs. Initial versions of this browser were restricted to fixed links that were selected from a list but the browser was later extended to enable free navigation [42,43]. Besides needing a substantial amount of training SCP BCIs can be used for binary choices only. Thus with many links on the website a large number of selections is needed for a single link. Due to the higher efficiency of selecting one of multiple commands a P300 controlled web browser was created [44]. Each link on a webpage was assigned a letter (termed a “hint”) or several letters (if more than 26 links were on the page). This resulted in the requirement of very large matrices (8 rows and columns) and thus increased selection times (because each row and column needed to be flashed). Additionally, when filling out forms or writing text in general the matrix needed to be changed by the user requiring an additional selection. An alternative implementation of a P300 web browser displayed the flashes directly over the link on the web page [45]. This reduces the necessity of shifting the gaze from the screen displaying the matrix to the screen displaying the browser. Displaying the stimuli on the links does not resolve the need for an additional matrix for text entry and also introduces other visibility issues if links cluster together. It is also more complicated to use alternative visual stimuli such as faces. An alternative utilises a P300 BCI controlled mouse that automatically snaps to possible selections on websites [46].

In addition to accessing information it can be desirable to be able to manage and view local media files such as videos and photographs using multimedia applications. Control of media players is often mentioned or used with small samples in BCI studies [47–49]. But an extensive evaluation of a media player system is missing from the literature. Displaying photographs, watching movies and listening to music is an important part of modern entertainment and general media consumption.

In this publication it was our goal to address the shortcoming of current P300 BCI browsers of displaying superfluous elements in the P300 matrix used for control. We thus implemented a dynamic protocol that generated the P300 matrix from the relevant elements on the website online. Thus only the options needed by the user were included in the P300 matrix. In this paper we present the evaluation of the dynamic matrix generation with healthy participants and participants with motor disabilities. In addition to information retrieval, we wanted to enable users to independently consume media content. Thus, we also integrated control of a multimedia software.

@&#METHODS@&#

We evaluated the new BCI web browser and media player with ten healthy participants and three persons with motor disabilities in terms of efficiency, effectiveness and satisfaction [37]. The BCI system was based on the design presented in [50]. Stimulation was performed using the famous faces paradigm described by [18].

The healthy participants were university students (N
                        =10, 5 female, mean age 23.8 years). They were compensated for their participation with €8 per hour. Three users with motor impairments participated. User A was female, 57 years old and diagnosed with cerebral palsy (tetraplegia, speech disturbance, ALS functional rating scale revised (ALS FRS-R) 24, no BCI experience). User B was male, 48 years old and diagnosed with cerebral aneurysm (hemiplegia right, no speech, ALS FRS-R 21, BCI experience). Finally, User C was also 48 years old, male and diagnosed with stroke (tetraplegia, speech disturbance, ALS FRS-R 30, BCI experience).

Stimulation was performed with an external 22in. TFT display. The data was recorded using a g.USBamp amplifier set to a sampling rate of 256Hz and g.Gamma active electrodes. The amplifier filtered the raw data with a 0.1–60Hz bandpass and a 50Hz notch filter. Recording and stimulation was performed using the TOBI SignalServer software [51] in combination with Matlab and C++ software written specifically for the BackHome project (http://www.backhome-fp7.eu). The reference electrode was attached to the right earlobe, ground was positioned at FPz. The following six positions were recorded: Fz, Cz, Pz, Po7, Oz, Po8. We used a Hewlett-Packard ProBook 6460b with a dual-core CPU, 4GB of RAM and a 64-bit Windows 7 for recording, running the BCI system and displaying the two applications (web browser and multimedia player).

Signal processing was performed with Matlab. Epochs consisting of 204 post-stimulus samples (approx. 800ms) which were baseline corrected with the average amplitude of 51 pre-stimulus samples (approx. 200ms) were used for classification. The channel by sample matrix of each epoch was smoothed along the temporal dimension with a moving average filter with a width of 17 samples, and decimated by a factor of 12 prior to averaging and feature selection. Data segments were concatenated by channel, creating a single feature vector of length 102. We trained a stepwise linear discriminant analysis (SWLDA) classifier on the features of five copy-spelled letters. Considering the used stimulation matrix size (6×6) 10 target and 50 non-target feature vectors were available. The entry criteria for the SWLDA was p
                        <0.1 and the removal criteria was p
                        >0.15 with 100 as maximum number of features. We determined the number of sequences based on leave-one-letter-out cross-validation of the training data. A graphical visualisation of how SWLDA functions can be found in [32].

The new web browser supports bidirectional communication with the BCI and was developed using the Qt software framework. To minimise matrix size the browser determines the minimal amount of commands needed on the current website. For example if only a small number of links is visible (e.g. on the websites of some search engines) only a small number of hints can be selected using the P300 matrix (see Fig. 1
                         for an example). Or if a text entry field is selected, the alphabet and numerals are displayed. Conversely, if a site with a large number of links is opened, matrices with up to 84 (14×6) elements can be displayed. A minimum of eight commands (plus one “pause command”) was reserved for navigation and other purposes. Thus each matrix had a minimum of nine elements. It is difficult to estimate what the average matrix size is when surfing the web. Using the settings for the BCI described in Section 2.7 a selection with a matrix with 64 elements would need 26s, a selection with 36 elements 20s. This is a reduction in selection time of 25%. Additionally, changing the matrix manually for text entry becomes unnecessary because the browser automatically recognises text fields. See Fig. 2
                         for a visualisation of this concept.

The principle of dynamic P300 matrices is illustrated in Fig. 2. After the BCI and web browser are started the start web page is loaded, in this case a search engine. The web page has seven links (only six are visible). These seven links are assigned the letters A to G. In addition the navigation commands HOME, FORWARD, BACK, PAGE UP, PAGE DOWN, PAGE LEFT, PAGE RIGHT and ENTER are added to the matrix. Finally, a PAUSE button is offered to the user. This results in a matrix with six rows and three columns. When the user opens a new web page the list of links is updated. In the example the new page has eleven links. With the eight navigation commands and the pause command this results in twenty commands and thus requires five rows and four columns. This regularly updated matrix we refer to as dynamic matrix in this paper.

Many different multimedia players are available on the Internet. However, only few are suitable for our purpose and just one exactly meets our requirements: the Xbox media center (XBMC) is a free and open source media player application, which is designed to be controlled with a remote control or game controller. It fulfils our two main requirements: controllable with (1) few commands and (2) via a network connection.

A comparatively small P300 matrix (3×6 elements) is sufficient to control the application. Available commands are: UP, DOWN, LEFT, RIGHT, OK, VOLUME+, VOLUME-, MUTE, BACK, PLAY/PAUSE, STOP, FAST FORWARD, REWIND, LAST, NEXT, and a PAUSE/RUN toggle element. The PAUSE/RUN element serves as a break button. If this element is selected once, no command will be sent to the XBMC until the same element has been selected again. Fig. 3
                         shows the two corresponding user interfaces.

The built-in raw TCP socket based interface together with a JSON-RPC protocol is used to communicate with the BCI system, see Fig. 4
                        . The JSON-RPC is a very simple protocol, defining only a handful of data types and commands.

@&#PROCEDURE@&#

Each participant performed a calibration session consisting of selecting five symbols. The data from this session was then used to train the classifier described in Section 2.3.

Calibration was performed with fifteen flashes per row and column. Each flash had a duration of 60ms and the time between flashes was set to 125ms. The word used for calibration was “BRAIN”. A 6×6 letter matrix was used for calibration. After the calibration the optimal number of flashes for feedback was calculated (number of flashes to achieve one hundred percent plus two; minimum eight). The pause between selections was set to two seconds. Assuming the user's calibration data resulted in an optimal number of flashes of eight, one selection would need 20s. The user then performed two copy spelling runs with these settings. The words used for copy spelling were “SONNE” (engl. “SUN”) and “BLUME” (engl. “FLOWER”). This first copy spelling task we will refer to as “spelling task one”. Then a task involving the multimedia player and afterwards a task with the web browser had to be completed. The multimedia task needed a minimum of ten selections with a 3×6 matrix. The task was to navigate to a particular folder with pictures and to start a slideshow. Specifically, the required selections were: LEFT, OK, OK, RIGHT, OK, RIGHT, RIGHT, PAUSE, RUN, BACKWARD. The web browsing task needed a minimum of twelve selections with matrix sizes between 3×6 and 14×6. The goal of the task was to search for the word “BCI” and then open the corresponding Wikipedia article. In the optimal case, starting with the page of a popular web search engine, the following selections had to be made: A, B, C, I, ENTER, PG_DOWN, PAUSE, RUN, choose the hint corresponding to the Wikipedia article, PAUSE, RUN, PG_DOWN. The minimum instead of the actual numbers is given because the user was asked to correct mistakes and thus the actual number of selections was unknown before the completion of the task. The session closed with spelling two words of five letters each. The words used for this copy spelling task were “TRAUM” (engl. “DREAM”) and “KRAFT” (engl. “STRENGTH”). This second copy spelling task we will refer to as “spelling task two”. We performed two copy-spelling tasks to investigate for possible fatigue effects.

The data was segmented around the stimulus markers indicating target and non-target flashes of the matrix. ERP segments (0–800ms) were extracted from the raw data using EEGLAB and the BIOSIG toolbox [52,53]. All amplitudes and latencies were calculated using the target–non-target difference. We defined the P300 as the maximum amplitude between 200 and 700ms on Pz, the vertex positive potential (VPP) as the maximum amplitude between 130 and 250ms on Fz, the N170 as the minimum amplitude between 130 and 200ms on Pz, the N400f as the minimum between 300 and 400ms on Pz (all relative to stimulus presentation stimulation) and extracted amplitude and time point relative to the preceding stimulus of this maximum for each participant from the screening data. VPP, N170 and N400f are face specific ERP components [18,54,55]. Before segmentation the data was bandpass filtered between 0.1 and 30Hz. A trial-wise baseline correction was performed by subtracting the mean of the 200ms before each stimulus from the 800ms following each stimulus. Amplitude and latency values, for healthy participants and end-users, were calculated using data from electrode Pz. Latencies were calculated in relation to the occurrence of target flashes of either a row or a column. All calculations were performed under Matlab R2012a on a personal computer running a 64-bit Linux operating system.

After completing the BCI tasks all participants (healthy participants and end-users) completed several questionnaires. Satisfaction was evaluated using a visual-analogue scale (VAS), the extended version of the Quebec Evaluation of Satisfaction with Assistive Technology (QUEST) version 2.0 (see [45,56] for extended version) and a custom usability questionnaire. The extended QUEST does not contain four of the twelve initial items (durability, service delivery, repairs/servicing, follow-up services) which are replaced with (reliability, speed, learnability, aesthetic design). All of these items can be rated from 1 (not satisfied at all) to 5 (very satisfied) by the users. The custom questionnaire was used to assess aspects of system design (quality of the interface: symbols, feedback, simplicity of use) that are important for user satisfaction with yes/no questions.

The spelling tasks were evaluated on basis of the selection accuracy and information transfer rate (ITR) [57], the former termed effectiveness and the latter efficiency. Web browsing and multimedia player tasks were evaluated on basis of the percent correct selections of all selections. The total number of selections varied between participants due to the necessity to correct mistakes.

@&#RESULTS@&#

The P300 of the control participants had a mean peak amplitude of 8.7μV (SD 4.7, range 3.5–20.9). Peak latencies of the P300 were at 493ms (SD 99, range 308–601).

End-user A had a P300 amplitude of 3.1μV, end-user B of 4.5μV and end-user C of 8μV. The corresponding peak latencies were at 597ms, 585ms and 570ms. See Fig. 5
                         for a visualisation of the ERPs.

A comparison of P300, VPP, N170 and N400f amplitudes and latencies can be found in Table 1
                        .

After calibrating the classifier the metric described in Section 2 resulted in an average of 9.5 repetitions for the healthy participants (SD 2.4, range 8–15) and 12 repetitions for end-user A, 12 for end-user B and 9 for end-user C. The healthy participants completed the spelling task one with an average of 94% (SD 10, range 80–100) and the spelling task two with an average of 87% (SD 20, range 40–100; the difference was not significant, t
                        9
                        =1.35, p
                        =0.21). The motor impaired participants achieved an accuracy of 20% (end-user A), 80% (end-user B) and 90% (end-user C) before the internet task. The average for spelling the two words after the internet tasks cannot be compared to this because end-user A did not complete the second two words. The other two participants achieved 80% (end-user B) and 100% (end-user C).

During the multimedia player task the users had to select a sequence of ten commands that required mistakes to be corrected. Thus we counted the total number of correct commands (including correctly selected revisions of mistakes). On average 90% (SD 20, range 33–100) of all selections by the control group were correct. The end-users made 27% (end-user A), 60% (end-user B) and 100% (end-user C) correct selections.

The web browsing task consisted of a sequence of twelve commands. This resulted in an average accuracy of 85% (SD 22, range 27–100). The end-users made 57% (end-user A), 44% (end-user B) and 75% (end-user C) correct selections.

All tasks were performed equally well by the control participants. An analysis of variance (ANOVA) on all four tasks (spelling task one, spelling task two, multimedia player, web browser) also revealed no main effect of task on spelling accuracy (F
                        3,36
                        =0.44, p
                        =0.73). See Tables 2 and 3
                        
                         for an overview.

ITRs for the copy spelling task (based on the mean values in Table 2) one was 11.8bits/min for the healthy users and 5.3bits/min for the end-users. This decreased to 10.3bits/min in the copy spelling task two. The values of the end-users were not comparable because one end-user did not complete the copy spelling task two.

Overall device satisfaction (VAS scores) and results of the extended QUEST 2.0 and the usability questionnaire concerning the system design are listed in Table 4
                        . For healthy participants, the item that received the lowest score in the extended QUEST 2.0 was “speed” (3.67). It is the only item that received an average score below 4 (quite satisfied). The items that were rated as most important by the study participants were “ease of use” (n
                        =8), “effectiveness” (n
                        =5) and “speed” (n
                        =4). Participants negatively remarked on the necessity of gel, the “clinical design of the cap”, the many cables that “restrict movements of the head”, the low speed and suggested that the cap “should be made less eye-catching”. Using the system design questionnaire, one user suggested that it would be better if the users could decide when to choose the next symbol in order to feel less pressured.

For potential end-users, the items of the extended QUEST 2.0 with the lowest average scores were “speed” (2.33), “effectiveness” (2.66) and “ease of use” (3). The items that were rated as most important by the potential end-users were “effectiveness” (3), “reliability” (3) and “learnability” (2). The potential end-users remarked that selection speed could be “quicker” and the wearing comfort of the cap better. Under “Suggestions to improve the system” in the system design questionnaire, end-user A asked for more functions and in particular an application that would allow her to paint, end-user B suggested wireless transmission of the signals from the cap to the computer and would like to use no or a less conspicuous cap and end-user C only noted that the system was already “pretty simple to control”.

@&#DISCUSSION@&#

We presented the evaluation of a visual P300 BCI system using face stimuli that provides control over a web browser and multimedia player interface. The web browser has a unique new feature in the sense that it sends the minimal number of symbols needed for control of the current page to the BCI. This reduces the time needed to make a single selection.

The data of the healthy participants was used to determine if any differences in accuracy could be found between the different tasks. Even though the means were slightly lower for the application tasks (multimedia, web browser) there was no statistical difference to the spelling tasks. Similar observations have been made in other publications that compared spelling with more complex applications that have higher attentional demands. Mugler et al. [44] stated that participants with the ability to control a P300 speller also obtained control over the web browser. In [36] accuracies when controlling a painting application were initially lower. The accuracy was identical after switching from a coloured version of the painting matrix to a black and white version. Also in samples consisting of end-users similar levels of performance were found between speller and application [37].

The healthy participants achieved ITRs of 11.78bits/min in the first spelling condition. This is comparable to other studies with similar stimulus repetition rates [58–60]. The ITRs of the end-users is below what has been demonstrated in other publications, with classical and face stimuli [18,29] but similar to other studies also investigating the control over a complex application [37].

Albeit not significant there were trends in the data showing a decrease in performance towards the end of the session. In part this may be attributed to increasing task complexity (speller, multimedia player, web browser). Most likely fatigue also contributes due to the decrease in performance since the spelling task two accuracy (87%) is lower than the spelling task one accuracy (94%). This difference however, was also not significant.

On average the performance of the end-users participating in this study was lower than that of the healthy participants. The lowest performance was achieved by end-user A. The performance of end-users B and C was comparable to that of the healthy participants. When considering only the performance when controlling the web browser it was clearly lower, however. This could in part be due to the smaller sample, since several healthy participants also exhibited decreased performance when controlling the web browser. Part of this decrease in performance may be due to the complexity of the browsing tasks which involves switching attention between screens. The same classifier was used throughout the experiment and the spelling task and multimedia player task covered a large range of matrix sizes, making it improbable that the decrease in performance was due to either large or small matrices. In future studies it may be worth allocating more time or even additional sessions for evaluation of the web browsers to give end-users more time to adapt to the interface.

Generally reasons for performance variations are vast and have been subject to a number of studies themselves [13,61–64]. That a single reason for low performance will be found is improbable. Besides training a viable approach to increase performance is to apply one of the aforementioned methods to determine if another BCI paradigm is more suitable for a particular end-user. Using hierarchical menus most applications designed for P300 BCIs can also be controlled with SMRs [65]. Visually evoked potential (VEP) based BCIs allow retaining the matrix based control scheme [66].

P300 amplitude can be influenced by various factors such as stimulus modality and intensity or how easily target and non-target can be discriminated. Another factor is the so called target-to-target interval (TTI) which depends on the target probability, the number of non-targets preceding each target and the inter-stimulus interval [67]. In the context of a P300 BCI the TTI is influenced strongly by the matrix size. A reduction in matrix sizes increases target probability (number of targets is constant whereas the number of non-targets is reduced) and decreases the number of non-targets preceding each target. Due to the fact that matrix sizes vary considerably in our study between applications and also dynamically within applications this should be discussed. Studies investigating this issue in the context of P300 BCIs have found there to be reductions in P300 amplitude when 4×4 matrices (7.7μV) were used as opposed to 12×12 matrices (9.2μV, see [68]). This study did not show whether this influenced classification performance, however. In a later study 6×6 matrices were compared with 3×3 matrices [69]. And contrary to what should be expected based on the reduction in amplitude caused by the smaller matrices, selection accuracies were improved in case of the smaller matrices. This may be partially due to the increased probability to select the target by chance. The authors concluded that it is feasible to present matrices with different sizes to the user depending on the function that is being used or the application that is being controlled. Considering the fact that the smallest matrices used in our experiment (e.g. 6×3 for controlling the multimedia player) differed substantially from the largest matrix (e.g. 14×6 as the largest size when controlling the internet browser) and that we found no significant difference in performance between the applications we believe that matrix size has little influence on classification performance. In fact contrary to the hypothesis that decreased matrix size would lead to decreased P300 amplitude and thus accuracy, classification performance is higher when controlling the multimedia player compared to the web browser. Thus, we conclude the influence of matrix size to be negligible. The reason for this may be due to the moving average window and subsampling that is applied before classification, which decreases the differences between the ERPs elicited by different matrix sizes.

The reduced ERP amplitudes caused by smaller matrices may have no effect if conservative values are used for the number of stimulus repetitions. An effect on performance may become visible if speed is optimised to a minimum number of repetitions e.g. by using dynamic stopping methods [10].

@&#EVALUATION@&#

The high average accuracy achieved by the healthy participants is also reflected in a high overall satisfaction with the device as indicated by the mean VAS score of 8.53 and total scores of the extended QUEST 2.0, which indicate that participants were “very satisfied” with the BCI system. Of the three end-users, however, only end-user C rated overall satisfaction with the system as high and the QUEST 2.0 scores indicated that he was quite satisfied with the device. The QUEST 2.0 scores of end-users A and B indicated that they were only “more or less satisfied” and their overall satisfaction with the BCI was low. These users also achieved substantially lower selection accuracies than end-user C. Nevertheless, all users regarded the system as either “ok” or “easy” to operate and intuitive to use and only end-user A did not feel in control while using the system.

The aspects of the BCI systems that received the lowest scores by the potential end-users in the QUEST 2.0 were “effectiveness”, “ease of use” and “speed”. These were the exact items that were rated as most important by the healthy participants. However, of these items, only “effectiveness” was also rated as most important by the potential end-users. The other two items that were rated as most important were “reliability” and “learnability”. These results demonstrate that for end-users it is more important to have a system that they can reliably control than to have a system that is easy to use and quick, but not reliable. The evaluation results reveal two main factors to improve the system and ultimately usability of the BCI system. It needs to work effectively (high selection accuracies) and also reliably, not only for healthy participants, but also for potential end-users. A less conspicuous electrode cap (or another inconspicuous fixation of electrodes) and wireless transmission of the EEG signals would increase the likelihood that the BCI system can be used as assistive technology in daily life.

In most studies concerned with the evaluation of BCIs, only objective metrics, such as accuracy and information transfer rates were assessed to estimate the effectiveness and efficiency of the BCI system, thereby neglecting the user. Now that BCIs are on the verge of being used as assistive technology in a home environment, a user centred approach gains importance. Therefore, a framework for evaluation was introduced by [45] that takes into account the opinions of the user in the evaluation of effectiveness, efficiency and satisfaction with the BCI. It has since proven useful in several studies to reveal areas in need of further improvement [37,38,70]. In these studies, as in our study, low speed and the conspicuous electrode cap and necessity of gel were identified as obstacles to the use in daily life. This study shows that satisfaction with the BCI, although largely influenced by the level of control achieved with the BCI, depends on a variety of factors that can only be identified with a user centred approach. Therefore, the opinions of end-users must be considered in the evaluation process to ensure that BCIs meet end-users’ needs.

Several different BCI browser implementations exist [43–46,71]. The first characteristic that distinguishes the different implementations are the control signals they are designed for. Most current implementations are designed to be used with a visual P300 BCI. P300 BCIs have inherent advantages over other BCI control signals, e.g. that they require no training (only calibration) and offer a large number of possible selections. Other signals such as SCPs require large amounts of training and allow for binary choices only [42,43]. One of the main disadvantages of visual P300 BCIs is their reliance on gaze control. When controlling a web browser this is alleviated by the fact that gaze control is needed to view websites in general. Thus, the visual P300, in particular after considering recent improvements to the paradigm (see [18]), remains the most suitable BCI control signal for web browsing. Considering only P300 BCI web browsers three different designs have been established. The first using hints for each link as initially shown in [44]. This is the design the browser that was presented in this paper built upon. Compared to this design the browser presented in this paper features automatic switching of the matrix and a minimisation of the rows and columns presented in each matrix. Both features decrease the number of selections but also the time needed per selection. For example [44] used an 8×8 matrix. With the stimulation parameters used in this paper (185ms stimulus duration plus inter stimulus interval (ISI), ten repetitions per stimulus, two second pause between selections) 1.90selections/min can be performed and an 8×8 matrix. A 6×6 matrix allows for 2.48selections/min. The example showing a search engine in Fig. 2 only requires a 6×3 matrix which almost doubles the speed of the system to 3.22 selections per minute. Additionally, if the number of links in the browser exceeds the number of letters in the alphabet two letters are required to code the links. In [44] this still required two selections, with the browser described in this paper only one selection is required because the matrix is created with two letter entries. The second type of browser also uses a conventional P300 matrix on a separate screen or region of the screen but no hints. Thus, the user sequentially navigates from link to link always using the same matrix [46,71]. In this design many selections may be needed until the desired link is reached. Also the browser has to incorporate a mechanism for text entry. Thus, many of the tasks that would require many selections with this type of browser (e.g. navigating through the six links in the search engine example) can be performed with one selection in the design we propose. Finally, there are browser designs that are based on displaying the stimuli directly on the links of the website [45]. This design has many advantages. For example only one screen is required. Additionally, the method of control is very intuitive (“look at the link that you want to open”). The disadvantages of this system are that links tend to cluster on websites (e.g. on navigation bars). These may be difficult to fixate individually. Generally, control over the arrangement of the BCI matrix is lost. Also, state-of-the-art stimuli such as faces are difficult to utilise since the stimuli are by nature smaller in this design. Many of these disadvantages may be alleviated by redesigning the browser itself to allow for larger stimuli by preventing link clustering. Then displaying the BCI stimuli on top of the web browsing window would be the preferential method. Another approach to making the link selection process more intuitive is to display the stimuli on the margin around the websites and associating them with links by thin lines. The visual stimuli in P300 BCI can even be moving during the selection process, as shown in [72]. This implies that there are few restrictions in the spatial arrangement of the stimuli.

Wei et al. [48] turned a multimedia player on and off by detecting alpha waves in the EEG. Lei et al. [49] demonstrated control of a multimedia player based on a steady state visually evoked potential (SSVEP)-based BCI. The control possibilities with both of these initial approaches were rather limited, though. The work of [47] on the other hand allowed for slightly more elaborate control. The system in [47] is also more similar to our approach as it also uses a visual P300 BCI. Unfortunately, Teo et al. [47] do not report any results concerning the accuracy, ITR, or number of flashing elements in their paper. However, one main difference is obvious: They used a single screen to show the P300 stimulation as well as the multimedia player user interface in contrast to our dual-screen approach. A single screen approach has the advantage that the user does not have to move her/his head between the control and the media player screen. On the other hand, the size of the pictures and videos is very small using only one screen to show both. We believe the best solution would be to integrate the P300 control elements into the multimedia player user interface which we are currently developing.

@&#CONCLUSION@&#

In this paper we presented the evaluation of two BCI applications: a web browser and a multimedia player. Both applications can reduce or prevent the social exclusion of end-users. Our results indicate that the simplicity and efficiency due to the use of dynamic matrices of both applications make them possible candidates for independent home use. Together with other important developments such as easy-to-use electrodes, wireless amplifiers [73] and remote support of BCI systems the presented applications will provide further momentum to moving BCIs from the laboratory to end-users’ homes.

@&#ACKNOWLEDGEMENTS@&#

The research leading to these results has received funding from the European Community's, Seventh Framework Programme FP7/2007-2013, BackHome project grant agreement number 288566.

@&#REFERENCES@&#

