@&#MAIN-TITLE@&#Heuristic-based tabu search algorithm for folding two-dimensional AB off-lattice model proteins

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new method to predict the folding structure of a protein is presented.


                        
                        
                           
                           The prediction is carried on two-dimensional AB off-lattice model.


                        
                        
                           
                           Experiments are performed on Fibonacci sequences and real protein sequences.


                        
                        
                           
                           The proposed method finds lower-energy conformations for some sequences.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Protein structure prediction

2D AB off-lattice model

Heuristic-based tabu search algorithm

Local search

@&#ABSTRACT@&#


               
               
                  The protein structure prediction problem is a classical NP hard problem in bioinformatics. The lack of an effective global optimization method is the key obstacle in solving this problem. As one of the global optimization algorithms, tabu search (TS) algorithm has been successfully applied in many optimization problems. We define the new neighborhood conformation, tabu object and acceptance criteria of current conformation based on the original TS algorithm and put forward an improved TS algorithm. By integrating the heuristic initialization mechanism, the heuristic conformation updating mechanism, and the gradient method into the improved TS algorithm, a heuristic-based tabu search (HTS) algorithm is presented for predicting the two-dimensional (2D) protein folding structure in AB off-lattice model which consists of hydrophobic (A) and hydrophilic (B) monomers. The tabu search minimization leads to the basins of local minima, near which a local search mechanism is then proposed to further search for lower-energy conformations. To test the performance of the proposed algorithm, experiments are performed on four Fibonacci sequences and two real protein sequences. The experimental results show that the proposed algorithm has found the lowest-energy conformations so far for three shorter Fibonacci sequences and renewed the results for the longest one, as well as two real protein sequences, demonstrating that the HTS algorithm is quite promising in finding the ground states for AB off-lattice model proteins.
               
            

@&#INTRODUCTION@&#

Predicting the native structure of a protein from its amino acid sequence is one of the most challenging problems in bioinformatics. Based on Anfinsen's thermodynamic hypothesis (Anfinsen, 1973), which states that the native structure of a protein corresponds to the global minimum of the free energy surface of the protein, the protein structure prediction problem can be translated into a global optimization problem.

The ab initio prediction method, which supposes that the native structure of a protein is the most stable, is widely used for prediction. A successful study of protein structure prediction entails two main problems (Lee et al., 1999). The first problem is to obtain a relevant potential energy function which can generally distinguish the native state of a protein molecule from non-native ones. This potential energy function should reflect the relation between the native structure and the free energy of a protein. The second problem is to develop a powerful optimization method to search for the global minimum of the potential energy function.

Due to the complexity of the protein structure prediction problem, many simplified models have been proposed. The most widely used one is the HP lattice model (Dill, 1985; Liang and Wong, 2001; Huang et al., 2010), in which each amino acid is treated as a point particle on a regular (rectangular or cubic) lattice, and sequences are composed of two types of amino acids, hydrophobic (H) and hydrophilic (P). As the most simplified and most popular model, HP lattice model focuses on the interaction between neighboring non-bonded H residues, while neglecting the other non-local effects caused by P–P, H–P and non-neighbored H–H pairs, which also exert significant statistical influence on the conformation of these residues in a properly folded state. To illustrate the influence of non-local effects on protein folding, Stillinger et al. (1993) studied a more realistic simplified model, namely, AB off-lattice model, where the hydrophobic residues were labeled by A and the polar or hydrophilic ones by B. Fibonacci sequences of A and B residues were studied by using potentials including bending energy and Lennard–Jones energy. Though this model has no explicit representation of side chains or hydrogen bond, and provides only a coarse-grained approximation to the complexities of real proteins, its off-lattice construction and the use of both bending energy and Lennard–Jones contributions still enable it to capture some basic features of protein structures.

Even though AB off-lattice model is highly simplified, predicting the native structure of a protein molecule remains to be NP-hard, which means that it is not solvable in polynomial time (Crescenzi et al., 1998). Various theoretical computing methods have been proposed to find low-energy states of AB model proteins, including conventional Metropolis type Monte Carlo procedures (Stillinger and Head-Gordon, 1995), simulated tempering (Irbäck et al., 1997), new pruned-enriched-Rosenbluth method with importance sampling (Hsu et al., 2003), annealing contour Monte Carlo algorithm (Liang, 2004), conformation space annealing algorithm (Kim et al., 2005), heuristic algorithm based on a physical model (Chen and Huang, 2006), quasi-physical algorithm (Lü et al., 2007), statistical temperature annealing algorithm (Kim et al., 2007), improved energy landscape paving method (Liu et al., 2009), hybrid algorithm combining genetic algorithm based on matrix coding and tabu search algorithm (Mansour, 2011), particle swarm optimization with levy flight (Chen et al., 2012), and so on.

Tabu search (TS) algorithm is a class of global intelligent optimization algorithm with local search ability. In this paper, we propose a heuristic-based tabu search (HTS) algorithm for predicting the native structures of proteins in 2D AB off-lattice model. In HTS, we define new neighborhood conformation, tabu object and acceptance criteria of current conformation based on the original TS algorithm. To improve the efficiency of our algorithm, we introduce a heuristic initialization mechanism to generate promising initial conformation, a heuristic conformation updating mechanism to update the current conformation, and the gradient method to make the constraint be satisfied. After the tabu search minimization, a local search mechanism based on the gradient method will be adopted for further searching for lower-energy conformations near the local minima, lest the search shall miss the global optimal solution. The numerical results show that the proposed algorithm is quite effective for predicting the folding structures of 2D AB off-lattice model proteins.

The AB off-lattice model was proposed by Stillinger et al. (1993). In AB off-lattice model, the amino acid residues linked by rigid bonds of unit length form linear unoriented polymers in two-dimensional Euclidean space. The shape of an n-mer chain is determined by the (n
                        −2) angles θ
                        2, ..., θ
                        
                           n−1 (as shown in Fig. 1
                        ), which are not formed in the end and denote the supplementary angle of the bond angle between two successive bond vectors and satisfy −π
                        ≤
                        θ
                        
                           i
                        
                        ≤
                        π. The energy function for any n monomers chain is expressed as follows (Stillinger and Head-Gordon, 1995):
                           
                              (1)
                              
                                 
                                    E
                                    =
                                    
                                       E
                                       
                                          bend
                                       
                                    
                                    +
                                    
                                       E
                                       
                                          L
                                          −
                                          J
                                       
                                    
                                    =
                                    
                                       1
                                       4
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          2
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    
                                       (
                                       1
                                       −
                                       cos
                                        
                                       
                                          θ
                                          i
                                       
                                       )
                                       +
                                       4
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                             −
                                             2
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                i
                                                +
                                                2
                                             
                                             n
                                          
                                          
                                             [
                                             
                                                
                                                   
                                                      r
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   −
                                                   12
                                                
                                             
                                             −
                                             C
                                             (
                                             
                                                σ
                                                i
                                             
                                             ,
                                             
                                                σ
                                                j
                                             
                                             )
                                             
                                                
                                                   
                                                      r
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   −
                                                   6
                                                
                                             
                                             ]
                                          
                                       
                                    
                                 
                              
                           
                        here r
                        
                           ij
                         is the distance between monomers i and j with i
                        <
                        j. Each σ
                        
                           i
                         is ether A or B, and the constant C(σ
                        
                           i
                        , σ
                        
                           j
                        ) is +1, +1/2, and −1/2, respectively, for AA, BB and AB pairs, thus producing strong attraction between AA pairs, weak attraction between BB pairs, and weak repulsion between AB pairs, roughly analogous to the situation in real proteins. The first term, running over the (n
                        −2) angles θ
                        
                           i
                        (2≤
                        i
                        ≤
                        n
                        −1) of successive bond vectors, is the bending energy that induces the chain to expand. The second term partially competes with the bending barrier by a potential called Lennard–Jones energy, depending on the distance between nonadjacent monomers along the chain.

The protein structure prediction problem for AB model can be formally defined as follows: given an amino acid residue chain s
                        =
                        σ
                        1
                        σ
                        2
                        σ
                        3...σ
                        
                           n
                        , our goal is to find an energy-minimizing conformation of s, i.e., find X
                        ∗
                        ∈
                        C(s) so that E(X*)=min{E(X)|X
                        ∈
                        C(s)}, where C(s) is a set of all the legal conformations of s.

By introducing a flexible storage structure and corresponding tabu criteria, the tabu search algorithm can avoid the search cycling and forgive some excellent tabu states through aspiration criterion. It is an extension of local neighborhood search and a global optimization algorithm. The most important idea of tabu search is to mark some objects which correspond to local optimal solutions, and to avoid these objects in further iterative search as far as possible (rather than absolutely forbid), thus to ensure an effective exploration in different ways.

The basic procedure of the tabu search algorithm is as follows. Given an initial solution and its neighborhood structure, and then determine several candidate solutions from the neighborhood. If the objective function value of the optimal candidate solution is better than that of the “best so far” solution, then ignore its tabu restriction, and replace the current solution and the “best so far” solution with it, and add it into the tabu list. Modify the terms of all objects in the tabu list, and release the object whose term is 0. If there is no such candidate solution, then select the optimal one from the neighborhood which is not tabooed as the new current solution, and add it into the tabu list. Modify the terms of all objects in the tabu list, and release the object whose term is 0. Repeat the procedure above until a termination condition is satisfied.

Tabu search involves some concepts, such as initial solution, neighborhood solution, tabu list, tabu object, tabu length, aspiration criterion, termination criterion, and so on, which are some key operators of tabu search algorithm.

Inspired by the phenomenon that hydrophobic amino acids are always lumped together as a compact core surrounded by hydrophilic amino acids in a real protein molecule, we put forward a heuristic initialization mechanism to generate promising initial conformation for tabu search.

Firstly, we define two concentric circles with the origin as their centers and R
                        1
                        =2n, R
                        2
                        =5n as their radii respectively, where n is the length of the chain considered. Then cast randomly all hydrophobic monomers in the small circle and hydrophilic ones in the region between the small circle and the big circle. To illustrate this mechanism, an initial conformation is shown in Fig. 2
                        , where the solid dots and empty circles indicate hydrophobic and hydrophilic monomers, respectively.

To update the current conformation, enlightened by the characteristic of real protein molecules, where hydrophobic monomers foster tightly as a hydrophobic core surrounded by hydrophilic monomers, we can pick out hydrophilic monomers squeezed among hydrophobic monomers, and place them in certain spots in 2D space to speed up the search for lower-energy states. For the current conformation X, the concrete description of the heuristic conformation updating mechanism is as follows: (1) calculate the centre of all hydrophobic monomers; (2) compute the distances from the center to each hydrophobic monomer, signing the greatest distance as d; (3) construct a circle with the center of all hydrophobic monomers as the center of circle and the distance d as the radius; (4) pick out the hydrophilic monomer which has the largest potential energy in the circle, denoted as C
                        
                           i
                        ; (5) place C
                        
                           i
                         anywhere out of the circle, and keep the positions of other monomers unchanged, thus we gain a new conformation X′,which is a neighborhood conformation of the conformation X. The set of all neighborhood conformations of X is called the neighborhood of X.

When updating the conformation using the heuristic conformation updating mechanism, the constraint of unit bond length between two successive monomers may be destroyed. To make the constraint be satisfied and search for lower-energy conformations near the updated conformation X′, we further execute the gradient method based on X′.

Imagine that all n monomers involved in the model are smooth solids with the radius of 1/2 for each and there exists a spring with the original length 1 between the centers of two consecutive monomers i and i
                        +1 (i
                        =1,2,…, n
                        −1).According to Hooks’ law, the elastic potential energy of the whole conformation can be indicated as follows:
                           
                              (2)
                              
                                 
                                    
                                       E
                                       s
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          1
                                          2
                                       
                                       
                                          k
                                          s
                                       
                                       
                                          
                                             (
                                             
                                                r
                                                
                                                   i
                                                   ,
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             −
                                             1
                                             )
                                          
                                          2
                                       
                                    
                                 
                              
                           
                        where k
                        s is a physical coefficient characterizing the rigidity of all the springs.

By incorporating the spring's elastic potential energy into the original energy function Eq. (1), the new potential energy function can be indicated as
                           
                              (3)
                              
                                 
                                    U
                                    =
                                    
                                       E
                                       
                                          b
                                          e
                                          n
                                          d
                                       
                                    
                                    +
                                    
                                       E
                                       
                                          L
                                          −
                                          J
                                       
                                    
                                    +
                                    
                                       E
                                       s
                                    
                                    =
                                    
                                       1
                                       4
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          2
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    
                                       (
                                       1
                                       −
                                       cos
                                        
                                       
                                          θ
                                          i
                                       
                                       )
                                       +
                                       4
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                             −
                                             2
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                i
                                                +
                                                2
                                             
                                             n
                                          
                                          
                                             [
                                             
                                                
                                                   
                                                      r
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   −
                                                   12
                                                
                                             
                                             −
                                             C
                                             (
                                             
                                                σ
                                                i
                                             
                                             ,
                                             
                                                σ
                                                j
                                             
                                             )
                                             
                                                
                                                   
                                                      r
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   −
                                                   6
                                                
                                             
                                             ]
                                          
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          1
                                          2
                                       
                                       
                                          k
                                          s
                                       
                                       
                                          
                                             (
                                             
                                                r
                                                
                                                   i
                                                   ,
                                                   i
                                                   +
                                                   1
                                                
                                             
                                             −
                                             1
                                             )
                                          
                                          2
                                       
                                    
                                 
                              
                           
                        where E
                        
                           s
                         acts as a penalty term in the new energy function U. When k
                        
                           s
                         is large enough, slight deformation of the spring will bring large increment of potential energy. At this moment, the optimal solution to the unconstrained optimization problem min U(X) is also the optimal solution to the original optimization problem min E(X) with constraint r
                        
                           i,i+1
                        =1, i
                        =1, 2, ..., n
                        −1.

For the unconstrained optimization problem, we run the gradient method, or the steepest descent method (Liu and Huang, 2007). Assume that X
                        (1) is the initial conformation, and let g
                        =1. If the conformation X
                        (g)(g
                        ≥1) is not a local minimum, a new conformation is obtained by the iterative formula X
                        (g+1)
                        =
                        X
                        (g)
                        +
                        ɛ
                        ×(−1)×∇
                        U(X
                        (g)), where ɛ is the iterative step factor, ∇U(X
                        (g)) is the gradient of the energy function U(X) at X
                        (g), and −∇
                        U(X
                        (g)) indicates the search direction. Let g
                        =
                        g
                        +1. For the updated conformation X
                        (g), the above iteration proceeds until the terminal condition 
                           
                              
                                 
                                    
                                       r
                                       
                                          i
                                          ,
                                          i
                                          +
                                          1
                                       
                                    
                                    −
                                    1
                                 
                              
                              <
                              
                                 
                                    10
                                 
                                 
                                    −
                                    5
                                 
                              
                              (
                              i
                              =
                              1,2
                              …
                              n
                              −
                              1
                              )
                           
                         is satisfied, that is, a local minimum conformation occurs. In the simulations, we let ɛ
                        =1×10−6, k
                        s
                        =1000, and modify the physical coefficient k
                        s through multiplying it by the factor 1.3 per 50,000 iterative steps.

In order to make hydrophobic core compact enough, when calculating the gradient ∇U in iterations, we modify the Lennard–Jones potential energy through multiplying it by a coefficient k
                        =10,000, meaning the Van Del Waals interaction coefficient. In the beginning of calculation, the value of k is large so as to increase the Van Del Waals interaction force and make hydrophobic residues embrace together tightly. Along with the increment of calculating steps, its value decreases gradually through multiplying it by the factor 0.7 per 50,000 iterative steps until k
                        <2.

Tabu list is used for recording local minima that have been reached and tabooing some operations that have been executed, so as to avoid the search cycling. There are two important elements in tabu list: tabu object and tabu length.

Tabu object can be the solution itself, or a solution component, or an adaptive value. In this paper, the tabu object is a single hydrophilic monomer. When applying the heuristic conformation updating mechanism to update conformation, cycling is possible, that is, some hydrophilic monomers may be picked out repeatedly and at each time they cannot be placed at appropriate positions. To avoid this, we forbid some hydrophilic monomers to be picked. However, we do not set the tabu object just as the general TS method, which selects the best solution from the candidate solutions, and if its objective function value is better than that of the current found optimal solution, TS ignores the tabu restriction of this hydrophilic monomer C
                        
                           i
                         and adds it into the tabu list as a tabu object; otherwise, the best solution not tabooed within the candidate neighborhood is chosen as the new current solution and the corresponding hydrophilic monomer C
                        
                           i
                         is added into the tabu list as a tabu object. Now, no matter monomer C
                        
                           i
                         is a tabu object or not, we set the potential energy of C
                        
                           i
                         at 0 and add C
                        
                           i
                         into the tabu list as a tabu object, as long as C
                        
                           i
                         has been picked out and put five times, and at each time the updated conformation obtained by executing the heuristic conformation updating mechanism and subsequently running the gradient method is not accepted (the acceptance criteria is shown in Section 2.7). Thus, when we once again apply the heuristic conformation updating mechanism, we will no longer pick out C
                        
                           i
                        , which effectively avoid the search revisiting the reached local minima.

Tabu length denotes the maximum number of times that tabu object is not allowed to be picked out from the tabu list without considering the aspiration criterion. In this paper, the tabu length is set to 3, and we adopt a unidirectional chained list to record the objects that are tabooed in the process of search and a so-called first-in first-out queue structure to update the tabu list.

In the original TS algorithm, if the objective function value of the conformation corresponding to a certain tabu object is better than that of the current optimal conformation, TS adopts a so-called aspiration criterion to ignore the tabu restriction of the tabu object and accept the corresponding conformation as the current conformation and adds the tabu object into the tabu list again. If the objective function values of conformations corresponding to all tabu objects in the tabu list are not better than that of the current optimal conformation, TS chooses the best conformation not tabooed within the candidate neighborhood as the current conformation and adds the corresponding hydrophilic monomer which has the largest potential energy into the tabu list as a tabu object. On the premise of retaining the aspiration criterion, in this paper, we make the following improvements in the acceptance criteria of current conformation:
                           
                              (1)
                              If the hydrophilic monomer C
                                 
                                    i
                                  is a tabu object for the current conformation X and the energy U(X′) of conformation X′ obtained by executing the heuristic conformation updating mechanism and subsequently runningthe gradient method is lower than the energy U
                                 opt of the current optimal conformation X
                                 opt, we release C
                                 
                                    i
                                  from the tabu list, and modify the terms of all tabu objects in the tabu list and release the object whose term is 0. Update the current optimal conformation X
                                 opt and the current conformation X by X′.

If C
                                 
                                    i
                                  is a tabu object and the energy U(X′) of the conformation X′ obtained by executing the heuristic conformation updating mechanism and subsequently runningthe gradient method is not lower than the energy U
                                 opt of the current optimal conformation X
                                 opt, then reject X′ as the current conformation, and restore the preceding conformation X as the current conformation.

If C
                                 
                                    i
                                  is not a tabu object and the energy U(X′) of the conformation X′ obtained by executing the heuristic conformation updating mechanism and subsequently running the gradient method is lower than the energy U(X) of the preceding conformation X, we still accept the conformation X′ as the current conformation, and modify the terms of all tabu objects in the tabu list and release the object whose term is 0. Moreover, if the energy U(X′) of the conformation X′ is lower than the energy U
                                 opt of the current optimal conformation X
                                 opt, we accept X′ as the current optimal conformation.

If C
                                 
                                    i
                                  is not a tabu object and the energy U(X′) of the conformation X′ obtained by executing the heuristic conformation updating mechanism and subsequently running the gradient method is not lower than the energy U(X) of the preceding conformation X, then reject X′ as the current conformation, and restore the preceding conformation X as the current conformation.

Obviously, this improved strategy is beneficial for TS to start from a promising conformation to search further for the global optimal conformation.

In order to search further for lower-energy conformations and avoid missing the global optimal solution, we execute the local search near the lowest-energy conformation 
                           
                              
                                 X
                                 *
                              
                              =
                              (
                              
                                 x
                                 1
                                 ∗
                              
                              ,
                              
                                 y
                                 1
                                 ∗
                              
                              ,
                              ...
                              ,
                              
                                 x
                                 i
                                 ∗
                              
                              ,
                              
                                 y
                                 i
                                 ∗
                              
                              ,
                              ...
                              ,
                              
                                 x
                                 n
                                 ∗
                              
                              ,
                              
                                 y
                                 n
                                 ∗
                              
                              )
                           
                         found by the tabu search minimization. Firstly, we add a slight disturbance to each residue's position. The disturbance method is as follows. Let 
                           
                              
                                 
                                    X
                                    ′
                                 
                                 i
                              
                              =
                              
                                 X
                                 i
                                 ∗
                              
                              +
                              m
                           
                        , where 
                           
                              
                                 X
                                 i
                                 ∗
                              
                              =
                              (
                              
                                 x
                                 i
                                 ∗
                              
                              ,
                              
                                 y
                                 i
                                 ∗
                              
                              )
                           
                        , i
                        =1, 2, …, n, and m is a random number between −0.01 and 0.01. As mentioned in Section 2.5, we conceive that there exists a spring with the original length 1 between the centers of two consecutive monomers i and i
                        +1 (i
                        =1,2,…, n
                        −1), and introduce the elastic potential energy of springs. Then, from the updated conformation 
                           
                              X
                              '
                              =
                              (
                              
                                 
                                    X
                                    ′
                                 
                                 1
                              
                              ,
                              
                                 
                                    X
                                    ′
                                 
                                 2
                              
                              ,
                              ...
                              ,
                              
                                 
                                    X
                                    ′
                                 
                                 n
                              
                              )
                           
                        , we execute the gradient method again. Differently, we will not introduce the coefficient k when calculating the gradient ∇U, because the hydrophobic core in local optimal conformation has formed. The local search mechanism is repeated two to four times until the simulation cannot find lower-energy conformations. In this paper, we call the improved tabu search algorithm with local search mechanism as the heuristic-based tabu search (HTS) algorithm.

The calculating procedure of the HTS algorithm which incorporates the heuristic initialization mechanism, the heuristic conformation updating mechanism and the gradient method into the improved TS algorithm is presented as follows:
                           
                              
                                 
                                 
                                 
                                    
                                       1)
                                       Generate an initial conformation X using the heuristic initialization mechanism shown in Section 2.3. Let tabu list be empty and tabu length be 3. Set the iteration step number t
                                          =1 and the coefficients k
                                          s
                                          =1000, k
                                          =10,000. Let the iterative step length factor ɛ
                                          =10−6 and the energy of the current optimal conformation U
                                          opt
                                          =
                                          U(X), the current optimal conformation X
                                          opt
                                          =
                                          X. Record the lowest energy value in the literature as E
                                          min for a given sequence.
                                    
                                    
                                       2)
                                       Copy the current conformation X. Pick out the hydrophilic amino acid with the largest potential energy from the constructed circle according to Section 2.4, and denote it as C
                                          
                                             i
                                          . Let j
                                          =1.
                                    
                                    
                                       3)
                                       Place C
                                          
                                             i
                                           anywhere out of the circle, with the positions of other amino acids unchanged, we gain a new conformation X′. Restore k
                                          
                                             s
                                          , k to their initial values. Let g
                                          =1, X
                                          (g)
                                          =
                                          X′.
                                    
                                    
                                       4)
                                       Calculate the gradient 
                                             
                                                ∇
                                                U
                                                (
                                                
                                                   X
                                                   
                                                      (
                                                      g
                                                      )
                                                   
                                                
                                                )
                                                =
                                                
                                                   
                                                      
                                                         
                                                            ∂
                                                            U
                                                            (
                                                            X
                                                            )
                                                         
                                                         
                                                            ∂
                                                            
                                                               x
                                                               1
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            ∂
                                                            U
                                                            (
                                                            X
                                                            )
                                                         
                                                         
                                                            ∂
                                                            
                                                               y
                                                               1
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            ∂
                                                            U
                                                            (
                                                            X
                                                            )
                                                         
                                                         
                                                            ∂
                                                            
                                                               x
                                                               2
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            ∂
                                                            U
                                                            (
                                                            X
                                                            )
                                                         
                                                         
                                                            ∂
                                                            
                                                               y
                                                               2
                                                            
                                                         
                                                      
                                                      ,
                                                      ...
                                                      ,
                                                      
                                                         
                                                            ∂
                                                            U
                                                            (
                                                            X
                                                            )
                                                         
                                                         
                                                            ∂
                                                            
                                                               x
                                                               n
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            ∂
                                                            U
                                                            (
                                                            X
                                                            )
                                                         
                                                         
                                                            ∂
                                                            
                                                               y
                                                               n
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      X
                                                      =
                                                      
                                                         X
                                                         
                                                            (
                                                            g
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          . Let X
                                          (g+1)
                                          =
                                          X
                                          (g)
                                          −
                                          ɛ
                                          ×∇
                                          U(X
                                          (g)).
                                    
                                    
                                       5)
                                       Calculate the distance r
                                          
                                             i,i+1 between all two adjacent amino acids in the conformation X
                                          (g+1). If 
                                             
                                                
                                                   
                                                      
                                                         r
                                                         
                                                            i
                                                            ,
                                                            i
                                                            +
                                                            1
                                                         
                                                      
                                                      −
                                                      1
                                                   
                                                
                                                <
                                                
                                                   
                                                      10
                                                   
                                                   
                                                      −
                                                      5
                                                   
                                                
                                                (
                                                i
                                                =
                                                1,2
                                                …
                                                n
                                                −
                                                1
                                                )
                                             
                                          , then let X′=
                                          X
                                          (g+1) and go to step 8); otherwise let g
                                          =
                                          g
                                          +1 and go to step 6).
                                    
                                    
                                       6)
                                       If g%50,000=0, then go to step 7); otherwise go to step 4).
                                    
                                    
                                       7)
                                       Let k
                                          s
                                          =
                                          k
                                          s
                                          ×1.3, and if k
                                          >2, then let k
                                          =
                                          k
                                          ×0.7; go to step 4).
                                    
                                    
                                       8)
                                       If E(X′)<
                                          E
                                          min, then outputE(X′) and X′;
                                    
                                    
                                       
                                       Else if C
                                          
                                             i
                                           is a tabu object, then
                                    
                                    
                                       
                                       
                                          {If U(X′)<
                                          U
                                          
                                             opt
                                          , then
                                    
                                    
                                       
                                       
                                          
                                          Delete C
                                          
                                             i
                                           from the tabu list, and let U
                                          
                                             opt
                                          
                                          =
                                          U(X′), X
                                          
                                             opt
                                          
                                          =
                                          X′, go to step 9);
                                    
                                    
                                       
                                       
                                          Else go to step 10);}
                                    
                                    
                                       
                                       If C
                                          
                                             i
                                           is not a tabu object, then
                                    
                                    
                                       
                                       
                                          {If U(X′)<
                                          U
                                          
                                             opt
                                          , then let U
                                          
                                             opt
                                          
                                          =
                                          U(X′), X
                                          
                                             opt
                                          
                                          =
                                          X′;
                                    
                                    
                                       
                                       
                                          If U(X′)<
                                          U(X), then go to step 9);
                                    
                                    
                                       
                                       
                                          Else go to step 10).}
                                    
                                    
                                       9)
                                       Accept X′ as the current conformation, let X
                                          =
                                          X′, U(X)=
                                          U(X′), and the term of each tabu object in the tabu list subtracts 1.Release the object whose term is 0, and go to step 12).
                                    
                                    
                                       10)
                                       Do not accept X′, and restore X as the current conformation, let j
                                          =
                                          j
                                          +1 and go to step 11).
                                    
                                    
                                       11)
                                       If j
                                          >5, then set the potential energy of C
                                          
                                             i
                                           be 0, and add C
                                          
                                             i
                                           into the tabu list, and go to step 2); otherwise go to step 3).
                                    
                                    
                                       12)
                                       If t
                                          <100, then let t
                                          =
                                          t
                                          +1 and go to step 2); otherwise execute the local search according to Section 2.8 and output the lowest-energy conformation found and its energy value.
                                    
                                 
                              
                           
                        
                     

@&#RESULTS AND DISCUSSION@&#

In order to evaluate the performance of the proposed algorithm HTS, we test HTS in the 2D AB model for four Fibonacci sequences and two real protein sequences. We implement the algorithm in Java language and run it on a desktop computer with an Intel Core 2 Duo, 2.66GHz processor and 2.0 GB of RAM. For each sequence, we run the HTS algorithm for 50 times independently.

In this section, we describe our experimental results for four Fibonacci sequences, which are usually used as benchmark for the protein structure prediction problem in AB model. A Fibonacci sequence is defined recursively by S
                        0
                        =A, S
                        1
                        =B, S
                           i+1
                        =S
                           i−1*S
                           i
                        , where “*” is the concatenation operator. The first few sequences are S
                        2
                        =AB, S
                        3
                        =BAB, S
                        4
                        =ABBAB, and so forth. They have the lengths given by the Fibonacci numbers n
                        
                           i+1
                        =
                        n
                        
                           i−1
                        +
                        n
                        
                           i
                        . In a Fibonacci sequence, the hydrophobic residues A are isolated singly and the hydrophilic residues B are isolated in pairs or singly, as we can see in Table 1
                        . Following the literature by Hsu et al. (2003), we consider sequences with lengths 13, 21, 34 and 55 in this paper.


                        Table 2
                         lists the lowest energies obtained by the HTS algorithm, along with the results found by new pruned-enriched-Rosenbluth method with importance sampling (nPERMis) (Hsu et al., 2003), annealing contour Monte Carlo algorithm (ACMC) (Liang, 2004), conformational space annealing (CSA) (Kim et al., 2005), statistical temperature annealing (STA) (Kim et al., 2007) and improved energy landscape paving method (ELP+) (Liu et al., 2009) for comparison. From Table 2, we can see that the lowest energies obtained by our algorithm for 13-mer, 21-mer and 34-mer sequences agree perfectly with those by ACMC, CSA, STA. And our result is slightly better than those by nPERMis and ELP+ for the 34-mer sequence. We could almost conclude that the results obtained correspond to the true ground-state energies for these three shorter sequences. It is noteworthy that, so far, we have renewed the lowest energy (shown in bold), which is lower than those by other methods listed in Table 2, for the longest sequence with length 55. For authenticity, we list the coordinates of the lowest-energy conformation obtained by HTS for the 55-mer sequence in Table 3
                        .

The lowest-energy conformations obtained by the HTS algorithm for four Fibonacci sequences are presented in Fig. 3
                        , where the solid dots indicate the hydrophobic monomer A and the empty circles indicate the hydrophilic monomer B. From Fig. 3, it is easy to see that in the conformation of 13-mer sequence, the hydrophobic monomers form a compact hydrophobic core surrounded by the hydrophilic residues outside, while in the conformations of lengths 21, 34, and 55, the hydrophobic monomers tend to form a plurality of beams with typically 4–5 residues, and there is an obvious isolation belt between the hydrophobic residues and hydrophilic ones. All of these can be explained by the fact that the hydrophobic monomers are always flanked by the hydrophilic monomers along the chain.

In order to test the effectiveness of the HTS algorithm in predicting real protein structures, we select protein sequences from Protein Data Bank (PDB, http://www.rcsb.org/pdb/home/home.do) as examples of natural proteins and apply the HTS algorithm to predict their folding structures in the 2D AB model. For the purpose of comparison, we use the same two protein sequences as used in the previous literature, shown in Table 4
                        . The PDB ID of these two protein sequences are 1AGT and 1AHO, respectively. In our experiments, the same K-D method used in the literature by Mount (2001) is adopted to distinguish the hydrophobic residues from hydrophilic ones, where I, V, L, P, C, M, A, G are considered to be A residues and D, E, F, H, K, N, Q, R, S, T, W, Y are B residues.

The computational results obtained by the HTS algorithm for these two real protein sequences are summarized in Table 5
                        , along with the results by simulating annealing (SA) (Zhang and Lin, 2006), particle swarm optimization (PSO) (Liu et al., 2005), multi particle swarm optimization (MPSO) (Zhang et al., 2008), multiple-layer quantum-behaved particle swarm optimization (M-QPSO) (Li et al., 2010) for comparison. From Table 5, we can see that our results are better than those of the other methods for both cases. Fig. 4
                         displays the lowest-energy conformations obtained by our algorithm, where solid dots denote hydrophobic monomers I, V, L, P, C, M, A, G and hollow circles denote hydrophilic monomers D, E, F, H, K, N, Q, R, S, T, W, Y. It is clear that both sequences of 1AGT and 1AHO fold into conformations with multiple hydrophobic cores, surrounded by hydrophilic residues.

@&#CONCLUSION@&#

The objective of the protein structure prediction problem is to find the inherent structure for a given amino acid sequence that initially is widely dispersed. The AB off-lattice model is an improvement of HP lattice model. In spite of the simplicity of AB model, it can still reflect some characteristics of real proteins. In this paper, we describe a heuristic-based tabu search (HTS) algorithm for the protein structure prediction problem based on 2D AB model. Some improved strategies are employed to improve the tabu search (TS) optimization process, including the new definitions of neighborhood conformation, tabu object and acceptance criteria of current conformation. In the improved TS method, inspired by the characteristic of real protein structures, we put forward two heuristic mechanisms, the heuristic initialization mechanism and the heuristic conformation updating mechanism. When the improved tabu search method leads to the basins of local energy minima, a local search mechanism is then proposed to further search for lower-energy conformations near the local minima. To test the performance of our algorithm, we carry out the experiments on four Fibonacci sequences and two real protein sequences. From the experimental results, we can see that the proposed algorithm is feasible and effective for the study of 2D protein structure prediction. In the future, we intend to apply the proposed method to 3D protein structure prediction on all-atom models with realistic potential energies.

@&#ACKNOWLEDGEMENTS@&#

This work is supported by the Natural Science Foundation of Jiangsu Province (Grant No. BK2010570), the National Natural Science Foundation of China (Grant No. 61373016), the Six Talent Peaks Program of Jiangsu Province (Grant No. DZXX-041), Special Foundation of China Postdoctoral Science Foundation (Grant No. 201104572), Jiangsu Planned Projects for Postdoctoral Research Funds (Grant No. 1001030B) and the Priority Academic Program Development of Jiangsu Higher Education Institutions.

@&#REFERENCES@&#

