@&#MAIN-TITLE@&#Modeling flow features with user-guided streamline parameterization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We describe a streamline-based aesthetic feature creation method for product styling.


                        
                        
                           
                           Stroke-based editing handles mimic fluid streamlines.


                        
                        
                           
                           A fast linear method for field-guided parameterization is described.


                        
                        
                           
                           Aesthetic flow-like surface features can be generated with ease.


                        
                        
                           
                           Application results are shown in industrial product design examples.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Constrained mesh parameterization

Vector field

Sketch-based modeling

Streamline

Displacement mapping

@&#ABSTRACT@&#


               
               
                  Streamline-like, free-form features that “flow” on a base shape are often utilized in the design of products ranging from automobiles to everyday consumer products. Providing computational support for the design of such features is challenging, because of the open-endedness of the design explorations involved, and the necessity to rapidly and precisely capture the design intents expressed in very simple forms, such as free-form sketches. We present a novel approach for designing streamline-based, free-form surface features in the context of product design. Using our approach, the user first designs a network of streamlines on the base shape, by performing a stroke-constrained mesh parameterization. Then, the user utilizes these streamlines as a curvilinear scaffold for creating 3D free-form features that are bounded and parameterized by these streamlines. The user is able to apply fine-grained control of the outline, profile and extent of the resulting 3D features by manipulating the streamlines. We demonstrate the capability of this approach on several product models.
               
            

@&#INTRODUCTION@&#

Many shape features in product design can be abstracted as streamline-like features that “flow” on the base shapes. This abstraction encompasses a wide range of geometric features, such as creases, channels, ridges and bulges, which bear critical implications on the aesthetic and ergonomic aspects of the product  [1,2]. They are prevalent in various media and stages in conceptual design. Examples include those shown in Fig. 2.

Developing aesthetically pleasing, streamline-like surface features on product forms has been a long standing challenge in industrial design. Designers approach this challenge by strategically prototyping and evaluating many shape design alternatives, especially in the early conceptual stages  [3]. Computational design tools should support the rapid creation and exploration of such shape features. However, the existing free-form modeling systems, such as parametric surface modeling tools, subdivision modeling tools and mesh sculpting tools, do not cater to such needs. With those tools, the designer will have to rely on indirect and incremental editing metaphors such as parametric control points, or mesh sculpting tools and engage in tedious trial-and-error of shape editing workflow, or distractive workflows such as UV editing and re-topology.

We provide an approach for streamline-based, free-form modeling that enables direct prescription of the desired streamline patterns and shape profiles, the rapid exploration and the fine-grained user control of the resulting shapes.

Our approach is built on “streamlines”. Mathematically, the streamlines refer to the isolines in the 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         parameterization, visualized using a red–blue grid texture. Practically, the streamlines are the geometric scaffold for constructing free-form, 3D features that are aligned, bounded and parameterized by them.

In a typical editing scenario shown in Fig. 1
                        , our system works on a 2-manifold, triangular mesh 
                           M
                        , and alternates between two modes: surface streamline design (Fig. 1(b)) and 3D feature editing (Fig. 1(c)). Both modes are driven by the input strokes drawn by the user.
                     

In the streamline design mode, the user controls the shape of the flow by drawing constraint strokes. The system will populate two sets of isolines over the user-selected region of interest on the base shape. One set, the streamlines, will interpolate the constraint strokes, and vary in between the constraints. The other set, the equipotential set, will be approximately orthogonal to the streamlines. The details are described in Section  3.

In the 3D feature design mode, the user utilizes these streamlines as a curved scaffold to sketch and build 3D free-form features. The user specifies the extremity and profile of the resulting features by drawing outline strokes along the streamlines, and drawing cross-section strokes across the streamlines, respectively. The system deforms the base surface with a displacement map 
                           d
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         parameterized by the streamlines 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                        , such that the created feature interpolates the strokes. The details are presented in Section  4.

Our technical contributions include the construction of smooth surface editing handles through the interactive prescription of characteristic streamlines, a linearized technique for fine-tuning the alignment of the field-guided parameterization, and a streamline-based curvilinear scaffold for unprojecting shape editing sketches and driving 3D free-form feature creation.

@&#RELATED WORK@&#

The construction of on-surface streamlines pertains to mesh parameterization. Research on surface mesh parameterization has generated a large body of literature. For a review of the progress in this field, we refer to several survey papers  [4–7].

Our method is built on field-guided mesh parameterization. This family of methods aims to compute a global, piece-wise linear parameterization from a guidance vector field pre-computed for each triangle 
                        t
                      in the mesh 
                        M
                     . Mathematically, the unknowns to be solved are the 
                        
                           (
                           u
                           ,
                           v
                           )
                        
                      coordinates for each vertex, and they are the minimizers for the variational problem 
                        
                           (1)
                           
                              
                                 
                                    min
                                 
                                 
                                    u
                                    ,
                                    v
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    t
                                    ∈
                                    M
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          ‖
                                          
                                             
                                                τ
                                             
                                             
                                                t
                                             
                                          
                                          −
                                          ∇
                                          
                                             
                                                u
                                             
                                             
                                                t
                                             
                                          
                                          ‖
                                       
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       
                                          ‖
                                          J
                                          
                                             
                                                τ
                                             
                                             
                                                t
                                             
                                          
                                          −
                                          ∇
                                          
                                             
                                                v
                                             
                                             
                                                t
                                             
                                          
                                          ‖
                                       
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              
                                 
                                    w
                                 
                                 
                                    t
                                 
                              
                              ,
                           
                        
                      where 
                        ∇
                      is the face-wise gradient operator  [6], 
                        
                           
                              τ
                           
                           
                              t
                           
                        
                      is a tangent guidance vector usually computed to follow the principal curvature directions, 
                        J
                        
                           
                              τ
                           
                           
                              t
                           
                        
                      is the rotation of 
                        
                           
                              τ
                           
                           
                              t
                           
                        
                      by 
                        π
                        /
                        2
                     , and 
                        
                           
                              w
                           
                           
                              t
                           
                        
                      is a weighting factor proportional to the area of face 
                        t
                     . 
                        
                           
                              u
                           
                           
                              t
                           
                        
                      and 
                        
                           
                              v
                           
                           
                              t
                           
                        
                      represent the 
                        u
                        ,
                        v
                      coordinates of vertices belonging to face 
                        t
                      on the mesh.

This is a well studied objective function  [8–11,7]. It minimizes the misalignment between the gradient directions of 
                        u
                        ,
                        v
                      and the guidance vector. However, the objective alone is insufficient to generate isolines aligned with the constraint strokes: the isometry of the objective tends to create uniformly spaced isoline grids, and deviate the isolines away from the constraints. Several remedies have been proposed to break isometry and improve alignment with the constraints, though at the cost of computational efficiency [12,11], linearization assumption  [8], user intervention  [10], or reduced user interaction such as processing a single stroke only  [13].

Streamline design is the first step of our shape editing work-flow. As illustrated in Fig. 1(b), this step does not entail any shape modification, but generates the geometric scaffold that supports subsequent editing. We compute the streamlines by a constrained, field-guided mesh parameterization described below. The variables to be determined are the 
                        
                           (
                           u
                           ,
                           v
                           )
                        
                      parameters for each vertex in 
                        M
                     . To produce streamlines suitable for aesthetic design, we seek to align streamlines maximally to the user-drawn constraints, and avoid singularities such as sinks, sources or vortex centers.

In Fig. 3
                        (a), we first sample the user constraint strokes as polylines, and project them onto 
                           M
                         to find the intersections with the edges. In Fig. 3(b), the constraints computed include the tangent direction 
                           τ
                         of the segment contained within each face, and the intersection 
                           p
                        .

We then follow the approach of trivial connections  [14], a particularly efficient and robust method, to compute a discrete, face-wise, tangent vector field 
                           
                              
                                 τ
                              
                              
                                 t
                              
                           
                           ,
                           t
                           ∈
                           M
                         per the directional constraints. For each face within a disc-like region selected by the user, we compute a directional vector via constrained linear least squares to ensure that the resulting field varies minimally and smoothly. To avoid singularities, we insert a phantom vertex connected to all the boundary vertices of the disc region, to form a topological sphere. We then assign a singularity index of 2 to the phantom vertex to concentrate the unavoidable singularity away from the surface, because the Poincaré–Hopf Theorem maintains that the total singularity of a vector field on the sphere is 2. See Fig. 6 for an example of the constraints and the resulting vector field.

Our goal here is to compute a piece-wise linear parameterization from the guidance vector field. The unknowns are the 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         coordinates of each vertex, and are computed by 
                           
                              (2)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          u
                                          ,
                                          v
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          t
                                          ∈
                                          M
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                ‖
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      t
                                                   
                                                
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      t
                                                   
                                                
                                                −
                                                ∇
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      t
                                                   
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             
                                                ‖
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      t
                                                   
                                                
                                                J
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      t
                                                   
                                                
                                                −
                                                ∇
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      t
                                                   
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    
                                       
                                          w
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              
                                 
                                    s.t.  
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                    ∀
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                    ∈
                                    the same constraint stroke .
                                 
                              
                           
                         The notation is similar to the parameterization objective (Eq. (1)) reviewed in Section  2. Here we have made the following two additions to this equation to adapt to our application scenario.

Firstly, we have added a face-wise scaling factor 
                           
                              
                                 s
                              
                              
                                 t
                              
                           
                         to scale the length of each guidance vector, to reduce the curl of the field which is non-integrable and causes a residual misalignment between the smooth vector field and the parameterization. The discrete curl  [15] of 
                           τ
                         at each shared edge 
                           
                              
                                 e
                              
                              
                                 i
                                 j
                              
                           
                         in Fig. 3(b) is 
                           
                              (3)
                              
                                 curl
                                 
                                    
                                       
                                          (
                                          
                                             
                                                τ
                                             
                                             →
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             e
                                          
                                          
                                             i
                                             j
                                          
                                       
                                    
                                 
                                 =
                                 −
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                 
                                 ⋅
                                 
                                    
                                       e
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 +
                                 
                                    
                                       τ
                                    
                                    
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       e
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ,
                              
                           
                         which suggests that by scaling 
                           
                              
                                 τ
                              
                              
                                 i
                              
                           
                         per the ratio of its projection onto 
                           
                              
                                 e
                              
                              
                                 i
                                 j
                              
                           
                         and that of 
                           
                              
                                 τ
                              
                              
                                 j
                              
                           
                        , the curl at 
                           
                              
                                 e
                              
                              
                                 i
                                 j
                              
                           
                         will be canceled locally. Globally, however, we can only hope to minimize, rather than completely cancel the total curl of the vector field. To do so, we model the scaling factor 
                           
                              
                                 s
                              
                              
                                 i
                                 j
                              
                           
                         on edge 
                           
                              
                                 e
                              
                              
                                 i
                                 j
                              
                           
                         such that 
                           
                              (4)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ,
                                          j
                                          ∈
                                          M
                                       
                                    
                                    
                                       
                                          
                                             ‖
                                             
                                                
                                                   s
                                                
                                                
                                                   i
                                                   j
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ⋅
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ⋅
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                             
                                             ‖
                                          
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              
                                 
                                    s.t.  
                                    
                                       
                                          Π
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          s
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    1
                                    ,
                                    
                                    ∀
                                      vertices  
                                    j
                                      adjacent to vertex  
                                    i
                                    .
                                 
                              
                           
                         The product constraint ensures the global consistency of the scaling factors, such that any path between two faces will accumulate the same amount of scaling. We solve for 
                           log
                           
                              
                                 s
                              
                              
                                 i
                                 j
                              
                           
                         instead of 
                           
                              
                                 s
                              
                              
                                 i
                                 j
                              
                           
                         to obtain a linear system, that is 
                           
                              (5)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          M
                                       
                                    
                                    
                                       
                                          
                                             ‖
                                             log
                                             
                                                
                                                   s
                                                
                                                
                                                   i
                                                   j
                                                
                                             
                                             −
                                             log
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            τ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ⋅
                                                      
                                                         
                                                            e
                                                         
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            τ
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      ⋅
                                                      
                                                         
                                                            e
                                                         
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             ‖
                                          
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              
                                 
                                    s.t.  
                                    
                                       
                                          Σ
                                       
                                       
                                          j
                                       
                                    
                                    log
                                    
                                       
                                          s
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    0
                                    ,
                                    
                                    ∀
                                      vertices  
                                    j
                                      adjacent to vertex  
                                    i
                                    .
                                 
                              
                           
                         After solving for the edge-wise scaling factors 
                           
                              
                                 s
                              
                              
                                 i
                                 j
                              
                           
                        , we recover the face-wise scaling factor 
                           
                              
                                 s
                              
                              
                                 t
                              
                           
                         by traversing the mesh, and multiplying the scaling factors when crossing an edge. Fig. 4
                         shows the effect of curl minimization on reducing the directional mismatch between the parameterization and the guidance vector field.

The vector field computed may contain curl irremovable by scaling, and solving Eq. (5) may result in large scaling factors. We therefore restrict the scaling factors to 
                           
                              [
                              
                                 
                                    1
                                 
                                 
                                    5
                                 
                              
                              ,
                              5
                              ]
                           
                         which is the typical range of the gradient magnitudes for a number of smooth parameterization that we reverse-engineered. Additionally, the user can choose to fall back to an un-scaled version where 
                           
                              
                                 s
                              
                              
                                 t
                              
                           
                           =
                           1
                           ,
                           t
                           ∈
                           M
                        .

Secondly, we add the equality constraints to explicitly enforce the alignment between the streamlines and the constraint strokes. For instance, in Fig. 3(b), the intersections between the mesh edges and the constraint stroke, namely points 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 i
                                 j
                              
                           
                        , are constrained to the equal 
                           u
                         coordinates. This requires expressing the value 
                           
                              
                                 u
                              
                              
                                 i
                              
                           
                         of edge point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         in terms of the 
                           u
                         of the vertices, and trivially translates into a linear, barycentric interpolation.


                        Fig. 5
                         shows several synthetic examples of the streamlines generated with different combinations of constraints. In all cases, the streamlines interpolate the constraint strokes up to numerical precision. Fig. 6
                         shows several examples of streamlines created on the curved surface of a shampoo bottle.

We summarize the total time taken from the constraint processing to completion of the parameterization on several models in Table 1
                        , and the results compare favorably with the reported performance of existing works such as conjugate direction field  [11], but not on par with the single stroke parameterization of  [13]. This performance difference represents a trade-off between functionality (handling multiple constraint strokes) versus simplicity (handling one input constraint stroke).

First, we use the streamlines on the surface as a curved scaffold, and perform the stroke unprojection with their aid, as illustrated in Fig. 7
                        . We first unproject the end points of the editing stroke to the surface, and select the closest streamline as the source curve. We then extrude each point 
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                         on the source curve along a user-customizable direction 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                        , and create a quad strip. This quad strip serves as a curved scaffold, upon which we project the entire editing stroke, and resolve their 3D locations in the model space. We label the resulting 3D points the target 
                        
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                        . Finally, we compute 
                           t
                           −
                           s
                        , the local displacement induced by the editing stroke, which we will propagate throughout the region of interest in Section  4.2.

In this step, the local edits induced by the editing stroke (
                           t
                           −
                           s
                        ) are propagated globally along the streamlines, in the form of a procedural displacement map. During the propagation, the magnitude of the displacement vector is adjusted per a fall-off function which controls the cross-section profile of the resulting free-form feature. Unlike the existing sketch-based modeling systems that base the fall-offs on the geodesic distance on the surface, or a global energy functional  [16], we compute the fall-off in the 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         space spanned by the streamlines. The resulting features will flow along the user-designed streamlines, rather than following intrinsic geometric traces such as the lines of curvature or geodesics. The displacement scalar 
                           d
                         of a vertex with parameters 
                           
                              (
                              u
                              ,
                              v
                              )
                           
                         is determined by 
                           
                              (6)
                              
                                 d
                                 
                                    (
                                    u
                                    ,
                                    v
                                    )
                                 
                                 =
                                 
                                    
                                       d
                                    
                                    
                                       u
                                    
                                 
                                 
                                    (
                                    u
                                    )
                                 
                                 
                                    
                                       d
                                    
                                    
                                       v
                                    
                                 
                                 
                                    (
                                    v
                                    )
                                 
                                 ,
                                 
                                 ∀
                                 u
                                 ∈
                                 
                                    [
                                    −
                                    1
                                    ,
                                    1
                                    ]
                                 
                                 ,
                                 v
                                 ∈
                                 
                                    [
                                    −
                                    1
                                    ,
                                    1
                                    ]
                                 
                                 ,
                              
                           
                         such that two 1D fall-off functions 
                           
                              
                                 d
                              
                              
                                 u
                              
                           
                         and 
                           
                              
                                 d
                              
                              
                                 v
                              
                           
                        , adjustable by the user, jointly control the displacement.


                        Fig. 8
                         showcases a variety of free-form features generated using our approach. By allowing various combinations of streamline patterns and displacement maps, we provide the user with flexibility in various design scenarios.

Displacement map is not the only surface editing technique compatible with the streamlines. Any deformation approach that relies on a pair of source and target curves to drive the deformation is suitable. We choose displacement map here due to its closed form and efficiency.

We showcase several design examples with complex free-form features created from minimal user inputs. Fig. 9
                     (b) shows our system utilized in the design of an asymmetric mouse, which features a number of smooth and semi-smooth creases that flow through the shape. Fig. 9(a) shows our system utilized for the design exploration of shampoo bottles. Our system follows the conventional, pen-and-paper design work-flow that has led to the 2D design sketches in the first column, and extends the design into the 3D space. Finally, we showcase another car design session in Fig. 10
                     .

We have developed a novel, streamline-based shape editing system intended for streamline-like features that flow on a base shape, such as creases, ridges, and valleys. It has several advantages, including the ease of use, fine-grained user control of the outline, profile and extent of the resulting features, and the capability to explore the shape design space along such dimensions. Our design case studies have initially demonstrated the potential of this method.

Current limitations of our system include the lack of support for designing streamline fields with intended singularities such as sources and vortices, and artifacts when working with a low-density input mesh.

@&#REFERENCES@&#

