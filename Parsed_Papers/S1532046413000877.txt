@&#MAIN-TITLE@&#Interestingness measures and strategies for mining multi-ontology multi-level association rules from gene ontology annotations for the discovery of new GO relationships

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This study describes a data mining algorithm for the discovery of new gene ontology relationships.


                        
                        
                           
                           This study presents new interestingness metrics for multi-ontology multi-level relationships.


                        
                        
                           
                           Cross-ontology relationships offer GO co-annotation candidates and cross-ontology connections.


                        
                        
                           
                           Our results indicate that our methods outperform QuickGO in generating co-annotation suggestions.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Gene ontology

Association rule mining

Data mining

Interestingness measures

Gene ontology relationships

Interpro relationships

@&#ABSTRACT@&#


               
               
                  The Gene Ontology (GO), a set of three sub-ontologies, is one of the most popular bio-ontologies used for describing gene product characteristics. GO annotation data containing terms from multiple sub-ontologies and at different levels in the ontologies is an important source of implicit relationships between terms from the three sub-ontologies. Data mining techniques such as association rule mining that are tailored to mine from multiple ontologies at multiple levels of abstraction are required for effective knowledge discovery from GO annotation data. We present a data mining approach, Multi-ontology data mining at All Levels (MOAL) that uses the structure and relationships of the GO to mine multi-ontology multi-level association rules. We introduce two interestingness measures: Multi-ontology Support (MOSupport) and Multi-ontology Confidence (MOConfidence) customized to evaluate multi-ontology multi-level association rules. We also describe a variety of post-processing strategies for pruning uninteresting rules. We use publicly available GO annotation data to demonstrate our methods with respect to two applications (1) the discovery of co-annotation suggestions and (2) the discovery of new cross-ontology relationships.
               
            

@&#INTRODUCTION@&#

The use of biomedical ontologies for annotation of experimental data has exploded with the advent of modern high throughput technologies for genomics, transcriptomics, and proteomics. The Gene Ontology (GO), one of the most well developed and widely used of the bio-ontologies, is a collection of three sub-ontologies: Molecular Function, Cellular Component and Biological Process. Extensive and constantly growing repositories of GO annotated gene products provide valuable resources for mining co-annotation patterns among GO concepts. These co-occurrence patterns can be utilized to annotate new gene products, to learn inter-ontology relationships, and for many other applications. Association rule mining is a widely used data mining approach for discovering patterns and relationships between variables from data [1] and has been used for mining relationships from the GO by a number of research groups [2–6]. However, most of this research ignores the ontology structure of the GO [2,7] and/or does not deal with issues encountered in cross-ontology data mining [4,6]. Association rule mining extracts implicit relationships between items from a set of transactions T
                     ={t
                     1, t
                     2,…,
                     tn
                     } where each transaction is a set of one or more co-occurring items [1]. In our research, each transaction is a gene and the items are GO terms from the three sub-ontologies assigned to that gene. An association rule is defined as an implication of the form x
                     →
                     y where x (the antecedent) and y (the consequent) are disjoint subsets of items. Association rules mined at multiple levels of abstraction from data represented using a domain ontology are called multi-level association rules [8,9]. While multi-level association rules have typically been mined from data represented using a single ontology, they can also be mined from data represented using multiple ontologies resulting in multi-ontology multi-level (MO_ML) rules. We present a method called Multi-ontology data mining at All Levels (MOAL) for mining association rules from GO annotation data. MOAL utilizes the structure and semantics of the GO, uses interestingness measures tailored for rules mined from multiple ontologies at multiple levels of abstraction, and employs pruning strategies for removing closely related, irrelevant, or known rules.

Key innovations in the MOAL approach are the combined use of (1) derivation of all annotations implied by transitive relationships in the GO prior to rule mining; (2) modified definitions of the commonly used interestingness metrics of support and confidence for more appropriate calculations of background probabilities for multi-ontology rules; and (3) pruning strategies that focus on cross-ontology rules, remove rules closely related via ancestor relationships, remove general versions of a rule when a specific version is also mined, remove rules containing terms belonging to the same InterPro model and consolidate symmetric rules.

We demonstrate the utility of MOAL for mining annotation data for two tasks: (1) generating GO annotation candidates and (2) deriving new relationships between terms in the three sub-ontologies of the GO. We show that our method for generating and ranking annotation candidates produces more suggestions for annotations and provides more informative interestingness measures compared to the widely used QuickGO approach [10]. Previous approaches for discovering or verifying relationships between terms in the GO have focused on single ontology rules [4] or have used logical extensions or lexical analysis and are thus dependent on known relationships or lexical similarities of terms [5,11]. We demonstrate that our method can be used to produce interesting cross ontology rules that both verify known relationships and suggest new relationships not likely to be suggested by lexical analysis.

@&#METHODS@&#

Multi-ontology data mining at All Levels (MOAL) is a general approach that can be applied to any type of data where domain objects are described using concepts from ontologies structured as hierarchies or directed acyclic graphs (DAGs) and where the goal is to discover relationships among the concepts. Our experimental datasets consist of genes from a single species annotated using the three sub-ontologies of the Gene Ontology (GO). In these data sets, each gene product is treated as a transaction and items in the transaction are the GO terms assigned to that gene product. The algorithm consists of three main steps: (1) generalization of the transaction set based on transitive relationships and rule mining, (2) assessment and ranking of the rules using interestingness metrics, and (3) pruning of highly related or known rules. Each of these steps is discussed in the following sections.

The first step in the MOAL process is to create generalized transactions by supplementing every concept in a transaction with all ancestors in its ontology via transitive relationships such as is-a and part-of. Duplicate concepts are removed from transactions after the generalization process. This is similar to the approach of Vincent et al. [6] who generalize GO terms to all their ancestors via any relationship in the GO. However, MOAL uses only is-a and part-of relationships in the generalization and does not use non-transitive relationships. Unlike level-by-level generalization methods [12], MOAL requires only a single round of association rule mining.

The generalized transactions are mined using Christian Borgelt’s implementation of the Apriori algorithm to generate MO_ML association rules [13]. Traditional measures of support and confidence are used to compute interestingness thresholds. The support of a rule x
                        →
                        y is the probability of concepts x and y occurring together in a set of transactions and the confidence of rule x
                        →
                        y is the probability of observing y given that x has occurred. In addition, Christian Borgelt’s implementation also uses a p-value threshold computed using the Chi-square test. The Chi-square test measures the probability that an association rule could be observed due to chance. After generating the initial set of rules from the generalization process, MOAL employs a suite of post-processing strategies to prune uninteresting rules.

The initial mining step is conducted with relaxed thresholds for standard interestingness measures (support, confidence and a p-value threshold for the Chi-square test). This provides an initial, but very large, set of MO_ML rules. We then apply a set of interestingness measures tailored for multi-level multi-ontology rules for ranking and further pruning.

Multi-ontology multi-level association rules are mined from transactions with concepts at varying levels of abstraction from multiple ontologies. Interestingness measures typically use the entire set of transactions as the background to compute the interestingness of a rule. For example, the support of a rule x
                        →
                        y is calculated as (X
                        ∩
                        Y)/T. where X and Y are the sets of transactions containing concepts x and y respectively and the size of the entire transaction set serves as the background. Likewise, the background for the confidence of a rule x
                        →
                        y is the set of transactions containing x. However, in the case of MO_ML rules, not all transactions in the dataset necessarily contain annotations from all three sub-ontologies of the GO. This is usually due to a lack of biological knowledge. A transaction that does not contain any annotations from an ontology cannot contribute to generating a multi-ontology rule involving the ontology in question. Therefore, in the case of MO_ML rules, we restrict the background to the subset of transactions that contain terms from all of the ontologies involved in the rule.

We have developed two multi-ontology interestingness measures designed to address this issue: Multi-ontology Support (MOSupport) and Multi-ontology Confidence (MOConfidence). These measures are adapted from the traditional definitions of support and confidence. Multi-ontology support is the probability of the two terms in the rule occurring together in the transaction background of the rule. Multi-ontology confidence of a rule is the probability of observing the consequent term given that the antecedent term is present in the transaction background of the rule.

MO_ML rules can be categorized into two types: cross-ontology multi-level (CO_ML) rules and same-ontology multi-level (SO_ML) rules. In a CO_ML rule of the form x
                        →
                        y, x and y belong to different ontologies whereas in a SO_ML rule, x and y belong to the same ontology. The background for MOSupport and MOConfidence are computed differently for CO_ML and SO_ML rules. For cross ontology (CO_ML) rules, the subset of transactions with at least one annotation from both ontologies in the rule serves as the background to compute MOSupport and MOConfidence. For SO_ML rules, the subset of transactions with at least two annotations from the specified ontology in the rule serves as the background.

The following subsets of the transaction set are used in the definitions of multi-ontology support and multi-ontology confidence.
                           
                              1.
                              
                                 Xx→y
                                  is the set of transactions containing x and at least one term from the ontology of y. For an SO_ML rule, it is the set of transactions containing x and at least one other term from the ontology of y.


                                 Yx→y
                                  is the set of transactions containing y and at least one term from the ontology of x. For an SO_ML rule, it is the set of transactions containing y and at least one other term from the ontology of x.


                                 MOCategoryx→y
                                  is the set of transactions containing at least one term from the ontology of x and one term from the ontology of y. In the case of an SO_ML rule, MOCategoryx→y
                                  is the set of transactions containing at least two terms from the ontology of x.


                                 XYx→y
                                  is the set of transactions containing both x and y.

Note that these sets of transactions are extracted after generalization. Formal definitions of these sets are included in the Supplementary files (Formal Definitions.doc).
                           
                              1.
                              Multi-ontology support

The Multi-ontology Support (MOSupport) of a MO_ML rule, x
                        →
                        y is defined as


                        
                           
                              
                                 
                                    
                                       MOSupport
                                    
                                    
                                       x
                                       →
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       |
                                       
                                          
                                             XY
                                          
                                          
                                             x
                                             →
                                             y
                                          
                                       
                                       |
                                    
                                    
                                       |
                                       
                                          
                                             MOCategory
                                          
                                          
                                             x
                                             →
                                             y
                                          
                                       
                                       |
                                    
                                 
                              
                           
                        
                        
                           
                              2.
                              Multi-ontology confidence

The Multi-ontology Confidence (MOConfidence) of a MO_ML rule, x
                        →
                        y is defined as


                        
                           
                              
                                 
                                    
                                       MOConfidence
                                    
                                    
                                       x
                                       →
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      XY
                                                   
                                                   
                                                      x
                                                      →
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      x
                                                      →
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

One challenge in utilizing the results of association rule mining is the very large number of rules that are generated. This problem is exacerbated with generalized transactions because many highly related rules are generated. MOAL incorporates the following different pruning strategies for use in different applications that utilize knowledge of the domain ontology.
                           
                              a.
                              
                                 Ancestor rules: Rules may be generated where the antecedent and the consequent have an ancestor/descendant relationship. This information is already captured in the gene ontology and is therefore redundant and these rules are pruned.


                                 Generalized rules: In some cases, both general and specific versions of a rule are derived. We prune the more general rule if it is not substantially more interesting than the more specific rule. Specifically, if the result set contains a rule of the form x
                                 →
                                 y then rules of the form x
                                 →
                                 Ancestor(y), Ancestor(x)→
                                 y and Ancestor(x)→
                                 Ancestor(y) are pruned unless the confidence of the general rule is greater than the confidence of the more specific rule by a user-specified increment. In our experiments, we use a MOConfidence increment of 0.10.


                                 Same ontology rules: In applications where we are only interested in discovery of new relationships between terms in different ontologies (cross-ontology rules), we discard all rules where the antecedent and consequent belong to the same ontology.


                                 Same InterPro family rules: A substantial number of the annotations in our datasets are assigned using computational methods such as InterProScan [14]. InterPro curators annotate InterPro models with GO terms [15]. When new gene or protein sequences are being annotated, the InterProScan tool is often used to match InterPro models and assign the associated GO annotations terms. Cross-ontology relationships between GO terms that belong to the same InterPro model may not be useful in some applications because the co-occurrence is already captured in the annotation of the model. This will often be the case when the annotation database is a multi-species database where the same gene or gene family may be represented many times.


                                 Existing cross-ontology rules: The GO sub-ontologies contain cross-ontology relationships in the form of inter-ontology parent–child relations and cross-product definitions. Cross-ontology rules that represent existing cross-ontology connections in the GO can be discarded because they only confirm information that is already explicitly represented in the GO structure.


                                 Symmetric rules: In some applications, the directionality of the rule is not important. In these cases, if x
                                 →
                                 y and y
                                 →
                                 x are both in the result set, only x,
                                 y will be retained. The associated support for x, y is calculated as min(MOSupport(x
                                 →
                                 y),
                                 MOSupport(y
                                 →
                                 x)), confidence as min(MOConfidence(x
                                 →
                                 y),
                                 MOConfidence(y
                                 →
                                 x)) and p-value as max(p-value(x
                                 →
                                 y),
                                 p-value(y
                                 →
                                 x)).

@&#RESULTS@&#

In the experiments described below, we evaluate the effectiveness of the MOAL post processing strategies and demonstrate the use of MOAL in two different applications.

In order to evaluate the effectiveness of the MOAL post-processing strategies, we show the effect of each pruning step on rules mined from annotation datasets for three different species. Publicly available GO annotation datasets for all evidence codes (chicken downloaded as of 2/9/11, mouse downloaded as of 12/12/11 and human downloaded as of 13/6/12) were downloaded from AgBase [16], a website that provides gene annotations for animal and agricultural plant gene products. Each gene and its associated GO annotations from the three GO sub-ontologies form a single transaction in the dataset. Initial mining was conducted with thresholds for the standard interestingness measures of 0.005 for support, 0.05 for confidence and 0.01 for p-value. We applied the pruning strategies discussed in Section 2.3 to the resulting rule set sequentially. This rule set is then further evaluated using MO_ML interestingness measures. The pruning strategies reduced the number of rules from chicken, human and mouse datasets by 93.67%, 91.52% and 93.12% respectively as shown in Table 1
                        .

Association rules mined from GO annotation data can be utilized in different types of applications such as mining relationships between tissue-specific expression and GO function, or relationships between anatomical locations and GO function [6,17,18]. We demonstrate the application of our mining method for suggesting new annotation candidates and for discovering cross-ontology relationships across the GO sub-ontologies [5].

MOAL can be used to provide automated assignment of annotations to gene products or to provide annotation candidates for biocurators doing manual annotation. For example, if a biocurator has assigned a GO term x to a gene product, a rule x
                           →
                           y offers y as a candidate for co-annotation. Biocurators assign GO terms to gene products using the most detailed level of available knowledge and thus would typically find specific annotation candidates more useful than abstract candidates. Our ‘Generalized Rules’ pruning strategy discussed in Section 2.3 prunes all general versions of a rule and thus provides the most specific annotation candidates available for any antecedent. Multi-ontology support and multi-ontology confidence values are indicators of the usefulness of the candidate. These rules provide annotators with a mechanism for leveraging the work of other biocurators and serve as a quality-checking tool for their annotations.

QuickGO at the European Bioinformatics Institute [10] provides a list of co-occurring GO terms for each GO term in their annotation database and this facility is utilized by biocurators to suggest additional GO annotations. For a GO term selected by the user (selected term), QuickGO provides a list of GO terms (compared terms) that co-occur in their annotation database. The co-occurring terms can be obtained from all annotations or only from non-IEA annotations. The compared terms are ranked using S% (Probability similarity ratio) and PR. S% is the “Ratio of probability of both terms to probability of either term” and PR is the “Ratio of probability of compared term given selected term to probability of compared term” 
                           [10]. QuickGO displays the top 100 compared terms sorted by their S% value.

In order to evaluate our method, we compared the annotation suggestions generated by our method to the co-occurring terms generated by the QuickGO approach. For this application, we use MOConfidence as our primary interestingness metric. For a rule of the form x
                           →
                           y, x corresponds to the QuickGO “selected term” and y corresponds to the QuickGO “compared term”. If an annotator has assigned a term x to a gene product, they want to know which other terms often co-occur with term x.

We compared our multi-ontology rules with the co-occurrence terms generated by the QuickGO approach. Note that the co-occurrence terms were not obtained from QuickGO but generated by applying QuickGO’s methods to our annotation datasets. Both approaches were used to identify candidate annotations from two datasets: the mouse GO annotation dataset with all annotations and the mouse GO annotation dataset with only non-IEA annotations. We used a support threshold of 0.005, a confidence threshold of 0.05 and a p-value cut-off of 0.01 to mine the MO_ML rules from the annotations with and without IEA annotations. We pruned general rules and ancestor rules and then applied a 5% MOConfidence threshold on the resulting rules to generate the MO_ML rules used in this comparison. We applied a 5% threshold on the S% metric for the co-occurring terms discovered using QuickGO’s approach from both datasets. Table 2
                            compares the number of co-annotation suggestions discovered by both approaches for the datasets with and without IEA annotations. MOAL generates approximately nine times as many co-annotation candidates from all annotations as the QuickGO approach. MOAL also generates substantially more co-annotation candidates from non-IEA annotations than the QuickGO approach. In addition to generating more co-annotation candidates, MOAL generates candidates for more terms than QuickGO for both datasets. The second row in Table 2 shows that MOAL generates co-annotation suggestions for 3715 antecedents from all annotations while QuickGO generates co-occurring terms for only 1608 antecedents from the same data. For non-IEA annotations, MOAL generates co-annotation suggestions for 256 antecedents as compared to 160 antecedents by QuickGO’s method. The reason for this difference is that MOAL generalizes the annotations and generates co-annotation candidates for the generalized terms along with the original annotations in the datasets as shown in Table 2. QuickGO generates co-occurring terms only for the original annotations in the dataset and therefore cannot discover co-annotation candidates with generalized antecedents or consequents even though these can be inferred by true path rule of the GO. All the co-annotation candidates discovered by MOAL from the mouse annotation dataset have been reported in Supplementary files (Co-annotation-Candidates.txt).

We conducted an experiment to demonstrate that MOAL generates more co-annotation candidates as compared to QuickGO at varying thresholds of MOConfidence for MOAL and S% for QuickGO. The mouse dataset with all annotations was used for this experiment. Fig. 1
                            shows that MOAL outperforms QuickGO in the number of discovered co-annotations at multiple thresholds of S% and MOConfidence.

We also compared the number of co-annotation candidates generated by MOAL and QuickGO from all annotations for 15 specific antecedents. These antecedents were selected with uniform probability from the antecedents with the highest MOConfidence. The results in Table 3
                            show that MOAL typically discovers about twice as many candidates as the QuickGO approach.

Another application of the rules discovered by our mining approach is automated discovery of cross-ontology relationships between the three sub-ontologies of the GO. These relationships can be used to add new connections between the three sub-ontologies of the GO.

Cross-ontology relationships discovered by MOAL are supported by the annotation data and can supplement the existing cross products in the GO thereby leading to better connectivity between the three sub-ontologies. Note that we are mining from the genes for a single species and not from a multi-species database. Therefore our support and confidence values are lower than those used by researchers who are mining from a multi-species database where orthologous genes that are likely to have similar annotations may occur many times.

We mine cross-ontology relationships from generalized mouse GO annotations with all evidence codes. Thresholds of 0.005 for support, 0.20 for confidence and 0.01 for p-value were used in the mining. General, existing GO cross-ontology and same InterPro model rules were pruned to remove relationships that represent previously known knowledge. Table 4
                               presents example cross-ontology relationships mined by MOAL from the mouse GO annotation data. These rules were selected with a uniform probability from the set of rules with a MOConfidence of 0.80 or greater. The cross-ontology rule category refers to the sub-ontology of the GO for the antecedent: BP for Biological Process, MF for Molecular Function, and CC for Cellular Component. All the cross-ontology relationships mined have been reported in Supplementary files (Cross-ontology-Relationships.txt).

A considerable number of annotations used in our dataset are assigned using computational methods such as InterProScan. The InterPro database is a collection of predictive protein signatures that are grouped into InterPro entries [15]. Unlike other GO annotation efforts, InterProScan curators annotate InterPro entries and not individual genes/proteins [15]. Protein/gene sequences are subsequently matched to one or more InterPro entries and are assigned annotations associated with the matched InterPro model. Note that a single InterPro model might be used to annotate a vast number of genes. In this case, the GO annotations for the genes cannot be considered independent since they originate from a common InterPro model [15]. In order to account and correct for this bias, we mine cross-ontology relationships from GO terms annotated to InterPro models. Unlike the results of the previous experiments, each InterPro model has been derived from multiple species rather than a single species. The InterPro2GO annotation file, a mapping between InterPro entries and GO terms, is used as the dataset to mine new cross-ontology relationships. A single InterPro model/entry is considered as a transaction as opposed to individual genes in this mining process. MOAL is used to generalize all GO annotations in an InterPro model. Same ontology rules and general rules are pruned in addition to existing GO cross-ontology relationships. Table 5
                               presents the cross-ontology relationships mined from the mouse GO annotation data and MOConfidence of 0.70 or greater.

@&#DISCUSSION@&#

Data mining approaches that can handle annotations from multiple ontologies in the context of the structure, semantics and relations of the ontologies are required in order to discover implicit relationships present in annotation data. Our data mining approach, MOAL, generalizes all concepts in a single step and mines interesting implicit relationships from data annotated using multiple ontologies. Unlike Vincent et al. [6], MOAL uses the semantics of ontology relations to guide generalization and makes complete and sound inferences on the abstraction of ontological concepts. Additionally, MOAL does not rely on the depth of ontology concepts to guide generalization since the depth of ontology terms is not an accurate indicator of their specificity [19].

The most widely used approach for adapting interestingness measures for multi-level rules is to use multiple support thresholds for different levels [6,8,9,20]. However, it is very difficult to determine appropriate thresholds for different levels especially for extensive ontologies like the GO. This becomes even more complicated when mining from multiple ontologies necessitating selection of different support thresholds for each level in each of the ontologies. The GO sub-ontologies differ in the number of terms, depth, distribution of the terms across different levels of the sub-ontologies, and the number of gene products annotated. For example, MF has 10,948 terms while CC has 3255 and BP has 24,291 terms (as of 6/13/12) and the substantial differences in distribution across levels is shown in Fig. 2
                     . Previous studies mining relationships from GO annotations use traditional interestingness measures that are inappropriate for relationships from multiple ontologies to rank/quantify the mined rules [2,4–7,10]. In contrast, MOAL uses interestingness measures suited for multi-ontology relationships. Further comparisons to the QuickGO S% metric are discussed below.

One drawback of using generalization prior to mining is the large number of related rules that are generated. The results in Table 1 demonstrate that our pruning strategies are effective in substantially reducing the number of rules generated that must be considered. Different pruning strategies are appropriate for different applications as demonstrated in the two applications we consider.

In the application for suggesting candidate annotations, we are interested in both same ontology and cross-ontology annotations and therefore we do not prune cross-ontology rules. The results shown Table 2 and Fig. 1 demonstrate that MOAL produces more candidate annotation suggestions over a wide range of thresholds and provides suggestions for more antecedents. This is explained by the fact that QuickGO does not use information captured in the structure and relationships of the GO because it uses no generalization. This limitation is illustrated in Fig. 3
                     . A rule x
                     →
                     y may not meet support and confidence thresholds, but a more general form of the rule; t1→
                     t2 may meet these thresholds. These general rules are discovered by MOAL but not by QuickGO.

There are also substantial differences in the interestingness metrics used by MOAL and QuickGO. MOConfidence is the major metric used by MOAL. QuickGO uses S% to rank co-occurrence relationships (between terms x and y). The first issue with S% is that it does not capture the conditional dependence of y on x. Thus, even in cases where every occurrence of x is accompanied by the occurrence of y, the S% value will be very low if x occurs infrequently and y occurs frequently. The second issue with this metric is encountered when mining cross-ontology rules, as illustrated in Fig. 4
                     . In biological databases, some gene products are annotated to multiple ontologies while others are not. Let us assume that x belongs to Ontology 1 (O1) and y belongs to Ontology 2 (O2). The background (denominator) for QuickGO’s S% computation will include transactions that contain no annotations from O2. It is more appropriate to consider only those transactions that are annotated to both O1 and O2 when evaluating cross ontology rules. MOConfidence measures the conditional probability of y given the occurrence of x in a set of transactions containing at least one annotation from each ontology, i.e. 
                        
                           MOConfidence
                           =
                           |
                           X
                           ∩
                           Y
                           |
                           /
                           |
                           X
                           ∩
                           O
                           2
                           |
                        
                     . The QuickGO S% metric is computed as 
                        
                           S
                           %
                           =
                           
                              
                                 
                                    |
                                    X
                                    ∪
                                    Y
                                    |
                                    /
                                    |
                                    X
                                    ∩
                                    Y
                                    |
                                 
                              
                           
                           ×
                           100
                        
                     . X
                     ∪
                     Y includes transactions that contain X but are not annotated to O2 and transactions that contain Y but are not annotated to O1. These transactions cannot contribute to a multi-ontology rule between O1 and O2 since they are not annotated to both ontologies.

We have compared the performance of QuickGO and MOAL for the S% and MOConfidence metrics only. Like Faria et al. [4], we use a very small threshold for support. This threshold is high enough to ensure that the statistics are computed on enough transactions, but the terms may still be quite infrequent. Unlike marketing applications where it is important to know that two co-occurring terms are represented many times in the database, in biological applications terms that are relatively infrequent but that often co-occur are still of interest. Although QuickGO provides a PR value for its co-occurring terms, we have not used this metric to rank the results because the metric is unintuitive and does not have a defined range. Unlike S% values, which lie between 0 and 100, there is no interpretable range for PR values. The absence of lower and upper bounds for the PR metric makes it difficult to interpret the PR value associated with a co-occurring term.

The second application for MOAL is mining cross-ontology relationships across the GO sub-ontologies. Myhre et al. [5] was one of the first groups to tackle the issue of discovering GO cross-ontology relationships in an automated fashion. Association rule mining is one of the methods used by Myhre et al. to discover connections between Molecular Function and Biological Process and between Molecular Function and Cellular Component. Myhre et al. generate additional rules from the mined connections based on the GO structure. For example, if a rule x
                     →
                     y is mined, they infer the rule Descendant(x)→
                     y 
                     [5]. Myhre et al. explain these descendant inferences using the true path rule of the GO which states that “the pathway from a child term all the way up to its top-level parent(s) must always be true” [5,21]. However, the true path rule supports inferring ancestor terms from descendant terms but does not allow the inference of descendant terms from ancestors. The mined and inferred rules are manually analyzed for biological relevance before they become a relationship rule between the sub-ontologies. Our interestingness measures and pruning strategies can be used to prune uninteresting rules and substantially reduce the need for manual analysis as demonstrated in Table 1.

Mungall et al. [11] use logical class definitions structured as genus-differentia constructs to define cross products in the GO. Our method, on the other hand, uses annotation data and the structure of the GO to discover cross-ontology relationships. MOAL uses generalization to view the transactions at multiple levels of abstraction thus discovers more and better quality rules [12]. Our mining method also discovers relationships between terms that are not named similarly and that would be missed by approaches that use lexical analysis of term names to discover connections between similarly named terms [5].

MOAL and the multi-ontology interestingness metrics presented in this paper have been discussed and evaluated using the GO sub-ontologies. However, our mining and interestingness measures can be easily generalized to suit applications involving other bio-medical ontologies structured as directed acyclic graphs. For example, the Human Phenotype Ontology (HPO) provides over 9500 terms to describe phenotypic/clinical abnormalities [22]. The terms are categorized into one of three ontologies: The organ abnormality ontology, Inheritance ontology and the Onset and Clinical course ontology [22]. The organ abnormality ontology describes clinical abnormalities while the inheritance ontology describes modes of inheritance for diseases. The onset and clinical course ontology terms describe the time of onset of clinical symptoms and the rate of symptom progression. Every annotation links a disease entity such as Kallmann Syndrome to a clinical abnormality typically observed in the disease and the onset time and speed of progression if available (HPO terms). MOAL can be applied to HPO annotation data to discover symptoms/abnormalities that are frequently found together in a variety of diseases. These relationships can potentially aid physicians who observe certain abnormalities to look for other frequently co-occurring symptoms of the observed abnormality in order to facilitate disease diagnosis. Additionally, MOAL can be used to mine cross-ontology relationships between the organ abnormality ontology and the onset and clinical course ontology to discover relationships and patterns between abnormalities and the time of onset.

@&#CONCLUSIONS@&#

As ontologies become increasingly popular as methods of data representation, efficient methods for mining knowledge from ontologies representing related domains of knowledge are essential. It is also important to design metrics to identify the most interesting associations with little manual input. The MOAL algorithm is used to mine cross-ontology multi-level rules through the use of generalization techniques. The pruning strategies described in this study are effective in removing a large percentage of uninteresting rules thereby reducing the necessity for manual analysis. We also introduce MOConfidence and MOSupport to assess the interestingness of multi-ontology multi-level rules along with pruning strategies. We describe two applications for our multi-level multi-ontology association rules and demonstrate the effectiveness of our methods for both applications.

Our experiments have applied MOAL to discovery of cross-ontology relationships between sub-ontologies of the GO; we anticipate that additional complications may occur when ontologies developed by different groups are used. We plan to explore these issues and to adapt information theoretic interestingness measures for cross-ontology data mining in future work.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.jbi.2013.06.012.


                     
                        
                           Supplementary data 1
                           
                              Formal definitions for sets used to define MOSupport and MOConfidence.
                           
                           
                        
                     
                     
                        
                           Supplementary data 2
                           
                              Cross-ontology-relationships.
                           
                           
                        
                     
                     
                        
                           Supplementary data 3
                           
                              Co-annotation-candidates.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

