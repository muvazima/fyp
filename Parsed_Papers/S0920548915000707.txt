@&#MAIN-TITLE@&#An efficient key management solution for privacy masking, restoring and user authentication for video surveillance servers

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This paper proposes a key distribution scheme for distributed video surveillance servers.


                        
                        
                           
                           The scheme introduces security protocols to authenticate multiple privileged users.


                        
                        
                           
                           The scheme also includes privacy masking and restoration strategies used in case of crimes.


                        
                        
                           
                           Hierarchical restoration of the privacy masks with different privileges is possible using the proposed scheme.


                        
                        
                           
                           Security evaluation on the proposed protocols is included in a new section.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Video surveillance system

Key management technique

Privacy masking and restoring

User authentication

@&#ABSTRACT@&#


               
               
                  In this paper, we surveyed technical elements of video surveillance systems and proposed several countermeasures to effectively manage a number of keys for image encryption, privacy protection and user authentication. In addition, we proposed several solutions for potential problems that could arise when the system adopts a privacy masking policy for each user. The proposed solutions selectively implement a Kerberos approach, a round keys approach and a double hash chain approach. For secure video surveillance systems, protecting privacy and providing accessibility through strong user authentication and prioritized authorization is expected.
               
            

@&#INTRODUCTION@&#

According to the increase of the crime rate, public peace management is expected to have a better solution against the increasing criminalities. What is most considered to be useful are video surveillance systems. Practically, video equipment and facilities are greatly increased such as CCTVs (closed-circuit television) and networked cameras, which can minimize the limitations of time and space. Thereupon, these systems are growing into an intelligent framework [1]. For this reason, people are concerned about intrusions of privacy because they are exposed to many cameras during their day-to-day life. In this situation, diverse researches are required to solve these social problems [2].

In the past analog environment using VCRs (video cassette recorder), it was hard to access image information because only administrators had specific permissions in a closed area. This reason originated from the environment which was constructed using analog CCTVs to obtain the image information. But now, diverse applications for video surveillance systems are combined with digital cameras and the related network systems. This developing tendency has positively influenced the related systems to easily obtain video images. In contrast, it also has negative influence such that the collected digital images are no longer safe from third parties with malicious behaviors such as insider threats, hacking attacks, and so on, making the images available for second and third means [3]. In order to counteract this problem, the system has three requirements: intrusion prevention of network cameras, counterfeiting and falsification prevention of images and cryptography technology to protect the images.

There have been many related researches to meet these requirements, including user authentication for accessing network cameras [4], encryption/decryption of the images [5], privacy masking for images [6] and so on. To apply these solutions, many kinds of keys are needed and related management policies need to be studied. In addition, a safe distribution mechanism for the keys is needed to protect the keys from exposure to third parties. Therefore, in this paper, we propose management and distribution methods for encryption and decryption keys to protect images or to place and remove privacy masks and suggest an efficient streaming method for images with privacy information to each user that has different authority.

A camera is essential in the video surveillance system, the camera has advanced from analog to digital, and now it changes to the network camera that is combined with the network infrastructure. Table 1
                      shows the evaluation history of the video surveillance system.

The development history of camera for a video surveillance system is summarized as follows. First one was the analog CCTV using VCRs, second one was also the analog CCTV using DVRs (digital video recorders), third one was the analog CCTV with networked DVRs, fourth one was the networked system using video servers and finally we have networked frameworks using IP cameras [7].

By combining a video surveillance system with the network infrastructure from closed environment to open environment, cameras can be exposed to vulnerabilities such as hacking, sniffing and DoS (denial of service) to steal or block images. In order to resolve this vulnerability, we researched video distribution servers that securely transmits images without DoS to protect images for many users [8]. The server solves unintentional DoS problems by handling many clients instead of cameras basically and effectively distributes images to multiple users. Furthermore, it is able to minimize information leakage from network cameras to an attacker who is in the dark-side by acting as a proxy server that conceals the location and IP address of the network camera.

In the past, the video surveillance system was a type of distribution server that simply shares video images of cameras to multiple users, and then a system was developed that integrated control systems because camera security, encryption and decryption of image [7,9–13] and a central control system are required. The network camera has requisite drawbacks. When a number of users connect to the camera, it is impossible to handle because basically the camera is configured as an embedded system with processes that have low performance [13,14]. Thus, a video distribution server is required to collect and record images from many networked cameras and to distribute these images when many users connect to the cameras in real time. This resolves overhead by multi-accessing. In addition, as the video image is changed from analog to digital, many related researches have been studied to prepare infrastructure that integrates management solutions according to how the image will be used. Video security is used for video surveillance and the traditional video surveillance system receives the video image from cameras to a central control room and then it is recorded by the DVR. However, new systems are now more exquisite and intelligent so past systems that were not standardized cannot adapt to change. Consequently, a network-based system that can easily be interworked into various applications dominates video surveillance systems.

A CMS (centralized management system) is an integrated management system for remotely networking existing DVRs, video servers, network cameras and so on. This system manages all kind of functions of DVRs, video servers and network cameras through software and it has the advantage that many functions such as recording, backup, PTZ (pan-tilt-zoom) camera control and so on are performed concurrently. Likewise, it is possible to monitor, in real time, the network status, record status, event detection, motion detection and so on, and if specific motion is detected, the situation is notified to the administrator intelligently.

The proposed video surveillance system in this paper contains a key management server that generates keys for user authentication and privacy masking. The generated keys are managed through a database and the key management server distributes the generated keys upon the request of a camera or a user. Fig. 1
                      shows the related processes.

In video surveillance systems, keys for cameras and users are managed individually, and thus these are very extensive and produce loads of information. Fig. 2
                      shows the key distribution process when cameras and users are managed separately.
                        
                           1.
                           Step 1. If N is the number of users, the network camera requests user’s keys at the key management server for masking image that is selected from users for privacy protection.

Step 2. The key management server searches for the registered user and generates the user’s keys (N).

Step 3. Whole generated keys (N) are transferred to the camera and the corresponding key (KA
                              , KB
                              , KN
                              ) is sent to the user.

Step 4. After completion of key distribution, the camera sends a masking image based on the secret key received by the user.

Step 5. The user recovers the masked image based on the distributed user’s secret key.

As in the above figure, each user specifies privacy areas and then these areas are masked private using the keys. The problem is shown in this step. Despite providing access to the user, he or she cannot get back the original images because selected areas are masked using different user’s keys. For example, user A can obtain original images using user A’s key, although other areas that are masked using user B, C or N’s keys are impossible to unmask. As a result, user A cannot get back the parts of images masked by other user’s keys. So, a novel alternative is needed structurally. Furthermore, an efficient key management countermeasure is required since the key management server has to manage a number of user keys.

In order to solve the above problems, we aim to have an efficient and secure key distribution and management solution. In addition, a class-based novel key management technique is proposed. The main concept is that users are classified according to user-specific privilege levels and when a user registers to the video surveillance system, he or she is assigned to a user-specific class. By configuring this concept, privacy masking is quite faster and the quantity of keys is much reduced. The proposed key management methods include the utilization of Kerberos, round keys and double hash chains.

The Kerberos protocol [15] is an authentication protocol from MIT and it is composed of authentication server, ticket-granting server, service server and client as shown in Fig. 3
                        . A client is able to access the ticket-granting server and the service server by granting a ticket from an authentication server and ticket-granting server. By utilizing the Kerberos protocol, class-based keys can be generated and shared between cameras and users.
                           
                              1.
                              Step 1. Client→AS: ID

The client requests authorization ticket for TGS by sending user ID to the authentication server.

Step 2. AS→Client: E
                                 
                                    K(C‖AS) (SG, TG), TG: E
                                 
                                    K(TGS‖AS) (SG)

The authentication server sends a session key to communicate with the TGS, ticket and so on to the client based on the shared key between client and user authentication.

Step 3. Client→TGS: ESG
                                 (TG)

The client requests for a service authorization ticket to the TGS by sending an encrypted ticket that is received from the service server and is based on the received session key.

Step 4. TGS→Client: ESG
                                 (K(C∥S), TS), TS: E
                                 
                                    K(TGS‖S) (K(C∥S))

TGS issues a ticket to the client. The ticket is encrypted by a secret key from the service server that the user wants access to, and it is sent to the client with a ticket that is encrypted based on a session key between the client and the service server.

Step 5. Client→S: TS
                                 
                              

The client is able to connect to the service server without additional approval processes by sending a ticket.

In this paper, we propose a key distribution process by utilizing the above Kerberos protocol. Basically, the overall structure is similar to the Kerberos protocol and it consists of an authentication server, key management server, video surveillance server and client. Tables 2 and 3
                        
                         show notations and Fig. 4
                         shows the key distribution process.
                           
                              1.
                              Step 1. Client inputs the ID (candidate) for user authentication.

Step 2. Inputted ID and TimeStamp are encrypted based on shared key (K(C∥AS)) between client and authentication server.

Step 3. Inputted ID and encrypted authentication information (C
                                 1) are sent to the authentication server.

Step 4. The authentication server searches for the stored key in the DB (database) using the received ID.

Step 5. ID and TimeStamp are extracted by decryption of the received C
                                 1 based on the searched key (K(C∥AS)).

Step 6. The authentication server verifies the client by comparing the stored ID and the decrypted ID.

Step 7. Authentication server generates session key (K
                                 SS) for communication between client and key management server.

Step 8. A ticket (T
                                 1) is generated by encrypting the generated session key (K
                                 SS), user’s class information (Class) and TimeStamp based on the shared key (K(AS∥KMS)) between authentication server and key management server.

Step 9. The generated session key (K
                                 SS) and ticket (T
                                 1) is encrypted (C
                                 2) based on the shared key (K(C∥AS)) between the client and the authentication server.

Step 10. The authentication server sends C
                                 2 to the client.

Step 11. The client extracts a session key (T
                                 SS) and ticket (T
                                 1) by decrypting the received C
                                 2 based on the shared key (K(C∥AS))) between the client and authentication server.

Step 12. The client sends the extracted ticket (T
                                 1) to the key management server.

Step 13. The key management server extracts the session key, user’s class information (Class) and TimeStamp by decrypting the ticket (T
                                 1) based on a shared key (K(AS∥KMS)) between the authentication server and the key management server.

Step 14. The key management server generates a distribution key (K(C∥VSS)).

Step 15. The key management server generates a ticket (T
                                 2) by encrypting the generated distribution key (K(C∥VSS)), user’s class information (Class) and TimeStamp based on the shared key (K(KMS∥VSS)) between the key management server and the video surveillance server.

Step 16. The generated distribution key (K(C∥VSS)) and ticket (T
                                 2) are encrypted (C
                                 3) based on the session key (K
                                 SS).

Step 17. The key management server sends C
                                 3 to the client.

Step 18. The client receives C
                                 3 and extracts the distribution key (K(C∥VSS)) and ticket (T
                                 2) by decrypting C
                                 3 based on the session key (T
                                 SS).

Step 19. The client sends a ticket (T
                                 2) to the video surveillance server.

Step 20. The video surveillance server extracts the distribution key (K(C∥VSS)), user’s class information (Class) and TimeStamp by decrypting the received ticket (T
                                 2).

The above key distribution and management by Kerberos is a more effective system because distributed and managed keys are reduced by grouping users according to class. Even though this solution is utilized, in key management aspects, there are many difficulties because keys that correspond to a number of classes are managed separately. Because high-class users must have all keys of the low-class users, the high-class users do not get back their original images. To conclude, high-level users need the shared process of many keys thus causing overhead. Consequently, a mechanism is required such as a fixed form, for example, which always generates the same value based on a specific value. In this paper, we propose key distribution and management by round keys to satisfy the above requirement. The detailed sequences are shown in Fig. 5
                        . This measurement generates a seed value to issue a key at first. This is the initial key that is used as a base key to generate round keys. For example, if there are three classes, such as C
                        1, C
                        2 and C
                        3, class keys are generated such as K
                        
                           R1, K
                        
                           R2 and K
                        
                           R3 by round steps. Thereafter, these keys are utilized for encryption, decryption, privacy masking and restoration. The benefit of this measurement is that the administrator of the key management system can easily work with this system because a generated key came from the seed value, whcih means that he/she manages only the seed value generated by the assigned class.
                           
                              1.
                              Step 1. Network camera requests class-based keys to key management server for masking image corresponding to privacy.

Step 2. Key management server generates a seed value for class-based key, and round keys that are generated based on the seed value. For example, the result of the first round is a class 1 key and the result of the second round is a class 2 key. In this way, entire class-based keys are generated.

Step 3. All the generated keys (N) are sent to the camera and class-based keys (K
                                 
                                    R1, K
                                 
                                    R2, KRN
                                 ) are transferred to each user.

Step 4. After completion of key distribution, the camera sends a masked video image corresponding to the privacy level based on the received class-based key.

Step 5. User obtains the original image by restoration of received masking image based on the distributed key.

In a hash chain, hashed output values are configured as a chain type by a one-way hash function constantly based on the generated seed value. Notation of hash chain is h
                        1(seed), h
                        2(seed),…, hn
                        (seed) and n is the iteration counter. In case of a single hash chain, it is possible to obtain h
                        
                           i
                           +1(seed) from hi
                        (seed). However, a single hash chain cannot apply key management solutions for the video surveillance system because the hash function does not have an inverse function. Thus, this measurement utilizes double hash chain [16] to support a bidirectional operation when a particular hash value is given, and we propose a distribution and management solution using it. Fig. 6
                         shows the details. A key management solution by round keys is less safe because the round keys are not generated within an entire iteration counter. This means that the round keys are generated by a partial iteration counter but the solution using a double hash chain generates a key that is generated by a whole iteration counter; hence, this solution is able to securely establish a key management system for video surveillance systems as shown in Fig. 6.

The key management server generates two seed values as x and y, and two hash chains are generated as maximum class value (n) using a one-way hash function. In order to verify the generated hash chain, the identifier v (hj
                        (x) XOR h
                        
                           n-j
                        (y)) is generated. Transferred messages are formed (j, hj
                        (x), h
                        
                           n-j
                        (y), v(j)), and j is the class information, hj
                        (x) is the hash function’s result of repeating j times, h
                        
                           n-j
                        (y) is the hash function’s result of repeating n−j times, v(j) is the j-th identifier. The camera and the user calculate hj
                        (x) based on the received j and verify the identifier using the received h
                        
                           n-j
                        (y) and v(j). Thus, class-based keys are generated corresponding to the user’s authority; hence, the above solution is an effective and safe distribution and management solution because high-class users can generate all keys of low-class users by the double hash chain. When the single hash chain is used, its integrity is vulnerable, and thus we configured the double hash chain. For example, if an attacker steals hj
                        (x), h
                        
                           j
                           +1(x) is easy to calculate, and so it does not satisfy integrity. In contrast, the double hash chain has an identifier and thus counterfeiting and falsification is impossible.

In this paper, we proposed three different types of key distribution and management systems. The round keys and double hash chain methods are based on Kerberos, hence we analyzed security with respect to the Kerberos protocol. There are a number of ways to analyze security, but we used AVISPA, which is one of the formal verification tools. Source code of verification is shown in Fig. 7
                        .

In order to verify our analysis, we chose ATSE as one of our verification methods. In addition, untyped models and verbose modes were selected for more specific analysis. The results of our verification are shown in Fig. 8
                        . This means that the proposed protocol did not find an attack scenario. Thus, the proposed protocol is safe from attackers.

@&#CONCLUSIONS@&#

In this paper, we analyzed the structure of video surveillance systems and proposed efficient key management solutions for distribution and management. When all keys related to the user authentication and approval authority are generated and managed independently, the number of keys is increased exponentially. Because of this reason, a policy for reducing the number of keys is required. Therefore, we established a class-specific key management solution. In addition, we proposed a class-specific key distribution management solution using Kerberos for security. In order to manage the keys more efficiently, the utilization of round keys and double hash chains was adopted. This is expected to increase privacy and provide strong user authentication.

@&#ACKNOWLEDGMENTS@&#

This work was supported by the Soonchunhyang University Research Fund.

@&#REFERENCES@&#

