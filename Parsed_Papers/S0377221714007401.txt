@&#MAIN-TITLE@&#Using discrete event simulation cellular automata models to determine multi-mode travel times and routes of terrestrial suppression resources to wildland fires

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Forest fire suppression requires vehicles to travel both on roads and cross country.


                        
                        
                           
                           We developed a cost distance method for estimating travel times and routes to forest fires.


                        
                        
                           
                           Our method produced identical routes to a road network analysis for road travel.


                        
                        
                           
                           A grid based approach was effective in finding cross country routes.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Transport

Network

OR in environment and climate change

Routing

Simulation

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Periodic forest fires are a part of natural processes in many parts of the world (Fuller, 1991; Mooney &#38; Dunn, 1970). Where fires burn into populated areas, they have the potential to cause substantial impacts, including the loss of assets, productivity and lives (Mendes, 2010). As a result, fire suppression activities are typically implemented to minimise such impacts (Martell, 1982). Such activities involve the use of specialised vehicles, crews and aircraft (hereon described as resources) to directly extinguish flames or prevent further fire spread. Suppression has been demonstrated to be effective in reducing the sizes and consequential costs of fires. In particular, the sooner suppression resources arrive at a fire, the smaller the resultant impact is likely to be (Cumming, 2005; DeWilde &#38; Chapin, 2006).

Inherent stochasticity in the initiation of forest fires results in uncertainty as to where and when future ignitions will occur (Dayananda, 1977). Consequently, fire suppression is reactive; resources are dispatched from home base locations as fires are detected (Kourtz, 1987). As the time that elapses between fire detection and resource arrival is directly correlated with the final fire sizes, an understanding of emergency vehicles response times is critical for optimising deployment decisions and planning efficient suppression (Haghani &#38; Yang, 2007). In addition, the suppression algorithms in operational dynamic fire spread simulators (including FARSITE (Finney, Sapsis, &#38; Bahro, 2002) and PHOENIX Rapidfire (Tolhurst, Shields, &#38; Chong, 2008)), require detailed information on available suppression resources to be manually specified. Consequently, the automation of the process of determining resource availability and likely arrival times of suppression resources at a fire location has the potential to yield gains in suppression efficiency. At a strategic level, the optimisation of the placement of resource bases has long been a major focus of operational research (Li, Zhao, Zhu, &#38; Wyatt, 2011). Vehicle response times are a key input required for such models (Badri, Mortagy, &#38; Alsayed, 1998), and if such inputs do not accurately consider all necessary travel, outcomes may be sub-optimal. The determination of the shortest, fastest or most efficient paths through networks has long been a focus of graph theory and operational research (Prodhon &#38; Prins, 2014). Dijkstra's algorithm (Dijkstra, 1959), was a major development in this field, providing a foundation for much of the work that followed (Sniedovich, 2006). Variants of Dijkstra's algorithm are commonly used to estimate the routes and probable travel times for vehicles in road networks (Zhan &#38; Noon, 1998). Such algorithms ‘crawl’ through vector networks, accumulating costs, such as distance or time, as they progress between nodes to determine the least-cost path between a start point and destination.

However, the need to estimate travel times and routes to forest fires provides an additional level of complexity; fires often occur in isolated areas and require substantial cross country travel where movement is independent of the road network. The vegetation and terrain properties that affect cross country travel are typically heterogeneous and information dense, and consequently are more efficiently stored as raster grids than vector networks. In contrast to the development of methods for optimising road network travel, there has been relatively little consideration given to the problems where vehicles may have to travel both on and off road. Multi-model travel has been considered in mixed vector networks, such as those that include road and rail travel (Bielli, Boulmakoul, &#38; Mouncif, 2006), but there has been limited attention in raster landscapes. Hatfield et al. (2004) proposed a combined method for estimating both road and cross country travel times for fire suppression vehicles in a gridded landscape using a minimised accumulated cost surface approach (Douglas, 1994), where costs are specified as the time to cross a unit of space. Pathfinding algorithms, including Dijkstra's algorithm, can be used to accumulate weighted costs based on travel between grid cell centroids (Geitl, Doneus, &#38; Fera, 2008; Soltani, Tawfik, Goulermas, &#38; Fernando, 2002). Such approaches have been used in the generation of least cost routes in continuous terrain; however their application for real-time travel planning remains experimental (Dalton, 2008; Hatfield et al., 2004; Stahl, 2005).

The simulation of a chronological sequence of events occurring within regular grid is highly amenable to analysis via discrete event simulation (DEVS) cellular automata (CA) approaches (Wainer &#38; Giambiasi, 2001). Such models have been successfully used in modelling physical systems and processes and have been used in relation to fire management for simulating fire spread and suppression activities (Ameghino, Troccoli, &#38; Wainer, 2001; Ntaimo, Xiaolin Hu, &#38; Yi Sun, 2008). We propose an alternative, novel framework for the determination of multimode estimated vehicular travel times and optimal routes to fires using a DEVS CA emulation of Dijkstra's algorithm in a gridded raster landscape. The method is intended to be processed in real time (once a fire location is reported) and provides output as a surface of travel times to the fire location within a specified period. Parent–child relationships between adjacent cells are retained to allow the identification of the fastest routes from each point in the landscape to the fire location. Our approach provides for the use of heuristic rules within the CA, allowing processing times to be minimised by reducing unnecessary calculations.

The method is demonstrated using example fire locations and resource bases situated in the vicinity of the Black Saturday fires that occurred in Victoria, Australia in 2009. The Black Saturday fires were Australia's worst ever forest fire disaster, with 173 people killed and over 2200 buildings destroyed in less than 12 hours (Cruz et al., 2012).

@&#MATERIAL AND METHODS@&#

The generation of maps of ‘travel catchments’ of road travel time for resource bases is common practice in emergency response analysis, as response times to each point in the road network can be pre-processed (Li et al., 2011). However, due to the data dense nature of raster grids, the storage of such response times for all points in the landscape is inefficient, particularly where multiple bases are considered. In addition, such an approach has an inherent assumption that all dispatching occurs from fixed locations, however in the event of multiple incidents it may be necessary to redeploy vehicle in transit. We propose that the problem be reversed and computed on demand. Rather than calculating travel times outwards from bases, travel times be computed outwards from a point of interest (such as a fire) for a specified distance or duration.

A DEVS CA cost accumulation approach was developed to estimate vehicle travel times to a point of interest in a continuous raster landscape. The landscape is defined by a raster grid with the value of each cell representing the time it takes for a vehicle to cross a unit of space; the travel cost. The CA algorithm crawls out from the point of interest calculating expected travel times by multiplying the cellular travel cost by distance travelled estimated at travel times from every cell to the source point are calculated by tallying the total time the taken to reach that cell; the accumulated travel time (ATT). The ATT raster remains aligned with the unit travel cost input grid. The algorithm spreads in all directions at rates proportional to the travel cost. Consequently the ATT values are indicative of the fastest time to reach a cell in the landscape from the point of interest. The pattern of spread is indicative of the fastest path to reach a landscape cell from the point of interest. Travel times for suppression vehicles to the point of interest can be determined by using their coordinates to query ATT raster. By retaining parent–child data from the CA spread algorithm the fastest route from the point of interest to each cell in the ATT raster can be evaluated.

For travel time estimation, a unit travel time cost surface for the entire state of Victoria (22.7 million hectares), Australia was developed as a 30 meter grid. This was created by merging two unit travel time rasters, one generated from a road network layer and another generated from classified vegetation types. For computational efficiency, units were specified in terms of milliseconds/meter−1 to allow calculations to be processed as 16 bit unsigned short integers.

Road data was obtained as categorical vector networks where roads were classified by road class. Estimated average travel speeds in kilometers/hour−1 for each class were obtained from the Department of Environment and Primary Industries (DEPI), Victoria, and these were reciprocated and converted to milliseconds/meter−1 (Table 1
                        ). A class based join was used to specify unit travel time for each mapped road segment of the vector road layer. This was converted to a 30
meter raster, using the unit travel times as values. Grid cells that did not coincide with parts of the road network were given ‘no-data’ values.

Unit cross county travel times were estimated using vegetation types mapped at a 30 meter resolution. Vegetation maps were based on a statewide DEPI vegetation classification intended for the representation of vegetation communities and fire fuel loads. These were condensed into broad categories based on vegetation structure and for each category unit travel times were estimated (Table 2
                        ). Areas that were classified as wetlands or water bodies were assumed to be impassable and given no-data values. A lookup table approach was used to derive a new unit travel time raster for the entire state. The raster road and cross country unit travel time rasters were merged into a single raster; cells in which roads were present had the road value applied, all other cells had the cross country value.

Topography was assumed to influence the rates of vehicle progression, and this was incorporated using slope penalties. A Digital Elevation Model (DEM) was used to determine the slope of each cell. The effect of slope was incorporated in two ways. To correct grid distances areas from horizontal (map) distance to actual (sloped) distances, cell unit travel times were increased proportionally by multiplying the inverse cosine of the slope angle by the horizontal distance. Additional penalties were applied to steep areas to account for the need for vehicles to traverse rough terrain; travel was projected to be 25 percent slower for slopes between 7 and 22.9 degrees, 66 percent slower for slopes between 23 and 34.9 degrees and 1000 percent slower for slopes above 34.9 degrees. These penalties were equivalent to those being used by DEPI. Slope penalties were applied to the unit travel time raster in a multiplicative manner. Values were rounded to whole numbers to ensure the short integer format of the raster was retained. The resultant single 30 meters statewide unit travel time (milliseconds/meter−1) raster was used for all travel time computations. All analytical work to generate the raster was undertaken in ArcMap Desktop and involved the use of the Spatial Analyst extension.

The DEVS CA approach to calculating travel can be represented as an ‘event horizon’ of accumulated vehicular travel time progressing outwards from an initiating point until an ATT threshold is met. The model is entirely deterministic, with events spreading from cells to their immediate neighbours according to simple rules. Each cell interacts with its neighbours using a king's path/Moore's neighbourhood approach (Moore, 1962). In comparison to standard implementations of Dijkstra's algorithm, computational efficiency was maintained due to the gridded nature of the landscape reducing the need for iterative distance calculations; rook's distances are equivalent to the grid resolution, diagonals are constant at 1/cos(45 degrees
) multiplied by grid resolution.

The DEVs CA has a number of key assumptions;

                           
                              -
                              The landscape consists of a grid of cells of a particular size with the value of each cell defined as the travel time required to cross one unit of space.

Each cell can take on one of three states; unvisited, travelling, visited. The base state of cells is unvisited.

Travel times between cells are calculated from the centroid of each cell to the centroids of its neighbours. Travel times within a cell are computed as distance multiplied by the cell's unit travel time. The total time taken to travel from one cell to the next is the distance weighted average of the two cellular travel times.

The algorithm spreads between grid cells calculating the ATT. ATT must always be positive and is computed as the sum of intracellular travel times since the algorithm initiation.

The algorithm is initiated by the input of a location representing an incident (such as a fire). The time that the algorithm is initiated is used as the reference time. The algorithm begins from the cell or cells that spatially intersect the initiation location and progresses outwards in all directions.

Once a cell is visited by the algorithm, it cannot return to the unvisited state.

The model progresses using dynamic time steps based on a chronologically ordered event priority queue. Ties are dealt with by processing the event first added in the queue.

The algorithm continues to spread until a threshold ATT value is reached.

ATT is represented as a new raster aligned with the unit travel time raster. Values represent the estimated time for a vehicle to travel from the cell of interest to the initiation location.

For each cell visited, the neighbouring parent cell from where the visitation event initiated is recorded.

Cells classified as ‘No data’ cannot be traversed.

The algorithm is initiated by setting the state of one cell, the point of interest, to ‘travelling’. For all cells in the ‘travelling’ state, travel times are calculated for each graph edge from the cell centroid to all the centroids of all neighbouring unvisited cells. Travel time along an edge between two adjacent cells is calculated as the mean unit travel time for the two cells multiplied by the total distance between centroids. Each cell centroid has eight edges to neighbouring centroids; four vertical or horizontal and four diagonal.

Discrete events processing is ordered based on the ATT elapsed since the initiation of the algorithm. ATT is computed progressively as each event occurs. Arrival events (unvisited cells transitioning to travelling or visited status) are processed in chronological order using a dynamic priority queue. The priority queue contains all edges from travelling cells to unvisited cells. An unvisited cell will be represented more than once if it is adjacent to more than one travelling cell. It is ordered by the calculated ATT for arrival at unvisited cell centroid along each edge, with the unvisited cell having the lowest arrival ATT transitioning to travelling status. Once an arrival event occurs at an unvisited cell, all other edges referencing that particular cell are purged from the event queue and then new any travelling edges are added to the queue. When all the neighbours of a particular travelling cell are no longer in unvisited status, the state of the cell changes to visited and the cell is no longer involved in any further processing. As such a process requires the constant insertion and deletion of values from an ordered list; a binary search tree priority queuing approach was used. Binary search trees allow for the local addition and removal of values from an ordered list without the need to reprocess the entire queue (Knuth, 1971). For each grid cell at which an event occurred, two values are recorded: the ATT to the time at which the event was triggered and the ‘parent’ cell; the neighbouring cell from which the triggering edge initiated. The model was developed using the Microsoft .NET programming framework, version 4.0. The CA spread process was implemented using a single thread and so was restricted to running on a single CPU core.

The methodology is demonstrated using an example fire location in complex forested terrain situated in the vicinity of the Victorian Black Saturday fires of 2009 (Fig. 1
                        ). The algorithm was initiated at the point −
37.334 degrees
, 145.285 degrees
 and was run until the ATT in the priority queue reached 90 minutes (5,400,000 milliseconds). This threshold was selected as locations that are greater than 90 minutes by overland travel from a suppression vehicles would be considered inaccessible and alternative methods of fire attack, such as aircraft, are likely to be used.

Sampling the ATT raster at any point provides an indication of the estimated travel time to the initiating location. For demonstration purposes, we sampled the ATT using a number of points representing the locations of suppression resource bases. The estimated travel times were used to generate a table of ATT values of each base. This was cross-referenced with a table of resources to generate a schedule of vehicle arrival times at the point of interest. For the purposes of the case study, it was assumed that all resources present would be dispatched. Beginning from the cells containing the resource bases, the chains of arrival event parent–child relationships were used to trace event lineage back to the point of algorithm initiation. This pathway is indicative of the route ‘least cost’ and is indicative of the fastest route between the base and the point of interest.

To assess the effectiveness of the CA DEVs approach in determining optimal routes along road networks, a separate assessment of routing was undertaken. The expected travel times and optimal paths were computed between two road address points using a standard vector analysis approach and using the CA DEVs approach. Vector network analysis was undertaken using ESRI ArcMap Network Analyst. The example journey was from Black Duck Road (−37.309 degrees, 144.961 degrees), Kilmore, Australia, to Fowlers Road (−36.734 degrees, 144.243 degrees), Bendigo, a distance of approximately 95 kilometers. To ensure consistency between methods, the unit travel time grid for the DEVS CA approach did not include penalties for slope.

As the CA event spreads outward from the origin, the number of cells at the event horizon and, correspondingly, in the priority queue increases exponentially. Consequently computational requirements become greater as higher ATT algorithm finish thresholds are used. To keep computational processing time within the range suitable for operational decision making, heuristics were implemented to eliminate calculations for cells that are unlikely to be of interest. This is done through two mechanisms, both intended to increase processing speed by reducing the amount of data that needs to be loaded into memory, reduce computations and minimise the length of the event queue that needs to be sorted. The first was based on the assumption that the majority of travel to a fire will be on roads; cross country travel will only occur in the final stage of travel from the edge of the road network to the fire. As the CA algorithm spreads outwards from the fire, this was implemented by using a rule stating that once a road had been encountered by a CA (defined here as having a unit travel cost of at least 200 milliseconds/meter−1 (a speed of 18 kilometers/hour−1), no further automata generated from that lineage could travel cross country (determined by speeds slower than the threshold). Adjacent cells slower than the threshold are not added to the event queue. For sampling the estimated travel times and routes for resource bases to the point of interest, a search radius of 50 meters from the base was used to find the nearest road. Resource bases are generally accessible and located close to road networks.

The second efficiency heuristic was to limit cross country travel (defined by the same criteria as above) to an area within a 3 kilometers radius from the fire location, as it unlikely that any fire that is more than 3 kilometers from the road network will addressed through standard terrestrial dispatch. This allows the number of cells to be loaded in memory to be limited and substantially reduces the number of cells needed to be assessed as the ATT event area becomes larger.

To testthe effect of the maximum ATT threshold on processing time for the both and complete and the efficient scenarios, the algorithm was rerun using thresholds varying from 10 to 110 minutes at 10 minute increments.

All simulations were processed using a 64 bit Microsoft Windows 7 system using 8 gigabytes of RAM. Benchmarking hardware consisted of a DELL Latitude laptop with a 2.80 gigahertz dual core Intel I7-640M CPU (using four threads) with a 7200 revolutions per minute 2.5 inches SATA hard drive used for storage.

@&#RESULTS@&#

A unit travel time raster for the state of Victoria, Australia (approximately 22.7 million hectares/532 million cells) was generated at 30 meters resolution. A portion of the raster representing part of the study area is presented in Fig. 2.
                        
                     

Using the point −37.334 degrees, 145.285 degrees to initiate the algorithm spread, ATT was calculated for a total of 90 minutes (5,400,000 milliseconds). Elapsed processing time was 15 minutes 53 seconds. The ATT values are represented spatially in Fig. 3A. An approximate radius of the area reached by the algorithm in the 90 minute ATT limit is 60 kilometers.

With efficiency heuristics implemented, processing time was substantially reduced. A portion of the ‘efficient’ ATT surface is presented in Fig. 3B. The extents of the ATT surfaces were the same for both methods.

Processing time was found to increase with the square of the target ATT threshold. When efficiency heuristics were implemented, there was approximately a 10 fold improvement in processing time; for a 90 minute ATT run, processing was reduced from 15 minutes 51 seconds to 1 minute 40 seconds (Fig. 4).

There were 11 forest fire resource depots within the 90 minute travel catchment of the fire. The coordinates of these were to generate a schedule of likely suppression resource travel times for the fire (Table 3
                        ). Resource details are indicative and do not represent real deployments.

Optimal travel routes to the fire were generated for all resource bases in the 90 minute travel window (Fig. 5
                        ). These all followed the roads to a point close to the fire before leaving the road to travel cross country.

All routes found that the optimal place to leave the road network was not at the closest road to the fire, due to a stream blocking direct access (Fig. 6
                        ).

For a comparison of road travel, minimum cost routes were generated using ArcMap Network Analyst and our CA routine. The routes found by both methods were identical, however the estimated journey travel times and total distance and were longer for the CA route (83 minutes 18 seconds and 108.6 kilometers) than the network analysis route (72 minutes 25 seconds and 103.9 kilometers).

@&#DISCUSSION@&#

A DEVS CA approach was demonstrated to have potential for estimating terrestrial travel times and routes for emergency vehicles where both road and cross country is necessary. The DEVS CA method achieved comparable results to network analysis when considering road travel; however it was also able to provide an indication of travel times and routes through complex cross country terrain. While simulating travel in a continuous raster landscape requires more computations than vector based road network approaches, once efficiency heuristics were implemented, processing was completed in less than 5 minutes, less than 10 percent of the total ‘inefficient’ journey time. Computation times are within the range of time that elapses in undertaking emergency vehicle dispatch (Goldberg &#38; Listowsky, 1994), and so are likely to be useful operationally. A DEVS CA travel assessment is likely to result in a higher computational load than a road vector network assessment, however where cross country travel is required, raster approaches are likely to achieve more realistic results. Standard road vector approaches are unable to account for landscape variation between the edge of a road network and a fire; in a complex landscape Euclidean distance may not necessarily be the fastest. In our case study, travel from the fire location to the closest road is impeded by inaccessible terrain (a water body, Fig. 6). The DEVS CA approach was able to account for this; the least cost route was consequently able to provide an indication of the ideal place to leave the road network to commence cross country travel. In addition, cross country travel times were minimised through the preferential use of easily passable vegetation types. Expert opinion is currently used to find the best cross country routes to fires, modelled approaches have the potential to provide valuable decision support as they can consider rapidly analyse complex landscapes and produce consistent, objective results. The optimal routes recommended by an analytical means are contingent on the data used being correct; it is be expected that expert supervision would remain a part of dispatching.

The ability to automate emergency vehicle travel time estimation is likely to be valuable for fire management, given the increasing importance of dynamic fire spread simulators for operational use. The systems FARSITE and PHOENIX Rapidfire both currently require suppression resource details to be manually specified. However, there is the potential for these models can be coupled with dispatching algorithms and vehicle databases to produce realistic dispatches and fire arrival time. This can reduce the time taken for operation simulation and provide for realistic unsupervised ensemble simulation for risk assessment (e.g. see Penman et al., 2013). A further synergy between CA travel evaluation and fire behaviour modelling is that much of the spatial data required for the generation of unit travel cost surfaces, including topography, vegetation and roads, are also necessary inputs for the fire models. This means there is the potential for minimising data requirements, particularly if unit travel cost rasters can be generated on the fly from existing datasets.

The approach of calculating travel times on demand with CA expanding from the fire location provides some distinct advantages over pre-calculating travel from fixed bases. The need to store individual travel raster for each base is removed, as only a single ATT raster is necessary. This greatly reduces data storage needs, enabling analysis domains to be large; the domain of the case study covered the entire state of Victoria, an area of 22.7 million hectares. An additional advantage is that travel times and routes to the point of interest can be rapidly sampled anywhere with the computed ATT area, enabling travel to be estimated for vehicles at bases, in transit and potentially (by combining independent ATT analyses) at other fires. However, processing requirements increase exponentially as the size of the computed ATT increases, limiting the effective area that can be considered. An ATT threshold of 90 minutes was used in this study, which required less than 2 minutes of processing time; extending the ATT threshold will increase the simulation time required or require additional efficiency heuristics.

For road networks, travel estimates were comparable to standard network analyst approaches, although the DEVS CA approach provided estimates of both distance and time that were greater than network analysis approaches. The increased distance is likely to be due to the use of the Moore neighbourhood, where spread from a cell can only occur in one of eight discrete directions. To accommodate travel on roads that are not perfectly aligned in these directions, the CA must chain together travel in the directions available to it in a step wise ‘taxicab’ manner; resulting in an increase in overall travel in comparison to Euclidian distance, with a consequent increase in travel time. One way to resolve this would be to use an extended Moore neighbourhood to allow travel in more directions, for example a 24 cell Moore neighbourhood that considers ‘neighbours of neighbours’. This would double the number of directions in which travel could occur, effectively halving overestimates of travel distances. However this would result in a greatly increased processing load as each algorithm step would require substantially more additions and deletions from the priority queue and would necessitate weighting of travel costs across three cells. A simpler approach that has been used is to simply calibrate the DEVS CA (Hatfield et al., 2004). It must be noted that calibration factors will be specific to the nature of roads in a locality and the size of the cost raster cell size. As such, due to the limited data on cross country vehicular travel, empirical calibration is likely to be a necessary step of model development.

The DEVS CA algorithm involves a continuous sequence of events, so a single analysis is not amenable to parallel CPU processing. However, there is potential for the parallel processing on a multi-core machine independent ATT analyses with different rule-sets or cost surfaces. This could allow the concurrent assessment of vehicle types that have different speeds or topographical and vegetation constraints. The use of a relatively ‘flat’ landscape with a directional bias could even provide for the simulation of aircraft arrival under windy conditions. A further extension could be to recognise interaction between vehicle types. An example of this could be the dependency of road vehicles on heavy tracked machinery to gain access in difficult terrain. The optimal paths developed for heavy bulldozers to access a fire location could be used to modify the unit travel time surface of another class, such as a water tanker, to better represent access times in a subsequent simulation. A further extension of the algorithm could be the consideration of initiating the algorithm from areas rather than a single point, resulting in a target zone or zones rather than a target point, to better reflect travel to staging areas or sectors at large fires. In addition, the time-specific DEVS nature of the approach used in this study yields the potential for coupling with dynamic fire spread simulators to allow intelligent routing based on expected fire behaviour.

While the approach demonstrated in this study used a relatively simple DEVS CA approach, the autonomous nature of CA models means that there is the potential to extend the model to incorporate more complex CA behaviour rule-sets to better represent realistic vehicular travel. More complex rules could allow for the variation of unit cost with direction (to account for movement direction relative to topography (Rees, 2004)) and the consideration of differences in average vehicle speed due to factors such as weather and time of day. In addition, the ruleset that allows the emulation of Dijkstra's algorithm is not necessarily constrained for regular networks. One efficiency heuristic used in this study was to limit travel to roads above a certain distance from the point of interest; however roads were still incorporated as grid cells. As network analysis requires comparatively fewer calculations; where high ATT thresholds are necessary, there is the potential for further efficiency gains by utilising a single CA process for coupled raster and vector approaches.

Travel was considered in this study in the context of the movement of emergency vehicles to fires. However, the approach can also be considered for other applications where multi- mode travel optimisation is required, such as the coordination of forest access, inventory and harvest (Choi &#38; Nieto, 2011; Dean, 1997; Stahl, 2005).

@&#CONCLUSIONS@&#

Cost distance DEVS CA approaches using have been demonstrated to have potential for evaluating vehicular travel times and routes where progression is required both on and off road. While such methods require a large number of computations, processing times can be reduced to operationally relevant levels by initiating the algorithm at the vehicular destination and applying heuristics to limit computations for cells unlikely to be of interest. There are currently no alternative methods broadly used for managing travel of vehicles for forest fire suppression; however there is demand for good intelligence on resource travel, driven in part by the increasing use of dynamic fire spread models that accommodate the effects of suppression.

T.D. researched the problem, conceptualised the solution and wrote the manuscript. D.C. developed the algorithm and provided comment on the manuscript. K.T. defined the problem, provided group leadership and input on the manuscript.

@&#ACKNOWLEDGEMENTS@&#

This work was undertaken as part of the project ‘Fire impact and risk evaluation decision support tool’ which was funded by Bushfire Cooperative Research Centre. No editorial control was exercised by the funding body. We gratefully acknowledge the support of the Victorian Country Fire Authority and the Department of Sustainability and Environment for this work.

@&#REFERENCES@&#

