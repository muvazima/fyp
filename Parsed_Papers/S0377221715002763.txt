@&#MAIN-TITLE@&#The third comprehensive survey on scheduling problems with setup times/costs

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This paper reviews about 500 papers on scheduling problems with setups.


                        
                        
                           
                           It classifies problems based on shop environments, family and non-family setups.


                        
                        
                           
                           It further classifies as sequence-dependent and sequence-independent setups.


                        
                        
                           
                           It identifies independently addressed problems and the need to compare them.


                        
                        
                           
                           The paper, with two previous surveys, covers the research since mid-1960s to date.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Scheduling

Review

Setup time

Setup cost

@&#ABSTRACT@&#


               
               
                  Scheduling involving setup times/costs plays an important role in today's modern manufacturing and service environments for the delivery of reliable products on time. The setup process is not a value added factor, and hence, setup times/costs need to be explicitly considered while scheduling decisions are made in order to increase productivity, eliminate waste, improve resource utilization, and meet deadlines. However, the vast majority of existing scheduling literature, more than 90 percent, ignores this fact. The interest in scheduling problems where setup times/costs are explicitly considered began in the mid-1960s and the interest has been increasing even though not at an anticipated level. The first comprehensive review paper (Allahverdi et al., 1999) on scheduling problems with setup times/costs was in 1999 covering about 200 papers, from mid-1960s to mid-1988, while the second comprehensive review paper (Allahverdi et al., 2008) covered about 300 papers which were published from mid-1998 to mid-2006. This paper is the third comprehensive survey paper which provides an extensive review of about 500 papers that have appeared since the mid-2006 to the end of 2014, including static, dynamic, deterministic, and stochastic environments. This review paper classifies scheduling problems based on shop environments as single machine, parallel machine, flowshop, job shop, or open shop. It further classifies the problems as family and non-family as well as sequence-dependent and sequence-independent setup times/costs. Given that so many papers have been published in a relatively short period of time, different researchers have addressed the same problem independently, by even using the same methodology. Throughout the survey paper, the independently addressed problems are identified, and need for comparing these results is emphasized. Moreover, based on performance measures, shop and setup times/costs environments, the less studied problems have been identified and the need to address these problems is specified. The current survey paper, along with those of Allahverdi et al. (1999, 2008), is an up to date survey of scheduling problems involving static, dynamic, deterministic, and stochastic problems for different shop environments with setup times/costs since the first research on the topic appeared in the mid-1960s.
               
            

@&#INTRODUCTION@&#

Setup time is the time required to prepare the necessary resource (people, machines) to perform a task (operation, job) while setup cost is the cost to set up a resource before the execution of a task, Allahverdi and Soroush (2008). Tens of thousands of papers, addressing different scheduling problems, have appeared in the literature since the first systematic approach to scheduling problems was undertaken in mid-1950s. A survey of the literature on scheduling problems indicates that more than 90 percent of the literature on scheduling problems ignores setup times/costs while Kopanos, Miguel Lainez, and Puigjaner (2009) states that setup times/costs appear in a plethora of industrial and service applications. Ignoring setup times/costs may be valid for some applications; however, it adversely affects the solution quality of some other applications of scheduling. This is because setup process is not a value added factor, and hence, setup times/costs need to be explicitly considered while scheduling decisions are made in order to increase productivity, eliminate waste, and improve resource utilization.

Setup activities are very important in some applications, e.g., printed circuit board assembly, as it was reported that from 20 percent to 50 percent loss of available capacity may arise from setup activities (Liu & Chang, 2000; Trovinger & Bohn, 2005). By reducing setup time, a direct saving of $1.8 million per year was obtained in a printed circuit board assembly plant (Trovinger & Bohn, 2005). Conner (2009) pointed out that 50 percent of the 250 industrial projects, that they have considered contain setup times and when these setup times are applied, 92 percent of the order deadline could be met. Loveland, Monkman, and Morrice (2007) addressed the scheduling problem at the manufacturing of Dell Inc. with the objective of minimizing total setup cost and proposed a methodology. As a result, the production volume was increased as much as 35 percent, and thus, Dell Inc. has saved over $1 million per year. Monkman, Morrice, and Bard (2008) proposed another methodology which has reduced the cost up to 21 percent over the savings of Loveland, Monkman, and Morrice (2007).

The interest in scheduling problems where setup times/costs are explicitly considered began in the mid-1960s. Allahverdi and Soroush (2008) presented about 50 different application industries where scheduling with explicit consideration of separate setup times/costs is essential. Some recent applications are provided next.


                     Pearn, Chung, and Lai (2007) considered integrated circuit assembly scheduling problem while Pearn, Chung, Yang, and Shiao (2008) addressed the wafer probing scheduling problem where both problems involve sequence-dependent setup times. The demand for electronic products has been increasing which has resulted in an increase in producing printed circuit boards (PCBs). Gelogullari and Logendran (2010) and Sabouni and Logendran (2013a, 2013b) pointed out the importance of explicitly considering setup times/costs in the manufacturing of PBS. Ying (2012) addressed the problem of wafer sorting in semiconductor manufacturing, which is usually regarded as the most critical stage in the whole wafer probing process. Ying (2012) and Lin et al. (2011a) pointed out that in wafer sorting scheduling problem, the minimization of total setup times is the primary criterion. Venditti et al. (2010) addressed a practical scheduling problem arising in the packaging department of a pharmaceutical industrial company. They were able to model the problem as a multi-purpose scheduling problem with setup times and proposed an effective algorithm to solve the problem, where computational experiments showed effectiveness of their approach. Motivated by the logistics operations in an express delivery company, Lee and Qi (2009) pointed out that the problem they faced can be considered scheduling problems with sequence-dependent setup times. Santos and Bernardo (2012) describe scheduling at an integrated pulp and paper mill, manufacturing papers for cardboard out of produced pulp, which is a scheduling problem with significant sequence-dependent setups. Motivated by a real-life scheduling problem in a sheet metal processing company in Malaysia, Ying and Bin Mokhtar (2012) formulated the problem as a single machine scheduling problem with sequence-dependent setup times where one of the objectives of the research was minimizing setup times. Chen et al. (2013) addressed a solar cell industry scheduling problem. They indicated that the problem can be modelled as a hybrid flowshop scheduling problem with setup times. Park and Seo (2013) addressed the transporter scheduling problem of ship assembly block operations management, which can be transformed into a parallel machine scheduling problem with sequence-dependent setup times. Bochtis et al. (2013) formulated the problem of finding a schedule for several geographically distributed fields where biomass handling operations have to be carried out involving a number of sequential tasks as a flowshop scheduling problem with sequence-depended setup times. By applying the approach, Bochtis et al. (2013) were able to reduce the total time about 10 percent as compared to a schedule based on the knowledge of the operations manager. Illeez and Guener (2008) addressed the importance of reducing of setup times in scheduling the entrance sequence of various models planned to be manufactured in the same sewing cell. Boctor et al. (2009) addressed the problem of scheduling operations of shoe manufacturing where setup times are considered as significant. Alfieri (2009) indicated that the manufacturing of cardboards involves scheduling problem with sequence-dependent setup times.

The research on scheduling problems with setup times/costs from mid-1960s to mid-1988 was surveyed by Allahverdi et al. (1999) which covered about 200 papers. Allahverdi et al. (2008) surveyed the work on scheduling problems with setup times/costs from mid-1988 to mid-2006 covering about 300 papers. This is the third comprehensive review paper, a continuation of the survey papers by Allahverdi et al. (1999, 2008), which surveys about 500 papers that have appeared from the mid-2006 to the end of 2014. The objective of the current survey paper is to review the literature on scheduling problems with setup times/costs involving static, dynamic, deterministic, and stochastic problems for all shop environments as a single-machine, parallel machines, flowshop (regular flowshop, no-wait flowshop, flexible flowshop, assembly flowshop), job shop, or open shop. Given that so many papers have appeared in a relatively short period of time, different researchers have addressed the same problem independently, by even using the same methodology. Throughout the survey paper, the independently addressed problems are identified, and the need to compare those results is emphasized.

The earlier research that was covered by Allahverdi et al. (2008) is not cited in this survey paper even when a comparison of a new result with a result that was referenced in Allahverdi et al. (2008) is required since otherwise the long list of references would be even longer. Furthermore, some papers even though are covered by Allahverdi et al. (2008) but appeared in the years 2007 and 2008 as the acceptance date of the survey paper by Allahverdi et al. (2008) was June 2006, and hence, are not included since they are already included in Allahverdi et al. (2008) as papers “in press”.

The following scheduling problems are not reviewed; scheduling with lot-sizing, with lot-streaming, with assembly line balancing, with malleable jobs, with vehicle routing, or scheduling with a single server to perform setup operation. Scheduling problems with job families where batch formation is a part of the decision making process are also excluded.

Classification and notation are provided in Section 2, single machine and parallel machine scheduling problems are discussed in Sections 3 and 4, respectively. Flowshop scheduling problems are covered in Section 5 while Section 6 addresses the scheduling problems in job shop and open shop environments. Finally, concluding remarks are made in Section 7.

Scheduling problems can be classified based on a number of factors including the number of stages jobs need to be processed, the number of machines at each stage, job processing requirements, setup time/cost requirements, and the performance measure to be optimized.

Setup times/costs can be classified as sequence-dependent or sequence-independent. Setup times/costs are called sequence-dependent when the time/cost to setup for a given job (product) depends on which job was setup on the resource (machine) prior to running that job.

For example, in manufacturing of clothes, before dyeing a yarn, the dyeing tank (the machine that processes the yarn to be dyed) needs to be cleaned. The setup (cleaning) time necessary to prepare for dyeing a coming job can be different, dependent upon the colors of the coming yarn and the one just finishing dyeing (Hsu et al., 2009). If the preceding job is black and the following one is white, then a full cleaning of the dyeing tank is required. On the other hand, if the preceding job is white color and the following one is black, then just a rough cleaning the dyeing tank is necessary. Therefore, less cleaning time is required when the tank is changed from white to black as opposed to from black to white. Another example is in the printing industry where the cleaning (setup) times of the printing presses depend on the size of paper and the color of ink used by the preceding job.

The two performance measures of “setup time” and “setup cost” can be considered as equivalent if setup time and setup cost are proportional. However, in general, this may not be the case (Allahverdi & Soroush, 2008).

Some scheduling problems consist of a number of job families where each family is a set of jobs that has similar characteristics in terms of setups, tooling and operation sequence. The number of job families is fixed as well as the number of jobs in each family. A setup on a machine is necessary when a job from a different family is to be processed. In other words, there is a negligible setup time/cost to change from one job to another with the same family but a major setup time/cost is needed between job families. The family setup time/cost can be also sequence-dependent or sequence-independent.

Regarding to setup times/costs, the same classification of problems, adopted in the survey paper by Allahverdi et al. (1999, 2008), is used. That is scheduling problems are classified as family and non-family setup times/costs, then for each class, the problem is further divided as sequence-dependent and sequence-independent setup times/costs.

The commonly utilized three-field notation α/β/γ is used to describe a scheduling problem (Graham et al., 1979). The first field (α) describes the shop (machine) setting. The second field (β) describes the setup information, other shop conditions, and details of the processing characteristics, which may contain multiple entries. For, the setup information though, the description of Allahverdi et al. (2008) is used for clarity purposes. The third field (γ) defines the performance measure. Table 1 describes the three fields in detail. For example, a two-machine flowshop scheduling problem to minimize makespan with family sequence-dependent setup times will be noted as F2/STsd,f
                     /Cmax
                     .

Minimizing total or mean of a performance measure results in the same solution. Hence, for example, total tardiness (∑Tj
                     ) and mean tardiness (∑Tj
                     /n) are equivalent criteria, thus, for simplicity we just refer both by ∑Tj
                     . This has been applied to other performance measures as well.

Papers addressing more than one performance measure can be categorized into two classes. The first class of papers considers the performance measures as separately, which means that they address different problems. For example, if a paper addresses the problem of 1/STsd
                     /Cmax
                     ,∑Tj
                      it means that the paper addresses both of the problems of 1/STsd
                     /Cmax
                      and 1/STsd
                     /∑Tj
                     . The second class takes into account all the performance measures of Z
                     1, Z
                     2,…, Zk
                     , i.e., multi-criteria. The notation of T'Kindt and Billaut (2002) is used for the multi-criteria scheduling problems. Therefore, the notation Fl
                      (Z
                     1, Z
                     2,…, Zk
                     ) is used when the objective is to minimize a linear combination of the k criteria while the notation of #(Z
                     1, Z
                     2,…, Zk
                     ) is used when a Pareto approach is taken. On the other hand, the notation Lex(Z
                     1, Z
                     2,…, Zk
                     ) is utilized when the decision maker is not authorized to make trade-offs between the criteria, and hence, the objective is to minimize Z
                     1 first, then Z
                     2, then Z
                     3 and so on, i.e., by using lexicographical order and optimizing the criteria one after the other. Finally, ∈(Z
                     1/Z
                     2,…, Zk
                     ) indicates that the objective is to minimize Z
                     1 subject to the constraints that the other objectives Z
                     2,…, Zk
                      have upper bounds while GP(Z
                     1, Z
                     2,…, Zk
                     ) denote that the goal programming approach is taken.

Different methods of solution have been proposed in solving scheduling problems. Table 2 describes the abbreviations of the methods that have been used in the papers reviewed in this survey.

The results for single machine, parallel machine, flowshop, job shop and open shop environments are presented in the coming sections, respectively. For each shop environment, the results are summarized in the order of STsi, STsd
                     
                     , 
                     STsi,f
                     , and STsd,f
                     . Moreover, the single criterion results are discussed followed by multiple criteria results for each setup time environment. Furthermore, the results for completion time based performance measures are presented followed by due date based performance measures.

The literature on scheduling, with setup times/costs, in a single machine environment is presented in this section. Tables 3
                     
                     –5
                      summarize the work on non-family setup, family setup, and past-sequence-dependent setup, respectively.


                        Ángel-Bello et al. (2011a) studied the problem of 1/STsd
                        /Cmax
                         with maintenance. They proposed a MIP model, presented a linear relaxation model, and an efficient heuristic procedure to solve larger size problems. Ángel-Bello et al. (2011b) proposed an efficient metaheuristic based on GRASP. Pacheco et al. (2013) proposed a heuristic method, hybridization of multi-start strategies with TS, for the same problem and they showed that their hybridized heuristic outperform that of Ángel-Bello et al. (2011b). Kaplanoglu (2014) also addressed the problem of 1/STsd
                        /Cmax
                         with maintenance but for the case of dynamic job arrivals. He proposed a collaborative multi-agent optimization method. On the other hand, Rojas-Santiago et al. (2014) presented a combination of Lagrangian relaxation and a heuristic for the problem of 1/STsd, rj
                        /Cmax
                        .


                        Stecco et al. (2008) addressed the problem of 1/STsd
                        /Cmax
                         where the setup times were not only sequence-dependent but also time-dependent. They proposed a branch-and-cut algorithm and showed that problems up to 50 jobs can be solved. Stecco et al. (2009) presented a TS algorithm and showed that the TS algorithm finds a better solution in shorter time.


                        Zammori et al. (2014) proposed a metaheuristic algorithm by integrating GA and harmony search for the problem of 1/STsd
                        /∑Tj, Tmax
                        , ∑(wj
                        
                        1
                        Ej
                         + wj
                        
                        2
                        Tj
                        ) with maintenance and machine breakdowns.


                        Ying and Bin Mokhtar (2012) addressed the problem of 1/STsd
                        /Cmax
                         with the secondary objective of minimizing TST where jobs dynamically arrive. They presented a simple heuristic algorithm based dynamic scheduling system for the problem.


                        Bahalke et al. (2010) developed a mathematical model and presented a TS algorithm and a GA for the problem of 1/STsd
                        /Cmax
                         with deteriorating jobs. Job deterioration implies that a job processing time is an increasing function of its execution starting time where any delay in the processing of the job is penalized by incurring additional time.


                        Bigras et al. (2008) presented B&B algorithms for the problem of 1/STsd
                        /∑Cj
                        
                        . They showed that problems up to a size of 50 jobs can be solved in a reasonable time. Chou et al. (2009) presented two exact methods, a constant programming model and a B&B algorithm, and two heuristics for the problem of 1/STsd, rj
                        /∑wjCj
                        . Nogueira et al. (2015a) proposed and analyzed different MIP formulations of the problem of 1/STsd, rj
                        /∑wjCj.
                         Their formulations are based on the knowledge of four different paradigms. The best formulation is obtained based on the computational experiments. Kodaganallur et al. (2014) presented a B&B algorithm for the problem of 1/STsd
                         with the performance measure of quadratic penalty function of job completion times. They also proposed a greedy stochastic algorithm and integrated the greedy stochastic algorithm in GA.


                        Luo et al. (2006a) and Luo and Chu (2007) presented some dominance relations and proposed B&B algorithms for the problem of 1/STsd
                        /Tmax
                        . Chen et al. (2006) presented a GA for the problem of 1/STsd
                        /Lmax
                        . The B&B algorithms of Luo et al. (2006a) and Luo and Chu (2007) for the problem of 1/STsd
                        /Tmax
                         have not been compared.


                        Luo and Chu (2006) and Luo et al. (2006a, 2006b) provided some dominance relations and presented a B&B algorithm for the problem of 1/STsd
                        /∑Tj
                        . Another B&B algorithm was proposed by Bigras et al. (2008) for the same problem. They showed that problems up to a size of 45 jobs can be solved in a reasonable time. The B&B algorithms of Luo and Chu (2006) and Luo et al. (2006a) and that of Bigras et al. (2008) have not been compared. An ACO heuristic was developed by Wang (2014) and its performance was compared with that of GA for the problem of 1/STsd
                        /∑Tj
                         where there is a limited buffer space.


                        Armentano and De Araujo (2006) presented a memory-based GRASP algorithm for the problem of 1/STsd
                        /∑Tj
                         and showed that their procedure outperforms the heuristics from the literature. Arroyo et al. (2009) proposed an ILS heuristic for the same problem. They showed that their heuristic is better than GRASP and ACO algorithms. Akrout et al. (2012) presented a GRASP algorithm based on the DE and tested the performance of their algorithm based on benchmark instances from the literature. Ouyang and Xu (2014) presented a GA, Sioud et al. (2010, 2012a) proposed a hybrid GA and Sioud et al. (2012b) presented several heuristics. Sioud et al. (2012b) presented a hybrid approach based on the integration of a GA and concepts from constraint programming, multi-objective evolutionary algorithms, and ACO. The memory-based GRASP heuristic of Armentano and De Araujo (2006), the ILS heuristic of Arroyo et al. (2009), the DE of Akrout et al. (2012), and hybrid GA of Sioud et al. (2012b) have not been compared. Nogueira et al. (2015b) addressed the problem of 1/STsd, rj
                        /∑Tj.
                         They proposed a hybrid Lagrangian metaheuristic, which is a Lagrangian relaxation, integrated with a metaheuristic. They have shown that their proposed approach can solve optimally about 80 percent of the benchmark problems in the literature.


                        Liao and Juan (2007) presented an ACO algorithm, Lin and Ying (2007) proposed SA, GA, and TS algorithms while Valente and Alves (2008) proposed several versions of beam search techniques based algorithms for the problem of 1/STsd
                        /∑wjTj
                        . Lin and Ying (2008) presented a hybrid SA and TS algorithm, and showed that their hybrid algorithm performs better than SA, GA, TS, and ACO. Cicirello (2009) presented a benchmark instance generator and a set of benchmark instances. Anghinolfi and Paolucci (2009) presented a discrete PSO algorithm for the same problem and showed that their discrete PSO algorithm outperforms the earlier existing algorithms including the ACO of Liao and Juan (2007). Luo et al. (2009b) presented an algorithm, called filter and fan, and showed that the filter and fan algorithm outperforms the ACO algorithm of Liao and Juan (2007) and the SA, GA, TS of Lin and Ying (2007). Tasgetiren et al. (2009) proposed a discrete DE algorithm by utilizing GRASP, referenced local search, and dispatching rules for the same problem. They showed that their algorithm outperform the PSO algorithm of Anghinolfi and Paolucci (2009). Bozejko (2010) presented a metaheuristic algorithm based on parallel scatter search and showed that it outperforms the heuristics proposed by Liao and Juan (2007), Lin and Ying (2007), and Valente and Alves (2008). Guo and Tang (2011) presented a scatter based metaheuristic and showed that their heuristic outperforms the DE algorithm of Tasgetiren et al. (2009) and the metaheuristic of Bozejko (2010) based on a benchmark problem sets. Luo et al. (2012b) presented an iterated filter-and-fan algorithm for the same problem and showed that their algorithm outperforms DE and discrete PSO. Deng and Gu (2014) proposed an iterated greedy algorithm and showed that their algorithm performs better than that of Tasgetiren et al. (2009). Kirlik and Oguz (2012) proposed a general VNS heuristic and tested their heuristic on the benchmark instances from the literature. On the other hand, Subramanian et al. (2014) developed an ILS heuristic for the problem and compared its performance with the discrete PSO of Anghinolfi and Paolucci (2009), discrete DE of Tasgetiren et al. (2009), and general VNS of Kirlik and Oguz (2012). Xu et al. (2014b) presented an ILS algorithm while Xu et al. (2014c) proposed hybrid evolutionary algorithms for the problem. The heuristics of Guo and Tang (2011), Luo et al. (2012b), Deng and Gu (2014), Subramanian et al. (2014), and Xu et al. (2014c) have not been compared.


                        Tanaka and Araki (2013) proposed an exact algorithm for the problem of 1/STsd
                        /∑wjTj
                        . Their algorithm is based on successive sublimation dynamic programming. They showed that their algorithm can optimally solve almost all benchmark instances in the literature. Neammanee and Reodecha (2009) considered the problem of 1/STsd
                        /∑wjTj
                         where the machine has a constrained feeder capacity. They proposed an MA which includes GA, local search, and some dispatching rules. Atighehchian and Sepehri (2013) addressed the problem of 1/STsd
                        /∑wjTj
                         for the case of dynamic job arrivals. They proposed a combination of SA and a multi-layer feed-forward neural network heuristic and showed that it performs well.


                        Liao et al. (2012) addressed the problem of 1/STsd
                        /∑wjTj
                        . They improved the complexities of searching the interchange, insertion, and twist neighborhoods from O(n
                        3) to O(n
                        2 log n). Li and Qiao (2008) presented an ACO algorithm for the problem of 1/STsd
                        /∑wjTj
                         for the case of dynamic job arrivals. They showed that the ACO performs 40 percent better than the current practice of the problem. Nogueira et al. (2015a) proposed different MIP formulations for the problem of 1/STsd, rj
                        /∑wjTj.
                         The best formulation is obtained based on the computational experiments.


                        Ye et al. (2006) presented a new version of ACO algorithm called Branching Ant Colony with Dynamic Perturbation for the problem of 1/STsd
                        /TST. They showed that the new version of ACO performs better than the regular ACO. 
                        Ozgur and Bai (2010) considered the same problem and presented a hierarchical composition procedure with negligible computation time. The hierarchical method of Ozgur and Bai (2010) and the ACO of Ye et al. (2006) need to be compared.


                        Lee et al. (2012b) addressed the problem of 1/STsd
                        /TST with multi-attribute setup times originated from the manufacturing plant of a company producing PVC sheets. In this problem, each job has several attributes and each attribute has one or more levels. Because there is at least one different level of attribute between two adjacent jobs, it is necessary to make a setup adjustment whenever there is a switch to a different job. The authors proposed a constructive heuristic, which is based on several theorems that they developed. Chen (2008b, 2009b) considered the problem of 1/STsd
                        /TST with maintenance. They proposed a heuristic and evaluated its performance by using a B&B algorithm. Lee, Liao, and Chung (2014) addressed the same problem of Lee et al. (2012b) with multi-attribute setup times to minimize Cmax
                         for the two identical parallel machine environments.


                        Rabadi et al. (2007) proposed an SA, a heuristic, and a hybrid of the heuristic and SA for the problem of 1/STsd
                        /∑(Ej
                         + Tj
                        ). They showed that the hybrid heuristic outperforms the other two heuristics. Chen et al. (2007) presented some dominance relations and proposed a GA which utilized the dominance relations. Hepdogan et al. (2009) presented a metaheuristic while Chang et al. (2011) presented some dominance relations for the same problem. Chang et al. (2011) combined these dominance relations with GA and showed that the combined meta-heuristic performs much better than the single GA. Chen and Chen (2011) and Chen et al. (2014) presented an extended artificial chromosomes with GA for the same problem and showed that their algorithm outperforms those of Rabadi et al. (2007) and Chang et al. (2011). The GA of Chen et al. (2007), the metaheuristic of Hepdogan et al. (2009), and the GA of Chen and Chen (2011) have not been compared.


                        Ribeiro et al. (2009, 2010) presented an adaptive GA for the problem of 1/STsd
                        /∑(wj
                        
                        1
                        Ej
                         + wj
                        
                        2
                        Tj
                        ). 
                        Nekoiemehr and Moslehi (2011) provided some dominance relations and presented a B&B algorithm for the problem of 1/STsd
                        /Fl
                        (Emax, Tmax
                        ).


                        Ozcelik and Sarac (2010) presented a GA for the problem of 1/STsd
                        /Fl
                        (Cmax
                        , ∑Tj
                        ). They evaluated its performance based on randomly generated data showing that it performs well.


                        Kim and Lee (2009) addressed the problem of 1/STsd
                         with the objective of minimizing the sum of penalties associated with earliness, tardiness, and due date assignment (common due date). They provided some dominance relations and presented lower and upper bounds. They also proposed a B&B algorithm by utilizing the dominance relations, lower and upper bounds.


                        Ang et al. (2009) considered the problem of 1/STsd
                         with conflicting objective functions such as average cycle time, average tardiness, and their standard deviations for the dynamic job arrival case. They proposed eight different dispatching rules and evaluated their performance by simulations.


                        Iranpoor, Ghomi, and Zandieh (2012) presented a time dependent traveling salesman problem formulation for the problem of 1/STsd
                        /Fl
                        (∑Ej
                        , ∑Tj
                        , ∑d) under a maintenance type, rate modifying activity, where d denotes the common due date of the jobs. They also presented a B&B algorithm which can solve problems up to 30 jobs in a reasonable amount of time. They also presented two metaheuristics based on ACO and GRASP and showed that the one based on ACO performs better.


                        Jula and Rafiey (2012) proposed network-based algorithms for the problem of 1/STsd
                         with strictly enforced time window constraints at the start time of each job to sustain a desired level of work in process. They compared the effectiveness, efficiency, and robustness of their proposed algorithms with an exhaustive search approach. Jula and Kones (2013) addressed the same problem with a secondary objective of minimizing makespan. They proposed a two-step goal MIP model and presented insertion based heuristics.


                        Wang (2013) presented two versions of the GA for the problem of 1/STsd
                        /#(∑Cj, maximum expected time of failure) with preventive machine maintenance. Choobineh et al. (2006) addressed the problem of 1/STsd
                        /GP(Cmax
                        , ∑Tj
                        , ∑Uj
                        ). They presented a MILP formulation for the problem and proposed a multi-objective TS heuristic.


                        Wu and Lee (2008) and Lee and Wu (2010) considered the problem of 1/STsi,f
                        /Cmax
                         with deteriorating setup and processing times. They developed polynomial solutions for the problem. Yang and Chand (2008) addressed the problem of 1/STsi,f
                        /Cmax
                         with learning and forgetting effects. They presented some dominance relations and proposed a B&B algorithm. Bai et al. (2012b) addressed the problem of 1/STsi,f
                        /Cmax
                         with general deterioration and learning effect. They showed that the problem is polynomially solvable. Yang and Yang (2010) and Yang (2011) addressed the problem of 1/STsi,f
                        /Cmax
                         with simultaneous considerations of learning and deteriorating effects for different functions. They showed that the problem remains polynomially solvable. Wang et al. (2008) showed that the problem of 1/STsi,f
                        /Cmax
                         remain polynomially solvable for the case of deteriorating jobs where both family setup times and processing times are proportional to a linear function of time.


                        Wang et al. (2012) considered the problem of 1/STsi,f, rj
                        /Cmax
                         with deteriorating jobs. They showed that under certain conditions, the problem is polynomially solvable. Xu et al. (2014a) addressed the same problem and showed that the problem can be solved under certain conditions polynomially while they proposed a heuristic algorithm for the general case. They showed that the error of their heuristic is very small.

The problem 1/STsi,f
                        /∑Cj
                         with deteriorating setup and processing times was addressed by Wu and Lee (2008) and He and Sun (2012). Wu and Lee (2008) showed that the problem is polynomially solvable under certain condition and presented a heuristic for the general problem. He and Sun (2012) showed that the problem is polynomially solvable under the agreeable condition. Bai et al. (2012b) addressed the problem of 1/STsi,f
                        /∑Cj
                         with general deterioration and learning effect. They showed that the problem is polynomially solvable. Yang and Yang (2010) and Yang (2011) addressed the problem of 1/STsi,f
                        /∑Cj
                         with simultaneous considerations of learning and deteriorating effects. They showed that the problem is polynomially solvable under certain conditions. Wang et al. (2008) showed the problem of 1/STsi,f
                        /∑wjCj
                         remain polynomially solvable for the case of deteriorating jobs where both family setup times and processing times are proportional to a linear function of time.


                        Liu, Wang, and Jin (2009) proposed a heuristic algorithm for the problem of 1/STsi,f
                        /Lmax. 
                        Hazir et al. (2008) presented four heuristics, SA, GA, TS, and ACO for the problem of 1/STsi,f
                        /∑Fj
                        . They showed that TS and ACO perform better than SA and GA. Cheng et al. (2011a) presented a B&B algorithm for the problem 1/STsi,f
                        /Tmax
                         with deteriorating jobs where a job processed later consumes more time than the same job when it is processed earlier.


                        Gupta and Chantaravarapan (2008) presented an MILP model for the problem 1/STsi,f
                        /∑Tj
                        . They also proposed two-phase heuristic algorithms, including SA. Empirical results indicated that the heuristics are effective. Omar et al. (2008) presented a two-level heuristic algorithm for the problem of 1/STsi,f
                        /∑wjTj
                        . They first developed an apparent tardiness cost with setups at the first level, and then they proposed a TS algorithm at the second level.


                        Lee et al. (2011) developed several dominance relations and a lower bound for the problem of 1/STsi,f
                        /∑Uj
                         with deteriorating setup and processing times. They also proposed a heuristic to find an upper bound for their developed B&B algorithm. Lee and Lu (2012) provided some dominance relations for the problem of 1/STsi,f
                        /∑wjUj
                         with deteriorating jobs.
                     


                        Wei and Wang (2010) presented polynomial time algorithms for the problems 1/STsi,f
                        /
                           
                              ∑
                              
                                 
                                    w
                                    j
                                 
                                 
                                    C
                                    j
                                    2
                                 
                              
                           
                         and 1/STsi,f
                        /
                           
                              ∑
                              
                                 
                                    w
                                    j
                                 
                                 
                                    W
                                    j
                                    2
                                 
                              
                           
                         for the case of simple linear deteriorating jobs.


                        Li et al. (2011b) provided a polynomial time algorithm for the problem of 1/STsi,f
                         with the objective of minimizing a cost function that includes earliness, tardiness, due date assignment, and flow time penalties.


                        Huang et al. (2011) addressed the problem of 1/STsi,f
                         with simultaneous considerations of learning and deteriorating effects with two different objective functions; minimizing Cmax
                         subject to the constraint that total resource consumption does not exceed a certain value, and minimizing total resource consumption subject the constraint that Cmax
                         does not exceed a certain value. They showed that both problems are polynomially solvable.


                        Ivanov et al. (2009) proposed an efficient algorithm for the problem of 1/STsd,f
                        /Cmax
                         such that the machine has additional assumptions which was motivated by MRI systems. The problem of 1/STsd,f
                        /Tmax
                         was addressed by Chen (2008a) where setup times are affected, by 2 hours, if the setup time is interrupted due to worker vacations. They proposed a dominance relation, a B&B algorithm, and a heuristic to solve the problem.


                        Jin et al. (2009a, 2010) developed dominance relations and presented a TS algorithm for the problem of 1/STsd,f
                        /Lmax. They showed that the TS algorithm performs well when compared with the current solution of the industrial problem that they considered. Jin et al. (2009b) presented an SA algorithm for the same problem. The TS algorithm of Jin et al. (2009a, 2010) and the SA algorithm of Jin et al. (2009b) have not been compared.


                        Lu et al. (2012) addressed the problem of 1/STsd,f
                         with the objective of minimizing absolute deviation of total flow time from the optimal solution under the worst case scenario. They considered both processing and setup times are uncertain within certain intervals. They formulated the problem as a robust constrained shortest path problem and proposed an SA based heuristic algorithm to solve the problem.


                        Rego et al. (2012) addressed the problem of 1/STsd,f
                        /#(Cmax
                        , ∑Tj
                        ), and proposed two multi-objective heuristics and a multi-objective heuristic based on Pareto ILS. They showed that the heuristic based on Pareto ILS performs better than the others.


                        Koulamas and Kyparisis (2008) introduced the concept of past-sequence-dependent setup times where the setup time is defined to be dependent on the jobs that have already been scheduled. In other words, the setup time of a job is proportionate to the sum of processing times of the jobs already scheduled.

Some papers addressed the problem for learning and/or deterioration effects for the past sequence-dependent setup times. Different learning and/or deterioration functions have been used by different papers. Explanation of the exact functions for learning and/or deterioration effects used for each paper would make the currently long paper even longer, and hence, the explanation of specific functions has not been given.


                        Biskup and Herrmann (2008) addressed the problem of 1/STpsd
                         in the presence of due dates. They considered different due date related performance measures. They showed that some problems remain polynomially solvable even when the setup times are dependent on the sequence of the already scheduled jobs while some other problems do not necessarily remain polynomially solvable. Xu and Zhao (2008) presented a polynomial solution algorithm for the problem of 1/STpsd, rj
                        /Cmax
                        . Mani et al. (2010) presented a polynomial algorithm for the problem of 1/STpsd
                         with the performance measure of TADC.


                        Kuo and Yang (2007) addressed the problem of 1/STpsd
                         with learning effect. They showed that the problems, with the performance measures of Cmax
                        , ∑Cj, TADC, sum of earliness, tardiness, and common due date penalties, can be solved in polynomial times. Mani et al. (2011) addressed the problem with the TADC performance measure. Lee (2011) considered the problem with a general learning effect and showed that the problem with respect to minimizing Cmax
                         and ∑Cj
                         are polynomially solvable. He also showed that the problems with respect to the performance measures of Lmax, Tmax
                        , ∑Tj
                         and ∑wjCj
                         are solvable under certain conditions. Wang et al. (2010b) showed the problem with the performance measures of ∑Wj
                        , total absolute difference in waiting time, sum of quadratic job completion times, and ∑h(Ej
                        ) subject to no tardy jobs are polynomially solvable while those with the performance measures of Lmax
                         and ∑wjCj
                         are polynomially solvable under certain conditions. Soroush (2013) showed that the result of Wang et al. (2010b) for the performance measure of ∑h(Ej
                        ) subject to no tardy jobs is incorrect, and hence he proposed polynomial time solution for the problem. Wang (2008) extended the results of Kuo and Yang (2007) with a time-dependent learning effect. The performance measures Wang (2008) considered were Cmax
                        , ∑Cj
                        , and the sum of quadratic job completion times. Bai et al. (2012a) addressed the problem of 1/STpsd
                         with general exponential learning effect. They showed that the problems, with the performance measures of Cmax
                        , ∑Cj
                        , 
                           
                              ∑
                              
                                 C
                                 j
                                 2
                              
                           
                        , can be solved in polynomial times while the problem with performance measures of Lmax
                         and ∑wjCj
                         are solvable under certain conditions.


                        Wang et al. (2009c) addressed the problem of 1/STpsd
                         with exponential time-dependent learning effect and showed that the problem with the performance measures of Cmax
                        , ∑Cj
                        , and the sum of quadratic job completion times are polynomially solvable while the problem remains polynomially solvable under certain cases with respect to ∑wjCj
                         and Lmax
                        .


                        Zhao and Tang (2010) addressed the problem of 1/STpsd
                         with respect to the performance measures of Cmax
                        , ∑Cj
                        , and weighted sum of earliness, tardiness, due-window starting time and size penalties with deteriorating jobs and with the assumption that job processing time are defined by functions, which are dependent on their starting times. They proposed polynomial time algorithms to solve the problems.


                        Cheng et al. (2011b) considered the 1/STpsd
                         problem with deteriorating jobs. They showed that the problem is polynomially solvable with respect to Cmax
                        , ∑Cj
                        , or 
                           
                              ∑
                              
                                 C
                                 j
                                 2
                              
                           
                        . They also showed that the problem is polynomially solvable with respect to Lmax
                         or ∑Tj
                         if certain conditions hold. Lai et al. (2011) also addressed the problem of 1/STpsd
                         problem with deteriorating jobs. They showed that the problems with the objectives of minimizing Cmax
                        , ∑Cj
                         are polynomially solvable, and the problems with the objective of minimizing Lmax, Tmax
                        , ∑Tj
                        , and ∑wjCj
                         are solvable under certain conditions.


                        Wang and Li (2011), Yin et al. (2010b), and Wang et al. (2009b) addressed the problem 1/STpsd
                         with the effects of learning and deterioration with different functions. The effects of learning and deterioration imply that the actual processing time of a job depends not only on the processing times of the jobs already processed but also on its scheduled position. All three papers showed that the problems with the performance measures of Cmax
                        , ∑Cj
                        , 
                           
                              ∑
                              
                                 C
                                 j
                                 r
                              
                           
                         (r > 0) are polynomially solvable and showed that the problems of Lmax
                        , ∑wjCj
                        , ∑Uj
                         are polynomially solvable under certain conditions. Furthermore, Toksari et al. (2010) proposed polynomial solutions for the performance measures of Cmax
                         and 
                           
                              ∑
                              
                                 C
                                 j
                                 2
                              
                           
                         while Yin et al. (2010a) proposed polynomial solutions with the performance measures of Cmax
                         and 
                           
                              ∑
                              
                                 C
                                 j
                                 r
                              
                           
                         (r > 0), and they also proposed polynomial solutions for the problem with the performance measures of Lmax
                        , ∑wjCj
                         under certain conditions. Xu et al. (2011) provided a condition that should be satisfied in order for jobs to remain deteriorating for the results obtained by Yin et al. (2010b). Huang (2012) provided a counter example of the result of Yin et al. (2010b) with the performance measure of ∑Uj
                        , Shen et al. (2012) gave a counter example of the result of Yin et al. (2010b) with the performance measure ∑wjCj
                        , Yin et al. (2011a) provided a counter example of the result of Wang et al. (2009b) with the performance measure of ∑Uj
                         while Yin et al. (2011b) provided a counter example of the result of Wang and Li (2011) with the performance measure of ∑Uj
                        . Wang and Wang (2013) considered the 1/STpsd
                         problem with general effects of learning and deterioration. They showed that the problem with the performance measures of Cmax
                        , ∑Lj
                        , 
                           
                              ∑
                              
                                 C
                                 j
                                 r
                              
                           
                         (r > 0) are polynomially solvable while the problem with the performance measures of Lmax, Tmax
                        , ∑Tj
                        , ∑wjCj
                         remain polynomially solvable under certain conditions. Wang and Wang (2014) considered the 1/STpsd
                         problem to minimize Cmax
                         with jobs ready times and group technology assumption where both job processing times and group setup times are both increasing functions of their starting times. They showed that the problem can be solved in polynomial time. Wang, Dong, Chen, and Lin (2014) also considered the problem, but where the setup time of a group depends on its starting time and the amount of resource allocated. On the other hand, Lee (2014) addressed the problem with the general effects of deterioration and learning.


                        Yin et al. (2012) addressed the problem of 1/STpsd
                         with the effects of learning and deterioration simultaneously, which is a generalization of some existing models in the literature. They showed that the problem with the performance measures of Cmax
                        , ∑Lj
                        , 
                           
                              ∑
                              
                                 C
                                 j
                                 r
                              
                           
                         (r > 0), ∑h(Ej
                        ) with common due date are polynomially solvable while the problems with the performance measures of Lmax, Tmax
                        , ∑Tj
                        , ∑wjh(Ej
                        ) with common due date, ∑wjCj
                         are solvable under certain conditions.


                        Cheng et al. (2010) addressed the 1/STpsd
                         problem with deteriorating jobs, learning effect, and proportional setup times, i.e., setup times are proportional to the actual processing times. They showed that the problem is polynomially solvable with respect to Cmax
                        , ∑Cj
                        , or 
                           
                              ∑
                              
                                 C
                                 j
                                 2
                              
                           
                        . They also showed that the problem is polynomially solvable with respect to Lmax
                         or ∑Tj
                         if processing times and due dates are agreeable.


                        Soroush (2012a) addressed the problem of 1/STpsd
                         with general job-dependent past-sequence-dependent setup times and learning effects with the objective of minimizing a linear combination of a pair of performance criteria consisting of Cmax
                        , ∑Cj
                        , and absolute difference in completion times. He provided polynomial solutions for special cases, and proposed a B&B algorithm for the general cases. Soroush (2012b) addressed the same problem with the performance measures of Cmax
                        , ∑Lj
                        , ∑Cj
                        , ∑Wj, TADC, sum of earliness, tardiness, and common due date penalty. He showed that special cases are polynomially solvable, and presented B&B algorithms for the general cases. Soroush (2014a) considered the problem for stochastic environments where the objective is to minimize a pair of the above mentioned performance measures for the case of job dependent positioned based learning effects where he proposed B&B algorithms. Soroush (2014b) provided quadratic assignment problem formulations for the stochastic bicriteria scheduling problem where setup and processing times, and reliabilities/un-reliabilities are sequence-dependent and position dependent random variables.


                        Huang et al. (2013) addressed the problem of 1/STpsd
                         with general time-dependent deterioration and position-dependent learning effect where the actual processing time of a job is not only a non-decreasing function of the total normal processing times of the jobs already processed, but also a non-increasing function of the job's position in the sequence. They showed that the problems with the performance measures of Cmax
                        , ∑Cj
                        , 
                           
                              ∑
                              
                                 C
                                 j
                                 r
                              
                           
                         (r > 0) are polynomially solvable while the problem with the performance measures of Lmax
                         and ∑wjCj
                         remain polynomially solvable under certain conditions.


                        Low and Lin (2012) addressed the problem of 1/STpsd
                         with a learning effect of family setup times. The actual processing time of a job in each family is a function of the sum of the normal processing times of the jobs already scheduled and the position of the corresponding job family in the sequence. They showed that the problem remains polynomially solvable for the performance measures of Cmax
                         and ∑Cj
                        . Yin et al. (2013) addressed the problem of 1/STpsd
                         with a general learning effect and family setup times. They showed that the problem with the performance measures of Cmax
                         is polynomially solvable while the problems with the performance measures of ∑Cj
                         and ∑wjCj
                         are polynomially solvable under certain conditions.


                        Kacem and Chu (2008) considered the problem of 1/STsi
                        /∑wjCj
                         with one planned setup period. They proposed two simple SPT based heuristics and showed that their worst-case performance ratio is 3.


                        Wang and Tang (2010) considered the single machine scheduling problem such that each job has a weight (or profit) and there exist sequence-dependent setup times among the jobs. Given that there exists a maximum available time limitation on the machine, it is impossible to complete all the jobs. Hence, the objective is to find a sequence of jobs what maximizes the weights of profit. They modeled the problem as a MIP and proposed a hybrid metaheuristic combining scatter search and VNS.


                        Wang et al. (2009a) addressed the single machine scheduling problem with family setup times such that both family setup times and job processing times are increasing functions of their starting times. They showed that the problem remains polynomially solvable with respect to Cmax
                         performance measure. Wang and Sun (2010) addressed the single machine problem such that family setup times and job processing times are both defined by decreasing function of starting time. They showed that the problem with the Cmax
                         performance measure remains polynomially solvable while the problem with the performance measure of ∑wjCj
                         is solvable under certain conditions.


                        Lu et al. (2014a) considered the problem of 1/STsd
                         where both processing and setup times are uncertain within some intervals. They proposed a local search based heuristic where the objective is to obtain a robust schedule with minimum absolute deviation from the optimal makespan.


                        Wang and Liu (2014) considered the group scheduling on a single machine with deteriorating setup and processing times where both setup and processing times are increasing function of their starting times. Their primary objective is to minimize ∑wjCj
                         while the secondary objective is to minimize maximum cost. They presented a polynomial time algorithm. On the other hand, Lu et al. (2014b) addressed the single-machine scheduling problem where group setup times and job processing times are both decreasing functions of their starting times. They indicated that the problem could be solved in polynomial time when the objective is to minimize Cmax
                         subject to release dates. When the starting times of group setup times and job processing times are linear functions of their starting times, Liu et al. (2014) showed that problem is solvable polynomially when the objective is to minimize Cmax
                         subject to release dates


                        Eren (2009a) developed a mathematical programming model for the single machine scheduling problem with learning effects on setup times and removal times where there exists deterioration effect on job processing times.

In a parallel machine environment, all the jobs are required to have a single operation as in the case of a single machine environment. However, the operation can be performed by any of a set of m machines, i.e., the m machines are working in parallel. The m machines may have the same speed, i.e., identical (P); or have different speeds, i.e., uniform (Q); or completely unrelated (R). A summary of the scheduling literature in parallel machine environments is presented in Tables 6
                      and 7
                     , where the parallel, uniform, or unrelated machines are indicated by the letter P, Q, or R in the third column in the “Comments” area.

Different researchers have addressed the problem of P/STsd
                        /Cmax
                        . Behnamian et al. (2009a) proposed a hybrid algorithm consisting of ACO, SA, and VNS. Hu and Yao (2010) provided two heuristics while Hu and Yao (2011a, 2011b) presented a MIP model. Hu and Yao (2011a, 2011b) proposed a GA, and introduced a lower bound to evaluate the quality of their proposed GA. The heuristics of Hu and Yao (2011a, 2011b) and Behnamian et al. (2009a) have not been compared.


                        Jairo et al. (2009) proposed a heuristic algorithm, which uses a strategy of random generation of various execution sequences, for the problem of P/STsd, rj
                        /Cmax
                        . Montoya-Torres et al. (2009, 2010) presented a heuristic algorithm for the same problem. They showed that the heuristic performs well by comparing its performance with a lower bound and optimal solution. The heuristics of Jairo et al. (2009) and Montoya-Torres et al. (2010) remain to be compared.

The problem of R/STsd
                        /Cmax
                         has been addressed by many researchers. Tran and Christopher Beck (2011) proposed a logic-based-Bender based decomposition approach, which is a combination of MIP and traveling salesman problem, Rabadi et al. (2006) presented a randomized priority search heuristic, Helal et al. (2006) proposed a metaheuristic based on TS, and Arnaout et al. (2010) provided an ACO algorithm and Arnaout et al. (2014) presented another ACO algorithm. Vallada and Ruiz (2011) proposed two versions of the GA, including a fast local search and a local search enhanced crossover operator. Vallada and Ruiz (2011) showed that the GA performs better than the randomized search heuristic of Rabadi et al. (2006). Ying et al. (2012a) proposed a restricted SA algorithm and showed that the restricted SA performs much better than the heuristics of Rabadi et al. (2006), Helal et al. (2006), and Arnaout et al. (2010). Niu et al. (2011) proposed an adaptive clonal selection algorithm and showed that their algorithm outperforms GA and SA. Chang and Chen (2011) derived dominance relations and developed a heuristic from the dominance relations and showed that the heuristic outperforms SA and GA. They further integrated the dominance relations in GA and SA and developed meta-heuristics, and showed that the meta-heuristic integrating the dominance relations and GA outperforms the others. Cota et al. (2014) proposed a heuristic and Lin and Ying (2014) presented a hybrid artificial bee colony algorithm and compared its performance with those of Chang and Chen (2011) and Ying et al. (2012a). Koh and Mahardini (2014) provided a new MIP formulation for the problem and proposed different heuristics, including GA while Avalos-Rosales et al. (2015) proposed yet another MIP formulation and showed that their new formulation is more effective than the previous ones. Avalos-Rosales et al. (2015) also proposed a metaheuristic algorithm. The heuristics of Lin and Ying (2014), Avalos-Rosales et al. (2015), Arnaout et al. (2014), and Niu et al. (2011) are not compared.


                        Liu et al. (2011) presented an ACO for the problem of R/STsd, prec/Cmax
                        . Hou and Guo (2013) addressed the problem of R/STsd
                        /Cmax
                         with multiple resource constraints. They provided a MIP model and presented a GA for large size problems. On the other hand, Rambod and Rezaeian (2014) proposed a metaheuristic, including GA and bee algorithms, for the problem of R/STsd
                        /Cmax
                         with machine eligibility and the probability that some jobs may need rework.


                        Li and Milne (2014) proposed a three-step heuristic algorithm for the problem of R/SCsd
                        /TSC. They showed that the algorithm performs well when applied to a chemical company.


                        Lee et al. (2010) presented a lower bound for the problem of P/STsd, rj
                        /Lmax
                         and proposed a restricted SA which incorporates a restricted search strategy. They showed that their restricted SA performs better than only SA and the existing algorithms. Ying and Cheng (2010) presented an iterated greedy heuristic for the same problem and showed that it performs better than earlier existing solutions. The heuristics of Lee et al. (2010) and Ying and Cheng (2010) have not been compared.


                        Gacias et al. (2010) addressed the problems of P/STsd, rj, prec/∑Cj
                         and P/STsd, rj, prec/Lmax. For each problem, they provided some dominance relations and presented a B&B algorithm. Moreover, they proposed heuristics based on climbing discrepancy search methods.


                        Fan and Tang (2006) developed an integer programming model for the problem of P/STsd
                        /∑wjCj
                        . They also presented a column generation algorithm for the problem and showed that the column generation algorithm can solve problems up to 10 machines and 60 jobs in reasonable time. Tsai and Tseng (2007) presented a MIP model, with discrete time assumption, for the problem of R/STsd
                        /∑wjCj
                         which can be used for small size problems. They also presented a GA for larger size problems.


                        Pfund et al. (2008) presented a heuristic, based on apparent tardiness cost with setups approach for the problem of P/STsd, rj
                        /∑wjTj
                        . Xi and Jang (2012) addressed the same problem by considering setup times into two categories based on whether or not the setup of the next selected future job is allowed to start when a machine becomes idle, even before the next job is ready to be processed. They called these two categories as continuous and separable. For both categories, they showed by computational experiments that modified apparent tardiness cost with setup and ready time and apparent tardiness cost with separable setup and ready time outperform other existing ATC-based rules.


                        Kim et al. (2006) proposed a TS algorithm for the problem of P/STsd, rj
                        /∑Tj
                         and showed that the TS outperforms the earlier existing solution. Driessel and Mönch (2009) proposed a VNS scheme while Driessel and Mönch (2011) presented several variants of VNS schemes for the problem of P/STsd, rj, prec/∑wjTj
                         and showed that the models perform much better than some dispatching rules.


                        Kang et al. (2007) addressed the problem of P/STsd, rj
                        /∑wjTj
                         with rework flows. They proposed a three phase heuristic where the third phase is a rolling horizon TS.


                        Armentano and de Franca Filho (2007) presented a memory-based GRASP for the problem of Q/STsd
                        /∑Tj
                         and showed that their procedure outperforms the heuristics from the literature.


                        Chen (2009a) presented an SA algorithm and two other heuristics, apparent-tardiness-cost-with-setup procedure and designed improvement procedure, for the problem of R/STsd
                        /∑Tj
                         with due date constraints where setup times are also machine dependent. He showed by extensive computational experiments that the SA performs much better than the other two heuristics. Lin et al. (2011b) proposed an iterated greedy algorithm while Ying and Lin (2012) proposed an artificial bee colony algorithm for the same problem. Lee et al. (2013) proposed a TS algorithm which incorporates variable neighborhood generation methods and showed that their TS algorithm outperforms the SA of Chen (2009a) and the iterated greedy algorithm of Lin et al. (2011b). The heuristics of Ying and Lin (2012) and Lee et al. (2013) remain to be compared.


                        de Paula et al. (2010) presented a non-delayed relax-and-cut algorithm for the problem of R/STsd
                        /∑wjTj
                        , a real case of a particular plant of a refractory brick factory. They also proposed a Lagrangian heuristic for obtaining approximate solutions. They were able to obtain optimal solutions for problems up to 180 jobs and 6 machines by using their proposed solution. Two dominance relations were developed by Aramon Bajestani and Tavakkoli-Moghaddam (2009) for the same problem. They also presented a B&B algorithm which integrates the two dominance relations.


                        Zhang et al. (2007) presented five simple heuristics for the problem of R/STsd, rj
                        /∑wjTj
                         where a given job can be processed by a subset of the available parallel unrelated machines. They also presented a Q-learning algorithm and showed that the algorithm performs better than the five heuristics. Lin and Hsieh (2014) proposed a MIP model for the problem of R/STsd, rj
                        /∑wjTj
                         where setup times also depend on machines. They also presented an iterated hybrid metaheuristic integrating EMA algorithm and local search. They showed that the heuristic performs better than TS and ACO algorithms which were presented earlier in the literature for related problems. Pereira Lopes and de Carvalho (2007) proposed a branch-and-price algorithm for the same problem with the restriction of availability dates for machines.


                        Logendran et al. (2007) provided four different dispatching rules for the problem of R/STsd
                        /∑wjTj
                         with dynamic job arrivals. They also presented different search algorithms based on TS and evaluated them. Arango, Giraldo, and Castrillón (2013) proposed a GA for the problem of R/STsd, prec/∑Tj
                         for the case of dynamic job arrivals.


                        Behnamian et al. (2009c) presented three metaheuristics, based on SA, ACO, and VNS, for the problem of P/STsd
                        /∑(Ej
                         + Tj
                        ) where the jobs have due windows. They showed that the heuristic based on SA, ACO, and VNS perform better than the one based on SA and VNS and the one based on ACO and VNS. Anderson et al. (2013) proposed a network based MIP formulation model for the problem of P/STsd
                        /∑(Ej
                         + Tj
                        ). They showed that their MIP model is more efficient than the earlier existing models in terms of computational time for large problems. Anderson (2014) corrected an error in the earlier provided mathematical modeling formulation for the problem.

An MIP model for the problem of R/STsd
                        /∑(wj
                        
                        1
                        Ej
                         + wj
                        
                        2
                        Tj
                        ) was presented by Akyol and Bayhan (2008). They also presented an artificial neural network to solve the problem. Chen and Chen (2009) presented several metaheuristics, including TS and variable neighborhood decent approach, for the problem of R/STsd
                        /∑wjUj
                        . They showed that the metaheuristics perform much better than basic TS.


                        Gokhale and Mathirajan (2012) provided a mathematical formulation for the problem of (2012) P/STsd, rj
                        /∑wjFj
                         with the constraint of machine eligibility. They also provided a few heuristic algorithms.


                        Cevikcan et al. (2011) developed an expert system for the problem of P/STsd
                        /TST and showed that setup times are reduced by about 7 percent if the developed system is utilized compared with the currently used system.


                        Dinh and Bae (2012) addressed the problem of P//Fl
                         (∑Tj, TST) where setup times between two jobs not only depends on their sequence, but also on the previous sequences. They transformed the problem into a multi-depot multiple asymmetric travelling salesman problem and presented a MIP model.


                        Park and Seo (2012) considered the problem of P/STsd, prec with the objective of maximizing the work balance among transporters. Park and Seo (2013) also addressed the same problem with an additional performance measure of Cmax
                        . Park and Seo (2013) proposed a GRASP heuristic and compared its performance with the optimal solution using B&B algorithm for small size problems. They also compared its performance with centralized and decentralized heuristics and showed that the GRASP outperforms the other heuristics.


                        Kang and Shin (2010) addressed the problem of P/STsd
                        /∑Tj
                        , ∑Fj
                        , ∑Lj
                        , ∑Uj, number of reworks with rework probabilities. They developed two heuristics based on dispatching rules and problem-space-based search method.


                        Ribas-Vila et al. (2009) presented and evaluated six simple heuristic algorithms for the problem of P/STsd
                        /Fl
                         (∑Cj
                        , ∑Tj
                        ). 
                        Joo and Kim (2012) presented a MIP model for the problem of P/STsd, rj
                         with the objective of minimizing a weighted sum of setup times, delay times, and tardy times. They also proposed a GA, and a self-evolution algorithm and showed that the self-evolution algorithm performs much better.


                        Andrés and Ruiz (2007) addressed the problem of R/STsd
                        /Fl
                         (∑Cj, total # of resource assigned) where the amount of setup time not only depends on the machine and job sequence, but also on the number of resources assigned, which can vary between a minimum and a maximum. They presented a MIP model and proposed several fast dispatching heuristics. Kampke et al. (2009) proposed a GRASP based metaheuristic while Kampke et al. (2010) presented a new ILS heuristic and they showed that their GRASP based metaheuristic and ILS heuristic improve the best known results from the literature by a significant margin.


                        Rocha et al. (2008) presented two MIP models and a B&B algorithm for the problem of R/STsd
                        /Fl
                         (Cmax
                        , ∑wjTj
                        ) where setup times are machine dependent while Caniyilmaz et al. (2015) presented a metaheuristic integrating a swarm-intelligence-based (called ABC) algorithm and GA for the problem of R/STsd
                        /Fl
                         (Cmax
                        , ∑Tj
                        ). 
                        Wang et al. (2013) formulated the problem of R/STsd, rj
                        /Fl
                         (∑wjUj, Cmax
                        ) as an MIP and proposed a local search heuristic to solve larger size problems.


                        Tavakkoli-Moghaddam et al. (2008) presented a MIP model, based on goal programming, for the problem of R/STsd, rj, prec/Lex(∑Uj
                        , ∑Cj
                        ). On the other hand, Tavakkoli-Moghaddam et al. (2009) presented a GA for the same problem.


                        Gharehgozli et al. (2009) presented a mixed integer goal programming model for the problem of P/STsd, rj
                        /GP(∑wjTj
                        , ∑wjFj
                        ) where processing times are considered to be fuzzy. Naderi-Beni et al. (2014) proposed a fuzzy bi-objective MILP formulation and presented two metaheuristic algorithms for the problem of P/STsd, rj
                        /GP(∑Tj, work imbalance) where setup and processing times and release and due dates were considered to be fuzzy, i.e., uncertain.


                        Behnamian et al. (2010a, 2011a) addressed the problem of P/STsd
                        /#(Cmax
                        , ∑(Ej
                         + Tj
                        )) with due windows for jobs, i.e., each job has interval rather than a single value. Behnamian et al. (2010a) proposed a multi-phase covering Pareto-optimal front method by using a multi-phase algorithm iterating over a GA in the first phase and three hybrid metaheuristics in the second and third phases. They showed that the multi-phase method is a better tool to approximate the efficient set than the global archive sub-population GA presented previously. Behnamian et al. (2011a) proposed a Pareto-optimal front method by using hybrid metaheuristics and weighted min–max technique by using an ACO, SA, and VNS.


                        Li et al. (2012a, 2012b) presented a MILP model for the problem of P/STsd, rj
                        /GP(Cmax
                        , ∑Tj
                        ). They also proposed two metaheuristics; a non-dominated sorting GA and a fuzzy logic controlled coupled with the non-dominated sorting GA. They showed that the fuzzy logic controlled metaheuristic outperforms the other.


                        Chyu and Chang (2010) presented a Pareto evolutionary approach to the problem of R/STsd
                        /#(∑wjFj
                        , ∑wjTj
                        ). They showed that the Pareto evolutionary approach performs better than two multi-objective SA algorithms. Torabi et al. (2013) presented a multi-objective PSO algorithm for the problem of R/STsd, rj
                        /#(∑wjFj
                        , ∑wjTj, total machine load) where processing times and job due dates are uncertain.


                        Toksari and Guner (2010) presented a MIP formulation for the problem of P/STsd
                        /∑(wj
                        
                        1
                        Ej+wj
                        
                        2
                        Tj
                        ) with simultaneous effects of learning and linear deterioration. They also showed that the optimal solution for this problem is V-shaped.


                        Schaller (2014) proposed different versions of TS and GA algorithms for the problem of P/STsi,f
                        /∑Tj
                        . They showed that GA algorithms perform better than the TS algorithms.


                        Tavakkoli-Moghaddam and Mehdizadeh (2007) presented an integer linear programming model for the problem of P/STsi,f
                        /∑wjFj
                        . They also proposed a GA for solving large size problems.


                        Bettayeb et al. (2008) provided three lower bounds and a constructive heuristic for the problem of P/STsi,f
                        /∑wjCj
                        . They also proposed a B&B algorithm which incorporates the lower bounds. The computational experiments indicated that the algorithm is effective.


                        Loveland et al. (2007) presented an algorithm combining both optimization and heuristic components for the manufacturing of Dell Inc. which could be modeled as P/SCsd,f
                        /TSC. By using the algorithm, an effective production volume increased as much as 35 percent. As a result, Dell Inc. has saved over $1 million per year by implementing their algorithm. Monkman et al. (2008) considered the same problem where they proposed a GRASP algorithm. They showed that an additional reduction of 14–21 percent in cost is achieved by using GRASP over the algorithm of Loveland et al. (2007).


                        Park et al. (2012) considered the problem of P/SCsd,f
                        /∑Tj
                         such that jobs also have sequence independent setup times, called minor setup times, where jobs are allowed to be split such that the parts of the splitting jobs can be processed by different machines. They presented a job splitting and setup times based heuristic for the problem.


                        Chung et al. (2009) addressed the problem of P/STsd,f
                         with the objective of maximizing total profit subject to the constraint that contracted quantities should be fulfilled. They proposed two new algorithms and showed that they are indeed efficient.


                        Bozorgirad and Logendran (2012) addressed the problem of R/STsd,f, rj
                        /Fl
                         (∑wjCj
                        , ∑wjTj
                        ). They presented an MILP model and proposed meta-heuristics based on TS. They showed that their meta-heuristics perform well by comparing the performance with the optimal solution for small size problems.


                        Hsu et al. (2011) developed a polynomial time solution for the unrelated parallel machine scheduling problem with past-sequence-dependent setup times and learning effects with the objective of minimizing ∑Cj
                        . They also addressed two special cases of the problem. Kuo, Hsu, and Yang (2011) addressed the same problem with respect to TADC and total loads on machines, and they showed that the problem is polynomially solvable.


                        Eren (2009b) developed a mathematical programming model and presented three insertions based heuristics for the parallel machine scheduling problem to minimize ∑Cj
                         + ∑Tj
                         with setup times and removal times where there exist learning effect on setup times and removal times. A correction in the mathematical programming model of Eren (2009b) was proposed by Xu and Yin (2011b).


                        Yang, Hsu, and Yang (2010) considered the problem of unrelated parallel machine with learning effects on processing times, setup times, and removal times. They showed that the problem with the performance measures of ∑Cj
                        , total load, and total absolute deviation of job completion times are solvable under certain conditions.


                        Amini, Tavakkoli-Moghaddam, and Niakan (2011) addressed the parallel machine scheduling problem when there are position-based deteriorating jobs with setup and removal times that are affected by the position-based learning effect. The objective was to minimize the sum of ∑(Ej
                         + Tj
                        ), ∑Uj
                        , and ∑Cj
                        . A mathematical model was developed and some heuristics were proposed and compared.


                        Ruiz and Andrés-Romano (2011) addressed the problem of R/STsd
                         such that setup times depend on both machine and the amount of resources assigned. The performance measure is a linear combination of ∑Cj
                         and the total amount of resources assigned. They presented a MIP model and proposed fast dispatching heuristics. Bicalho, Dos Santos, and Arroyo (2011) presented two metaheuristic algorithms utilizing GRASP and TS for the same problem.


                        Lee et al. (2012a) addressed the parallel machine scheduling problem with history-dependent setup times where the duration of a setup operation does not depend only on the job that just has been completed but on a number of preceding jobs. They considered multiple objectives and presented pseudo-polynomial time algorithms for some of the problems.


                        Pessan, Neron, and Haouari (2013) considered the problem of scheduling operations within a production resetting that arises at the ball bearing factories. They showed that the problem can be can be modelled as an unrelated parallel machine scheduling problem with setup times. They proposed two lower bounds to minimize Cmax
                        . They indicated that the bounds are efficient.


                        Freeman et al. (2014) developed an MIP formulation for the problem of non-identical parallel machine with STsd
                         and SCsd
                         to capture trade-offs between overtime and labor costs and waste costs. They also developed two procedures.

We classify flowshop scheduling problems as; flowshop, no-wait flowshop, flexible flowshop, and assembly flowshop. There are m stages in series in an m-machine flowshop environment. Each job has to be processed in each of the m stages in the same order. Operation times for each job in different stages usually are different. There exists only one machine at each stage in an m-machine flowshop while there is more than one machine in at least one of the stages, as a result of the need to increase the capacity in that stage, in an m-machine flexible (or hybrid) flowshop. In a no-wait flowshop, a succeeding operation starts immediately after the preceding operation is completed. In a two stage assembly flowshop, each job consists of k specific operations, where the first k − 1 operations have to be performed on a pre-determined set of k − 1 machines, working in parallel, of the first stage, and the last operation k (the assembly operation) has to be performed on the second stage machine. It should be noted that flowshops are permutation flowshops, the same job sequence in each stage, unless stated as non-permutation where each stage may not have to have the same job sequence.


                     Filho et al. (2013) provided a survey on flowshop scheduling problems with sequence-dependent setup times by covering 83 papers, the majority of which were covered by Allahverdi et al. (1999, 2008). Therefore, what Filho et al. (2013) covered is just a small subset of what has been covered in this section since both sequence-dependent and sequence-independent problems are covered in this paper. Moreover, not only regular flowshops but also no-wait flowshop, flexible flowshop, and assembly flowshop are considered in this paper. The results for F2 are presented before those for Fm. Similarly, the results for FF2 are discussed before those for FFm.

A summary of the scheduling literature on flowshop scheduling in the environments of non-family and family setup times is presented in Tables 8
                      and 9
                     , respectively.

The results for each of the regular flowshop, no-wait flowshop, flexible flowshop, assembly flowshop, and uncertain environments are presented in the subsequent subsections, respectively.


                           Wang and Cheng (2007a) proposed a polynomial approximation scheme for the problem of F2/STsi
                           /Cmax
                            when there is an availability constraint on the first machine. Wang and Cheng (2007b) considered the same problem but where the availability constraint is on one of the two machines. They presented two heuristics.


                           Yang and Liu (2008) presented a multi-objective GA with local search for the problem of Fm/STsi
                           /Fl
                            (Cmax, Tmax
                           ). They showed that their multi-objective algorithm outperforms two other multi-objective GAs in the literature.


                           Xu and Yin (2011c) proposed a corrected integer programming model that was proposed by Eren and Güner (2006) for the problem of F2/STsi
                           /Fl
                            (∑Cj
                           , ∑Tj
                           ) was incorrect.


                           Eren (2007) developed an integer programming model and presented heuristics based on TS and random search for the problem of F2/STsi
                           /Fl
                            (∑Cj, Cmax, Tmax, Emax
                           ). He showed that the heuristic based on TS performs better than those based on a random search.


                           Msakni, Ladhari, and Allahverdi (2009) presented a constructive heuristic and Ladhari et al. (2012) proposed a new priority rule for the problem of F2/STsi
                           /∑Cj
                           . Ladhari et al. (2012) also proposed several constructive heuristics, local search procedures, and a multiple crossover GA. They showed that one of the constructive heuristics performs better than the best existing constructive heuristics in the literature, and also showed that one of the local search procedures performs better than the best existing local search procedure. Gharbi et al. (2013) proposed several new bounds for the problem of Fm/STsi
                           /∑Cj
                            and utilized these bounds in a B&B algorithm. They showed that their new bounds outperform the earlier existing bounds significantly.


                           Agrawal et al. (2012) considered the problem of F3/STsi
                           /∑Cj
                            with transportation times, and start and stop lags. They presented an algorithm which finds the optimal solution for small size problems.


                           Chang and Shao (2006) proposed an optimal property for the problem of F3/STsi, no-wait/∑Fj
                           . They also presented two heuristics which can be used for large size problems.


                           Nagano et al. (2012) provided a new evolutionary clustering search heuristic for the problem Fm/STsi, no-wait/∑Cj
                           . They showed that their heuristic is effective.


                           Allahverdi and Aydilek (2014) addressed the problem of Fm/STsi, no-wait/∈ (∑Cj
                           /Cmax
                           ). They proposed an insertion algorithm, two GA algorithms, three SA algorithms, two cloud theory-based SA algorithms, and a DE algorithm. The computational analysis showed that one of the SA algorithms performs much better than the others under the same computational time. Furthermore, the analysis indicated that the best performing algorithm performs significantly better than the earlier existing best algorithm.


                           Aldowaisan and Allahverdi (2015) proposed SA and GA algorithms for the problem of Fm/STsi, no-wait/∑Tj
                           . They also proposed improved versions of SA and GA algorithms and showed that the improved versions perform about 95 percent better. Furthermore, they showed that the improved version of GA outperforms the improved version of the SA by about 3.5 percent.


                           Lo et al. (2008) presented a B&B algorithm for the problem of FF2/STsi
                           /Cmax
                           . They also presented a GA for large size problems. Fattahi et al. (2014) addressed the problem FF2/STsi
                           /Cmax
                            with assembly operations. Several products of the same kind are ordered to be produced such that the parts are manufactured in the flexible flow shop and products are assembled in the assembly stage. They provided lower bounds and presented a B&B algorithm for the problem.


                           Huang et al. (2009) presented an integer programming model for the problem of FF2/STsi, no-wait/∑Cj
                           . They also presented an ACO algorithm and evaluated its performance, and showed that the heuristic performs well.


                           Allahverdi and Al-Anzi (2008) presented a dominance relation and Allahverdi and Al-Anzi (2009) proposed three heuristics for the AF2/STsi
                           /∑Cj
                            problem. The three heuristics were a hybrid TS and two versions of self-adaptive differential evolution algorithm. They showed that one version of the self-adaptive differential evolution algorithm performs much better than the other version and the hybrid TS.


                           Allahverdi et al. (2015) presented six algorithms for the AF2/STsi
                           /∑Tj
                            problem. The algorithms are different versions of SA, GA, and insertion algorithms. Moreover, they presented different dominance relations for the problem. The computational experiments indicated that one of their algorithms performs much better than the others. Aydilek et al. (2015b) proposed several dominance relations for the problem of AF2/STsi
                           /Tmax
                           . They also presented a metaheuristic that was shown to perform better than the best existing heuristic in the literature.


                           Tian et al. (2013) considered the problem of AF2/STsi
                           /Fl
                            (∑Cj, Cmax
                           ). They proposed a discrete PSO and compared the PSO performance with several other heuristics such as SA and TS and showed that the PSO performs well. Azadeh et al. (2012) considered the problem of AF2/STsi
                           /Fl
                            (∑Cj, Cmax
                           ) where machines are subject to random breakdowns and setup and processing times are stochastic. They presented an integrated simulation and artificial neural network algorithm for the problem.

In some real-world situations, setup and/or processing times may be uncertain as a result of random factors such as crew skills, temporary shortage of equipment, tools and setup crews, and unexpected breakdown of fixtures and tools.


                           Aydilek and Allahverdi (2013) addressed the F2/STsi
                           /Cmax
                            problem, where processing times are uncertain variables with known lower and upper bounds. They proposed polynomial time heuristics and showed that the average error of one of their proposed heuristics is less than 0.4 percent of the optimal solution. Aydilek et al. (2013) also addressed the same problem of F2/STsi
                           /Cmax
                            problem but where setup times are uncertain variables within certain intervals. They proposed some polynomial time heuristics which were shown to be very efficient, i.e., the average error of the best heuristic that they proposed was about 0.03 percent of the optimal solution. Aydilek et al. (2015a) generalized the results of Aydilek and Allahverdi (2013) and Aydilek et al. (2013). In other words, they considered the case where both processing times and setup times are uncertain with lower and upper bounds. They presented a dominance relation and proposed an algorithm which was shown to provide solutions close to the optimal solution, i.e., with an absolute error of less than 0.3 percent.


                           Gupta et al. (2013) addressed the F2/STsi
                           /Cmax
                            problem where both setup and processing times are under fuzzy environment and transportation times exist between the two machines. They provided a theorem and presented an algorithm to solve the problem.


                           Allahverdi (2007) presented some dominance relations for the problem of F3/STsi
                           /∑Cj
                            while Allahverdi (2008) proposed some dominance relations for the F3/STsi
                           /Cmax
                            problem, where both setup and processing times were considered to be uncertain variables with known lower and upper bounds. Allahverdi (2009) presented some dominance relations for the problem of F3/STsi
                           /Lmax
                            where again both setup and processing times are uncertain variables with known lower and upper bounds.

As in the previous section, the results for the regular flowshop, no-wait flowshop, flexible flowshop, and assembly flowshop environments are presented in the subsequent subsections, respectively.


                           Sun (2013) modeled side frame press shop in a truck manufacturing company as a F2/STsd
                           /Cmax
                            where there exist setup times only on the first machine and where the first machine has re-entrant work flow. They presented an ACO to solve the problem. Wang et al. (2014) presented several ILS algorithms for the problem of Fm/STsd
                           /Cmax
                           .


                           Lu and Logendran (2013) proposed a mathematical model for the problem of F2/STsd
                           /Fl
                            (∑wjCj
                           , ∑wjTj
                           ). They also proposed a TS algorithm for the problem and evaluated the performance of TS by using the mathematical model for small size problems. Wu and Jiang (2007) presented an integer programming model for the problem of F2/STsd
                           /Fl
                            (∑Cj, Cmax, Emax, Tmax
                           ).


                           Mansouri et al. (2007, 2009) addressed the problem of F2/STsd
                           /#(Cmax, TN). They proposed multi-objective metaheuristics based on GA and SA, and showed that the metaheuristic based on GA outperforms that of the one based on SA.

The problem of Fm/STsd
                           /Cmax
                            has been addressed by many researchers. Gajpal et al. (2006) proposed an ACO algorithm and showed that their algorithm outperforms the earlier existing heuristics in the literature. Tang and Huang (2007) proposed a B&B algorithm and a two-stage heuristic algorithm. Mirabi et al. (2008) presented a hybrid EMA algorithm and showed that their hybrid algorithm performs better than the earlier heuristics while Mirabi (2011) presented an ACO algorithm and Mirabi (2014) proposed a hybrid GA. Kaweegitbundit (2011) proposed a MA, a GA, and another heuristic, and showed that the MA performs better than the other two. Li and Zhang (2012) presented different versions of adaptive hybrid GA, and showed that the performance of different versions of their algorithms depend on the ratio of setup to processing times. Vanchipura and Sridharan (2013a) presented two constructive heuristics. They compared the performances of their heuristics with an earlier existing constructive heuristic and showed that their heuristics, in particular the fictitious job ranking heuristic, performed better than the earlier existing one. Vanchipura, Sridharan, and Babu (2014) also addressed the same problem. They proposed two neighborhood search-based heuristics which were shown to outperform the best heuristic proposed by Vanchipura and Sridharan (2013a). Vanchipura and Sridharan (2013b) considered the same problem with the objective of investigating the effect of setup time on the makespan under the varying proportion of setup time. The heuristics of Vanchipura et al. (2014), Li and Zhang (2012), Kaweegitbundit (2011), Mirabi et al. (2008), and Mirabi (2011, 2014) remain to be compared.


                           Li and Zhang (2012) presented different versions of adaptive hybrid GA for the problem of Fm/STsd
                           /∑wjTj
                           . They showed that the performance of different versions of their algorithms depends on the ratio of setup to processing times. Nishi et al. (2011) presented a column generation algorithm, Santos et al. (2014) proposed a TS algorithm while Nishi and Hiranaka (2013) presented a Lagrangian relaxation and cut generation method. Nishi and Hiranaka (2013) also developed a dynamic programming to solve sub-problems with cut generation for a set of jobs with constraints. Computational experiments showed that their method is very efficient. Ziaee (2013) addressed the same problem but for non-permutation environments where he showed that the local search based heuristic that he presented outperforms the earlier meta-heuristic methods not only in terms of error but also in terms of computational time. The heuristics of Li and Zhang (2012), Santos et al. (2014), and Ziaee (2013) remain to be compared for permutation environments.


                           Varmazyar and Salmasi (2012a) presented three metaheuristics based on TS for the problem of Fm/STsd
                           /∑Uj
                           . They showed that one of them performs better than the other two. Varmazyar and Salmasi (2012b) presented a MILP model and proposed several metaheuristics based on TS and ICA. They showed that the hybrid heuristic of TS and ICA performs as the best. Dhouib et al. (2013) presented two mathematical programming formulations and presented an SA for the same problem but with time lags which are defined as intervals of time that must exist between every couple of successive operations of the same job.


                           Jeong and Kim (2014) proposed a B&B algorithm and presented heuristics for the problem of F2//∑Tj
                            where STsd
                            exist on the second machine for jobs in re-entrant environments.


                           Eren (2010) proposed an integer programming model and developed three insertion based heuristics for the problem of Fm/STsd
                           /Fl
                            (∑wjCj, Cmax
                           ). He showed that the heuristics are effective by comparing the performance of the heuristics with the exact solutions. Xu and Yin (2011a) corrected the model of Eren (2010).


                           Amin-Tahmasbi and Tavakkoli-Moghaddam (2011) presented a mathematical model for the problem of Fm/STsd
                           /#(∑Cj
                           , ∑(Ej
                            + Tj
                           )). They also proposed a multi-objective immune system algorithm and showed that it performs better than two other multi-objective GAs.


                           Mehravaran and Logendran (2012) addressed the problem of Fm/STsd, rj
                            with the objective of minimizing work-in-process and maximizing customer service level under both permutation and non-permutation environments. They formulated the problem as a MIP and proposed a heuristic algorithm based on TS for solving large size problems. Mehravaran and Logendran (2013) addressed the problem of Fm/STsd, rj
                           /Fl
                            (∑wjCj
                           , ∑wjTj
                           ) for permutation and non-permutation flowshops with machine availability constraint. They presented a mathematical model and proposed three different search algorithms to solve the problem.


                           Yu (2014) proposed a metaheuristic heuristic based on PSO for the problem of Fm/STsd
                           /Fl
                            (∑wjEj
                           , ∑wjTj, machine idle time) for the multiprocessors flowshop environments.


                           Zhuang et al. (2014) proposed a hybrid greedy algorithm for the problem of Fm/STsd, no-wait/Cmax
                           . They showed that their proposed algorithm gets best performance against the deterministic heuristics while it outperforms the best non-deterministic one on most instances with the same computation-time.


                           Rabiee et al. (2012) addressed the problem of F2/STsd, no-wait/∑Cj
                            where jobs might have rework. They proposed an adapted ICA. They showed that their algorithm performs better than GA and population based SA. A hybrid algorithm based on ICA was proposed by Rabiee et al. (2014) for the problem of FF2/STsd, no-wait/Cmax
                            where jobs might have rework.


                           Qian et al. (2011) proposed hybrid DE algorithm for the problem of Fm/STsd, no-wait, rj
                           /∑Cj
                           . They showed by computational experiments that the algorithm is robust and efficient.


                           Arabameri and Salmasi (2013) presented proposed a MILP model for the Fm/STsd, no-wait/∑(w
                           1
                           
                              jEj
                            + w
                           2
                           
                              jTj
                           ) problem. They also developed a TS algorithm and a PSO algorithm. They indicated that the PSO algorithm outperforms TS algorithm, in particular, for large size problems.


                           Nagano et al. (2014) addressed the problem of Fm/STsd, no-wait,/Cmax
                            where they provided a hybrid evolutionary cluster search metaheuristic and showed that it performs well. The problem of Fm/STsd, no-wait/∑Cj
                            was considered by Nagano et al. (2015) where they presented a new constructive heuristic, called QUARTS, which breaks the problem in quartets in order to minimize ∑Cj
                           . On the other hand, Nagano and Araujo (2014) presented two new constructive heuristics for the problem of Fm/STsd, no-wait to minimize Cmax
                            and total flowtime, respectively. They showed that their heuristics outperform the earlier existing heuristics.


                           Vanchipura and Sridharan (2014) developed and analyzed of hybrid genetic algorithms for the problem of Fm/STsd
                           . They developed variations of genetic algorithm by using combinations of initial populations and crossover operators.


                           Song et al. (2010) evaluated the performance of different dispatching rules for the problem of FF2/STsd
                           /Cmax
                            where there exists no buffer space between the two stages. Luo et al. (2009a) addressed the same problem but with maintenance and machine breakdowns. They proposed a GA and compared the results of GA with that of real life production results which indicated that the GA is effective.


                           Salhi et al. (2007) presented an algorithm, called Estimation of Distribution Algorithm, Abiri et al. (2009) proposed a TS algorithm, Alem Tabriz et al. (2009) presented an SA, Naderi et al. (2009d) provided a hybrid SA, and Naderi et al. (2010b) presented an ILS algorithm for the problem of FFm/STsd
                           /Cmax
                           . They showed that their TS, SA, and ILS algorithms outperform the existing RKGA. Mirsanei et al. (2011) presented an SA combined with RKGA and IA for the problem and showed that their SA algorithm performs better than the earlier existing RKGA and IA. Behnamian et al. (2012) addressed the same problem and proposed a hybrid metaheuristic approach integrating several features from the ACO, SA and VNS. Computation results indicated that the hybrid metaheuristic outperforms the earlier existing algorithms. Gomez-Gasquet et al. (2012) presented a multi-agent GA for the same problem. Sioud et al. (2013) proposed a GA algorithm, with three new crossover operators, and showed that it performs better than the ILS of Naderi et al. (2010b) while Sioud et al. (2014) proposed an ACO algorithm. The TS algorithm of Abiri et al. (2009), the SA algorithm of Alem Tabriz et al. (2009), the SA algorithm of Mirsanei et al. (2011), the GA algorithm of Gomez-Gasquet et al. (2012), and the GA algorithm of Sioud et al. (2013) have not been compared.


                           Rossi (2014) considered the problem of FFm/STsd
                           /Cma
                           
                           x with transportation time. He proposed an ACO algorithm with reinforced pheromone relationships and showed that the proposed algorithm performs better.


                           Naderi et al. (2009c) presented a VNS algorithm for the problem of FFm/STsd
                           /Cmax
                            with preventive maintenance and showed that the VNS heuristic performs well. Jabbarizadeh et al. (2009) addressed the problem of FFm/STsd
                           /Cmax
                            with machine availability constraint. They proposed three priority based simple heuristics and two metaheuristics based on GA and SA to solve the problem.


                           Gholami et al. (2009) presented a GA while Zandieh and Gholami (2009) proposed an IA for the problem of FFm/STsd
                           /Cmax
                            where machines are subject to random breakdowns. The GA of Gholami et al. (2009) and the IA of Zandieh and Gholami (2009) have not been compared.


                           Urlings and Ruiz (2007) proposed a GA, including local search procedures, for the problem of FFm/STsd
                           /Cmax
                            with time lags and machine release dates. Zandieh et al. (2010) provided a MIP model for the same problem. They also presented a GA for the problem and compared its performance with some dispatching rules. The GA of Zandieh et al. (2010) and the GA of Urlings and Ruiz (2007) have not been compared.


                           Javadian et al. (2012) presented a MIP model for the problem of FFm/STsd
                           /Cmax
                            with time lags and the possibility of jobs skipping some stages. They also proposed a metaheuristic based on IA for the problem.


                           Yaurima et al. (2009) considered a production environment of a television assembly line for inserting electronic components where the problem can be modeled as FFm/STsd
                           /Cmax
                            with availability constraint, unrelated machines, and limited buffers. They proposed a GA algorithm and showed that the proposed algorithm improves the current practice.


                           Moradinasab et al. (2013) presented an adaptive ICA and a GA for the problem of FF2/STsd, no-wait/Cmax. They compared the performance of these algorithms with ACO and showed that the algorithms perform better. Jolai et al. (2012) addressed the problem of FFm/STsd, no-wait/Cmax
                           . They proposed three metaheuristic algorithms; SA, ICA, and a hybridization of both. They showed that the hybridization of the two performed much better than the other two. Since the FF2 is a special case of FFm, the hybridized heuristic of Jolai et al. (2012) and those of Moradinasab et al. (2013) have to be compared. On the other hand, Jolai et al. (2014) proposed an enhanced invasive weed optimization algorithm for the problem of FFm/STsd, rj
                           /Cmax
                            with transportation time and with the possibility of jobs having rework.


                           Naderi et al. (2009d) presented a hybrid SA, including a local search, for the problem of FFm/STsd
                           /Tmax. They showed that their heuristic performs better than the existing heuristics in the literature.


                           Mousakhani (2013) presented a MIP model for the problem of FFm/STsd
                           /∑Tj
                           , and proposed a metaheuristic algorithm based on ILS. They showed that the metaheuristic outperforms TS and VNS heuristics developed in the literature for other problems. Naderi et al. (2009e) presented an MILP model for the problem of FFm/STsd
                           /∑wjTj
                            with transportation times. They also presented an EMA and showed that both the MILP model and EMA are effective. Since the problem addressed by Mousakhani (2013) is a special case of that of Naderi et al. (2009e), their algorithms need to be compared.


                           Behnamian et al. (2010b) addressed the problem of FFm/STsd
                           /∑(Ej
                            + Tj
                           ). They proposed a hybrid metaheuristic algorithm which comprises three components of ACO, SA, and VNS. A design of experiments approach is employed to calibrate the parameters of the algorithm. They showed that their proposed algorithm is computationally more effective in yielding solutions of better quality than the adapted RKGA and IA presented previously in the literature. Behnamian and Zandieh (2013) presented a hybrid metaheuristic consisting of PSO, SA, and VNS for the problem of FFm/STsd
                           /∑(Ej
                            + Tj
                           ) where the jobs have position-dependent learning effect. Behnamian and Zandieh (2011) formulated the problem of FFm/STsd
                           /∑ (Ej
                            + 
                              
                                 T
                                 j
                                 2
                              
                           ) as a MIP and proposed a discrete colonial competitive algorithm. They assumed that the waiting time for each job between two consecutive stages cannot be greater than a given upper bound.


                           Kia et al. (2010) provided a simulation model addressing the problems of FFm/STsd
                           /∑Fj
                            and FFm/STsd
                           /∑Tj
                            for the dynamic job arrivals. They evaluated different dispatching rules and proposed several heuristics. They indicated that one rule performs well for the problem with the performance of ∑Fj
                            while another rule preforms well for the ∑Tj.
                           
                        


                           Li et al. (2010) presented a non-linear MIP model for the problem of FFm/STsd
                            with the objective of minimizing the sum of ∑wjCj
                            and absolute deviation of workload of machines. They also proposed a two-stage heuristic algorithm. Li et al. (2011a) addressed the same problem but with limited buffers and maintenance. Li et al. (2011a) proposed a non-linear MIP model and proposed a two-stage heuristic algorithm including GA and local search. They indicated that the proposed heuristic saves up to 10 percent based on industrial implementation.


                           Jungwattanakit et al. (2009) addressed the problem of FFm/STsd
                           /Fl
                            (Cmax
                           , ∑Uj
                           ) for the case of unrelated parallel machines. They formulated the problem as a 0–1 MIP, presented constructive heuristics, and proposed three metaheuristics, namely, SA, GA, and TS. They showed that SA outperforms GA and TS. Pargar and Zandieh (2012) presented a mathematical model for the problem of FFm/STsd
                           /Fl
                            (Cmax
                           , ∑Tj
                           ). They also proposed a metaheuristic called water flow like algorithm and showed that this metaheuristic outperforms the RKGA.


                           Rashidi et al. (2010) presented a GA for the problem of FFm/STsd
                           /#(Cmax, Tmax
                           ) with the constraint of processor blocking. For the limited buffer environments, Abyaneh and Zandieh (2012) presented a GA for the problem of FFm/STsd
                           /#(Cmax
                           , ∑Tj
                           ). On the other hand, Khalili and Naderi (2015) provided an MILP formulations and proposed a bi-objective imperialist competitive algorithm for the problem of FFm/STsd, no-wait/with the objective of minimizing both Cmax
                            and ∑Tj.
                        


                           Mousavi et al. (2011, 2012) addressed the problem of FFm/STsd
                           /#(Cmax
                           , ∑Tj
                           ). Mousavi et al. (2011) proposed a bi-objective heuristic for the problem while Mousavi et al. (2012) developed evolutionary algorithms based on GA, with the objective of finding a set of non-dominated solutions (efficient solutions or Pareto front), and showed that their algorithms outperform those of earlier results in the literature. Karimi et al. (2010) presented a multi-search GA while Zandieh and Karimi (2011) proposed an adaptive multi-population GA for searching Pareto optimal solution for the problem of FFm/STsd
                           /#(Cmax
                           , ∑wjTj
                           ). Ebrahimi et al. (2014) also addressed the same problem of FFm/STsd
                           /#(Cmax
                           , ∑wjTj
                           ) but where due dates are assumed to be random variables following normal distribution. They presented a non-dominated sorting GA and a multi-objective GA for the problem. The heuristics of Karimi et al. (2010) and Zandieh and Karimi (2011) remain to be compared. Also, the heuristics of Mousavi et al. (2011, 2012) and remain to be compared. Moreover, since the problem of Mousavi et al. (2012) is a special case (with job equal weights) of the problem addressed by Zandieh and Karimi (2011), their heuristics need to be compared. Asefi et al. (2014) proposed a metaheuristic for the problem of FFm/STsd, no-wait/#(Cmax
                           , ∑wjTj
                           ).
                        


                           Behnamian et al. (2009b, 2011b) considered the problem of FFm/STsd
                           /#(Cmax
                           , ∑(Ej+Tj
                           )). Behnamian et al. (2009b) proposed a multi-phase covering Pareto-optimal front method by using a hybrid metaheuristic including RKGA while Behnamian et al. (2011b) proposed a hybrid metaheuristic consisting of ACO, SA, and VNS.


                           Behnamian and Ghomi (2011) considered the problem of FFm/STsd
                           /#(Cmax, total resource allocation cost) where there are unrelated parallel machines. They developed a multi-objective hybrid metaheuristic with the objective of obtaining Pareto-optimal solutions. The hybrid heuristic combines GA and VNS. Behnamian et al. (2014) proposed a hybrid heuristic, which consists of PSO, TS, and VNS, while Behnamian (2014a) presented parallel algorithms for the problem of FFm/STsd
                           /#(Cmax
                           , ∑(Ej+Tj
                           )). On the other hand, Behnamian and Ghomi (2014) proposed a PSO algorithm for the problem of FFm/STsd
                           /#(Cmax
                           , ∑(Ej+Tj
                           )) where processing and setup times are considered to be fuzzy along with fuzzy due dates.


                           Behnamian (2014b) proposed a colonial competitive algorithm for the problem of FFm/STsd
                           /#(Fl
                            (Cmax
                           , ∑Ej
                           , ∑Tj, # of worker employed) for the case of simultaneous effects of learning and deterioration.


                           Song et al. (2012) considered the problem of AF2/STsd
                           /Cmax
                            with limited intermediate buffers. They proposed a GA hybridized with problem knowledge-based heuristics and showed that it is efficient by computational experiments. On the other hand, Navaei et al. (2014) proposed hybrid metaheuristics, including SA, for the problem of AF2/STsd
                           /Cmax
                            where there exist more than one machine at the second stage and where the objective is to minimize the sum of holding and delay costs.


                           Mozdgir et al. (2013) addressed the problem of AF2/STsd
                           /Fl
                            (Cmax
                           , ∑Cj
                           ) such that there are a number of non-identical machine at the second stage. They presented a MIP model and proposed a hybrid neighborhood search heuristic. They indicated that the proposed heuristic performs well when compared to the optimal solutions obtained by the MIP model.


                           Dalfar et al. (2012) considered the problem of AF2/STsd
                           /Fl
                            (∑Uj, Cmax
                           , 
                              
                                 ∑
                                 
                                    E
                                    j
                                    2
                                 
                              
                           , 
                              
                                 ∑
                                 
                                    T
                                    j
                                    2
                                 
                              
                           ) with transportation times. They presented a hybrid GA and evaluated its performance with the optimal solution for small size problems.


                           Maboudian and Shafaei (2009) addressed the problem of AF2/STsd
                           /Fl
                            (Cmax, Tmax
                           ). They presented a lower bound and proposed a non-linear programming model for the problem.


                           Hatami et al. (2010) addressed the AF3/STsd
                           /Fl
                            (∑Cj, Tmax
                           ) problem with transfer times. They presented a mathematical model and proposed two meta-heuristics based on SA and TS for the problem.


                        Pang (2013) presented a GA for the problem of F2/STsi,f, no-wait/Lmax
                        , and showed that it is effective. Schaller (2012) presented variable greedy algorithms and VNS procedures for the problem of Fm/STsi,f
                        /∑Tj
                        . He showed that variable greedy algorithms are effective for small size problems while VNS procedures are effective for large size problems.


                        Schaller and Valente (2013) addressed the problem of Fm/STsi,f
                        /∑(Ej
                         + Tj
                        ) for the case of non-delay schedules. They presented variable greedy algorithms along with a GA. They showed that the greedy algorithms are efficient for small size problems while the GA performs well for medium and large size problems.


                        Luo et al. (2012a) addressed the problem of FFm/STsi,f
                        /Cmax
                         and presented a GA. They showed that the GA is efficient.


                        Liou et al. (2013) addressed the problem of F2/STsd,f
                        /Cmax
                         with transportation times and sequence-dependent family removal times. They presented some lower bounds and proposed a hybrid heuristic consisting of PSO and GA. Three lower bounds were developed by Liou and Liu (2010) for the problem of F2/STsd,f
                        /∑Cj
                        . They also presented a PSO algorithm and evaluated its performance with the developed lower bounds. Wang et al. (2010a) proposed two versions of GA, a niche GA and a standard GA, for the problem of F2/STsd,f
                        /∑(Ej
                         + Tj
                        ) where each job has a due window.

The problem of Fm/STsd,f
                        /Cmax
                         has been addressed by many researchers. Hendizadeh et al. (2008) proposed meta-heuristic algorithms based on TS by applying the concept of elitism and the acceptance of worse move to improve the intensification and diversification of moves. Computational analysis showed that the earlier existing MA was superior. Lin et al. (2009a) presented an SA algorithm for the problem and showed that their SA algorithm outperforms the TS of Hendizadeh et al. (2008). An evolutionary algorithm incorporating an ILS algorithm was proposed by Eddaly et al. (2009). Salmasi et al. (2009) presented a lower bound while Salmasi et al. (2011) proposed a mathematical programming model and a hybrid ACO algorithm for the problem. Salmasi et al. (2009) showed that their lower bound performs better than the existing lower bounds while Salmasi et al. (2011) indicated that the hybrid algorithm outperforms the earlier existing MA in the literature. Bouabda et al. (2011a) proposed a hybridizing ILS algorithm, which uses B&B algorithm inside an ILS, whereas Bouabda et al. (2011b) presented a cooperative approach, including GA and B&B algorithm, for the problem. Lin et al. (2011c) also addressed the problem where they presented a multi-start SA and compared its performance with an earlier established lower bound. On the other hand, Li and Li (2014) presented a hybrid harmony search algorithm for the problem. The heuristics of Salmasi et al. (2011), Eddaly et al. (2009), Lin et al. (2009a), and Lin et al. (2011c) have not been compared with each other.

The problem of Fm/STsd,f
                        /∑Cj
                         was addressed by Salmasi et al. (2010) for the first time. They proposed a mathematical programming model and a branch-and-price algorithm. In addition, they presented a TS algorithm along with a hybrid ACO algorithm. The computational analysis indicated that the hybrid approach performs better than TS. Hajinejad et al. (2011) proposed a PSO algorithm and showed that their algorithm outperforms the hybrid heuristic of Salmasi et al. (2010). Villadiego et al. (2012) presented an ILS heuristic and showed that their ILS heuristic outperforms the PSO of Hajinejad et al. (2011). On the other hand, Costa et al. (2014) proposed a hybrid metaheuristic using GA and biased random sampling. Naderi and Salmasi (2012) presented two versions of MIP model, and proposed a hybrid heuristic based on GA and SA. Naderi and Salmasi (2012) showed that their hybrid heuristic outperforms the hybrid heuristic of Salmasi et al. (2010). Keshavarz and Salmasi (2014) proposed several improvements to enhance the branch-and-price algorithm of Salmasi et al. (2010) and also proposed a metaheuristic algorithm based on GA. Keshavarz and Salmasi (2014) showed that their metaheuristic outperform those of Hajinejad et al. (2011) and Naderi and Salmasi (2012). Ibrahem et al. (2014) proposed a GA and a PSO algorithm for the same problem. The heuristics of Ibrahem et al. (2014) and that of Keshavarz and Salmasi (2014) remains to be compared. Keshavarz et al. (2015) provided an MILP formulation and a metaheuristic based on MA for the problem of FFm/STsd,f
                        /∑Cj
                        .


                        Ying et al. (2010) considered the problem of Fm/STsd,f
                         with respect to six different performance measures of Cmax, Tmax
                        , ∑Cj
                        , ∑Tj
                        , ∑wjTj
                        , and ∑wjCj
                        . They proposed an SA algorithm showing that there are significant improvements by using non-permutation schedules over permutation schedules by using the given performance measures. Lin et al. (2009b) also considered the problem of Fm/STsd,f
                         with the same six performance measures. They proposed SA, TS, and GA and showed that the improvement made by non-permutation schedules over permutation schedules for the due date based performance criteria were significantly better than those of the completion time based criteria. Lin et al. (2009b) indicated that their proposed SA and GA outperform the TS of Hendizadeh et al. (2008) for the Cmax
                         performance measure.
                     


                        Hendizadeh et al. (2007) proposed a multi-objective GA for the problem of Fm/STsd,f
                        /#(Cmax
                        , ∑Cj
                        ). They showed that their proposed algorithm deviates only about 1 percent of lower bounds. Lin and Ying (2012) addressed the same problem and proposed a two-level multi-start SA heuristic and showed that the heuristic is efficient in terms of both solution quality and computational time when compared to the multi-objective GA of Hendizadeh et al. (2007). Moreover, Lin and Ying (2012) also addressed the problem of Fm/STsd,f
                        /#(Cmax
                        
                        , ∑Tj
                        ) and used the same heuristic of two-level multi-start SA to solve the problem.


                        Zandieh et al. (2009) proposed two metaheuristics based on GA and SA for the problem of FFm/STsd,f
                        /Cmax
                         and showed that the heuristics outperform the earlier existing one. Karimi et al. (2011) proposed an ICA algorithm for the problem and showed that their algorithm outperforms RKGA. Shahvari et al. (2012) proposed a mathematical model and presented another TS algorithm for the problem. They showed that their TS algorithm outperforms the earlier existing TS algorithms. Keshavarz and Salmasi (2013) developed an MILP model for the problem and presented an MA. They also proposed a lower bounding technique and showed that their MA outperforms the TS algorithm of Shahvari et al. (2012). The metaheuristics of Zandieh et al. (2009), ICA of Karimi et al. (2011), and the MA of Keshavarz and Salmasi (2013) has not been compared.


                        Ying et al. (2012b) addressed the problem of FFm/STsd,f, no-wait/Cmax. They proposed three metaheuristics based on GA, SA, and iterated greedy. They showed that the metaheuristic based on SA performed better than the other two.


                        Behnamian et al. (2010c) addressed the problem of FFm/STsd,f
                        /∑(Ej
                         + Tj
                        ) where each job has a due window. They proposed a hybrid metaheuristic algorithm combining elements from PSO, SA, and VNS.


                        Bozorgirad and Logendran (2013) addressed the problem of FFm/STsd,f
                        /Fl
                         (∑wjCj
                        , ∑wjTj
                        ). They presented a MILP model and proposed four TS algorithms. They showed that one of the TS algorithms performs well. On the other hand, Bozorgirad and Logendran (2014) presented a lower bound for the problem of FFm/STsd,f, rj
                        /Fl
                         (∑wjCj
                        , ∑wjTj
                        ). Fadaei and Zandieh (2013) proposed several different versions of GA, GA with multiple objectives, for the problem of FFm/STsd,f
                        /#(Cmax
                        , ∑Tj
                        ).

A job shop environment consists of m different machines and each job has a given machine route in which some machines can be missing and some can repeat. Similar to flowshops, there may exist more than one machine in at least one stage, which is called a flexible job shop. On the other hand, in an open shop, each job should be processed once on each of the m machines passing them in any order. No subsections are provided in this section. Job shop results are presented followed by the results for open shops. For each shop environment, however, the results are summarized in the same sequence as in the other shop environments. Hence the results are summarized in the sequence of STsi, STsd
                     
                     , 
                     STsi,f
                     , and STsd,f
                     . Moreover, the single objective function results are discussed followed by multiple objective results for each setup time environment. A summary of the scheduling literature on job shop and open shop problems is presented in Table 10
                     .

Many researchers addressed the problem of J/STsd
                     /Cma
                     
                     x. Zhou et al. (2006) presented an MIP model, proposed a biological IA and showed that their algorithm outperforms those of existing ones in the literature. Moghaddas and Houshmand (2008) presented a mathematical model, proposed three lower bounds, and developed a heuristic algorithm based on some priority rules. Roshanaei et al. (2010a) presented an MILP model and proposed an EMA algorithm and showed that the EMA algorithm outperforms the IA of Zhou et al. (2006). Naderi et al. (2009a) proposed a hybrid GA and showed that their hybrid GA outperforms the biological IA of Zhou et al. (2006). Roshanaei et al. (2009) proposed a VNS algorithm and showed that the VNS algorithm outperforms the IA algorithm of Zhou et al. (2006) and the hybrid GA of Naderi et al. (2009a). González et al. (2008) presented a GA hybridized with local search while González et al. (2009) proposed a combined GA and TS and showed that their algorithms outperform a heuristic presented in 2001. González et al. (2012b) proposed an MA that combines GA and a local search using TS and showed that the MA outperforms some earlier results. Zhang et al. (2009) developed a scheduling model based on timed Petri nets where they introduced control arcs. They also presented a B&B algorithm. Naderi et al. (2010a) proposed a metaheuristic based on SA, including an effective local search and showed that it outperforms the hybrid GA of Naderi et al. (2009a). Shen (2014) proposed a TS algorithm and showed that the TS performs better than the hybrid SA of Naderi et al. (2010a). Vela et al. (2010) presented a local search method and a GA, and a hybrid of GA and local search and compared their performances with some bench mark problems. Peng (2013) proposed three heuristics (binary constraint, variable-based, and task-based) for the same problem and showed that the binary constraint heuristic performs better than the other two heuristics. The EMA of Roshanaei et al. (2010a), the VNS of Roshanaei et al. (2009), the MA of González et al. (2012b), the TS of Shen (2014), the hybrid GA of Vela et al. (2010) remain to be compared.


                     Naderi et al. (2009b) addressed the J/STsd
                     /Cma
                     
                     x problem with preventive maintenance. They proposed four metaheuristics based on GA and SA, and compared those metaheuristics with each other and with two other existing heuristics of GA and immune system. They showed that one of their proposed metaheuristics based on GA performs as the best. Sun (2009) considered the problem J/STsd
                     /Cma
                     
                     x with re-entrant operations. He proposed a GA and two heuristic procedures, which are modified versions of existing methods. He showed that the GA performs better than the two heuristics.


                     Balas et al. (2008) addressed the problem of J/STsd, prec, rj
                     /Cma
                     
                     x and proposed a heuristic based on shifting bottleneck procedure. They showed by computational experiments, mainly from the semiconductor industry, that their heuristic substantially outperforms the state of the art.


                     González et al. (2010) proposed a disjunctive graph representation and presented a neighborhood structure while González et al. (2013) proposed a TS algorithm for the problem of J/STsd
                     /Lmax
                     . They defined a new local search neighborhood structure which was incorporated into the TS and was shown to be effective.


                     Eguchi et al. (2013) considered the problem of J/STsd
                     /∑Tj
                      for the case of dynamic job arrivals. They proposed a mixture of GA and switching priority rules. González et al. (2012a) addressed the problem of J/STsd
                     /∑wjTj
                      where they proposed a hybrid metaheuristic combining GA and TS. They tested their heuristic across conventional benchmarks and showed that it compares favorably to the state of the art methods. Driessel and Mönch (2012) considered the same problem but with re-entrant process flow and transportation. They proposed decomposing the problem into single machine scheduling problems and presented VNS based sub-problems solution procedures.


                     Manikas and Chang (2009a) proposed a scatter search metaheuristic for the problem of J/STsd
                      with the objective of minimizing a linear combination of earliness, tardiness, Cmax
                     , and job ranking. They showed that their metaheuristic outperforms GA, SA, and TS. Manikas and Chang (2009b) proposed a GA for the same problem but where jobs may have re-entrant flow.


                     Vinod and Sridharan (2008, 2009) addressed the problem of J/STsd
                      for the case of dynamic job arrivals. The performance measures they considered were ∑Tj
                     , ∑Fj, TST, and TNS. By conducting extensive simulation experiments, they showed that setup-oriented rules perform better than ordinary rules. Sharma and Jain (2015) assesses the performance of different dispatching rules for the problem of J/STsd
                      for stochastic dynamic shop environments considering the performance measures of Cmax
                     , ∑Fj
                     , ∑Tj, Tmax, U, and TST.
                  


                     Fakhrzad et al. (2013) considered the problem of J/STsd
                     /#(Cmax
                     , ∑(Ej
                      + Tj
                     )) in a time window. They proposed a multi-objective hybrid GA and a multi-objective evolutionary algorithm. They showed that the multi-objective hybrid GA performs better than the multi-objective evolutionary algorithm. Tavakkoli-Moghaddam et al. (2011a, 2011b) addressed the problem of J/STsd
                     /#(∑wjCj
                     , ∑(w
                     1
                     
                        jTj
                      + w
                     2
                     
                        jEj
                     )) where they presented an integer programming model. They also proposed a PSO combined with genetic operators and showed that it performs better than a multi-objective GA.


                     Zhang and Gu (2009) proposed a method to model the problem of J/STsd,f
                     /Cmax
                      as timed Petri nets. Comparison with some previous work shows that their model is more compact and effective in finding the best solution. Halat and Bashirzadeh (2015) proposed a MILP formulation and a GA for the problem of J/STsd,f
                     /Cmax
                      with transportation time.


                     Prot and Bellenguez-Morineau (2012) presented a TS for the problem of J/STsd,f, rj
                     /Lmax
                      with multi-mode and assembly. They also presented a lower bound and evaluated the performance of their TS by using the lower bound.


                     Imanipour (2006) modeled the problem of FJ/STsd
                     /Cma
                     
                     x as a non-linear MIP model and proposed a TS algorithm. Another MIP model was presented by Nourali et al. (2012) while Nourali and Imanipour (2014) proposed a PSO algorithm. Saidi-Mehrabad and Fattahi (2007) proposed a TS algorithm and showed that the TS algorithm performs well by comparing its performance with optimal solutions obtained by B&B algorithm. Sadrzadeh (2013) proposed an artificial immune system algorithm and PSO algorithm. He showed that the artificial immune system algorithm performs better than PSO and several other algorithms including GA and VNS. The immune system algorithm of Sadrzadeh (2013) and the TS algorithms of Imanipour (2006) and Saidi-Mehrabad and Fattahi (2007) remain to be compared.


                     Zhang and Liu (2012) proposed a hybrid ACO for the problem of FJ/STsd, prec/Cmax
                      with unrelated machines. They showed that the ACO outperforms GA significantly. Rossi and Dini (2007) considered the problem of FJ/STsd
                     /Cma
                     
                     x with transportation time. They proposed an ACO algorithm and compared with another ACO and other algorithms from the literature. They showed that their proposed ACO algorithm performs better. Defersha and Chen (2010) presented a mathematical model for the problem of FJ/STsd
                     /Cmax
                      with time lags and machine release dates. They also presented a GA.


                     Sadrzadeh (2013) addressed the problem of FJ/STsd
                     /∑Tj
                      and proposed an artificial immune system algorithm and PSO algorithm and showed that the artificial immune system algorithm performs better than PSO and several other algorithms including GA and VNS. Huq et al. (2009) evaluated the performance of different dispatching rules such as SPT and LPT with respect to minimizing the number of early jobs while simultaneously approximating Just-in-Time inventory levels for flexible job shops in the presence of non-zero setup costs.


                     Yu and Ram (2006) and Yu, Ram, and Jiang (2007) addressed the parameter modeling and optimization issues in the application of a bio-inspired model for the problem of FJ/STsd
                      for dynamic job arrivals. Bagheri and Zandieh (2011) presented a VNS algorithm for the problem of FJ/STsd
                     /Fl
                      (Cmax
                     , ∑Tj
                     ). They computationally showed that the algorithm is efficient.


                     Özgüven et al. (2012) addressed the problem of FJ/STsd
                      with the primary objective of minimizing Cmax
                      and balancing the machine workload as a secondary objective. They presented two mixed integer goal programming models; one for the case of separable setup times and the other for the case of non-separable setup times. Guimaraes and Fernandes (2006) presented a GA for the problem of FJ/STsd
                      with multiple criteria which include Cmax, TST, and workloads of machines.


                     Low and Yeh (2009) considered the problem of O/STsi
                     /∑Tj
                      where there exist sequence-dependent removal times. They proposed a 0–1 integer programming model and presented a hybrid GA based heuristic. They showed that the hybrid GA based heuristic performs better than GA, SA, and TS. Roshanaei et al. (2010b) addressed the problem of O/STsd
                     /Cmax
                     . They proposed a multi-neighborhood search SA, a hybrid SA, and GA for the problem, and showed that the multi-neighborhood search SA performs better than the others. Naderi et al. (2011) presented an MIP model for the problem of O/STsd
                     /∑Cj
                     . They also proposed an EMA metaheuristic for the problem and showed that the metaheuristic is effective. Noori-Darvish et al. (2012) presented a bi-objective MIP model for the problem of O/STsd
                     /#(∑wjTj
                     , ∑wjCj
                     ). They also proposed a multi-objective PSO.

@&#CONCLUSIONS@&#

Global economy forces firms to be competitive in order to survive. This implies that firms have to increase productivity, eliminate waste and non-value added activities, and improve the effective utilization of resources. Explicit consideration and treatment of setup times/costs while making scheduling decisions help in succeeding all the three objectives in addition to meeting deadlines. As a result, researchers have addressed different scheduling problems with setup times/costs since mid-1960s. The first comprehensive review, Allahverdi et al. (1999), on scheduling problems with setup times/costs covered about 200 papers while the second comprehensive review paper, Allahverdi et al. (2008), covered about 300 papers. This is the third comprehensive review of the problem which surveys about 500 papers. The current survey paper, along with those of Allahverdi et al. (1999, 2008), is an up to date survey of scheduling problems involving static, dynamic, deterministic, and stochastic problems for different shop environments (single machine, parallel machines, flowshop, job shop, and open shop) with setup times/costs since the first research on the topic appeared in the mid-1960s. The time span of Allahverdi et al. (1999) is much longer than those of Allahverdi et al. (2008) and the current paper while the time span of Allahverdi (2008) is longer than that of the current paper. This shows that the interest in scheduling problems with setup times/costs is growing. However, the research on scheduling problems with setup times/costs is still less than 10 percent of the available research on scheduling problems while the majority of scheduling environments involve setup operations. Hence, more research on scheduling problems with explicit consideration of setup times/costs is needed.

Some researchers independently have addressed the same problem. These problems have been identified throughout this paper and their results have not been compared. These results are summarized in Table 11
                      where the first column denotes the addressed problem; the second column denotes the references addressing the same problem while the third column shows which method have been utilized. For example, the problem FFm/STsd
                     /Cmax
                      has been independently studied by Abiri et al. (2009), Alem Tabriz et al. (2009), Mirsanei et al. (2011), Gomez-Gasquet et al. (2012), and Sioud et al. (2013) by using TS, SA, SA, GA, and GA respectively. Therefore, these results remain to be compared. It should be noted that, in general, even if methods of two researchers are the same, they may be completely different as they may use different operators and different parameter values. For example, the GA of Gomez-Gasquet et al. (2012) is not the same as the GA of Sioud et al. (2013). It should be also noted that some problems are special cases of some other problems. For example, the problem 1/STsd
                     /∑Tj
                      is a special case of the problem 1/STsd
                     /∑wjTj. Therefore, if a heuristic has been developed for the problem of 1/STsd
                     /∑wjTj
                     , and in a later date, another heuristic has been presented for the problem of 1/STsd
                     /∑Tj
                     , then both heuristics need to be compared. Table 11 does not provide those problems, however, throughout the paper, these problems have been identified and the need for comparing these heuristics has been specified.

Single machine, parallel-machine, flowshop, job shop and open shop problems have been addressed in about 150, 90, 160, 45, 5 papers, respectively. Single machine and parallel machine refer to the single stage scheduling environments, and hence, more than half of the papers addressed the single stage scheduling problems. Therefore, more research is needed for multiple stage scheduling environments. Regarding to family and non-family setup problems, even though for single machine and flowshop scheduling environments, the ratio of family setup to non-family setup is about 41 percent and 32 percent, respectively, while the ratio is about 11 percent and 8 percent for the parallel and job shop environments, respectively. This clearly indicates the need for considering family setup time for the parallel and job shop environments. In general, the vast majority of papers addressed the sequence-dependent setup times/costs compared to sequence-independent setup times/costs. This is good since sequence-independent problem is a special case of sequence-independent problem. However, for the single machine environment with family setup time case, about 75 percent of the papers addressed the sequence-independent problem. This indicates the need for addressing the sequence-dependent scheduling problems in single machine environments with family setup times.

The widely used methods are GA, SA, ACO, and PSO. GA has been used in about 100 papers while each of SA and TS have been utilized in about 40 papers. ACO, VNS, PSO, have been utilized in about 25, 20, and 20, respectively. All other heuristics have been used in about 10 or less papers. Among the exact solutions methods, MIP is utilized in about 50 papers while about 30 papers utilized B&B.

The performance measure Cmax
                      has been addressed in about 40 percent of the papers, which is the most commonly used measure. This is expected since the performance measure of Cmax
                      is directly related to the utilization of resources. This performance measure is followed by total tardiness performance measure. About 25 percent of the papers have used this performance measure. This is also expected since on time delivery of products is very important in the current competitive work environment. The total completion time performance measure, which is directly related to work-in process, has been addressed in about 20 percent of the papers. All other performance measures have been used in less than 7 percent of the papers. Again in the current competitive work environment, firms strive to save in every possible ways, and minimizing work-in process is a major cost saving. It has been observed that the total completion time performance measure has been addressed by a relatively less number of papers for the single machine, parallel machine, and job shop environments. It has been also observed that total tardiness performance measure has been only utilized in a few papers for the job shop environments. Therefore, there is a need to consider these performance measures in those scheduling environments.

The multiple criteria scheduling problems constitute less than 10 percent of the papers while in real life many scheduling problems require multiple criteria. Therefore, there exists a need to address more scheduling problems with multiple criteria.

In some real-world situations, setup times may be uncertain as a result of random factors such as crew skills, tools and setup crews, and unexpected breakdown of fixtures and tools. However, only a few papers addressed setup times as uncertain variables, and thus, there is need to address more scheduling problems with uncertain setup times.

@&#ACKNOWLEDGMENTS@&#

I would like to thank three unanimous referees for their thorough review of the long paper and excellent comments, which significantly improved the quality and presentation of the paper.

@&#REFERENCES@&#

