@&#MAIN-TITLE@&#Clinical decision support systems at the Vienna General Hospital using Arden Syntax: Design, implementation, and integration

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Introduction of a hospital information system capable of decision support lead to increased interest and demand from clinicians.


                        
                        
                           
                           Integration of clinical decision support systems in clinical routine causes added technical and social complexity, but produces encouraging results.


                        
                        
                           
                           CDSSs can be only truly be widely accepted and adopted if they are supported long-term, and if there is enough high-quality data electronically available.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Hospital information systems

Medical informatics standards

Clinical decision support systems

Clinical knowledge-based systems

Arden Syntax

@&#ABSTRACT@&#


               
               
                  Introduction
                  The Allgemeines Krankenhaus Informations Management (AKIM) project was started at the Vienna General Hospital (VGH) several years ago. This led to the introduction of a new hospital information system (HIS), and the installation of the expert system platform (EXP) for the integration of Arden-Syntax-based clinical decision support systems (CDSSs). In this report we take a look at the milestones achieved and the challenges faced in the creation and modification of CDSSs, and their integration into the HIS over the last three years.
               
               
                  Materials and methods
                  We introduce a three-stage development method, which is followed in nearly all CDSS projects at the Medical University of Vienna and the VGH. Stage one comprises requirements engineering and system conception. Stage two focuses on the implementation and testing of the system. Finally, stage three describes the deployment and integration of the system in the VGH HIS. The HIS provides a clinical work environment for healthcare specialists using customizable graphical interfaces known as parametric medical documents. Multiple Arden Syntax servers are employed to host and execute the CDSS knowledge bases: two embedded in the EXP for production and development, and a further three in clinical routine for production, development, and quality assurance.
               
               
                  Results
                  Three systems are discussed; the systems serve different purposes in different clinical areas, but are all implemented with Arden Syntax. MONI-ICU is an automated surveillance system for monitoring healthcare-associated infections in the intensive care setting. TSM-CDS is a CDSS used for risk prediction in the formation of cutaneous melanoma metastases. Finally, TacroDS is a CDSS for the manipulation of dosages for tacrolimus, an immunosuppressive agent used after kidney transplantation. Problems in development and integration were related to data quality or availability, although organizational difficulties also caused delays in development and integration.
               
               
                  Discussion and conclusion
                  Since the inception of the AKIM project at the VGH and its ability to support standards such as Arden Syntax and integrate CDSSs into clinical routine, the clinicians’ interest in, and demand for, decision support has increased substantially. The use of Arden Syntax as a standard for CDSSs played a substantial role in the ability to rapidly create high-quality CDSS systems, whereas the ability to integrate these systems into the HIS made CDSSs more popular among physicians. Despite these successes, challenges such as lack of (consistent and high-quality) electronic data, social acceptance among healthcare personnel, and legislative issues remain. These have to be addressed effectively before CDSSs can be more widely accepted and adopted.
               
            

@&#INTRODUCTION@&#

An increasing body of information is available in modern healthcare, but clinicians and nurses are facing difficulties in performing time-consuming manual data analysis to make the optimal medical decisions while reducing uncertainty, risks for patients, and costs [1,2]. This results in inadequate patient care. One study shows that, in the USA, 44,000 to 98,000 patients die each year due to preventable medical errors (2–4% of all medical deaths per year) [3]. Another study showed that as many as many as 40% of patients were not receiving the recommended care for chronic or acute conditions [4]. Computer technology can be used to create systems that aid these efforts, which are usually referred to as clinical decision support systems (CDSSs).

Studies have shown that CDSSs may exert a positive effect on patient outcomes [2,5]. Through literature analysis and group discussion, several efforts have been made to identify successful CDSS features [2,6]. CDSS features associated with improved clinical practice included the automatic provision of decision support as part of a clinical workflow, the provision of decision support at the time and place of decision making, and the provision of recommendations rather than assessments. However, a recent study on the acceptance of CDSSs [7] shows that, apart from these technical aspects, human and organizational factors such as the ease of system use and adequate budgeting [8] are important factors in the acceptance of a CDSS, but are frequently underemphasized. Instead, technical aspects are given importance.

Although the potential of CDSSs has been recognized for a long time, less than 50% of the systems pass the testing and publication stage and are actually used in clinical routine [9]. Varonen et al. [8] state that the primary (social) barrier for the acceptance of CDSSs is negative experience in regard of healthcare information systems. Other social and psychological barriers include a perceived threat to the doctor–patient relationship, obscured responsibility, knowledge management, and the unwillingness to change. From a technical perspective, the greatest barrier to the routine use of CDSSs by clinicians has been lack of interoperability [8,10]. A clinician's acceptance and utilization of a CDSS depends on a system's ability to fit in the clinician's workflow, its context-sensitive accessibility, availability at the point of care, and ideally its integration into an HIS [11,12]. Commercially operated HISs tend to focus on administrative tasks and do not provide additional knowledge-based functionality. They also do not offer extensibility in these areas, making it virtually impossible to integrate or interact with custom-built or third-party software [9,13–15].

A few years ago, a new project known as Allgemeines Krankenhaus Informations Management (AKIM) was introduced at the Vienna General Hospital (VGH) with the aim of renewing the VGH HIS and promoting collaboration between clinical routine and research. The new HIS of the VGH is known as i.s.h.med; IS stands for industry solutions, and H for healthcare. The AKIM project also facilitates the installation of several additional IT systems for scientific and educational use at the Medical University of Vienna (MUV), including the expert system platform (EXP) for the development and integration of CDSSs. As a result, i.s.h.med has the ability to communicate with the EXP, which integrates two Arden Syntax servers, but also contains three Arden Syntax servers itself, thus it can run CDSSs directly in clinical routine. This led to a new impulse in the creation of CDSSs, as well as the direct integration of developed systems into i.s.h.med.

In this report we outline the technical and clinical aspects of three CDSSs integrated into i.s.h.med over the last three years: MONI-ICU, an automated surveillance system monitoring healthcare-associated infections; TSM-CDS, a CDSS developed for the prediction of cutaneous melanoma metastases; and TacroDS, a CDSS for the manipulation of dosages for immunosuppressive agents used after kidney transplantation. These systems were chosen because they all employ the Arden Syntax standard for the implementation of their knowledge bases, were developed recently, chosen as pilot projects for integration into clinical routine, and are still backed by solid clinical support at the VGH, which allows them to be continuously updated and renewed. Apart from a description of the systems, we discuss the challenges faced in the development, integration and use of CDSSs in clinical routine.

A CDSS is defined as any computer system designed to support healthcare professionals in making clinical decisions through the management of clinical data or medical knowledge [16]. In healthcare a CDSS may be broadly defined as a system that combines patient data with medical knowledge, thereby using an inference mechanism to produce patient-specific output to actively support clinicians in clinical decision making [8,17]. Three functions are supported by decision support systems [18]: the provision of automated clinical information management, such as data entry and retrieval; attention focusing, such as medical alerts and reminders; and supplying patient-specific recommendations or advice based on patient data.

The systems discussed in this paper are all knowledge-based systems, which are a type of CDSS that perform decision making at the level of a domain expert. These CDSSs declare knowledge explicitly using a knowledge base, and present facts about the problem domain. To interpret the facts and make logical assertions about them, the systems employ a logical inference mechanism, usually through rules such as if-then-else statements. The interpretation usually proceeds through a match–resolve–execute process. First, all rules corresponding with the input data are matched, then an order of rule execution is determined (including conflict resolution), and finally execution takes place.

Knowledge-based systems have properties that make them well-suited for clinical decision making, given the aforementioned success factors for CDSSs. The structuring and decoupling of facts and rules eases maintenance because rules are no longer hardcoded in a program. Furthermore, data combined with the executed rules serve as an explanation for a diagnosis, making it easier to understand and trust the system.

Arden Syntax is a programming language for the collection, description and exchange of medical knowledge in an executable format, suited for use in medical knowledge-based systems. Currently the most recent version of Arden Syntax is version 2.10, which was released in November 2014 [19].

An Arden Syntax knowledge base comprises a set of rules collected in programming units known as medical logic modules (MLMs), each of which contains the necessary logic to make a single medical decision [20]. Each MLM is uniformly formatted, and consists of four categories: maintenance, library, knowledge, and resources. The maintenance category is used for knowledge base versioning and change control, and provides metadata such as MLM authors, version, name and description. The library category allows implementers to explain the purpose and workings of an MLM, and supply additional literature references and keywords. The knowledge category contains the medical knowledge necessary for the decision making that the MLM was intended for. The category defines what input arguments need to be provided, the logic used to draw a conclusion based on these data, and actions that need to be undertaken when a conclusion is reached. Finally, the resources category is used to define messages and parameterized output. Provisions for localization have also been made to promote the dissemination of MLMs.

Since its inception, several CDSSs have employed the Arden Syntax standard to perform a variety of functions in a variety of medical settings, such as the validation of laboratory data in a laboratory information system [21], the automation and marshalling of (temporally) complex clinical practice guidelines [22], and a warning system to avoid adverse events in pediatric care [23,24], to name a few. There have also been several implementations of compilers and frameworks for the execution of Arden Syntax MLMs, such as Arden/J [25], Arden2ByteCode [26], and the Arden Syntax server [11].

The AKIM project was started as a joint project between the Faculty of Medicine at the University of Vienna (now the MUV) and the City of Vienna in 1997. The overall goal was to create a consistently functional IT environment for patient care, patient management and research, and create an HIS that contained all relevant patient data to continuously support clinical workflows within the VGH.

Siemens Health Services, contracted for the implementation of the system, offered a solution based on their Systems, Applications and Products in Data Processing (SAP) framework, integrating SAP/IS-H for administration and accounting, SAP/i.s.h.med for clinical operation, and custom-made extensions in accordance with VGH specifications and requirements [27]. Through several tools and functions, AKIM supports all routine processes in inpatient and outpatient settings, such as a document viewer that offers a chronological overview of patient data, documents, diagnoses and services.

After several years of development at three pilot clinics, a hospital-wide rollout of the system for all 29 clinics at the VGH was started in 2010 and completed in January 2015. In February 2015 the Cerner Corporation finished its acquisition of Siemens Health Services, and is now responsible for the management and further development of AKIM [28].

One of the features requested by the VGH was support for CDSSs. As such, the expert system platform EXP was developed to support the creation, maintenance and integration of CDSSs for scientific and educational use, and also for the improvement of healthcare quality at the VGH. EXP is a development and production environment for distributed medical expert systems. Direct and secure access to clinical patient data is available in order to support the rapid development of expert systems. Furthermore, EXP supports the deployment of expert systems in clinical routine. As such, the created CDSSs no longer serve educational and scientific purposes alone. As of fall 2014, the most recent version of EXP offers the option of creating and running expert systems in a variety of programming language and standards, including Arden Syntax 2.10 through the use of the ArdenSuite, developed and maintained by Medexter Healthcare [29].

From a technical perspective, the secure network environment (SNE) of the VGH and the MUV can be divided into the clinical domain (i.s.h.med) and the research domain. Both of these domains are shielded from the public domain and from each other through firewalls and various access protocols. The clinical domain provides an environment for the retrieval of patient data, laboratory tests and other medical examination results. The data are accessed via a graphical user interface known as a parametric medical document (PMD), and provides a framework for customized medical documentation to fulfil specific medical needs. Communication to and from the clinical domain, as well as internally, proceeds through the communication server. The EXP resides in the research domain and is meant to serve research, development, testing, deployment and integration of CDSSs. Fig. 1
                         shows how i.s.h.med and EXP are tied together. Note that in the present report we only discuss the details pertinent to understanding the workings of the CDSSs, and not the entire infrastructure.

Both the clinical domain and the research domain contain an Arden Syntax server which supports the deployment and execution of knowledge-based CDSSs using Arden Syntax [30,31]. Data to and from the Arden Syntax server are communicated via web services or via a database connection module.

In this section we discuss the backgrounds of the three systems addressed in this report. We discuss their medical backgrounds and setting, the reasons for their creation, and the history of their development.

MONI-ICU, an acronym for MOnitoring of Nosocomial Infections in Intensive Care Units, is a clinical system for the detection and monitoring of healthcare-associated infections (HAIs), tailored to the intensive care (ICU) setting [32,33]. The system employs rules defined in the Hospital in Europe Link for Infection Control through Surveillance (HELICS) program [34] to automatically detect bloodstream infections, central venous catheter-related infections, pneumonia, and urinary tract infections.

HAIs are infections contracted during a patient's stay in a healthcare facility or as a result of treatment in such a facility. HAIs may have severe consequences for a patient's health and recovery. More than 4 million people in Europe suffer from HAIs each year, resulting in almost 150,000 fatalities of which 37,000 are directly attributable to HAIs [35]. The HAI detection rules defined by HELICS specify the pathological conditions that need to be present for a particular HAI; the most common and threatening HAIs have been included in the list. The presence of these conditions can be determined with a variety tests and examinations, including the evaluation of clinical patient data as well as biochemical, microbiology and radiology examinations, depending on the location of the suspected infection.

The development of the first MONI version started in 1995. It was intended to be a semi-automated system for the reduction of HAIs and HAI-related deaths by improving the quality of patient care and shortening the length of hospital stay [36]. Since then, the program has evolved into a service-oriented automated monitoring system that employs fuzzy logic to detect patients with an HAI, as well as patients who partially conform to the HELICS rules and might therefore be at higher risk of developing an infection in the near future or might relapse after a previous infection episode [37,38].

TNM-CDS is a CDSS that classifies tumor stages of cutaneous melanoma (CM) according to the TNM classification of Malignant Tumours (TNM), which is a standardized and widely accepted cancer staging notation system. It informs oncologists as to whether a given pattern of tumor markers indicates a risk for an underlying metastatic event and thus supports the selection of treatment therapies. The development of the system was started in 2010. Its integration and clinical testing has been underway since early 2013.

CM are regarded as one of the most lethal forms of skin cancer and known to be highly metastatic. In 2008 the incidence of CM in Germany and Austria ranged between 12 and 15/100,000 inhabitants, and has been steadily rising by about 7% per year [39]. CM are initially determined by performing a surgical biopsy, after which the tumors are classified according to the TNM classification system for CM published by the American Joint Committee on Cancer (AJCC) [40,41]. T describes the size of the primary tumor and whether it has invaded adjoining tissue or not, N describes the involvement of lymph nodes in the vicinity of the tumor, and M describes distant metastasis. The TNM classification system partitions CM into different categories, thereby predicting the risk of distant metastasis.

The goal was to create a knowledge-based expert system that functions within the clinical workflow and produces results comparable to the opinions of medical experts. This required the integration of several risk assessments into a single system; an interpretation of the TNM classification, a mortality risk assessment, and the interpretation of known tumor markers. To classify the TNM stage of a tumor, the system employs Breslow tumor thickness [42], ulceration, and the rate of mitosis. To estimate the risk of a metastatic event, the system analyzes the presence of well-known markers such as S100β, melanoma inhibitory activity (MIA), and lactate dehydrogenase (LDH).

TacroDS is a CDSS that supports the selection and dose adaptation of the immunosuppressive agent tacrolimus. The system implements a model for the classification of specific patient groups. For each patient group it defines rules for regulating the dosage of tacrolimus.

Patients who have received a kidney transplant are required to follow a regimen of immunosuppressive therapies. One drug frequently used for immunosuppression in kidney transplant patients is tacrolimus, a calcineurin inhibitor that inhibits cell-mediated and humoral immune responses. However, as the absorption rate for tacrolimus varies from patient to patient, therapeutic drug monitoring is necessary to avoid organ rejection or adverse events such as liver dysfunction, blurred vision, depression, sleep disorders, edema, cardiac toxicity, nephrotoxicity, neurotoxicity, or hyperglycemia [43,44]. Currently the immunosuppressant dosage is determined on the basis of the actual medication level and patient-specific factors, such as the immunological situation, time after transplant, rejection reactions, and laboratory data. However, since these factors are highly inter-related, it is difficult to estimate the effect of adaptation of the medication.

The resulting system employs an algorithm based on patients with similar traits rather than individual patients. Based on these classes as well as individual patient data, patient distribution percentages are specified for increased, reduced or unchanged doses. For each option, intervals are specified for the expected tacrolimus level after the respective dose change.

@&#METHODS@&#

Although each CDSS is created under unique circumstances, each CDSS development process at the MUV (at least those discussed in this paper) follows the same stages. Note that these stages are usually not performed sequentially, like a waterfall model, but are traversed back and forth, as in the Agile, iterative, or spiral models.

Typically the first stage involves the conception of the system and a feasibility analysis. A clinician or clinical group approaches the medical informatics experts with an idea. Together with other identified stakeholders, the idea is conceptualized into a system. This usually involves a variety of requirements engineering techniques such as goal-driven, user-driven or data-driven methods [45]. If the system is deemed feasible on the basis of the available data and computing resources, a proposition is presented to the ethics committee with a request to use patient data for the creation of the system. Once granted, the outcome of this phase is usually a set of goals for each stakeholder, together with a collection of data that can be used to achieve the goals through decision support.

The second stage is the implementation and preliminary testing of the system. The medical informatics experts create the system according to the specifications obtained in the first phase, and have regular interaction with stakeholders to ensure the specifications have been correctly understood. They also deliver progress updates and organize testing and showcasing sessions for individual parts of the system. Rules for a CDSS are created and adapted in this phase, and extensively tested.

The third stage involves the deployment of the system and its integration into clinical routine. The test data in the second stage are usually retrospective, but deployment and integration are associated with problems due to the prospective nature of routine data, such as incomplete or insufficient data, data import overhead, loss of connectivity, and lag. While most of these issues will have been addressed in the second stage, eventualities and exceptions will still need to be incorporated and tested. Besides, full integration of the system requires the creation and testing of graphical user interfaces. Finally, a risk analysis is performed to determine the chances of a system crashing or producing incorrect and/or harmful results or behavior.

@&#RESULTS@&#

We present three CDSSs that were created and/or integrated into the VGH clinical routine since the inception of i.s.h.med. The technical aspects of the creation process using the previously outlined methodology are described for each CDSS. Furthermore, we discuss technical and organizational difficulties, and the limitations encountered during implementation and integration testing. Note that the three systems do not include the entire set of Arden Syntax-based CDSSs. Currently eight CDSSs are being integrated into i.s.h.med. Table 1
                      gives an overview of the total number of MLMs and parameters for all CDSSs currently integrated or planned for integration into i.s.h.med.

Two primary data sources are used for the automated surveillance of HAIs. For clinical, laboratory, and nursing data (e.g., body temperature, leucocyte count, C-reactive protein levels, blood pressure, etc.), it is connected to the Philips IntelliSpace Critical Care and Anesthesia patient data management systems in operation at the ICUs of the VGH. For microbiology data, the system connects to the MOLIS laboratory information system of the Department of Microbiology. To correctly identify patients and match data for patient cases, the system employs unique patient and patient case identifiers from the KisDB, a special database system at the VGH used by several systems to exchange information.

We constructed an Arden Syntax knowledge base in which the aforementioned HELICS HAI definitions were translated into medically relevant infection criteria. These criteria were then formalized by rules that connect them to measured and observed patient data. The formalization process was conducted in two stages. First, fuzzy sets were defined to capture borderline values of clinical concepts. Then, rules comprising fuzzy logic operators were defined; these determine the extent to which the raw data conform to the relevant infection criteria and HAI definitions. Fig. 2
                         shows the rule for the detection of the fuzzy medical concept “clinical signs of bloodstream infection”.

An initial study of the MONI-ICU system in 2011 showed that the system achieved a sensitivity of 90.3% and a specificity of 100%, with a time-saving factor of 84.8% compared to manual surveillance methods performed by infection control experts [46]. Another study performed in 2013 also included a thorough comparison with manual surveillance methods. MONI-ICU achieved a sensitivity of 87% and a specificity of 99%, whereas manual surveillance achieved a sensitivity of 40% and a specificity of 94%, indicating that the system was not only faster but also more accurate than traditional methods in the detection of HAIs [47].

Combining the aforementioned data sources posed several challenges. First, the microbiology data contained inconsistent labeling and occasional free-text results, such as sample location and the name of bacteria. To improve data quality and information retrieval rate, pattern matching is performed on these free-text fields. Radiology results, although a part of the HELICS specification for pneumonia, were only available as portable document format (PDF) documents containing free text, and thus could not be used in the automated decision making process, which significantly lowered performance for this particular infection type [47]. To compensate for the absence of radiological findings, an adapted version of the Murray score, a clinical grading system for lung injury, was used as a substitute [48].

Currently the MONI-ICU system runs on a separate Arden Syntax development server in AKIM routine, based on the same technology as the routine Arden Syntax server, but with special proprietary packages. Furthermore, it does not have a PMD interface. Instead, a Web interface (Fig. 3
                        ) was chosen to support a wider range of features not supported by PMDs, such as dynamic image loading, period selection, and display of mass patient data. After two decades, MONI-ICU is still used by a number of clinics at the VGH for infection detection and epidemiological purposes, and its knowledge base is periodically updated to the latest standards and guidelines for the detection of infection.

TNM-CDS employs the AKIM laboratory information system for test results on the aforementioned biomarkers. The CDSS also used patient history obtained from i.s.h.med and histopathological reports obtained from the Xanthos system at the Clinical Institute of Pathology, to extract raw data on tumor thickness, ulceration, and mitotic rate. Data from all sources were combined using a unique patient identifier and a unique medical case identifier.

As mortality risk assessment was determined through statistics published by the AJCC, only two classifiers had to be constructed: one for TNM classification and another for the interpretation of tumor markers. An Arden Syntax knowledge base was constructed for TNM classification, containing a representation of the TNM classification system and also several MLMs for the determination of pathological values for tumor thickness, ulceration, and mitotic rates. The output of the knowledge base is that it provides a TNM tumor class. A neural network was created for the interpretation of tumor markers. The network takes the activity of the aforementioned biomarkers into account and yields a risk assessment of possible metastases, which are expressed as “low”, “medium”, or “high”. The neural network was then simplified and mapped to a set of Arden Syntax rules that calculate the value of each neural network node and determine the final classification using predefined cutoffs. The knowledge base contains seven MLMs. We provided the MLM for the classification of tumor thickness according to Breslow (“Breslow.mlm”) as Supplementary material.

In a preliminary study of retrospective data, the prediction sensitivity and specificity of the system were 77.80% and 69.55%, respectively [49]. Initial data on 214 cases showed that, in 106 (49.53%) cases, the physicians’ decisions matched with the CDSS. In 48 (22.43%) cases the system calculated a lower risk for the patient, and in 10 (4.67%) cases the calculations resulted in a higher risk. In 50 (23.36%) cases no decision was possible for either the CDSS or the physician due to the unavailability of parameters.

Currently, TNM-CDS is deployed on the Arden Syntax server in clinical routine. A PMD was created for its integration into i.s.h.med. The PMD permits fully automatic retrieval and display of the aforementioned tumor markers and laboratory data (Fig. 4
                        ). System risk analysis was performed by clinicians at the Department of Dermatology and AKIM experts at the VGH in order to identify any data or functional errors. Once these tests were deemed satisfactory, the system was released for clinical evaluation exclusively at the Department of Dermatology of the VGH.

Difficulties in the integration and optimization of the system in clinical routine were largely attributed to missing or “noisy” data and inconsistent reports. One example of such a limitation has been mentioned in [49]: subtypes of CM were not clearly defined by the TNM system. As a result, the data required for mandatory parameters such as tumor thickness could not be obtained for some types of tumors. Another difficulty that hindered integration were changes in the AKIM PMD and interface system, which required the creation of a new interface and risk analysis, causing integration in clinical routine to be delayed by several months.

As data input, TacroDS uses blood test results from the laboratory information system of the VGH (when the system was created this was KisDB), such as tacrolimus levels in blood, the levels of anti-inflammatory medication, and the presence of additional proliferation inhibitors. A custom-made Microsoft Access database was provided for patient medication data, created manually at the Department of Nephrology and Dialysis at the VGH. Finally, patient-specific parameters such as the time since surgery was provided via i.s.h.med, as were unique patient data, patient case identifiers and data timestamps in order to correctly combine data from all data sources.

Using the aforementioned data, a model using a conditional inference tree was created for dose adaptation of tacrolimus [50]. Sixteen patient classes were then formed, in which the confounding effects of preliminary data and medication adaptation were no longer significant [51]. The classification was then translated into an Arden Syntax rule base that, based on the aforementioned input parameters, assigns a patient to a certain class. Based on this class it returns the probabilities that a patient's tacrolimus dose should be increased, decreased, or remain the same. For each of these options, the system also specifies an interval of anticipated blood tacrolimus levels at the patient's next check-up. We provided the MLM for the determination of several patient classes (“TacroDS.mlm”) as Supplementary material.

Technical problems, especially with respect to input data, were the biggest hurdle in the development of this system. First, the data were not adequate to sufficiently represent each patient group identified by the inference process for the accurate determination of the initial dose of tacrolimus [51]. However, medication adaptation still functioned properly in the initial tests. Poor data quality was another challenge. Especially the medication data contained duplicate entries, inconsistently formatted entries, and various conventions used to specify a daily dose of medication. For instance, 3/3=3mg in the morning and evening equals a daily dose of 6mg. Therefore, data entries had to be normalized before they could be processed. Finally, merging and linking data were problematic at times because some patient identifiers and lab results were mislabeled.

An organizational problem was lack of knowledge of the clinical workflow. The scientific division learned how to develop PMDs for i.s.h.med, but were initially not included in the workflow development at the Department of Nephrology and Dialysis. This rendered the development process more difficult and tedious for the science division, as the PMDs had to be adjusted several times. However, this situation has since been resolved.

As of January 2015, efforts were being made to integrate TacroDS into clinical routine. However, partly due to the aforementioned organizational circumstances, it still is in the risk analysis stage. A formal evaluation is pending. The current version functions semi-automatically, as medication data at the VGH are not recorded in a structured electronic form and have to be entered manually in the PMD. Fig. 5
                         shows parts of the PMD; input parameters are displayed on the left while results are shown on the right.

@&#DISCUSSION@&#

In the present report we describe the introduction of AKIM at the VGH, and its capability to run and integrate CDSS's using the HL7 Arden Syntax standard. The system gave new impulse to the creation, modification and integration of CDSSs. We discuss three systems that support physicians in clinical areas such as infection control, tumor classification and immunosuppressive therapy, in order to show the diversity of applications as well as the various needs of clinicians that can be addressed by CDSSs.

The concept of CDSS is built on the notion of support. A well-designed CDSS should be able to support clinical experts, but is by no means meant to replace them. Support may be provided in several ways. First, CDSSs can provide educational support. In some situations a CDSS can educate physicians on criteria, facts or processes involved in making a decision in a specific situation. Second, CDSSs can provide mental support because they encourage and promote “rationality” in decision making and provide a second opinion to confirm the physician's suspicions or reasoning, or provide a contrast option, thus challenging the physician to revisit and reconfirm his/her findings. Finally, to a limited extent CDS's can generate alarms based on patterns or rules, thereby providing the physician with more time to act and reducing some of his/her time pressure. However, a CDSS is still to be regarded as an aid; physicians have the final authority and may choose to ignore the analyses and recommendations of the CDSS.

The provision of a new HIS combined with the EXP system for CDSS has led to intensive cooperation between the VGH and MUV. All authors noticed a substantial increase in cooperation requests from various clinics and departments (200–300%) over the last year. The majority of these requests came from known persons with whom the authors had a long-standing work relationship, but some requests were also received from new contacts due to the AKIM sounding board—a regular meeting where clinicians and medical informatics experts meet to discuss and exchange new ideas for AKIM implementations. The requests could be divided into three categories: the creation or adaption of a CDSS, the modification or creation of a clinical workflow in AKIM, and the integration of existing or new data sources not yet integrated into AKIM.

Although EXP supports CDSSs not implemented in the Arden Syntax standard, the use of Arden Syntax and the Arden Syntax server for knowledge-based systems had several benefits. First, as the server is maintained and updated by a third party in close cooperation with EXP personnel, any pressing needs and errors can be quickly addressed and resolved. Second, by focusing on a standard for knowledge-based systems, the experts could focus on the application of the system, thus aiding the creation and translation of better systems. This also applies to the integration of systems in clinical routine because the development section and the routine environment have identical Arden Syntax severs in operation, and the creation of the PMDs is also standardized using the Advanced Business Application Programming (ABAP) language. Finally, although these are currently only theoretical benefits extrapolated from the benefits of standards in general, the use of Arden Syntax in knowledge bases would allow the transfer of CDSSs from the VGH to other healthcare facilities that also support Arden Syntax without the need for any additional (technical) prerequisites. When combined with medical data representation standards, such as the HL7 Clinical Document Architecture [52], guidelines for minimum quality and the availability of data could be defined for each CDSS. Minimum quality and availability could be ensured by providing templates for data sources and/or case types. Data could be transported from their sources to a CDSS in a standardized manner. A template of this type would also permit the generation of data: healthcare institutes and laboratories could export their data for academic and research purposes.

Apart from technical and organizational issues that plagued individual systems, several challenges made it difficult for CDSSs to be transferred from the prototype to clinical routine. First, there were psychological factors at work. The necessity of a CDSS was not always recognized by the involved parties, or the potential effect of a CDSS on the quality of care was underestimated or considered negligible. Sometimes the concept of CDSS was not fully understood, while other times the existing quality of care was considered optimal. Another difficulty is personnel turnover. When stakeholders involved in CDSS projects leave, it is difficult to find replacements and initiate them in the project, thus causing delays in the development of the system. For long-term continuous development and support, broad support from all stakeholders of a department or a specific workflow is paramount.

One reason for the lack of dissemination and application of discussed CDSSs beyond the VGH is national and international legislation. Since 1996 the Federal Law Gazette of Austria (BGBl no. 657/1996) specifies that medical devices should be constructed in a way that they do not endanger the clinical condition or safety of patients, nor the safety of their users or third parties, when used according to the given specifications in the regular context and circumstances. Furthermore, the risks incurred during their modeling and construction must be minimized by the incorporation of fail safes, alarms, and prohibitions. The users must be warned against risks for which no countermeasures could be provided. Finally, the law specifies that, before a medical device can be used, it must achieve the European Economic Area (CE) conformity mark. To achieve this mark a product must conform to the aforementioned national standards and several additional standards set by the European Union. According to the most recent version of the law, medical software is a medical device and should therefore adhere to the mentioned prerequisites. Furthermore, the law specifies that the creator or publisher of the medical software is liable for the costs of product testing, continuous quality control, and adherence to national and international regulations. Risk and quality management standards, such as those of the International Standards Organization (ISO) 14971, the International Electrotechnical Commission (IEC) 62304, and ISO 13485, must be employed and verified. As the costs of risk and quality management may be quite high, academic institutes opt for the development of CDSSs under an exemption clause in the law, stating that software under clinical evaluation does not need CE conformity as long as approval is obtained from an ethics board and a study protocol is adhered to for auditing. Whereas this allows for the design, implementation and testing of a CDSS, it restricts its application in academic healthcare institutes, thus hindering the dissemination and widespread usage of such systems. At the VGH, the application and integration of such software is at the discretion of the department heads.

The limitations of the present study are worthy of mention. First, the results are only valid in the context of the VGH, its specific HIS and EXP platform. As of now, the discussed systems and methodologies have not been integrated or tested in institutes other than the VGH. Thus, no statements can be made about the generalizability of our research results. Furthermore, the methodology presented in this paper is fairly simplistic because it is still in the conceptual phase. As we gain more experience with a variety of CDSSs, a more comprehensive version could be conceptualized. Finally, although evidence suggests that the introduction of the new HIS and EXP are significant aspects, their roles in enhancing the popularity of CDSS is uncertain. As medicine has become more complex, CDSSs have gained popularity in the last decades. The increase in requests may have resulted from greater awareness in general.

Although several successes have been registered for the three systems, and the situation for the development and integration of CDSSs into clinical routine has improved, there still remains a lot to be done. First, data capturing needs to be improved, as the persistent problems in this area are responsible for the suboptimal performance of CDSS. One solution would be an improved data acquisition tool for i.s.h.med, which is currently being worked on. Second, the routine test environment only functions with retrospective data dumps, i.e. patient data are collected and stored in the routine test environment in bundles of a few months at a time. While this does allow for systems to be tested in clinical routine, it does so only in a limited fashion. Real-time behavior with real-time data acquisition and missing data conditions cannot be accurately checked and tested for. However, a routine test environment to be introduced in the near future will permit real-time data acquisition, thus allowing more thorough testing of the systems. Finally, as AKIM is now almost fully deployed in all clinics and departments at the VGH, we expect to be able to perform new and more comprehensive studies on all systems discussed in this paper in order to determine their added value to the workflows at the VGH as well as test their effectiveness and extend their functionalities.

@&#CONCLUSION@&#

Since the inception of AKIM, there has been a greater demand for the reimplementation of proven CDSSs as well as the construction of new ones. Furthermore, the availability of facilities that support standards such as Arden Syntax enabled medical informatics experts to rapidly (re-)implement and integrate CDSSs into clinical routine. However, this is only the beginning. The final goal is to have an established workflow at the VGH and MUV for the conception, design, creation, integration, evaluation and long-term maintenance and support of CDSSs, and ensure their sustainable and consistent use. While the knowledge assets underlying CDSSs are time consuming and expensive to generate, they are also subject to (regular) change once created. A systematic process of updates and change executed cooperatively by medical and computer science experts will be needed to keep a CDSS running in clinical routine for a longer period of time.

JSB wrote the paper and was involved in the evaluation of MONI-ICU.

ChS co-wrote the paper, manages the expert system platform, and was involved in the development and deployment of both TNM-CDS and TacroDS.

WS co-wrote the paper, developed the parametric medical documents, and developed the TacroDS program.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank Klaus-Peter Adlassnig, Karsten Fehre, and Stefan Reich for their assistance with the MONI-ICU program, Christian Scheibböck and Michael Binder for their help with TNM-CDS, and Werner Brannath and Max Plischke for their support in regard of TacroDS.

Supplementary material related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.artmed.2015.11.002.

The following are supplementary data to this article:
                        
                           
                        
                     
                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

