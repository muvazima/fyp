@&#MAIN-TITLE@&#Multicriteria shape design of an aerosol can

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We model the aerosol can.


                        
                        
                           
                           We developed an algorithm to solve multicriteria optimization problem.


                        
                        
                           
                           We solve our industrial problem with our developed algorithm.


                        
                        
                           
                           We proposed a new profiles for the bottom of the aerosol can which satisfying the customers requirements.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Multicriteria optimization problem

Normal boundary intersection

Radial basis function metamodel

Nash equilibria

Kalai-Smorodinsky equilibria

@&#ABSTRACT@&#


               
               
                  One of the current challenges in the domain of the multicriteria shape optimization is to reduce the calculation time required by conventional methods. The high computational cost is due to the high number of simulation or function calls required by these methods. Recently, several studies have been led to overcome this problem by integrating a metamodel in the overall optimization loop. In this paper, we perform a coupling between the Normal Boundary Intersection – NBI – algorithm with Radial Basis Function – RBF – metamodel in order to have a simple tool with a reasonable calculation time to solve multicriteria optimization problems. First, we apply our approach to academic test cases. Then, we validate our method against an industrial case, namely, shape optimization of the bottom of an aerosol can undergoing nonlinear elasto-plastic deformation. Then, in order to select solutions among the Pareto efficient ones, we use the same surrogate approach to implement a method to compute Nash and Kalai–Smorodinsky equilibria.
               
            

@&#INTRODUCTION@&#

Structural multidisciplinary shape optimization – MDO – is known to demand costly computational resources, notably when one seeks to identify the Pareto front, one of the most relevant MDO tools. To overcome this obstacle, it is classical to couple methods for the Pareto capture with metamodels aimed at cheap costs evaluation [1–5]. There are two possible couplings between methods to identify the set of Pareto optimal solutions, and metamodels: The first idea is to lead optimization with the dedicated algorithms (NBI or others) and use an updated metamodel for a certain number of evaluations until finding the solutions (strong coupling). The second idea is to lead optimization with the metamodel and only do the exact calculations of the metamodel-obtained solutions (weak coupling).

In our work, the Normal Boundary Intersection (NBI) method [6–8] and the radial basis function (RBF) metamodel [10–14] are used to build our algorithm (NBI RBF) using a weak coupling. The implemented algorithm is validated against mathematical test-cases, and then used to perform a multicriteria shape optimization of structures which undergo highly nonlinear deformations. We compare the results obtained for different a priori discretizations of the Pareto fronts. We also address the problem of selecting solutions among the Pareto optimal ones by using a Nash game approach [22–26] and a Kalai–Smorodinsky one [19–21].

@&#METHODOLOGY@&#

In this section, we present the methodology and background used throughout the paper.

A multicriteria optimization problem is given as follows: 
                           
                              
                                 
                                    
                                       min
                                    
                                    
                                       x
                                    
                                 
                                 
                                 F
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             f
                                          
                                          
                                             1
                                          
                                       
                                       (
                                       x
                                       )
                                       ,
                                       
                                          
                                             f
                                          
                                          
                                             2
                                          
                                       
                                       (
                                       x
                                       )
                                       ,
                                       …
                                       ,
                                       
                                          
                                             f
                                          
                                          
                                             m
                                          
                                       
                                       (
                                       x
                                       )
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 
                                 m
                                 ≥
                                 2
                              
                           
                        
                        
                           
                              (1)
                              
                                 subject
                                 
                                 to
                                 
                                 (
                                 D
                                 )
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   g
                                                
                                                
                                                   j
                                                
                                             
                                             (
                                             x
                                             )
                                             ≥
                                             0
                                             ,
                                          
                                          
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             J
                                          
                                       
                                       
                                          
                                             
                                                
                                                   h
                                                
                                                
                                                   k
                                                
                                             
                                             (
                                             x
                                             )
                                             =
                                             0
                                             ,
                                          
                                          
                                             k
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             K
                                          
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   lower
                                                
                                             
                                             ≤
                                             x
                                             ≤
                                             
                                                
                                                   x
                                                
                                                
                                                   upper
                                                
                                             
                                          
                                          
                                       
                                    
                                 
                              
                           
                        where m, J and K are the total numbers of the objective functions, the inequality 
                           (
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                           )
                         and equality constraints 
                           (
                           
                              
                                 h
                              
                              
                                 k
                              
                           
                           )
                        , respectively.

The Pareto front is defined as the set of non-dominated designs, in the objective space. A design point, 
                           
                              
                                 x
                              
                              
                                 ⁎
                              
                           
                           ∈
                           D
                         is non-dominated if there is no other point, 
                           
                              
                                 x
                              
                              
                                 ⁎
                              
                           
                           ∈
                           D
                        , such that 
                           
                              
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 x
                                 )
                                 <
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ⁎
                                    
                                 
                                 )
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                              
                           
                        with strict inequality for at least one index.

Normal boundary intersection method NBI is a solution methodology developed by Das and Dennis (1996) for the approximation of Pareto surfaces [9]. The method is based on the intersection of the so-called CHIM׳s (convex hull of individual minima) normal and the objective space boundary.

We summarize it as follows:

Let 
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 ⁎
                              
                           
                         be the respective global minimizers of 
                           
                              
                                 f
                              
                              
                                 i
                              
                           
                           (
                           x
                           )
                        , i=1,…,m over 
                           x
                           ∈
                           (
                           D
                           )
                        .

Let 
                           
                              
                                 F
                              
                              
                                 i
                              
                              
                                 ⁎
                              
                           
                           =
                           F
                           (
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 ⁎
                              
                           
                           )
                        , i=1,…,m.

Let 
                           
                              
                                 F
                              
                              
                                 ⁎
                              
                           
                           =
                           
                              
                                 [
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       ⁎
                                    
                                 
                                 )
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       ⁎
                                    
                                 
                                 )
                                 ,
                                 …
                                 ,
                                 
                                    
                                       f
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       m
                                    
                                    
                                       ⁎
                                    
                                 
                                 )
                                 ]
                              
                              
                                 T
                              
                           
                        .

Let 
                           β
                           ∈
                           
                              
                                 R
                              
                              
                                 m
                              
                           
                         a weight vector.

Let ϕ be the m×m matrix whose ith column is 
                           F
                           (
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 ⁎
                              
                           
                           )
                           −
                           
                              
                                 F
                              
                              
                                 ⁎
                              
                           
                         known as the pay-off matrix.

Then the set of points in R
                        
                           m
                         that are convex combinations of 
                           F
                           (
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 ⁎
                              
                           
                           )
                           −
                           
                              
                                 F
                              
                              
                                 ⁎
                              
                           
                         is referred to as the CHIM, i.e., 
                           CHIM
                           =
                           {
                           ϕ
                           β
                           ,
                           
                           β
                           ∈
                           
                              
                                 R
                              
                              
                                 m
                              
                           
                           
                           with
                           
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 m
                              
                           
                           
                              
                                 β
                              
                              
                                 i
                              
                           
                           =
                           1
                           ,
                           
                           
                              
                                 β
                              
                              
                                 i
                              
                           
                           ≥
                           0
                           }
                        . The set of attainable objective vectors 
                           {
                           F
                           (
                           x
                           )
                           :
                           x
                           ∈
                           (
                           D
                           )
                           }
                         is denoted by 
                           F
                         and is usually referred to as the objective space. Let us denote the boundary of 
                           F
                         by 
                           ∂
                           F
                        .

Let n denote the unit normal to the CHIM simplex pointing towards the origin defined as 
                           
                              
                                 n
                                 =
                                 {
                                 −
                                 ϕ
                                 e
                                 ,
                                 
                                 e
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       m
                                    
                                 
                                 
                                 with
                                 
                                 e
                                 =
                                 {
                                 1
                                 ,
                                 1
                                 ,
                                 1
                                 ,
                                 …
                                 ,
                                 1
                                 }
                                 }
                              
                           
                        NBI method determines the portion of 
                           ∂
                           F
                         which contains the Pareto optimal points. The principal idea behind this approach is that the intersection point between the boundary 
                           ∂
                           F
                         and the normal n pointing towards the origin emanating from any point in the CHIM is a point on the portion of 
                           ∂
                           F
                         containing the efficient points. This point is guaranteed to be a Pareto optimal point if the trade-off surface in the objective space is convex. This is the algebraic idea behind NBI׳s approach, and Das and Dennis have shown that this approach can be written mathematically and also that the point of intersection of the normal and the boundary of 
                           F
                         closest to the origin is the global solution of the following single problem:
                           
                              (2)
                              
                                 
                                    
                                       max
                                    
                                    
                                       x
                                       ,
                                       t
                                    
                                 
                                 
                                 t
                                 subject
                                 
                                 to
                                 
                                 (
                                 
                                    
                                       D
                                    
                                    
                                       NBI
                                    
                                 
                                 )
                                 {
                                 
                                    
                                       
                                          
                                             ϕ
                                             ·
                                             β
                                             +
                                             t
                                             ·
                                             n
                                             =
                                             F
                                             (
                                             x
                                             )
                                             −
                                             
                                                
                                                   F
                                                
                                                
                                                   ⁎
                                                
                                             
                                          
                                          
                                       
                                       
                                          
                                             
                                                
                                                   g
                                                
                                                
                                                   j
                                                
                                             
                                             (
                                             X
                                             )
                                             ≥
                                             0
                                             ,
                                          
                                          
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             J
                                          
                                       
                                       
                                          
                                             
                                                
                                                   h
                                                
                                                
                                                   k
                                                
                                             
                                             (
                                             X
                                             )
                                             =
                                             0
                                             ,
                                          
                                          
                                             k
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             K
                                          
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   lower
                                                
                                             
                                             ≤
                                             x
                                             ≤
                                             
                                                
                                                   x
                                                
                                                
                                                   upper
                                                
                                             
                                          
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           t
                           ∈
                           R
                         is a dummy parameter, the sub-problem (Eq. (2)) is repeated for a number (N ) of different weight of β, and only one solution is obtained for each weight, and finally, the NBI method gives us N solutions for the initial problem (Eq. (1)).

The advantage of the NBI method is that it gives a set of well distributed solutions over the Pareto front. One may need however to postprocess the results with a filter, to eliminate non-Pareto or local Pareto points (if the trade-off surface in the objective space is not convex).

The basic idea of RBF metamodeling is to construct a function approximation using function values at some sampling points, which are typically determined using experimental design methods such as Latin hypercube, uniform distribution of the search space [15].

Let f(x) be the true objective or response function and 
                           
                              
                                 f
                              
                              
                                 ˜
                              
                           
                           (
                           x
                           )
                         its approximation obtained from a classical RBF with the general form
                           
                              (3)
                              
                                 
                                    
                                       f
                                    
                                    
                                       ˜
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       0
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       ω
                                    
                                    
                                       i
                                    
                                 
                                 ϕ
                                 (
                                 ∥
                                 x
                                 −
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ∥
                                 )
                              
                           
                        where n is the number of sampling points, x is the vector of design variables, x
                        
                           i
                         is the vector of the ith sampling point, 
                           ∥
                           x
                           −
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           ∥
                         is the Euclidean distance, ϕ is a basis function (for example, Gaussian one 
                           ϕ
                           (
                           r
                           )
                           =
                           
                              
                                 e
                              
                              
                                 −
                                 a
                                 
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                              
                           
                         where a is the attenuation coefficient 
                           (
                           0
                           ≺
                           a
                           ≤
                           1
                           )
                        ), and 
                           
                              
                                 ω
                              
                              
                                 i
                              
                           
                         is the unknown weighting coefficient which is obtained by solving the linear system:
                           
                              (4)
                              
                                 f
                                 =
                                 A
                                 ·
                                 ω
                              
                           
                        where 
                           f
                           =
                           
                              
                                 [
                                 f
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 ,
                                 …
                                 ,
                                 f
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       n
                                    
                                 
                                 )
                                 ]
                              
                              
                                 T
                              
                           
                         and 
                           
                              
                                 A
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           =
                           ϕ
                           (
                           ∥
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           −
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                           ∥
                           )
                         (
                           i
                           =
                           1
                           ,
                           …
                           ,
                           n
                           ;
                           j
                           =
                           1
                           ,
                           …
                           ,
                           n
                        ).

Our goal is to perform a weak coupling between the NBI algorithm and RBF metamodel in order to have a simple tool with a reasonable calculation time to solve multiobjective optimization problems and test its effectiveness for academic cases, and also for industrial cases.

Throughout our work, we address a special case of multicriteria optimization problems (two objective functions):
                        
                           (5)
                           
                              
                                 
                                    min
                                 
                                 
                                    x
                                 
                              
                              
                              F
                              (
                              x
                              )
                              =
                              
                                 
                                    (
                                    
                                       
                                          f
                                       
                                       
                                          1
                                       
                                    
                                    (
                                    x
                                    )
                                    ,
                                    
                                       
                                          f
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    x
                                    )
                                    )
                                 
                                 
                                    T
                                 
                              
                              subject
                              
                              to
                              
                              (
                              D
                              )
                              
                              {
                              
                                 
                                    
                                       
                                          
                                             
                                                g
                                             
                                             
                                                j
                                             
                                          
                                          (
                                          x
                                          )
                                          ≥
                                          0
                                          ,
                                       
                                       
                                          j
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          J
                                       
                                    
                                    
                                       
                                          
                                             
                                                h
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          x
                                          )
                                          =
                                          0
                                          ,
                                       
                                       
                                          k
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          K
                                       
                                    
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                lower
                                             
                                          
                                          ≤
                                          x
                                          ≤
                                          
                                             
                                                x
                                             
                                             
                                                upper
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           
                        
                     
                  

The NBI algorithm shows the need for an optimizer in each stage in the sense that the NBI method requires optimization of each objective function, as well as the objective function NBI, so it is necessary to make a big number of evaluations for optimized functions, which can be very costly in terms of computation time. In these conditions, we replaced all the objective functions approximated by functions built with the RBF metamodel. Let 
                        
                           
                              
                                 
                                    f
                                 
                                 
                                    1
                                 
                              
                           
                           
                              ˜
                           
                        
                        (
                        x
                        )
                      and 
                        
                           
                              
                                 
                                    f
                                 
                                 
                                    2
                                 
                              
                           
                           
                              ˜
                           
                        
                        (
                        x
                        )
                      the approximations obtained from a classical RBF for f
                     1 and f
                     2, respectively. For RBF metamodel used, there are two parameters to determine: the attenuation factor will be determined using the technique of Rippa [16], and we chose a uniform distribution of the search space to select the sampling points.

The coupling approach is first tested for several optimization problems known as test problems, which are mathematical explicit functions (Schaffer1, Hanna non-convex, Fonseca and Tanaka problem) [17].

The results, Fig. 1
                      and Table 1
                     , show that the coupling NBI RBF converges to the Pareto frontier with an approximately 80%, 95%, 99% and 97% fewer number of objective functions calls compared to a conventional NBI for Schaffer1, Hanna non-convex, Fonseca and Tanaka problem, respectively.

After the validation of algorithm via academic test cases, we will go to the essence of our work which is testing the code for industrial test cases which are the shape optimization of the bottom of the aerosol cans and the shape optimization of the automotive twist beam.

@&#MOTIVATION@&#

Aerosol cans are usually made of thin high performance steel and are filled with fluid at high pressure. For these two reasons, and considering usage and packaging requirements, the structural stability of their ends, top and bottom is then delicate to maintain. In the present work, we address the problem of shape optimization of the bottom of a can, in order to control the dome growth DG at a given filling pressure as well as the dome reversal pressure DRP, a critical pressure at which the can bottom loses its stability (e.g. initiates buckling) (Fig. 2
                        ).

For our work, we use two types of bottom׳s cans, Fig. 3
                        , aerosol cans are made of thin high performance steel which have the following characteristics: 
                           
                              
                                 
                                 
                                    
                                       ⁎Thick steel: e=0.46mm
                                    
                                    
                                       ⁎Strain hardening exponent: n=0.2
                                    
                                    
                                       ⁎Yield strength: Re=270MPa
                                    
                                    
                                       ⁎Ultimate strength: Rm=380MPa
                                    
                                    
                                       ⁎Strength coefficient: 
                                             K
                                             =
                                             
                                                
                                                   e
                                                
                                                
                                                   (
                                                   Rm
                                                   .
                                                   (
                                                   n
                                                   .
                                                   (
                                                   1
                                                   −
                                                   ln
                                                   (
                                                   n
                                                   )
                                                   )
                                                   )
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       ⁎Hollomon law: 
                                             σ
                                             =
                                             K
                                             
                                                
                                                   ϵ
                                                
                                                
                                                   n
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The goal is to figure out a design of bottom of the aerosol cans, which satisfies a DRP value bigger than DRP of initial shapes and a DG value smaller than 1mm. Our initial can N1 design has 19.1092bar and 0.8975mm as DRP and DG values, respectively, and the initial can N2 design has 15.2bar and 0.4749mm as DRP and DG values.

Before proceeding to the optimization part, it should be noted that the mechanical models used are modeled using LS-DYNA software which also performs the calculations of deformed elasto-plastic in order to determine the objective criterions to be optimized (DRP and DG). Then, we apply our coupling approach developed to solve this multicriteria industrial problem.

As a first step, we present the characteristics related to shape optimization (design variable, constraints, metamodel database and multicriteria optimization formula).

For our cases׳ study, the bottom of the can is divided into two parts, a fixed non-modifiable one, and a variable part, to be optimally designed (Fig. 4
                           ).

We selected a set of 81 points (34), each point representing a given shape of the bottom of the can. Let us mention that in our case, the above uniform sampling turned out to be more efficient than the Latin Hypercube Sampling. These points will be considered as sampling points for the RBF metamodel. That is, for each point, we calculate the exact value for the two criteria DRP and DG. We collect these values to set a database allowing us to build the RBF metamodel for each criterion, and the optimization problem will be studied using these metamodels (Fig. 5
                           ).

Our aim is to solve the problem with our developed approach (NBI RBP coupling), and exact cost evaluations are performed for the final Pareto optimal designs, in order to assess the efficiency of our approach to solve this industrial optimization problem.

Let φ denote a cubic spline shape of the bottom of the can, or equivalently the ordinates (abscissae are fixed) of that cubic spline. Then, our original problem is stated as the following:
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             max
                                          
                                          
                                             φ
                                             =
                                             (
                                             
                                                
                                                   φ
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   φ
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   φ
                                                
                                                
                                                   3
                                                
                                             
                                             ,
                                             
                                                
                                                   φ
                                                
                                                
                                                   4
                                                
                                             
                                             )
                                          
                                       
                                       
                                       DRP
                                       (
                                       φ
                                       )
                                    
                                    /
                                    
                                       
                                          min
                                       
                                       
                                          φ
                                          =
                                          (
                                          
                                             
                                                φ
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                φ
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                φ
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                φ
                                             
                                             
                                                4
                                             
                                          
                                          )
                                       
                                    
                                    
                                    DG
                                    (
                                    φ
                                    )
                                    subject
                                    
                                    to
                                    
                                    (
                                    D
                                    
                                    can
                                    )
                                    {
                                    
                                       
                                          φ
                                       
                                       
                                          lower
                                       
                                    
                                    ≤
                                    φ
                                    ≤
                                    
                                       
                                          φ
                                       
                                       
                                          upper
                                       
                                    
                                 
                              
                           With our approach, we will solve the problem equivalent to the original one, replacing the criteria with their metamodels:
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             max
                                          
                                          
                                             φ
                                             =
                                             (
                                             
                                                
                                                   φ
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   φ
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             
                                                
                                                   φ
                                                
                                                
                                                   3
                                                
                                             
                                             ,
                                             
                                                
                                                   φ
                                                
                                                
                                                   4
                                                
                                             
                                             )
                                          
                                       
                                       
                                       
                                          
                                             DRP
                                          
                                          
                                             ˜
                                          
                                       
                                       (
                                       φ
                                       )
                                    
                                    /
                                    
                                       
                                          min
                                       
                                       
                                          φ
                                          =
                                          (
                                          
                                             
                                                φ
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                φ
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                φ
                                             
                                             
                                                3
                                             
                                          
                                          ,
                                          
                                             
                                                φ
                                             
                                             
                                                4
                                             
                                          
                                          )
                                       
                                    
                                    
                                    
                                       
                                          DG
                                       
                                       
                                          ˜
                                       
                                    
                                    (
                                    φ
                                    )
                                    subject
                                    
                                    to
                                    
                                    (
                                    D
                                    
                                    can
                                    )
                                    {
                                    
                                       
                                          φ
                                       
                                       
                                          lower
                                       
                                    
                                    ≤
                                    φ
                                    ≤
                                    
                                       
                                          φ
                                       
                                       
                                          upper
                                       
                                    
                                 
                              
                           Let 
                              
                                 
                                    φ
                                 
                                 
                                    0
                                 
                              
                              =
                              (
                              
                                 
                                    φ
                                 
                                 
                                    01
                                 
                              
                              ,
                              
                                 
                                    φ
                                 
                                 
                                    02
                                 
                              
                              ,
                              
                                 
                                    φ
                                 
                                 
                                    03
                                 
                              
                              ,
                              
                                 
                                    φ
                                 
                                 
                                    04
                                 
                              
                              )
                            be the initial shape of the bottom of the can, and α a positive offset. Then, we choose the bound constraints as follows: 
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                ⁎
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      lower
                                                   
                                                
                                                =
                                                (
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      01
                                                   
                                                
                                                −
                                                α
                                                ,
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      02
                                                   
                                                
                                                −
                                                α
                                                ,
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      03
                                                   
                                                
                                                −
                                                α
                                                ,
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      04
                                                   
                                                
                                                −
                                                α
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                ⁎
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      upper
                                                   
                                                
                                                =
                                                (
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      01
                                                   
                                                
                                                +
                                                α
                                                ,
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      02
                                                   
                                                
                                                +
                                                α
                                                ,
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      03
                                                   
                                                
                                                +
                                                α
                                                ,
                                                
                                                   
                                                      φ
                                                   
                                                   
                                                      04
                                                   
                                                
                                                +
                                                α
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For α=0.5mm, we computed an approximate Pareto front for the DG/DRP costs using the NBI+RBF coupling. For different prescribed number of Pareto points N, we show the overall time and total number of exact or surrogate evaluations used for the aerosol bottom N1 case in Table 2
                           , and for the aerosol bottom N2 case in Table 3
                           .

A simple comparison between the results obtained by our approach and the accurate evaluation of these solutions, Figs. 6 and 7
                           
                           , allows us to assess that our results remain good ones notwithstanding the complexity of our cases study.

Similarly, it is clear from Tables 2 and 3 that our approach has allowed us to save a remarkable computational time. For example, if we take the case (N=50) from Table 2, there are 131 calls of exact function evaluations and 80,405 for approximated function, respectively, which represent 0.16% and 98.24% of the total function calls used in our approach. But at the same time, we note that only this 0.16% of total calls take 99.85% of the total computing time required. This last remark justifies why we chose not to apply roughly the NBI method with exact evaluations to solve the industrial case.

We used a filter “Pareto filter scilab” [18] to eliminate all dominated points, and we remarked that all remaining solutions are almost located at the boundary of the space formed by the elements of the RBF database (Fig. 8
                           ). Then we can conclude that the solutions obtained are likely NBI solutions and our approach is able to solve the industrial problem with a reasonable computation time.

When we started our industrial test-case, we claimed that our main goal was to obtain new profiles for the bottom of the aerosol cans satisfying some requirements (DRP higher than initial shapes׳ DRP values and DG lower than 1mm), a goal that we achieve successfully (Figs. 9 and 10
                           
                           ).

From all the results obtained in this section, it is interesting to note that the capture of Pareto generates a set of non-dominated solutions. To know which one to choose, where appropriate, it is necessary to use selection algorithms, such as Nash and Kalai–Smorodinsky. These two approaches coming from game theory will be studied in the next section.

In this section, we will treat the problem of the selection of solutions among the Pareto front. In fact, it is often required to provide just one effective solution (especially for industrial problems). To do this, several methods are developed. Among these methods, there are those derived from the game theory a Nash equilibrium and Kalai–Smorodinsky one.

To apply both the selection algorithms, we will only use the industrial test case all of which are the shaping optimization of bottom of the aerosol can. Similarly, it should be noted that all the algorithms will be coupled with the RBF metamodel.

We consider the problem of the aerosol bottom. Then, we model the selection problem as a Nash game played by the two costs DG and DRP approximated by RBF metamodel.

The results presented in Fig. 11
                         show that the Nash equilibria obtained for different splittings of the shape coordinates among the two players DG and DRP. There are remarkable Nash solutions which lie on, or are close to, the Pareto front. But, unfortunately, in the region of interest for the operational industrial applications (upper-left zone of the Pareto front), almost all the Nash solutions are inefficient (strictly dominated by Pareto-optimal ones). Thus, arbitrary splitting is not advisable.

Kalai–Smorodinsky equilibrium is a solution methodology developed by Kalai and Smorodinsky (1975) for the calculation of a particular solution for a multicriteria optimization problem. This solution concept can be described graphically as the intersection of the objective space border and the line segment connecting Nadir and Utopia points (Fig. 12
                        ).

From the results in Fig. 13
                        , we see clearly that the Kalai–Smorodinsky equilibria obtained is a nondominated solution (efficient one). Similarly, KS is a solution obtained without the need to use a split of the variable between the two players, where the KS equilibria are advisable.

Making a comparison between the algorithms Nash and KS based results, we can deduce that the use of KS remains better than Nash with an arbitrary splitting.

@&#CONCLUSION@&#

The NBI RBF coupling results show that the present approach is able to efficiently solve the multicriteria shape optimization problem of structures with nonlinear (elasto-plastic) behavior, that is, identify regions of interest of the Pareto front. This is achieved not only with a reasonable computation time, but also by yielding Pareto fronts which are consistent with respect to the total number of prescribed points over the front.

The Nash RBF coupling results show that an arbitrary splitting of the shape parameters among the two players may lead to inefficient solutions (strictly dominated by Pareto-optimal ones). The Kalai–Smorodinsky RBF coupling results show that the algorithm leads us to an efficient solution (strictly non-dominated by Pareto-optimal ones).

The future research direction of our work is the study and development of new techniques for splitting the variable optimization to compute a Nash equilibrium.

@&#ACKNOWLEDGMENTS@&#

The present work was achieved within the framework of the partnership between the research center INRIA Sophia Antipolis and leader company in the steel manufacturer ArcelorMittal France, which funded this work.

@&#REFERENCES@&#

