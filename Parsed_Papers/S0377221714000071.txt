@&#MAIN-TITLE@&#A survey of recent research on location-routing problems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The survey concerns the location-routing problems met in logistic networks design.


                        
                        
                           
                           It covers the literature since the last review by Nagy and Salhi (2007).


                        
                        
                           
                           71 publications are analyzed and new problem variants are discussed and classified.


                        
                        
                           
                           A comparison of the best algorithms on standard benchmark problems is added.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Location-routing problem

Facility location

Vehicle routing

Distribution

Truck and trailer routing problem

@&#ABSTRACT@&#


               
               
                  The design of distribution systems raises hard combinatorial optimization problems. For instance, facility location problems must be solved at the strategic decision level to place factories and warehouses, while vehicle routes must be built at the tactical or operational levels to supply customers. In fact, location and routing decisions are interdependent and studies have shown that the overall system cost may be excessive if they are tackled separately. The location-routing problem (LRP) integrates the two kinds of decisions. Given a set of potential depots with opening costs, a fleet of identical vehicles and a set of customers with known demands, the classical LRP consists in opening a subset of depots, assigning customers to them and determining vehicle routes, to minimize a total cost including the cost of open depots, the fixed costs of vehicles used, and the total cost of the routes. Since the last comprehensive survey on the LRP, published by Nagy and Salhi (2007), the number of articles devoted to this problem has grown quickly, calling a review of new research works. This paper analyzes the recent literature (72 articles) on the standard LRP and new extensions such as several distribution echelons, multiple objectives or uncertain data. Results of state-of-the-art metaheuristics are also compared on standard sets of instances for the classical LRP, the two-echelon LRP and the truck and trailer problem.
               
            

@&#INTRODUCTION@&#

It is commonly recognized that logistic costs consume a large part of the budget of companies. These costs can be substantially reduced by a careful design of the supply chain. The distribution network at the end of the chain is particularly important because it involves many small product flows towards end-customers or retailers. The design of this network raises two hard combinatorial optimization problems, to locate depots, and determine vehicle routes supplying customers from these depots. These two types of decisions have been addressed separately for a long time, but the continuous progress in optimization techniques has made possible integrated approaches known under the name of location-routing problems (LRP).

The idea of combining depot location and vehicle routing dates back nearly fifty years. At that time, the inter-dependency of these two types of decisions was already highlighted but optimization and computers were not developed enough to envisage an integrated treatment (Maranzana, 1964; Von Boventer, 1961; Webb, 1968). Watson-Gandy and Dohrn (1973) were probably the first authors to clearly consider customer visits while locating depots, through a non-linear profit function modeling decreasing sales with the distance to the depot. The potential benefits brought by including vehicle routing decisions while locating depots were quantified for the first time by Salhi and Rand (1989). These authors showed that the classical strategy consisting in solving a location problem and a routing problem separately often leads to suboptimal solutions.

This key-remark inspired a growing stream of research on location-routing problems and the last comprehensive survey published by Nagy and Salhi (2007) demonstrates its vitality. Nagy and Salhi classify the literature on location-routing problems by distinguishing methodologies for deterministic variants, stochastic or dynamic problems, and versions with more complex networks (several echelons, inter-depot routes, etc.), before concluding with some suggestions for future research. Table 1
                      summarizes a number of articles published since 2007, on various forms of location-routing problems. Some papers could be put in two categories but a single one was arbitrarily selected. The 72 references found and the growing number of publications from 2010 onwards make necessary a review on these new research works.

This paper updates this survey by reviewing the literature published from 2007 onwards, with a small overlap with Nagy and Salhi (2007) to recall a few historical references. In addition, a number of papers published from 2003 to 2006 concerning topics not addressed by Nagy and Salhi (for instance the truck and trailer routing problem) have been added. The survey discards many papers in which the keyword “location-routing” is overly employed for problems assuming truckload transportation (no true routes). Section 2 recalls classical location routing problems and their novelties concerning exact methods, lower bounds and heuristics. Versions of the problem taking into account several distribution echelons are reviewed in Section 3. Problems with special or multiple objective functions are covered in Section 4 while miscellaneous LRP variants are gathered in Section 5. Finally, concluding remarks and research perspectives are given in Section 6.

Various versions of location-routing problems have been studied during the last years. However, the classical versions are still interesting and deserve a particular attention. In this section, the capacitated LRP definition is recalled and the last researches on exact methods, lower bounds and heuristics are exposed.

At the beginning, many studies on the LRP considered uncapacitated depots (see for instance Tuzun & Burke (1999)). Since the survey by Nagy and Salhi (2007), most authors address the LRP with capacity constraints on depots and vehicles, called capacitated LRP (CLRP). However, a few works still concern the particular cases with either uncapacitated vehicles (if the triangle inequality holds, a single vehicle route must be built for each open depot) or uncapacitated depots. All these versions formulate the vehicle routing part as a deterministic node routing problem (i.e., customers correspond to a subset of nodes of the network), though a few authors have studied arc routing versions (Ghiani & Laporte, 2001; Hashemi Doulabi & Seifi, 2013; Labadi, 2003).

The CLRP can be defined on a complete, weighted and undirected network with a homogeneous fleet of vehicles with limited capacities, using the following notations that will be reused in the rest of this article:
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          
                                             
                                                V
                                             
                                          
                                       
                                       set of nodes, 
                                             
                                                V
                                                =
                                                I
                                                ∪
                                                J
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                I
                                             
                                          
                                       
                                       set of potential depot nodes 
                                             
                                                I
                                                =
                                                {
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                m
                                                }
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                J
                                             
                                          
                                       
                                       set of customers to be serviced, 
                                             
                                                J
                                                =
                                                {
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                n
                                                }
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      O
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       opening cost of depot i
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       capacity of depot i
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                       demand of customer j
                                       
                                    
                                    
                                       
                                          
                                             
                                                K
                                             
                                          
                                       
                                       number of available vehicles (fleet size)
                                    
                                    
                                       
                                          
                                             
                                                Q
                                             
                                          
                                       
                                       capacity of each vehicle
                                    
                                    
                                       
                                          
                                             
                                                F
                                             
                                          
                                       
                                       fixed cost per vehicle used
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      ij
                                                   
                                                
                                             
                                          
                                       
                                       traveling cost for edge 
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

It is assumed that vehicles are shared by all depots (no depot has a specific fleet) and the 
                           
                              
                                 
                                    c
                                 
                                 
                                    ij
                                 
                              
                           
                         satisfy the triangle inequality. The fleet size K is often limited in mathematical models while it becomes a decision variable in most heuristics. A solution of the problem consists in determining which depots must be opened, assigning each customer to one open depot and building vehicle routes for each depot and its customers. The following constraints must be satisfied: (i) the total demand of customers assigned to one depot must not exceed its capacity; (ii) each route begins and ends at the same depot; (iii) each vehicle performs at most one trip; (iv) each customer is served by one single vehicle (no split delivery); and (v) the total demand of customers visited by one vehicle fits vehicle capacity.

Define binary variables 
                           
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                           
                         if depot i is opened and 
                           
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              =
                              1
                           
                         if edge 
                           
                              (
                              i
                              ,
                              j
                              )
                           
                         is traversed from i to j by a vehicle. The objective function, to be minimized, can be formulated as the sum of three terms: the cost of open depots 
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                       
                                          
                                             O
                                          
                                          
                                             i
                                          
                                       
                                       ·
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        , the fixed costs of vehicles used 
                           
                              
                                 
                                    
                                       F
                                       ·
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             J
                                          
                                       
                                       
                                       
                                          
                                             x
                                          
                                          
                                             ij
                                          
                                       
                                    
                                 
                              
                           
                         and the cost of the routes 
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             V
                                          
                                       
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             V
                                          
                                       
                                       
                                       
                                          
                                             c
                                          
                                          
                                             ij
                                          
                                       
                                       ·
                                       
                                          
                                             x
                                          
                                          
                                             ij
                                          
                                       
                                    
                                 
                              
                           
                        .

The CLRP is NP-hard since it includes two problems known to be NP-hard: the single-source capacitated facility location problem (SS-CFLP) or concentrator problem, where each customer is served by one depot via a direct route, and the multi-depot vehicle routing problem (MDVRP), where no opening cost is considered. These two problems are still NP-hard bin packing problems if transportation costs are ignored, and the MDVRP is still a NP-hard capacitated VRP (CVRP) if there is only one depot (
                           
                              |
                              I
                              |
                              =
                              1
                           
                        ).

The combination of two problems already NP-hard in the LRP probably explains the reduced number of publications on lower bounds and exact algorithms, despite early attempts such as Laporte and Nobert (1981), who designed a branch-and-bound algorithm for a particular case with a single depot to open.

A few authors designed lower bounds outside exact methods, for instance to evaluate heuristics. Barreto (2004) proposed a lower bound based on a cutting plane method for the CLRP. Albareda-Sambola, Díaz, and Fernández (2005) developed two lower bounds for the LRP with capacitated depots but uncapacitated vehicles (one route per open depot). The first lower bound is based on the linear programming relaxation of their model while the second lower bound combines one term for transportation costs (via an asymmetric traveling salesman problem (TSP) on V, with null costs between depots and customers) and one term for the cost of open depots and the fixed costs of vehicles (through a knapsack problem).

Exact algorithms for the CLRP are very recent. Belenguer, Benavent, Prins, Prodhon, and Wolfler-Calvo (2011) elaborate a branch-and-cut algorithm based on a zero-one linear model, strengthened by new families of valid inequalities. The other exact methods exploit set-partitioning formulations. Akca, Berger, and Ralphs (2009) present the first model of this type and a column generation approach. The solution method described by Baldacci, Mingozzi, and Wolfler-Calvo (2011) decomposes the LRP into a limited set of multi-depot vehicle-routing problems and invokes efficient bounding procedures, based on dynamic programming and dual ascent methods. The last method published (Contardo, Cordeau, & Gendron, 2013a) is a branch-and-cut-and-price algorithm. All of these methods can consistently solve instances with 50 customers and 5–10 depots. Some problems involving 200 customers and 10 or 14 depots can be solved by the two last ones.

Three polynomial heuristics with performance guarantees are available for location-routing problems, but with uncapacitated depots. Glicksman and Penn (2008) study the group location-routing problem, in which depots and vehicles have no capacities and the customers are partitioned into groups. One has to simultaneously select a subset of depots to be opened and a collection of tours that covers all customer groups in order to minimize the costs of the tours and the fixed costs of opened depots. In the related generalized VRP there is a single depot, each customer group has its own demand and vehicles are capacitated. A heuristic with 
                           
                              U
                              ·
                              (
                              2
                              -
                              1
                              /
                              (
                              n
                              -
                              1
                              )
                              )
                           
                         approximation is developed, where U is the cardinality of the largest group.


                        Harks, König, and Matuschke (2013) derive worst-case performance ratios for several location-routing problems (LRP with uncapacitated depots, LRP with cross-docking and prize-collecting LRP), by combining algorithms and lower bounds for different relaxations of the original problems. They obtain a 4.38-approximation for the LRP with uncapacitated depots.

The k-location-routing problem, in which at most k uncapacitated depots without fixed costs can be opened in a metric space, is addressed by Carnes and Shmoys (2011), who develop a primal–dual scheme and apply Lagrangian relaxation to derive a 2-approximation algorithm.

Due to the complexity of the problem, only very small LRP instances can be solved exactly by linear programming solvers, and relaxing the existing integer linear models yields weak lower bounds. A few exact approaches are available, but they begin to fail beyond 50 customers. Therefore, heuristics are required to obtain appropriate solutions in acceptable running times on the large instances that can be met in practical applications. The rest of this section surveys these heuristics, which can be compared on four main sets of standard benchmarks:
                           
                              •
                              the “AS set” (Albareda-Sambola et al., 2005) is composed of 450 instances with a number of customers n ranging from 10 to 30, 
                                    
                                       m
                                       =
                                       5
                                    
                                  or 10 capacitated depots, and uncapacitated vehicles.

the “Tuzun set” (Tuzun & Burke, 1999) contains 36 problems with 
                                    
                                       n
                                       ∈
                                       {
                                       100
                                       ,
                                       150
                                       ,
                                       200
                                       }
                                       ,
                                       m
                                       =
                                       10
                                    
                                  or 20 uncapacitated depots, and capacitated vehicles.

the “Barreto set” (Barreto, 2004) involves 19 instances with n varying from 21 to 318, a number of capacitated or uncapacitated depots m ranging from 2 to 15, and capacitated vehicles.

the “Prodhon set” (Prodhon, 2006) consists of 30 instances with n ranging from 20 to 200, 
                                    
                                       m
                                       =
                                       5
                                    
                                 –20 capacitated depots, and capacitated vehicles.

A few constructive heuristics have been proposed in the last decade for location-routing problems. Although metaheuristics give better results, such faster and simpler methods are always useful to assist in finding quickly feasible solutions to large instances or initialize a more sophisticated algorithm.


                        Barreto, Ferreira, Paixão, and Santos (2007) present several hierarchical and non-hierarchical clustering techniques (with several proximity functions) which are included in a sequential heuristic algorithm to solve the CLRP. They propose also a number of guidelines concerning the choice of a suitable clustering technique. Their method is evaluated on Barreto set. Clustering techniques are also employed by Boudahri, Aggoune-Mtalaa, Bennekrouf, and Sari (2013) in a location-routing heuristic to redesign an agri-food supply chain.

A decision-support tool integrating a simple resolution scheme for the CLRP is described by Lopes, Barreto, Ferreira, and Santos (2008). The aim is to provide solutions whose construction is easily understandable by the user and to enable access to online geographic data through web map servers. The proposed method is sequential and consists of four steps: (i) construct groups of customers with a capacity limit; (ii) determine routes inside each group; (iii) improve these routes, and (iv) locate the depots and assign the routes to them.


                        Manzour-al-Ajdad, Torabi, and Salhi (2012) focus on the planar single-facility LRP with Euclidean distance. In this problem, one uncapacitated depot with capacitated vehicles can be placed anywhere in the plane instead of considering a discrete set I of potential locations. A hierarchical heuristic-based method is proposed which takes continuously into account the information from the routing to refine the location. The resulting solution is improved by a set of local search procedures and intensification/diversification mechanisms.

As already stated, the LRP with uncapacitated depots and capacitated vehicles, studied for instance by Tuzun and Burke (1999), is seldom studied at this time. The exception is a paper by Hashemi Doulabi and Seifi (2013), which addresses the location-arc routing problem on a mixed network where up to L uncapacitated depots can be selected out of m. They present mixed integer programs for 
                           
                              L
                              =
                              1
                           
                         and 
                           
                              L
                              >
                              1
                           
                         and relax some constraints to obtain lower bounds for the total cost. They then develop a simulated annealing (SA) framework, working on partial solutions composed of small tours over customers. A partial solution is completed using a savings heuristic that merges small tours, followed by an assignment of each tour to the closest depot and by an improvement procedure that randomly changes the set of open depots. The moves considered by the SA consist in breaking small tours, randomly selected in the incumbent partial solution.

The particular case of the LRP with capacitated depots and uncapacitated vehicles has more success. The construction of a single tour per depot can be considered as an attempt to better estimate transportation costs, compared with traditional facility location problems where direct deliveries are assumed.

In addition to the two bounds already mentioned, Albareda-Sambola et al. (2005) have developed a tabu search (TS) heuristic. The initial solution is obtained by applying a rounding procedure to the relaxed LP solution that constitutes their first lower bound. The TS algorithm alternates between intensification phases at the routing level and diversification phases at the location level. The AS set of instances is used for the first time to compare the TS results with their lower bounds.

An iterative local search (ILS) is described by Derbel, Jarboui, Hanafi, and Chabchoub (2010). Starting from one initial solution, each iteration takes a copy of the incumbent solution, applies a perturbation operator and a local search to it, and updates the incumbent solution when improved. The moves considered in the local search consist in relocating one customer or exchanging two customers, in one route or two distinct routes. Compared with the TS of Albareda-Sambola et al. (2005) on the AS set, the ILS lowers the average gap to lower bounds from 
                           
                              10.46
                              %
                           
                         to 
                           
                              9.83
                              %
                           
                        .

The same authors (Derbel, Jarboui, Hanafi, & Chabchoub, 2012) extend their ILS by embedding it in a genetic algorithm (GA). The result GA-ILS is a kind of memetic algorithm in which the local search procedure is replaced by ILS. The chromosomes used comprise two vectors, one defining the set of open depots and the customers assigned to each of them, the other giving the rank of each customer in the route of its depot. Compared to ILS, the average deviation to lower bounds is only marginally improved (
                           
                              9.81
                           
                         vs. 
                           
                              9.83
                              %
                           
                        ).


                        Jarboui, Derbel, Hanafi, and Mladenović (2013) analyze variable neighborhood search (VNS) heuristics with solutions encoded as m lists of customers, each list defining the route for one depot. Five neighborhoods are used, four acting on the routes and one exchanging the status open/closed of two depots. Six VNS are assembled from these neighborhoods. On the AS set, the best combination is only marginally better than the GA-ILS from Derbel et al. (2012) (
                           
                              9.70
                           
                         vs. 
                           
                              9.81
                              %
                           
                        ) but is four times as fast. These authors also use the other sets of standard benchmarks (Tuzun, Barreto, Prodhon) but ignore vehicle capacities, making a comparison with state-of-the-art CLRP metaheuristics impossible.

New efficient metaheuristics constitute the main advance on the CLRP in the last decade. Neigborhood-based methods are reviewed here, with the following section being devoted to population and multi-agent algorithms.

GRASP (greedy randomized adaptive search procedure) is a metaheuristic in which each iteration is composed of two phases (Feo & Resende, 1995): construction of a trial solution using a greedy randomized heuristic, and then improvement of this solution by local search. Such a method for the CLRP is described by Prins, Prodhon, and Wolfler-Calvo (2006a). It is based on a multi-depot and randomized version of the CVRP savings heuristic from Clarke and Wright (1964), designated the randomized extended Clarke and Wright algorithm (RECWA). The algorithm is reinforced by a learning process to identify promising subsets of depots and by a post-optimization step based on path relinking (PR). The paper also introduces the set of Prodhon’s instances.


                        Duhamel, Lacomme, Prins, and Prodhon (2010) replace the local search of GRASP by an evolutionary local search (ELS), giving a GRASP×ELS also called multi-start ELS (MS-ELS). ELS is a kind of ILS generating several child solutions at each iteration, using perturbation and local search. The GRASP×ELS for the CLRP works on two solution spaces: the giant tours (TSP tours) over the set of customers and the set of CLRP solutions. Each ELS iteration considers an incumbent pair 
                           
                              (
                              S
                              ,
                              T
                              )
                           
                        , where S is a CLRP solution and T the giant tour obtained by concatenating its trips and removing depots. Each child is created by randomly perturbing a copy of T, splitting the resulting tour into CLRP trips and improving the result by local search. If the best child 
                           
                              
                                 
                                    S
                                 
                                 
                                    ‾
                                 
                              
                           
                         obtained in that way improves upon S, then the pair used for the next ELS iteration is 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    ‾
                                 
                              
                              ,
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 
                                    T
                                 
                                 
                                    ‾
                                 
                              
                           
                         is the giant tour obtained by concatenating the routes of 
                           
                              
                                 
                                    S
                                 
                                 
                                    ‾
                                 
                              
                           
                        .

To split a giant tour for the CVRP, Beasley (1983) relaxes vehicle capacity to build a TSP tour in a first step. This tour is then split optimally (subject to the sequence) into feasible routes. The process is equivalent to a shortest path problem in an auxiliary graph where each arc represents a feasible trip (subsequence of customers of the giant tour). Beasley’s idea can be used to evaluate solutions encoded as giant tours in metaheuristics. This was done for the first time by Prins (2004) in a memetic algorithm for the CVRP. The technique is similar for the CLRP, but limited depot capacities induce a hard resource-constrained shortest path problem, solvable using a multi-label extension of Bellman’s algorithm. To reduce running time, Duhamel et al. (2010) employ a version called greedy split, with a limited number of labels per node. GRASP×ELS is still the best performer on Barreto’s instances, though it was outperformed by the most recent metaheuristics on Prodhon set.

A faster splitting procedure in GRASP×ELS metaheuristics is then tried for the CLRP and the heterogeneous fixed fleet VRP (Duhamel, Lacomme, & Prodhon, 2011): the number of labels per node is still restricted but the graph is explored in a depth-first manner. The GRASP×ELS with this depth-first search implementation (DFS split) is tested on Prodhon’s CLRP instances and improves both the solution gaps and running times of the 2010 version.


                        Yu, Lin, Lee, and Ting (2010) implement a simulated annealing heuristic (SA) for the CLRP. Each solution is encoded as a list containing one sub-list per depot. Each sub-list begins with the index of the depot, followed by its routes separated by dummy zeros. The random moves performed are: relocations of a node, exchanges of two nodes, and 2-opt moves. The nodes involved can be customers, dummy zeros and, in relocations and exchanges, depot nodes. These nodes may belong to the same route, to two routes rooted at the same depot, or to routes from distinct depots. The 2-opt moves are restricted to nodes visited from the same depot. This algorithm, referred to as SALRP, is currently the fourth-best metaheuristic on Barreto’s and Prodhon’s instances.

Another SA using the same encoding of solutions is proposed by Jokar and Sahraeian (2012). The initial solution is produced by a greedy approach and improved by local search. Random 2-opt and 3-opt moves are then attempted in the main loop of the SA. The testing conducted on some instances from Barreto set allows no comparison with the competitors, in particular Yu et al. (2010).


                        Jabal-Ameli, Aryanezhad, and Ghaffari-Nasab (2011) describe a variable neighborhood descent (VND) algorithm to solve the CLRP. VND is the deterministic version of the variable neighborhood search (VNS) metaheuristic proposed by Mladenović and Hansen (1997). The idea is to successively explore a set of neighborhoods with growing cardinalities to try to escape from local optima. The initial solution is computed by first solving a location-allocation problem and then building the routes for each depot using the Clarke and Wright’s savings algorithm for the CVRP (Clarke & Wright, 1964). Seven neighborhood structures are implemented in the VND: four affecting location-allocation decisions and three addressing the routing decisions. The authors use only Tuzun and Barreto sets. Their solution values are not as impressive as the ones obtained by the other metaheuristics and no computational times are reported.


                        Hemmelmayr, Cordeau, and Crainic (2012) realize an adaptive large-neighborhood search (ALNS) metaheuristic for the two-echelon vehicle routing problem (VRP-2E). The VRP-2E is not considered in this survey but the authors also apply their algorithm to CLRP instances, converted into VRP-2E by connecting the main facility to each depot by one arc weighted by the depot opening cost. ALNS, introduced by Ropke and Pisinger (2006) for the pickup and delivery problem, is a general metaheuristic based on destroy-and-repair operators. Each iteration randomly selects one destroy operator and one repair operator, using a roulette wheel mechanism based on their success rates. For the CLRP, destroy operators are based on various strategies such as: opening/closing one depot, swapping the status of two depots, removing q customers at random, and removing a route. Repair operators reinsert unrouted customers using cheapest insertion or regret-based criteria. A local search is also applied to improve the routes of each depot, after destroy operators change the subset of open depots. The resulting ALNS is the current best algorithm on Tuzun’s instances, and the third-best one on Barreto and Prodhon sets.

The POPMUSIC framework (Partial OPptimization Metaheuristic Under Special Intensification Conditions) has also been applied to the CLRP (Alvim & Taillard, 2013). POPMUSIC is a template for solving large problem instances. Its principle is to quickly build (in less than 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        ) one initial solution which is then subdivided into elementary parts. Local optimization is then repeatedly applied by selecting one part and a few adjacent parts. Hence, selected groups of parts overlap each other, contrary to a pure decomposition technique. For the CLRP, the authors get one initial solution in 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                    /
                                    2
                                 
                              
                              )
                           
                         by solving a capacitated p-median problem. Each part considered for local optimization corresponds to one tour. Huge instances extracted from world maps are generated, with 17,000 to almost 2 million cities. The running time is approximately one hour for 100,000 cities and twelve hours on the largest instance.

Contrary to most simpler vehicle routing problems, few population or multi-agent metaheuristics have been developed for location-routing problems. In regards to genetic algorithms, the reason probably resides in the necessity to design chromosome encodings which capture the location and routing dimensions, with ad hoc crossover operators. Multi-agent methods such as ant colony algorithms are traditionally based on the construction of one route by each ant, and implementations become less obvious when location decisions are added.


                        Prins, Prodhon, and Wolfler-Calvo (2006b) present a memetic algorithm with population management (MA∣PM) for the CLRP. The chromosome encoding comprises one m-vector DS (depot status) and one n-vector CS (customer status). 
                           
                              DS
                              (
                              i
                              )
                              =
                              0
                           
                         means that depot i is closed, otherwise i is open and 
                           
                              DS
                              (
                              i
                              )
                           
                         indicates the index of the first customer assigned to it in CS. CS is the concatenation of the routes assigned to the opened depots, without trip delimiters. To evaluate a chromosome, DS is first used to deduce the cost of open depots and the list of customers served by each depot. The list for each depot is then split into feasible routes via the procedure used by Prins (2004) for the CVRP. A distance measure in solution space is employed to control population diversity.

This algorithm outperforms the GRASP+PR from Prins et al. (2006a) on the three sets of instances with capacitated vehicles. However, the GRASP×ELS in (Duhamel et al., 2010) is more efficient (although slower), due to a more involved splitting procedure which is able to insert the depots into a single giant tour over the customers.


                        Ting and Chen (2013) develop a multiple ant colony optimization algorithm (MACO), in which the CLRP is decomposed into three decision levels: a single-source capacitated facility location problem to determine open depots, a customer-to-depot assignment problem, and a CVRP problem for each depot. Each level is treated sequentially by one dedicated ant colony with its own pheromone matrix and updating rules. The key-point is to iterate the three steps and ensure that they cooperate via a global pheromone matrix updated after an inspection of each constructed solution. MACO is currently the best solution method on Barreto’s instances (with the GRASP×ELS by Duhamel et al. (2010)) and the second-best one on Prodhon’s instances. In our opinion, it comforts a scheme that looks promising to solve the CLRP: decomposing the problem into a location problem and a routing problem but iterating this process with a global cooperation mechanism. Moreover, such a framework, also applied in the two first algorithms of the next subsection, offers a suitable compromise between solution quality and running time.

This last class of methods consists in hybridizing a heuristic approach with an exact method. In general, sub-problems are solved exactly, using a commercial integer linear programming solver or various exact techniques such as dynamic programming. The sub-problems are often NP-hard but the approach is effective if they can be solved more quickly than the original problem.

The first matheuristic for the CLRP is the Lagrangean relaxation-granular tabu search (LRGTS) from Prins, Prodhon, Ruiz, Soriano, and Wolfler-Calvo (2007). This is a cooperative matheuristic based on a separation between location and routing decisions, a promising idea later reused by Ting and Chen (2013) and Escobar, Linfati, and Toth (2013). In each iteration, the customers of each route in the incumbent solution are first aggregated into super-customers. A capacitated depot location problem is then solved to select open depots and their customers, using Lagrangean relaxation of assignment constraints and sub-gradient optimization. A granular tabu search (GTS) heuristic is applied to the resulting MDVRP. The first iteration employs a greedy heuristic to build the first CLRP solution. As from the second iteration, the incumbent CLRP solution is constructed on the basis of edge frequencies in the routes. Some more recent metaheuriscs are superior to LRGTS but LRGTS is still the fastest, with the VLNS by Pirkwieser and Raidl (2010).

A very similar approach is proposed by Escobar et al. (2013), known as 2-Phase HGTS, which is also based on super-customers (now called clusters), a decomposition into two sub-problems and a granular tabu search for the routing phase. The differences with Prins et al. (2007) include the way of generating the clusters/supercustomers, the moves browsed in the GTS and the link between successive iterations: while LRGTS implements a cooperation based on edge frequencies, 2-Phase HGTS calls a perturbation procedure. On average, this algorithm returns better solutions than LRGTS at the expense of running times multiplied by 6–18 times, depending on the instance set.

A three-phase matheuristic GRASP+ILP is conceived by Contardo, Cordeau, and Gendron (2013b). The first phase involves a GRASP inspired by Prins et al. (2006a) to build a pool of suitable solutions. The other phases are based on a new location-reallocation model (LRM), implemented as an integer linear program (ILP). For a given set of routes and a subset 
                           
                              Γ
                           
                         of customers, this LRM consists of reoptimizing the solution if depots can be changed and the customers in 
                           
                              Γ
                           
                         relocated. The LRM is repeatedly solved by selecting limited subsets of routes from the pool, which yields (in general) improved solutions that are added to the pool. The last phase iteratively solves the LRM on the whole pool using column generation. This metaheuristic is the current best one on Prodhon’s instances but also the slowest, due to the resolution of a large number of linear programs.

Finally, Pirkwieser and Raidl (2010) solve the CLRP using very large-scale neighborhood search (VLNS) procedures based on integer linear programs. Their algorithm is, in fact, designed for the periodic LRP (see Section 5.2) but can be applied to the CLRP. They begin with a classical VNS. The shaking phase involves two neighborhoods for each kind of decision (location and routing), which are combined with different perturbation levels to obtain a total of 18 shaking neighborhoods. The local search is restricted to the routes changed during shaking and involves classical moves, although infeasible solutions are accepted by penalizing depot and vehicle capacity violations. This VNS is then strengthened using three large neighborhoods designated 
                           
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                           
                         and 
                           
                              
                                 
                                    V
                                 
                                 
                                    3
                                 
                              
                           
                        . 
                           
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                           
                         attemps to reassign complete routes to different depots and may open or close depots. It is equivalent to a facility location problem, aggregating the routes into super-customers, as in the LRGTS of Prins et al. (2007). 
                           
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                           
                         is similar but works on the routes of several solutions and relies on a set covering model solved via column generation, in which the columns (routes) are collected during the VNS. 
                           
                              
                                 
                                    V
                                 
                                 
                                    3
                                 
                              
                           
                         performs a finer-grained optimization at the route level and again involves a set-covering formulation. Sequences of customers are removed from given routes and optimally reinserted. The tests are conducted on Prodhon’s instances. In comparison with VNS, a VLNS combining 
                           
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                           
                         and 
                           
                              
                                 
                                    V
                                 
                                 
                                    3
                                 
                              
                           
                         clearly improves the solutions (cost reduced by 1.5% on average). The algorithm is very near to LRGTS in terms of solution quality, while being twice as fast. In fact, no published CLRP metaheuristic is faster.


                        Table 2
                         compares the results of recent metaheuristics for the CLRP on the four standard sets of instances. The first four rows concern the case with uncapacitated vehicles. Two performance indicators are mentioned for each method (averaged on the number of instances): the gap in percentage to either the lower bounds (on the AS set) or the best known solutions assembled from the articles surveyed, and the CPU time in seconds. For each instance, the gaps concern the best solution of 5–10 runs, except for the metaheuristics TS, GRASP+PR, MA∣PM, SALRP and VND, which were evaluated using a single run by their designers. The running times indicate the average duration per run. The computers and programming languages used are so disparate that scaled times for one reference computer would not be pertinent. We simply indicate the computer used and its clock speed in gigahertz. Numbers in boldface emphasize the best indicators.

The table highlights a continuous progress since 2005. As from 2007, all metaheuristics for the LRP with capacitated vehicles achieve average deviations to best known solutions below 1% and the four top performers are GRASP+ILP, MACO, ALNS and SALRP. In general, smaller deviations are obtained at the expense of larger running times. LRGTS and VLNS are by far the two quickest algorithms.

Multi-echelon distribution systems are widespread. For instance, the network can be composed of three layers (factories, intermediate warehouses and end-customers), with location decisions in the first layer, the second layer, or both. A large body of literature considers minimum cost flow network models with truckload transportation, in which transhipment nodes must be located (see recent examples in Li, Chu, & Prins (2009) and Gendron & Semet (2009)). As these problems involve no real vehicle routes (circuits), they are not addressed in this survey.

In the true location-routing models with less-than-truckload (LTL) transportation, a natural question comes to mind: how the depots are supplied in reality. In general, they are replenished by plants or main depots but, again, the consolidated amounts of goods at the source-nodes often justify a transportation in full truckloads, see for instance Rath and Gutjahr (2011) in Section 4.2 about an emergency context. We limit this section to what we call the true multi-echelon location-routing problems, in which the goods arrive at their destinations via two successive LTL routes or more, which implies transhipment nodes. Three families of problems take these issues into account:
                        
                           •
                           In the two-echelon location-routing problems (LRP-2E), routes are added to supply the depots from several main facilities or “plants”, to be located. These routes constitute the first distribution level, or echelon. The routes from selected depots (now called satellite depots or simply “satellites”) to customers represent the second level. Minor variations can be found: a number of authors focus on the case with a single plant at a fixed location, while others authorize customer visits in first-level routes. The LRP-2E is raised in applications such as distribution of newspapers and city logistics. In the latter domain, large trucks arriving from outside may be required to unload their goods at platforms located at the periphery of a city, from which smaller and environmentally-friendly vehicles are allowed to continue downtown. The two-echelon VRP (VRP-2E) is a closely related problem, defined when a first level of routes is added to a MDVRP. Each depot may be used freely, without inducing an opening cost. Although the difference between LRP-2E and VRP-2E is not very significant, the latter is not addressed here.

A few authors study vehicle routing problems, mainly in an arc routing context, in which two types of vehicles performing their trips from the same central depot may meet at any node for a load transfer. Such problems can be viewed as two-echelon location-routing problems in which rendez-vous nodes play the role of mobile satellite depots. We exclude here other routing problems with synchronization constraints (such as homecare scheduling) where rendez-vous nodes are specified in advance.

When trucks with trailers are used, some customers with accessibility restrictions cannot be reached with the trailer. The drivers need to detach their trailers at some temporary parking places. This situation can be viewed as an LRP-2E where possible parking locations correspond to virtual satellites. However, no capacity and no opening cost are associated with these satellites. Such problems are referred to as truck and trailer routing problems (TTRP). They may arise in applications such as milk collection (where tankers may be equipped with a tank-trailer) or deliveries to groceries in mountainous areas (where the trailer may be dropped at a store on a main road in order to access villages located in narrow valleys). Different variants can be found in practice, for instance load transfers may or may not be permitted between trucks and trailers.

The LRP-2E and its variants are very hard optimization problems which are seldom investigated. To our knowledge, the only works before 2009 are from Jacobsen and Madsen (1980) and Madsen (1983), and they involve the context of newspapers distribution. Some authors have studied the VRP-2E and analyzed the impact of satellite location, but without including location decisions in the optimization process (Crainic, Mancini, Perboli, & Tadei, 2012; Crainic, Perboli, Mancini, & Tadei, 2010).

The first work on the LRP-2E after Madsen’s contributions was published by Lin and Lei (2009). Their model includes a set of plants, a set of big customers and a set of small customers. The aim is to locate uncapacitated satellite depots (referred to as distribution centers), determine the subset of big customers served in the first routing level, and build the routes for both levels. Lin and Lei propose a genetic algorithm in which a chromosome specifies only the open satellites and the big customers to be served by the first level. To decode this indirect solution representation (genotype) and obtain a complete LRP-2E solution with the routes for the two levels (phenotype), a cluster-based routing heuristic, followed by a local search, is executed. This heuristic begins with the second level to be aware of the total quantity shipped by each satellite, which then becomes a demand for the first level. The computational evaluation considers a single plant in the first level. On small problems, the average gap to optimal solutions computed by LINGO is around 1%. A case study is also solved, indicating that moving big customers to the first level may induce important savings. Finally, the GA is evaluated on Tuzun’s LRP instances. Not designed for this particular case, it achieves in a few minutes an average deviation of 3.5% to best known solutions, while a state-of-the-art LRP heuristic like LRGTS (Prins et al., 2007) obtains 1.7% in 22seconds.


                        Nguyen, Prins, and Prodhon (2012a) address the LRP-2E with a single central depot (already located) and a set of potential satellites with limited capacities and opening costs. Contrary to Lin and Lei (2009), no customer can be served in the first echelon but the authors show how to overcome this limitation by putting one virtual satellite at the same location as the plant. The proposed metaheuristic designated GRASP+PR is, in fact, a loop alternating cyclically between two GRASP procedures. The first phase, referred to as the diversification phase, may open any depot. Each of its iterations executes three randomized constructive heuristics and applies a variable neighborhood descent (VND) (Hansen & Mladenović, 2001) to the best trial solution produced. The second phase, or intensification, relies on the fact that most good solutions use almost the same depots. It is similar to the first phase but the depots must be chosen among the ones opened in the best solution of the first phase, plus one depot randomly selected at each iteration. Using different strategies, the three heuristics build second-level routes and select satellites before adding first level routes. The VND involves five neighborhoods, four acting on the routes of both levels and one opening or closing depots, but only in the diversification phase. The metaheuristic is complemented by a path relinking process (PR) which can be applied in the main loop (internal PR), as a post-optimization step, or both.

Two sets of instances are used. The first one is obtained by adding one plant and first-level vehicles to the 30 Prodhon’s CLRP instances, giving what we call the Prodhon’s LRP-2E instances in the sequel. They involve 5 or 10 satellites and 20–200 customers. The second one, called Nguyen’s set, is specially generated and contains 24 instances with 5 or 10 satellites and 50–200 customers with a normal or multi-normal distribution in the Euclidean plane. Experimental tests show that the version using both the internal PR and the post-optimization PR yields the best results. Compared with one of the greedy heuristics followed by one call to the VND, the average gap to best solutions is divided roughly by 3. GRASP+PR is also compared with a two-phase method: the LRGTS algorithm for the CLRP (Prins et al., 2007) is used to locate depots and build second-level routes, then a greedy heuristic adds first level routes. This decomposition increases solution gaps by 0.4% on average. Finally, GRASP+PR is tested on Prodhon’s CLRP instances, assuming edges with null costs in the first level and outperforms, for instance, the GRASP+PR of Prins et al. (2006b). Three metaheuristics published in 2012 too provide improved results but require much larger running times.

In Nguyen, Prins, and Prodhon (2012b), the same authors implement a multi-start iterated local search, MS-ILS+PR, strengthened by various ingredients: three greedy randomized heuristics for restarts, two local search procedures, a tabu list for short-term diversification, a path relinking and two search spaces (complete LRP-2E solutions and giant tours over the main depot and all customers). A three-phase splitting procedure converts giant tours into feasible solutions by inserting satellites, partitioning the sub-sequence assigned to each satellite into second-level routes, and adding first-level routes to supply the selected satellites. Reusing the two same sets of instances, MS-ILS+PR outperforms the previous GRASP by 0.8% on average but takes longer. The algorithm can be applied to the CLRP, with a 0.2% loss on Prodhon’s instances compared with LRGTS (Prins et al., 2007). Finally, the method is upgraded to handle several plants to locate and compared to the tabu search from Boccia, Crainic, Sforza, and Sterle (2010), presented in the sequel: MS-ILS+PR saves almost 3% on the medium and large instances proposed by the latter authors.


                        Boccia et al. (2010) study the LRP-2E with several plants and devise a tabu search handling the problem as two CLRPs, one per echelon. Each CLRP is decomposed into a capacitated facility location problem (CFLP) and a MDVRP with specific neighborhoods. In each echelon, each time an improvement is found in the CFLP, the MDVRP module is called for the new location configuration. In regards to the link between the two echelons, the CLRP solution for the first echelon is reoptimized whenever a move modifies the satellites of some customers in the second echelon. The authors use three sets of instances (with 2–5 plants, 3–20 satellites and 8–200 customers) to test two versions TS1 and TS2 with different parameters. On the smallest instances, the best version TS2 retrieves most optimal solutions computed by the Xpress-MP solver. On medium–large instances, TS2 significantly outperforms a sequential decomposition approach (DA) that solves a CFLP and then a VRP-2E.

The same problem is addressed by Boccia, Crainic, Sforza, and Sterle (2011) to establish a classification of its variants and introduce several mixed-integer models: several two-index and three-index vehicle-flow formulations (with a polynomial number of variables and constraints), and one set-partitioning formulation. The vehicle-flow models are solved using Xpress-MP on the small instances already employed by Boccia et al. (2010). Optimal solutions are obtained in reasonable computing time for cases with up to 3 plants, 5 satellites and 10 customers. The deviations to lower bounds grow quickly for larger instances, reaching for example 25% for 3 plants, 10 satellites and 25 customers.

Still working with the LRP-2E with multiple plants, Contardo, Hemmelmayr, and Crainic (2012) proposed a branch-and-cut algorithm based on a new two-index vehicle-flow formulation, strengthened by several families of valid inequalities. They also slightly modify the ALNS designed by Hemmelmayr et al. (2012) for the VRP-2E (see Section 2.7), to handle depot opening costs. Both algorithms consider the problem as two CLRPs, one for each echelon. The branch-and-cut algorithm is able to solve to optimality problems with up to 50 customers and 10 satellites, and to achieve small gaps on larger instances. On Prodhon, Nguyen and Boccia’s medium–large instances, ALNS reduces the solution costs found by MS-ILS+PR (Nguyen et al., 2012b) by 0.15%, 0.34% and 1.37% on average, while being twice slower. Moreover, ALNS’s average gap to the lower bounds returned by the branch-and-cut is only 3.06%.

A variable neighborhood search (VNS) for the LRP-2E with several plants is presented by Schwengerer, Pirkwieser, and Raidl (2012). It is derived from the VNS developed for the CLRP by Pirkwieser and Raidl (2010) (see Section 2.9). Six neighborhood structures are used for shaking, each one involving several moves with increasing perturbation strength, yielding a total of 21 specific neighborhoods. Two consecutive local search methods are applied to the only routes modified by the shaking step. As for the CLRP version, capacity violations are allowed but included as penalties in the objective function. VNS takes place between ALNS and MS-ILS+PR in terms of solution quality, except on Prodhon’s LRP-2E instances where it becomes the best performer.


                        Table 3
                         gathers the results obtained by state-of-the-art metaheuristics on four sets of LRP-2E instances, using the same indicators and conventions as in Table 2. Concerning Boccia’s instances, “all” means all instances, including the small instances which can be solved to optimality by Xpress-MP, while “m–l” represents medium–large instances. The deterministic methods DA and TS2 require a single run while GRASP+PR and MS-ILS+PR are appraised over 5 runs, ALNS with 10 runs, and VNS with 20.

Two interesting problems in an arc routing setting are worth mentioning. First, Amaya, Langevin, and Trépanier (2007) introduce the capacitated arc routing problem with refill points (CARP-RP), raised by road network maintenance. From a central depot, a set of road markings must be painted by one service vehicle (SV) which can be replenished at any node by one refilling vehicle (RV). The RV returns to the depot after each rendez-vous. The goal is to determine a rural postman tour for the SV and a rendez-vous on this tour for the RV, in order to minimize the total distance traveled. An integer linear programming model is proposed. The solution method, a simple cutting plane algorithm, is tested first on directed networks with 20–70 nodes and 50–595 arcs: most instances are solved to optimality and the maximum gap does not exceed 4%. Instances with mixed networks are much difficult, with gaps reaching 10%.

Second, Del Pia and Filipi (2006) address a real waste collection problem with two types of trucks called compactors and satellites. The largest trucks (compactors) cannot access the city center with narrow streets. Each satellite can serve any street but its smaller waste compartment is quickly filled. As the landfill is far from the city center, appointments are organized between one satellite and one compactor. The satellite transfers its waste into the compactor to avoid traveling to the landfill. Hence, the compactors can be viewed as mobile depots, giving a problem called capacitated arc routing problem with mobile depots (CARP-MD). The solution method is a VND in which the routes of satellites may violate vehicle capacity after a move, but feasibility is restored by the least-cost insertion of one rendez-vous node traversed by a compactor. Applied to a real case with 351 nodes and 422 edges in Northern Italy, the VND reduces the waste collection time by 30%, compared with the existing planning.

The most widespread truck and trailer routing problem can be defined as follows (Villegas, Prins, Prodhon, Medaglia, & Velasco, 2011). A fleet of vehicles based at a depot node comprises 
                           
                              
                                 
                                    m
                                 
                                 
                                    t
                                 
                              
                           
                         trucks (lorries) with capacity 
                           
                              
                                 
                                    Q
                                 
                                 
                                    t
                                 
                              
                           
                         and 
                           
                              
                                 
                                    m
                                 
                                 
                                    r
                                 
                              
                           
                         trailers (
                           
                              
                                 
                                    m
                                 
                                 
                                    r
                                 
                              
                              <
                              
                                 
                                    m
                                 
                                 
                                    t
                                 
                              
                           
                        ) with capacity 
                           
                              
                                 
                                    Q
                                 
                                 
                                    r
                                 
                              
                           
                        . A set of customers with demands 
                           
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                           
                         must be served. It includes a subset 
                           
                              
                                 
                                    N
                                 
                                 
                                    t
                                 
                              
                           
                         of truck customers, accessible only by a truck, and a subset 
                           
                              
                                 
                                    N
                                 
                                 
                                    v
                                 
                              
                           
                         of vehicle customers, accessible either by a truck or a complete vehicle (i.e., a truck pulling a trailer). The objective is to find a set of routes of minimum total distance, such that (i) each customer is served by a compatible vehicle, (ii) the total demand of the customers in a route does not exceed the capacity of the allocated vehicle, and (iii) the number of required trucks and trailers is not greater than 
                           
                              
                                 
                                    m
                                 
                                 
                                    t
                                 
                              
                           
                         and 
                           
                              
                                 
                                    m
                                 
                                 
                                    r
                                 
                              
                           
                        , respectively. A solution includes pure truck routes, done by a truck visiting customers in 
                           
                              
                                 
                                    N
                                 
                                 
                                    t
                                 
                              
                           
                         and 
                           
                              
                                 
                                    N
                                 
                                 
                                    v
                                 
                              
                           
                        , pure vehicle routes, performed by a complete vehicle serving only customers in 
                           
                              
                                 
                                    N
                                 
                                 
                                    v
                                 
                              
                           
                        , and finally vehicle routes with subtours. The latter are composed of a main tour visiting only customers in 
                           
                              
                                 
                                    N
                                 
                                 
                                    v
                                 
                              
                           
                        , and one or more subtours, in which the truck is detached at a vehicle customer location (called the root of the subtour) to visit with the truck one or more customers in 
                           
                              
                                 
                                    N
                                 
                                 
                                    t
                                 
                              
                           
                         and probably some customers in 
                           
                              
                                 
                                    N
                                 
                                 
                                    v
                                 
                              
                           
                        . In some papers the set of locations to detach trailers does not necessarily correspond to the set of vehicle customers.

It is assumed in general that load transfers are possible between a truck and its trailer. Consider for instance a milk collection problem with truck customers only, a tanker (truck) of 10cubic meter and a tank-trailer of 20cubic meter. If the milk can be transferred from the truck to the trailer, three subtours collecting 10cubic meter each can be carried out, with a transfer at the end of the first two subtours. In other words, the usual assumption when load transfers are permitted is that the total demand allowed to be served by one primary trip and its subtours is equal to the total capacity 
                           
                              
                                 
                                    Q
                                 
                                 
                                    t
                                 
                              
                              +
                              
                                 
                                    Q
                                 
                                 
                                    r
                                 
                              
                           
                        . However, load transfers are not allowed in some applications: for example when the truck and its trailer are pre-loaded at the main depot with heavy equipments which cannot be easily moved by the driver.

The previous survey on location-routing problems (Nagy & Salhi, 2007) does not cover the TTRP. We begin with a seminal article (Chao, 2002) which describes a tabu search metaheuristic with a deterministic annealing scheme (TS-DA). The initial solution is computed using a cluster-first, route-second approach. The clustering phase allocates customers to routes by solving a relaxed generalized assignment problem. The routing phase calls a cheapest insertion heuristic to sequence the customers within each route. The moves considered in the tabu search include three classical CVRP moves (relocation of one customer, exchange of two customers and 2-opt moves) completed by a TTRP-specific move changing the root of a subtour. Capacity violations are accepted but added as penalized terms to the objective function. Several restarts are performed from the best solution found so far. The method is tested on 21 TTRP instances derived from 7 classical CVRP test-problems, with 50–199 customers and 25%, 50% or 75% of truck customers. These instances have been reused by all subsequent authors.


                        Scheuerer (2006) develops two constructive methods (a cluster-based insertion heuristic and an adaptation of the sweep heuristic by Gillett & Miller (1974)) and a tabu search for the TTRP. Starting from the solution of one of these heuristics, the tabu search explores the neighborhood generated using reallocations and exchanges of subsets of customers over routes and subtours. As in Chao (2002), solutions violating truck and trailer capacities are considered and one of the moves can change the root of a subtour. A local search involving 2-opt and Or-opt moves improves each modified tour in accepted solutions. Neighborhood reduction strategies are used to speed-up the method and restarts from the best solution found so far are performed to diversify the search.

A bi-objective version of TTRP is addressed by Tan, Chew, and Lee (2006). The two criteria to be minimized are the number of trucks and the total distance traveled, while respecting constraints such as time windows and availability of trailers. A hybrid multi-objective evolutionary algorithm is developed to find Pareto-optimal solutions. Based on a variable-length chromosome representation and reinforced by a local search, it is appraised on 28 test-cases involving 100–132 customers, different spatial distributions and a more or less constrained number of trailers.


                        Lin, Yu, and Chou (2009) develop for the TTRP a simulated annealing algorithm resembling the one that they designed with different coauthors for the CLRP (see Yu et al. (2010) in Section 2.7). It is based on a solution encoding containing one list of customers, with dummy zeroes delimiting first-level routes and subtours, and a vector of binary variables, representing the type of vehicle used to serve each vehicle customer. Solutions may use too many vehicles or trailers. When this happens, a route combination approach tries to reduce the number of trucks and trailers and a penalty term is added to the objective function to guide the search towards feasible regions. Three neighborhoods are applied, two on the list of customers of the encoding (random relocations and exchanges) and one on the binary vector (flipping the type of vehicle serving a randomly selected vehicle customer). The same authors (Lin, Yu, & Chou, 2010) study the relaxed TTRP (RTTRP), a version without restriction on the number of available trucks and trailers. They adapt their SA and discuss a non-trivial trade-off between fleet size and total distance. In (Lin, Yu, & Lu, 2011), another SA extension is applied to the TTRP with time windows (TTRPTW).


                        Caramia and Guerriero (2009) prefer to use an approach based on mathematical programming and local search. A first integer linear program is solved to assign customers to first-level routes, with the objective of minimizing the fleet size used to service clients. A second program is invoked to build second-level routes, using a TSP-like model without subtour elimination constraints. As the second phase may produce disconnected subtours, a local search based on edge insertions is called to repair the solution. The three steps are repeated with several initial solutions, with the help of a tabu list to diversify the customer-to-route assignments.

When a single truck with a detachable trailer based at a main depot must serve the demand of a set of customers accessible only by truck, the problem is designated as the Single Truck and Trailer Routing Problem with Satellite Depots (STTRPSD). One first-level trip must be built to visit a subset of possible parking places (the satellite depots), from which subtours are realized to reach customers. Villegas, Prins, Prodhon, Medaglia, and Velasco (2010) analyze two metaheuristics for this problem: a GRASP and a multi-start evolutionary local search (also called GRASP×ELS, see its principle in Section 2.7). They both use the same constructive heuristic to provide initial solutions: a splitting procedure to decode new solutions, and a VND to bring intensification. The splitting procedure converts optimally (subject to the sequence) a TSP tour over the customers into a STTRPSD solution. This dynamic programming algorithm inserts satellite depots in the TSP tour and cuts the sub-sequence between two satellites into successive subtours. It can be implemented in 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         for p satellites. The first-level route is defined by the sequence of inserted satellites. The VND involves five neighborhoods, three for the routes and two adding or dropping satellites. The authors prepared a set of 32 randomly generated problems to evaluate the two methods and conclude that the multi-start evolutionary local search outperforms the GRASP.

The same authors (Villegas et al., 2011) study a hybrid metaheuristic for the TTRP that combines elements of GRASP, VNS and path relinking (PR). As in Villegas et al. (2010), the method is based on a route-first, cluster-second procedure. The non-trivial splitting procedure is based on a shortest path algorithm with several labels per node, but the authors show that the number of labels can be bounded to lead to an 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    m
                                 
                                 
                                    t
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    m
                                 
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         complexity. The VNS explores four neighborhoods to improve all the routes and subtours, and a specialized neighborhood intended to improve the structure of a primary route with all its subtours. Since the algorithm is allowed to explore infeasible solutions, the VNS serves both as improvement procedure and as reparation operator. The PR is tested as post-optimization procedure, as intensification procedure, and in an evolutionary path relinking (EvPR). Even if the GRASP×VNS without PR already outperforms the previous methods from the literature on the test bed introduced by Chao (2002), the experiments also unveiled the contribution of PR to solution quality: the post-optimization PR offers the best tradeoff between solution quality and running time, whereas EvPR yields the best results at the expense of longer running times. In fact, GRASP×VNS+EvPR outperforms the older TTRP heuristics.

Very recently, Derigs, Pullmann, and Vogel (2013) develop a flexible two-phase metaheuristic framework to solve TTRPs with or without load transfers and with optional time windows. The first phase computes one initial solution, using adaptations of constructive heuristics for the CVRP: the savings heuristic by Clarke and Wright (1964) and the sweep heuristic by Gillett and Miller (1974) for the TTRP with load transfers, the generalized assignment heuristic by Fisher and Jaikumar (1981) if transfers are forbidden, and a regret insertion heuristic for the TTRPTW. The second phase aiming at improving this solution is guided by either a tabu search with an attribute-based hill climber (a version called Hybrid-ABHC) or a record-to-record travel (Hybrid-RRT). At each iteration, the guiding metaheuristic selects at random a local search move for intensification or a large neighborhood move to diversify the search. The former include four standard CVRP operators and two specific moves, one transferring a complete sub-tour to an alternative root customer, the other changing the type of trip visiting a customer (truck or complete vehicle). The large neighborhood search is based on the ruin-and-recreate moves designed by Ropke and Pisinger (2006) for a general pickup and delivery problem, plus a dedicated operator that removes completely one sub-tour. Hybrid-ABHC and Hybrid-RRT respectively dominate the GRASP×VNS+EvPR from Villegas et al. (2011) on the TTRP with load transfers, and the SA procedure from Lin et al. (2011) on the TTRPTW.

The most recent algorithm for the TTRP is a matheuristic designed by Villegas, Prins, Prodhon, Medaglia, and Velasco (2013), based on a set-partitioning formulation. The GRASP×VNS+EvPR (Villegas et al., 2011) is called first and, after each call to the VNS, the routes of the resulting TTRP solution are added to a pool. The set-partitioning model limited to the gathered routes is then solved by the Gurobi solver, using the best cost found by the metaheuristic as initial upper bound in the branch-and-bound tree. Two versions are tested: the version called “large pool” runs the metaheuristic for 60 main iterations, without limit on the pool size, while the “small pool” version adds a maximum of 
                           
                              200
                              ·
                              n
                           
                         routes to the pool. Gurobi is limited to 30minutes of running time and the best integer solution is returned when the branch-and-bound tree cannot be completed. The large pool version finds better results while being three times slower than the small pool one. Both versions outperforms previous heuristics on Chao’s instances.


                        Drexl (2011) addresses what he calls the generalized TTRP (GTTRP): (i) vehicles based at the main depot are either single lorries or lorries having their own trailer, (ii) the lorries (and the trailers) may have different capacities, (iii) each vehicle used induces a fixed cost and a distance-dependent cost, and (iv) the set of locations to park the trailer does not necessarily correspond to the set of customers. His paper presents a mixed-integer model, involving binary arc flow and continuous resource variables, and a branch-and-price algorithm based on path-flow reformulation of the first model. As the pricing sub-problem is a NP-hard elementary shortest path problem with resource constraints, which requires a multiple label generalization of Bellman’s algorithm, three heuristic versions of the branch-and-price algorithm are derived: two that relax the pricing sub-problem (computing non-elementary paths or ignoring the trailer locations in the labels) and one by solving the problem only at the root of the branch-and-bound tree (heuristic column generation). The experiments on randomly generated instances inspired by milk collection unveil the ability of the three versions to produce high-quality solutions. However, results on Chao’s TTRP instances are disappointing: as Drexl suggests, much more labels are developed in the pricing problems, because the average ratio of customer demand to vehicle capacity is rather small in these instances.

To close this review on the TTRP, some problems in the literature involve trailers but without location decisions. For instance, Derigs, Kurowsky, and Vogel (2011) study a real problem with tractors, trailers and EU-regulations for drivers. A fleet of identical tractors with heterogeneous trailers must cover chains of customers with fixed arrival and departure times, specified by a timetable. The problem is rather a kind of multi-trip VRP: each tractor leaves the central depot with a trailer to serve one chain, returns to the depot and may perform other trips with different trailers.

In fact, Drexl (2012) shows that the TTRP can be included in a more general setting called the vehicle routing problem with trailers and transshipments (VRPTT), able to handle various synchronization constraints. The VRPTT includes in particular multi-echelon location routing problems, personnel dispatching problems with spatial–temporal synchronizations (like in homecare scheduling), and simultaneous vehicle and crew routing problems (where a vehicle may use several drivers successively).


                        Table 4
                         compares seven solution methods on the 21 TTRP instances built by Chao (2002). The best known solutions used to compute the percentage gaps can be found in Villegas et al. (2013). Except Caramia and Guerriero (2009) who used one execution, the other authors performed multiple runs (5 for Derigs et al., 10 for the other heuristics) and report the best and average results of these runs. Chao’s tabu search is deterministic but executed 10 times with different seed customers in the initial heuristic. Scheuerer’s tabu search examines at each iteration a randomly selected subset of possible moves, which explains its testing using 10 runs too. The table includes the results for the large pool and small pool versions of the matheuristic from Villegas et al. (2013). CPU times in seconds are also indicated, except for Caramia and Guerriero (2009), who report no running times in their article.

In all location-routing problems surveyed up to now, the objective function to be minimized includes the fixed costs of open depots and the costs of the routes. Application domains like the disposal of hazardous materials or emergency logistics raise interesting variants, characterized by unusual optimization criteria.

There exists a significant literature on the location of obnoxious facilities. In general, the models aim at minimizing a weighted sum which includes the transportation cost and an aversion or risk measure whose the role is to avoid or reduce exposure to people. In fact, we discovered that the keyword “location-routing” almost always denotes problems without real routes in related articles. Indeed, most papers consider large amounts of waste, which implies truckload transportation. Typical examples can be found in Cappanera, Gallo, and Maffioli (2003), Alumur and Kara (2007) and Xie, Lu, Wang, and Quadrifoglio (2012).


                        Caballero, González, Guerrero, Molina, and Paralera (2007) study a true location-routing problem to locate a given number of incineration plants for solid animal waste produced by slaughterhouses located in different cities. The problem is in fact a multi-objective LRP with capacitated vehicles, a maximum distance constraint and uncapacitated depots (the plants) with opening costs. Five objectives must be minimized: (i) the total cost of the routes, (ii) the total opening cost of selected plants, (iii) a social rejection measure based on the number of inhabitants in the cities traversed by the routes, (iv) an equity criterion (the maximum social rejection over the set of cities), and (v) another social rejection measure taking the distances between incineration plants and cities into account (for one plant and one town, this is an increasing function of town size but a decreasing function of the distance between the plant and the town). The solution method, a multi-objective metaheuristic based on tabu search, is used to build a set of non-dominated solutions (in the Pareto sense) for a real problem involving 2 plants and 93 cities in Andalusia (Spain).

A growing research activity concerns optimization problems raised by large-scale disasters, such as tsunamis or earthquakes, and more local crises, such as industrial accidents or terrorist attacks. Financial costs are sometimes considered, as resources are never unlimited, but in general priority is given in the response phase to user-oriented objective functions, for instance maximizing the amount of relief goods distributed in each time period or minimizing the average time to access affected sites. The often conflicting optimization criteria lead to multi-objective algorithms or bi-level mathematical programming approaches.


                        Rath and Gutjahr (2011) consider a three-objective warehouse location-routing problem (WLRP) to establish a supply system after a disaster. This WLRP is a kind of two-echelon LRP with plants, warehouses to be located, and customers. However, it differs in the following features: (i) the total demand may exceed the total supply of the plants, implying a selection of served customers; (ii) the transportation of goods from plants to depots is done in full truckloads (no true routes); and (iii) the last customer in each route of the second echelon can be served partially.

Hence, the distribution from warehouses is a multi-depot team orienteering problem. The aim is to minimize a strategic cost 
                           
                              
                                 
                                    F
                                 
                                 
                                    1
                                 
                              
                           
                         (total opening cost of warehouses), to minimize an operative cost 
                           
                              
                                 
                                    F
                                 
                                 
                                    2
                                 
                              
                           
                         (transportation costs from plants to depots and warehousing costs proportional to the throughput of each open warehouse) and to maximize a service measure 
                           
                              
                                 
                                    F
                                 
                                 
                                    3
                                 
                              
                           
                         (total demand satisfied). Note that routing costs in the second echelon are not taken into account, which is often the case in disaster logistics. As 
                           
                              
                                 
                                    F
                                 
                                 
                                    3
                                 
                              
                           
                         conflicts with 
                           
                              
                                 
                                    F
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    F
                                 
                                 
                                    2
                                 
                              
                           
                        , a matheuristic based on the epsilon-constraint method is used to compute the Pareto frontier. Each single-objective problem is solved by a matheuristic based on a mixed integer formulation. Constraints are generated on demand by a variable neighborhood search algorithm and stored in a constraint pool. Randomly generated instances and a real-world illustration case are used to test the method. Results are compared to those obtained by a direct resolution of the mixed integer program (on small instances) or by the classical NSGA-II metaheuristic (on larger instances). They indicate that the proposed solution method gives very good solutions, with better hypervolume measures compared to NSGA-II.

Although they do not refer to emergency applications, Tavakkoli-Moghaddam, Makui, and Mazloomi (2010) are also interested in the total demand satisfied. They present a new integrated mathematical model for a bi-objective CLRP where the total cost (opening costs, throughput costs of selected depots and routing costs) has to be minimized while the total demand to be served has to be maximized. The authors propose a multi-objective scatter search (MOSS) and an elite tabu search (ETS) to obtain a Pareto-optimal frontier and validate both their solution quality and diversity level on test problems with 2–10 depots, 3–8 vehicles, and 5–40 customers. Compared to ETS, three comparison metrics show that MOSS finds better approximations of the optimal frontier while being 50% slower.

A bi-level linear programming model is presented by Hua-Li, Xun-Qing, and Yao-Feng (2012) for a bi-objective CLRP with a time window 
                           
                              [
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ]
                           
                         to rescue each customer i, raised by emergency situations at the city level. The upper-level program models the depot location problem to minimize a total cost (opening cost of depots and delivery costs). The lower-level program addresses the vehicle routing problem to maximize a service level measure. This measure is a sum of indicators over the set of customers. If 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                           
                         denotes the arrival time at customer i, this indicator is equal to 1 if 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                           
                        , to 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              )
                              /
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         if 
                           
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                              <
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              <
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         and to 0 if 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              ⩾
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                        . A genetic algorithm is proposed to solve the bi-level model and results are reported on a case with 8 rescue vehicles, 5 emergency supply facilities and 23 affected sites.

Other special objective functions can be found in the literature. Melechovský, Prins, and Wolfler-Calvo (2005) deal with a CLRP in which the objective function includes not only the route costs but also a non-linear cost for each open depot, growing with the total demand handled at this depot. The last cost is given by a concave piecewise linear function that reflects economies of scale when larger amounts are shipped. The authors propose a mixed integer model and a metaheuristic TS+VNS. The latter starts with an initial feasible solution obtained by a p-median approach and improves it using a tabu search (TS) reinforced by a variable neighborhood search (VNS). The VNS examines Or-opt moves that displace a chain of k consecutive customers between two vehicles with different depots. The value of k varies from 1 to 
                           
                              
                                 
                                    k
                                 
                                 
                                    max
                                 
                              
                              =
                              p
                           
                        , where p is the maximum number of customers in the current routes. The tests compare the initial heuristic, the TS with a single neighborhood (setting 
                           
                              
                                 
                                    k
                                 
                                 
                                    max
                                 
                              
                           
                         to 1 in the VNS), the VNS alone, and TS+VNS. The results on a set of 33 randomly generated instances show that the TS+VNS finds the best results, followed by the VNS alone, and then the TS. Due to the non-linear costs, a customer can be served by a depot which is not the nearest one but whose total load is in the less increasing interval. The total cost is then lower even if the vehicle has to travel a longer distance to serve the customer.


                        Ahn, De Weck, and Hoffman (2008) study a very original problem raised by planetary surface exploration missions. The depots correspond to potential landing locations while customers become exploration sites with profit values. The aim is to maximize the sum of profits collected, subject to limited resources such as budget and fuel. This problem can be seen as a generalized location routing problem with profits (GLRPP) in which decisions encompass location of bases, technological options, routes, and excursion methods (walking, rover, autonomous vehicle). A mathematical formulation and a three-phase solution method (divide, conquer, and synthesize phase) are presented. The divide phase is a preprocessing step that divides the entire node set into clusters. For each cluster, potentially having several bases, all base×mission strategy combinations (called cluster strategies) are considered. In the conquer phase, a MDVRP with profits (MDVRPP) is solved for each cluster strategy. Finally, the synthesize phase collects the MDVRPP results for all cluster strategies and selects one cluster strategy for each cluster. A case study to optimize a global Mars surface exploration campaign is carried out and instances with 100 potential bases and 1000 potential exploration sites are solved with consideration of realistic future technologies and constraints.

The paper by Ahn et al. (2008), published in an aerospace journal, is mainly descriptive and gives no details about solution methods. In fact, these methods are described in a later paper (Ahn, De Weck, Geng, & Klabjan, 2012). The divide phase is solved by an algorithm that clusters the connected components of an auxiliary graph. To avoid enumerating all possible strategies for each cluster, a GRASP heuristic based on scores is used to select a limited subset of strategies. Each MDVRPP is solved via a heuristic branch-and-price algorithm. The final selection of cluster strategies is obtained by solving a set-partitioning problem.


                        Xu, Xu, and Zhu (2012) study a min–max LRP. Given p identical vehicles and a complete undirected graph with customers to visit and potential depots, the goal is to open some depots and build routes for them in order to visit all customers while minimizing the duration of the longest route. No demands are associated with customers, but a maximum number of routes is specified for each depot. The authors develop heuristics with constant performance ratios for several versions of this problem and prove that no algorithm with a performance ratio below 4/3 exists.

This section gathers various location-routing problems which do not particularly fit into previous sections. The proposed partition includes the following categories: (i) problems with additional attributes on nodes (depots or customers) and vehicles, (ii) multi-period planning horizons, (ii) problems with inventory management, and (iv) problems with uncertain data.


                        Lin and Kwok (2006) address a CLRP where identical vehicles with load and working time capacities may perform multiple trips or “multitrips”. Three objectives must be minimized: (i) the sum of opening costs and routing costs, (ii) the load imbalance of the multitrips (maximum load minus minimum load), and (iii) their working time imbalance (maximum duration minus minimum duration). The problem is solved using tabu search and simulated annealing, with two versions each, sequential and simultaneous. The sequential version solves a classical CLRP and then assigns the resulting trips to multitrips, using a fast bin-packing heuristic. The simultaneous version runs this packing algorithm to evaluate each move during the metaheuristics. The algorithms are executed with the same limited running time from different initial solutions and non-dominated solutions are recorded. The tests on real and simulated data reveal that the simultaneous versions have advantage over the sequential versions, but only in problems where routes are mainly capacity-constrained. Moreover, they generate more non-dominated solutions.


                        Berger, Coullard, and Daskin (2007) consider an uncapacitated LRP with route length (or duration) constraints. A set-partitioning formulation is presented with an alternate set of constraints that reduces the total number of constraints and improves the linear programming relaxation bound. A branch-and-price algorithm is developed to solve instances of the model and requires to deal with a set of elementary shortest path problems with a single resource constraint as pricing problem. A set of 8 instances with 100 customers and 10 candidate depot locations are derived from the Solomon VRP with time-windows instances and the algorithm provides optimal solutions in reasonable computation time.

A complex LRP combining route length constraints and customer deadlines is studied by Aksen and Altinkemer (2008). A retailer with classical “bricks-and-mortar” (BM) stores visited by walk-in customers wants to create “clicks-and-mortar” stores (CM) accepting both walk-in customers and on-line customers. It is assumed that a walk-in customer will go to the nearest store, within a maximum specified distance. If there is no store respecting this constraint (for instance when a BM is closed), this customer is lost. On-line customers must be assigned to a CM and served by routes performed by a homogeneous fleet of capacitated vehicles. As their priority is fast delivery, a time deadline is associated with each customer. Given a set of existing BMs, a set of potential CMs, a set of walk-in customers and a set of online customers, the retailer has to (i) determine which BMs are kept, closed or converted into CMs, (ii) which CMs are created, (iii) assign customers to the stores, and (iv) determine vehicle routes matching the deadlines for on-line customers. The objective function, to be minimized, includes classical costs (opening costs, route and vehicle costs), but also the closing/conversion costs of BMs and the cost of lost walk-in customers. A Lagrangian heuristic decomposing the problem into a facility location-allocation problem and a MDVRP with time deadlines is used to obtain lower and upper bounds. Computational experiments involve instances from 15 to 200 online customers: solutions gaps between 0% and 8% are reported, but the running time becomes prohibitive beyond 100 customers.

Special route structures are addressed by Ambrosino, Sciomachen, and Scutellà (2009). The customers (food market stores) are partitioned into regions and have two demands each: one for general food and one for local products, for instance fruits and vegetables. In each region, one regional depot must be located among a subset of stores having enough spare capacity, explaining the absence of capacity constraints on the depots. A heterogeneous fleet of capacitated vehicles is based at a main depot. Each vehicle used takes general food at the main depot and travels to the selected depot of one region. Regional food is also loaded at this depot, then the vehicle serves a sequence of customers in the region, and returns to the main depot. Several routes with this unusual structure can be designed for each region. The objective is to minimize only the total length of the routes. The authors elaborate a two-phase heuristic that builds an initial feasible solution before improving it through very large neighborhood search techniques. The proposed approach is compared with Cplex on small randomly generated instances, showing that the heuristic is able to compute high-quality solutions in a limited amount of time. A real case study is solved for an Italian company and brings a saving of 14%.

This survey has up to now covered location-routing problems in which a commodity must be either distributed or collected. Karaoglan et al. investigate the LRP with simultaneous pick-up and delivery (i.e., each customer has pickup and delivery demands). In a first paper (Karaoglan, Altiparmak, Kara, & Dengiz, 2011), they propose a branch-and-cut algorithm with several valid inequalities adapted from the CVRP and from facility location problems, separation algorithms for these inequalities, and a simulated annealing metaheuristic. Computational results on 148 new test instances derived from Prodhon and Barreto LRP sets are compared with Cplex and show that some instances with up to 88 customers and 8 potential depots can be solved in a reasonable calculation time.

In a second paper (Karaoglan, Altiparmak, Kara, & Dengiz, 2012), the authors develop two polynomial-size mixed integer formulations (a node-based one and a flow-based one) and a family of valid inequalities to strengthen them. Two heuristics generating initial solutions for a simulated annealing algorithm are also developed. Computational results show that the flow-based formulation performs better than the node-based formulation in terms of solution quality and running time, on small-size instances (10–30 customers), while the node-based formulation is better on medium-size instances (50–100 customers). The SA algorithm achieves an average gap of 1% to the best lower bound on medium-size instances, and a worst gap of 6%.

Another particular LRP is studied by Stenger, Schneider, Schwind, and Vigo (2012) and concerns small package shippers. In this case, a choice between self-operating and subcontracting a depot must be made. Subcontracted depots have smaller opening costs. It is not necessary to include a customer j in a route if it is assigned to a subcontracted depot i (these routes are under the subcontractor’s responsibility) but a fixed cost 
                           
                              
                                 
                                    p
                                 
                                 
                                    ij
                                 
                              
                           
                         is induced. The authors also consider the relocation costs incurred when established networks are restructured. To solve the problem, they present a hybrid heuristic solution method based on simulated annealing for the location phase and variable neighborhood search for the routing. Numerical studies first test the method on Barreto’s CLRP instances, which do not include subcontracting or relocation aspects, and show that quality solutions are obtained: the proposed algorithm takes place between LRGTS (Prins et al., 2007) and GRASP×ELS (Duhamel et al., 2010). The authors then adapt the same instances by adding subcontracting depots and present a practical case to study the influence of subcontracting decisions on the overall cost.

Research papers for location-routing problems over a planning horizon divided into elementary time slots (called “periods” or “days”) are all very recent. This is rather surprising, since the selection of customers to be supplied in each period brings a tactical dimension that was missing between the strategic decision level (facility location) and the operational decision level (route composition).

A multi-period LRP can be obtained by adding a multi-period horizon to an LRP, but also by adding location decisions to the periodic vehicle routing problem (PVRP), in which a set of possible combinations of delivery days (also called patterns) is associated with each customer. Different demands can be specified for the days of a pattern. A solution to the resulting periodic LRP (PLRP) consists in defining the subset of depots that will be open over the whole horizon and, for each period, the subset of visited customers (according to a permitted pattern for each customer), the assignment of customers to open depots, and the routes serving the customers assigned to each depot. It is assumed that a customer can be served by different depots over the horizon. The goal is to minimize a total cost comprising the opening costs, the fixed costs of vehicles, and the total cost of the routes over the horizon.


                        Prodhon and Prins (2008) develop for the PLRP a multi-start version of their MA∣PM algorithm for the CLRP (Prins et al., 2006b), presented in Section 2.8. Each run of MA∣PM works with a fixed day combination for each customer which defines the set of required nodes in each period. The chromosome encoding with two vectors DS and CS (see Section 2.8) can be reused, with one CS vector for each period. New solutions are generated by a crossover that may change the open depots and they undergo a local search restricted to the routes in each period. The run ends with a diversification phase to determine better patterns by removing a customer from all days of its current pattern and performing a cheapest insertion in the routes for each day of another pattern. MA∣PM is then restarted with a new population randomly generated with the new patterns. The method is tested on 30 PLRP instances derived from Prodhon’s CLRP instances and compared with an iterative metaheuristic IM. Each IM iteration solves a single-period CLRP via a greedy randomized heuristic to determine open depots, then selects a pattern for each customer, and finally solves a MDVRP for each period. The gap to the best solutions is reduced by 2% using MA∣PM.

The weak point of the previous algorithm is that patterns are not often changed. Prodhon (2011) proposes an evolutionary local search (ELS) searching the space of possible pattern-to-customer assignments (see Section 2.7 for the general principle of ELS). Each child-solution is obtained as follows: the incumbent assignment is randomly perturbed by changing the patterns of a given percentage of customers, the resulting assignment is decoded with a heuristic based on the Randomized Extended Clarke and Wright Algorithm (RECWA) (Prins et al., 2006a) to get a PLRP solution, and this solution is improved using a local search restricted to the routes. The numerical evaluations on the same PLRP instances as in Prodhon and Prins (2008) show an average gap reduction of 7.5% compared to MA∣PM. Moreover, the ELS is still efficient on CLRP and PVRP instances.

The PLRP is solved with the matheuristic described in Section 2.9 for the LRP (Pirkwieser & Raidl, 2010): a very large-scale neighborhood search procedure (VLNS) based on three large neighborhoods 
                           
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    V
                                 
                                 
                                    3
                                 
                              
                           
                         and integer linear formulations. On the 30 PLRP instances generated by Prodhon and Prins (2008), the best VLNS version incorporates 
                           
                              
                                 
                                    V
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    V
                                 
                                 
                                    2
                                 
                              
                           
                        . In fact, 
                           
                              
                                 
                                    V
                                 
                                 
                                    3
                                 
                              
                           
                         which was useful to optimize the routing part on CLRP instances does not bring much to the PLRP, due to a majority of small routes in the solutions. In a comparison involving 30 runs per instance for VLNS, 5 for ELS, and 1 for MA∣PM, the average gaps per run achieved by VLNS are in general the smallest ones. Moreover, 29 best known solutions are improved by considering the best solution of the different runs for each instance.


                        Albareda-Sambola, Fernández, and Nickel (2012) consider a very different problem, the multiperiod LRP with decoupled time scales (MLRPDS). Patterns are no longer used because each customer specifies now its days of delivery. Moreover, depots can be open or closed but only in a subset of time periods (including the first period). Hence, the tactical routing decisions and the strategic location decisions follow two different time scales. In each period, a fixed cost is paid for opening, closing or keeping a depot. Depots are uncapacitated but a given minimum number of depots must be operational in each period. Vehicles are also uncapacitated and the route costs are estimated by computing one forest per period, such that the root of any sub-tree is a depot and the total cost over the planning horizon is minimized. This problem, called multi-period rooted forest problem with decoupled time scales, is still NP-hard but it can be solved much faster than the original problem, using a cutting-plane algorithm. Two heuristics are applied to obtain routes from these forests. Experiments show that the average gap between the solutions of the heuristics and the optimal MLPRDS solution, computable via Cplex up to 40 customers, is only 0.4%.

Few papers address the issue of locating depots simultaneously with inventory and routing decisions. Such problems are called inventory location-routing problems (ILRP). Most research considers an economic order quantity (EOQ)-like formula assuming a regular demand (Wilson’s model). The first papers (Liu & Lee, 2003; Liu & Lin, 2005; Ma & Davidrajuh, 2005) decompose the problem into two independent subproblems, the solution of an inventory management problem fixing the quantities to deliver for a single-period LRP. However, this implies that all customers are visited with the same frequency.

In particular, Liu and Lee (2003) build a mathematical model for an ILRP with uncapacitated depots and customer inventories, given a common probability density function for customer demand during lead time. The aim is to minimize as usual the cost of selected depots and the cost of the routes, but also ordering, holding, and shortage costs for an order-up-to-level policy. A route-first locate-allocate-second heuristic is employed to compute an initial solution, followed by a local search whose moves consist in closing one depot or exchanging the status open/closed of two depots. The tests on 144 instances with 10 or 20 depots and 100, 150 or 200 customers show that the proposed heuristic produces better results than two LRP metaheuristics not taking inventory into consideration.


                        Liu and Lin (2005) decompose the same ILRP into a depot location-allocation problem and a routing and inventory problem. Each sub-problem is solved separately and alternatively by a hybrid heuristic combining tabu search with simulated annealing sharing the same tabu list. The proposed algorithm is tested and evaluated via simulation. On the instances designed by Liu and Lee (2003), it outperforms the previous heuristic.


                        Ma and Davidrajuh (2005) consider a central depot, potential wholesalers, and retailers with random demands. Inventories are managed in the two first layers. The total cost to be minimized includes the transportation costs, the opening and inventory holding costs of selected wholesalers, and the inventory holding costs for the depot. The authors propose an iterative algorithm alternating between a strategic and a tactical model. The strategic model is based on a mixed integer linear model and aims at selecting wholesalers, using average demands for retailers. In the tactical model, the demand of each retailer is determined using a 
                           
                              (
                              s
                              ,
                              Q
                              )
                           
                         policy and the routes are computed using a genetic algorithm. The paper is mainly methodological and includes no numerical experiments.

In contrast, attempts to optimize simultaneously the transportation costs, the opening costs, and the mathematical expectation of ordering and holding costs lead in general to hard non-linear programming models, like in Shen and Qi (2007), Ahmadi-Javid and Azad (2010), and Reza Sajjadi and Hossein Cheraghi (2011).

A single-period, three-layer supply chain with one supplier, a set of potential Distribution Centers (DC) and a set of customers is studied by Shen and Qi (2007). Each customer has uncertain demand that follows a normal distribution. Each open DC is served directly by the supplier and distributes products to customers using one capacitated vehicle. Each customer orders at the beginning of the period and each DC combines the orders of several customers to order from the supplier using a 
                           
                              (
                              r
                              ,
                              Q
                              )
                           
                         policy, i.e., a fixed quantity is ordered when the inventory levels falls below a reorder point. As the authors focus on the design phase, route costs are estimated using a continuous approximation model. The aim is to open a subset of DCs and to assign customers to them in order to minimize location costs, inventory costs at the DCs, and transportation costs. A safety stock is also determined at each DC to satisfy a given percentage of customer orders. The problem can be formulated as a non-linear integer program, that can be solved using Lagrangian relaxation embedded in branch-and-bound. The algorithm is tested on instances with 40–320 customers, the DCs being selected from the locations of customers.

This model is extended to select the capacity of each open depot in a list of discrete values and take routing decisions into account (Ahmadi-Javid & Azad, 2010). The problem can be modeled as a mixed integer convex program which can be solved by Lingo on small instances. A combined tabu search/simulated annealing is elaborated for larger instances with 40–400 customers and 50 DCs. Compared to Shen and Qi’s model, the expected saving varies between 16–28% for 40 customers and 10–18% for 400 customers.


                        Reza Sajjadi and Hossein Cheraghi (2011) handled a different extension involving several products and third-party logistics that offers excess space for selected warehouses if needed. Solutions are found by solving the inventory problem at the customer location first, and then the resulting LRP. A simulated annealing procedure is developed to solve randomly generated instances of up to 40 products, 350 clients, and one period.

A multi-period version of the ILRP has been recently studied by Guerrero, Prodhon, Velasco, and Amaya (2013). Three layers are considered (one factory, a set of potential depots, and a set of retailers) and the objective is to minimize simultaneously the depot opening costs, the delivery costs (based on dedicated routes from the factory to each open depot, and on LTL routes between open depots and retailers), and the inventory costs at both depots and retailers (with seasonal holding costs and obsolescence penalties). Each retailer has a non-constant deterministic demand and must be assigned to a single depot over the horizon. A mixed-integer linear programming model strengthened by two sets of valid inequalities is introduced to solve small instances and provide lower and upper bounds on larger problems. The authors propose also a matheuristic which aims at alternatively solving a supply chain design problem with estimated distribution costs, using exact methods, and determining the routing decisions, using heuristic procedures. On randomly generated ILRP instances, the matheuristic brings significant savings over a sequential approach and a commercial solver limited to 2.5hours of computing time. Moreover, the algorithm competes with state of the art metaheuristics on two particular cases: the CLRP and the Inventory Routing Problem (IRP).

In vehicle routing problems, customer demands, customer presence, and travel times may be affected by uncertainties which can be modeled as random variables, whose probability distribution are, for instance, estimated using historical data. Such situations can be handled using various techniques such as simulation, chance-constrained programming, and recourse methods. For example, under mild assumptions, it is often possible to minimize the mathematical expectation of the total length of the routes. In practice, it can be difficult to obtain the distribution of random variables and the use of fuzzy variables may be a good alternative.


                        Albareda-Sambola, Fernández, and Laporte (2007) address a stochastic version of the LRP with uncapacitated vehicles, in which the presence or absence of service request for each customer is not known a priori. Uncertainty is modeled by using a vector of Bernouilli random variables as the demand vector. A two-stage approach is proposed. The first stage determines the open depots and a priori routes before knowing the actual customers to visit. The second stage applies a recourse action to adapt the routes once the subset of customers to be served is given. The goal is to minimize the total cost, comprising the sum of the fixed costs for opening the depots and the expected cost of the recourse action. The authors propose a mathematical model, a lower bound and a heuristic. The lower bound is computed by separately bounding the costs associated with depots and the cost of the actual routes. The heuristic (i) determines a minimum subset of open depots by solving a knapsack problem, (ii) allocates the customers to these depots by solving a stochastic generalized assignment problem, and (iii) builds the routes considering a nearest insertion criterion. A local search procedure is finally applied to the resulting solution.


                        Ghaffari-Nasab, Jabalameli, Aryanezhad, and Makui (2012) address the bi-objective CLRP with probabilistic travel times. The objectives to be minimized are the total cost and the maximum delivery time to the customers. The authors present mathematical programming formulations to model the problem using two stochastic programming approaches (expected value model and chance-constrained programming). The deterministic equivalents of the two stochastic models are extracted and solved by a variable neighborhood descent. The computational study is performed on a single benchmark LRP instance from the literature.


                        Klibi, Lasalle, Martel, and Ichoua (2010) define what they call the stochastic multi-period location-transportation problem (SMLTP). A set of potential depots sell products to customers whose demand follows a compound stationary process with random inter-arrival times and random order sizes. Depending on the orders received, the depots (which do not own vehicles) must plan deliveries for the next day by choosing among full truckload routes (FTL), single-customer partial truckloads (STL), multidrop truckload routes (MTL) or less-than-truckload routes (LTL). The routes are performed by an external carrier who charges for each demand a cost which depends on the kind of route, its load and its length. Knowing the unit price of the goods sold, the goal is to select once for all the depots to be open and their customers, and to determine the routes for each day, in order to maximize the total profit. The SMLTP can be modeled as a stochastic program with recourse which can be solved for small instances using a sample average approximation (SAA) mixed-integer program based on a Monte-Carlo sampling scheme. Large instances can be tackled by a hierarchical heuristic approach involving a Monte Carlo scenario generation, a savings heuristic to build the routes for each day, and a tabu search.

A CLRP with fuzzy travel times and a time window for each customer is tackled by Zarandi, Hemmati, and Davari (2011). A fuzzy chance-constrained mathematical program with a credibility measure is used to model the problem and a hybrid algorithm combining simulated annealing and simulation is developed to solve it. Simulation is used to estimate the credibility of solutions. Computational experiments are conducted on one of the Prodhon’s CLRP instances, to which are added time windows and triangular fuzzy numbers for travel times.


                        Zarandi, Hemmati, Davari, and Turksen (2013) add to the same problem triangular fuzzy numbers for the demands of customers. In addition to a fuzzy chance-constrained programming model, the authors present a cluster-first route-second heuristic. The first phase determines a fuzzy c-means clustering with Mahalanobis distance while the second phase constructs a set of routes for each cluster, using a method quite similar to the sweep heuristic by Gillett and Miller (1974). It generates initial solutions which satisfy chance constraints for a simulation-embedded simulated annealing algorithm. The numerical experiments are performed on randomly generated instances with 100 customers and five depot locations.

Two other papers address fuzzy demands. Golozari, Jafari, and Amiri (2013) add a maximum traveling time constraint and apply the fuzzy ranking function method to derive a linear model, solved by Lingo for small instances. Larger instances are tackled by a simulated annealing algorithm with mutation operator. Two numerical examples are solved. Mehrjerdi and Nadizadeh (2013), like Zarandi et al. (2013), introduces a fuzzy chance-constrained mathematical model based upon the fuzzy credibility theory. The metaheuristic is also based on clustering techniques to provide initial solutions, but the improvement phase relies on an ant colony system.

@&#CONCLUSION@&#


                     Nagy and Salhi (2007) underline the advances accomplished in the last twenty years on location-routing problems and give nine suggestions for future research. We recall them below, with examples of works since 2007:
                        
                           1.
                           Use of route length formulas: Shen and Qi (2007) and Albareda-Sambola et al. (2012).

Multi-period problems with dynamic or stochastic aspects: Klibi et al. (2010) and Albareda-Sambola et al. (2012).

Planar location-routing: Carnes and Shmoys (2011) and Manzour-al-Ajdad et al. (2012).

Integrated methods in logistics, such as the ILRP: Ahmadi-Javid and Azad (2010) and Guerrero et al. (2013).

Multi-objective LRP: Caballero et al. (2007), Rath and Gutjahr (2011), and Hua-Li et al. (2012).

Competitive LRP: nothing.

Location-arc routing problems: Hashemi Doulabi and Seifi (2013).

Hybrid methodologies: Prins et al. (2007), Prodhon and Prins (2008), Duhamel et al. (2010), Pirkwieser and Raidl (2010), Contardo et al. (2013b), Villegas et al. (2011), Hemmelmayr et al. (2012), and Ting and Chen (2013).

Modeling complex situations: Aksen and Altinkemer (2008), Ambrosino et al. (2009), and Stenger et al. (2012).

This enumeration unveils the breakthrough of hybrid approaches, combining either two metaheuristics, such as GRASP and path relinking, or a metaheuristic and an exact method. Six other items received a significant attention, particularly multi-objective problems, but two are either hardly studied (location-arc routing problems) or not investigated at all (competitive LRP). We believe that more efforts should be focused on route length approximation formulas for multi-period problems, where metaheuristics waste too much time in optimizing vehicle routes which cannot be accurately planned on long horizons. In addition, more realistic versions of these problems should be considered, such as demand fluctuations or changes in the set of customers. As a stochastic treatment may be too complex, robust optimization approaches could be used to appraise the resistance of solutions to perturbations.

Other positive and negative aspects can be detected by reviewing at our survey. The growing stream of research on multi-echelon problems, including truck and trailer routing problems, is quite apparent. In contrast, too few exact methods have been developed. More generally, we can observe a dramatic increase of the number of LRP variants. The risk is to observe more and more problems adding just one attribute to an existing version. This situation is well known in vehicle routing, where it is being solved, at least partially, by the study of “rich” problems (i.e., including many attributes) and the design of unified metaheuristic frameworks, see for instance Vidal, Crainic, Gendreau, and Prins (2014). Another comparison with vehicle routing shows the absence of cooperative metaheuristics taking advantage of modern computer architectures, such as grids or multicore PCs.

Finally, the increasing activity on problems with profits which can be observed in vehicle routing is still minor in location-routing (Ahn et al., 2012). These problems in which it is impossible to serve all customers are common in the service industry, for instance in maintenance and repair activities, and in disaster logistics. In vehicle routing, problems such as the team orienteering problem raise interesting questions: for example, the dosage between the moves able to change the subset of visited customers and the ones that improve the routes for a given subset is not obvious. Even more complicated problems could be obtained by adding location decisions.

To summarize and conclude, the following research directions for location-routing problems can be deduced from our analysis:
                        
                           1.
                           Items already mentioned by Nagy and Salhi: competitive LRP, route length formulas, location-arc routing, more realistic multi-period problems (e.g., fluctuating demands or customer set) and robust optimization.

Design of exact methods exploiting more the problem structure.

Development of unified metaheuristics to avoid the proliferation of very similar variants.

More evolved cooperation mechanisms and use of modern computer architectures (grids and multicores).

Problems where not all customers can be served.

@&#ACKNOWLEDGEMENTS@&#

The authors wish to thank the reviewers and Gregory Breeden for their valuable comments who helped us to improve this survey.

@&#REFERENCES@&#

