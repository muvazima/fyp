@&#MAIN-TITLE@&#Iterative Grassmannian optimization for robust image alignment

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Propose an online algorithm t-GRASTA for the transformed robust PCA problem.


                        
                        
                           
                           Use a union of subspaces to approximate the nonlinear subspace learning process.


                        
                        
                           
                           Demonstrate the fully online mode of t-GRASTA with videos with camera jitter.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Robust subspace learning

Grassmannian optimization

Image alignment

ADMM (alternating direction method of multipliers)

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

With the explosion of image and video capture, both for surveillance and personal enjoyment, and the ease of putting these data online, we are seeing photo databases grow at unprecedented rates. On record we know that in July 2010, Facebook had 100million photo uploads per day [1] and Instagram had a database of 400million photos as of the end of 2011, with 60 uploads per second [2]; since then both of these databases have certainly grown immensely. In 2010, there were an estimated minimum 10,000 surveillance cameras in the city of Chicago and in 2002 an estimated 500,000 in London [3,4].

These enormous collections pose both an opportunity and a challenge for image processing and face recognition: The opportunity is that with so much data, it should be possible to assist users in tagging photos, searching the image database, and detecting unusual activity or anomalies. The challenge is that the data are not controlled in any way so as to ensure data quality and consistency across photos, and the massiveness of the data poses a serious computational challenge.

In video surveillance, many recently proposed algorithms model the foreground and background separation problem as one of “robust PCA” — decomposing the scene as the sum of a low-rank matrix of background, which represents the global appearance and illumination of the scene, and a sparse matrix of moving foreground objects [5–9]. These popular algorithms and models work very well for a stationary camera. However, in the case of camera jitter, the background is no longer low-rank, and this is problematic for robust PCA methods [10–12]. Robustly and efficiently detecting moving objects from an unstable camera is a challenging problem, since we need to accurately estimate both the background and the transformation of each frame. Fig. 1
                      shows that for a video sequence generated by a simulated unstable camera, GRASTA [13,6] (Grassmannian robust adaptive subspace tracking algorithm) fails to do the separation, but the approach we propose here, t-GRASTA, can successfully separate the background and moving objects despite camera jitter.

Further recent work has extended the robust PCA model to that of the “transformed low-rank+sparse” model for face images with occlusions that have come under transformations such as translations and rotations [14–17]. Without the transformations, this can be posed as a convex optimization problem and therefore convex programming methods can be used to tackle such a problem. In RASL [15] (robust alignment by sparse and low-rank decomposition), the authors posed the problem with transformations as well, and though it is no longer convex it can be linearized in each iteration and proven to reach a local minimum.

Though the convex programming methods used in [15] are polynomial in the size of the problem, that complexity can still be too demanding for very large databases of images. We propose transformed GRASTA, or t-GRASTA for short, to tackle this optimization with an incremental or online optimization technique. The benefit of this approach is three-fold: First, it will improve speeds of image alignment both in batch mode or in online mode, as we show in Section 3. Second, the memory requirement is small, which makes alignment for very large databases realistic, since t-GRASTA only needs to maintain low-rank subspaces throughout the alignment process. Finally, the proposed online version of t-GRASTA allows for alignment and occlusion removal on images as they are uploaded to the database, which is especially useful in video processing scenarios.

The problem of robust image alignment arises regularly in real data, as large illumination variations and gross pixel corruptions or partial occlusions often occur, such as sunglasses or a scarf for a human subject. The classic batch image alignment approaches, such as congealing [18,19] or least squares congealing algorithms [20,21] cannot simultaneously handle such severe conditions, causing the alignment task to fail.

With the breakthrough of convex relaxation theory applied to decomposing matrices into a sum of low-rank and sparse matrices [22,5], the recently proposed algorithm “robust alignment by sparse and low-rank decomposition,” or RASL [15], poses the robust image alignment problem as a transformed version of robust PCA. The transformed batch of images can be decomposed as the sum of a low-rank matrix of recovered aligned images and a sparse matrix of errors. RASL seeks the optimal domain transformations while trying to minimize the rank of the matrix of the vectorized and stacked aligned images and while keeping the gross errors sparse. While the rank minimization and ℓ
                        0 minimization can be relaxed to their convex surrogates – minimize the corresponding nuclear norm ∥∥
                        ∗ and ℓ
                        1 norm ∥∥
                        1 – the relaxed problem (1) is still highly non-linear due to the complicated domain transformation.
                           
                              (1)
                              
                                 
                                    
                                       min
                                       
                                          A
                                          ,
                                          E
                                          ,
                                          τ
                                       
                                    
                                    
                                       
                                          A
                                          
                                             
                                                
                                                   
                                                   *
                                                
                                                +
                                                λ
                                                
                                                   
                                                      E
                                                      
                                                         
                                                            
                                                               
                                                               1
                                                            
                                                            
                                                            s
                                                            .
                                                            t
                                                            .
                                                            D
                                                            ∘
                                                            τ
                                                            =
                                                            A
                                                            +
                                                            E
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Here, D
                        ∈ℝ
                           n
                           ×
                           N
                         represents the data (n pixels per each of N images), A
                        ∈ℝ
                           n
                           ×
                           N
                         is the low-rank component, E
                        ∈ℝ
                           n
                           ×
                           N
                         is the sparse additive component, and τ are the transformations. RASL proposes to tackle this difficult optimization problem by iteratively locally linearizing the non-linear image transformation D
                        ∘(τ
                        +Δτ)≈
                        D
                        ∘
                        τ
                        +∑
                        
                           i
                           =1
                        
                           n
                        
                        J
                        
                           i
                        Δτ
                        
                           i
                        ϵ
                           i
                        
                        
                           T
                        , where Ji
                         is the Jacobian of image i with respect to transformation i; then in each iteration the linearized problem is convex. The authors have shown that RASL works perfectly well for batch aligning the linearly correlated images despite large illumination variations and occlusions.

In order to improve the scalability of robust image alignment for massive image datasets, [23] proposes an efficient ALM-based (augmented Lagrange multiplier-based) iterative convex optimization algorithm ORIA (online robust image alignment) for online alignment of the input images. Though the proposed approach can scale to large image datasets, it requires the subspace of the aligned images as a prior, and for this it uses RASL to train the initial aligned subspace. Once the input images cannot be well aligned by the current subspace, the authors use a heuristic method to update the basis. In contrast, with t-GRASTA we include the subspace in the cost function, and update the subspace using a gradient geodesic step on the Grassmannian, as in [6,24]. We discuss this in more detail in the next Section.

Subspace learning has been an area important to signal processing for a few decades. There are many applications in which one must track signal and noise subspaces, from computer vision to communications and radar, and a survey of the related work can be found in [25,26].

The GROUSE algorithm, or “Grassmannian rank-one update subspace estimation,” is an online subspace estimation algorithm that can track changing subspaces in the presence of Gaussian noise and missing entries [24]. GROUSE was developed as an online variant of low-rank matrix completion algorithms. It uses incremental gradient methods that have been receiving extensive attention in the optimization community [27]. However, GROUSE is not robust to gross outliers, and the follow-up algorithm GRASTA [13,6], can estimate a changing low-rank subspace as well as identify and subtract outliers. Still problematic is that, as we showed in Fig. 1, even GRASTA cannot handle camera jitter. Our algorithm includes the estimation of transformations in order to align frames first before separating foreground and background.

In order to robustly align the set of linearly correlated images despite sparse outliers, we consider the following matrix factorization model (2) where the low-rank matrix U has orthonormal columns that span the low-dimensional subspace of the well-aligned images.
                              
                                 (2)
                                 
                                    
                                       
                                          
                                             
                                                min
                                                
                                                   U
                                                   ,
                                                   W
                                                   ,
                                                   E
                                                   ,
                                                   τ
                                                
                                             
                                             
                                             ∥
                                             E
                                             
                                                ∥
                                                1
                                             
                                          
                                       
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                             D
                                             ∘
                                             τ
                                             =
                                             UW
                                             +
                                             E
                                          
                                       
                                       
                                          
                                             
                                             U
                                             ∈
                                             G
                                             
                                                d
                                                n
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

We have replaced the variable A with the product of two smaller matrices UW, and the orthonormal columns of U
                           ∈ℝ
                              n
                              ×
                              d
                            span the low-rank subspace of the images. The set of all subspaces of ℝ
                              n
                            of fixed dimension d is called the Grassmannian, which is a compact Riemannian manifold and is denoted by 
                              
                                 G
                                 
                                    d
                                    n
                                 
                              
                           . In this optimization model, U is constrained to the Grassmannian 
                              
                                 G
                                 
                                    d
                                    n
                                 
                              
                           . Though problem (2) cannot be directly solved [15] due to the nonlinearity of image transformation, if the misalignments are not too large, by locally linearly approximating the image transformation D
                           ∘(τ
                           +△
                           τ)≈
                           D
                           ∘
                           τ
                           +∑
                           
                              i
                              =1
                           
                              N
                           
                           
                           J
                           
                              i
                           
                           △
                           τ
                           
                              i
                           ϵ
                              i
                           
                           
                              T
                           , the iterative model (3) can work well as a practical approach.
                              
                                 (3)
                                 
                                    
                                       
                                          
                                             
                                                min
                                                
                                                   
                                                      U
                                                      k
                                                   
                                                   ,
                                                   W
                                                   ,
                                                   E
                                                   ,
                                                   △
                                                   τ
                                                
                                             
                                             ∥
                                             E
                                             
                                                ∥
                                                1
                                             
                                          
                                       
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                             D
                                             ∘
                                             
                                                τ
                                                k
                                             
                                             +
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                
                                             
                                             
                                                J
                                                i
                                                k
                                             
                                             △
                                             
                                                τ
                                                i
                                             
                                             
                                                ϵ
                                                i
                                                T
                                             
                                             =
                                             
                                                U
                                                k
                                             
                                             W
                                             +
                                             E
                                          
                                       
                                       
                                          
                                             
                                             
                                                U
                                                k
                                             
                                             ∈
                                             G
                                             
                                                
                                                   d
                                                   k
                                                
                                                n
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

At algorithm iteration k, τ
                           
                              k
                           
                           ≐[τ
                           1
                           
                              k
                           |,…,|τ
                           
                              N
                           
                           
                              k
                           ] are the current estimated transformations at iteration k, J
                           
                              i
                           
                           
                              k
                            is the Jacobian of the i-th image with respect to the transformation τ
                           
                              i
                           
                           
                              k
                           , and {ϵ
                              i
                           } denotes the standard basis for ℝ
                              n
                           . Note, at different iterations the subspace may have different dimensions, i.e. Uk
                            is constrained on different Grassmannian 
                              
                                 G
                                 
                                    
                                       d
                                       k
                                    
                                    n
                                 
                              
                           .

At each iteration of the iterative model (3), we consider this optimization problem as the subspace learning problem. That is, our goal is to robustly estimate the low-dimensional subspace Uk
                            which best represents the locally transformed images D
                           ∘
                           τ
                           
                              k
                           
                           +∑
                           
                              i
                              =1
                           
                              N
                           
                           J
                           
                              i
                           
                           
                              k
                           Δτ
                           
                              i
                            despite sparse outliers E. In order to solve this subspace learning problem both efficiently with regards to both computation and memory, we propose to learn Uk
                            at each iteration k in model (3) via the online robust subspace learning approach [6].

In order to perform online video processing tasks, for example video stabilization, it is desirable to design an efficient approach that can handle image misalignment frame by frame. As in the previous discussion regarding batch mode processing, for each video frame I, we may model the ℓ
                           1 minimization problem as follows:
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             
                                                min
                                                
                                                   U
                                                   ,
                                                   w
                                                   ,
                                                   e
                                                   ,
                                                   τ
                                                
                                             
                                             ∥
                                             e
                                             
                                                ∥
                                                1
                                             
                                          
                                       
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                             I
                                             ∘
                                             τ
                                             =
                                             Uw
                                             +
                                             e
                                          
                                       
                                       
                                          
                                             
                                             U
                                             ∈
                                             G
                                             
                                                d
                                                n
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        

Note that with the constraint I
                           ∘
                           τ
                           =
                           Uw
                           +
                           e in the above minimization problem, we suppose for each frame the transformed image is well aligned to the low-rank subspace U. However, due to the nonlinear geometric transform I
                           ∘
                           τ, directly exploiting online subspace learning techniques [24,6] is not possible.

Here we approach this as a manifold learning problem, supposing that the low-dimensional image subspace under nonlinear transformations forms a nonlinear manifold. We propose to learn the manifold approximately using a union of subspaces model U
                           
                              ℓ
                           , ℓ
                           =1,…,L. The basic idea is illustrated in Fig. 2
                           , and the locally linearized model for the nonlinear problem (4) is as follows:
                              
                                 (5)
                                 
                                    
                                       
                                          
                                             
                                                min
                                                
                                                   w
                                                   ,
                                                   e
                                                   ,
                                                   △
                                                   τ
                                                
                                             
                                             ∥
                                             e
                                             
                                                ∥
                                                1
                                             
                                          
                                       
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                             I
                                             ∘
                                             
                                                τ
                                                ℓ
                                             
                                             +
                                             
                                                J
                                                ℓ
                                             
                                             △
                                             τ
                                             =
                                             
                                                U
                                                ℓ
                                             
                                             w
                                             +
                                             e
                                             .
                                          
                                       
                                       
                                          
                                             
                                             
                                                U
                                                ℓ
                                             
                                             ∈
                                             G
                                             
                                                
                                                   d
                                                   ℓ
                                                
                                                n
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        

Intuitively, from Fig. 2, it is reasonable to think that the initial misaligned image sequence should be high rank; then after iteratively approximating the nonlinear transform with a locally linear approximation, the rank of the new subspaces U
                           
                              ℓ
                           , ℓ
                           =1,…,L, should be decreasing as the images become more and more aligned. Then for each misaligned image I and the unknown transformation τ, we iteratively update the union of subspaces U
                           
                              ℓ
                           , ℓ
                           =1,…,L, and estimate the transformation τ. Details of the online mode of t-GRASTA will be discussed in Section 2.4.2.

The use of a union of subspaces U
                           
                              ℓ
                           , ℓ
                           =1,…,L, to approximate the nonlinear manifold is a crucial innovation for this fully online mode. Though we use the symbols Uk
                            and U
                           
                              ℓ
                            in both the batch mode and the online mode, they have two different interpretations. For batch mode, Uk
                            is the iteratively learned aligned subspace in each iteration; while for online mode, U
                           
                              ℓ
                           , ℓ
                           =1,…,L, is a collection of subspaces which are used for approximating the nonlinear transform, and they are updated iteratively for each video frame.

Whether operating in batch mode or online mode, the key problem is how to quantify the subspace error robustly for the locally linearized problem. Considering batch mode, at iteration k, given the i-th image Ii
                        , its estimate of transformation τ
                        
                           i
                        
                        
                           k
                        , the Jacobian J
                        
                           i
                        
                        
                           k
                        , and the current estimate of U
                        
                           t
                        
                        
                           k
                        , we use the ℓ
                        1 norm as follows:
                           
                              (6)
                              
                                 
                                    F
                                    
                                       S
                                       t
                                       k
                                    
                                    =
                                    
                                       min
                                       
                                          w
                                          ,
                                          △
                                          τ
                                       
                                    
                                    ∥
                                    
                                       U
                                       t
                                       k
                                    
                                    w
                                    −
                                    
                                       
                                          
                                             I
                                             i
                                          
                                          ∘
                                          
                                             τ
                                             i
                                             k
                                          
                                          +
                                          
                                             J
                                             i
                                             k
                                          
                                          △
                                          τ
                                       
                                    
                                    
                                       ∥
                                       1
                                    
                                    .
                                 
                              
                           
                        
                     

With U
                        
                           t
                        
                        
                           k
                         known (or estimated, but fixed), this ℓ
                        1 minimization problem is a variation of the least absolute deviations problem, which can be solved efficiently by ADMM (alternating direction method of multipliers) [28]. We rewrite the right hand of Eq. (6) as the equivalent constrained problem by introducing a sparse outlier vector e:
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             min
                                             
                                                w
                                                ,
                                                e
                                                ,
                                                △
                                                τ
                                             
                                          
                                          ∥
                                          e
                                          
                                             ∥
                                             1
                                          
                                       
                                    
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                          
                                             I
                                             i
                                          
                                          ∘
                                          
                                             τ
                                             i
                                             k
                                          
                                          +
                                          
                                             J
                                             i
                                             k
                                          
                                          △
                                          τ
                                          =
                                          
                                             U
                                             t
                                             k
                                          
                                          w
                                          +
                                          e
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

The augmented Lagrangian of problem (7) is
                           
                              (8)
                              
                                 
                                    
                                       
                                          L
                                          
                                             
                                                
                                                   U
                                                   t
                                                   k
                                                
                                                ,
                                                w
                                                ,
                                                e
                                                ,
                                                △
                                                τ
                                                ,
                                                λ
                                             
                                          
                                          =
                                          ∥
                                          e
                                          
                                             ∥
                                             1
                                          
                                          +
                                          
                                             λ
                                             T
                                          
                                          h
                                          
                                             
                                                w
                                                ,
                                                e
                                                ,
                                                △
                                                τ
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          +
                                          
                                             μ
                                             2
                                          
                                          ∥
                                          h
                                          
                                             
                                                w
                                                ,
                                                e
                                                ,
                                                △
                                                τ
                                             
                                          
                                          
                                             ∥
                                             2
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        where h(w, e, △
                        τ)=
                        U
                        
                           t
                        
                        
                           k
                        
                        w
                        +
                        e
                        −
                        I
                        
                           i
                        
                        ∘
                        τ
                        
                           i
                        
                        
                           k
                        
                        −
                        J
                        
                           i
                        
                        
                           k
                        
                        △
                        τ, and λ∈ℝ
                           n
                         is the Lagrange multiplier or dual vector.

Given the current estimated subspace U
                        
                           t
                        
                        
                           k
                        , transformation parameter τ
                        
                           i
                        
                        
                           k
                        , and the Jacobian matrix J
                        
                           i
                        
                        
                           k
                         with respect to the i-th image Ii
                        , the optimal (w
                        ∗, e
                        ∗, △
                        τ
                        ∗, λ
                        ∗) can be computed by the ADMM approach as follows:
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             △
                                             
                                                τ
                                                
                                                   p
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         J
                                                         i
                                                         k
                                                      
                                                      
                                                         
                                                            
                                                               J
                                                               i
                                                               k
                                                            
                                                            T
                                                         
                                                      
                                                   
                                                
                                                
                                                   −
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      J
                                                      i
                                                      k
                                                   
                                                   T
                                                
                                             
                                             
                                                
                                                   
                                                      U
                                                      t
                                                      k
                                                   
                                                   
                                                      w
                                                      p
                                                   
                                                   +
                                                   
                                                      e
                                                      p
                                                   
                                                   −
                                                   
                                                      I
                                                      i
                                                   
                                                   ∘
                                                   
                                                      τ
                                                      i
                                                      k
                                                   
                                                   +
                                                   
                                                      1
                                                      μ
                                                   
                                                   
                                                      λ
                                                      p
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                w
                                                
                                                   p
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         U
                                                         t
                                                         k
                                                      
                                                      
                                                         
                                                            
                                                               U
                                                               t
                                                               k
                                                            
                                                            T
                                                         
                                                      
                                                   
                                                
                                                
                                                   −
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      U
                                                      t
                                                      k
                                                   
                                                   T
                                                
                                             
                                             
                                                
                                                   
                                                      I
                                                      i
                                                   
                                                   ∘
                                                   
                                                      τ
                                                      i
                                                      k
                                                   
                                                   +
                                                   
                                                      J
                                                      i
                                                      k
                                                   
                                                   △
                                                   
                                                      τ
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      e
                                                      p
                                                   
                                                   −
                                                   
                                                      1
                                                      
                                                         μ
                                                         p
                                                      
                                                   
                                                   
                                                      λ
                                                      p
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                e
                                                
                                                   p
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                S
                                                
                                                   
                                                      1
                                                      μ
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      I
                                                      i
                                                   
                                                   ∘
                                                   
                                                      τ
                                                      i
                                                      k
                                                   
                                                   +
                                                   
                                                      J
                                                      i
                                                      k
                                                   
                                                   △
                                                   
                                                      τ
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      U
                                                      t
                                                      k
                                                   
                                                   
                                                      w
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      1
                                                      
                                                         μ
                                                         p
                                                      
                                                   
                                                   
                                                      λ
                                                      p
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                λ
                                                
                                                   p
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                λ
                                                p
                                             
                                             +
                                             
                                                μ
                                                p
                                             
                                             h
                                             
                                                
                                                   
                                                      w
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      e
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   △
                                                   
                                                      τ
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                μ
                                                
                                                   p
                                                   +
                                                   1
                                                
                                             
                                             =
                                             ρ
                                             
                                                μ
                                                p
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              S
                              
                                 
                                    1
                                    μ
                                 
                              
                           
                         is the elementwise soft thresholding operator [29], and ρ
                        >1 is the ADMM penalty constant enforcing {μ
                        
                           p
                        } to be a monotonically increasing positive sequence. The iteration (9) indeed converges to the optimal solution of the problem (7) 
                        [30]. We summarize this ADMM solver as Algorithm 2 in Section 2.4.

Whether identifying the best U
                        
                           k∗ in the batch mode (3) or estimating the union of subspaces U
                        
                           ℓ
                        , ℓ
                        =1,…,L, in the online mode (5), optimizing the orthonormal matrix U along the geodesic of the Grassmannian is our key technique. For clarity of exposition in this Section, we remove the superscript k or ℓ from U, as the core gradient step along the geodesic of the Grassmannian for both batch mode and online mode is the same. We seek a sequence 
                           
                              
                                 
                                    U
                                    t
                                 
                              
                              ∈
                              G
                              
                                 d
                                 n
                              
                           
                         such that U
                        
                           t
                        
                        →
                        U
                        ∗ (as t
                        →
                        ∞). We now face the choice of an effective subspace loss function. Regarding U as the variable, the loss function (6) is not differentiable everywhere. Therefore, we choose to instead use the augmented Lagrangian (8) as the subspace loss function once we have estimated (w
                        ∗, e
                        ∗, △
                        τ
                        ∗, λ
                        ∗) by ADMM (9) from the previous Ut
                         
                        [13,6].

In order to take a gradient step along the geodesic of the Grassmannian, according to [26], we first need to derive the gradient formula of the real-valued loss function (8) 
                        
                           
                              L
                              :
                              G
                              
                                 d
                                 n
                              
                              →
                              ℝ
                           
                        . The gradient ▽
                        
                           L
                         can be determined from the derivative of 
                           L
                         with respect to the components of U:
                           
                              (10)
                              
                                 
                                    
                                       
                                          d
                                          L
                                       
                                       dU
                                    
                                    =
                                    
                                       
                                          
                                             λ
                                             ∗
                                          
                                          +
                                          μh
                                          
                                             
                                                
                                                   w
                                                   ∗
                                                
                                                ,
                                                
                                                   e
                                                   ∗
                                                
                                                ,
                                                △
                                                
                                                   τ
                                                   ∗
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             w
                                             ∗
                                          
                                          T
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Then the gradient is 
                           
                              ▽
                              L
                              =
                              
                                 
                                    I
                                    −
                                    U
                                    
                                       U
                                       T
                                    
                                 
                              
                              
                                 
                                    
                                       d
                                       L
                                    
                                    dU
                                 
                              
                           
                         
                        [26]. From Step 6 of Algorithm 1, we have ▽
                        
                           L
                        
                        =
                        maw
                        ∗
                           T
                         (see the definition of Γ in Alg. 1). It is easy to verify that ▽
                        
                           L
                         is rank one since Γ is an n
                        ×1 vector and w
                        ∗ is a d
                        ×1 weight vector. The following derivation of the geodesic gradient step is similar to GROUSE [24] and GRASTA [13,6]. We rewrite the important steps of the derivation here for completeness.

The sole non-zero singular value is σ
                        =∥
                        Γ
                        ∥∥
                        w
                        ∗
                        ∥, and the corresponding left and right singular vectors are 
                           
                              
                                 Γ
                                 
                                    ∥
                                    Γ
                                    ∥
                                 
                              
                           
                         and 
                           
                              
                                 
                                    w
                                    ∗
                                 
                                 
                                    ∥
                                    
                                       w
                                       ∗
                                    
                                    ∥
                                 
                              
                           
                         respectively. Then we can write the SVD of the gradient explicitly by adding the orthonormal set x
                        2,…,x
                        
                           d
                         orthogonal to Γ as left singular vectors and the orthonormal set y
                        2,…,y
                        
                           d
                         orthogonal to w
                        ∗ as right singular vectors as follows:
                           
                              
                                 
                                    
                                       
                                          ∇
                                          L
                                          =
                                          
                                             
                                                
                                                   Γ
                                                   
                                                      Γ
                                                   
                                                
                                                
                                                   x
                                                   2
                                                
                                                …
                                                
                                                   x
                                                   d
                                                
                                             
                                          
                                          ×
                                          diag
                                          
                                             σ
                                             0
                                             …
                                             0
                                          
                                       
                                    
                                    
                                       
                                          ×
                                          
                                             
                                                
                                                   
                                                      
                                                         w
                                                         *
                                                      
                                                      
                                                         
                                                            w
                                                            *
                                                         
                                                      
                                                   
                                                   
                                                      y
                                                      2
                                                   
                                                   …
                                                   
                                                      y
                                                      d
                                                   
                                                
                                             
                                             T
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

Finally, following Equation (2.65) in [26], a geodesic gradient step of length η in the direction −▽
                        
                           L
                         is given by
                           
                              (11)
                              
                                 
                                    
                                       
                                          U
                                          
                                             η
                                          
                                          =
                                          U
                                          +
                                          
                                             
                                                cos
                                                
                                                   ησ
                                                
                                                −
                                                1
                                             
                                          
                                          
                                             
                                                U
                                                
                                                   w
                                                   t
                                                   ∗
                                                
                                             
                                             
                                                ∥
                                                
                                                   w
                                                   t
                                                   ∗
                                                
                                                ∥
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      w
                                                      t
                                                      ∗
                                                   
                                                   T
                                                
                                             
                                             
                                                ∥
                                                
                                                   w
                                                   t
                                                   ∗
                                                
                                                ∥
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          −
                                          sin
                                          
                                             ησ
                                          
                                          
                                             Γ
                                             
                                                ∥
                                                Γ
                                                ∥
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      w
                                                      t
                                                      ∗
                                                   
                                                   T
                                                
                                             
                                             
                                                ∥
                                                
                                                   w
                                                   t
                                                   ∗
                                                
                                                ∥
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

From the discussion of Sections 2.2 and 2.3, given the batch of unaligned images D, their estimate of transformation τk
                            and their Jacobian Jk
                            at iteration k, we can robustly identify the subspace U
                           
                              k∗ by incrementally updating U
                           
                              t
                           
                           
                              k
                            along the geodesic of Grassmannian 
                              
                                 G
                                 
                                    
                                       d
                                       k
                                    
                                    n
                                 
                              
                            
                           (11). When U
                           
                              t
                           
                           
                              k
                           
                           →
                           U
                           
                              k∗ (as t
                           →
                           ∞), the estimate of △
                           tau
                           
                              i
                            for each initially aligned image I
                           
                              i
                           
                           ∘
                           τ
                           
                              i
                           
                           
                              k
                            also approaches its optimal value △
                           τ
                           
                              i
                           
                           ∗. Once the subspace Uk
                            is accurately learned, we will update the estimate of the transformation for each image using τ
                           
                              i
                           
                           
                              k
                              +1
                           =
                           τ
                           
                              i
                           
                           
                              k
                           
                           +△
                           τ
                           
                              i
                           
                           ∗. Then in the next iteration, the new subspace U
                           
                              k
                              +1 can also be learned from D
                           ∘
                           τ
                           
                              k
                              +1, and the algorithm iterates until we reach the stopping criterion, e.g. if 
                              
                                 
                                    
                                       
                                          ∥
                                          △
                                          τ
                                          
                                             ∥
                                             2
                                          
                                       
                                       
                                          ∥
                                          
                                             τ
                                             k
                                          
                                          
                                             ∥
                                             2
                                          
                                       
                                    
                                 
                                 <
                                 ϵ
                              
                            or we reach the maximum iteration K.

We summarize our algorithms as follows. Algorithm 1 is the batch image alignment approach via iterative online robust subspace learning. For Step 7, there are many ways to pick the step-size. For some examples, you may consider the diminishing and constant step-sizes adopted in GROUSE [24], or the multi-level adaptive step-size used for fast convergence in GRASTA [13].


                           Algorithm 2 is the ADMM solver for the locally linearized problem (7). From our extensive experiments, if we set the ADMM penalty parameter ρ
                           =2 and the tolerance ϵ
                              tol
                           
                           =10−7, Algorithm 2 has always converged in fewer than 20 iterations.

In Section 2.1.2, we propose to tackle the difficult nonlinear online subspace learning problem by iteratively learning online a union of subspaces U
                           
                              ℓ
                           , ℓ
                           =1,…,L. For a sequence of video frames I
                           
                              i
                           , i
                           =1,…,N, the union of subspaces U
                           
                              ℓ
                            are updated iteratively as illustrated in Fig. 3
                           .

Specifically, at i-th frame Ii
                           , for the locally approximated subspace U
                           
                              i
                           
                           1 at the first iteration, given the initial roughly estimated transformation τ
                           
                              i
                           
                           0, the ADMM solver Algorithm 2 gives us the locally estimated △
                           τ
                           
                              i
                           
                           1, and the updated subspace U
                           
                              i
                              +1
                           1 is obtained by taking a gradient step along the geodesic of the Grassmannian 
                              
                                 G
                                 
                                    
                                       d
                                       1
                                    
                                    n
                                 
                              
                            as discussed in Section 2.3. The transformation u
                           
                              i
                           
                           1 of the next iteration is updated by τ
                           
                              i
                           
                           1
                           =
                           τ
                           
                              i
                           
                           0
                           +△
                           τ
                           
                              i
                           
                           1. Then for the next locally approximated subspace U
                           
                              i
                           
                           2, we also estimate △
                           τ
                           
                              i
                           
                           2 and update the subspace along the geodesic of the Grassmannian 
                              
                                 G
                                 
                                    
                                       d
                                       2
                                    
                                    n
                                 
                              
                            to U
                           
                              i
                              +1
                           2. Repeatedly, we will update U
                           
                              i
                           
                           
                              ℓ
                            in the same way to get U
                           
                              i
                              +1
                           
                              ℓ
                            and the new transformation τ
                           
                              i
                           
                           
                              ℓ
                           
                           =
                           τ
                           
                              i
                           
                           
                              ℓ
                              −1
                           +△
                           τ
                           
                              i
                           
                           
                              ℓ
                           . After completing the update for all L subspaces, the union of subspaces U
                           
                              i
                              +1
                           
                              ℓ
                           (ℓ
                           =1,…,L) will be used for approximating the nonlinear transform of the next video frame I
                           
                              i
                              +1.

We summarize the above statements as Algorithm 3, and we call this approach the fully online mode of t-GRASTA.
                              Algorithm 1
                              Transformed GRASTA — batch mode

Require: An initial n
                                 ×
                                 d
                                 0 orthogonal matrices U
                                 0. A sequence of unaligned images Ii
                                  and the corresponding initial transformation parameters τ
                                 
                                    i
                                 
                                 0, i
                                 =1,…,N. The maximum iteration K.


                                 Return: The estimated well-aligned subspace U
                                 
                                    k∗ for the well-aligned images. The transformation parameters τ
                                 
                                    i
                                 
                                 
                                    k
                                  for each well-aligned image.
                                    
                                       1:
                                       
                                          while not converged and 
                                          k
                                          <
                                          K 
                                          do
                                       

Update the Jacobian matrix of each image:
                                             
                                                
                                                   
                                                      
                                                         J
                                                         i
                                                         k
                                                      
                                                      =
                                                      
                                                         
                                                            ∂
                                                            
                                                               
                                                                  
                                                                     I
                                                                     i
                                                                  
                                                                  ∘
                                                                  ζ
                                                               
                                                            
                                                         
                                                         
                                                            ∂
                                                            ζ
                                                         
                                                      
                                                      |
                                                      
                                                         
                                                         
                                                            ζ
                                                            =
                                                            
                                                               τ
                                                               i
                                                               k
                                                            
                                                         
                                                      
                                                      
                                                      
                                                         
                                                            i
                                                            =
                                                            1
                                                            …
                                                            N
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Update the wrapped and normalized images:
                                             
                                                
                                                   
                                                      
                                                         I
                                                         i
                                                      
                                                      ∘
                                                      
                                                         τ
                                                         i
                                                         k
                                                      
                                                      =
                                                      
                                                         
                                                            vec
                                                            
                                                               
                                                                  
                                                                     I
                                                                     i
                                                                  
                                                                  ∘
                                                                  
                                                                     τ
                                                                     i
                                                                     k
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            ∥
                                                            vec
                                                            
                                                               
                                                                  
                                                                     I
                                                                     i
                                                                  
                                                                  ∘
                                                                  
                                                                     τ
                                                                     i
                                                                     k
                                                                  
                                                               
                                                            
                                                            
                                                               ∥
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       


                                          for 
                                          j
                                          =1→
                                          N,…,untilconverged 
                                          do
                                       

Estimate the weight vector w
                                          
                                             j
                                          
                                          
                                             k
                                          , the sparse outliers e
                                          
                                             j
                                          
                                          
                                             k
                                          , the locally linearized transformation parameters △
                                          τ
                                          
                                             j
                                          
                                          
                                             k
                                          , and the dual vector λ
                                          
                                             j
                                          
                                          
                                             k
                                           via the ADMM Algorithm 2 from I
                                          
                                             i
                                          
                                          ∘
                                          τ
                                          
                                             i
                                          
                                          
                                             k
                                          , J
                                          
                                             i
                                          
                                          
                                             k
                                          , and the current estimated subspace U
                                          
                                             t
                                          
                                          
                                             k
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                               j
                                                               k
                                                            
                                                            ,
                                                            
                                                               e
                                                               j
                                                               k
                                                            
                                                            ,
                                                            △
                                                            
                                                               τ
                                                               j
                                                               k
                                                            
                                                            ,
                                                            
                                                               λ
                                                               j
                                                               k
                                                            
                                                         
                                                      
                                                      =
                                                      arg
                                                      
                                                         min
                                                         
                                                            w
                                                            ,
                                                            e
                                                            ,
                                                            △
                                                            τ
                                                            ,
                                                            λ
                                                         
                                                      
                                                      L
                                                      
                                                         
                                                            U
                                                            t
                                                            k
                                                         
                                                         w
                                                         e
                                                         λ
                                                      
                                                   
                                                
                                             
                                          
                                       

Compute the gradient ▽
                                          
                                             L
                                           as follows:
                                             
                                                
                                                   
                                                      
                                                         Γ
                                                         1
                                                      
                                                      =
                                                      
                                                         λ
                                                         j
                                                         k
                                                      
                                                      +
                                                      μh
                                                      
                                                         
                                                            
                                                               w
                                                               j
                                                               k
                                                            
                                                            ,
                                                            
                                                               e
                                                               j
                                                               k
                                                            
                                                            ,
                                                            △
                                                            
                                                               τ
                                                               j
                                                               k
                                                            
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      Γ
                                                      =
                                                      
                                                         
                                                            I
                                                            −
                                                            
                                                               U
                                                               t
                                                               k
                                                            
                                                            
                                                               
                                                                  
                                                                     U
                                                                     t
                                                                     k
                                                                  
                                                                  T
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         Γ
                                                         1
                                                      
                                                      ,
                                                      
                                                      ▽
                                                      L
                                                      =
                                                      Γ
                                                      
                                                         
                                                            
                                                               w
                                                               j
                                                               k
                                                            
                                                            T
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Compute step-size ηt
                                          .

Update subspace:
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               U
                                                               
                                                                  t
                                                                  +
                                                                  1
                                                               
                                                               k
                                                            
                                                            =
                                                            
                                                               U
                                                               t
                                                               k
                                                            
                                                            +
                                                            
                                                               
                                                                  
                                                                     
                                                                        cos
                                                                        
                                                                           
                                                                              
                                                                                 η
                                                                                 t
                                                                              
                                                                              σ
                                                                           
                                                                        
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                                  
                                                                     U
                                                                     t
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           w
                                                                           j
                                                                           k
                                                                        
                                                                        
                                                                           ∥
                                                                           
                                                                              w
                                                                              j
                                                                              k
                                                                           
                                                                           ∥
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  −
                                                                  sin
                                                                  
                                                                     
                                                                        
                                                                           η
                                                                           t
                                                                        
                                                                        σ
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        Γ
                                                                        
                                                                           ∥
                                                                           Γ
                                                                           ∥
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           w
                                                                           j
                                                                           k
                                                                        
                                                                        T
                                                                     
                                                                  
                                                                  
                                                                     ∥
                                                                     
                                                                        w
                                                                        j
                                                                        k
                                                                     
                                                                     ∥
                                                                  
                                                               
                                                            
                                                            ,
                                                            where
                                                            
                                                            σ
                                                            =
                                                            ∥
                                                            Γ
                                                            ∥
                                                            ∥
                                                            
                                                               w
                                                               j
                                                               k
                                                            
                                                            ∥
                                                            .
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       


                                          end for
                                       

Update the transformation parameters:
                                             
                                                
                                                   
                                                      
                                                         τ
                                                         i
                                                         
                                                            k
                                                            +
                                                            1
                                                         
                                                      
                                                      =
                                                      
                                                         τ
                                                         i
                                                         k
                                                      
                                                      +
                                                      △
                                                      
                                                         τ
                                                         i
                                                         k
                                                      
                                                      ,
                                                      
                                                      
                                                         
                                                            i
                                                            =
                                                            1
                                                            …
                                                            N
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       


                                          end while
                                       

ADMM Solver for the locally linearized problem (7)
                              


                                 Require: An n
                                 ×
                                 d orthogonal matrix U, a wrapped and normalized image I
                                 ∘
                                 τ
                                 ∈
                                 ℝ
                                 
                                    n
                                 , the corresponding Jacobian matrix J, and a structure OPTS which holds four parameters for ADMM: ADMM penalty constant ρ, the tolerance ϵtol
                                 , and ADMM maximum iteration K.


                                 Return: weight vector w
                                 ∗
                                 ∈
                                 ℝ
                                 
                                    d
                                 ; sparse outliers e
                                 ∗
                                 ∈
                                 ℝ
                                 
                                    n
                                 ; locally linearized transformation parameters △
                                 τ
                                 ∗; and dual vector λ
                                 ∗
                                 ∈
                                 ℝ
                                 
                                    n
                                 .
                                    
                                       1:
                                       Initialize w, e, Δτ, λ, and
                                          μ: e
                                          1
                                          =0, w
                                          1
                                          =0, △
                                          τ
                                          1
                                          =0, λ
                                          1
                                          =0, μ
                                          =1

Cache P
                                          =(U
                                          
                                             T
                                          
                                          U)−1
                                          U
                                          
                                             T
                                           and F
                                          =(J
                                          
                                             T
                                          
                                          J)−1
                                          J
                                          
                                             T
                                          
                                       


                                          for 
                                          k
                                          =1→
                                          K 
                                          do
                                       

Update △
                                          τ: 
                                             
                                                △
                                                
                                                   τ
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                                =
                                                F
                                                
                                                   
                                                      U
                                                      
                                                         w
                                                         k
                                                      
                                                      +
                                                      
                                                         e
                                                         k
                                                      
                                                      −
                                                      I
                                                      ∘
                                                      τ
                                                      +
                                                      
                                                         
                                                            1
                                                            μ
                                                         
                                                      
                                                      
                                                         λ
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                       

Update weights: 
                                             
                                                
                                                   w
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                                =
                                                P
                                                
                                                   
                                                      I
                                                      ∘
                                                      τ
                                                      +
                                                      J
                                                      △
                                                      
                                                         τ
                                                         
                                                            k
                                                            +
                                                            1
                                                         
                                                      
                                                      −
                                                      
                                                         e
                                                         k
                                                      
                                                      −
                                                      
                                                         
                                                            1
                                                            μ
                                                         
                                                      
                                                      
                                                         λ
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                       

Update sparse outliers:
                                             
                                                
                                                   
                                                      
                                                         e
                                                         
                                                            k
                                                            +
                                                            1
                                                         
                                                      
                                                      =
                                                      
                                                         S
                                                         
                                                            
                                                               1
                                                               μ
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            I
                                                            ∘
                                                            τ
                                                            +
                                                            J
                                                            △
                                                            
                                                               τ
                                                               
                                                                  k
                                                                  +
                                                                  1
                                                               
                                                            
                                                            −
                                                            U
                                                            
                                                               w
                                                               
                                                                  k
                                                                  +
                                                                  1
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  1
                                                                  μ
                                                               
                                                            
                                                            
                                                               λ
                                                               k
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Update dual: λ
                                          
                                             k
                                             +1
                                          =
                                          λ
                                          
                                             k
                                          
                                          +
                                          μh(w
                                          
                                             k
                                             +1, e
                                          
                                             k
                                             +1, △
                                          τ
                                          
                                             k
                                             +1)

Update μ: μ
                                          =
                                          ρμ
                                       


                                          if ∥
                                          h(w
                                          
                                             k
                                             +1, e
                                          
                                             k
                                             +1, △
                                          τ
                                          
                                             k
                                             +1)∥
                                          2
                                          ≤ϵ
                                             tol
                                           
                                          then
                                       

Converge and break the loop.


                                          end if
                                       


                                          end for
                                       


                                          w
                                          ∗
                                          =
                                          w
                                          
                                             k
                                             +1, e
                                          ∗
                                          =
                                          e
                                          
                                             k
                                             +1, △
                                          τ
                                          ∗
                                          =△
                                          τ
                                          
                                             k
                                             +1, λ
                                          ∗
                                          =
                                          y
                                          
                                             k
                                             +1
                                       

Transformed GRASTA — fully online mode


                                 Require: The initial L n
                                 ×
                                 d
                                 
                                    ℓ
                                  orthonormal matrices U
                                 
                                    ℓ
                                  spanning the corresponding subspace S
                                 
                                    ℓ
                                 , ℓ
                                 =1,…,L. A sequence of unaligned images Ii
                                  and the corresponding initial transformation parameters τ
                                 
                                    i
                                 
                                 0, i
                                 =1,…,N.


                                 Return: The estimated iteratively approximated subspaces U
                                 
                                    i
                                 
                                 
                                    ℓ
                                 , ℓ
                                 =1,…,L, after processing image Ii
                                 . The transformation parameters τ
                                 
                                    i
                                 
                                 
                                    L
                                  for each well-aligned image.
                                    
                                       1:
                                       
                                          for unaligned image I
                                          
                                             i
                                          , i
                                          =1,…,N 
                                          do
                                       


                                          for the iterative approximated subspace U
                                          
                                             ℓ
                                          , ℓ
                                          =1,…,L 
                                          do
                                       

Update the Jacobian matrix of image Ii
                                          :
                                             
                                                
                                                   
                                                      
                                                         J
                                                         i
                                                         ℓ
                                                      
                                                      =
                                                      
                                                         
                                                            ∂
                                                            
                                                               
                                                                  
                                                                     I
                                                                     i
                                                                  
                                                                  ∘
                                                                  ζ
                                                               
                                                            
                                                         
                                                         
                                                            ∂
                                                            ζ
                                                         
                                                      
                                                      |
                                                      
                                                         
                                                         
                                                            ζ
                                                            =
                                                            
                                                               τ
                                                               i
                                                               ℓ
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Update the wrapped and normalized images:
                                             
                                                
                                                   
                                                      
                                                         I
                                                         i
                                                      
                                                      ∘
                                                      
                                                         τ
                                                         i
                                                         ℓ
                                                      
                                                      =
                                                      
                                                         
                                                            vec
                                                            
                                                               
                                                                  
                                                                     I
                                                                     i
                                                                  
                                                                  ∘
                                                                  
                                                                     τ
                                                                     i
                                                                     ℓ
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            ∥
                                                            vec
                                                            
                                                               
                                                                  
                                                                     I
                                                                     i
                                                                  
                                                                  ∘
                                                                  
                                                                     τ
                                                                     i
                                                                     ℓ
                                                                  
                                                               
                                                            
                                                            
                                                               ∥
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Estimate the weight vector w
                                          
                                             i
                                          
                                          
                                             ℓ
                                          , the sparse outliers e
                                          
                                             i
                                          
                                          
                                             ℓ
                                          , the locally linearized transformation parameters △
                                          τ
                                          
                                             i
                                          
                                          
                                             ℓ
                                          , and the dual vector λ
                                          
                                             i
                                          
                                          
                                             ℓ
                                           via the ADMM Algorithm 2 from I
                                          
                                             i
                                          
                                          ∘
                                          τ
                                          
                                             i
                                          
                                          
                                             ℓ
                                          , J
                                          
                                             i
                                          
                                          
                                             ℓ
                                          , and the current estimated subspace U
                                          
                                             i
                                          
                                          
                                             ℓ
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               w
                                                               i
                                                               ℓ
                                                            
                                                            ,
                                                            
                                                               e
                                                               i
                                                               ℓ
                                                            
                                                            ,
                                                            △
                                                            
                                                               τ
                                                               i
                                                               ℓ
                                                            
                                                            ,
                                                            
                                                               λ
                                                               i
                                                               ℓ
                                                            
                                                         
                                                      
                                                      =
                                                      arg
                                                      
                                                         min
                                                         
                                                            w
                                                            ,
                                                            e
                                                            ,
                                                            △
                                                            τ
                                                            ,
                                                            λ
                                                         
                                                      
                                                      L
                                                      
                                                         
                                                            U
                                                            i
                                                            ℓ
                                                         
                                                         w
                                                         e
                                                         λ
                                                      
                                                   
                                                
                                             
                                          
                                       

Compute the gradient ▽
                                          
                                             L
                                           as follows:
                                             
                                                
                                                   
                                                      
                                                         Γ
                                                         1
                                                      
                                                      =
                                                      
                                                         λ
                                                         i
                                                         ℓ
                                                      
                                                      +
                                                      μh
                                                      
                                                         
                                                            
                                                               w
                                                               i
                                                               ℓ
                                                            
                                                            ,
                                                            
                                                               e
                                                               i
                                                               ℓ
                                                            
                                                            ,
                                                            △
                                                            
                                                               τ
                                                               i
                                                               ℓ
                                                            
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      Γ
                                                      =
                                                      
                                                         
                                                            I
                                                            −
                                                            
                                                               U
                                                               t
                                                               ℓ
                                                            
                                                            
                                                               
                                                                  
                                                                     U
                                                                     t
                                                                     ℓ
                                                                  
                                                                  T
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         Γ
                                                         1
                                                      
                                                      ,
                                                      
                                                      ▽
                                                      L
                                                      =
                                                      Γ
                                                      
                                                         
                                                            
                                                               w
                                                               i
                                                               ℓ
                                                            
                                                            T
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Compute step-size η
                                          
                                             i
                                          
                                          
                                             ℓ
                                          .

Update subspace:
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               U
                                                               
                                                                  i
                                                                  +
                                                                  1
                                                               
                                                               ℓ
                                                            
                                                            =
                                                            
                                                               U
                                                               i
                                                               ℓ
                                                            
                                                            +
                                                            
                                                               
                                                                  
                                                                     
                                                                        cos
                                                                        
                                                                           
                                                                              
                                                                                 η
                                                                                 i
                                                                                 ℓ
                                                                              
                                                                              σ
                                                                           
                                                                        
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                                  
                                                                     U
                                                                     t
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           w
                                                                           i
                                                                           ℓ
                                                                        
                                                                        
                                                                           ∥
                                                                           
                                                                              w
                                                                              i
                                                                              ℓ
                                                                           
                                                                           ∥
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            −
                                                            sin
                                                            
                                                               
                                                                  
                                                                     η
                                                                     i
                                                                     ℓ
                                                                  
                                                                  σ
                                                               
                                                            
                                                            
                                                               
                                                                  Γ
                                                                  
                                                                     ∥
                                                                     Γ
                                                                     ∥
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     w
                                                                     i
                                                                     ℓ
                                                                  
                                                                  T
                                                               
                                                            
                                                            
                                                               ∥
                                                               
                                                                  w
                                                                  i
                                                                  ℓ
                                                               
                                                               ∥
                                                            
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                          where σ
                                          =∥
                                          Γ
                                          ∥∥
                                          w
                                          
                                             i
                                          
                                          
                                             ℓ
                                          ∥.

Update the transformation parameters:
                                             
                                                
                                                   
                                                      
                                                         τ
                                                         i
                                                         
                                                            ℓ
                                                            +
                                                            1
                                                         
                                                      
                                                      =
                                                      
                                                         τ
                                                         i
                                                         ℓ
                                                      
                                                      +
                                                      △
                                                      
                                                         τ
                                                         i
                                                         ℓ
                                                      
                                                   
                                                
                                             
                                          
                                       


                                          end for
                                       


                                          end for
                                       

If the subspace Uk
                            of the well-aligned images is known as a prior, for example if Uk
                            is trained by Algorithm 1 from a “well selected” dataset of one category, we can simply use Uk
                            to align the rest of the unaligned images of the same category. Here “well selected” means that the training dataset should cover enough of the global appearance of the object, such as different illuminations, which can be represented by the low-dimensional subspace structure. By category, we mean a particular object of interest or a particular background scene in the video surveillance data.

For massive image processing tasks, it is easy to collect such good training datasets by simply randomly sampling a small fraction of the whole image set. Once Uk
                            is learned from the training set, we can use a variation of Algorithm 1 to align each unaligned image I without updating the subspace, since we have the assumption that the remaining images also lie in the trained subspace. We call Algorithm 4 the trained online mode.

However, we note that for a very large streaming dataset such as is typical in real-time video processing, the trained online mode may be less well-defined, as the subspace of the streaming video data may change over time. For this scenario, our fully online mode for t-GRASTA could gradually adapt to the changing subspace and then accurately estimate the transformation τ.

We compare the memory usage of our fully online mode of t-GRASTA to that of RASL. RASL requires storage of A, E, a Lagrange multiplier matrix Y, the data D, and D
                        ○
                        τ, each of which requires storage of the size nN. To compare fairly to t-GRASTA, which assumes a d-dimensional model, we suppose RASL uses a thin singular value decomposition of size d, which requires nd
                        +
                        Nd
                        +
                        d
                        2 memory elements. Finally for the Jacobian per image, RASL needs nNp, and for τ RASL needs Np, but we will assume that p is a small constant independent of dimension and ignore it. Therefore RASL's total memory usage is 6nN
                        +
                        nd
                        +
                        Nd
                        +
                        d
                        2
                        +
                        N.

t-GRASTA must also store the Jacobian, τ, and the data as well as the data with transformation, using memory size 3nN
                        +
                        N. Otherwise, t-GRASTA needs to store the union of subspaces U
                        
                           ℓ
                        , ℓ
                        =1,…,L matrices of size Lnd(L
                        ≪
                        N), and the vectors e, λ, Γ, and w for 3n
                        +
                        d memory elements. Thus t-GRASTA's memory total is 3nN
                        +
                        Lnd
                        +3n
                        +
                        d
                        +
                        N.

For a problem size of 100 images, each with 100×100pixels, and assuming d
                        =10, L
                        =10, t-GRASTA uses 66.1% of the memory of RASL. For 10,000 mega-pixel images, t-GRASTA uses 50.1% of the memory of RASL. The scaling remains about half throughout mid-range to large problem sizes.
                           Algorithm 4
                           Trained online mode of image alignment


                              Require: A well-trained n
                              ×
                              d orthogonal matrix U. An unaligned image I and the corresponding initial transformation parameters τ
                              0. The maximum iteration K.


                              Return: The transformation parameters τk
                               for the well-aligned image.
                                 
                                    1:
                                    
                                       while not converged and 
                                       k
                                       <
                                       K 
                                       do
                                    

Update the Jacobian matrix:
                                          
                                             
                                                
                                                   
                                                      J
                                                      k
                                                   
                                                   =
                                                   
                                                      
                                                         ∂
                                                         
                                                            
                                                               I
                                                               ∘
                                                               ζ
                                                            
                                                         
                                                      
                                                      
                                                         ∂
                                                         ζ
                                                      
                                                   
                                                   |
                                                   
                                                      
                                                      
                                                         ζ
                                                         =
                                                         
                                                            τ
                                                            k
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    

Update the wrapped and normalized image:
                                          
                                             
                                                
                                                   I
                                                   ∘
                                                   
                                                      τ
                                                      k
                                                   
                                                   =
                                                   
                                                      
                                                         vec
                                                         
                                                            
                                                               I
                                                               ∘
                                                               
                                                                  τ
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         ∥
                                                         vec
                                                         
                                                            
                                                               I
                                                               ∘
                                                               
                                                                  τ
                                                                  k
                                                               
                                                            
                                                         
                                                         
                                                            ∥
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    

Estimate the weight vector wk
                                       , the sparse outliers ek
                                       , the locally linearized transformation parameters △
                                       τ
                                       
                                          k
                                       , and the dual vector λk
                                        via the ADMM Algorithm 2 from I
                                       ∘
                                       τ
                                       
                                          k
                                       , J
                                       
                                          k
                                       , and the well-trained subspace U
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            w
                                                            k
                                                         
                                                         ,
                                                         
                                                            e
                                                            k
                                                         
                                                         ,
                                                         △
                                                         
                                                            τ
                                                            k
                                                         
                                                         ,
                                                         
                                                            λ
                                                            k
                                                         
                                                      
                                                   
                                                   =
                                                   arg
                                                   
                                                      min
                                                      
                                                         w
                                                         ,
                                                         e
                                                         ,
                                                         △
                                                         τ
                                                         ,
                                                         λ
                                                      
                                                   
                                                   ℒ
                                                   
                                                      U
                                                      w
                                                      e
                                                      λ
                                                   
                                                
                                             
                                          
                                       
                                    

Update the transformation parameters:
                                          
                                             
                                                
                                                   
                                                      τ
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                   
                                                   =
                                                   
                                                      τ
                                                      k
                                                   
                                                   +
                                                   △
                                                   
                                                      τ
                                                      k
                                                   
                                                
                                             
                                          
                                       
                                    


                                       end while
                                    

@&#PERFORMANCE EVALUATION@&#

In this Section, we conduct comprehensive experiments on a variety of alignment tasks to verify the efficiency and superiority of our algorithm. We first demonstrate the ability of the proposed approach to cope with occlusion and illumination variation during the alignment process. After that, we further demonstrate the robustness and generality of our approach by testing it on handwritten digits and face images taken from the Labeled Faces in the Wild database [31]. In the scenario of video jitters, we investigate the interesting background foreground separation problem extensively by applying our approach. And finally, we show that we may use our fully online algorithm to cast the problem of the visual tracking task into the online image alignment and subspace learning framework. We achieve promising results that show another possible application for t-GRASTA. Our MATLAB t-GRASTA code is available online.
                        1
                     
                     
                        1
                        
                           http://sites.google.com/site/hejunzz/t-grasta
                        
                     
                  

We first test our approach on the dataset “dummy” described in [15]. Here, we want to verify the ability of our approach to effectively align the images despite occlusion and illumination variation. The dataset contains 100 images of a dummy head taken under varying illumination and with artificially generated occlusions created by adding a square patch at a random location of the image. Fig. 4
                         shows 10 misaligned images of the dummy. We align these images by Algorithm 1 (the batch mode of t-GRASTA). The canonical frame is chosen to be 49×49pixels and the subspace dimension is set to 5. Here and in the rest of our experiments, for simplicity we set dk
                         of Algorithm 1 to a fixed d in every iteration. The last three rows of Fig. 4 show the results of alignment, from which we can see that our approach is successful at aligning the misaligned images while removing the occlusion at the same time.

In order to further demonstrate the robustness of our approach, we apply it on more realistic images taken from the Labeled Faces in the Wild database [31]. The LFW contains more severely misaligned images, for it also includes remarkable variations in pose and expression aside from illumination and occlusion, which can be seen in Fig. 5(c). We chose 16 subjects from LFW, each of them with 35 images. Each image is aligned to an 80×60 canonical frame using u which are from the group of affine transformations 
                           
                              G
                              =
                              Aff
                              
                                 2
                              
                           
                        , as in [15]; these are translations, rotations, and scale transformations. For each subject, we set the subspace dimension=15 and use Algorithm 1 to align each image. In this example, we demonstrate the robustness of our approach by comparing the average face of each subject before and after alignment, which are shown in Fig. 5(a)–(b). We can see that the average faces after alignment are much clearer than those before alignment. Fig. 5(c)–(d) provides more detailed information, showing the unaligned and aligned images of John Ashcroft (marked by red boxes in Fig. 5(a)–(b)).

The previous experiments have demonstrated the effectiveness and robustness of t-GRASTA. Here we wish to show the generality of t-GRASTA by applying it to aligning a different type of images — handwritten digits taken from MINST database. For this experiment, we again use Algorithm 1 to align 100 images of a handwritten “3” to a 29×29 canonical frame size. We use Euclidean transformation 
                           
                              G
                              =
                              E
                              
                                 2
                              
                           
                         and set the dimension of the subspace to be 5.


                        Fig. 6
                         shows that t-GRASTA can successfully align the misaligned digits and learn the low dimensional subspace, even though the original digits have significant variation. We can see that the outliers separated by t-GRASTA are generated by variations in the digits that are not consistent with the global appearance. The outliers (d) would be even more sparse if the subspace representation in (c) were to capture more of this variation; If desired, we could achieve this tradeoff by increasing the dimension of the subspace.

In this Section, we apply t-GRASTA to separation problems made difficult by video jitter. Here we apply both the fully online mode 
                        Algorithm 3 and the trained online mode 
                        Algorithm 4 to different datasets. We show the superiority of t-GRASTA regarding both the speed and memory requirement of the algorithms. More video results can be found at the project website.

Here we apply t-GRASTA to the task of separating moving objects from static background in the video footage recorded by an unstable camera. We note that in [6], the authors simulate a virtual panning camera to show that GRASTA can quickly track sudden changes in the background subspace caused by a moving camera. Their low-rank subspace tracking model is well-defined, as the camera after panning is still stationary, and thus the recorded video frames are accurately pixelwise aligned. However, for an unstable camera, the recorded frames are no longer aligned; the background cannot be well represented by a low-rank subspace unless the jittered frames are first aligned. In order to show that t-GRASTA can tackle this separation task, we consider a highly jittered video sequence generated by a simulated unstable camera. To simulate the unstable camera, we randomly translate the original well-aligned video frames in x-/ y-axis and rotate them in the plane.

In this experiment, we compare t-GRASTA with RASL and GRASTA. We use the first 200 frames of the “Hall” dataset,
                              2
                           
                           
                              2
                              Find these along with the videos at http://perception.i2r.a-star.edu.sg/bk_model/bk_index.html.
                            each 144×176pixels. We first perturb each frame artificially to simulate camera jitter. The rotation of each frame is random, uniformly distributed within the range of [−
                           θ
                           0/2, θ
                           0/2], and the ranges of x- and y-translations are limited to [−
                           x
                           0/2, x
                           0/2] and [−
                           y
                           0/2, y
                           0/2]. In this example, we set the perturbation size parameters [x
                           0, y
                           0, θ
                           0] with the values of [20,20,10°].

For comparing with RASL, unlike [23], we just let RASL run its original batch mode without forcing it into an online algorithm framework. The task we give to RASL and t-GRASTA is to align each frame to a 62×75 canonical frame, again using 
                              
                                 G
                                 =
                                 Aff
                                 
                                    2
                                 
                              
                           . The dimension of the subspace in t-GRASTA is set to be 10. We first randomly select 30 frames of the total 200 frames to train the subspace by Algorithm 1 and then align the rest using the trained online mode. The visual comparison between RASL and t-GRASTA are shown in Fig. 7
                           . Table 1
                            illustrates the numerical comparison of RASL and t-GRASTA, for which we ran each algorithm 10 times to get the statistics. We also calculate the RMSE (root mean square error) of five randomly selected points and show the results in Table 2
                           . The five misaligned points and aligned results by RASL and t-GRASTA can be found in Fig. 8
                           . From Table 1 and Fig. 7 we can see that the two algorithms achieve a very similar effect, but t-GRASTA runs much faster than RASL: On a PC with an Intel P9300 2.27GHz CPU and 2GB of RAM, the average time for aligning a newly arrived frame is 1.1s, while RASL needs more than 800s to align the total batch of images, or 4s per frame. Moreover, our approach is also superior to RASL regarding memory efficiency. These superiorities become more dramatic as one increases the size of the image database.

In order to compare with GRASTA, we use 200 perturbed images to recover the background and separate the moving objects for both algorithms; Fig. 9
                            illustrates the comparison. For both GRASTA and t-GRASTA, we set the subspace rank=10 and randomly selected 30 images to train the subspace first. For t-GRASTA, we use the affine transformation 
                              
                                 G
                                 =
                                 Aff
                                 
                                    2
                                 
                              
                           . From Fig. 9, we can see that our approach successfully separates the foreground and the background and simultaneously align the perturbed images. GRASTA fails to learn a proper subspace, thus, the separation of background and foreground is poor. Although GRASTA has been demonstrated to successfully track a dynamic subspace, e.g. the panning camera, the dynamics of an unstable camera are too fast and unpredictable for the GRASTA subspace tracking model to succeed in this context without pre-alignment of the video frames.

In this example, we show the capability of t-GRASTA for video stabilization applied to the dataset “Gore” described in [15]. In [15], the original face images are obtained by a face detector, and the jitters are caused by the inherent imprecision of the detector. In contrast, for t-GRASTA, we simply crop the face from each image by a constant rectangle with a size of 68×44, which has the same position parameters for all frames. So in our case, the jitters are caused by the differences between the motion and pose variation of the target and the stabilization of the constant rectangle.

For this experiment, the dimension of the subspace is set to be 10, and we again choose the affine transformation 
                              
                                 G
                                 =
                                 Aff
                                 
                                    2
                                 
                              
                           . We first use the Algorithm 1 to train an initial subspace by 20 images randomly selected from the whole set of 140 images. We then use the fully online mode to align the rest of the images. Fig. 10
                            show the results. t-GRASTA did well for this dataset with better speed than RASL: On a PC with an Intel P9300 2.27GHz CPU and 2GB of RAM, t-GRASTA aligned these images at 5 frames per second. This is 5 times faster than RASL and 3 times faster than ORIA as described in [23].

In this part, we use the “Badminton” dataset,
                              3
                           
                           
                              3
                              Find it along with other datasets containing misaligned frames caused by real video jitters at http://wordpress-jodoin.dmi.usherb.ca/dataset.
                            which contains 1150 misaligned frames caused by real camera jitter. Here we separately conduct experiments on the three modes of t-GRASTA and compare with RASL. For both t-GRASTA and RASL, we align the frames to 55×85 canonical frames, again using 
                              
                                 G
                                 =
                                 Aff
                                 
                                    2
                                 
                              
                           . For t-GRASTA we set the dimension of the subspace to be 5 and the number of subspaces to be 10. All the experiments are conducted on a Mac with a 2.5GHz Intel Core i5, and 8GB of RAM with code implemented in Matlab version 2013a.

Here we use batch mode 
                              Algorithm 1 to align the total 1150 images and compare the performance with RASL. From Fig. 11
                               we can see that both Algorithm 1 and RASL successfully separate the foreground from the background, but the time needed by t-GRASTA is 470s while RASL needed more than 3000s. Moreover, comparing the background images obtained by t-GRASTA and RASL in Fig. 11, we find that the background obtained by RASL still contains some information of the foreground (sometimes called “ghosting”) while t-GRASTA does not. For t-GRASTA, we estimate the dimension of the dataset first and fix it for each subspace of Algorithm 1, while RASL only relies on the algorithm itself to gradually reduce the rank of the dataset. While this may allow RASL to achieve a lower rank representation with enough running time, on shorter time-scales the rank may still be high. This is a benefit of t-GRASTA more generally for datasets that contain very slow foreground movement or short periods when foreground objects remain still, like those in badminton, e.g. when the player is going to serve the ball or waiting for a serve. In these videos, the batch mode of t-GRASTA can achieve better performance by making good use of the low rank property of the dataset, while RASL may treat slowly moving foreground objects as background information.

For the trained online mode, we first randomly select 200 frames from the total 1150 frames and use Algorithm 1 to train a representative subspace. Then we align the remaining frames using this subspace without further update. The total time needed by the trained online mode is 291s, where 83s were for training and 208s for alignment of the rest of the frames. For the fully online mode, we use the first 20 frames to train the initial subspace by the batch mode Algorithm 1, and then use the fully online mode to align the rest of the frames and update the subspace as well; this required 458s for the whole dataset.


                              Fig. 12
                               shows that the trained online mode achieves better performance than the fully online mode on this particular dataset. The fully online mode has difficulty with certain frames, especially when some background pixels are not visible in the first few frames for training a good initial subspace, or when there is a slowly moving or still foreground. In both cases we get ghosting, as we described with RASL above. The trained online mode can avoid this since it has trained a representative subspace from frames across the entire video. For massive image processing tasks, it is relatively easy to train such a representative subspace by simply randomly sampling a small fraction of the whole image set. Furthermore, the trained online mode is much more efficient for a dataset like this one with a stationary subspace; it doesn't need to update the subspace in the rest of the alignment process.

Of course the trade-off is that the background must remain relatively stationary during the duration of the video. Contrastingly, the fully online mode will track a time-varying subspace in a timely manner. This is the strength of the fully online mode, especially when it comes to a dynamic video or large dataset containing considerable variations. We see that fully online mode needs no more than 20 frames to adapt to the changes of the subspace, such as a dynamic background caused by the camera panning. Moreover, if the changes are very slow, such as a camera set up to slowly pan 180° over the course of a day, then t-GRASTA is capable of adapting with every frame. Finally, we note that the fully online mode is often more computationally efficient than the trained online mode on these datasets. Since the subspace of the trained online mode is not very representative, it may require many more ADMM and alignment iterations for each frame.

Although t-GRASTA was not designed as a face detector, the experimental results of “Gore” dataset suggests that t-GRASTA can be transformed into a face detector or more generally a target tracker. In this experiment, we further explore this property of t-GRASTA and improve the efficiency of t-GRASTA by choosing a tight frame for the canonical image.

For this tracking task, we manually find the initial position of the target in the first frame, called the region of interest (ROI), “crop” the target and use the batch mode Algorithm 1 to train an initial subspace. If the position parameter of the current frame serves as the initial position of the next frame, there will be misalignment due to the motion of the car. We use the fully online mode to align to misaligned images cropped by the initial position parameters and update the subspace at the same time. Once we estimate the alignment τ, we may use the formula
                           
                              
                                 
                                    Tracked
                                    
                                    position
                                    =
                                    Canonical
                                    
                                    coordinates
                                    ∘
                                    
                                       τ
                                       
                                          −
                                          1
                                       
                                    
                                 
                              
                           
                        to predict or locate the target in this next frame. Here, we align each cropped target to a 12×15 canonical image size, again using 
                           
                              G
                              =
                              Aff
                              
                                 2
                              
                           
                        . On a Mac with a 2.5GHz Intel Core i5, and 8GB of RAM and with Matlab implementation in version 2013a, t-GRASTA achieves alignment and tracking in 11 frames per second. From Fig. 13
                        , we can see that the t-GRASTA tracker achieves good performance even when the video contains scale changes and considerable illumination variations.

In further tracking experiments with the fully online mode of t-GRASTA, we saw that in its current implementation, it could not handle large amounts of pose variation or sustained complete obstruction of the object to be tracked. A tracking version of t-GRASTA is an endeavor for future work.

@&#CONCLUSIONS AND FUTURE WORK@&#

@&#CONCLUSIONS@&#

In this paper we have presented an iterative Grassmannian optimization approach to simultaneously identify an optimal set of image domain transformations for image alignment and the low-rank subspace matching the aligned images. These are such that the vector of each transformed image can be decomposed as the sum of a low-rank part of the recovered aligned image and a sparse part of errors. This approach can be regarded as an extension of GRASTA and RASL: We extend GRASTA to transformations, and extend RASL to the incremental gradient optimization framework. Our approach is faster than RASL and more robust to alignment than GRASTA. We can effectively and computationally efficiently learn the low-rank subspace from misaligned images, which is very practical for computer vision applications.

@&#FUTURE WORK@&#

Though this work presents an approach for robust image alignment more computationally efficient than state-of-the-art, a foremost remaining problem is how to scale the proposed approach to a very large streaming dataset such as is typical in real-time video processing. The fully online t-GRASTA algorithm presented here is a first step towards a truly large-scale real-time algorithm, but several practical implementation questions remain, including online parameter selection and error performance cross-validation. Another question of interest is regarding the estimation of dk
                         for the subspace update. Though we fix the rank d in this paper, estimating dk
                         and switching between Grassmannians is a very interesting future direction.

Another theoretical open question is that of solution uniqueness with drastic alignment changes and/or subspace changes. When operating online, a drastic change in alignment may be learned as a change in subspace instead, and vice versa. Understanding conditions under which subspaces and alignment can be learned simultaneously and is crucial to understanding the possibilities and limitations of such an approach.

While preparing the conference version of this work [32], we noticed an interesting alignment approach proposed in [33]. Though the two approaches of ours and [33] are both obtained via optimization over a manifold, they perform alignment for very different scenarios. For example, the approach in [33] focuses on semantically meaningful videos or signals, and then it can successfully align the videos of the same object from different views; t-GRASTA manipulates the set of misaligned images or the video of unstable camera to robustly identify the low-rank subspace, and then it can align these images according to the subspace. An intriguing future direction would be to merge these two approaches.

A final direction of future work is toward applications which require more aggressive background tracking than is possible by a GRASTA-type algorithm. For example, if a camera is following an object around different parts of a single scene, even though the background may be quickly varying from frame to frame, the camera will get multiple shots of different pieces of the background. Therefore, it may be possible to still build a model for the entire background scene using low-dimensional modeling. Incorporating camera movement parameters and a dynamical model into GRASTA would be a natural way to solve this problem, merging classical adaptive filtering algorithms with modern manifold optimization.

@&#ACKNOWLEDGMENTS@&#

This work of Jun He is supported by NSFC (61203273). Laura Balzano would like to acknowledge 3M for generously supporting her Ph.D. studies.

@&#REFERENCES@&#

