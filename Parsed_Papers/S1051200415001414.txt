@&#MAIN-TITLE@&#Mahalanobis distance based on fuzzy clustering algorithm for image segmentation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Introduce the Mahalanobis distance which is more efficient than the Euclidean distance to FCM based algorithm.


                        
                        
                           
                           Introduce a regularization term to improve the segmentation results.


                        
                        
                           
                           Combine the Mahalanobis distance and the regularization term with the FCM algorithm based on KL information.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Image segmentation

Fuzzy C-means

Mahalanobis distance

KL information

Entropy

@&#ABSTRACT@&#


               
               
                  Conventional Fuzzy C-means (FCM) algorithm uses Euclidean distance to describe the dissimilarity between data and cluster prototypes. Since the Euclidean distance based dissimilarity measure only characterizes the mean information of a cluster, it is sensitive to noise and cluster divergence. In this paper, we propose a novel fuzzy clustering algorithm for image segmentation, in which the Mahalanobis distance is utilized to define the dissimilarity measure. We add a new regularization term to the objective function of the proposed algorithm, reflecting the covariance of the cluster. We experimentally demonstrate the effectiveness of the proposed algorithm on a generated 2D dataset and a subset of Berkeley benchmark images.
               
            

@&#INTRODUCTION@&#

Until now, a great deal of attention has been paid to image segmentation [1–3]. There are many ways to implement the segmentation, and they can be divided into three categories in terms of their mathematic foundations: threshold-based [4,5], cluster-based [6,7] and statistics-based algorithms [8,9]. Among of them, cluster-based algorithms are widely used in image segmentation where Fuzzy C-means (FCM) algorithm [10–12] is one of the most popular methods due to its simplicity and extendibility. FCM algorithm uses the Euclidean distance to describe the dissimilarity measure between pixels and cluster centers. Besides the algorithm introduces the fuzzy set theory to define a fuzzy membership function and the exponentially weight of the fuzzy membership function can express the fuzziness of the objective function in the FCM algorithm. It means that if the pixel has a bigger dissimilarity measure with a cluster center it has a less degree to belong to the cluster and vice versa [13]. From image segmentation point of view, the FCM algorithm does not take the relations among neighboring pixels into account. Apart from that, the exponential weights in its objective function are a rather unnatural choice [14,15] and the divergences of intensities of pixels in segmented regions are also ignored. These make FCM algorithm sensitive to noise and cluster divergence.

To improve the FCM algorithm, Kim et al. [16] suggested a fuzzy model which can express a given unknown system with a few fuzzy rules. Krishnapuram and Keller [17] proposed the Possibilistic C-Means (PCM) algorithm, in which the membership of the data-points is interpreted as its possibility belonging to a class and an appropriate objective function is constructed from a possibilistic point of view. Detroja et al. [18] proposed a new approach for fault detection and isolation based on the possibilistic clustering algorithm. Pal et al. [19] proposed Possibilistic-Fuzzy C-Means (PFCM) model and used it as a candidate for fuzzy rule-based system identification. Gong et al. [20] introduced a tradeoff between weighted fuzzy factor and a kernel metric to improve the FCM algorithm. Tan et al. [21] presented a novel initialization scheme to determine the cluster number and obtain the initial cluster centers for the FCM algorithm. In spite of those ways, the FCM algorithm improves mainly the following three aspects: neighborhood system, objective function and dissimilarity measure.

From a neighborhood relationship point of view, Ahmed et al. [22] presented FCM with constrains (FCM_S) algorithm, in which the Euclidean distance from a pixel to a cluster center and the Euclidean distance from its neighboring pixels to the cluster center are calculated, respectively, and then a dissimilarity measure between the pixel and the cluster center is defined by using the weighted averaged value of those distances. Although they introduced neighborhood information into the objective function, the algorithm is insufficient to outliers. Moreover, in algorithm iteration, the Euclidean distances from neighboring pixels to cluster centers needed to be calculated repeatedly. This makes the algorithm time-consuming. Wherefore, Szilagyi et al. [23] proposed the Enhanced FCM (EnFCM) algorithm in such a way that a linearly-weighted sum image is in advance formed by weightily averaging each pixel and its neighborhoods. Although the smoothed image may decrease the affect of noise, the detail information is lost during the smoothing process and this will lead to misclassifications. In addition, the weighted coefficient which may affect the segmentation result is given by users. Cai et al. [24] defined a similarity measure which is related to neighborhood and spatial information as the weighting coefficient in Fast Generalized FCM (FGFCM). They used two parameters to control the influence of neighborhood system and spatial information in regularization. To speed up the algorithm, EnFCM and FGFCM carry out image segmentation on gray levels rather than pixels. Unlike [24], Krinidis and Chatzis [25] proposed the Fuzzy Local Information C-Mean (FLICM) algorithm and used spatial and spectral information of neighboring pixels to define a fuzzy factor, which controls the balance between noise reduction and detail protection. The algorithm is performed on the original image rather than filtered image as used in [23,24] which may cause detail missing.

In addition, some researchers attempted to redefine the objective functions to improve FCM algorithm. In the proposed Entropy-based FCM (EFCM), Miyamoto and Mukaidono [26] used a regularization, which is implemented by information entropy, to define their objective function and a coefficient of the regularization to indicate the fuzziness of the objective function. However, EFCM may lead to misclassification for divergent clusters (clusters with large variances). To overcome this problem Ichihashi et al. [27] proposed KL (Kullback–Leibler) information-based FCM (KLFCM), in which an additional variable in regularization is used to improve the KL information. Furthermore, Miyamoto et al. [28] proved that the additional variable can control the cluster size.

Apart from improving the objective function, the definitions of dissimilarity measures can also improve the FCM algorithm. Euclidean distance defines the straight line distance between two data points in feature space. As a dissimilarity measure, it is sensitive to noise because it does not consider covariance of data points. Therefore, Euclidean distance based FCM algorithm can be improved by defining dissimilarity measures with other distance metrics. Chen and Zhang [29] used the Kernel-induced distance as dissimilarity measure in FCM algorithm and showed that the kernel method is an effective approach to construct a robust image clustering algorithm. However, the Kernel-induced distance utilizes only mean information of clusters in an image. To take more information into consideration, Carvalho et al. [30] used the mean vector of an image and a symmetric matrix to define the adaptive quadratic distance as a dissimilarity measure, where the symmetric matrix can be defined in several ways, hence different definitions lead to different results. Han et al. [31] applied the divergence distance which combines both mean and covariance information to the FCM algorithm. By comparing the results of algorithms with divergence distance and Euclidean distance, they proved the effectiveness of the algorithm based on divergence distance. Mahalanobis distance [32] is also defined by mean and covariance of a cluster but Krishnapuran and Kim [33] proved that the distance cannot be used directly as dissimilarity measure for designing cluster algorithm. So Liu et al. [34] used Mahalanobis distance by defining the matrix through pixels and their mean. When the matrix is a unit matrix, the Mahalanobis distance is equal to the Euclidean distance [35]. Liu et al. [34,36] added the log determinant of the covariance matrix to Mahalanobis distance to define a new dissimilarity measure. A data point that falls together with the mean of a cluster would have a non-zero dissimilarity measure indicating that this measure is not a well defined distance. This paper proposed a Mahalanobis distance based FCM (MFCM) algorithm in which Mahalanobis distance is used to define the dissimilarity measure and a regularization term is added to the objective function which is defined in reference [27].

The paper is organized as follows. In Section 2, the differences of Euclidean and Mahalanobis distance are compared and the proposed algorithm is described in detail. In Section 3, a generated dataset on two dimension (2D) plane, a synthetic image and a subset of Berkeley benchmark images are segmented and the effectiveness of the proposed algorithm is evaluated qualitatively and quantitatively. A conclusion is given in Section 4.

Let 
                        X
                        =
                        {
                        
                           
                              x
                           
                           
                              i
                           
                        
                        :
                        i
                        =
                        1
                        ,
                        2
                        ,
                        …
                        ,
                        N
                        }
                      be the observed image, where i is in responding of the pixel index, 
                        
                           
                              x
                           
                           
                              i
                           
                        
                        =
                        
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    i
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    id
                                 
                              
                              )
                           
                           
                              T
                           
                        
                      is the feature vector of pixel i, d is the dimension of the pixel, and N is the number of pixels in image 
                        X
                     .

The objective function of the FCM algorithm can be formulated as
                        
                           (1)
                           
                              
                                 
                                    J
                                 
                                 
                                    FCM
                                 
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                                 
                                    m
                                 
                              
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                           
                        
                      where c is the number of clusters, and j is the index of the cluster, 
                        U
                        =
                        
                           
                              [
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              ]
                           
                           
                              N
                              ×
                              c
                           
                        
                      is the membership matrix expressing the fuzzy segmentation, 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                      represents the degree of membership with which 
                        
                           
                              x
                           
                           
                              i
                           
                        
                      belongs to the jth cluster and satisfies 
                        
                           
                              ∑
                           
                           
                              j
                              =
                              1
                           
                           
                              c
                           
                        
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                        =
                        1
                     . The fuzzy factor m is the weighting exponent of 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                      and describes the degree of fuzziness of the algorithm, 
                        
                           
                              d
                           
                           
                              ij
                           
                        
                        =
                        
                           
                              ‖
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              −
                              
                                 
                                    μ
                                 
                                 
                                    j
                                 
                              
                              ‖
                           
                           
                              2
                           
                        
                      represents the Euclidean distance measuring the dissimilarity between the pixel vector 
                        
                           
                              x
                           
                           
                              i
                           
                        
                      and the mean vector of the jth cluster 
                        
                           
                              μ
                           
                           
                              j
                           
                        
                        =
                        
                           
                              (
                              
                                 
                                    μ
                                 
                                 
                                    j
                                    1
                                 
                              
                              ,
                              
                                 
                                    μ
                                 
                                 
                                    j
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    μ
                                 
                                 
                                    j
                                    d
                                 
                              
                              )
                           
                           
                              T
                           
                        
                     . The FCM algorithm based on the Euclidean distance is sensitive to noise and the weighting exponent in objective function is suboptimal [37].

Miyamoto and Mukaidono [26] proposed to use an entropy term as regularization for the objective function
                        
                           (2)
                           
                              
                                 
                                    J
                                 
                                 
                                    EFCM
                                 
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                              +
                              λ
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              log
                              ⁡
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                           
                        
                      where λ is the degree of the fuzziness of the algorithm. However, this objective function is sensitive to divagating clusters. Ichihashi et al. [27] proposed the KLFCM algorithm which improved the EFCM algorithm by using the KL information instead of entropy, that is,
                        
                           (3)
                           
                              
                                 
                                    J
                                 
                                 
                                    
                                       KLFCM
                                    
                                 
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                              +
                              λ
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              log
                              ⁡
                              
                                 (
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          j
                                       
                                    
                                 
                                 )
                              
                           
                        
                      where the elements of 
                        α
                        =
                        {
                        
                           
                              α
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              α
                           
                           
                              2
                           
                        
                        ,
                        …
                        ,
                        
                           
                              α
                           
                           
                              c
                           
                        
                        }
                      control the sizes of clusters and avoid misclassification of edge points belonging to the larger cluster being segmented to the adjacent smaller cluster [28].

Using Eq. (3) as objective function together with the Euclidean distance as dissimilarity measure still shows being highly sensitive to noise and divergence of clusters. To overcome this shortcoming, we introduce to use the Mahalanobis distance
                        
                           (4)
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    −
                                    
                                       
                                          μ
                                       
                                       
                                          j
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    Σ
                                 
                                 
                                    j
                                 
                                 
                                    −
                                    1
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              −
                              
                                 
                                    μ
                                 
                                 
                                    j
                                 
                              
                              )
                           
                        
                      where 
                        
                           
                              Σ
                           
                           
                              j
                           
                        
                      is the covariance matrix of the jth cluster. When 
                        
                           
                              Σ
                           
                           
                              j
                           
                        
                      is a unit metric, the Mahalanobis distance reduces to the Euclidean distance. To compare the Euclidean distance with the Mahalanobis distance, a dataset with three clusters has been generated in 2D plane where the data points subject to a Gaussian distribution. The mean vectors, covariance matrices and numbers of data points in clusters are listed in Table 1
                      where 
                        
                           
                              μ
                           
                           
                              j
                              k
                           
                        
                      (
                        j
                        =
                        1
                        ,
                        2
                        ,
                        3
                        ;
                        k
                        =
                        1
                        ,
                        2
                     ) represents the components of the mean vector of the jth cluster and 
                        
                           
                              σ
                           
                           
                              j
                              k
                           
                        
                      (
                        j
                        =
                        1
                        ,
                        2
                        ,
                        3
                        ;
                        k
                        =
                        1
                        ,
                        2
                        ,
                        3
                        ,
                        4
                     ) represents the components of covariance of the jth cluster. Fig. 1
                      shows the generated dataset, in which the data points for Clusters 1, 2 and 3 are in red, green and blue, respectively, and the black and pink lines indicate the Euclidean distances 
                        (
                        
                           
                              E
                           
                           
                              d
                           
                        
                        )
                      and Mahalanobis distances 
                        (
                        
                           
                              M
                           
                           
                              d
                              r
                           
                        
                        ,
                        
                           
                              M
                           
                           
                              d
                              g
                           
                        
                        ,
                        
                           
                              M
                           
                           
                              d
                              b
                           
                        
                        )
                     . It is clear that the same Euclidean distance in each cluster corresponds to different Mahalanobis distances because the Mahalanobis distance takes the covariance of each cluster into account. Hence, Mahalanobis distance describes dissimilarities in different clusters more accuracy than Euclidean distance does.


                     Fig. 2
                      shows boundaries of clusters calculated by the Euclidean and Mahalanobis distances. The boundaries calculated by the Euclidean distance leads to straight lines and misclassify the data points which diverge far from their cluster center, while the boundaries based on the Mahalanobis distance lead to curves that coinciding with the curvature representing the covariance of the cluster. It means that when the covariance of a cluster is larger (for example Cluster 2), the Mahalanobis boundary can leave more space for it and when the covariance of a cluster is smaller (for example Cluster 1), the Mahalanobis boundary can narrow its area.

According to the above analysis, it can be concluded that the Mahalanobis distance is more accuracy than the Euclidean distance when it is used as dissimilarity measure for image segmentation. Therefore, the Mahalanobis distance is introduced to the fuzzy clustering algorithm. However, if we use the Mahalanobis distance to the objective function by just substitute Eq. (4) into Eq. (3) directly, the optimal covariance matrix 
                        
                           
                              ∑
                           
                           
                              j
                           
                        
                      cannot be calculated by minimizing the objective function. To solve the problem, Benaichouche et al. [37] defined a dissimilarity measure with the log determinant of covariance matrix. While the dissimilarity measure of a data point that coincides with the mean of a cluster would be equal to the log determinant of covariance matrix of the cluster rather than zero. This is not conformed to the definition of a distance. Therefore, in this paper, the Mahalanobis distance based FCM algorithm (MFCM) is proposed, in which the Mahalanobis distance is exploited to define the dissimilarity measure, and a regularization related to the covariance of the clusters, which can be used to solve the covariance matrix, is added to the objective function
                        
                           (5)
                           
                              
                                 
                                    J
                                 
                                 
                                    MFCM
                                 
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                              +
                              λ
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              log
                              ⁡
                              |
                              
                                 
                                    Σ
                                 
                                 
                                    j
                                 
                              
                              |
                              +
                              λ
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              log
                              ⁡
                              
                                 (
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          j
                                       
                                    
                                 
                                 )
                              
                           
                        
                      where the second term is the regularization expressing the disorder of the points in each cluster, 
                        |
                        
                           
                              Σ
                           
                           
                              j
                           
                        
                        |
                      is the determinant of the jth covariance matrix. Through taking the covariance into consideration the proposed clustering algorithm using the Mahalanobis distance as dissimilarity measure can solve the problem that marginal points of a large cluster are segmented to a smaller cluster. With the second term in Eq. (5), covariance of clusters can be calculated by its partial derivation.

To obtain the best segmentation result, the objective function should be minimized by the partial derivative of the objective function. The degree of the membership should satisfy the following constraint
                        
                           (6)
                           
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              =
                              1
                           
                        
                      As a result, to derive the optimal 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                     , the Lagrangian function has to be constructed as follows
                        
                           (7)
                           
                              L
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                              +
                              λ
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              log
                              ⁡
                              |
                              
                                 
                                    Σ
                                 
                                 
                                    j
                                 
                              
                              |
                              +
                              λ
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              log
                              ⁡
                              
                                 (
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          j
                                       
                                    
                                 
                                 )
                              
                              +
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 
                                    ε
                                 
                                 
                                    i
                                 
                              
                              
                                 (
                                 
                                    ∑
                                    
                                       
                                          
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       1
                                    
                                    c
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       
                                          
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 −
                                 1
                                 )
                              
                           
                        
                      The optimal 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                      which can minimize L holds
                        
                           (8)
                           
                              
                                 
                                    ∂
                                    L
                                 
                                 
                                    ∂
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    d
                                 
                                 
                                    i
                                    j
                                 
                              
                              +
                              λ
                              log
                              ⁡
                              |
                              
                                 
                                    Σ
                                 
                                 
                                    j
                                 
                              
                              |
                              +
                              λ
                              log
                              ⁡
                              
                                 (
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          j
                                       
                                    
                                 
                                 )
                              
                              +
                              λ
                              +
                              
                                 
                                    ε
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                           
                        
                      To minimize the objective function, let Eq. (8) be equal to 0, then 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                      can be calculated,
                        
                           (9)
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 
                                    α
                                 
                                 
                                    j
                                 
                              
                              exp
                              ⁡
                              
                                 (
                                 −
                                 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             i
                                             j
                                          
                                       
                                       +
                                       λ
                                       log
                                       ⁡
                                       |
                                       
                                          
                                             Σ
                                          
                                          
                                             j
                                          
                                       
                                       |
                                    
                                    λ
                                 
                                 −
                                 
                                    
                                       λ
                                       +
                                       
                                          
                                             ε
                                          
                                          
                                             i
                                          
                                       
                                    
                                    λ
                                 
                                 )
                              
                           
                        
                      Eliminate 
                        
                           
                              ε
                           
                           
                              i
                           
                        
                      from Eqs. (6) and (9), 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                      is written as
                        
                           (10)
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          α
                                       
                                       
                                          j
                                       
                                    
                                    exp
                                    ⁡
                                    (
                                    −
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                i
                                                j
                                             
                                          
                                          +
                                          λ
                                          log
                                          ⁡
                                          |
                                          
                                             
                                                Σ
                                             
                                             
                                                j
                                             
                                          
                                          |
                                       
                                       λ
                                    
                                    )
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                j
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          1
                                       
                                       
                                          c
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          
                                             
                                                j
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                    exp
                                    ⁡
                                    (
                                    −
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                i
                                                
                                                   
                                                      j
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                          +
                                          λ
                                          log
                                          ⁡
                                          |
                                          
                                             
                                                Σ
                                             
                                             
                                                
                                                   
                                                      j
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                          |
                                       
                                       λ
                                    
                                    )
                                 
                              
                           
                        
                      where 
                        
                           
                              α
                           
                           
                              j
                           
                        
                     , as a variable for controlling cluster size, satisfies the constrain
                        
                           (11)
                           
                              
                                 ∑
                                 
                                    j
                                    =
                                    1
                                 
                                 c
                              
                              
                                 
                                    α
                                 
                                 
                                    j
                                 
                              
                              =
                              1
                           
                        
                      In the same way with 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                     , the estimate of 
                        
                           
                              α
                           
                           
                              j
                           
                        
                      yields
                        
                           (12)
                           
                              
                                 
                                    α
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                 
                                 N
                              
                           
                        
                      There are no constraints for 
                        
                           
                              μ
                           
                           
                              j
                           
                        
                      and 
                        
                           
                              Σ
                           
                           
                              j
                           
                        
                     , so minimizing the objective function in Eq. (5) yields
                        
                           (13)
                           
                              
                                 
                                    μ
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    Σ
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    −
                                    
                                       
                                          μ
                                       
                                       
                                          j
                                       
                                    
                                    )
                                    
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          −
                                          
                                             
                                                μ
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    λ
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                          j
                                       
                                    
                                 
                              
                           
                        
                      The process of the proposed algorithm can be summarized as follows.
                        
                           (1)
                           Set constants, including cluster number c, fuzzy factor λ, maximum iteration number T and stopping condition η; Initialize iteration counter 
                                 t
                                 =
                                 0
                               and membership matrix 
                                 
                                    
                                       U
                                    
                                    
                                       (
                                       0
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             u
                                          
                                          
                                             i
                                             j
                                          
                                          
                                             (
                                             0
                                             )
                                          
                                       
                                       ]
                                    
                                    
                                       N
                                       ×
                                       c
                                    
                                 
                              .

Calculate the mean vectors and covariance matrices of the clusters 
                                 
                                    
                                       μ
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       μ
                                    
                                    
                                       1
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                                 
                                    
                                       μ
                                    
                                    
                                       2
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       μ
                                    
                                    
                                       c
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 }
                               and 
                                 
                                    
                                       Σ
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       Σ
                                    
                                    
                                       1
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                                 
                                    
                                       Σ
                                    
                                    
                                       2
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       Σ
                                    
                                    
                                       c
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 }
                               according to Eqs. (13) and (14).

Calculate the variable 
                                 
                                    
                                       α
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       α
                                    
                                    
                                       1
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 }
                               according to Eq. (12).

Calculate the membership matrix 
                                 
                                    
                                       U
                                    
                                    
                                       (
                                       t
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             u
                                          
                                          
                                             i
                                             j
                                          
                                          
                                             (
                                             t
                                             +
                                             1
                                             )
                                          
                                       
                                       ]
                                    
                                    
                                       N
                                       ×
                                       c
                                    
                                 
                               according to Eq. (10).

If max 
                                 {
                                 |
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       (
                                       t
                                       +
                                       1
                                       )
                                    
                                 
                                 −
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       (
                                       t
                                       )
                                    
                                 
                                 |
                                 }
                                 <
                                 η
                              , or iteration counter 
                                 t
                                 =
                                 T
                              , then stop; otherwise, 
                                 t
                                 =
                                 t
                                 +
                                 1
                               and go to step (2).

@&#EXPERIMENTS AND RESULTS@&#

To evaluate the proposed algorithm, the generated 2D dataset points shown in Fig. 1, a synthetic color image and a group of Berkeley benchmark color images are segmented.

First, the robustness of the proposed algorithm is illustrated by segmenting the dataset in Fig. 1. For comparison of segmentation results of Euclidean and Mahalanobis based algorithms, KLFCM and MFCM algorithms are used to segment the dataset, and the results are shown in Fig. 3
                      where colors (red, green and blue) indicate the real clusters of data points and symbols (square, star and diamond) indicate segmented clusters of data points (S2C).

Figs. 3(a) and (b) are results from KLFCM and MFCM algorithms, where points in area A belong to Cluster 2 but KLFCM algorithm segments them to Cluster 3 while MFCM segments them to Cluster 2; Points in area B belong to Cluster 2 except for the two points in red. KLFCM segments most of them to Cluster 1 while MFCM segments most of them rightly expect those three points in red which segmented to Cluster 2 and two points in green which segmented to Cluster 1. Moreover there is a red point in Cluster 2 and a green point in Cluster 1 segmented wrong by both algorithms due to that they are far away from their cluster center and close to another cluster center. In the circumstances, misclassification cannot be avoided by the algorithms currently existing. In summary the MFCM performs better than the KLFCM method.

To compare their accuracy, the confusion matrix including the product accuracy, user accuracy and total accuracy for segmentation results are computed and listed in Table 2
                     . From Table 2, it can be seen that for the confusion matrix of KLFCM, Clusters 1 and 3 have higher user accuracy than Cluster 2 while Cluster 2 and Cluster 3 have higher product accuracy than Cluster 1. All accuracies for MFCM segmentation results are all higher than 94%. It can be observed from Fig. 3 that KLFCM cannot segment Cluster 2 very well because the cluster has a larger covariance comparing to Clusters 1 and 3. That is because Euclidean distance only uses mean information of clusters, it cannot segment divergent clusters well. The shortcoming is overcome by MFCM algorithm which has a total accuracy of 97.8%, much higher than that of KLFCM (94.2%).

In order to evaluate the algorithm qualitatively and quantitatively, a synthetic image with color textures is generated, as shown in Fig. 4
                     (a). The mean vectors and variance vectors (the diagonal elements of Covariance matrix) of the synthetic image are listed in Table 3
                     , where one can see that all variances for C1 is much higher than that for C2 and C3, and that leads to the fact that the cluster of C1 are more divergent than those of C2 and C3 in the RGB color space.

We have proven the efficient of Mahalanobis distance over Euclidean distance through the experiments of the generated 2D data sets of points above. In the next experiments, we are going to prove both the efficient of the Mahalanobis distance and the regularization term we added in the objective function through comparing the proposed algorithm with the KLFCM algorithm and the FCM-SM algorithm proposed by Liu et al. in reference [34]. The segmentation results of KLFCM, FCM-SM and MFCM are shown in Fig. 4(b)–(d).

For clarity, the image and its segmentation results are shown in three 2D subspaces (R–G, R–B and B–G plane) of RGB color space, where Figs. 5
                     (a1)–(a3) is for the test image and Figs. 5(b1)–(b3), (c1)–(c3) and (d1)–(d3) are for segmentation results from KLFCM, FCM-SM and MFCM, respectively. From Fig. 5, it is clear that the KLFCM is difficult to segment the clusters whose data points spread over on a long strip and it tends to segment the cluster into square or circle scatter, so C1 and C3 contain some obvious misclassification. FCM-SM algorithm proposed by Liu et al. in reference [34] improves the shortcoming. However, the FCM-SM algorithm cannot distinguish small size of cluster from large ones and that lead to the misclassification of C1 and C2 which are expressed by green points and red points in Fig. 5. The MFCM performs well on cluster with small size and strip shape as seen in Fig. 5(d1)–(d3) where the segmented areas for these clusters coincide with their real areas.

The confusion matrices results from the three algorithms are listed in Table 4
                     . One can see that, for the KLFCM, C2 has higher accuracies (user accuracy and product accuracy) than C1 and C3 and C2 is segmented better than the other areas as shown in Fig. 4(b). For FCM-SM algorithm, user accuracy of C2 and C3 are all 100% wile C1 is 81.4% and C1 as well as C3 have much higher product accuracy than C2, which is 58.5%. Neither the accuracy of KLFCM or FCM-SM algorithms is high. However, accuracies of the result from the MFCM algorithm are all higher than 99.3% and there is scarcely any difference from the user accuracy and the product accuracy. The MFCM algorithm has a much higher total accuracy of 99.8%, nearly 100%, than those of KLFCM (57.6%) and FCM-SM (90.7%) algorithms.

For natural images, there are many reasons that can lead to a cluster divergence. For example, there exist small objects and much larger ones which may lead segmentation algorithms to poor performance. Therefore, the capability of segmenting natural images is a significant evaluation criterion for image segmentation algorithms. Segmentation experiments have also been done on some real-world color images from Berkeley dataset to show the effectiveness of the MFCM algorithm. The testing images and the segmentation results of KLFCM, FCM-SM and MFCM algorithms are listed in Fig. 6
                     , where (a)–(g) are segmented into 2, 4, 3, 2, 2, 5, 2 clusters.

For Fig. 6(b)–(d), the colors of the object are obviously different from the backgrounds but the covariances of clusters are large. So the KLFCM algorithm cannot segment them well while FCM-SM and MFCM can. That is because the Euclidean distance cannot describe the distance as good as Mahalanobis distance does when the covariance is large and the KLFCM algorithm did not take any regularization term into consideration. However, Figs. 6(a) and (g) are segmented well by KLFCM and MFCM algorithms, but the segmentation results of FCM-SM algorithm are vague. The reason is that the FCM-SM algorithm uses an average covariance to define the regularization term and the boat and water in Fig. 6(a) may have a similar covariance. For Fig. 6(g) the FCM-SM algorithm cannot perform well because the object is too small when compared with the background and that is the same reason for Fig. 6(f) which also has a poor performance from KLFCM algorithm. Both KLFCM and FCM-SM algorithms can not separate the lions from the grass ground as they have a similar color. The MFCM algorithm we proposed performs well on all the images since it introduces both Mahalanobis distance and a regularization term corresponding to the covariance of each cluster into the fuzzy clustering approach which can be suitable to all shapes and sizes of clusters and its robustness to cluster divergence.

To evaluate the segmentation results, we compute the total accuracy of Figs. 6(c)–(e) and (g) which have much simply boundaries than the rest of the images to evaluate the segmentation results of the algorithms. The results are list in Table 5
                      where it is not difficult to find that the KLFCM and FCM-SM algorithms do not suitable for all images and MFCM algorithm can get a better result than both of them.

@&#CONCLUSION@&#

In this paper a fuzzy clustering algorithm based on Mahalanobis distance is proposed. It defines the dissimilarity measure by Mahalanobis distance instead of Euclidean distance, because the Euclidean distance is sensitive to noise and divergence of clusters and the Mahalanobis distance is more accurate than the Euclidean distance as a dissimilarity measure when they are used to image segmentation. In order to use the dissimilarity measure effectively, a new regularization which is related to covariance of clusters is added into the objective function of the proposed MFCM algorithm. The effectiveness of the algorithm is experimentally demonstrated by segmenting a generated 2D dataset, a synthetic image and a subset of Berkeley image benchmarks. Since the MFCM algorithm can segment the cluster which is divergent into one class by consideration of the covariance, it is more accurate than KLFCM algorithm. The proposed algorithm only takes situations in the feature space into account and did not consider the neighborhood system in the image. In the future work, the information of neighborhood system should be considered to improve the segmentation results.

@&#REFERENCES@&#

