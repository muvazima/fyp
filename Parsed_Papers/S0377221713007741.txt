@&#MAIN-TITLE@&#Equilibrium network design of shared-vehicle systems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Formulates an equilibrium network design problem for shared-vehicle systems.


                        
                        
                           
                           Develops a bi-level framework to incorporate stakeholder perspectives.


                        
                        
                           
                           Employs a transformation for an exact solution technique.


                        
                        
                           
                           Presents analysis of solution for synthetic prototypical networks.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Equilibrium network design

Bi-level programs

Bicycle sharing

Car sharing

@&#ABSTRACT@&#


               
               
                  An equilibrium network design model is formulated to determine the optimal configuration of a vehicle sharing program (VSP). A VSP involves a fleet of vehicles (bicycles, cars, or electric vehicles) positioned strategically across a network. In a flexible VSP, users are permitted to check out vehicles to perform trips and return the vehicles to stations close to their destinations. VSP operators need to determine an optimal configuration in terms of station locations, vehicle inventories, and station capacities, that maximizes revenue. Since users are likely to use the VSP resources only if their travel utilities improve, a generalized equilibrium based approach is adopted to design the system. The model takes the form of a bi-level, mixed-integer program. Model properties of uniqueness, inefficiency of equilibrium, and transformations that lead to an exact solution approach are presented. Computational tests on several synthetic instances demonstrate the nature of the equilibrium configuration, the trade-offs between operator and user objectives, and insights for deploying such systems.
               
            

In recent years, vehicle sharing programs (VSPs) have garnered interest of urban communities across the world as an economical and sustainable solution for urban mobility. In their most flexible form, VSPs allow users to check out vehicles (bicycles, electric vehicles, or cars) close to their origins and drop them off at stations close to their destinations. For short trips, the shared-vehicle serves as an individual modal alternative. For longer trips, it serves as a vital leg of an intermodal route. For transit-based intermodal routes, VSPs increase travel utility by improving flexibility, offering greater departure time choice, and increasing transit accessibility. These improvements can serve to increase the adoption of transit in the United States (US), where the automobile is the dominant mode of transport (USDOT, 2001).

Shared-vehicle systems are increasingly prevalent in urban areas across the world. In 2010, bicycle sharing programs were estimated to exist in 125 cities with an additional 45 programs being planned (Shaheen, Guzman, & Zhang, 2010), while car sharing services exist in an estimated 1000 cities. In 2012, the number of existing and planned bicycle sharing systems is estimated at 480 (Meddin & DeMaio, 2012). From the supply side, private stakeholders and public agencies have recognized the value of these systems as the use of technology has mitigated the risk of theft. Users have found shared-vehicles to be profitable. Velib, the pioneering bicycle sharing system in Paris with 1450 stations and 20,000 bicycles, reports around 80,000 trips per day, with ridership as high as 120,000 (Erlanger, 2008) and an estimated two million trips within the first two years of operation (DeMaio, 2009). The Capital bikeshare system in Washington, DC with 114 stations and 1000 bicycles completed 1.4 million trips in its first year.

This paper addresses the system design of flexible VSPs from the perspective of the VSP operator. In practice, the organizational structure behind the design and operation of VSPs varies considerably for different cities. The term ‘VSP operator’ is designated herein as the entity responsible for designing the VSP system. The primary stakeholders involved with the design tasks can include public transportation agencies, public transit authorities, non-profit organizations, private for-profit companies, local communities and advertising companies. Transportation agencies typically initiate the design process by mandating operating standards. These standards can pertain to location of VSP stations, shared-vehicle inventories, integration of payment systems, and desired level-of-service. The agency may work with external service providers (non-profit entities, commercial providers, advertising agencies) to build out the system and operate it. These external service providers are paid through revenue-sharing agreements with the locality or through other means, such as advertising rights at VSP stations and on vehicles. Another business model involves private companies solely determining the configuration of the system, choosing to provide services where they may be most utilized. Thus, given the myriad forms in which the organizational roles can be structured, the VSP operator can either be a public agency or a private participator.

Regardless of the entity that provides the vehicle-sharing service, users utilize the system only if it reduces their travel disutility. The shared-vehicle system is an attractive individual modal alternative when shared-vehicles are available near the origin and destination of the user. For longer trips, the shared-vehicle can serve as a ‘last-mile’ connection for existing transit services. In this case, the urban transportation network can be viewed as a hierarchical network with the VSP serving as the feeder service to a transit backbone (see Fig. 1
                     ).

VSP operators must decide (1) where to locate stations, (2) the number of vehicle docking slots to provide, and (3) the initial number of vehicles to place at each station. An equilibrium network design model is proposed herein that optimally determines a VSP configuration, defined by location, capacity, and inventory at stations. The model recognizes the operator’s lack of control over the utilization of the system, since the usage of the VSP is driven by decisions on the part of patrons who seek to minimize their travel disutilities. As shared vehicles could be potentially used for longer trips, the model explicitly incorporates existing transit services to allow for intermodal paths. At the upper level, the VSP operator determines the optimal configuration of the system (supply). At the lower level, users respond to the VSP configuration and optimize their personal itineraries (demand). The VSP operator in turn adjusts the VSP configuration to maximize ridership. At equilibrium, the optimal configuration is one that supports travelers who derive utility from using the shared-vehicle to complete trips. Additionally, the VSP operator acts first to establish the service offerings, while users act as followers. This leader–follower framework results in a Stackelberg equilibrium that is modeled as a bi-level program. Since bi-level programs generally are non-convex and non-differentiable, specialized techniques are needed that make the problem tractable. When the follower’s problem is convex, known transformation techniques can be exploited to convert the model to a single-level program that is convex.

The resulting large mixed-integer program (MIP) can be solved using existing solvers.

The literature on shared-vehicle systems is growing as these systems are more widely adopted (Shaheen et al., 2010). Existing works deal with several aspects pertaining to the analysis, evaluation, design and operation of VSPs. Earlier studies focused on the qualitative characteristics that aim at determining the feasibility (Friedman, 1972; TRB, 2005a) and market potential based on surveys and demographic information (Katzev, 2003; Krykewycz, Puchalsky, Rocks, Bonnette, & Jaskiewicz, 2010; Shaheen, Meyn, & Wipyewski, 2003), and trip forecasts (Kek, Cheu, & Xu, 2004).

From a strategic perspective, system design has received little attention. Awasthi, Breuil, Chauhan, Parent, and Reveillere (2007, 2008) present a multi-criteria decision-making tool based on the analytic hierarchy process (AHP). Their framework relies on experts ranking stations based on various criteria, including land use, population density, vehicle ownership, transit access, and presence of target groups. Lin, Yang, and Chang (2013), Lin and Yang (2011) present a strategic design, where there is explicit consideration for level-of-service of users under stochastic utilization parameters. In addition to determining the location, the model computes flows that a station will handle along with bicycle paths that need to be built. However, the decisions of users and system planners are conflated to form a single objective function for optimizing the design of the system. This approach can be viewed as the system-optimal utilization of the shared-vehicle resources. In practice, however, users employ the system in a myopic fashion and employ a shared-vehicle trip only if it reduces their personal travel disutility, i.e. a user-optimal solution. The user-optimal solution recognizes the lack of control that system operators have over the vehicle fleet, making this distinction critical. Correia and Antunes (2012) present an optimization model that determines depot locations for car-sharing schemes. Their objective is to maximize profit for the operator considering operational costs of relocating the fleet to balance flows. Trip requests are known, and three operational schemes are explored, one where all trips are service, another where operators determine with trips to service, and a hybrid scheme which is conditional on availability. Martinez, Caetano, Eiró, and Cruz (2012) present a mixed-integer program that includes operational dimensions within the more strategic design model. The objective is to maximize net revenue. User preferences are estimated at the zone level using discrete choice models. Candidate sites are determined using a p-median problem formulation. In contrast, the presented approach explicitly considers user preferences and intermodalism in the design.

There has been some research interest in the operational characteristics of shared-vehicles. The authors (Nair & Miller-Hooks, 2011b; Nair, Miller-Hooks, Hampshire, & Bušić, 2012) have developed stochastic optimization models to generate management strategies that ensure system operations at a given reliability and show, for real-world systems, how fleet balancing can be performed to correct short-term demand asymmetry. Barth and Todd (1999) propose a fleet management strategy that shifts the burden to users who perform relocations, while other works have studied relocation issues and formulated decision support tools for the operators (Kek, Cheu, & Chor, 2006, 2009; Kek & Cheu, 2005). More recent work includes a static repositioning model using a user dissatisfaction function (Raviv et al., working paper) and inclusion of routing decisions of service vehicles that perform the redistribution. The latter problem is a variant of the pickup and drop off problem (see recent reviews by Berbeglia, Cordeau, Gribkovskaia, & Laporte, 2007, 2010, for static & dynamic versions). Due to the combinatorial nature of routing decisions, these models can be significantly more challenging to solve for real-world systems. From the machine learning perspective, there have been research efforts aimed at establishing patterns of system utilization (Kaltenbrunner, Meza, Grivolla, Codina, & Banchs, 2010), measurement (Froehlich, Neumann, & Oliver, 2008), and sensing and prediction (Froehlich, Neumann, & Oliver, 2009).

Another pertinent aspect of the literature is the integration of transit with other modes for improving mobility. Several works have studied the role of ‘feeder’ modes to transit lines (Rodier et al., 2004; Shaheen & Rodier, 2006; Shaheen, Rodier, & Seelig, 2005; TRB, 2005b). The main focus of these studies has been in integrating bicycles and other slow modes with transit through the use of technology to provide better accessibility.

The proposed model is strongly aligned with the access network design problem, which arises in other sectors, such as telecommunications (Balakrishnan, Magnanti, Shulman, & Wong, 1991; Berger & Raghavan, 2004), computer networks (Patrick, 1977), and capacity expansion problems in various industries. These previous studies are tailored to problems where the same entity allocates the resources and then determines how they are utilized. In the case of VSPs, however, the operator who designs the network has little control over the fleet of vehicles. Users independently decide where to check out vehicles, the duration of the trip, and where to return them. Control of the resources effectively rests in the hands of users. This is an important distinction that precludes the use of previously proposed models and motivates this work.

It appears that no previous work has studied the design of shared-vehicle systems from a quantitative, network-based approach where the objectives of the different stakeholders are taken into consideration. This paper closes the gap in the literature and makes the following contributions. A framework for designing a shared-vehicle system that works in conjunction with existing transit services and infrastructure is developed. The network design problem is modeled as a mixed-integer, bi-level program, where the differing objectives of the VSP operator and users are considered. Key properties of the formulation are discussed and an exact solution approach is developed. Upper and lower bounds on the equilibrium model are presented. The model is tested on several synthetic networks. Experimental results show the nature of optimal designs and the trade-offs between the objectives of VSP operators and users, and provide managerial insights that feed into public policies for urban communities wanting to implement such systems.

Given (a) an existing transit network configuration, (b) a set of candidate sites for sharing stations, (c) resource, site, and equity constraints for the VSP operator, (d) behavioral assumptions of transit riders, and (e) static demand, an optimal VSP system configuration that maximizes VSP operator revenue is sought.

The VSP system configuration is defined by the location of VSP stations, the capacity at each station, and the inventory of vehicles at each station. For car-sharing systems, the capacity represents actual parking spaces available for shared-vehicles. For bicycle-sharing systems, capacity is the number of slots available where the shared-bicycles can be docked. The inventory represents the initial number of vehicles at each station for a particular time period. For flexible VSPs, users relocate shared-vehicles from one station to another during the course of a day. As the network design problem is of a strategic nature, the period-to-period operational characteristics are only considered in a simplified manner though the use of a checkout replacement ratio. The demand for resources at a VSP station can be for spaces (returns) or for vehicles (checkouts). The checkout replacement ratio discounts the available capacity of a station to accommodate user movement of vehicles between stations. Essentially, in the strategic network design model, a fraction of vehicles is assumed to be replaced at each station to mimic fleet redistribution by users. It is assumed that the VSP operator initiates operational strategies that aim to achieve the target inventory levels. Such operational strategies have been presented elsewhere by the authors (Nair & Miller-Hooks, 2011b; Nair et al., 2012) and others (Barth & Todd, 1999; Kek, Cheu, Meng, & Fung, 2009).

To ensure high utilization, shared-vehicle stations should be located in areas that provide value-addition to users. While for shorter trips VSPs can be construed as a modal alternative, longer trips can be intermodal in nature with shared-vehicle segments. To exploit the potential for intermodalism, an optimal VSP design should be strongly coupled with the existing transportation services and infrastructure. Therefore, in developing a model for system design, the role of VSPs within the overall context of urban transportation needs to be explicitly considered.

The VSP operator who determines the optimal configuration has different motives from users that utilize the system. The relationship between the two stakeholders is non-cooperative, since there is no central coordination that determines how users move through a transportation network. This non-cooperative nature of the stakeholders results in a leader–follower framework. These two perspectives are described next.

In addition to the VSP configuration, a network representation of transportation ‘supply’ includes transit services and facilities. Transit networks possess unique characteristics that differ from other transportation networks mainly due to the manner in which users navigate through the system. A transit network must account for walk access, waiting at transit stops, and intermodal paths, and additionally model various services that allow users to reach their destinations. The introduction of a new shared-vehicle system to access the transit network adds an additional means of access. Users moving from origins to destinations could potentially use the VSP to complete their trips should the VSP provide greater travel utility than using transit. Alternatively, users could couple the VSP with transit to generate an intermodal route that maximizes travel utility. This coupling is achieved through the provision of efficient modal interfaces between VSP and transit systems. In practice, a quick transfer from VSP to transit would imply physical proximity of shared stations to transit stations, unified payment systems for VSP and transit for quick transfers, and adequate VSP station capacity near transit stations to ensure high level-of-service. The resulting network has a hierarchical structure as shown in Fig. 2
                        .

The network is represented by a graph 
                           
                              G
                              (
                              V
                              ,
                              A
                              )
                           
                        , where V is a set of nodes and A is a set of arcs connecting nodes of the network. The set A includes a subset of non-frequency based arcs denoted by 
                           A
                        . These include all sharing links, transfer links, and walk links. For frequency-based links that represent transit services, each link has an associated frequency parameter f
                        
                           ij
                        , (i,
                        j)∈
                        A⧹
                           A
                        . Each arc (i,
                        j)∈
                        A is characterized by a pair (c
                        
                           ij
                        ,
                        g
                        
                           ij
                        ), where c
                        
                           ij
                         is a nonnegative travel time (or cost) and g
                        
                           ij
                         is the distribution function for the waiting time for transit service (Spiess & Florian, 1989). If c
                        
                           ij
                         represents travel costs, there is an implicit assumption that the value of time is constant for all users represented in the demand matrix. For arcs where no waiting is involved, g
                        
                           ij
                        
                        =0. Users traveling through arcs with waiting include a waiting time at the node leading up to the frequency-based links. The waiting time for these ‘access’ links is determined by the frequency of the services f
                        
                           ij
                         at their terminal node j.

A VSP operator aims to configure a shared-vehicle system around existing transit lines. The graph 
                           
                              G
                              (
                              V
                              ,
                              A
                              )
                           
                         includes all candidate sites that a VSP operator considers. The vehicle sharing sub-network is denoted as 
                           
                              
                                 
                                    G
                                 
                                 
                                    s
                                 
                              
                              (
                              
                                 
                                    V
                                 
                                 
                                    s
                                 
                              
                              ,
                              
                                 
                                    A
                                 
                                 
                                    s
                                 
                              
                              )
                           
                        , where V
                        
                           s
                        
                        ⊆
                        V is the set of candidate sharing sites. Since users of shared vehicles can potentially return vehicles at any station, 
                           
                              
                                 
                                    G
                                 
                                 
                                    s
                                 
                              
                           
                         is a strongly connected subgraph. A
                        
                           s
                         is the set of (vehicle) sharing arcs and can be construed in two ways, either as having a single arc for each pair of sharing stations, or as a set of arcs that link each sharing station to the transport network. Similar to each arc in 
                           
                              G
                           
                        , all sharing arcs have an associated travel cost (or time). Each sharing arc also has an associated revenue r
                        
                           ij
                         for the operator.

The core of any system designed to provide and improve mobility is its users. Users are assumed to behave in a selfish manner to maximize their personal travel utilities. Demand for VSP services is determined by value addition of shared-vehicles to existing routes. Should the VSP configuration provide users with improved trip times (or lower costs), the VSP would attract trips. From a modeling perspective, the demand aspect is incorporated by explicitly considering this utility-maximizing user behavior. However, three considerations limit the sophistication with which user behavior can be incorporated. First, VSPs are a novel and innovative mobility solution. The reaction of users to innovation is inherently uncertain and difficult to ascertain. To this extent, the user reaction is based solely on trip attributes of travel time and cost, while the alternative specific utility (or disutility) is omitted. In the context of mode choice models, alternative specific utilities quantify the innate preferences of users for specific modal alternatives. Secondly, with the inclusion of transit networks, a model of how users navigate through transit is needed. Over the past few decades, several works have focused on transit assignment problems that deal with this issue. More recent developments such as those that apply optimal strategies (Spiess & Florian, 1989) and their variants (Constantin & Florian, 2010; Florian & Constantin, 2011), hyperpaths (Gallo, Longo, & Pallottino Sang, 1993; Marcotte, Nguyen, & Schoeb, 2004; Nguyen & Pallottino, 1988; Wu, Florian, & Marcotte, 1994), agent-based assignment (Wahba & Shalaby, 2009; Wang, Wahba, & Miller, 2010) and dynamic intermodal paths (Lozano & Storchi, 2001; Ziliaskopoulos & Wardell, 2000), incorporate the probabilistic aspect by which users choose transit services. Third, there are challenges in adequately accounting for congestion effects and capacity constraints within equilibrium assignment for both transit and general networks.

Conceptually, the inclusion of side-constraints, such as capacities on certain links, is inconsistent with Wardrop’s principles, since should the capacity be exceeded, some users experience a longer travel time than others. In general networks, the approach to tackle this has been through the definition of a generalized Wardrop’s equilibrium (Hearn & Ribera, 1980; Larsson & Patriksson, 1992). The idea is to move the capacity constraint to the objective function using arbitrary Lagrangian multipliers. The resulting assignment model is the same, but contains additional cost terms for users. These have been interpreted as congestion costs, or ‘queuing costs’. Wardrop’s equilibrium is then consistent for this generalized cost function.

Specifically for transit assignment, the problem of capacities along transit services has been dealt with in a different manner using a concept of ‘effective frequencies’ (Spiess & Florian, 1989). Several works (Cepeda, Cominetti, & Florian, 2006; Cominetti & Correa, 2001; de Cea & Fernández, 1993; Schmocker, Bell, & Kurauchi, 2008) show how capacity constraints along service lines can be modeled by relating the effective frequency to the flows on the service using a volume delay function. The aim of these works is to increase the realism of transit-based trips, where waiting users may adapt paths to take advantage of more frequent services and account for congestion effects.

In contrast to the effective frequency approach, Marcotte et al. (2004) present a different notion of capacities. To include how users may incorporate real-time information or vehicle availability, the strategies are ordered, indicating user preferences. A key point to note is that their strategic model considers access probabilities to be flow-dependent. This is in contrast to other transit assignment models (including the one used in this paper) where these are assumed to be fixed and driven by supply-side considerations like frequency. Access probabilities are defined for arcs that are above capacity as the ratio of capacity to flow. While this consideration allows for greater realism in user response to capacities, there is considerable added complexity for network design purposes.

Since the optimal configuration involves sizing decisions of stations, there are inherent capacity considerations that need to be accounted for along certain portions of the network. Since these capacity constraints are along non-frequency links, a generalized Wardrop equilibrium model is considered. Under this notion, at equilibrium, paths with residual capacity have costs that are greater than any paths carrying flow. As the capacity constraints occur on shared-vehicle segments, this additional cost can be viewed as the recourse cost of finding another station/dock with additional capacity.

In this paper, the optimal strategy concept of Spiess and Florian (1989) is extended to include the VSP component. An optimal strategy is defined by a set of arcs denoted by 
                           
                              
                                 
                                    A
                                 
                                 
                                    ‾
                                 
                              
                           
                        . A strategy can include any number of simple paths and defines elements of the user’s route or service choice until the destination is reached. Users waiting at a transit stop with multiple service lines are assumed to choose the transit service that is more frequent, thereby reducing travel time and expected waiting time. This approach is used in state-of-the-practice transit assignment software, such as EMME/2. The problem of finding an optimal strategy can be formulated as a linear program. In this work, the optimal strategy is extended that considers VSP access links and capacity constraints on the VSP portion of the strategy. With the inclusion of capacity constraints, the model results in a generalized user equilibrium assignment. Additionally, while the optimal strategies model approaches the assignment from a user perspective, it also represents the system-optimal solution, since congestion effects are not considered.

The leader–follower network design problem can be mathematically expressed as a bi-level program using the following notation. The VSP operator’s decision variables are x
                        
                           i
                        , a binary variable on whether or not to build at site i, i
                        ∈
                        V
                        
                           s
                        ; y
                        
                           i
                        , an integer variable on the capacity at node i; and z
                        
                           i
                        , the number of vehicles located at i. The location and capacities of shared-vehicles are determined by equilibrium flows, which in turn are determined by where the shared-vehicles are located. A shared-system configuration is represented by a 3-tuple (x,
                        y,
                        z) denoted as x.

The upper-level problem, from the perspective of the VSP operator, is to determine the optimal VSP configuration (x,
                        y,
                        z) such that the revenue resulting from shared-vehicle flows is maximized. The VSP operator must consider site limitations for each candidate site, budget constraints that limit the number of stations that can be built, and additional political or equity constraints. The total available budget is denoted by C. The cost components include station setup costs, c
                        
                           s
                        , costs for each additional parking slot, c
                        
                           p
                        , and unit cost per vehicle, c
                        
                           v
                        . These components can be site dependent, i.e. c
                        
                           pi
                         instead of c
                        
                           p
                        , but are assumed to be the same across all sites without loss of generality.

The lower-level problem, from the perspective of users, is to determine the flows on the network that maximize travel utility. Users traveling between various origin–destination (OD) pairs minimize their travel and waiting time. OD pairs are denoted by the set K (indexed by k). Let D
                        
                           ik
                         represent the demand from node i to a destination node for index k. Demand can be derived from peak-period flows, or from daily trip generation rates. A link from node i to j has an associated flow decision variable for each OD pair denoted by v
                        
                           ijk
                        . Additionally, each node of the transit network has an associated decision variable, w
                        
                           ik
                        , representing the total waiting time experienced by users in OD pair k at node i. The lower-level follower decision variables (v,
                        w) are continuous and are denoted by v. Let a denote the checkout replacement ratio, which is a coarse representation of operational decisions that the supplier will make. For example, a
                        =1 implies that there must be sufficient capacity to handle checkouts and returns. a
                        >1 implies that returns may exceed capacity in anticipation of future checkouts. Additionally, M denotes a large constant.

The bi-level network design problem (BLNDP) can be written as:
                           
                              Upper level:

Lower-level:

The VSP operator seeks to maximize revenue of shared-flows throughout the sharing network (1). The flow, however, is not determined by the operator. The operator provides a network configuration (x,
                        y,
                        z) subject to budget constraint (2). Constraints (3) state that slots can be available only if a station exists at the site. Constraints (4) restrict the number of vehicles assigned to a particular site to be less than the site capacity. The site limitations are stated in constraints (5). Constraints (6) restrict the location variables x
                        
                           i
                         to be binary and constraints (7) restrict the decision variables y
                        
                           i
                         and z
                        
                           i
                         to be integer.

In the lower-level problem, users react to a VSP configuration (x,
                        y,
                        z) by minimizing their travel times and waiting times (8). The set of flow conservation relations for each node are given by constraints (9). Constraints (10) relate the travel time and waiting time for frequency based links. The detailed derivation of this set of constraints from the optimal strategies concept is presented in Spiess and Florian (1989). Constraints (11) and (12) restrict flow on sharing arcs that have stations to support the travel. Constraints (13) and (14) are capacity constraints of the sharing stations. Flow and waiting times must be non-negative as enforced by constraints (15) and (16). Note that the upper-level formulation has an objective involving lower-level variables. In addition, the dual variables for each of the lower-level constraints are indicated parenthetically.

The generalized equilibrium network design problem is a bi-level, mixed-integer program. Programs of this class typically have non-convex feasible regions rendering them intractable for most cases. For cases when the lower-level portion of the formulation is convex, transformation techniques have been presented in the literature that convert bi-level programs to mathematical programs with equilibrium constraints (MPEC) which can then be transformed to mixed-integer programs. The optimal strategies formulation possesses the required convexity property, motivating its use in the presented formulation. This property is exploited for the exact solution method presented next.

The solution approach outlined in this section uses a transformation that exploits the convexity of the lower-level problem. The basic solution concept follows methods proposed in the literature (Audet, Hansen, Jaumard, & Savard, 1997; Colson, Marcotte, & Savard, 2007). For a given upper-level design, the lower-level problem is a program with linear objective and linear constraints. This is equivalent to the optimal strategy program of Spiess and Florian (1989) with the additional constraints to model VSP flows and capacities. Since it is a convex program and satisfies linear constraint qualifications (CQ), the Karush–Kuhn–Tucker (KKT) conditions are both necessary and sufficient. The lower-level optimization problem can be replaced by the KKT conditions to yield a mathematical program with equilibrium constraints (MPEC). The only nonlinearities are due to the presence of complementarity constraints, which can be transformed to a set of linear disjunctive constraints using auxiliary binary variables. The resulting program is a large MIP that can be solved using existing MIP solvers. The transformation represents the optimistic formulation, since the lower-level decisions that are most favorable to the operator are chosen.

The KKT conditions for the lower-level program defined by Eqs. (8)–(16) are derived. To ensure that the KKT conditions are valid, the existence of a solution for the lower-level needs to be demonstrated. The proof of the existence is shown in Proposition 1 of Section 4. The proof assumes that the underlying graph is strongly connected, a valid assumption for urban transit networks. With the existence of the lower-level solution, the KKT conditions can be derived for the program defined by objective (8) and constraint set (9)–(16). For brevity, the conditions are merely stated, since the derivation from the Lagrangian function is straightforward but tedious.

The stationarity conditions are
                           
                              (17)
                              
                                 1
                                 -
                                 
                                    
                                       λ
                                    
                                    
                                       ik
                                    
                                 
                                 -
                                 
                                    
                                       A
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 0
                                 
                                 i
                                 ∈
                                 V
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        and
                           
                              (18)
                              
                                 
                                    
                                       c
                                    
                                    
                                       ij
                                    
                                 
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       ik
                                    
                                 
                                 -
                                 
                                    
                                       α
                                    
                                    
                                       jk
                                    
                                 
                                 -
                                 
                                    
                                       μ
                                    
                                    
                                       ijk
                                    
                                 
                                 +
                                 B
                                 +
                                 C
                                 =
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ,
                                 k
                                 ∈
                                 K
                                 ,
                              
                           
                        where
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                A
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     ∑
                                                                  
                                                                  
                                                                     k
                                                                     ∈
                                                                     K
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  β
                                                               
                                                               
                                                                  ijk
                                                               
                                                            
                                                            
                                                               
                                                                  f
                                                               
                                                               
                                                                  ij
                                                               
                                                            
                                                         
                                                         
                                                            if
                                                            
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                            ∈
                                                            A
                                                            ⧹
                                                            
                                                               
                                                                  A
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            o
                                                            .
                                                            w
                                                            .
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          B
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  β
                                                               
                                                               
                                                                  ijk
                                                               
                                                            
                                                         
                                                         
                                                            if
                                                            
                                                            (
                                                            i
                                                            ,
                                                            j
                                                            )
                                                            ∈
                                                            A
                                                            ⧹
                                                            
                                                               
                                                                  A
                                                               
                                                               
                                                                  ̲
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            o
                                                            .
                                                            w
                                                            .
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              
                                 C
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         γ
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         δ
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         ζ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         η
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                                
                                                   if
                                                   
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   ∈
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         s
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   o
                                                   .
                                                   w
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The primal feasibility constraints are (9)–(16). Dual feasibility implies the following.
                           
                              (19)
                              
                                 
                                    
                                       β
                                    
                                    
                                       ijk
                                    
                                 
                                 ⩾
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ⧹
                                 
                                    
                                       A
                                    
                                    
                                       ̲
                                    
                                 
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       γ
                                    
                                    
                                       ij
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       δ
                                    
                                    
                                       ij
                                    
                                 
                                 ⩾
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       ζ
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       η
                                    
                                    
                                       i
                                    
                                 
                                 ⩾
                                 0
                                 
                                 i
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       λ
                                    
                                    
                                       ik
                                    
                                 
                                 ⩾
                                 0
                                 
                                 i
                                 ∈
                                 V
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       ijk
                                    
                                 
                                 ⩾
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                     

The set of complementarity conditions are as follows.
                           
                              (24)
                              
                                 
                                    
                                       β
                                    
                                    
                                       ijk
                                    
                                 
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       ijk
                                    
                                 
                                 -
                                 
                                    
                                       f
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ik
                                    
                                 
                                 )
                                 =
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ⧹
                                 
                                    
                                       A
                                    
                                    
                                       ̲
                                    
                                 
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       γ
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                v
                                             
                                             
                                                ijk
                                             
                                          
                                          -
                                          
                                             
                                                Mx
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 =
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       δ
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                v
                                             
                                             
                                                ijk
                                             
                                          
                                          -
                                          
                                             
                                                Mx
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                 
                                 =
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 
                                    
                                       A
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (27)
                              
                                 
                                    
                                       ζ
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   j
                                                   ,
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   ∈
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         s
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                v
                                             
                                             
                                                ijk
                                             
                                          
                                          -
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 =
                                 0
                                 
                                 i
                                 ∈
                                 
                                    
                                       I
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (28)
                              
                                 
                                    
                                       η
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   j
                                                   ,
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   ∈
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         s
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                v
                                             
                                             
                                                ijk
                                             
                                          
                                          -
                                          a
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    
                                 
                                 =
                                 0
                                 
                                 i
                                 ∈
                                 
                                    
                                       I
                                    
                                    
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (29)
                              
                                 
                                    
                                       λ
                                    
                                    
                                       ik
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ik
                                    
                                 
                                 =
                                 0
                                 
                                 i
                                 ∈
                                 V
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                        
                           
                              (30)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       ijk
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       ijk
                                    
                                 
                                 =
                                 0
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                     

The MPEC is defined by objective (1), upper-level constraints (2)–(7), KKT primal feasibility constraints (9)–(16), KKT stationarity conditions (17) and (18), dual feasibility constraints (19)–(23), and complementarity constraints (24)–(30). All functions involved are linear with decision variables that are both integer and continuous. The only problematic nonlinear constraint set is the complementarity constraint set (24)–(30).

The complementarity constraints can be made linear by using a binary variable. In general, a complementarity constraint of the form z(q
                        +
                        Qz)=0 can be modeled as two linear constraints using a binary variable, u, as z
                        ⩽
                        Mu and q
                        +
                        Qz
                        ⩽
                        M(1−
                        u), where M is a large constant that provably exists (Audet et al., 1997). Using this transformation, the set of complementarity constraints (24)–(30) is reduced to linear constraints. As an example, introducing a set of binary variables u
                        
                           ijk
                        , (24) can be written as two linear constraints as follows. The remaining transformations are omitted, since they follow the same principle.
                           
                              (31)
                              
                                 
                                    
                                       β
                                    
                                    
                                       ijk
                                    
                                 
                                 ⩽
                                 
                                    
                                       Mu
                                    
                                    
                                       ijk
                                    
                                 
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ⧹
                                 
                                    
                                       A
                                    
                                    
                                       ̲
                                    
                                 
                                 ,
                                 
                                 k
                                 ∈
                                 K
                              
                           
                        
                        
                           
                              (32)
                              
                                 
                                    
                                       v
                                    
                                    
                                       ijk
                                    
                                 
                                 -
                                 
                                    
                                       f
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ik
                                    
                                 
                                 ⩽
                                 M
                                 (
                                 1
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       ijk
                                    
                                 
                                 )
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 ∈
                                 A
                                 ⧹
                                 
                                    
                                       A
                                    
                                    
                                       ̲
                                    
                                 
                                 ,
                                 
                                 k
                                 ∈
                                 K
                                 ,
                              
                           
                        
                        
                           
                              (33)
                              
                                 
                                    
                                       u
                                    
                                    
                                       ijk
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                              
                           
                        
                     

The BLNDP can, therefore, be expressed as a MIP. The BLNDP-MIP is defined by objective (1), upper-level constraints (2)–(7), KKT primal feasibility constraints (9)–(16), KKT stationarity conditions (18) and (17), dual feasibility constraints (19)–(23), and the set of transformed complementarity constraints. This large MIP can be solved exactly by using existing MIP solvers, such as CPLEX. For practical cases, some of the integer design variables, such as y and z, can be relaxed to be continuous to reduce the combinatorial nature of the problem.

The large constant M must be chosen a priori and is critical from a computational standpoint. A very large value for M leads to poor bounds from linear relaxation and introduces numerical stability issues. An M that is too small risks cutting off the optimal solution. In numerical experiments on synthetic, prototypical transit networks in Section 5, M was computed as the maximum possible flow times 2.5. In Eq. (3), M can be set to y
                        
                           ub
                        .

The aim of this section is to analyze the properties of the proposed model. Equilibrium solutions of bi-level programs are known to be inefficient since the stakeholders do not cooperate. An inefficient solution is one that can be improved to yield better outcomes for either the leader or follower, or both. This property is examined with respect to BLNDP and the inefficiency is shown to be only from the user perspective. The supplier advantage of acting first, coupled with the non-cooperation of suppliers and users, ensures that the solution cannot be improved for the VSP operator. The users however have an objective that is, in some sense, secondary, since they follow supplier decisions. This leads to solutions that need not be optimal for users. To counter this, incentives to operators, in the form of subsidies, may be considered so that the system is designed for the benefit of users. The extent of the subsidies are discussed further in Section 5. The main results in this section pertain to the characterization of the equilibrium solution, uniqueness, and bounds on the equilibrium solution.

The bi-level program BLNDP presented in the previous section can be written using concise notation as follows.
                        
                           (34)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   max
                                                
                                                
                                                   x
                                                   ∈
                                                   X
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          F
                                          (
                                          v
                                          )
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                       
                                    
                                    
                                       
                                          
                                          G
                                          (
                                          x
                                          ,
                                          v
                                          )
                                          ≤
                                          0
                                          ,
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   min
                                                
                                                
                                                   v
                                                   ∈
                                                   V
                                                
                                             
                                          
                                          
                                          f
                                          (
                                          v
                                          )
                                          ,
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          s
                                          .
                                          t
                                          .
                                          
                                          g
                                          (
                                          x
                                          ,
                                          v
                                          )
                                          ⩽
                                          0
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where x
                     =(x,
                     y,
                     z) and v
                     =(w,
                     v) are the leader and follower decision vectors respectively, F(v) and f(v) are the upper and lower-level objective functions, and G(x,
                     v), g(x,
                     v) are the upper and lower constraint sets. All functions are linear in decision variables. Given a feasible VSP configuration x, the followers’ (users’) feasible region Ω(x) is defined as
                        
                           (35)
                           
                              Ω
                              (
                              x
                              )
                              =
                              {
                              v
                              |
                              g
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              
                              v
                              ∈
                              V
                              }
                              .
                           
                        
                     The followers’ rational reaction set Ψ(x) is defined as
                        
                           (36)
                           
                              Ψ
                              (
                              x
                              )
                              =
                              {
                              v
                              |
                              v
                              =
                              arg
                              
                                 
                                    
                                       min
                                    
                                    
                                       v
                                    
                                 
                              
                              
                              f
                              (
                              v
                              )
                              ;
                              v
                              ∈
                              Ω
                              (
                              x
                              )
                              }
                              .
                           
                        
                     The inducible region IR is the set over which the VSP operator optimizes the system configuration given that users choose from their rational reaction set.
                        
                           (37)
                           
                              IR
                              =
                              {
                              (
                              x
                              ,
                              v
                              )
                              |
                              G
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              
                              x
                              ∈
                              X
                              ,
                              
                              y
                              ∈
                              Ψ
                              (
                              x
                              )
                              }
                              .
                           
                        
                     
                     
                        Proposition 1
                        
                           If the graph 
                           
                              
                                 G
                                 (
                                 V
                                 ,
                                 A
                                 )
                              
                            
                           is strongly connected with all frequency arcs having non-zero frequencies, the followers’ feasible region Ω(x) is non-empty and the followers’ rational reaction set Ψ(x) is uniqu or has infinitely many solutions at the same cost for any design 
                           x.

If the graph 
                              
                                 G
                                 (
                                 V
                                 ,
                                 A
                                 )
                              
                            is strongly connected, there exists a feasible path from every origin to every destination. Since there are no capacity constraints on transit links, the followers’ optimal strategy for each OD pair is never infeasible, as it can involve at least one feasible transit path. This is independent of the design vector x. A set of path flows uniquely determines arc flows (Ahuja, Magnanti, & Orlin, 1993), therefore, the lower-level program is always feasible. For feasible linear programs, there can be either a unique or infinitely many solutions all with the same cost.□


                     Proposition 1 implies that an optimal solution to the lower-level model exists and that the Karush–Kuhn–Tucker (KKT) conditions can be applied (Section 3). The lower-level model has a unique solution regardless of the upper-level decisions. However, there are multiple configurations for the shared-vehicle system that would result in the same optimal revenue. If x
                     ∗ is the optimal upper-level solution with a corresponding optimal lower-level v
                     ∗ solution, we have the following proposition.
                        Proposition 2
                        
                           The optimum solution (
                           x
                           ∗
                           ,
                           
                           v
                           ∗
                           ) to the bi-level program 
                           (34) 
                           is not necessarily unique.
                        

Consider the network shown in Fig. 3
                            with a single origin–destination pair with flow of 10 units, four VSP station candidate sites A, B, C and D and three shared links (A
                           −
                           D, B
                           −
                           D, and C
                           −
                           D) that form A
                           
                              s
                           , the shared network with revenues and costs as shown. The other links are not part of the shared-network. Fig. 3a shows the flow without a sharing network. Fig. 3b, c, and d shows three alternate configurations that lead to the same revenues, F(v), but are based on different flow patterns. Assume a cost structure c
                           
                              s
                           , c
                           
                              p
                           , and c
                           
                              v
                            and budget C such that all shown configurations are feasible. The resulting cost to users f(v) for these three patterns are different, however. If users could decide the configuration of the system without regard for revenue, the configuration shown in Fig. 3e would result. This leads to the best value for the lower-level objective, but sub-optimal revenue and, thus, a suboptimal solution. Thus as a result of non-cooperation between leader and follower, potentially optimal solutions are excluded from consideration. Additionally, the optimal solution is inefficient with respect to the lower-level.

In terms of a related, but independent, concept from multi-objective programming, the optimal solution (x
                     ∗,
                     v
                     ∗) to the BLNDP is not necessarily Pareto-optimal or efficient. A Pareto-optimal solution is always efficient and is of theoretical interest, since the set of Pareto-optimal solutions represents the best both VSP operator and users can jointly achieve and serves as a benchmark to quantify inefficiency of the equilibrium solution. Inefficient equilibria have been studied in other contexts (Correa & Stier-Moses, 2007; Roughgarden & Tardos, 2002; Swamy, 2007). Despite its theoretical appeal, a Pareto-optimal network design for the current context is inappropriate, since jointly optimizing two disparate objectives of VSP operators and users is logically inconsistent, leading to unrealistic situations where some users accept longer travel times to improve the VSP operator’s revenue objectives. Fig. 3e shows an efficient Pareto-optimal solution which leads to sub-optimal revenue. While no ‘simple relationship’ exists between Pareto-optimal and equilibrium solutions (Marcotte & Savard, 1991), if the users follow their optimal strategies, the leader objective cannot be improved. This implies that the operator’s resource allocation decisions are optimal for the revenue objective. However, the lower-level objective function can potentially be sub-optimal.
                        Proposition 3
                        
                           If 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                1
                                             
                                             
                                                ∗
                                             
                                          
                                          ,
                                          
                                             
                                                v
                                             
                                             
                                                1
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                 
                              
                            
                           and 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                             
                                                ∗
                                             
                                          
                                          ,
                                          
                                             
                                                v
                                             
                                             
                                                2
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                 
                              
                            
                           are two equilibrium solutions to BLNDP, then one solution is dominated by the other. Without loss of generality, 
                           
                              
                                 F
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                1
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                 
                                 =
                                 F
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                2
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                 
                              
                            
                           and 
                           
                              
                                 f
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                1
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                 
                                 ⩽
                                 f
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                2
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                 
                              
                           
                           .
                        

Compare Fig. 3b, c, and d. The VSP operator is indifferent to these designs, since F(v)=20 for the three configurations. However, from the user’s perspective, Fig. 3b is preferable as it offers the best lower-level objective (f(v)=20 as compared to 30 and 25).□

Therefore, the VSP operator seeking to maximize revenue can determine the equilibrium configuration based on user paths that are optimal given the configuration, but potentially sub-optimal if alternate equilibrium configurations are considered. Thus, the inefficiency of the equilibrium solution is due to the suboptimal lower-level objective from the perspective of users. The next result aims to bound the extent of this suboptimality of the lower-level objective.

Recall that the lower-level objective (8) represents the total travel time of users. The upper bound for this objective employs a straightforward idea. Users include shared-vehicle legs on their intermodal shortest path only if it improves their travel utility. Therefore, the lower-level travel time objective is bounded above by the shortest transit path without shared-vehicles. Further, the lower-level objective can be bounded below based on the following idea. If users were allowed to allocate shared-vehicle resources to minimize travel time without regard for revenue, they would achieve the best system-wide travel time. Any consideration of revenue is at the expense of increasing travel time for users. Formally, these concepts can be expressed using some additional notation. Let
                        
                           (38)
                           
                              UL
                              =
                              {
                              (
                              x
                              ,
                              v
                              )
                              |
                              (
                              x
                              ,
                              v
                              )
                              =
                              
                                 
                                    
                                       max
                                    
                                    
                                       x
                                    
                                 
                              
                              
                              F
                              (
                              v
                              )
                              ,
                              G
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              g
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              x
                              ∈
                              X
                              ,
                              v
                              ∈
                              V
                              }
                              ,
                           
                        
                     
                     
                        
                           (39)
                           
                              LL
                              =
                              {
                              (
                              x
                              ,
                              v
                              )
                              |
                              (
                              x
                              ,
                              v
                              )
                              =
                              
                                 
                                    
                                       min
                                    
                                    
                                       v
                                    
                                 
                              
                              
                              f
                              (
                              v
                              )
                              ,
                              G
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              g
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              x
                              ∈
                              X
                              ,
                              v
                              ∈
                              V
                              }
                              ,
                           
                        
                     
                     
                        
                           (40)
                           
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              =
                              {
                              v
                              |
                              v
                              =
                              
                                 
                                    
                                       min
                                    
                                    
                                       v
                                    
                                 
                              
                              
                              f
                              (
                              v
                              )
                              ,
                              g
                              (
                              x
                              ,
                              v
                              )
                              ⩽
                              0
                              ,
                              x
                              =
                              0
                              ,
                              v
                              ∈
                              V
                              }
                              .
                           
                        
                     
                  


                     UL represents the best the VSP operator can do subject to resource constraints. However, this solution is not bi-level feasible, since the user objective function is not considered. Therefore, the path flows generated using UL do not follow optimal strategies. LL represents the design and associated flow patterns if users are allowed to allocate shared-vehicle resources subject to VSP operator constraints. The revenue maximization objectives of the operator are not considered. This solution represents the best design–flow combination for the users. v
                     
                        0
                     , termed the base flows, is the flow vector when no shared-vehicle resources are deployed. This flow vector represents the best travel time users experience without shared-vehicles.
                        Proposition 4
                        
                           The lower-level objective value of the equilibrium solution is bounded by the lower-level optimum solution and the base-flows, i.e. f
                           
                              LL
                           
                           (
                           v
                           )
                           ⩽
                           f(
                           v
                           ∗
                           )
                           ⩽
                           f(
                           v
                           
                              0
                           
                           ).
                        

If any equilibrium solution has a system travel time that is lower than the LL solution, then that should necessarily represent the best solution from the user perspective. Therefore, the equilibrium solution cannot perform better than this user-perspective solution, giving f
                           
                              LL
                           (v)⩽
                           f(v
                           ∗). Flow between any origin–destination pair uses shared-vehicle resources only if the shortest path has a travel cost less than the shortest transit path, represented by the base flows. Therefore, f(v
                           ∗)⩽
                           f(v
                           
                              0
                           ).□


                     Fig. 4
                      summarizes these bounds graphically by plotting each of the solutions in the criterion space defined by the two objectives. The (potentially multiple) equilibrium solutions, all have the same revenue F(v
                     ∗), but have differing values for the lower-level objective. The lower-level objective is bounded by f
                     
                        LL
                     (v) below and f(v
                     
                        0
                     ) above. The (unattainable) utopian point is where both objectives for operator and users reach their respective optimal values.

The tightness of the upper-bound f(v
                     
                        0
                     ) on the lower-level objective f(v) depends on the problem instance. Since all the upper-level integer variables are fixed, only the continuous lower-level problem needs to be solved. Therefore, this bound can be computed relatively easily.

@&#EXPERIMENTAL RESULTS@&#

The goal of the analysis is to determine the efficacy of the exact solution method, assess the nature of the resulting VSP configurations, effects of input parameters and network characteristics to the design, and provide insights on policy aspects of the design of shared systems. The proposed transformation scheme presented in Section 3 and the bounds described in Section 4 are computed using a Java program and solved using the CPLEX 11.2 solver. Networks of various sizes were tested. The larger instances, generally greater than 40 nodes, were extremely hard to solve and pushed the solvers and computers beyond their limits. As a result, the subsequent analysis pertains only to solutions where the gap between the best bound and best integer solution is below 50%. All results are reported, however. While this subset of solutions provides insights into the design and characteristics of the optimal VSP configuration, it also demonstrates the limitations of the proposed transformation in solving larger design problems.

Three classes of prototypical transit networks are considered (see Fig. 5
                     ) with several instances for each class. A corridor (COR) network consists of transit services running along a corridor with shared-vehicles providing improved access to transit stations. A grid (GRID) network has transit services similar to downtown areas in an urban center. While corridor networks do not present the opportunity for new intermodal paths, with the introduction of shared-vehicles, a grid network can support new intermodal combinations that are advantageous for users. The third class of networks are random (RND). The random networks are built by generating random coordinates for nodes within the unit kilometer interval. Each network is denoted by the network structure (e.g. COR) and the number of nodes (e.g. COR24).

Nodes can represent VSP candidate sites, transit stops, transit service, origin, or destination nodes. Links representing transit service, walk access, VSP access, modal transfers, and origin/destination connectors are generated by randomly connecting pertinent nodes. The network is ensured to be strongly connected. The links are classified into three categories. Walk links are assumed to be traversed at a speed of 4.5kilometer/hour. Shared-vehicle links are traversed at a speed of 12kilometer/hour for bicycles and 30kilometer/hour for cars. Transit service links run at 30kilometer/hour. Users are assumed to minimize travel and waiting times in going from origin to destination.

For each network instance, the four problem parameters (budget, cost of stations, cost of vehicles, and cost of slots) are varied as summarized in Table 1
                     . Two cost scenarios are considered. In the first cost scenario, the station set up costs are low, but the cost of vehicles is relatively high. This cost scenario is typical in car sharing systems and is referred to as CAR. The second cost scenario has a higher station set up cost but lower per vehicle cost, as is typical for bicycle sharing systems. This cost scenario is termed BIKE. The larger instances were considered to establish the limits of the solution procedure. Table 1 also shows the number of integer and continuous variables for the transformed instances. The problematic binary and integer variables grow rapidly as the network size increases.

To aid the CPLEX solver, the solution of the problem with a lower budget is used as a starting solution for instances with higher budgets to provide a warm start. For small budgets and smaller instances, the solver finds good solutions (MIP gap<5%) relatively early in the branch-and-bound tree. Proving optimality for these instances takes considerably longer. Problem instances with more than 40 nodes proved to be challenging in providing good integer solutions and tight bounds. Feasible solutions were found for all instances. Larger instances were allowed to run for 10hours to see if improvements were achievable. The largest grid instance, GRID49, had poor MIP gaps for all scenarios, indicating that the network structure bears on the quality of solutions, since larger instances for other network topologies yield tighter bounds. The role of the large constant M in several constraints leads to weak linear relaxations and subsequently large MIP gaps. Therefore, interpretation of results excludes the instances with large MIP gaps, however, the best integer solution at termination is reported in Tables 2 and 3
                     
                     . The bounds presented in Section 4 for the VSP operator upper-level (Eq. (38)) and user lower-level (Eq. (39)) were also computed.


                     Fig. 6
                     a and b shows the VSP operator revenue F(v) as a function of budget for the CAR and BIKE cost scenarios. As expected, with larger budgets, the VSP operator revenues increase, as the system is larger and attracts more users. Comparing revenues for the CAR and BIKE cost scenarios demonstrates that revenue maximization objectives are better served with shared-vehicle technologies that have lower per-vehicle costs. In this case, the revenue from the BIKE scenario exceeds that of the comparable CAR scenario, as greater number of vehicles can be deployed resulting in more trips. Further, when station set up costs are relatively high (BIKE scenario), the model recommends that a greater number of stations be built than when compared to the CAR scenario. Thus, the higher per-vehicle cost presents agglomeration effects for the system, where available resources are pooled at fewer stations.

The lower-level objective that represents total system travel time for users or f(v) is plotted in Fig. 7
                     a and b for the CAR and BIKE scenarios, respectively. For a particular budget, the BIKE scenario deploys a greater number of shared-vehicles than the CAR scenario. The larger fleet of shared-vehicles can be seen to benefit users by reducing travel time. The inefficiency of the equilibrium solution for the lower objective can be observed in the GRID38 network, where increases in the budget are not matched by improvements in travel time.


                     Figs. 8 and 9
                     
                      show the bounds F
                     
                        UL
                     (v
                     ∗) (Eq. (38)) and F
                     
                        LL
                     (v
                     ∗) (Eq. (39)) for the CAR and BIKE scenarios, respectively. While the tightness of the bounds is problem instance-dependent, at lower budgets, the bounds are generally tighter. The widening gap with increasing budget can be attributed to the combinatorial nature of the upper-level design as users have greater opportunity to relocate to sites where revenue is low, but the potential to improve travel time is high. The bounds are violated in cases where the MIP gap is large and the optimum solution has not been found as in Fig. 9g.

The VSP configuration is graphically summarized in Fig. 10
                      for the RND50 instance for the BIKE cost scenario. The results from other instances follow similar characteristics and are omitted. The VSP stations chosen for construction are highlighted along with the associated number of slots and vehicles. The VSP configuration can be seen to grow in terms of number of stations when a larger budget is presumed. Additionally, the capacities at the stations are augmented so as to maximize shared-flow. When the budget is 300 units, some sites chosen for construction have the maximum allowable capacity of 15, indicating that the VSP operator revenues can be enhanced if the budgetary constraints are relaxed.

VSPs are uniquely positioned to leverage public instruments of tolls and subsidies to achieve favorable outcomes for the community. If resource allocation decisions of VSP operators can be influenced by incentives, in the form of subsidies, then configurations that better serve the system travel time objective can be constructed. This improvement in travel time is achieved by sacrificing revenue. Therefore, any subsidy must directly address this lost revenue. In other words, what amount of (public) subsidy will persuade VSP operators to provide a design that is optimal for users? This question has been posed in other contexts pertaining to congestion pricing on highways. It relates to the level of incentives to move from a ‘user-optimal’ to a ‘system-optimal’ travel pattern.

A worst-case analysis is employed to quantify this subsidy. The best design for users is given by the bound LL in Eq. (39), where users allocate shared-vehicle resources to selfishly improve travel utility. The difference in revenue resulting from the LL bound and the equilibrium represents the worst-case of subsidy needed to move the system from equilibrium to a ‘system-optimal’ setting.

The last column of Tables 2 and 3 quantify this subsidy as a percentage of the revenue. Figs. 8 and 9 also show this subsidy gap in absolute terms, which can be seen to be widening as the size of the shared-system increases. Under the tested scenarios, the magnitude of the subsidy is network-dependent. For example, instance GRID38 shows that the equilibrium solution is close to the user optimal configuration, making the subsidy small. For other instances, the subsidy, viewed as a proportion of revenue, is considerable. This result suggests that subsidies are not directly transferable from one urban network to another.

To summarize, the numerical experiments demonstrate several aspects of VSP network design. The optimal design is potentially inefficient for users as demonstrated by the lower-level objective value for varying budgets. The exact solution method described in Section 3 is suitable for small networks with less than 40 nodes. The solution quality is dependent on the network topology and size. The bounds described in Section 4 are tight for smaller instances and lower budgets. The optimal design is sensitive to the cost structure to the operator. When the relative cost of constructing stations is high, there are agglomeration effects where resources are pooled at larger stations. The magnitude of subsidies to move the system design from what operators desire to a ‘user optimal’ design is also quantified.

@&#CONCLUSIONS@&#

The equilibrium design of a shared-vehicle system in conjunction with a transit network is formulated as a bi-level program. The problem is transformed to a more readily solvable mixed integer program. Tests on random networks illustrate the applicability of the model for determining optimal VSP configurations and yield insights into optimal system configurations. These include agglomeration effects for various cost inputs. When station setup costs are low and parking slot costs are high (as is the case in car sharing systems), fewer stations are suggested for development and resources should be aggregated to achieve optimal revenue. Further, the incentives, in the form of subsidies, to VSP operators to pursue the user-optimal design is quantified. This subsidy makes the user-optimal network design attractive to VSP operators who would otherwise pursue a revenue-maximizing network design that is potentially suboptimal to users. The magnitude of the subsidy is network-dependent and can be substantial compared to the revenue of the operator.

The proposed model can be extended along several dimensions. Though a fixed-demand assumption is common in practice for strategic design problems, a framework where demand is considered as a function of VSP level-of-service can yield additional insights. The proposed model incorporates the transit assignment routine of Spiess and Florian (1989), though any transit assignment routine can be explored as alternatives in the lower level of the formulation. Congestion effects on transit networks can be incorporated. An extension of this work could consider joint optimization of prices and design (see Brotcorne, Labbe, Marcotte, & Savard (2008) for example), include price sensitivity of users in route choice, and consider multiclass extensions. Real-world problems would need alternative solution methods. The authors have also employed a genetic algorithm to design a bicycle sharing system for a large-scale multimodal network representing Washington, DC (Nair & Miller-Hooks, in preparation). Several other heuristic methods to generate good quality solutions can also be explored.

@&#ACKNOWLEDGMENTS@&#

Comments from Steven Gabriel on an earlier version of the paper are graciously acknowledged. This research was partially funded through the Mid-Atlantic University Transportation Center (MAUTC). The first author was partially supported by the I-95 Corridor Coalition fellowship.

@&#REFERENCES@&#

