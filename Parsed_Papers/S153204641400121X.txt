@&#MAIN-TITLE@&#Usability study of clinical exome analysis software: Top lessons learned and recommendations

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           First application of usability methods to evaluate exome analysis software.


                        
                        
                           
                           Key list of user desiderata on exome software from clinical geneticists is compiled.


                        
                        
                           
                           Identified usability challenges and design features for reengineering opportunities.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Exome

Genome

Whole-genome

Next-generation sequencing

Software interface

Usability

@&#ABSTRACT@&#


               
               
                  Objectives
                  New DNA sequencing technologies have revolutionized the search for genetic disruptions. Targeted sequencing of all protein coding regions of the genome, called exome analysis, is actively used in research-oriented genetics clinics, with the transition to exomes as a standard procedure underway. This transition is challenging; identification of potentially causal mutation(s) amongst ∼106 variants requires specialized computation in combination with expert assessment. This study analyzes the usability of user interfaces for clinical exome analysis software. There are two study objectives: (1) To ascertain the key features of successful user interfaces for clinical exome analysis software based on the perspective of expert clinical geneticists, (2) To assess user-system interactions in order to reveal strengths and weaknesses of existing software, inform future design, and accelerate the clinical uptake of exome analysis.
               
               
                  Methods
                  Surveys, interviews, and cognitive task analysis were performed for the assessment of two next-generation exome sequence analysis software packages. The subjects included ten clinical geneticists who interacted with the software packages using the “think aloud” method. Subjects’ interactions with the software were recorded in their clinical office within an urban research and teaching hospital. All major user interface events (from the user interactions with the packages) were time-stamped and annotated with coding categories to identify usability issues in order to characterize desired features and deficiencies in the user experience.
               
               
                  Results
                  We detected 193 usability issues, the majority of which concern interface layout and navigation, and the resolution of reports. Our study highlights gaps in specific software features typical within exome analysis. The clinicians perform best when the flow of the system is structured into well-defined yet customizable layers for incorporation within the clinical workflow. The results highlight opportunities to dramatically accelerate clinician analysis and interpretation of patient genomic data.
               
               
                  Conclusion
                  We present the first application of usability methods to evaluate software interfaces in the context of exome analysis. Our results highlight how the study of user responses can lead to identification of usability issues and challenges and reveal software reengineering opportunities for improving clinical next-generation sequencing analysis. While the evaluation focused on two distinctive software tools, the results are general and should inform active and future software development for genome analysis software. As large-scale genome analysis becomes increasingly common in healthcare, it is critical that efficient and effective software interfaces are provided to accelerate clinical adoption of the technology. Implications for improved design of such applications are discussed.
               
            

@&#INTRODUCTION@&#

Discovery of the underlying genetic cause of a disease or condition can provide critical insights into the biochemical mechanisms and, in a subset of cases, reveal therapeutic avenues to pursue [1]. In the long-term, whole-genome sequencing will be clinically cost effective, but in the near-term the targeted sequencing of all protein coding regions of the genome, called exome analysis, is already actively used in select clinics. Over the past 5years, more than 600 papers have appeared reporting exome results for clinical research studies. While these research successes have been dramatic (e.g. [2–4]), the transition to regular clinical access to exome analysis is challenging. The data output from exome sequencing is immense and computationally complex, and finding relevant sequence variations amongst the hundreds of thousands of variants in each individual remains an ongoing challenge [5–7]. Various software packages have been developed for visualization and interpretation of sequence variation data to address this challenge, but to date no comprehensive usability studies have been reported to identify and investigate user interface features required for efficient clinical work involving exome analysis.

Prior studies illustrate how a lack of systematic consideration of users, the tasks they are involved with, and their work environments can result in poorly designed user interfaces, leading to low adoption rates [8–10]. Such systems are likely to be abandoned [11,12]. In healthcare systems, poorly designed systems may also jeopardize the quality of patient care, and pose a threat to patient safety and waste precious resources [13–15]. Usability studies in the field of health informatics focus on analyzing user behavior to reveal cognitive and behavioral patterns that may explain such suboptimal outcomes [16,17], as well as reveal technological considerations that impede clinical translation of patient genomics [18–20].

In the context of usability studies in bioinformatics, Bolchini and colleagues have identified a need for the application of usability analysis to the evaluation of bioinformatics resources and tools [21]. However, there have been few published studies on the usability of such technologies. Usability analysis, involving standard usability testing techniques, have recently been described by Neri and colleagues in the analysis of a user interface for genetic results that are presented to healthcare providers for managing patient genetic profiles. Neri found that usability testing resulted in the identification of problems which were resolvable with simple alterations leading to substantial impact on the quality of user interactions [22].

The framework of our research study is based upon cognitive task analysis (CTA), a cognitive engineering technique that has been successfully applied in informing the design of systems across a variety of clinical domains [23–28]. In this paper, we present the first evaluation of the usability of next-generation sequencing interpretation software, exploring the impacts of different user interface designs on analysis workflows and outcomes. Our methodology builds upon well-established CTA to observe ten clinical geneticists examining two simulated scenario cases using think-aloud protocols [29] to assess end user cognitive behavior. Each subject worked through two hypothetical exome analysis scenarios with two dissimilar exome analysis software interfaces. We highlight the top user desiderata to inform software developers working on the next generation of exome interpretation software, and to inform clinical users who are in the process of choosing a software from this domain. The discussion of this paper addresses recurring usability challenges to overcome and critical features that this class of analysis software should possess. We emphasize that the ultimate goal of the study is not the collection of software-specific usability analysis results, rather the intent is to highlight findings that generalize to all software geared for the clinical interpretation of exome and eventually whole genome sequencing data.

@&#BACKGROUND@&#

In exome analysis, a bioinformatics pipeline output is typically a set of deviations from a reference genome sequence, with up to ∼400,000 variations per exome reported. Exome analysis software is expected to take as input a variation file (e.g. VCF) from a high-throughput bioinformatics pipeline, and assist non-computational users (e.g. clinicians) to identify a small number of candidate gene alterations for further evaluation [30]. Some software includes the pipeline processing step within an integrated package, while others focus on the delivery of processed results [31,32].

The active global research interest in exome and genome sequencing has motivated the creation of numerous free-access and paid-access software tools. Within this study, our selection of tools is drawn from free software that can be evaluated without restriction within an academic setting. While our survey results (Appendix A) show that clinicians are currently using both commercial and open-access programs, class-specific interface properties are conceptually similar.

The first package included in the UI testing is Varsifter [33], which represents a graphical user interface (GUI)-based approach to filter and prioritize lists of variations. Fig. 1
                        A shows the main panels and functionalities of the system. The program takes as input either a standard variation file (VCF format), or a tab-delimited file, and displays it so each row represents a variation and the columns represent the annotations attached to each variation. On the right, the software offers a list of filtering options that can be toggled as checkboxes. Users can also create custom queries when the pre-set filtering functions are insufficient.

The second package, KGGSeq [34], is fundamentally command-line-based. The initial input to KGGSeq is a VCF variant file. In response to commands to the computer terminal, the program is executed and output returned containing the filtered variations. The column-based output file can be opened with spreadsheet software (e.g. Microsoft Excel) for review. While the program execution is terminal-based, KGGSeq provides a GUI to facilitate setting up initial parameters for users to feed to the terminal (Fig. 1B). KGGSeq has additional functions for exploring the analysis of complex disorders but they are beyond the context of this study in which Mendelian disorders are the focus.

The two packages studied were selected in order to elicit subject responses to two distinct types of user interfaces for exome analysis. The objective was the identification of desired features and requirements for improving the design of future user interfaces. While the usability results presented in this report are by necessity generated with specific software, the ultimate objective of the study is to use them as a starting point to collect and understand general exome analysis interface characteristics in order to inform the development of the next generation of clinical genetics exome analysis tools and the features the community desires in future software.

@&#METHODS@&#

The study took place within BC Children’s Hospital (Vancouver, Canada) from August 2012 to March 2013. Ten clinical geneticists working at this institution with prior exposure to analyzing genomic data were recruited (Appendix C). None of the participating specialists had prior experience with either of the assessed interfaces.

Varsifter (version 1.5) was downloaded from the NHGRI website. KGGSeq (version 0.2) was downloaded from developers’ website hosted by the University of Hong Kong.

Two sets of simulated data were constructed to represent two clinical scenarios, covering tasks that commonly occur during exome analysis. Each clinical scenario presents a simulated patient suffering from a particular Mendelian disease. The patient’s clinical history was constructed based on the typical traits reported in the research literature. Exome results were provided as processed sequence variants as tabulated form and VCF. A bed file consisting of regions of homozygosity (ROH) was constructed to resemble typical ROH data from a 1st-degree consanguineous family. In both scenarios, a disruptive mutation was embedded in the exome to represent the intended causal variant. The mutation was introduced in such a way that it would emerge as a top candidate after prioritizing through a list of specific instructed filters (Appendix B).

A list of mitochondrial genes provided to the users was downloaded from the Mitocarta website [35] on 30 June 2012.

Pre-evaluation semi-structured interviews solicited self-rated computational expertise and perspectives about ongoing challenges faced with sequencing analysis and sentiments towards next-generation sequencing data. The post-evaluation semi-structured interviews addressed specific issues that came up during the evaluation (Appendix C). The quantitative questions used in the study are a validated survey called the Software Usability Measurement Inventory (SUMI) version 4.0 [36–38].

The evaluations were conducted on a 15-inch Macintosh MacBook Pro laptop (with Mac OSX Version 10.6.8, 2.16GHz Intel Core Duo and 2GB DDR2 SDRAM) with the software pre-installed. All computer screens and the surrounding audio were recorded using QuickTime software Version 10.0.

A one-on-one interview was conducted prior to the simulation session. To avoid order bias, for each scenario, we randomly assigned half of the users to utilize KGGSeq before moving on to Varsifter, and the other half to use Varsifter before KGGSeq. Clinicians were instructed to work through the first scenario with the two software packages before proceeding to the second scenario.

At the beginning of each session, an initial 45min were spent familiarizing the subject with the software and the data inputs. Appendix C describes in details the breakdown of this 45-min period. The 45-min introduction to the software packages was deemed sufficient to allow subjects to gain basic background required for interacting with the software (particularly as these domain experts had prior hands-on experience using similar analysis software and practical experience interpreting the results of exome sequencing data).

Following the introduction, the subjects were asked to interact with the simulated cases under a “think-aloud” protocol (Appendix C). The duration of these evaluation sessions ranged from 120 to 150min. Scenarios finished only when either the clinicians found the embedded causal mutation, or if they voiced that the task is too difficult to proceed and they wished to stop. The SUMI survey was given after the simulation. A second one-on-one interview followed the SUMI survey, concluding the evaluation session.

The audio recordings were manually transcribed into transcripts as Microsoft Word files. Coding categories were assigned to usability issues identified in the transcripts, and further time-stamped as observed from the screen recordings. The usability coding categories were developed prior to the analysis of the data, largely drawn from [39,40]. Additional categories were created if a comment could not be assigned to the pre-existing categories. Higher-level descriptive themes were identified the coding categories from the using an inductive approach [41].

The raw SUMI questionnaire data for each individual was submitted to the Human Factors Research Group, which generated the numerical summaries and statistical evaluations using their SUMICO software. The questionnaires were statistically quantified into software “efficiency”, “affect”, “helpfulness”, “control”, “learnability”, and “global usability” [36,38]. SUMICO calculates the probability from the chi-squared distribution that the subjects’ responses from the study differ from the expected values based upon the SUMI database (see [36,38] and Appendix C).

Non-parametric Mann–Whitney U test was used to calculate statistical significance for the observed quantifiable differences between the two software packages (for specific details see Section 3).

@&#RESULTS@&#

In this section, the paper describes the quantitative and qualitative results obtained from the study that are specific to the evaluated two tools. Section 4 discusses the key findings that reveal broader themes critical for next generation variant interpretation domain.


                        Table 1
                         shows the number of clinicians able to identify the correct causal mutation in each scenario. In both scenarios, more clinicians were able to identify the causal mutation with Varsifter as compared to KGGSeq. Fewer clinicians were able to identify the causal mutation in the more complex second scenario as compared to the first scenario for both software.

In both scenarios (Appendix C.1), the time was notably shorter with Varsifter (p
                        <0.05; 1-tailed Mann–Whitney U-value=9 for scenario 1 and U-value=1 for scenario 2). For the clinicians who were able to achieve successful completion on both software packages, all performed the work faster with Varsifter (8/8 for scenario 1, 5/5 for scenario 2, see Appendix D.1).


                        Appendix C.2 shows how the two tools were perceived differently by the clinical users based on SUMI. Below we highlight the attributes that, according to SUMICO, deviated significantly from the average score of 50 (SUMICO did not provide exact p-values). Varsifter scored the lowest on “efficiency
                           1
                           Efficiency measures the degree to which users feel the software assists them in their work.
                        
                        
                           1
                        ” (score=40) but highest on “affect
                           2
                           Affect measures the user’s general emotional reaction to the software.
                        
                        
                           2
                        ” (score=58), revealing that despite finding the software difficult to work with, the users nonetheless finished the evaluations with a positive impression. KGGSeq scored the lowest on “helpfulness” (score=43) and “control” (score=40), which refer to the degree to which software is self-explanatory and the extent to which users feel in control of the software respectively.


                        Table 2
                         shows the breakdown of the encountered usability problems captured from think-aloud sessions into usability themes and the frequency of occurrences. Descriptive findings are categorized under twelve usability categories (Table 2). These codes are further grouped into five major usability themes: (1) Visualization, (2) Information, (3) System response, (4) Functionalities, (5) Overall usability. Example comments that fall into these five categories are shown in Appendix D.2. A more in-depth description of the specific usability problems found for each software can be found in Appendix F.3.

For Varsifter, every clinician complained that text or functions were hidden from view due to scrollbars and/or hidden panels. In one instance, 8/10 participants sought a button that they had observed in the tutorial video, but did not know that it was necessary to use the scrollbar to access the remainder of the options (e.g. “I remember seeing a button to click to exit this window, but I can’t find it”). The feedback about KGGSeq also indicated user concerns with incomplete display in the command-line generator GUI (e.g. “Some of the text descriptions and buttons are not visible on the screen”) (Appendix D). One clinician commented “the scrolling means I have to remember what is hidden behind this panel and that is a pain”. The difficulty with accessing the needed functionalities indicate difficulty in function execution. To In some cases, Varsifter’s dropdown menus in which similar functions are grouped together were perceived as offering better organization. However, in some cases users had differing views about the logic of the groupings (e.g. “The software should move this function out of ‘View’. It is organized very counter-intuitively”), and resulted in navigational difficulties.

Clinicians (6/10) indicated that Varsifter responded too slowly to inputs (e.g. “Is the software running? I am clicking this button multiple times but nothing happens”). The actual start up time for the program was a relatively short 7–25s. However, at times the clinicians indicated that they did not know if the program was running, and ended up repeatedly clicking on buttons, which further slowed the program or introduced unwanted errors. As the analysis of large-scale exome data may require more time than is ideal for busy clinicians [42,43], software should provide an approximate processing time whenever possible and a clear indication of system status. For KGGSeq, there were multiple complaints regarding the use of bioinformatics jargons that the clinicians were not able to comprehend (e.g. “Do I want variants with a high [MutationTaster] score or low score?”). 17/79 comments further criticized the way the information was presented in the output, which the clinicians felt were too overwhelming (e.g. “I don’t know what this column means, and I can’t find the actual information that I want because there are too many things to look for here”).

For both software packages, majority of functionality problems (16/19 for Varsifter, 13/20 for KGGSeq) were related to the clinician’s inability to execute the software’s implemented function. For instance, 4 out of 10 clinicians were unable to filter variations for a particular Mendelian inheritance model in Varsifter (e.g. “The tutorial video showed me how to do it but I don’t know how to work it myself”, “I can see the button here, but I can’t press it. I don’t know why it isn’t letting me do it, and there is no instruction for how to get it working”). For KGGSeq, the clinicians were unfamiliar with the terminal-style interface (Appendix D). The command-line generator interface received some initial praise in the early stages of the tests (n
                           =3; e.g. “I like how all the basic inheritances are already setup so I only have to click it”), but negative comments were subsequently expressed as the subjects realized that only a portion of the functions could be access through the graphical interface (n
                           =20; e.g. “I can’t upload this gene file using this software”).

For Varsifter, the clinicians praised the software ability to revert filtered output to a previous unfiltered state (e.g. “I like how I can just uncheck this filter and get my previous result. It allows me to explore different filtering thresholds”). For KGGSeq there was no apparent capacity to revert from one state to a previous state, making it necessary for the user wishing to change a specific threshold for a filtering parameter to restart the entire analysis (e.g. select for variants with population frequency<1% versus<3%). The benefits for this are most apparent when comparing the frequency of errors made by the users when using the system. More mistakes were resolved by Varsifter (12/15) compared to KGGSeq (11/26) because clinicians were able to view the results at each filter step (Appendix D.3).

@&#DISCUSSION@&#

In this paper, we performed an assessment of clinical genetics exome interpretation software, using a cognitive analysis approach to usability evaluation. The observations specific to clinical genetics and exome/genome analysis are the most important for consideration for future software development. Therefore, we will focus our discussion on the domain-specific lessons learned from the study, providing specific recommendations that could inform the design of future interfaces for clinical exome analysis software and informing clinicians on their choice for software selection. Ultimately the users feedback leads to a clear and concise inventory of features and characteristics desired of clinical exome interpretation software (Box 1).
                        
                           Box 1.
                           
                              Implications for new software design.
                           
                           
                              
                                 Clinical exome interpretation software user desiderata
                                       
                                          •
                                          Rich filter functionalities (i.e. variant calls with simple column-based filtering are insufficient)

Software design structured with focus on genetic models (e.g. Mendelian inheritance)

User defined workflow management with stepwise reports

Fast response time with estimates given for wait steps

Team support to allow multiple clinicians to annotate/review data

Interoperability with widely used online resources/databases and data formats

Frequent updating to support emerging tools, data standards and input types

We find that a major impediment for adoption of exome analysis software is a lack of clear presentation (organization), description and help messages for the provided functionalities. Non-computational healthcare professionals will not choose to adopt a software package unless the functionalities are easily executable and can fit into a clinician’s workflow. Table 3
                         contains examples of problems frequently encountered in our evaluation and the recommendations from the clinicians to resolve them.

A key observation from the study is the importance of supporting diverse workflows for the range of potential genetic hypotheses. Specifically, the system should be structured around the commonly used analysis models, such as Mendelian recessive inheritance (Table 4
                        ). Clinicians value such structured approaches, as they are expected to follow standardized protocols in their practice. The ability to develop and save common workflows is key for clinical groups working on many cases over time. There are unique cases, which require unusual analysis approaches. Therefore while the software should be structured around specific standard analysis models, it needs to remain flexible. We compiled a list of frequently employed tasks of clinical exome analysis, organized by the themes of analyses, that the software should be structured to address (Table 4).

Varsifter has a greater emphasis on the GUI while KGGseq is primarily intended for use via the command-line (albeit with an available interface). Our results confirm that clinicians benefited from and appreciated the fuller GUI, both for visualizing the data and performing analyses. Displaying the variations visually in a tabulated form with sortable columns allows the clinician users to browse and prioritize the data, a functionality that KGGSeq lacks. Another advantage of tabular structure is it is highly similar to Excel representation, a program that is frequently used by clinicians. A few clinicians from our study note that they would like the order of the columns to be adjustable so they can customize the type and order of information presented.

Users expressed desire for a system to allow them to bifurcate in the workflow, exploring multiple approaches to processing the data at certain steps. While some workflow software platforms such as Taverna, SciTegic’s Pipeline Pilot [44,45] and Galaxy [31] provide this functionality for general informatics work, most specialized exome processing tools have not incorporated the approach in a robust manner. A core component of exome and genome analysis is filtering and variant prioritization. The software should provide an intermediate output to evaluate the effectiveness of a particular filtering step, and the ability to return to the previous result or continue to the next depending on the context of that intermediate output. The iterative design feature not only reduced the amount of slips, but importantly allowed the users to investigate the data under different scenarios (Table 4).

Most exome-sequenced families are examined by multiple clinicians. A consensus opinion about a causal gene candidate may arise from a series of email exchanges, face-to-face meetings and sharing of references such as hyperlinks to scientific abstracts. From this study we learned that most exome analysis software, both free and commercial, do not provide suitable functionalities for facilitating multiple users to collaborate on the same data. Users expressed that an ideal system would allow users to attach notes, links to scholarly articles, as well as comments on individual genes or genetic variations, and that such information be available to multiple users in the same clinical setting. Software that empowers collaborative analysis would be well received.

The subjects identified input compatibility as a key factor for exome variant interpretation tools. Many of the filters and prioritization strategies used in exome analysis are built from standard outputs of academic and commercialized bioinformatics pipelines. Being interoperable with the data standards and currency with updates is important for widespread adoption, especially for non-computational clinicians who should not be expected to convert data formats.

The prioritization of genetic variants can be highly dependent upon accessing external resources such as biological annotations attached to a particular genomic coordinate or to a gene. At present many clinicians manually evaluate each variant by querying online resources (e.g. PubMed, OMIM, HGMD [46], CLINVAR [47]), which was reported to be amongst the most time-consuming steps in the interpretation process. The capacity of software to automate data mining of these resources may accelerate analysis and increase success rates. Appendix E.3 shows a list of common data formats for next-generation sequencing data, and the databases and external resources that clinicians indicated a desire to incorporate.

@&#CONCLUSIONS@&#

Software to support exome sequencing is a cost-effective technology increasingly incorporated in clinical genetics [48]. Without a reliable and practical clinical system, complex exome data cannot be processed by most clinicians. In this study we highlighted recurring usability problems, and reported user recommendations and requests for key functionality. Our findings point to the need for changes and/or updates to current exome interfaces. The results should further help clinical users who are choosing what analysis software would suit their needs.

The user desiderata represent a key feature set for future systems to deliver. Our evaluations highlight the many types of filters and prioritization strategies that are needed by the clinicians, and the limitations of simple column-based filtering layouts. In addition, the software can accelerate analysis by reporting findings based on classical genetic models of inheritance where appropriate. The software should retain the ability for the users to define their own custom workflow, providing step-wise reports so the impact of each step can be assessed. As the community moves to whole genome data, the resulting size and complexity will exacerbate concerns about the speed of processing – thus it is critical for the software to provide time estimates whenever a job cannot be completed rapidly (i.e. >10s). Since each case is rarely evaluated by only one specialist, the ability for clinical exome interpretation software to support team collaborations for collective annotation and review of data is desired. The users indicated a need for the software to be compatible with multiple data formats used in the field, as well as providing connectivity to popular online databases and tools.

All of the subjects in the study worked within the same academic health research hospital. While this likely introduces bias, our subjects are clinical geneticists with prior experience with exome analysis that by nature are not to be found in a general healthcare facility. The focus on a single healthcare center offered advantages regarding the number of experts we were able to gather, and the time they were able to spend on the study. Most clinical exome analyses are currently performed in similar academic health centers, and therefore we anticipate that the results will have broad relevance to the field. Nonetheless, one future direction from this work would be to perform similar evaluations with clinicians from multiple centers.

Each clinical geneticist was allotted 45min to become acquainted with the software, which is a recognized constraint. However, all of the subjects had performed similar tasks as given in the simulations, and had worked with other exome interpretation software. Furthermore, based upon the nature of the software, and the type of analysis that we asked the clinicians to perform, the 45min training period was sufficient for subjects to gain a basic understand the basic functionalities for the purposes of conducting usability testing.

The study was limited to two specific open-source software packages. One could argue for the inclusion of other tools, including commercial packages. We believe the two tested tools present a suitable range of features in order to gain general feedback about software in this specific field. Given the rapidly moving developments in the field, there will always be more new software emerging. We did query the subjects about their experience with other packages throughout the evaluations, such that the user perspectives presented in this study are not restricted to the evaluated tools but also informed by exposure to various commercial and open-source platforms.

As access to low-cost DNA sequencing grows, it is anticipated that whole genome sequence analysis will become a standard diagnostic tool for many fields [49,50]. The complexity of genome data and annotations will continue to increase as the technologies mature, making it imperative to develop better interfaces that streamline analyses and improve quality.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.jbi.2014.05.004.


                     
                        
                           Supplementary data 1
                           
                        
                     
                  

@&#REFERENCES@&#

