@&#MAIN-TITLE@&#Dispatching strategies for managing uncertainties in automated manufacturing systems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We evaluate response strategies following the occurrence of an interruption.


                        
                        
                           
                           Ten strategies falling in three groups are evaluated.


                        
                        
                           
                           Strategies vary in degree of modification to schedule and its implementation.


                        
                        
                           
                           Simulation is used under an experimental design to evaluate strategy performance.


                        
                        
                           
                           Approximate performance domains of the strategies are identified.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Operations

Scheduling/sequencing

Rescheduling

Simulation

Experiments

@&#ABSTRACT@&#


               
               
                  Manufacturers in the western world need to exploit and perfect all their strengths to reduce the flight of manufacturing to global outsourcing destinations. Use of automated manufacturing systems (AMSs) is one such strength that needs to be improved to perfection. One area for improvement is the management of uncertainties on the production floor. This paper explores strategies for modifying detailed event list schedules following the occurrence of an interruption. Advanced planning and scheduling (APS) software packages provide a detailed advance plan of production events. However, the execution of this advance plan is disrupted by a myriad of unanticipated interruptions, such as machine breakdowns, yield variations, and hot jobs. The alternatives available to respond to such interruptions can be classified in four groups: regenerating the complete schedule using APS, switching to dispatching mode, modifying the existing schedule, and continuing to follow the schedule and letting the production system gradually absorb the impact of the interruption. Regeneration of the complete schedule using APS requires a large computation effort, may result in large changes in the schedule, and hence is not recommended. This paper reports on an experimental study for evaluating 10 strategies for responding to machine failures in AMSs that broadly fall in the latter three groups. The strategies are evaluated using simulation under an experimental design with manufacturing scenario, load level, severity and duration of interruptions as factors. The results are analyzed to understand the strengths and weaknesses of the considered strategies and develop recommendations.
               
            

@&#INTRODUCTION@&#

Recent years have seen a rapid loss of manufacturing in the western world to overseas destinations. Some of the labor intensive industries have completely disappeared from the western world. The western world still has a significant amount of high tech and capital intensive manufacturing such as semiconductor and automobile industries. The remaining manufacturing industry has a majority of those segments that rely on automation. Western manufacturers need to continually improve the technology and use of automated manufacturing systems (AMSs) to retain the associated industries. They need to pursue perfection in development and use of AMSs to raise the competitive barrier.

AMSs have developed over the years since the advent of flexible manufacturing system (FMSs) in 1980s. Though the 1980s vision of completely lights out factories has not become a reality, a number of technical challenges towards that goal have been addressed. At the same time a number of aspects offer further room for improvement and drive to perfection. One of the fronts that continues to offer opportunities for further improvement is the handling of uncertainties on the production floor. The uncertainties on production floor emanate from machine and equipment failures, yield variations, hot job arrivals, etc. The operation of an AMS is often administered based on a pre-generated plan, also referred to as an event list schedule, provided by an advanced planning and scheduling (APS) software. Automated control systems execute the sequence of events provided in the schedule. Occurrence of unplanned events makes it difficult and in some cases impossible to follow the pre-generated schedule. Strategies need to be defined for automatic response to unplanned events to reduce the uncertainties. The two major objectives in using such strategies are: quick modification of the schedule and minimum disruption to the completion dates and times of the current orders. The practical relevance of the problem is indicated by a proof of concept reactive scheduling system with similar objectives recently evaluated at the Siemens SmartAutomation Lab (Lamparter, Legat, Lepratti, Scharnagl, & Jordan, 2011).

The strategies for responding to interruptions can fall in any of the following four classes: no change to original schedule, modifying the pre-generated schedule, switching to dispatching mode, and regenerating the schedule. No change to original schedule involves continuing to follow the original planned schedule as far as possible. Rules are defined and used for the implementation of operations that are not on schedule. Modification of pre-generated schedule can range from simple to complex methods with the intent of trying to catch up with the original plan. Switching to dispatching mode has the downside potential of widespread changes in delivery times and dates to customers but it does offer ease of implementation and reactivity to production floor events. Dispatching heuristics may be designed to reduce the changes in promised delivery times and dates to customers to ameliorate the downside potential. Regenerating the schedule has become more attractive with increasing computation speeds and better access to production floor events; however, it has the down side of potential widespread changes in delivery times.

The operations manager is thus faced with a number of options for strategies to reduce uncertainties on the production floor of an automated manufacturing system. This paper provides guidance to operations manager by evaluating the strategies in the three classes that attempt to achieve the delivery dates of the pre-planned schedule as far as possible: no change to original schedule, modifying the pre-generated schedule, and switching to dispatching mode. Strategies using complete regeneration of the schedule are generally not recommended given the potential for widespread changes in delivery times and dates to customers and hence not considered in this study. The strategies make decisions ranging from none to multiple machine re-assignments, machining operations re-sequencing, and transportation operations re-assignments and re-sequencing.

The strategies are evaluated in three different AMSs using simulation. The three different real-life AMSs share the following characteristics: alternative machines for operations, limited buffers, load–unload operations, automated guided vehicles for transportation, and off-line operations. Two of the systems have re-entrant routing.

This section introduced the context of this study related to strategies dealing with uncertainties in AMSs.
Section 2
 provides a background of research in this area. Section 3 presents the 10 strategies considered in this study. Section 4 describes the methodology including the experimental factors used. Section 5 discusses the results of the experiment. A list of lessons learned applicable to practice is drawn in Section 6. It concludes the paper with discussion of future work.

@&#BACKGROUND@&#

The reader is referred to Aytug, Lawley, McKay, Mohan, and Uzsoy (2005) for a rather comprehensive review of research on schedule execution in face of uncertainties and only a selected number of very relevant and more recent studies are discussed here using the grouping they proposed. Aytug et al. (2005) grouped the research into completely reactive, robust, and predictive-reactive scheduling approaches. In a more recent but less extensive review, Chaari, Chaabane, Aissani and Trentesaux (2014) replaced the third group with hybrid approaches and split that into sub-groups of predictive-reactive and proactive-reactive approaches. This paper utilizes the three basic groups by Aytug et al. (2005) and utilizes the hybrid approaches as an additional group for more flexibility.

The completely reactive approach dispatches jobs arriving into the system and at different machines using myopic priority rules or local optimization. The arrival of jobs into the system is determined at higher levels based on either forecasted demand or committed orders. These approaches are relatively easy to implement and have been often used in semiconductor industry in particular (Obeid, Dauzère-Pérès, & Yugma, 2014). Some of the recent efforts employing a completely reactive scheduling approach include Piplani and Wetjens (2007) and Georgiadis and Michaloudis (2012). A major disadvantage of the completely reactive approach is the highly volatile completion times of the jobs that make it hard to schedule supporting activities such a materials management and order promising.

Robust scheduling approaches aim to develop schedules that minimize the impact of interruptions when implemented. The schedules may be created after exploring a number of potential scenarios and aiming to achieve good performance in the worst possible scenario. It is reported that this achieves reasonable performance across all the scenarios (Aytug et al., 2005). Xiong, Xing and Chen (2013) present an evolutionary algorithm for robust scheduling of flexible job shops and demonstrate that it performs well when implemented with proposed robustness measures based on breakdown probability and location. Robust schedules may be perceived as generating longer makespans than other approaches and thus as less desirable.

The predictive-reactive scheduling approaches involve developing a pre-planned schedule (predictive) and using strategies to respond to interruptions that may occur during implementation (reactive). These approaches are the context for this paper as discussed in the previous section and hence a number of relevant efforts are discussed.

The practice in low-volume-high-variety and batch manufacturing environments largely utilizes pre-planned schedules based on the solutions available from commercial vendors. This area hence needs to be addressed by those interested in keeping the edge in AMSs which are typically used in such environments. In one of the early efforts, Bean, Birge, Mittenthal and Noon (1991) used the predictive-reactive framework and developed optimization approaches to modify the schedule for a short period following an interruption with the goal of matching up with the pre-planned schedule at the end of the period. Zakaria and Petrovic (2012) use match-up rescheduling using genetic algorithms for disruptions caused by new job arrivals and show that a strategy that manipulates idle times on machines performs better than total rescheduling for a 6 machine 13 job problem. Moratori, Petrovic and Vazquez-Rodriguez (2012) implement the same approach with data from industry for normal and urgent job arrivals and achieve good performance. The researchers propose to include machine breakdowns in their future efforts.

The response to unplanned events needs to be surgical in nature to avoid large scale changes in the schedule and in promised delivery times and dates. Sabuncuoglu and Bayiz (2000) compared switching to dispatching rules that generates many changes to schedule with beam search algorithm for partial scheduling in response to occurrence of interruptions. They found that dispatching rules performed well in face of stochastic disturbances and the partial scheduling approach could match their performance with more frequent scheduling. The algorithmic approach performed better for non-uniform machine load scenarios.


                     Hou and Li (2012) identify the conditions under which a repair to schedule may be feasible versus the need for complete rescheduling. Li and Murata (2012) demonstrate that a method comprised of binary particle swarm optimization and simulated annealing performs well for rescheduling of large size problems, defined as those taking more than 2 hours of computation time. The largest problem included had 16 machines, 4 each of 4 types. The method may have too long computation time for industrial application.


                     Liu and Zhou (2013) present polynomial time algorithms to reschedule identical parallel machines following disruptions caused by rework jobs with the objectives of minimizing number of jobs assigned to different machines compared to the original schedule and the total completion time. The provided results are limited to a 4 machine problem. Gürel and Cincioğlu (2015) developed a heuristics based on objectives of minimizing the number of jobs delayed beyond their original completion times and the manufacturing cost. They consider the unique option of compressing processing times at a higher cost. The provided results are limited to randomly generated scenarios with up to 4 machines.

Some of the researchers have employed multi-agent systems (MAS) for addressing this problem. Zhang, Wong and Fung (2013) utilize a MAS structure with alternate heuristics for rescheduling following disruptions such as machine failures and new job arrivals. Their problem context includes dynamic process planning. While they use a benchmark problem with 15 machines and 6 jobs to show good performance, computation times are not reported. The authors do point to the ability to run the MAS on multiple networked computers for computing efficiency. Merdan, Moser, Sunindyo, Biffl, and Vrba (2013) also utilize a MAS approach with use of local dispatching rules for rescheduling following a disruption. They report good performance using critical ratio rule with consideration of transportation times in between machines on a set of 2250 simulation experiments generated using a combination of levels of various factors. The number of machines in the problem is not identified and that prevents assessing applicability to industry scale problems. Darmoul, Pierreval and Hajri-Gabouj (2013) use a MAS structure based on biological immune system for handling disruptions with the initial schedule generated by an APS and show that conceptually the approach holds promise. They propose further work to make the approach generic across the wide range of disruptions in a manufacturing system.

Hybrid approaches may combine elements of the completely reactive, robust, and predictive-reactive approaches. Wang and Choi (2012) used a hybrid approach that combines the completely reactive and predictive-reactive approaches for flexible flow shops (FFS). They use decomposition to identify clusters of stages that are scheduled and rescheduled using one of the two approaches and report that this hybrid outperforms either of the approaches implemented singly. The applicability to flexible manufacturing systems is not addressed. Lou, Liu, Zhou, Wang, and Sun (2012) use a multi-agent based proactive-reactive scheduling approach to maintain the schedule in case of disruptions such as machine breakdowns and rush jobs. They use a 3 job 4 machine example to show their approach performs better than classical scheduling approach.

The disruption handling approaches need to be implemented within a structured framework. Jain and Foley (2002) proposed a decision framework for responding to interruptions in FMSs operating using event list schedules such as those generated using APS software. The framework recommended using response strategies whenever the impact of interruptions is expected to delay the schedule above a threshold. This paper proposes and evaluates strategies that can be used in such a framework.


                     Aytug et al. (2005) presented a framework for a predictive-reactive scheduling approach. They highlighted the relevance of such approaches for automated environments and pointed to the need for identifying the system parameters that influence the performance of predictive-reactive scheduling approaches. This paper makes an initial step in that direction by identifying performance domains of the promising strategies based on load level and duration of an interruption.

The above brief review indicates that there is a continued high level of interest among researchers for addressing the problem of handling disruptions in manufacturing systems. However, to facilitate implementation in industry there is a need to develop simple strategies and demonstrate their application in problems of industrial size. Few efforts have utilized industrial scale problems. The intent of this research effort is to evaluate through simulation simple response strategies that can be easily implemented for automated or human modification of schedules and hence may have a good prospect of being used in practice. This is also in line with the recommendation from Jahangirian, Eldabi, Naseer, Stergioulas, and Young (2010) that research on simulation in manufacturing should focus on real world problems and use real world data.

Strategies examined in this study can be organized into three groups: no change, modifying the pre-generated schedule, and switching to dispatching mode. Multiple strategies in each group are described below.

These strategies do not make changes to the original schedule and focus on its implementation after the interruption using different levels of rigidity as below.


                        Strategy 1A: The original schedule is followed with high rigidity, that is, both the assignment and sequence on machines, load-unload stations, and transporters are followed rigidly.


                        Strategy 1B: The original schedule is followed with medium rigidity; the schedule for the transporters is relaxed. That is, rather than allotting the scheduled transporter in the pre-planned sequence, the nearest available transporter is allotted to waiting parts. The assignment and sequence on machines and load-unload stations are followed rigidly.


                        Strategy 1C: The original schedule is followed with low rigidity. The schedule for load–unload stations is relaxed in addition to the relaxation of the schedule for transporters. The parts requiring a load-unload station are allowed to select an available station rather than waiting for the one assigned by the schedule. The sequence of parts on all machines is also relaxed, while the assignment of parts to machines is followed rigidly. The next part to be processed on a machine would be the earliest scheduled part among those available at the machine. If a part scheduled earlier in the sequence has been delayed the waiting parts will be allowed to proceed.

The three sub-strategies cover a spectrum of logical practices if no modification is made to the original schedule. Any further relaxation in the schedule will effectively mean that modification of the pre-generated schedule is necessary and will call for further decision making.

The strategies for modifying the pre-generated schedule can range from simple rules to complex heuristics as described below.

Two simple rule based strategies were included as below. These strategies are improved versions of the reassign-when-failed and shunt-when-failed strategies that were reportedly used for interruption handling in FMSs in industry (Smith, Ramesh, Dudek, & Blair, 1986).

Reassign the next operation of a job to an alternative resource using the dispatching heuristic LWINQ (Least Work In Next Queue) when the following conditions occur:

                                 
                                    1.
                                    when the job blocks a machine by residing in its output buffer preventing another job from moving off the machine, or,

when the job, on completion of an operation, finds the next machine on its schedule unavailable due to a breakdown.

At each machine, the job with the earliest scheduled operation is selected next.

This strategy calls for shunting a job to a temporary storage location (common storage areas or load–unload stations) whenever the job blocks a machine by residing in its output buffer. When the next station is ready to accept the job, the job is transported back into the system. The use of earliest scheduled operation rule allows delayed and shunted parts to proceed faster through the system until they catch up with their schedule.

Strategy 2A may lead to limited revisions to the pre-generated schedule using conditional application of dispatching rules, while strategy 2B is somewhat similar to no change strategies in group 1. There are some modifications to scheduled sequences under strategy 2B. If a scheduled job is not available to be processed next at a machine, the job with the earliest scheduled operation time among the available jobs is selected for processing.

The goal of getting back to the original schedule suggests use of conditional application of modification strategies with continued implementation of original event-list schedule. The two strategies developed with this aim are described below.

This strategy combines the good features of strategies 2A and 2B together with an improvement on the triggering condition which is now related to the expected delay of an operation. Some terminology needs to be defined before laying out the strategy. Committed processing time is the sum of processing times of jobs already in the input buffer of the machine, processing times of jobs currently traveling to the machine and remaining processing time of the operation currently in progress. All of such jobs are already committed to the machine and cannot be reassigned to an alternate. The delay of an operation can be defined with a certain tolerance level ρ to control the response of the strategy. The strategy will take an action only if an operation is expected to be delayed beyond ρ as compared to its scheduled start time.

The strategy calls for the following actions:

                                 
                                    1.
                                    If a part is blocking a machine:
                                          
                                             a.
                                             If the part is delayed, reassign the next operation of the part to an alternative machine using LWINQ. If LWINQ reassigns the next operation of the part to the originally assigned machine, shunt the part to a temporary storage location.

If the part is ahead of schedule, shunt the part to a temporary location.

When a part completes an operation:
                                          
                                             a.
                                             Examine the status of the machine where the part has to go for its next operation and determine the committed processing time for the machine.

If the part is already delayed and scheduled machine is immediately available, allow the part to proceed to the scheduled machine.

If the part is already delayed and the next machine is not immediately available or, if the next operation is expected to get delayed, try to reassign the operation to an alternative next machine using LWINQ.

When a part is ready to move to next machine (that is, an input buffer space or the machine itself is available):
                                          
                                             a.
                                             If the part is delayed or reassigned allow it to proceed for transporter contention.

If the part is early, check if there are any operations which were scheduled earlier and which have not been assigned to an alternative machine:
                                                   
                                                      i.
                                                      If there are no such operations, let the part proceed.

Otherwise, examine the status of the corresponding jobs. If the corresponding job has completed its earlier operation, then go back to wait thus preventing the undesirable switch in scheduled sequences, else, proceed for transporter contention.

If on completion of an operation a machine becomes idle (there is no part waiting for the particular machine), find the job with the earliest scheduled operation among the jobs waiting for compatible machines and reassign its operation to the idle machine.

This combination strategy attempts to overcome the shortcomings of the earlier strategies. In the above action list, action 1 avoids indiscriminate reassignment of operations by restricting it to cases where a part is delayed. Action 2 triggers some actions whenever an operation is expected to be delayed thus making the strategy more responsive to shop floor events. Action 3 prevents undesirable switches in the scheduled sequences and Action 4 prevents machines from lying idle while jobs requiring that capability are waiting elsewhere.

The tolerance level ρ in the delay can be varied such that the strategy is more responsive at high load levels than at medium and low load levels. The tolerance level was related to the average travel time between the machines in the systems, as the part can get delayed in that range based on the transporter allocation. The actual values used were (a) zero tolerance for high load level, (b) four times the average travel time for medium load level, and (c) seven times the average travel time for low load level. These multiples were found using several trial runs with one of the cases used in experimental study.

The strategies considered so far in this paper under the limited modification approach used LWINQ for reassignment. The LWINQ dispatching heuristic takes into account the current status of the shop floor. However, if an event-list schedule is being simultaneously followed, the use of LWINQ can lead to increased disturbances in the schedule. Consider two compatible machines 1 and 2, machine 1 having a smaller amount of work-in-queue than machine 2. Assume that machine 1 has several operations scheduled in near future while machine 2 has only a few. Use of LWINQ in such case will reassign an incoming delayed job originally assigned to machine 2, to machine 1, which will disturb the scheduled sequence on that machine with a number of operations being sent for reassignments. If there was a way to consider the scheduled operations in near future a more prudent reassignment could have been made. The pairwise exchange across compatible machines is one of the ways through which the strategy described here combats the effect of interruption while keeping the disruptions to the schedule at a low level.

Another possible mechanism to reduce the effect of interruption is to allow the jobs getting delayed by a large time interval to go earlier than allowed by the scheduled sequence on the originally assigned machine itself. Thus a delayed operation may be exchanged with a lower priority operation scheduled earlier in the sequence on the assigned machine. In terms of a Gantt chart, this translates into a left pairwise exchange.

The changes in schedule need not be pairwise exchanges in all cases. If a compatible machine has a scheduled slack pocket long enough to complete the operation being considered for reassignment, then the operation can be rescheduled to exploit the available slack. In such cases, only a one way reassignment is required. Fig. 1
                               shows the options considered by the Pairwise Exchange Heuristic to achieve improvements in the schedule performance. A majority of modifications to the schedule are expected to be pairwise exchanges (left or across machines) rather than one way reassignments and hence the name, Pairwise Exchange Heuristic. As such, the one way reassignments are equivalent to exchanging the operation for the slack time on the alternate machine, thus allowing the original machine to catch up with the scheduled tasks. The heuristic manipulates only the non-committed operations in the schedule.

The Pairwise Exchange Heuristic requires comparison of priorities of operation to determine if an exchange can be carried out. A priority index is designed based on following insights gained from studying the impact of interruption:

                                 
                                    1.
                                    If an operation is followed by a scheduled waiting time for the corresponding job, it should have a lower priority as its delay can be absorbed by the scheduled waiting time.

A delayed operation should have a higher priority over a less delayed or on-time operation to prevent the operation from getting further delayed.

Operations of a job nearing completion should have higher priority over operations of jobs in earlier stages of their processing. This will allow reducing the impact on the delivery performance.

A long operation should have higher priority over a short operation. This will tend to exchange long operations allowing delayed machines to catch up with the schedule.

A comprehensive priority index incorporating these factors is defined below.

                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      P
                                                      r
                                                      i
                                                      o
                                                      r
                                                      i
                                                      t
                                                      y
                                                      
                                                      I
                                                      n
                                                      d
                                                      e
                                                      x
                                                      
                                                      f
                                                      o
                                                      r
                                                      
                                                      P
                                                      a
                                                      i
                                                      r
                                                      w
                                                      i
                                                      s
                                                      e
                                                      
                                                      E
                                                      x
                                                      c
                                                      h
                                                      a
                                                      n
                                                      g
                                                      e
                                                      =
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   w
                                                   1
                                                   ×
                                                   s
                                                   c
                                                   h
                                                   e
                                                   d
                                                   u
                                                   l
                                                   e
                                                   d
                                                   
                                                   s
                                                   l
                                                   a
                                                   c
                                                   k
                                                   
                                                   t
                                                   i
                                                   m
                                                   e
                                                   
                                                   b
                                                   e
                                                   f
                                                   o
                                                   r
                                                   e
                                                   
                                                   n
                                                   e
                                                   x
                                                   t
                                                   
                                                   o
                                                   p
                                                   e
                                                   r
                                                   a
                                                   t
                                                   i
                                                   o
                                                   n
                                                   
                                                   f
                                                   o
                                                   r
                                                   
                                                   t
                                                   h
                                                   e
                                                   
                                                   j
                                                   o
                                                   b
                                                
                                             
                                          
                                          
                                             
                                                
                                                   +
                                                   
                                                   w
                                                   2
                                                   ×
                                                   e
                                                   x
                                                   p
                                                   e
                                                   c
                                                   t
                                                   e
                                                   d
                                                   
                                                   d
                                                   e
                                                   l
                                                   a
                                                   y
                                                   
                                                   o
                                                   f
                                                   
                                                   t
                                                   h
                                                   e
                                                   
                                                   o
                                                   p
                                                   e
                                                   r
                                                   a
                                                   t
                                                   i
                                                   o
                                                   n
                                                   
                                                   r
                                                   e
                                                   l
                                                   a
                                                   t
                                                   i
                                                   v
                                                   e
                                                   
                                                   t
                                                   o
                                                   
                                                   o
                                                   r
                                                   i
                                                   g
                                                   i
                                                   n
                                                   a
                                                   l
                                                
                                             
                                          
                                          
                                             
                                                
                                                   s
                                                   c
                                                   h
                                                   e
                                                   d
                                                   u
                                                   l
                                                   e
                                                   +
                                                   
                                                   w
                                                   3
                                                   ×
                                                   n
                                                   u
                                                   m
                                                   b
                                                   e
                                                   r
                                                   
                                                   o
                                                   f
                                                   
                                                   r
                                                   e
                                                   m
                                                   a
                                                   i
                                                   n
                                                   i
                                                   n
                                                   g
                                                   
                                                   o
                                                   p
                                                   e
                                                   r
                                                   a
                                                   t
                                                   i
                                                   o
                                                   n
                                                   s
                                                
                                             
                                          
                                          
                                             
                                                
                                                   +
                                                   
                                                   w
                                                   ×
                                                   p
                                                   r
                                                   o
                                                   c
                                                   e
                                                   s
                                                   s
                                                   i
                                                   n
                                                   g
                                                   
                                                   t
                                                   i
                                                   m
                                                   e
                                                   
                                                   o
                                                   f
                                                   
                                                   t
                                                   h
                                                   e
                                                   
                                                   o
                                                   p
                                                   e
                                                   r
                                                   a
                                                   t
                                                   i
                                                   o
                                                   n
                                                
                                             
                                          
                                       
                                    
                                 
                              where w1 through w4 are weights associated with each factor and lower value of the index indicates higher priority. The following weights were used to assign appropriate importance to the respective factors:

                                 
                                    
                                       
                                          w
                                          1
                                          =
                                          1
                                          ,
                                          
                                          w
                                          2
                                          =
                                          −
                                          1
                                          ,
                                          
                                          w
                                          3
                                          =
                                          2
                                          ,
                                          
                                          w
                                          4
                                          =
                                          0.5
                                          .
                                       
                                    
                                 
                              
                           

The above weightages were developed based on perceived relative importance of the factors. If there are any user defined priorities associated with jobs or part types, they can be easily incorporated as an additional factor in the priority index expression with appropriate weight.

The detailed Pairwise Exchange Heuristic can now be described as below:

                                 
                                    1.
                                    If a part is blocking a machine, shunt the part to a temporary storage location. No reassignment is initiated by the machine blocking condition under this strategy, as they are triggered only based on expected delays. Once at the temporary location, wait until part is ready to move, that is, until there is space in the input queues for the machines capable of executing its next operation. Go to step 3 below.

When a part completes an operation :
                                          
                                             a.
                                             Determine the expected time at which its next operation can start at the scheduled machine. The expected start time is calculated by adding the processing times of the non-committed operations scheduled earlier in sequence and offsetting it from the end of current committed processing time of the machine.

If the operation will be delayed, attempt a left pairwise exchange. Exchange the position of the operation in the scheduled sequence with the earliest non-committed operation with a priority lower than the subject operation. If the operation is not expected to be delayed after the left pairwise exchange, send the corresponding job for transportation.

If the operation is still expected to be delayed after considering left pairwise exchanges, attempt a pairwise exchange across machines. Set the earliest available time as the expected start time on the originally assigned machine. For each alternative machine:
                                                   
                                                      i.
                                                      Determine its committed processing time. If the committed processing time exceeds the earliest available time then go for next alternative machine.

For each successive non-committed operation, determine the availability time of the machine. If there is a scheduled slack pocket between the machine availability time and scheduled start time of the operation long enough to accommodate the operation under consideration, set the earliest available time to start time of the slack pocket and go for examining next alternative machine.

If the slack pocket is not long enough, determine the priority of the non-committed operation on the alternative machine. If that operation has a lower priority than operation in consideration, set the earliest available time to the availability time of machine before the start of lower priority operation, and go for the next machine. Note that the first operation with a lower priority is considered rather than scanning all the non-committed operations and selecting the one with the lowest priority.

When all the alternative machines have been examined, determine the current earliest available time. If it is on the originally assigned machine only, no exchange is to be made, go for transportation. If the earliest available time is on an alternative machine representing a scheduled slack pocket, carry out a one way reassignment. If the earliest available time is on an alternative machine representing a lower priority operation, exchange the operation under consideration with the lower priority operation, and send the part for transportation.

When a part is ready to move to next machine:
                                          
                                             a.
                                             If the operation of the part is the earliest non-committed operation in the current scheduled sequence, allow it to proceed.

If there are operations scheduled earlier in the current scheduled sequence, check the status of the corresponding jobs. If the jobs have not completed their earlier operation, allow a sequence-switch and proceed to machine. If any of the corresponding jobs are available, then go back to wait.

This strategy shares the features of strategy 2C which overcome the shortcomings of strategies 2A and 2B. The strategy improves upon strategy 2C through the use of pairwise exchanges which reduce the disruptions caused by the schedule modification itself.

Job shop dispatching rules allow dynamic reaction to shop floor events. However, they have been criticized as having a myopic view resulting in suboptimal performances. Their simplicity and absence of truly optimal alternate solutions have prompted their widespread use in job shops and their analysis in a number of studies. Their simplicity also prompted their consideration as a means to manage uncertainty in this study.

Traditionally, dispatching rules are used to select the next job to be processed from a set of jobs awaiting service (Blackstone, Phillips, & Hogg, 1982). If multiple compatible machines exist, a machine selection decision is required before a job selection decision can be made. The dispatching rule LWINQ provides a logically appealing option for this purpose. Once a machine has been selected, a selected dispatching rule can be used in the traditional role to determine the processing order. Thus a combination of two dispatching rules, one for machine selection and one for job selection, is needed for complete control of shop floor.

The complete shift to dispatch rule-driven mode offers the advantage of having a mechanism which responds to shop floor events in real-time. Using simple strategies described above does not fully exploit the real-time situations on the shop floor. For example, strategies 2A and 2B react only when a machine blocking condition occurs. There may be many situations after the interruption, where jobs will be waiting for the originally assigned machine while alternative machines are lying idle, but no action will be taken by the strategies unless the waiting jobs start blocking some machine. In a complete dispatching rule-driven mode, such situations will not occur and hence they may lead to a good performance.

Under the implementation here, the complete shift to dispatch rule-driven mode controls the movement of parts after they are released into the system. The release of parts continues to be controlled by the original schedule to try to maintain the scheduled order of part completions.

Three strategies with combinations of rules are used in the study as below.

This strategy calls for complete shift to dispatching rule-driven mode with an earliest scheduled operation first (ESOF) rule for next job selection and LWINQ for next machine selection. The ESOF job selection rule utilizes the information contained in the schedule by prioritizing on scheduled operation start times. This is designed to allow the events on shop floor to stay close to the scheduled sequence of events.

This strategy uses First-in-First-out (FIFO) for next job selection and LWINQ for next machine selection after shifting completely to dispatch rule mode.

The third combination of rules for complete shift to dispatch rule-driven mode is provided by shortest operation processing time first (SOPTF) for job selection and LWINQ for next machine selection. The SOPTF rule, frequently referred to as shortest processing time (SPT) rule, has been consistently found to result in best or near best performance in a number of dispatching rule studies stretching as far back as Conway and Maxwell (1962). These reported good performances of the SOPTF rule prompted its inclusion in this study.

In all three combinations, the dispatching rule for next machine selection has been selected as LWINQ. Several other next machine selection rules were reviewed but they either didn't have the logical appeal to warrant further consideration or they did not match LWINQ's performance in trial runs. Examples of rules which did not appeal logically are nearest available station (NERST) and smallest number of jobs in next queue (SNINQ). Example of a rule that fell short on performance is the lowest utilized machine (LOUTL) rule.

The three strategies involving switching to dispatching rules are quite different than the strategies described earlier. These strategies completely take over the schedule and are applied for dispatching of each and every operation taking place in the system after the occurrence of interruption. This allows them to be more responsive than the earlier strategies. Also, the dynamic nature of this approach precludes two of the shortcomings of earlier approaches namely, undesirable sequence switches and indiscriminate application. These shortcomings can be gauged only in approaches which follow the original schedule or allow its limited modification.

An experimental study was carried out to evaluate the performance of the strategies for managing uncertainty in different situations in manufacturing systems operating under a predetermined event-list schedule. An event-list schedule provides a chronological sequence of events for each of the resources included within the scope of the scheduler. The event-list schedule is itself generated using a simulation run with selected dispatching rules and with deterministic processing and material handling times. A FIFO rule was used for next part selection at the machines, with shortest work in next queue rule for next machine selection for the parts. A number of combinations of dispatching rules were tried at the time of the schedule generation, and these rules were found to give the overall best performance considering part throughput, machine utilization, and the duration to achievement of steady state. The nearest available transporter rule was used for scheduling transportation. Use of simulation to generate the schedules is similar to using commercial simulation based scheduling software such as SIMUL8-PLANNER (Hindle and Duffin, 2006) and SIMIO (Pegden and Sturrock, 2010). The operation of a manufacturing system is then simulated with the previously generated schedule as an input. Once steady state has been achieved, an interruption is introduced followed by the implementation of the strategies.
                  

A full factorial design was used for the experiments to examine the 10 different strategies, with each strategy being evaluated in 54 situations (3 manufacturing scenarios × 3 load levels × 2 levels of severity of interruption × 3 levels of duration of interruption), requiring a total of 10 × 54 = 540 runs. The factors and levels selected for each are described below.

Use of deterministic operation and interruption times for the experiments eliminated the need for carrying out multiple replications. However, the full factorial design gave the option to allow treatment of runs as replications for factors not found significant. This allows identification of anomalies among such replications. For example, the results of the study indicate no significant differences between the considered levels of severity of interruption within a scenario. This allowed determination of anomalies due to the influence of the sequence of actual and scheduled events in some cases.

This factor is a qualitative factor in this design since it is not varied along a scale of values. Data sets describing three different real manufacturing systems were used in this study, one each from the defense industry (WAR), the aerospace industry (AIR), and the automotive industry (CAR). Major characteristics of the three data sets are summarized in Table 1 (please see Figs. S.1–S.3 for schematic layout of the three systems).

All the three systems were classified as FMSs by their parent organizations. WAR and AIR scenarios had more characteristics expected in an FMS, such as workstations that were flexible and switched between part types and operations with minimal set up time, high reentrancy with multiple visits to load-unload station for each part and minimal setup time required for changing among preloaded tools within the magazine. WAR scenario had higher reentrancy of the two. The CAR scenario, while relatively flexible compared to transfer lines so typical of automotive industry, represented an FMS with lower flexibility than the systems in AIR and WAR scenarios. The part routes criss-crossed across the facility, but each route was mostly uni-directional. The parts did have multiple operations on the same machine, but did not backtrack to machines earlier in their routing. Machines required finite set up times in-between different operations. Out of the three scenarios, CAR system was the only one that included assembly as the final operation. The system's flexibility was in the range of parts it could manufacture over the long term. Indeed, for the short term operations the CAR scenario had characteristics of a flowshop.

Manufacturing systems are operated at varying load levels depending on the variations in internal and external demands being satisfied through the system. Sabuncuoglu and Bayiz (2000) found the system load level to have a high impact on the performance of interruption response approaches. The three load levels used in this study are high, medium, and low and are based on the average machine utilization in the system. The high load level for each system is determined as the one above which it is difficult to attain steady operating conditions. Simulation was used to determine the highest load level at which steady state conditions are achieved. The manufacturing systems were loaded using different inter-arrival times for the various part types manufactured in the system. The occurrence of steady state was ascertained using time plots of system performance indicators. Steady state is assumed to exist when the cumulative averages of the selected performance indicator clusters around a particular value. While several indicators were initially selected for determining steady state, part flowtimes were found to converge last and were used for this purpose.

For the data sets described here, the high load level was found to be that leading to an average machine utilization of around 70%. At this load level, the bottleneck machines achieve utilizations in the range of 80–95%. The medium and low load levels for the above data sets lead to average machine utilizations of around 60% and 50%, respectively. A larger difference between the load levels was not used since this would lead to a value for the low level that is unrealistically low.

The survey of FMSs by Smith et al. (1986) concluded that most FMSs are operated in the 65–75% utilization range. The extremes were found at a low of 30% and a high of 90%. The survey results indicate that the values selected for high, medium, and low load levels for experimentation in this research are representative of FMSs in industry.
                     

Selecting the time of occurrence and duration of interruptions to use in the experiment was a more involved issue than selecting the system load levels. The stochastic capability of simulation would have made stochastic modeling of these characteristics possible, whereas experimental design considerations favored a deterministic approach. Modeling of multiple interruptions of randomly distributed durations occurring at randomly distributed times would have made it difficult to isolate and understand the impact of the interruption and compare performance of the strategies. Hence the appearance and duration of an interruption were set up as deterministic. In successive experiments, only one interruption was introduced after achievement of steady state conditions. Three durations were considered – 1 hour, 2 hours, and 3 hours. This range was selected with the expectation that interruptions shorter than 1 hour may not always call for schedule modifications, and if they do, may be responded to in the same way as for the 1 hour interruption. Interruptions longer than 3 hours may frequently require generation of a new schedule. The results of the study allow us to gauge the impact of the selected range of duration of interruptions in different scenarios.

The severity of interruption was considered at two different levels in this design. At the large severity level, the failure of one of the most highly utilized machines (with utilization > 80%) processing a majority of part types in the system is considered. Failure of such a machine will cause a major disturbance in the schedule, disrupting processing of a large number of parts. At the small severity level, failure of a moderately utilized machine will disrupt the schedule less than the failure of a heavily utilized machine. The target machines for small severity of interruption had utilizations around 60%.

The following major assumptions have been used in this experimental study.

                           
                              1.
                              The durations of operations were assumed to be deterministic. This assumption is not unrealistic considering the state-of-the-art in AMSs.

A machine failure occurs only while it is busy processing a part. Failure of a machine causes the processing to be interrupted. The remaining processing is completed after the machine is repaired. There is no flexibility to move the in-process parts to another machine following the failure of the machine.

The pre-generated event list schedules do not provide any built-in mechanisms for absorbing interruptions, such as inflated process times, additional safety lead times, dummy part scheduling and reduced available capacity.

The due date and time for a part is the completion date and time of the last operation per the event-list schedule. That is, the original schedule has zero tardiness.

All of the manufacturing systems considered are assumed to be capable of fully automated operation, with human operators required only at load-unload stations. Operators are assumed to be available when needed.

All the manufacturing systems considered are assumed to run around the clock. Such operation does not allow use of overtime to catch up with the schedule.

Machines, buffer spaces, transporters, and fixtures are finite resources constrained to the defined numbers in the scenario.

The impact of an interruption generally spreads to many parts and part types in the system. The tardiness of individual parts may differ widely across different scenarios. Mean tardiness was selected as an aggregate measure of the impact of interruption on the delivery performance in this study. It has also been reported to be an important measure of manufacturing performance in industry (Smith et al., 1986).

The occurrence of a machine failure directly affects the parts scheduled for that machine. The immediate effect is a delay for the part currently being processed. The propagation and absorption of delay through the schedule depend on the scheduling relationships between the parts and the machines. As the delayed parts proceed through the system they may delay other parts. The impact of a machine failure affects schedule performance for a long time after the machine has been repaired. In this study, the impact of an interruption is measured over a period of 120 hours (5 working days, 3 shifts/day) following the occurrence of an interruption with the thought that if the impact of an interruption at the beginning of the work week is not within acceptable limits by the end of the working week, management may opt to add overtime shifts during the weekend.

Specifically, mean tardiness was measured over the period of 120 hours from the occurrence of an interruption. This tardiness value was calculated over the parts which were scheduled to be completed during this period. For parts which were not completed as a consequence of the interruption, tardiness was calculated as follows:

                           
                              
                                 
                                    
                                       
                                          
                                             P
                                             a
                                             r
                                             t
                                             
                                             t
                                             a
                                             r
                                             d
                                             i
                                             n
                                             e
                                             s
                                             s
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             e
                                             n
                                             d
                                             
                                             t
                                             i
                                             m
                                             e
                                             
                                             o
                                             f
                                             
                                             o
                                             b
                                             s
                                             e
                                             r
                                             v
                                             a
                                             t
                                             i
                                             o
                                             n
                                             
                                             p
                                             e
                                             r
                                             i
                                             o
                                             d
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                             r
                                             e
                                             m
                                             a
                                             i
                                             n
                                             i
                                             n
                                             g
                                             
                                             p
                                             r
                                             o
                                             c
                                             e
                                             s
                                             s
                                             i
                                             n
                                             g
                                             
                                             t
                                             i
                                             m
                                             e
                                             
                                             f
                                             o
                                             r
                                             
                                             t
                                             h
                                             e
                                             
                                             p
                                             a
                                             r
                                             t
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             −
                                             
                                             s
                                             c
                                             h
                                             e
                                             d
                                             u
                                             l
                                             e
                                             d
                                             
                                             c
                                             o
                                             m
                                             p
                                             l
                                             e
                                             t
                                             i
                                             o
                                             n
                                             
                                             t
                                             i
                                             m
                                             e
                                             
                                             f
                                             o
                                             r
                                             
                                             t
                                             h
                                             e
                                             
                                             p
                                             a
                                             r
                                             t
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The remaining processing time included time for material handling and load-unload steps. The proportion of incomplete parts was quite low and did not warrant more detailed schemes for including the impact of incomplete parts.

@&#RESULTS AND DISCUSSION@&#

The mean tardiness values at the end of 120 hours following the interruption for the 540 runs are provided in Tables 2–4
                     
                     . The total number of machine reassignments and sequence changes for the 540 runs are provided in Tables S.1–S.3 in the online Supplementary material and generally agree with expected trend of increasing number of changes going from strategy groups 1 to 3. In the cases of no change strategies the results were found to be generally intuitive. The resulting mean tardiness from machine failures is larger for higher load levels, larger severity, and longer duration interruptions within each scenario.

The performances of the strategies were unexpected in some cases. The strategies that involved changes to the schedule did perform better, i.e., did result in lower mean tardiness, than the cases with no change strategies. Among the strategies, the Pairwise Exchange Heuristics (strategy 2D) did turn in the best performance in highest number of cases, but it was unexpectedly matched by strategies involving switching to dispatching mode (strategies 3A–B–C) in mean performance in a number of cases and even exceeded in a few cases. Also, strategy 2C using a combination heuristics did not result in anticipated consistent improvement in performance over simpler strategies. The strategy was designed after studying the shortcomings of strategies 2A and 2B and the strategies involving switching to dispatching mode (3A–B–C) but it did not improve over them. It should be noted that strategies 2A and 2B were based on those used in the industry and they were out-performed or matched by other proposed strategies in all the 54 cases except for one case each.

The results are discussed in four subsections below. The first subsection presents selected observations based on detailed study of simulation event sequences leading to specific performances. The second subsection presents a statistical analysis of overall results based on the 540 runs. The third subsection compares the best and second best performances achieved in each of the 54 cases with the strategies for handling uncertainty. The fourth subsection identifies performance domains for the strategies.

Strategy 2D, Pairwise Exchange Heuristic, was designed as an improvement over all the other strategies. Its use led to very good performances, particularly at medium and low load levels. But it was not able to match the performance of strategies 3A, 3B and 3C at the high load level, though it did come quite close in some cases. Strategy 2C, also designed after analyzing the performances of strategies 2A–B and 3A–B–C, did even worse. Variations in performance of the two strategies that were designed in this research, 2C and 2D, with different load levels are presented in Fig. 2
                        . The best performance achieved with no change strategies (1A, 1B, 1C) and the performance of strategy 3A are included as reference. It can be seen that while the two strategies did very well at the lower load levels the performance deteriorated at the high load level. At the high load level the strategies made a large number of changes to the original schedule. In fact, at that load level the number of reassignments was in the same range as for those made by strategies 3A, 3B and 3C under the shift to dispatch rule-driven mode approach. Even with this large number of reassignments, strategies 2C and 2D did not match the performance of strategies 3A, 3B and 3C. This suggests a need for large scale modification of schedule in response to interruptions at high load levels.

It should be noted though that the large scale modification at high load levels should be based on an approach other than first come first served. Consider for example the performance of strategy 1C captured in Table 2. Strategy 1C outperforms strategies 1A and 1B at low and medium load levels but turns out to be the worst performer at the high load level. Strategy 1C relaxes the rigidity with which the schedule is followed and allows parts arriving first to be processed first regardless of the scheduled sequence. This relaxation allows taking advantage of available pockets of slack times on machines and transporter at the low and medium load levels. However, the same relaxations amplify disruptions at the high load level since there are none to limited pockets of slack times available and lead to performances worse than other strategies.

Strategy 2D offers a promising option to carry out the large scale modifications together with the goal of returning to the original event list schedule. Its performance was close to those of strategies 3A, 3B and 3C in some of the cases at high load level. Fine tuning of parameters (tolerance level in delay and weights attached to different components of the priority index) for particular situations may lead to further improvements in its performance.

The improvements in performance via the three strategies switching to dispatching mode (3A–B–C) were particularly striking at high load levels. The substantial improvements at high load levels may result from the complete change of the processing sequences preempting the propagation of disruptions that would occur through the scheduled chain of events. The availability of slack on the machines is exploited at every possible opportunity, which is not the case with most other strategies. Even though these strategies do not consider the scheduled completion times (only strategy 3A indirectly considers them), the resulting mean job tardiness values are much smaller than cases where the schedule was followed. Trends in performances of strategies 3A, 3B and 3C at high load levels are shown in Fig. 3.
                        
                     

At medium to low load levels for 1 hour durations of interruption strategies 3A, 3B and 3C did not yield the best performances. The initial disruptions caused by the machine failure were not large and may have been absorbed by scheduled slacks to some extent, but the switch to dispatching mode created totally different sequences than the pre-scheduled ones. Even though the average flowtimes achieved were in the same range as with no change strategies, the jobs were completed in different order than scheduled, some jobs completing much earlier than scheduled while others completing much later than scheduled, resulting in performances that did not rank at the top. Fig. 4
                         shows general trends in performances achieved using the three strategies for 1 hour machine failure across load levels. The best performance achieved with no change strategies and the performance of strategy 2D are included as reference.


                        Fig. 4 also shows another interesting phenomenon. The performance achieved at medium load for the included strategies is better than their corresponding performance at low load level. This behavior was found to be due to the influence of configuration of AIR scenario and the small severity level. At low load levels the parts generally flow smoothly with little wait times even at the bottleneck. The disruption impacts the smooth flow delaying the completions of some of the parts. At medium load level, the delays are absorbed by the scheduled wait times at the bottleneck and the net impact on completion times is smaller leading to better performance.

There are a few cases where the strategies turned in matching performances. These cases have occurred at low load levels for 1 hour duration failure for the WAR and AIR scenarios, and at low and medium load levels for 1–2 hour duration failure for the CAR scenario. In the noted cases, the amount of disruption caused to the schedule is small and no machine blockings result due to occurrence of interruption. Some parts were, of course, delayed but not long enough to block the machines. In such cases, the strategies make none to limited changes and hence end up with the same performance.

The impact of bottleneck station affected some of the results in case of CAR scenario, where the performances achieved with no change strategy application were found to be the same as that achieved with other strategy applications even though these others strategies did make a finite number of changes to the schedule. While the upstream sequences changed from that defined by the original schedule, the final completions were not. The affected parts ended up waiting in the queue for the bottleneck and proceeding in the sequence defined by the pre-generated schedule. The performance would have been different only if the changes due to application of strategies were significant enough to change the processing order at the bottleneck station.

In some cases, the performance was atypically influenced by the sequence of actual and scheduled events. The performances of strategies 2A and 2C with large severity interruption at high load level for WAR scenario shown in Fig. 5
                         are such examples. The mean job tardiness value for 2-hour interruption is higher than that for 3-hour interruption. Detailed analysis of the two cases revealed that the good performance for the 3-hour interruption case was due to a few instances where reassigned operations were able to find scheduled slack pockets on the alternate machines, containing the effect of interruption. In 2-hour interruption case, the reassigned operations displaced originally scheduled operations on the alternate machines causing further disruptions thus propagating the effect of interruption. The anomaly is not seen for small severity failure in the same situation nor is it seen for other strategies in the same group shown in Fig. 5.
                     

Statistical analysis of all the results was carried out using the statistical analysis software, SAS. The data set submitted to SAS thus contained a total of 540 observations (54 cases × 10 strategies). The summary of analysis of variance is presented in Table S.4 in Supplementary material.

The analysis shows that the main effects of scenario, duration, strategy and load are highly significant. The main effect of severity was not found significant, which was expected based on the similarity of results at the two levels of severity. Tables S.5–S.7 showing best performers in each case for the three manufacturing systems in the online Supplementary material are arranged to bring the results at the two different severity levels next to each other to allow examination of the similarity where present. A number of two factor interactions were also found highly significant supporting their selection in the design of experiments. Even though the main effect of severity was not significant, its interaction with scenario was found to be highly significant. The analysis thus verified the selection of the particular five factors.

The statistical analysis supported the understanding of the effect of various factors and their interrelationships gathered from the performance evaluation of strategies in individual scenarios. For example, the performance of strategies in AIR scenario brought out the interaction between scenario and severity factors. The AIR scenario is characterized by small number of machines (5), with two of them being the bottlenecks. Each part has to go through one 3-hour long and a couple of shorter operations on the bottleneck machines. Also, parts have to go through the same machines a number of times. Any modification in the schedule at the high load level causes lot of disruptions due to the length of operations displaced, and further, delays do not get absorbed due to high reentrancy and limited slack availability. The deterioration in performance is particularly visible at longer durations of interruptions. Almost all the strategies performed relatively poorly against the failure of the bottleneck machine (large severity interruption). The strategies performed better for small severity interruptions, that is, the failure of a machine other than the bottleneck machine.

Similarly examples of scenario and strategy interaction were seen in the performance of the complex strategies for schedule modification (i.e., strategies 2C and 2D) that did much better for WAR and AIR scenarios than for the CAR scenario.

The statistical analysis above indicated significant differences between the average performances of the strategies. The best performances in each case were identified to quantify the range that can be achieved with different strategies for handling uncertainty. These comparisons are presented in Tables S.5, S.6, and S.7 for WAR, AIR and CAR manufacturing scenarios respectively in the on-line Supplementary material. The tables present the best performances achieved with no change strategies as the base case since they may end up as the default mode of operation if no strategy to manage uncertainty is defined. The results show that the use of strategies that modified the schedule either on a limited basis (strategies 2A, 2C, and 2D) or widely (strategies 3A, 3B, and 3C) improved the performance appreciably over no change strategies (1A, 1B, and 1C) in almost all the cases. The improvements in performance were particularly striking at the higher load levels with longer durations of interruption.

The few exceptions to general trend occurred in case of CAR scenario, where in three cases the best performances achieved using other strategies was slightly worse than with no change strategies. Also, there were five cases where the best performances matched exactly in the two modes. The overpowering influence of the bottleneck station in the CAR scenario discussed earlier in Section 5.1 was identified as the reason for such cases.

The distribution of best and second best performance cases among the different strategies was examined (see Table S.8 in the on-line Supplementary material). The examination considered unmatched performances, i.e., the cases where the best or 2nd best performance was achieved by only one strategy, from matched performances where the best or 2nd best performances were achieved by multiple strategies. Strategy 2D, the Pairwise Exchange Heuristic, stood out as the strategy that achieved most unmatched best performances and most total best and 2nd best performances. The strategies involving switching to dispatching mode fared well in mostly the same scenarios as strategy 2D and matched best performances in a number of those. Most of these best performances were achieved in CAR scenario that has lower flexibility than WAR and AIR scenarios. Coupled with earlier statistical analysis, the examination of best performances suggests that Pairwise Exchange Heuristic works very well in manufacturing systems with high flexibility.
                     

The results of the study demonstrated that use of interruption handling strategies can lead to appreciable improvements in performance. However, achievement of these best performances in particular situations requires selection of the particular strategy leading to that performance. The results of the study are used to identify approximate domains where particular strategies usually perform well.

The performance evaluations reported in earlier sections suggest a major dependence of performance domains on manufacturing scenarios. Within each scenario, the influence of severity of interruption was not found to be statistically significant, and hence it need not be included as an active influence in the analysis of performance domains. This allows treating the runs for different severity levels as replications for the purpose of determining approximate performance domains. The best and second best strategies in each situation (defined by scenario, load level and duration of interruption) discussed in Section 5.2 were used to identify the performance domains. The performance domains of strategies with respect to WAR and AIR scenarios are represented in Fig. 6. The domain areas in Fig. 6 were defined by considering each strategy for the combined factors of load level and duration of interruption. An area was assigned to the performance domain of a strategy if any one of the following conditions for the strategy was met:

                           
                              1.
                              the strategy gave best performance for both large and small severity of interruption, or,

the strategy led to one best performance (for either large or small severity) in the considered area and at least one best performance in any of the contiguous areas, or,

the strategy led to one best performance in the considered area and at least two second best performances in contiguous areas.

Strategies of switching to dispatching mode (3A, 3B and 3C) were considered in one class for performance domain identification due to absence of significant differences between their performances.

No performance domains are identified for CAR scenario as a number of strategies performed well in most of the situations examined. Specifically, strategies under the shift to rule-driven mode approach performed well in all the situations, strategies 2A and 2B performed well in most of the situations while strategies 2C and 2D performed well in only a few cases.

For WAR scenario, the performance domain for strategy 2D covers all the situations at medium and low load levels. The situations at high load level fall under the domain of strategies involving switching to dispatching mode. Strategy 2B is also found to lead to good performances at low load levels. For AIR scenario, strategy 2D performs well for short magnitude disturbances, that is, 1 hour duration interruption at all load levels, and 1–3 hours duration interruptions at low load levels. Strategies with switch to dispatching mode perform well for larger magnitude disturbances, that is, at 2–3 hour interruptions across all load levels. Aytug et al. (2005) concluded across multiple studies on predictive-reactive scheduling that dispatching algorithms can outperform optimization-based algorithms in scenarios with high uncertainty and the converse is true for low uncertainty cases. The performance domains defined here agree with that conclusion with the extension that dispatching algorithms perform better in scenarios with large number of perturbations that may result from higher uncertainty (i.e., longer breakdowns), higher system loads, or a combination of high uncertainty and high system loads. The domains also provide the performance thresholds called for by Aytug et al. (2005) albeit for the specific systems considered.

An intelligent controller at FMS operational level can use this information to select the best strategy for handling a particular interruption. If the FMS under consideration does not share the characteristics of either WAR or AIR scenario, experiments similar to those used in this research can be used to identify the performance domains of different strategies.

@&#CONCLUSION@&#

This paper examined different strategies for handling uncertainties in AMSs. Such strategies are needed to continue the pursuit for perfection in management of operations of AMSs and meet the challenge of global low labor cost competition. Several strategies were developed and evaluated. The iterative cycles of improvement and evaluations led to the development of Pairwise Exchange Heuristic which provides a promising option for handling uncertainties. Some of the major conclusions of this paper are listed below.

                        
                           1.
                           The interruption handling procedures used in FMSs in industry do not help much in reducing the effect of the interruption. Use of strategies developed in this research can provide significant improvements in performance particularly at high system utilization levels.

The performance of strategies for handling uncertainty is significantly influenced by the manufacturing system configuration, system load level and duration of interruption. The severity of interruption may influence the performance significantly in some of the configurations.

At high load levels, large scale modification of the event list schedule is required to reduce the effect of interruption on manufacturing system performance. Limited modifications to the schedule, other than using the Pairwise Exchange Heuristic, may cause further disruption thus leading to performances worse than those achieved with no change strategies.

The Pairwise Exchange Heuristic offers a promising option as a general interruption handling strategy. The strategy can be customized to different scenarios by varying some parameters. It offers the advantage of staying as close as possible to the schedule together with an emphasis on delivery performance. In addition, the use of a priority index allows further customization of the strategy to include user selected priorities for individual jobs or part types. It will be prudent to determine values of weights based on systematic experimentation or input from decision makers gathered using a methodology such as the Analytic Hierarchy Process.

The experiments with CAR scenario provided an idea of controlling influence of a major bottleneck on the performance of the system. In such systems, the effect of a failure of a non-bottleneck resource on the performance of the system is not very sensitive to the strategy used.

The experiments with AIR scenario suggested that small FMSs with long operation times are very sensitive to schedule disruptions particularly at the high load level. In such systems, the schedule modifications have to be made very carefully and not that frequently.

Performance domains were identified in WAR and AIR scenarios for different strategies. Such information can be very useful at FMS operational control level for the purpose of handling uncertainty. Its use as the basis for development of an intelligent FMS controller was suggested.

Future research can extend the identification of appropriate strategies for handling uncertainties to a wider spectrum of automated and conventional manufacturing systems. Dispatching rules focused on reducing tardiness such as earliest due date, least slack, and critical ratio, can be included as part of the interruption response strategies. Also, the evaluation of strategies can be extended to a larger study that uses stochastic models for occurrences and durations of interruptions. Use of strategies for handling uncertainties can be explored at the supply network level to improve the delivery performance to the end customer. For example, pairwise exchanges between different orders at pertinent nodes in the supply chain network can be explored to meet the delivery date of a delayed order.

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.ejor.2015.06.060.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

