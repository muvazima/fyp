@&#MAIN-TITLE@&#Ontology design and individual cognitive peculiarities: A pilot study

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Visual ontology design is affected by cognitive peculiarities of expert or analyst.


                        
                        
                           
                           Field-independence, reflection and category width are main cognitive style features.


                        
                        
                           
                           Ontology assessment is feasible via cognitive ergonomic metrics.


                        
                        
                           
                           Collaborative ontology design may have several different scenarios.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Ontologies

Knowledge engineering

Cognitive style

Conceptual structuring

Collaborative design

Cognitive ergonomics

@&#ABSTRACT@&#


               
               
                  The paper presents the main results of the KOMET (Knowledge and cOntent structuring via METhods of collaborative ontology design) project, which aims to develop a novel paradigm for knowledge structuring based on the interplay between cognitive psychology and ontology engineering. By the knowledge structure (a conceptual model) we define the main domain concepts and relations between them in the form of a graph, map or diagram. This approach considers individual cognitive styles and uses recent advances in knowledge engineering and conceptual structuring; it aims to create new, consistent and structurally holistic knowledge bases for various areas of science and technology. Two stages of research have been completed: research into correlations between the expert’s individual cognitive style and the peculiarities of the expert’s subject domain ontology development; and research into correlations between the expert’s individual cognitive style and the group ontology design (including design accomplished by groups of experts with either similar or different cognitive styles). The results of these research stages can be applied to organizing collaborative ontology design (especially for research and learning purposes), data structuring and other group analytical work. Implications for practice are briefly delineated.
               
            

@&#INTRODUCTION@&#

One of the main objectives of research and learning processes is achieving maximal effectiveness from the creation, transfer and dissemination of new knowledge. This effectiveness can be measured by the quality and speed of memorization of the principal concepts of a particular domain and of the relationship between these concepts. Wide evidence exists that the visual thinking used to address the subject of study is positively connected with the quality and speed of memorization, and thus with the effectiveness of knowledge dissemination. Visualization is working as a cognitive tool that facilitates communication both in teacher/learner interaction and within research communities.

Special interest in such graphical forms of knowledge codification can be observed in education science, especially within learning where the students are engaged in group knowledge sharing and co-creation processes with continuous feedback.

Mutual understanding and mentalization in research is of special interest in collective study or discovery. One of the most productive methods of research and learning collaboration promises to be group ontology design. An ontology is a set of definitions we make in understanding and viewing the world (Gruber, 1993). The specific problem being addressed in this work deals with the problem of improving the quality of group or collective ontologies. We are also interested in filling the gaps in understanding the group ontology design process specifics, such as the causes of differentiation between the form and the content of individual ontologies.

During the last decade, visual knowledge representation has become one of the key considerations in knowledge engineering methodology, and it is strongly associated with ontology design and development. These ontologies, which form a conceptual skeleton of the modeled domain, might serve various purposes such as better understanding, knowledge creation, knowledge sharing and reusing, collaborative learning, problem solving, seeking advice, or developing competences by learning from peers (Chu, Lee, & Tsai, 2011; Jung, 2012). Recently, the ontological engineering perspective has gained interest in many research domains, such as medicine, business and computer science (Brochhausen et al., 2011; Oltramari & Ferrario, 2009; Pfister & Eppler, 2012; Schnotz & Kurschner, 2008).

These studies rely heavily on theory and tools from knowledge engineering analysis that already has a long-standing tradition in the knowledge-based systems domain (Mizoguchi, 2003; Mizoguchi & Bourdeau, 2000). The largest number of knowledge engineering research articles has been generated around the theme of descriptive logics and formal foundations of ontology design (Baader, Horrocks, & Sattler, 2005; Kuznetsov, Obiedkov, & Roth, 2007). Our work, however, emphasizes the informal approach based on human-centred ontology design processes, an aspect neglected by most of the existing approaches. Several attempts have been made to bridge this gap and ease the overall ontology development process, such as HCOME – Human-Centered Ontology Engineering MEthodology, by Kotis and Vouros (2006); and human-centred ontology design, by Iqbal, Murad, Mustapha, and Sharef (2013).

The tools and techniques developed in the domain of ontology engineering can be applied fruitfully in the field of knowledge structuring and design (Dicheva & Aroyo, 2004; Dicheva, 2008; Knight, Gašević, & Richards, 2006; Schreiber, 2000) and semantic web applications (Davies, van Harmelen, & Fensel, 2002). The idea of using ontologies and visual structuring in research description and introduction has been discussed in many works (Fonesca, Davis, & Camara, 2003; Sherlock, 2000; Tansley & Tolle, 2009; Yudelson, Gavrilova, & Brusilovsky 2005) and is now being implemented in several research projects and software tools (Bard & Rhee, 2004; Hevner, 2007).

This paper presents the main results of the KOMET (Knowledge and cOntent structuring via METhods of collaborative ontology design) project which was devoted to developing methods that use group visual ontology design in educational purposes, with regard to the respondents’ individual cognitive styles. The group ontology design was tested in the medical domain by a smaller group (Gavrilova, Ravodin, Bolotnikova, & Kotko, 2012) and computer science (informatics) domain by a larger group of participants (Gavrilova, Leshcheva, Bolotnikova, Blagov, & Yanson, 2013). In the larger group of 79 respondents, all the participants were graduate students of the School of Computer Science of Saint Petersburg Polytechnic University. Almost all had 1–2years’ experience of research in computer science, and were in their fifth year of study, on the Masters programme. The domain “computer science” was chosen as all the students are young professionals in this area. We use the term synonymously with “informatics”.

The paper is organized as follows. First, it describes the concept of ontology, with an emphasis on the visual approach to ontology design. Section 2 concentrates on the theoretical background, with sub-Section 2.1 describing ergonomic metrics and their purpose and sub-Section 2.2 providing an overview of cognitive styles and the tests used to assess them. Section 3 presents our human-centred research paradigm and framework, and Section 4 the results obtained in the study of the relationship between cognitive styles and the peculiarities of individual development of ontologies. Section 5 introduces the main results of collective ontology development, taking into account the cognitive styles of participants. Finally, some conclusions are drawn and future work is outlined.

The idea of using visual structuring of information to improve the quality of understanding and mentalization among research colleagues is not new (Shneiderman, 1996). For more than twenty years, concept mapping (Conlon, 1997; Grosslight, Unger, Jay, & Smith, 1991; Jonassen, 1998; Sowa, 1984) has been used to compile maps and mental models that support the process of knowledge sharing.

Many scholars, especially those who teach science courses, operate as knowledge analysts or knowledge engineers by making visible the skeleton of the studied discipline and showing the domain’s conceptual structure (Kinchin, De-Leij, & Hay, 2005). This structure is frequently represented by a so-called “ontology”.

From a philosophical viewpoint, “ontology” is the branch of philosophy which deals with the nature and organization of reality. Ontologies aim at capturing domain knowledge in a generic way and providing a commonly agreed understanding of a domain, which may be reused and shared across applications and groups (Chandrasekaran, Josephson, & Benjamins, 1999). Neches and colleagues (Neches et al., 1991) gave the classical definition as follows, “An ontology defines the basic terms and relations comprising the vocabulary of a topic area as well as the rules for combining terms and relations to define extensions to the vocabulary”.

There are numerous other definitions of this milestone term (Gruber, 1993; Guarino & Giaretta, 1998; Gómez-Pérez, Fernández-López, & Corcho, 2004). Together, these definitions clarify the ontological approach to knowledge structuring while giving sufficient freedom for open-ended, creative thinking. Many researchers and practitioners have argued about the differences between ontology and a conceptual model. We propose that ontology corresponds to the analyst’s view of the conceptual model, but is not de facto the formal model itself.

The visual approach to presenting ontologies is not only compact but also comprehensive. It makes ontology a powerful mind tool (Jonassen, 1998).

By definition, ontology is a declarative representation of a certain precise domain specification, including the glossary of the domain terms and the logical expressions describing the meanings and the relationships of these terms, thus allowing structured sharing of knowledge related to the domain (Gruber, 1993). The relationships between the concepts in ontologies can be of different types, e.g. “is”, “has part”, “has a property of”, etc. The concepts and relationships are universal for a certain class of objects in a subject area. Conceptual model visualization methods such as ontologies are also widely and effectively used in education, and many learning ontologies have been developed for a number of disciplines (Barros, Verdejo, Read, & Mizoguchi, 2002; Chi, 2009; Dall’Alba and Barnacle, 2007; Fonesca et al., 2003; Gaeta, Loia, Mangione, Miranda, & Orciuoli, 2014; Gaeta, Loia, Orciuoli, & Ritrovato, 2015).

However, the ontology-based approach to conceptual knowledge representation in research and pedagogy is a relatively new development. Ontologies are now considered as the most universal and shareable forms of such representation and modeling. There are more than a hundred techniques and notations that help to define and visualize conceptual models.

Ontologies are useful structuring tools, in that they provide an organizing axis along which every researcher (or student) can mentally mark his/her vision in the information hyper-space of domain knowledge. Frequently, it is impossible to express all the information as a single ontology. Accordingly, subject knowledge storage consists of a set of related ontologies. Some problems may occur when moving from one ontological space to another, but constructing group meta-ontologies may help to resolve these problems.

For both formative and summative assessment purposes, creation of ontologies and explanation of the processes involved can clearly indicate the extent and nature of the knowledge and understanding. Knowledge entities that represent the static knowledge of the domain are stored in hierarchical order in the knowledge repository and can be reused by others. At the same time, those knowledge entities can be reused in descriptions of the properties or a methodological approach as applied in the context of another related knowledge entity.

Of course, the ontologies are inevitably subjective to a certain extent, as knowledge by definition includes a component of personal subjective perception; however, using the ontologies developed by others is a convenient and compact means of acquiring new knowledge. At the same time, collective ontology development experience allows the participants in the process to gain the fullest possible understanding of the subject area.

Meta-ontology provides a more general description dealing with higher-level abstractions (mind maps (Buzan, 2005) and concept maps (Novak, 1998; Novak & Cañas, 2006)). Fig. 1
                      (Gavrilova & Kudryavtsev, 2011) illustrates different ontology classifications in the form of the mind map. This representation may be called the knowledge map. Such maps are graphical tools for organizing and representing knowledge.

Knowledge maps are now widely used for visualizing ontologies at the design stage, while ontology editors (like Protégé) facilitate the development stage.

Research on knowledge mapping in the last 12years has produced a number of consistent findings (O’Donnell, Dansereau, & Hall, 2002). People recall more central ideas when they learn from a concept map than when they learn from text, and those with low verbal ability or low prior knowledge often benefit the most. It seems that knowledge maps reduce cognitive load. The use of knowledge maps also appears to amplify the benefits associated with scripted cooperation (Stephens, 2012). Learning from maps and communication via maps are enhanced by active processing strategies such as summarization or annotation and by designing maps according to gestalt principles of organization (Gavrilova, 2011; Wertheimer, 1938).

Bearing in mind that ontologies are to be used not only as a knowledge component of knowledge management systems but also as a mind tool for comprehensiveness and better understanding, we have tried to follow the principle of good shape (or beauty) that is not new in basic scientific abstraction, and modeling (e.g. physics, chemistry, etc.). It is difficult to give a formal definition of this concept but it features the imprecise sense of harmonious or aesthetically pleasing proportionality and balance. The most substantial impulse to it was given by the German psychologist Max Wertheimer (Wertheimer, 1938). In a previous paper (Gavrilova, Leshcheva, & Strakhovich, 2014) we described how to apply this beauty-centred approach to business ontology design. In the KOMET project we consistently develop this method by combining expert assessment with formal assessment by ergonomic metrics, as presented in the next section.

Many aspects affect the quality of an ontology from the cognitive ergonomic point of view, including the basic principle of evaluating visual perceptibility and understandability. Metrics of this kind were first proposed by the research group of Aldo Gangemi (Gangemi, Catennaci, Ciaramita, & Lehman, 2006). The ontology evaluation based on these metrics is formal but it helps to assess the quality of the ontology. The expanded list of metrics and the software tool for its assessment COAT (Cognitive Ontology AssessmenT) were presented in detail in two works (Bolotnikova, Gavrilova, & Gorovoy, 2011; Gavrilova, Bolotnikova, & Gorovoy, 2012). The COAT software environment provides the calculations for more than 30 metrics. COAT is implemented as an application in Java. Ontologies in OWL format are supported by the Jena Semantic Web Framework, a Java library class for working with RDF and OWL ontologies. The main metrics are calculated automatically.

In evaluating the quality of the designed ontologies, the following two aspects are most important: (1) correctness and depth of reflection of the subject domain, and (2) ergonomic aspect of the ontology representation from the point of view of quality and human speed of perception.

In the KOMET project the quality of the developed ontologies was assessed by two methods:
                           
                              •
                              An expert method, where the ontology analyst and domain experts (both professors in computer science) evaluated the quality against such criteria as simplicity, completeness, imbalance and relevance.

A formalized method, where ontology (converted into OWL-representation) was assessed by a set of quantitative metrics using COAT software.

The formalized method is preferable as it is free from experts’ and analysts’ subjective interpretations and had the potential to be automated.

In our research the developed ontologies were assessed by an augmented set of metrics (such as minimal depth, absolute width, etc.) suggested in Bolotnikova et al. (2011).

The notation used to describe the metrics is as follows:
                           
                              “g”, a graph representing an ontology; the concepts (classes and exemplars) of the ontology are the graph nodes, and the relationships between the concepts are the graph edges;

“G”, a set of all the nodes g;

“E”, a set of all the edges g.


                           
                              
                                 
                                    m
                                    =
                                    
                                       
                                          N
                                       
                                       
                                          j
                                          ∈
                                          P
                                       
                                    
                                    ,
                                    
                                    ∀
                                    i
                                    (
                                    
                                       
                                          N
                                       
                                       
                                          j
                                          ∈
                                          P
                                       
                                    
                                    ⩽
                                    
                                       
                                          N
                                       
                                       
                                          i
                                          ∈
                                          P
                                       
                                    
                                    )
                                 
                              
                           where 
                              
                                 
                                    
                                       N
                                    
                                    
                                       j
                                       ∈
                                       P
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       N
                                    
                                    
                                       i
                                       ∈
                                       P
                                    
                                 
                              
                            are the path lengths j and i from the set of paths P of the graph g.


                           
                              
                                 
                                    m
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                          
                                          
                                             L
                                          
                                       
                                    
                                    
                                       
                                          N
                                       
                                       
                                          j
                                          ∈
                                          L
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       N
                                    
                                    
                                       j
                                       ∈
                                       L
                                    
                                 
                              
                            is the number of nodes of degree j from the set of nodes L of the graph g.


                           
                              
                                 
                                    m
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                L
                                                ⊆
                                                g
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                          
                                          
                                             L
                                          
                                       
                                    
                                    
                                       
                                          N
                                       
                                       
                                          j
                                          ∈
                                          L
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       N
                                    
                                    
                                       j
                                       ∈
                                       L
                                    
                                 
                              
                            is the number of nodes of degree j from the set of degrees L of the graph g, 
                              
                                 
                                    
                                       n
                                    
                                    
                                       L
                                       ⊆
                                       g
                                    
                                 
                              
                           , the number of all degrees of the graph (a maximal graph depth augmented by 1, if considering only a chosen dominant relationship).


                           
                              
                                 
                                    m
                                    =
                                    
                                       
                                          P
                                       
                                       
                                          90
                                       
                                    
                                    (
                                    
                                       
                                          N
                                       
                                       
                                          j
                                          ∈
                                          P
                                       
                                    
                                    )
                                 
                              
                           where 
                              
                                 
                                    
                                       P
                                    
                                    
                                       90
                                    
                                 
                                 (
                                 
                                    
                                       N
                                    
                                    
                                       j
                                       ∈
                                       P
                                    
                                 
                                 )
                              
                            is a 90% percentile of the graph depth (possible value of the graph path length, not exceeding the length of 90% of the graph paths).


                           
                              
                                 
                                    m
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   2
                                                
                                                
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         L
                                                         ⊆
                                                         g
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  
                                                                     
                                                                        l
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ∈
                                                                  L
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  
                                                                     
                                                                        l
                                                                     
                                                                     
                                                                        i
                                                                        -
                                                                        1
                                                                     
                                                                  
                                                                  ∈
                                                                  L
                                                               
                                                            
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            
                                                               
                                                                  n
                                                               
                                                               
                                                                  L
                                                                  ⊆
                                                                  g
                                                               
                                                            
                                                            -
                                                            1
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               i
                                                               =
                                                               2
                                                            
                                                            
                                                               
                                                                  
                                                                     n
                                                                  
                                                                  
                                                                     L
                                                                     ⊆
                                                                     g
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  
                                                                     
                                                                        l
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ∈
                                                                  L
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  
                                                                     
                                                                        l
                                                                     
                                                                     
                                                                        i
                                                                        -
                                                                        1
                                                                     
                                                                  
                                                                  ∈
                                                                  L
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                L
                                                ⊆
                                                g
                                             
                                          
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                        

A number of nodes with multiple inheritance to the set of all the graph nodes:
                              
                                 
                                    m
                                    =
                                    
                                       
                                          
                                             
                                                N
                                             
                                             
                                                v
                                                ∈
                                                MI
                                             
                                          
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                G
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 MI
                                 =
                                 { v
                                 ∈
                                 G
                                 |
                                 ∃
                                 
                                    
                                       a
                                    
                                    
                                       1
                                       ,
                                    
                                 
                                 
                                    
                                       a
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 isa
                                 (
                                 v,
                                 
                                    
                                       a
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 ∧
                                 isa
                                 (
                                 v,
                                 
                                    
                                       a
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 }
                              
                            is a set of all the graph nodes with more than one “is-a” relationship arc, 
                              
                                 
                                    
                                       N
                                    
                                    
                                       v
                                       ∈
                                       MI
                                    
                                 
                              
                            is the number of all the elements of this set, 
                              
                                 
                                    
                                       n
                                    
                                    
                                       G
                                    
                                 
                              
                            is the number of graph nodes.


                           
                              
                                 
                                    m
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                G
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             v
                                          
                                          
                                             G
                                          
                                       
                                    
                                    
                                       
                                          N
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                v
                                                ∈
                                                G
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       S
                                    
                                    
                                       v
                                       ∈
                                       G
                                    
                                 
                                 =
                                 {
                                 a
                                 ∈
                                 G
                                 |
                                 isa
                                 (
                                 v
                                 ,
                                 a
                                 )
                                 }
                              
                            is a set of all the parents of the node v, 
                              
                                 
                                    
                                       N
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             v
                                             ∈
                                             G
                                          
                                       
                                    
                                 
                              
                            is the number of all the parent nodes of the node v, 
                              
                                 
                                    
                                       n
                                    
                                    
                                       G
                                    
                                 
                              
                            is the number of the graph nodes.

These metrics can help in understanding what should be corrected in the description of the subject domain in order to improve it from the point of view of cognitive ergonomics or better perception. Thus, it is supposed that each next version of the ontology will be better and can be perceived faster by users.

The metrics can also be used in evaluating ontologies of the same subject domain produced by different people/teams. The calculated metrics help to estimate which of them is better from the point of view of cognitive ergonomics, and to choose the best of them if the evaluations of other important criteria differ insignificantly. Figs. 2 and 3
                           
                            show different perspectives of ontology structure.

The cognitive-styles view has acquired great influence within the education field, and is frequently encountered at levels ranging from kindergarten to graduate school. There is a thriving industry devoted to publishing cognitive-style tests and guidebooks for teachers, and many organizations offer professional development workshops for teachers and educators built around the concept of learning styles (Peterson, Rayner, & Armstrong, 2009).

However, we will use the concept of cognitive style only for the aim already stated. As the aim of the KOMET project was to develop a paradigm of structuring data and knowledge with regard to individual cognitive styles, we had to choose the appropriate parameters or features of cognitive style.

The cognitive styles explain and describe how an individual acquires knowledge and how an individual processes information. The cognitive styles are related to problem solving, and generally to how information is acquired, structured and used.

Among the main features of cognitive style (Hayes & Allinson, 1998) we can name:
                           
                              •
                              field dependence versus field independence,

impulsivity versus reflection,

narrowness versus width of the categories,

rigidity versus flexibility,

levelling versus sharpening,

scope of cognitive equivalence,

visual/audio/kinesthetic preferences, etc.

Three characteristics have been chosen from the plethora of cognitive style characteristics described in the literature (Groome, 2014; Mullany, 2001): field dependence/field independence (FD/FID), impulsivity/reflection, and narrowness/width of the category.

According to the definition by Witkin (Witkin, Moore, Goodenough, & Cox, 1977), FD/FID is “a structuring ability of perception”. The field-independent style is defined by a tendency to separate details from the surrounding context. It can be compared to the field-dependent style, which is defined as a relative inability to distinguish detail from other information around it. The FD/FID characteristic can be interpreted as a proxy of the structuring capability of an individual mind. The characteristic of this style does influence the structuring process as a whole (e.g. ontology development “from scratch”), and even more it affects the restructuring process (the merging of individual ontologies). FD/FID exerts considerable influence on the collective problem-solving process. In dyads where members have cognitive styles differentiated by the FD/FID characteristic, the final solution is usually closer to the variant suggested by the FID participant. The FID dyads experience difficulty in developing common decisions on arguable points, while the FD dyads are more successful in coming to agreement in collective problem solving.

Psychologists in our research group were used to working with on-line test, based on the popular modification of Witkin’s method of “embedded figures” which aims to find a simple figure hidden within a complicated one (Witkin, Oltman, Raskin, & Karp, 1971).

The impulsivity/reflection characteristic considers the amount of information collected prior to making a decision: impulsive individuals are able to make decisions on a considerably bounded information basis, while reflective individuals are more inclined to make decisions considering full information concerning the respective situation. For assessing the respondents’ impulsivity/reflection features, the “Matching Familiar Figures Test” (Kagan, 1966) was used.

As for the narrowness/width of the category, the main difference between the extreme poles of this characteristic is that narrowly categorizing individuals are inclined to restrict the area of application of a certain category, while the broad categorizers are, conversely, inclined to include a plethora of more-or-less related examples in a single category. The psychologists consulted on the experimental part of our work advised us to use a modification of the Pettigrew test (1958) by Fillenbaum (1959): the so-called “range width test”. The procedure is based on respondents’ opinion on the minimum, average and maximum evaluations of a concept or category.

The KOMET project was targeted at developing a paradigm of data and knowledge structuring with regard to individual cognitive styles, using recent advances in knowledge engineering and conceptual structuring, aimed at creating structurally holistic knowledge bases for various areas of science and technology. We supposed that individual cognitive peculiarities may dramatically affect the shape and the content of domain ontology, as each ontology designer (knowledge engineer) has specific personal cognitive features. These features may affect such syntactic and semantic parameters of the domain ontology as:
                           
                              -
                              Scope of categories,

Level of granularity,

Shape (depth, width and complexity), etc.

We studied the medical case of a dermatology ontology design process, which took months to complete because of misunderstandings and contradictions within the development team, as a result of cognitive dissonance issues. The difficulties, problems and obstacles within another project on an optics ontology were similar, even in such a well structured domain. The actors– both knowledge analysts and experts – often disagreed over concept vocabulary, relations and even the principles of the designed structure.

Most of the methods and methodologies for building ontologies are focused on the technological development activities, especially on ontology formalization and implementation, and they do not pay too much attention to other important aspects related to management, learning, merging, integration, evolution and evaluation of ontologies (Corcho, Fernandez-Lopez, & Gomez-Perez, 2006).

There are several methodologies for current ontology development. On the basis of the knowledge acquisition method, the methodologies can be classified into automated, semi-automated and manual (from “scratch”). Even though automatic ontology learning methods, such as text mining and knowledge extraction (Navigli & Velardi, 2004), support ontology engineers by speeding up their task, significant amount of manual work is still required in the completion, consolidation, and validation of the automatically generated ontology.

The manual method is based on the interaction between the knowledge analyst and the expert (as it was in classical expert systems: Adeli, 2003; Studer, Benjamins, & Fensel, 1998) and is an example of the collective ontology design process. The literature review identified over a dozen such approaches; for example, Iqbal and colleagues (2013) compared 15 methodologies, concluding that collaborative construction methods are not standardized and little attention is paid to this aspect.

Other methods include UPON (Unified Process for ONtology building), based on a well established and widely used software engineering process, the Unified Process (UP) (De Nicola, Missikoff, & Navigli, 2009); and the classical and popular METHONTOLOGY, which has been tested on several knowledge domains. Of course, such methods of design and development are not without drawbacks, although collective construction mitigates the extreme differences between individual biases. However, none of these methods takes into consideration the individual peculiarities of the experts and analysts. These peculiarities comprise education, background, experience, temperament and personality, including the specific cognitive style parameters.

The novelty of the KOMET project is that we propose to expand the existing palette of ontology, merging approaches from the human-centred viewpoint by preliminary psychological testing to identify the characteristics of individual team members. This makes it possible to propose a better way of collective working in ontology merging and alignment. The results allow different roles to be assigned to the team members. If several experts/analysts are available they can be paired or grouped to optimize the knowledge structuring work.

The KOMET project’s objectives include:
                           
                              •
                              research into correlations between the expert’s individual cognitive style and the peculiarities of the expert’s development of a specific domain ontology,

research into correlations between the expert’s individual cognitive style and group ontology design (including design performed in groups consisting of experts with either similar or different cognitive styles), and

identifying the implications for practical knowledge workers of the time-consuming and sophisticated ontology design process.

The research was divided into two phases: A (individual) and B (collective). The phase-A research was composed of four consecutive steps:
                           
                              •
                              A1: Identifying the significant characteristics of individual cognitive styles, based on the on-line test results, using the software ONTOmaster-TECOS (http://ontomaster.ru) developed in PHP and Java Script by Elena Kotova and Andrew Pisarev (Kotova, 2013).

A2: Creating the “computer science” research domain ontologies using the Protégé (Protégé, 2013) tool.

A3: Informal assessment and formal automatic evaluation of the ontology metrics using the COAT software environment (Gavrilova et al., 2012).

A4: Performing statistical analysis in order to identify significant relationships between the characteristics of the young researchers’ (experts’) individual cognitive styles and the ontology metrics.

A2 step performed using the same test sample of students as A1. All the students were given the task of developing a light-weight ontology for the computer science domain. They did this either by using a visual mapping approach with a pen-and-paper technique or by using the mind mapping software. Later they developed the same ontology with the Protégé tool and we assessed their ontologies in OWL-format.

Phase B consisted of the following steps:
                           
                              •
                              B1: Merging individual ontologies in face-to-face group ontology design.

B2: Expert evaluation of the merged ontologies and comparison with the individual ones.

The KOMET-DILIGENT collective ontology development methodology was designed for step B2 (Gavrilova et al., 2013). This methodology enriches the findings of the Neon Project (Neon Project, 2010).

All the individual and collective ontologies (both in pairs and in groups of 3–5) were analyzed. In the KOMET project, specificity of the collective ontology development was researched. The experiments also aimed to establish how the collective categorization style is developed.

As mentioned in the introduction, the research sample consisted of 79 students were enrolled in the Intelligent Systems Development course. They were given the task of developing an ontology for the computer science research domain. Due to the professional specificity of the sample, a bias toward narrow, reflective and field-independent test persons was found in the sample. However, a statistically significant Spearman’s negative correlation between the FID score and the time of the first answer in the Kagan was calculated, showing that the sample was dominated by the fast FID and slow FD respondents.

On the basis of the literature review and the practical ontology development experience, the following hypotheses were suggested:
                        Hypothesis 1
                        Individuals at the extreme FID end of the FD/FID cognitive style spectrum tend to have highly developed cognitive structuring capabilities; thus, the quality of ontologies developed by FID individuals will be higher.

Impulsive individuals tend to develop superficial ontologies lacking sufficient categorization in the upper level, while reflective individuals tend to develop deeper ontologies.

Ontologies developed by individuals described as “imprecise” in the Kagan impulsivity/reflectivity test results tend to be more complex (entangled).

The “narrowness/width of the category” cognitive style characteristic exerts a significant influence on the ontology width: the “wide categorizers” tend to develop broader ontologies.


                     Table 1
                      presents part of the two series of test results. It describes the correlation coefficients for several metrics and the main parameters of cognitive style:
                        
                           •
                           I/R — impulsiveness/reflexivity.

NС/WC — narrowness/width of category.

The correlation between the cognitive style and ontology metrics values was assessed by Spearman’s coefficient (rank correlation). The significant correlation between the metrics and such features as field dependence/field independence was not found, so it is not presented in the table. Empty cells in the table mean that no significant correlation was found.

Hypothesis 1 was not confirmed, as no significant correlation between the FD/FID metric and the quality of the ontologies was found; this result gave rise to optimistic feelings about the whole project, as it shows that it is possible to teach any individual to develop ontologies of a high quality.

Hypothesis 2 was partially confirmed: the “90% line depth” metric demonstrated significant positive correlations with the time of the first answer in the Kagan test, thus showing that reflective test persons tend to develop deeper ontologies; however, no significant negative correlation between the time of the first answer and the ontology width was found.

Hypothesis 3 was confirmed, as the number of mistakes in the Kagan test demonstrated a significant positive correlation with the values of the “average number of parents of a graph node” metric that characterizes the ontology complexity.

Furthermore, the number of mistakes in the Kagan test demonstrated significant positive correlations with the metrics of the “minimal depth of the ontology” and the “families branching coefficient” and significant negative correlation with the weighted leaves branching coefficient.

Hypothesis 4 was fully supported: the broad categorizers developed larger ontologies in terms of the number of concepts, achieved mainly by the greater number of “children” of each parent concept.

Respectively, the results of the “range width test” demonstrated significant correlations with such metrics as the “average ontology width”, “number of leaves”, “absolute cardinality of families”, etc. These results also demonstrated significant correlation with the root-mean-square deviation of the average ontology width. This result shows that the number of concepts belonging to the neighboring levels and to different branches is significantly different, indicating imbalance in the ontologies developed by the wide categorizers.

Despite the objectivity of the quantitative metrics-based method of ontology assessment, this method has the significant drawback of being too formalized and lacking semantic analysis elements.

Having augmented the quantitative metrics-based analysis by a semantic analysis performed manually, we found that the ontologies developed by the field-independent test persons tended to have simpler and clearer structures. However, this simplicity and clarity tended to be achieved by truncating the concepts that did not fit into the developed ontology, thus sacrificing the ontology’s completeness and integrity for formal logical consistency.

As for the collective ontology development, including wide categorizers in a single group with a FID individual can be useful, with the wide categorizers generating a plethora of sub-classes and the FID participant restructuring them. This hypothesis was tested on the stage of research dedicated to collective ontology development.

Thus, the following relationships between the respondents’ individual cognitive styles and the peculiarities of their subject domain ontology development have been identified as follows:
                        
                           •
                           Reflective individuals tend to develop deeper ontologies;

The ontologies developed by the imprecise individuals (as defined in the Kagan test) tend to be more complex;

The “narrowness/width of the category” cognitive style affects the ontology branching coefficient, i.e. the ontology width.

Specificity of the collective ontology development was also studies, both in dyads and in groups of 3–5. One objective of this study was to establish how the collective categorization style was developed.

The KOMET-DILIGENT collective ontology face-to-face design methodology proposed within the KOMET project uses the following algorithm (Gavrilova et al., 2013):
                        
                           1.
                           Preliminary individual ontology development by the participants and consequent mutual ontology matching;

Ontology analysis, merging and alignment;

Ontology revision and redesign.

Students first developed individual ontologies and were then asked to develop a collective common ontology on the same topic, “computer science”. The time allowed was one hour.

The experiments aimed to establish how a collective categorization style was developed. Two strategies were identified:
                        
                           S1, a strategy of collective ontology development “from scratch”, and

S2, a strategy of common ontology development on the basis of two or more individual drafts.

These strategies were affected by the peculiarities of analyzing and merging individual ontologies in the collective ontology development methodology suggested and explained above.

The second strategy, S2, is of greater practical interest. In this case the respondents effectively applied all three basic ontology engineering operations (matching, merging and alignment).

The results showed that merging usually follows either of two scenarios:
                        
                           1.
                           Mechanistic scenario (60–70% of all the tested groups);

Synthesizing scenario (30–40% of the tested groups).

We researched the mechanistic scenario in more detail, as this scenario was used more often than the others. The implications led to the design of two models:
                        
                           •
                           A disjunctive model, in which the higher-power ontology absorbs the lower-power one, with further merging of the same-degree nodes in the resulting ontology.

A conjunctive model in which the reduction of nodes leads to the resulting ontology including only the conjunction or intersection of the same-degree nodes.

Comparison of these scenarios with the cognitive styles of the test participants revealed the following relationships:
                        
                           •
                           Field-independent (FID) test persons tend to prefer the conjunctive scenario;

Field-dependent (FD) test persons tend to prefer the disjunctive scenario.


                     Figs. 4–6
                     
                     
                      illustrate the experiment and demonstrate the variation from the synthesizing scenarios. This variation is the best alternative, with collective effort showing the synergetic effect of “jumping” to a higher level of abstraction. The higher level always demonstrates deeper knowledge and better understanding of the domain specifics. Although these ontologies can be criticized as they were developed by young researchers, our experiment was targeted at the study of collaborative ontology design, not the production of a serious domain ontology. Mind-mapping representation is used only to illustrate the changes which occurred during the merging process.

This paper addresses the conceptual limitations of traditional research and learning communication and proposes using a visual metaphor for illustration and presentation of essential pieces of knowledge.

The first most obvious possible application of the results can be found in presenting the research findings to the participating groups of researchers; the collaboratively developed ontologies may be used for conference presentations and journal publications. Secondly, this approach may facilitate supervising Masters and PhD research and thesis writing. Indeed, team ontology development can lead the participating students to a deeper and more holistic understanding of their respective subject domains, especially when the instructor takes the students’ cognitive styles into consideration when organizing groups for team ontology development.

The results may also help in organizing brain storming and design thinking sessions (Eppler & Bresciani, 2013; Eppler & Burkhard, 2008).

Finally, the impact of individual cognitive styles on team ontology development can be taken into consideration in all the areas where intellectual team work on ontology development might be used, e.g. fundamental science, R&D or management consulting.

Using visual inspection of the ontology it is possible to detect gaps and misunderstandings in state-of-the-art knowledge and cognitive models of the domain knowledge. However, there is as yet little consensus on the useful design and orchestration of such structures. Furthermore, in many cases it is not known what the structure of socially legitimate knowledge patterns looks like, or how a particular instance of a knowledge model deviates from that “ideal” state (e.g. the guru’s view) (Cross, Parker, Prusak, & Borgatti, 2001). However, researchers are individuals, and they may disagree among themselves.

The main focus of future research is concentrated around the deeper understanding of the cognitive issues of collaborative work. This discourse on the concept of cognitive style encompasses a number of interconnected topics, ranging from the impact of psychological theories to current perceptions about relationships between learning, understanding and teaching. As this journal focuses on expert systems development research, it may be interesting to aim further investigation at collaborative interdisciplinary ontology design for mapping the emerging research areas of artificial intelligence and cognitive computing.

It may be fruitful to discover new possibilities for such design and to investigate how ontologies can be arranged to support the process of knowledge-base development. Future research relates such issues to specific features of interdisciplinary collaboration.

@&#CONCLUSION@&#

The chief result of the KOMET project may be formulated as its “human-centred approach to ontology design and development”. It proposes not a tool but a methodology that can be easily and cheaply implemented for group knowledge engineering, in which the cognitive peculiarities of experts and knowledge analysts affect the form and content of the designed ontology.

The study described here is only a first step in interdisciplinary research dedicated to enquiring into the effect of the expert/user/learner’s individual cognitive style on group structuring design. Our results are therefore of a preliminary nature.

Two stages of research have been completed: first, research into correlations between the expert’s individual cognitive style and the peculiarities of his/her development of the subject domain ontology; and secondly, research into correlations between the expert’s individual cognitive style and group ontology design (including design performed in groups consisting of experts either of similar or of different cognitive styles). The results of these research stages can be applied to organizing collaborative ontology design (especially for research and learning purposes), data structuring and other group analytical work. The implications for practice are briefly delineated.

The results of the interplay of different cognitive styles can be observed as cognitive dissonance and discussions at different stages of ontology development. This is why these results may be used in the team-building phase of the ontology design lifecycle. The “recipe” for a good expert/analyst team may be defined as:
                        
                           •
                           All the team members undergo the cognitive style tests (this may take less than 30min);

A project participant with reflective and narrow cognitive style parameters initiates the ontology A structure;

Wide-categorizing team members then generalize and expand this structure into ontology B;

The most field-independent participant (the visionary) re-engineers ontology B into the final ontology C; the team may discuss and orchestrate the resulting ontology also by using the formal metrics (see Section 2.1). If needed the last two steps may be repeated.

Our empirical study was organized as individual and group visual ontology development. Group ontology design, both in dyads and larger groups, was performed either “from scratch” or on the basis of the drafts prepared by the members of the group individually.

Merging of the individual drafts into a single group ontology follows either an absorption (uptake) or compromise (synthesis) scenario. The mechanistic scenario of the merging of ontologies can be implied from either a conjunctive or a disjunctive model.

From the different cognitive styles, the field-dependent participants tended to prefer the disjunctive model of merging ontologies, with the higher-power ontology absorbing the lower-power one, and further merging of the same-level nodes in the resulting ontology.

The field-independent participants tended to prefer the conjunctive model, with node reduction by conjunction or interception only of the same-level nodes.

Despite the preliminary character of the research results, all the findings can be used in organizing collective ontology development, data structuring and other group analytical work. By taking into consideration their students’ cognitive styles when organizing them into groups, the instructor enhances her or his ability in guiding the ontology development process to reach deeper levels of students’ understanding of the subject domain.

Our work presents a new human-centred viewpoint on collaborative ontology development. Knowledge of the personal cognitive peculiarities helps to leverage the subjectivity of the individually designed ontologies. This approach may lead to better results, through avoiding the pitfalls of personal incompatibility and conflict within the team of ontology developers. Eventually this will shorten the development period and lead to an increase in ontology quality. Finally, our approach does not require the construction of an entirely new technique; it may be embedded in the context of existing methods by separating the roles within the ontology development team.

@&#ACKNOWLEDGMENTS@&#

The KOMET project was funded by the Russian Foundation for Basic Research (Grant 11-07-00140). Thanks to Elena Kotova and Andrey Pisarev for permission to use their software tool ONTOmaster-TECOS for testing cognitive style parameters. We are grateful to Katerina Bolotnikova and Vladimir Gorovoy for providing the COAT tool facilities.

@&#REFERENCES@&#

