@&#MAIN-TITLE@&#A methodology to design a 3D graphic editor for micro-modeling of fiber-reinforced composite parts

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A methodology to design a 3D graphic editor for composite microstructures.


                        
                        
                           
                           Design of voxel and vector 3D editor for fiber-reinforced composite parts modeling.


                        
                        
                           
                           Micro-modeling of crowding or coarsening of FRC parts fiber structures.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D drawing program

Micro-modeling

Voxel-modeling

Fiber-reinforced composite

Finite element analysis

Representative volume element

@&#ABSTRACT@&#


               
               
                  Modern design process is a complex work which includes many aspects and so CAD/CAM/CAE are widely used now. The next special generation of such software which combines complex geometrical design facilities, micro-models of composite structures and FE analysis, and tools for additive technologies has to be developed. This paper proposes a design methodology of a new 3D raster/vector drawing program to make micro-models with crowding or coarsening of fiber structures. The definitions of the new terms, principles, and algorithms to design such structure as a set of domains are given. Files for additive technology machines and finite element analysis were created. This approach is the convenient means of micro-modeling of FRC complex shape parts.
               
            

@&#INTRODUCTION@&#

Modern design process is a complex work which includes many aspects. Development of more innovative designs demands many phases of engineering from concept through design, simulation and visualization to manufacture. So, many designers develop not only geometric models of parts and assemblings but also estimate stresses of these components using FEM. For this purpose many engineering computer programs are used. For example, such programs as Algor Simulation [1] and SolidWorks Simulation [2] are components of Autodesk and DS SolidWorks software which are traditionally known as CAD developers. At the same time in many cases CAM modules are included as components of CAD programs to make CNC codes for manufacturing aims. For this reason the CAD/CAM/CAE advanced systems are widely used now and produce maximum effect for design works especially at their initial stages. This integrated approach is the modern fundamental design principle.

Meanwhile, all CAD/CAM/CAE software systems comprise homogeneous material models and macro-models of composites and design tools for subtractive manufacturing technologies simulating. So the next step is obvious: the next generation of software which combines complex geometrical design facilities, micro-models of composite structures and FE analysis and design tools for additive technologies have to be developed. In this context many aspects of such design should be considered: design methodology, principles, procedures and techniques.

Well-known, composite parts are widely applied at practice. A lot of them are made of fiber-reinforced composites, particularly undirectional ones [3–5]. Among such materials one can find structures with large ingredients. For example, boron-fiber/aluminum composites are used for blades [3]. Composites are used for engine parts, for example, connecting rod made of aluminum reinforced with continuous stainless steel fibers [5]. Fibers of these composites are located in such a way that maintains necessary part strength at the locations of the maximal stress.

Preliminary analyses of these locations are often carried out by CAD/CAE programs calculations. Practically all the CAE programs have features for composite materials modeling [6]. Now macro-models [7,8] and micro-models [9–16] are known. CAE programs operate with macro-modeling mode. Micro-modeling requires the description of composite fibers and of their location within the part. This type of modeling is frequently used as the most adequate and flexible despite of its obvious difficulty, large model size. Additive manufacturing is modern processes to make composite parts. Machines which make parts from two and more composing materials are used in increasing frequency [17]. Therefore, part computer model with the detailed description of each fiber is necessary for additive manufacturing of FRC parts.

Now various computer micro-modeling programs are known, but these programs model either a separate part fragment or a whole part with the simple form (Representative Volume Element – RVE) [9–15]. Laminate Tools and WiseTex are well known computer programs. They use fabric elements stretched on the prescribed surfaces [12–15]. These programs model a fabric, which is stretched over a surface, however volume structures modeling is inaccessible. Other programs model three-dimensional structures, but they use symmetric and periodic microstructures (RVE), and it is impossible to model a part having general complicated surface using these programs [18–20].

Meanwhile composite parts with complicated surfaces working in complex stress states are often used. So it is necessary to model their structures in detail including specific work conditions. The author failed to find computer tools which develop such kinds of micro-models for real complicated parts. The author made an attempt to make a three-dimensional raster editor each pixel of which is an element of a solid model, so this pixel is a voxel [21,22]. However, this work made it necessary to solve a set of basic problems.

In the author's opinion modern publications in some cases do not present an appropriate methodological base. It is necessary to give exact definitions of basic elements of such editors, basic concepts, and principles of such modeling. Since this research is concentrated on composites, the author made an attempt to work out design methodology, and this is the objective of the present study.

The author hopes that in the future graphic editor programs suitable for any form parts micro-modeling with any composite structures will be designed. The means of such editors, probably, will be based on given below and other similar principles.

As it is mentioned above, computer modeling tools for composite parts may be used for different purposes: from FEA computer programs to additive manufacturing techniques. Therefore, composite structures may be described using volume elements, as, for example, finite elements or using sets of points (point clouds). Other types of modeling, for example, voxel modeling, an intermediate option between two mentioned above two, are also known. With regard to multi-aspect purposes of the proposed editor design scheme, using of voxels is the most expedient approach.

Many authors have used voxel or grid-based approaches to make finite element mesh. For example, Zhang and Zhao [23] proposed a modified grid-based method for generating hexahedral element mesh in the domain of a three-dimensional solid model. It indicates that such approach is efficient. Some modern publications define voxel as a term. However, this term must be defined more exactly, and this definition is the first stage of the proposed design methodology.

So, voxel type of modeling is used to develop micro-models of parts made of FRC. For this purpose it is necessary to define “a voxel” more exactly [24]. Voxel is an image of a three-dimensional space region limited by given sizes, which has its own nodal point coordinates in an accepted coordinate system, its own form, its own state parameter that indicates its belonging to some modeled object, and has properties of modeled region. This definition has the following advantages. First, if fixed voxel form is used within the whole model it is much easier to operate with voxel 
                        nodal points
                     , i.e. three coordinates of this point. Yet, there is the simple form of record – indexes of the elements in the model set, i.e. integer coordinates. Model set elements in this case are 
                        state parameters
                     , indicating voxel belonging to the modeled object or its separate parts, including their surfaces. The second advantage of this voxel definition is that using this modeling scheme it is easy to transform a voxel set to a set of corresponding finite elements for FEA. Thus, the properties of the finite element are determined by earlier determined 
                        voxel properties
                     .

It is important to note that it is possible to use voxels with different sizes. Such sizes may vary in different model regions. The sizes are defined by the equations used for voxel grid making and, as a result, the set of grid nodal points. The modeling may be carried out using common Cartesian coordinate system, or using cylindrical or spherical coordinates, or using any other system, for example with curvilinear axes.

Thus, the first stage of offered modeling methodology is the adoption of voxel as the basic element. While composite structure modeling, voxel sizes are dictated by the required accuracy of all the structure geometrical features description and by the part configuration. It is clear that operation with voxel structure only is not efficient for modeling productivity.

Therefore, the second stage of the offered modeling methodology is the determination of the next level base structure. This structure has to be repeated within the whole modeled part. This part is known as RVE but very often it is called a “domain”. For example, for the part made of the unidirectional FRC, such basic structure has to contain a set of fibers located according to the given equation along some vector. For the modeling of the reinforcing based on woven material, the structure has to describe a fragment of fabric and to be oriented along two vectors. Such second level structure may be called “the domain structure”. The domain is an image of a three-dimensional space region limited by given sizes, which has its own key point coordinates in an accepted coordinate system, its own form, its given structure, and with orientation along direction vectors
                      (Fig. 1
                     ). It is generally accepted that RVE size is changeless for the model. It is important to notice that the sizes of domains described above are variable. Each domain is a set of voxels. Therefore, domain description is a step of composite structure modeling. This step includes the description of domain 
                        key point
                      coordinates, domain structure generated by voxels of different materials: matrixes, fibers and fiber-matrix interfaces, and also domain direction vectors setting.
                  

At last, the third stage of the offered modeling methodology is the determination of the rules of domain orientation within the modeled part, domain sizes and structures. Three main rules are proposed. The first rule determines the directional vectors. It is offered to specify the direction of these vectors tangentially to the directional lines. Therefore, the description of the corresponding directional lines within the part has to be one of the next modeling stages. The second rule explains how to calculate domain sizes. It is obvious that composite structure modeling using the description of a large number of directional lines each connected with single domain is not effective, as well as a direct description using voxels. Therefore, it is offered to determine only the minimum quantity of required directional lines – the main directional lines. The other directional lines are simple lines, and they should be determined using the parameters of their density within the given part region and the configuration and sizes of the modeled part.

Now it is the least formalized part of modeling as the variety of part shapes and their composite structures is great, and there is no systematization of this variety. However, some steps which provide a way to solve the problem in many cases are proposed below.


                     The first step is to determine three directions or three vectors in every part region. The first vector is the direction vector, and corresponding to it the main directional line may be determined so that the vector is tangential to the line. It is possible to determine two other vectors normal to the direction vector and mutually normal. If the part has the plane or cylindrical surface as one of the boundary surfaces, one of such vectors is determined as the normal to this surface and it is possible to call it the positioning vector. The third vector may be called the free vector or the calculated one.


                     The second step for modeling of directional lines is to estimate the part borders range and to set the initial step between the other simple directional lines. It is possible to set the modification coefficient for the step between two lines. This coefficient may be set greater than one if it is necessary to increase steps or less for steps reduction. It is obvious that such steps also determine the domain sizes.

Therefore, the third modeling rule is to determine voxels within the domain depending on its sizes modification. Simple approach of proportional voxels reduction within the domain is not useful. This is because one voxel is connected with different materials of a composite: matrix, fibers and fiber-matrix interfaces. The decision is the scheme with the fiber sizes and sizes of fiber-matrix interfaces fixed, whereas the matrix sizes are variable. It is clear that all the distances between fibers of different domains have to be proportionally modified.

If fibers are located equidistantly it is possible to use a way similar to voxel grid construction to determine the positions and sizes of domains. Part sections are made normally to the direction vector at regular intervals. For each section the regular grid along the positioning vector is formed. In this case the condition of domain key point location within the boundaries formed by part surfaces is the domain formation factor:

                        
                           
                              
                                 
                                    
                                       
                                          X
                                          
                                             i
                                             j
                                             k
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             X
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          …
                                          
                                             X
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          ∪
                                          
                                             Z
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             Z
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          …
                                          
                                             Z
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          ∪
                                          
                                             F
                                             1
                                          
                                          
                                             (
                                             
                                                
                                                   X
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ,
                                                
                                                
                                                   Z
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             Y
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          ≤
                                          
                                          
                                          
                                             F
                                             2
                                          
                                          
                                             (
                                             
                                                
                                                   X
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ,
                                                
                                                
                                                   Z
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                             
                                             )
                                          
                                          ∪
                                       
                                    
                                 
                                 
                                    
                                       
                                          Y
                                          
                                             i
                                             j
                                             k
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                          
                                             Y
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          …
                                          
                                             Y
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          ∪
                                          
                                             Z
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             Z
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          …
                                          
                                             Z
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          ∪
                                          
                                             F
                                             3
                                          
                                          
                                             (
                                             
                                                
                                                   Y
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ,
                                                
                                                
                                                   Z
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                             
                                             )
                                          
                                          
                                          ≤
                                          
                                             X
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          ≤
                                          
                                          
                                          
                                             F
                                             4
                                          
                                          
                                             (
                                             
                                                
                                                   Y
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ,
                                                
                                                
                                                   Z
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                             
                                             )
                                          
                                          ∪
                                       
                                    
                                 
                                 
                                    
                                       
                                          X
                                          
                                             i
                                             j
                                             k
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             X
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          …
                                          
                                             X
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          ∪
                                          
                                             Y
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             Y
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          …
                                          
                                             Y
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          ∪
                                          
                                             F
                                             5
                                          
                                          
                                             (
                                             
                                                
                                                   X
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ,
                                                
                                                
                                                   Y
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             Z
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          ≤
                                          
                                          
                                          
                                             F
                                             6
                                          
                                          
                                             (
                                             
                                                X
                                                
                                                   i
                                                   j
                                                   k
                                                
                                             
                                             ,
                                             
                                                Y
                                                
                                                   i
                                                   j
                                                   k
                                                
                                             
                                             )
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where Fe
                      (e = 1, 2..6) – are the equations of the surfaces which limit the part.

The terms, principles, and schemes stated above are necessary to design usable computer program for composite part micro-modeling. However, this is not sufficient because there is a great variety of parts and of their constructions. This variety is increased because of a great number of their composite structures. During the computations the design engineer may increase or reduce the number the main directional lines in different part regions. The advantages of raster graphics editor can give such flexibility. So it is proposed to use along with the features of vector editor (3D CAD models, initial lines, splines, and surfaces) the possibility to draw raster lines in pencil [21].

Using the graphics editor a developer can make part geometrical model, determine a set of the main directional lines, location parameters of other directional lines, and domain structure and sizes.

Using the considered above design methodology an algorithm of a computer program was developed. The algorithm has the following main steps.

1. Solid model of a part (Fig. 2, a), constraining and loading conditions (Fig. 2, b) are accepted as input data. Part material is initially assumed to be homogeneous and anisotropic. Material mechanical properties are initially assumed to be equal to the corresponding average properties of the composite material.

2. FEA is used to determine the principle stress vector for given part operating conditions (Fig. 2, c).

3. If the part is complex and contains some separate elements (an impeller, for example) then it is necessary to decompose it into elementary subregions. If subregions have the symmetry planes it is possible to use these planes to separate correspondent part elements. As a result a set of part elements with their boundaries can be obtained. Some boundaries are external, the other ones are internal and demark adjacent subregions. So the adjacency condition should be considered when modeling.

4. Main directional lines are drawn within the part and its separate elements using vector or raster software tools (L, see Fig. 1). These lines have to conform to major principal stress lines.

5. The average domain size along the main directional lines is determined. The key points (KP, see Fig. 1) are located at the intervals equal to this size along the main directional lines.

6. At each key point of the main directional line direction vector (D), positioning vector (P), and free vector (F) are determined (see Fig. 1).

7. The most appropriate domain structure is extracted from the domain library. The domain average dimensions are set (see Fig. 1).

8. Using stresses calculated at step 5.2, the number of simple directional lines along positioning and free vectors is determined. If it is necessary distance ratio coefficients for adjacent directional lines along P and F vectors are defined.

9. Along each positioning vector part borders range is estimated. With already chosen number of simple directional lines and distance ratio coefficient it is possible to determine the points of simple directional lines and to draw these lines (Fig. 3
                     ).

10. Using the points of simple directional lines, it is possible to determine the hexahedron vertexes, i.e. domain vertexes.

11. Following the accepted domain structure, all domain parameters of the domain and its voxels are determined.

12. If FEA is necessary then voxels are converted to finite elements with corresponding characteristics (Fig. 4
                     ).

13. If FEA results (Fig. 5
                     ) require reinforcing fibers shift, this shift can be done using vector graphics tools. If reinforcing fibers have to be crowded within certain part region then some more directional lines should be added using vector or raster graphic tools. It is clear that in this case the reinforcing fibers continuity may be disrupted.

14. Automatic fiber crowding for areas of high stress is possible. One approach is based on principal normal stresses. This approach seems to be reasonable as fibers are under tension mostly and for unidirectional fiber- reinforced composites it is appropriate to place fibers along principal stresses vectors. Stress values are readily determined for finite element nodes in considered part sections. It is reasonable to find the weakest part section (Fig. 5, at the center), where principal stresses are. Then using polynomial approximation it is possible to get, for example, the second order polynomial which evaluates stresses for the section as the function of x and y coordinates (Fig. 6
                     ). The number of fibers within the unit of section area may be calculated in direct proportion to stress values (multiplying these values by the constant). This constant should be defined so that principal stresses range within values accepted for the composite with specified fibers and matrix. The calculations should include control checks: (a) minimum permissible distance between fibers check based on background study of the composite structure and (b) minimum number of fibers within the areas where principal stresses may have zero value. Minimum fibers density should be achieved within such areas and for this purpose the procedure for fibers density calculation contains an additional check. Part section example with fibers location calculated using the polynomial is presented in Fig. 7
                     . As the result fibers density relocation provides the required part strength with its minimum weight.

The approach of using domains does not exclude additional modeling of voids and inclusions. These facts are described by removing some voxels from the domains in a predetermined or random manner (of their quantity or location). This manner should be predetermined additionally.

If regular fibers location is proposed to be used, it is enough to set the steps along all the three discussed above vectors only. In this case, after voxel sets of composite fibers (sets of lines) have been fixed it is possible to determine all eight vertexes of all the model domains. As noted above, it is necessary as for each domain description, and as for developing finite elements model. To determine these eight vertexes it is sufficient to use the following rule. The desired step equal to domain size along the directional lines is set. Using this step and all the directional lines key points of all domains can be calculated. All the model key points are examined one after another. In case if one point belongs to the part and all the seven key points adjacent to it also belong to the part then these eight points form the domain and so they may be used to make the finite element model. It is reasonable that the directional lines have to pass through the domain vertexes (see Fig. 1).

To verify the described approaches testing computer program based on this algorithm was designed (see Fig. 2). The model of composite fibers for a part with wave like surfaces as it is shown above was initially designed (see Figs. 2–5).

Format of files formed with a computer program is an important part of any program design. It is evident that data forming for additive manufacturing machines including definition of all voxels for powder particles is an impossible task because file sizes are extreme for modern computers. An obvious decision is to use file format with sections which describe structures and substructures. Thus additive manufacturing machines are to be provided with postprocessors to read and interpret such files and to generate control instructions for laser head and its moving mechanism, for example. Thus the following file format is proposed to use.


                     
                        DESCRIPTION, ITEM, NUM
                     
                  


                     
                        Begin
                     
                  


                     
                        …
                     
                  


                     
                        End
                     
                  

where: Description – is section keyword;

ITEM – is the label identifying any item (DOMAIN, RVE, PORE);

NUM – is the object number (< 256).

Begin, End – are section brackets

For example, domain description section has the following structure:


                     
                        DESCRIPTION, Domain, NUM
                     
                  


                     
                        Begin
                     
                  


                     
                        RVE, NUM_1, NUM_2, … NUM_9
                     
                  


                     
                        RVE, NUM_1, NUM_2, … NUM_9
                     
                  


                     
                        …
                     
                  


                     
                        RVE, NUM_1, NUM_2, … NUM_9 {less than 9 lines}
                     
                  


                     
                        End
                     
                  

where: RVE – is representative volume element label (RVE);

NUM_i – is RVE number (< 256).

Example:


                     DESCRIPTION, Domain, 1
                  


                     begin
                  


                     RVE,1,1,1,1,1
                  


                     RVE,1,2,2,2,1
                  


                     RVE,1,2,2,2,1
                  


                     RVE,1,2,2,2,1
                  


                     RVE,1,1,1,1,1
                  


                     end.
                  

This record describes the domain which consists of 25 RVE. Two RVE types are presented: one type is on perimeter, and the second is inside.

RVE description section is the following:


                     
                        DESCRIPTION, RVE, NUM
                     
                  


                     
                        Begin
                     
                  


                     
                        FIBER, MAT, SIZE_X, SIZE_Y
                     
                  


                     
                        INTERFACE, MAT, SIZE_TOP, SIZE_BOTTOM, SIZE_LEFT, SIZE_RIGHT
                     
                  


                     
                        MATRIX, MAT
                     
                  


                     
                        PORE, MAT, NUM
                     
                  


                     
                        End
                     
                  

where: RVE – is RVE identifying label;

NUM – is RVE number (in DESCRIPTION line; < 256);

FIBRE – is the keyword for fibers;

MAT – is fiber, interface, matrix or pore material number;

SIZE_X, SIZE_Y – are fiber cross-section sizes;

INTERFACE – is the keyword for fiber-matrix interface;

SIZE_i – are top, bottom, left, right side of interface sizes;

MATRIX – is the keyword for matrix;

PORE – is the keyword for pores;

NUM – is the number of pores in each RVE (in PORE line);

Example:


                     DESCRIPTION, RVE, 1
                  


                     Begin
                  


                     FIBER, 1, 8.0E-6, 8.0E-6
                  


                     INTERFACE, 3, 2.0E-7, 2.0E-7, 2.0E-7, 2.0E-7
                  


                     MATRIX, 5
                  


                     PORE, 2, 5
                  


                     End.
                  

This record
                      describes the RVE which has material number one, fibers (8×8 microns), interface made of material number three with size equal to 0.2 microns, matrix of material number five and two pores of material number five.

Pores description section is the following:


                     
                        DESCRIPTION, PORE,
                     
                  


                     
                        begin
                     
                  


                     
                        PORE, NUM_1, SIZE_X1, SIZE_Y1, SIZE_Z1
                     
                  


                     
                        PORE, NUM_2, SIZE_X2, SIZE_Y2, SIZE_Z2
                     
                  


                     
                        PORE, NUM_3, SIZE_X3, SIZE_Y3, SIZE_Z3
                     
                  


                     
                        end
                     
                  

where: PORE – is the keyword for pores;

NUM
                        _
                     i – is the pore number;

SIZE_Xi, SIZE_Yi, SIZE_Zi – are pore sizes;

Example:


                     DESCRIPTION, PORE
                  


                     begin
                  


                     PORE, 1, 1.0E-7, 2.0E-7, 6.0E-7
                  


                     PORE, 2, 2.0E-7, 4.0E-7,8.0E-7
                  


                     end.
                  

This record describes pore number one with the sizes of 0.1, 0.2 and 0.6 microns and pore number two with the sizes of 0.2, 0.4 and 0.5 microns.

Using this file format pores, RVE and domains should be described first. Then the description of the part should be done by the previously discussed procedure. In this case each part layer should be described using the polynomial:

LAYER, SIZE_Z, C0, C1, C2, C3, C4, С5

where: SIZE_Z – is the layer position coordinate;

Ci – coefficients of the second order polynomial evaluated according to stresses file data for the specified section multiplied by the constant.

Numerical control systems (CNC) of additive manufacturing machines get this file. Its section containing description of pores, fibers and matrix provides the base to evaluate RVE and then to determine domain structure. Then the line containing the polynomial coefficients provides a way to form a layer to create with the machine. STEP command line defines the level for which another polynomial should be used for the next layer. Intermediate layers should be evaluated using interpolation of two specified polynomials and for the distance between layers given in STEP command. Thus the problems of large data files are solved, but direct commands forming for the machine execution unit (laser head, sintering machine, etc.) requires effective CNC operation.

Based on the described approaches the voxel models of an engine connecting rod (Fig. 8) and of turbine blade (Fig. 9) were developed. All the obtained fiber structures and finite element grids show the efficiency of the proposed methodology.

@&#RESULTS AND DISCUSSION@&#

Using the experience of composite micro-models developing the design methodology to design a graphic editor for the fiber reinforced composite structures modeling (simulating) was worked out. This methodology includes basic terms definitions, a number of the stages, rules and steps, and the algorithm. The practical test of these ideas by design of the graphic editor detected some problems, which indicate the limitations of the methodology. Desired directional lines location may not coincide with the form of part surface. So there are mathematical problems for the automated calculation of such lines, using the main directional line and the part surfaces. Local fibers bundle modeling within some small area which form does not correspond in any way with the form of adjacent part surfaces causes some difficulties. In this case the use of the 3D raster editor [17] is more efficient. This editor provides the opportunity to draw lines of any form in any quantity quickly. Problems of large data volumes are also obvious. The less problem is caused by voxel modeling, and more problems are connected with the FEA. Even the modeling of elementary small parts requires grids with millions of nodes.

However, computer hardware progress is evident and by the decade end computing capacities will be sufficient for micro-modeling and calculations of small sized composite parts. By then all the methodological problems have to be solved and means for these objects computer modeling have to be sufficiently worked out.

@&#CONCLUSION@&#

The methodology and the computer program demonstrate a good productivity of the worked out approaches. Further development of this modeling method is a topical problem because it provides an opportunity to make the most accurate models of the fiber reinforced composite parts, to optimize their structures using fibers crowded at the locations of the maximal stress. Moreover, such micro-models with their voxel form are high efficiency to create files used to form composite structures by additive manufacturing technology. In that way FRC parts design, design study, construction optimization and manufacturing process form the closed cycle based on general approach using the offered graphic editors.

@&#REFERENCES@&#

