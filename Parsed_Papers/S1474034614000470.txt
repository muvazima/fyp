@&#MAIN-TITLE@&#A boundary condition based algorithm for locating construction site objects using RFID and GPS

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An integrated RFID and GPS system for outdoor localization of construction site objects.


                        
                        
                           
                           Introducing the boundary condition as a constraint into RFID localization.


                        
                        
                           
                           A novel RFID locating algorithm based on the boundary condition concept.


                        
                        
                           
                           Correlating the spatial dilution of RFID readers to the locating accuracy of RFID systems.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

RFID

GPS

Received signal strength

Boundary condition

Spatial dilution

Accuracy assessment

@&#ABSTRACT@&#


               
               
                  Construction sites are rugged, dynamic, and complex, involving a large number of objects that continuously change their locations and occupied spaces. Being able to accurately locate and track site objects site is critical to project management and control to meet the increasing demands for efficiency and safety in modern construction projects. Automated locating technologies such as Radio Frequency Identification (RFID) have proven to be beneficial in tracking some construction site objects. The biggest challenge in applying the RFID technology is that the received signal strength (RSS) varies over time and location, and there is no direct relationship between signal strength and detection range, leading to low positional accuracies in the estimated tag locations. This paper presents an algorithm termed BConTri that combines a “boundary condition method” and the trilateration concept to estimate tag location in three-dimensional (3D) real world coordinates from four or more RFID readers equipped with GPS. This study also developed a prototype RFID locating system that implemented the newly created BConTri algorithm. A comprehensive assessment of the positional accuracy was applied to field experiment results and a high accuracy of the algorithm was observed. A measure of the spatial dilution of reader distribution was formulated and a linear relationship between this measure and the locating accuracy was observed, forming the base for using this measure as a reliable indicator for the resulting locating accuracy. This accuracy indicator helps in estimating the accuracy and quality control of RFID-based locating and tracking systems in construction.
               
            

@&#INTRODUCTION@&#

Modern construction projects are dynamic, involving a large number of resources (i.e. materials, equipment and tools, personnel, and temporary facilities) that interact with each other in a complex spatio-temporal manner. The ultimate goal of construction project management is to ensure the right amounts and types of resources interact at the right location and right time throughout the project execution. This goal places a high demand on the capability of accurately locating and tracking construction resources in real time. Without this capability, field crews might spend non-value-adding time on locating tools [1] and finding materials [2] and engineered components [3], and incidents between two or more objects might occur [4], all have direct negative impact on construction projects in aspects of efficiency, productivity, and safety. In addition, workspace conflicts might occur that can further decrease construction productivity by 40% [5].

Prominent among those automated locating technologies is Radio Frequency Identification (RFID). An RFID system typically consists of RFID tags and readers that communicate with each other via radio frequency (RF) signals within a reasonable range. A reader detects the existence of tags within that range. RFID readers can also be equipped with Global Positioning System (GPS) capabilities to determine the locations of RFID readers and consequently, when multiple readers detect the same tag, its location in a real-world coordinate system can be estimated.

A number of studies have explored the potential and feasibility of using RFID systems to obtain real time information regarding the location of construction resources such as materials, tools, equipment, and personnel to enhance jobsite safety and productivity. For instance, Jaselskis et al. [6] investigated the potential application of the RFID technology in tracking material delivery trucks, materials, and materials handling equipment. Song et al. [7] explored the potential of using RFID to track the delivery and receipt of fabricated pipe spools to prove the viability of the concept. Goodrum et al. [1] investigated the possibility of using RFID for tracking tools on construction site. Torrent and Caldas [3] established a method to automate the identification and localization of construction components.

A major challenge in the use of RFID technology for locating construction site objects is that an RFID reader can only detect the existence of a tag within its detection range. This range varies under different scenarios and the distance between the reader and the tag remains unknown. A number of studies have created various algorithms to estimate the tag location based on multiple detections, yet unknown distances, with various strategies aiming at improving the locating accuracy in different construction application scenarios [e.g. 2,3,8–10]. Improving the accuracy in RFID localization systems remains an active research area. Still, addressing the aforementioned challenge in RFID localization systems to accurately locate RFID tags in a wide array of construction applications remains an active research area [11], evidenced by a large number of studies in the construction domain [e.g. 1–4,6–8].

This paper presents an innovative algorithm – BConTri that combines a “boundary condition based method” and trilateration to estimate tag locations in three-dimensional (3D) real world coordinates from four or more mobile readers equipped with GPS. A comprehensive assessment of the positional accuracy was applied to field experiment results. A measure of the spatial dilution of reader distribution was formulated. Spatial dilution is a term that refers to the distribution of a number of objects in space and their geometric configuration, mostly commonly used as an indicator of the locating accuracy in time-of-arrival techniques such as GPS [12] and angle-of-arrival positioning systems [13]. By finding its linear relationship with the resulting accuracy of the estimated tag location, this measure was proposed as the accuracy indicator to not only estimate the accuracy of the estimated tag location, but also function as a quality control mechanism to ensure the resulting accuracy meets application requirements.

The remaining of this paper is organized as follows. Related studies on RFID localization algorithms were reviewed first. Second, the significance and research contributions of this study were emphasized. Third, the newly proposed algorithm was described in detail. Fourth, the field experiment was described and the accuracy of the results was comprehensively assessed. Fifth, the spatial dilution of RFID readers was formulated and its linear relationship with locating accuracy was observed. Finally a discussion section and a conclusion section were included to discuss the significance and limitations of the newly created algorithm, to summarize research findings, and to point out future research directions.

Range-based localization, proximity techniques and scene analysis are the main techniques utilized to locate objects in location sensing techniques [14]. This section describes the fundamental principles of range-based localization, proximity, and scene analysis algorithms, development of localization algorithms, and studies that aimed at improving the accuracy of range-based localization algorithms in RFID locating.

Trilateration and triangulation are the two techniques that fall under the category of range-based localization. Trilateration uses received signal strength (RSS) [15], phase-based indicator [16], time of flight (TOF) [17], or time of arrival (TOA) [10] to determine the distances between three or more reference points [14]. Fig. 1
                         illustrates that the target point location can be estimated by solving a number of equations below
                           
                              (1)
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       (
                                       x
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       (
                                       y
                                       -
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       (
                                       z
                                       -
                                       
                                          
                                             z
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where ri
                         is the distance between the target point and reference i, (x, y, z) is the 3D coordinate triplet for the target point, and (xi
                        , yi
                        , zi
                        ) is the 3D coordinate triplet for reference I [18]. A number of studies have created and applied trilateration algorithms in locating construction objects with varying accuracy levels [10,19,20].


                        Fig. 2
                         illustrates that in triangulation on a two-dimensional plane the target point position is at the intersection of at least two angular measures. It can be calculated by solving the set of equations below.
                           
                              (2)
                              
                                 
                                    
                                       
                                       
                                          
                                             x
                                             =
                                             x
                                             1
                                             +
                                             S
                                             2
                                             ·
                                             cos
                                             
                                                
                                                   
                                                      α
                                                      +
                                                      γ
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             y
                                             =
                                             y
                                             1
                                             +
                                             S
                                             2
                                             ·
                                             sin
                                             
                                                
                                                   
                                                      α
                                                      +
                                                      γ
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              S
                              1
                              =
                              
                                 
                                    
                                       
                                          (
                                          x
                                          1
                                          -
                                          x
                                          2
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          (
                                          y
                                          1
                                          -
                                          y
                                          2
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        , 
                           
                              S
                              2
                              =
                              
                                 
                                    sin
                                    β
                                 
                                 
                                    sin
                                    (
                                    α
                                    +
                                    β
                                    )
                                 
                              
                              S
                              1
                           
                        , 
                           
                              γ
                              =
                              
                                 
                                    tan
                                 
                                 
                                    -
                                    1
                                 
                              
                              (
                              
                                 
                                    y
                                    1
                                    -
                                    y
                                    2
                                 
                                 
                                    x
                                    1
                                    -
                                    x
                                    2
                                 
                              
                              )
                           
                        , (x,
                        y) is the coordinate pair for the target point T, (x1
                        ,
                        y1
                        ) and (x2
                        ,
                        y2
                        ) are the coordinate pairs for reference point P1 and P2, respectively, S1, S2, and S3 are the distances among the target point T and two reference points P1 and P2. Given the requirement on setting antennas to track angles, triangulation algorithms are more suitable for indoor localization applications rather than for outdoor applications where RFID readers might be roving. For instance, Manzoor and Menzel [21] measured the angles based on the angle of arrival (AOA) principle and created an angulation localization algorithm using a number of reference tags.

Proximity methods do not measure the distance between the target and reference points. Rather, they determine whether the target is near one or more known locations [22]. A dense deployment of readers is necessary to determine how near a target tag is, to one or more reader locations when the target enters the communication range of these readers. Comparisons of the signals are made and the target is assumed to collocate with the reader that has the strongest signal. Caron et al. [23] separated the proximity technique paradigms into continuous and discrete and categorized proximity methods into method of constraints, method of accumulation arrays, Dempster–Shafer method, and fuzzy logic method. The applicability of aforementioned categories of proximity methods heavily depends on whether tags and readers are moving. For instance, regardless of its simplicity in implementation, the method of accumulation arrays is not suitable for handling the scenarios in which tags are moving.

The wireless sensor network community has developed a large number of range-free localization algorithms based on the proximity technique, including the centroid localization [24], DV-Hop localization [25,26], amorphous localization [27], approximate point in triangulation (APIT) algorithm [28], ring-overlapping based on comparison of received signal strength indicator (ROCRSSI) method [29], and min–max method [30–32]. These algorithms are based on the assumption that the signal strength decreases monotonically as the tag-reader distance increases [29]. Though the RSSI is not directly used to estimate the tag-reader distance, it is viewed as an indicator of the proximity of a tag to a reader and is being used to (1) determine the area that might enclose the tag, (2) estimate the probability, and (3) estimate the tag location.

Many factors such as multipath, fading, and interferences in the environment, in addition to the distance itself, affects the received signal strength [14,24]. Consequently, the resulting location estimate might not be reliable. The precision largely depends on the size of the cell, i.e. the density of the reader network. Since a denser deployment of a reader network typically means a higher cost, a major barrier to the implementation of proximity technique in RFID localization algorithms in the context of construction applications.

Scene analysis realizes localization by using k-nearest-neighbor (KNN) [33–36] or probabilistic methods [37,38] based on the similarity of received signal with a priori location fingerprints collected from the environment. LANDMARC in [36] deployed a set of reference RFID tags and several readers. Based on the signal strength information, a k-nearest-neighbor approach was adopted to estimate the location of target tag. Several extensions based on the LANDMARC algorithm can be found in Li et al. [34] and Bouet and Pujolle [33]. Bouet and Pujolle [33] created a rang-free 3D localization algorithm using virtual landmarks and topological constraints between tags and readers. Motamedi et al. [35] introduced a pattern matching algorithm and a clustering algorithm in the KNN approach. The pattern of the received signal strength indicator (RSSI) of the target tag was compared with all reference tags using a pattern matching algorithm. A group of reference tags were identified by a clustering algorithm considering the result of pattern matching and their spatial distribution. The target location was then obtained by the KNN approach. Ota et al. [38] created an adaptive likelihood distribution scheme for RFID localization, which adjusted the likelihood distribution of the communication range depending on the signal intensity from RFID tags. Bekkali et al. [37] utilized a probabilistic RFID map-based technique with Kalman Filtering to enhance the location estimated by a multi-lateration technique.

A large number of studies have attempted to test, customize, and implement a variety of localization algorithms in the construction environment. Ko [20] used static RFID readers with reference tags to calculate the location of passive target tags in 3D for indoor tracking based on RSSI values and gradient descent method. The algorithm developed adopted the concept of trilateration by using four static readers and reference tags to generate a correlation that will be used with RSSI values to estimate the targeted tag position in 3D. Song et al. [39,40] used mobile RFID reader with GPS to estimate the location of RFID tags for material tracking on construction site in 2D. The concept of proximity techniques algorithm initiated by Simic and Sastry [22] which uses the approximate RF communication area to detect the presence of a tag within the region was considered based on job site grid system. However these techniques either consider 3D tracking based on RSSI or 2D tracking. Torrent and Caldas [3] tested a number of range-free, proximity technique-based algorithms in locating construction components on industrial projects. Methods considered and tested include the centroid localization [24] and the proximity method [22], with certain modifications such as setting a threshold value to the proximity method.

Accuracy has always been a main concern in RFID localization. A number of studies have reported the accuracy of RFID-based locating systems as well as methods to improve the localization accuracy in both indoor and outdoor applications. For indoor RFID localization applications, Pradhan et al. [41] reported accuracies around 10.7m for greater than 93% confidence in the their best testing case while Taneja et al. [42] reported a poor accuracy of around 30m in a phase II study. Both studies used the scene analysis technique based on the KNN method. Li and Becerik-Gerber [43] reported that indoor RFID localization systems yielded a median accuracy of approximately 1.5–3m and a 97th percentile accuracy of 4–9m depending on the system configuration and the localization method. Taneja et al. [42] and Li and Becerik-Gerber [43] both pointed out that in indoor RFID applications, range-based lateration methods were not desirable because of complex indoor configuration and multi-path errors, which lead to very low accuracy. Yu et al. [44] proved that by configuring RFID applications in a simple and clean environment, while still adopting the lateration method, the accuracy improved significantly. Montaser and Moselhi [45] reported mean errors of 1.0 and 1.9m for indoor trilateration and proximity methods, respectively. Motamedi et al. [35] used assistant tags and claimed that the indoor localization error was reduced by an average of 63%. By exploring the pattern of RSSI, Motamedi et al. [35] created a scene analysis technique that reduced 44% error of LANDMARC and achieved an indoor locating accuracy of 1.59m. Bouet and Pujolle [33] introduced topological constraint – the connectivity between tags and readers. By introducing this additional constraint to RFID localization algorithms they achieved 0.15–1.60m accuracy in simulation results. This study highlights that imposing additional constraints to RFID localization systems leads to improved accuracy.

In outdoor construction applications, Torrent and Caldas [3] presented an approach for localization of construction components with an average error of 3.22m for a centroid method – a simplified proximity technique, and 3.78m for a conventional proximity method. Aiming at improving the accuracy of RFID localization systems, a number of studies have attempted assistance/reference tags to calibrate the system for higher localization accuracies. Razavi and Haas [2] proposed a calibrating method using reference RFID tags. This method improved the precision but still resulted in errors between seven to eleven meters using proximity method. Lee et al. [10] conducted a number of site experiments to measure the accuracy using the range-based localization and trilateration method. It started with an average localization error of 8.9m and when static assistant tags (ATs) were adopted, the error dropped to 2.67m. When ATs were roving, the error further dropped down to 0.45m. While the introduction of assistance/reference tags helps to improve the localization accuracy in general, it demands extra efforts and cost related to additional hardware and system configuration.

Zhou and Shi [46] emphasized that in range-based lateration methods, the geometry of the testing area and the placement/configuration of readers and tags were critical factors that affected the localization accuracy. The more scattered and evenly distributed readers and the more centralized tags lead to higher localization accuracies. Thus, the impact of the geometric configuration of readers on the RFID localization accuracy needs to be investigated so that measures of the geometric reader configuration can serve as an indicator of the localization accuracy.

A large number of RFID localization studies have reported low locating accuracies, attributed to the main challenge in RFID localization: the unknown tag-reader distance and the unreliable RSSI-distance relationship. While the relationship between RSSI and tag-reader distance enables the derivation of tag-reader distances from RSSI values, this relationship is very unreliable, depending on many factors. Consequently, RFID localization methods that are based on this relationship have very low accuracies. Without the information of tag-reader distances, range-based lateration methods face the dilemma of “the number of unknowns exceeds the number of equations.”

Non range-based methods such as the proximity technique and the scene analysis technique, while not relying on the tag-reader distance information, they still heavily rely on the unreliable RSSI-distance relationship to determine the probability of a certain area containing a tag, assuming that the received signal strength decreases monotonically as the distance increases. Besides still low accuracies, non range-based methods face additional barriers in aspects such as system configuration with extra cost and deployment, calibration, computing complexity and efficiency.

Besides the low locating accuracies, another limitation is the unknown reliability of estimated tag locations at the individual tag level. That is, missing information regarding the accuracy of the estimated location for a particular tag at a specific time. Incorrect object locations might lead to false confidence that is typically counterproductive and sometimes dangerous [47]. For instance, a field crew might be struck by a truck because of the incorrect information regarding the location of the truck and the crew and consequently, the distance between them. Another example is utility strikes by mechanic excavations scenario attributed to the incorrect location information of buried utilities [48]. Thus, there is a need to provide a quantitative measure of the reliability of the estimated tag location.

The main contributions of this study include: (1) an innovative boundary condition based algorithm to improve the locating accuracy of RFID systems. By imposing an additional constraint, i.e. the boundary condition, the distance between RFID tag and reader, while still remains unknown, the maximum detection ranges of multiple readers in a single field environment are close to each other and it is reasonable to assume they are equivalent to each. Thus, by referring to four readers that all form the boundary condition with the target tag, the number of variables in trilateration algorithms is reduced to equal the number of equations, that is, four equations for four unknowns. Theoretically the tag location can be estimated by solving this group of equations. This consistency enforced by the boundary condition was proved to be effective in improving the RFID locating accuracy. It eliminates the dependence on the unreliable RSSI-distance relationship by most range-based algorithms. (2) The formulation of the spatial dilution of RFID readers as a quality indicator. The observed linear relationship between the spatial dilution of RFID and the resulting locating accuracy enables locating RFID tags with a reliable accuracy estimate, forming a base for error-aware modeling and decision-making. That is, each estimated tag location is associated with an accuracy estimate so that buffers could be created to confidently identify an area that contains the corresponding object, forming the base for uncertainty-aware modeling and decision-making under uncertain location information.

In order to overcome the challenge associated with uncertain detection range in RFID, a boundary condition-based algorithm, called BContri, is proposed to estimate the 3D location of objects. This algorithm is based on the concept of trilateration, in which at least three tag-reader distances are needed to formulate three equations for three unknowns, i.e. x, y, and z values of the tag. However, given the unreliable nature of the tag-reader distance estimates, these distances are essentially unknown. In other words, no matter how many reference points are available, the number of unknowns always outnumbers the number of equations. Faced with this dilemma, the thought is to add constraints that reduce the number of unknowns. The premise for this newly created algorithm is that constraining the tag detection under a “detection boundary” condition enforces the consistency in the tag-reader distances to a certain level so that the tag-reader distances, while still remain unknown, can be treated as equivalent to each other with the room for fine tunes based on RSS values.

The boundary condition is defined as the scenario in which the tag is at the boundary of the detection range of the reader. Such a condition can be determined by checking the RF communication between the reader and the tag to identify a “disappearing” or “appearing” event. A “disappearing” event indicates that the reader is moving away from the tag and an “appearing” event indicates that the reader is moving toward the tag. Under both events the tag is located at the detection boundary of the corresponding reader.

With the assumption that the boundary constraint enforces the consistency among tag-reader distances, with four reader detections of the boundary condition, a total of four equations are formulated for four unknowns (Eq. (3)). Under an ideal situation this set of equations can be solved to find the exact one solution. In reality this ideal situation rarely holds. An approximation approach was created to estimate the tag location given four reader detections. Fig. 3
                         illustrates the flowchart of this BConTri algorithm.
                           
                              (3)
                              
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             x
                                             -
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             y
                                             -
                                             
                                                
                                                   y
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             z
                                             -
                                             
                                                
                                                   z
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where i
                        =1, 2, 3, 4; and r is the tag-reader distance.

The BConTri algorithm (Fig. 3) works as follows.
                           
                              (1)
                              Four spheres surrounding four corresponding readers that form the boundary condition with a single tag are first constructed. All four spheres have the same radius, reflecting the distance consistency assumption. The value of the radius can be any valid number, though starting with the typical detection range can certainly speed up the estimating process.

These four spheres are intersected to determine if there is a common overlapping volume in the space. If no common volume is found, the radius value is too small and will be increased. Steps (1) and (2) are repeated till a common volume is found.

The size of the overlapping common volume is checked. If the size is too large, the radius will be decreased and steps (1), (2), and (3) are repeated until the intersected common volume reaches a reasonably small size.

Determine the geometric center of the overlapping common volume. This is the estimated tag location.

This size-checking step, i.e. step (3), is facilitated by (1) generating an evenly distributed dense point cloud with an interval of 5cm on all three dimensions; and (2) counting the number of points enclosed by the common volume. A condition of having ten or less points is assumed to be the threshold of how small a common intersecting volume should be. The geometric center is calculated by taking an average of these enclosed dense points.

The assumption made in choosing the radius is based on the read range of a particular RFID system in use. The initial radius serves as a starting or threshold radius for each set of four reader locations. These spheres are then expanded or shrunk simultaneously maintaining the same radius until a common intersecting volume in Fig. 4
                        b (plan view) and Fig. 4c (isometric view) is reached.

The precision of the increase or decrease of the radius varies with the iteration of this algorithm. This process adopts the concept of dichotomic search, a divide-and-conquer search algorithm in computer science. For instance, if the first round intersection returns no common volume and the second round intersection returns a common volume that is too large, then the radius for third round must be an in-between value. To assure the new radius falls between two old ones, the amount of radius decrease is set to be a half of the radius change between the first and the second round. That is, assuming r
                        1 is the first round radius (too small to yield a common volume) and r
                        2 is the second round radius (too big to yield a large common volume), r
                        3, the third round radius, is calculated as r
                        1
                        +(r
                        2
                        −
                        r
                        1)/2. If r
                        3 is still too small, then r
                        4, the fourth round radius, is calculated as r
                        3
                        +(r
                        2
                        −
                        r
                        3)/2. Similarly, if r
                        3 is too big, then r
                        4, the fourth round radius, is calculated as r
                        3
                        −(r
                        3
                        −
                        r
                        1)/2. This process is repeated and the radius is either increased or decreased interactively until a common volume at a reasonable size is reached. The geometric center of the intersecting common volume becomes the estimated most probable location of the tag. This is achieved by finding the centroid of the points generated from the common volume formed. Using the big O annotation, the complexity of the dichotomic search algorithm is O(log
                        N), i.e. logarithmic. This is also the complexity of the BConTri algorithm. It typically took less than five rounds to determine the appropriate radius. When coded and implemented in C++, it only took seconds to execute.

The BConTri algorithm is different from the ROCRSSI algorithm [29]. The ROCRSSI algorithm generates a set of rings containing a sensor, computes the intersection of the rings, and uses the center of gravity of the intersection as the estimated position for the sensor. The radii of these rings are obtained by comparing the signal strengths between anchor node-sensor node and anchor node-anchor node pairs, given known distances for any pairs of anchor nodes with the assumption that the signal received signal strength decreases monotonically as the distance increases. While the BConTri algorithm also adopts the intersection and gravity of the intersection method to estimate the tag location, its novelty lies in solving the challenge in range-based localization method: the unreliable relationship between received signal strength and distance. Because of this unreliability, the tag-reader range calculated using the RSSI has a large error margin and needs to be treated as unknowns in Eq. (3). In other words, no matter how many tag-reader pairs we have, the number of unknowns always exceeds the number of equations. By introducing the boundary condition and the verified range consistency under boundary condition assumption, while the exact ranges remain unknown, they can be assumed to be the same and thus, with a minimum of four readers that form the boundary condition with a tag, we reduce the number of unknowns into four, equivalent to the number of equations. Theoretically, we shall be able to solve four equations for four unknowns. In addition, the BConTri algorithm differs from ROCRSSI in two more aspects: (1) spheres, rather than rings, are used, and (2) no comparison of RSSI values among anchor node-sensor node and anchor node-anchor-node pairs is needed.

For the comparing assessment purpose, a total of three additional algorithms based on the boundary condition were created and assessed. These include a simple average algorithm (BConAvg); a signal strength weighted algorithm (BConSigWeighted); and a signal distance algorithm (BConSigDist). The BConAvg algorithm estimates the most probable tag location as the metric average of the four corresponding reader locations under the boundary condition, illustrates in Eq. (4) below.
                           
                              (4)
                              
                                 
                                    
                                       
                                          x
                                          ,
                                          y
                                          ,
                                          z
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                4
                                             
                                          
                                          ,
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                4
                                             
                                          
                                          ,
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                4
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where [x,
                        y,
                        z] – tag coordinates; and [xi
                        ,
                        yi
                        ,
                        zi
                        ] – coordinates of reader i.
                     

The BConSigWeighted algorithm estimates the tag location as a weighted average, an average weighted over the received signal strength indicator (RSSI), of the four corresponding reader locations under the boundary condition. Eq. (5) illustrates how the tag location is estimated in the X-, Y-, and Z-dimensions.
                           
                              (5)
                              
                                 
                                    
                                       
                                          x
                                          ,
                                          y
                                          ,
                                          z
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                
                                                   
                                                      rs
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      rs
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                (
                                                
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                
                                                   
                                                      rs
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      rs
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                (
                                                
                                                   
                                                      
                                                         
                                                            z
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                
                                                   
                                                      rs
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      4
                                                   
                                                
                                                
                                                   
                                                      rs
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where [x,
                        y,
                        z] – tag coordinates; [xi
                        ,
                        yi
                        ,
                        zi
                        ] – coordinates of reader i; and rsi
                         – received signal strength indicator of reader i.

The BConSigDist algorithm estimates the tag location by first referring to the RSSI-distance relationship to determine the tag-reader distance to three or more readers and then apply the trilateration method. Eq. (6) illustrates the RSSI-distance relationship.
                           
                              (6)
                              
                                 PL
                                 
                                    
                                       
                                          d
                                       
                                    
                                 
                                 =
                                 PL
                                 
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                0
                                             
                                          
                                       
                                    
                                 
                                 +
                                 10
                                 n
                                 log
                                 
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       X
                                    
                                    
                                       σ
                                    
                                 
                              
                           
                        where d is a tag-reader distance; d
                        0 is the chosen reference distance close to the tag; PL(d) and PL(d0
                        ) are the mean propagation loss (dB) measured at distance d and d0
                        , respectively; n is the path loss exponent that specifies the decreasing rate of signal strength in an environment; and Xσ
                         is a shadow fading factor that follows the zero mean Gaussian distribution with a standard deviation of σ 
                        [49–53]. This algorithm requires a careful calibration in advance to estimate all the parameters that are involved.

A prototype RFID localization system based on the newly created boundary condition constrained algorithm, i.e. BConTri, is illustrated in Fig. 5
                     . The system contains three modules namely (1) data collection and transfer module, (2) data filtering and locating module, and (3) data visualization module. The data collection and transfer module integrates RFID, GPS, and wireless fidelity (Wi-Fi). The application context is a mobile tag, mobile reader scenario, i.e. both RFID tags and readers are moving. Data obtained from the field include the 3D coordinates of the reader position, the ID of detected tags and associated RSSI value and time of detection. Data streams are sent over Internet to a lab computer server.

The data filtering and locating module first filters out the raw data to select data that satisfies the boundary condition constraint and then applies the BConTri algorithm to estimate tag locations. In order to establish the boundary condition, the time at which a reader detects a tag is very crucial. For a given reader (R01), at time (ta
                     
                     1), there might be no tag detection within the vicinity, but at time (ta
                     
                     2) there could be a tag detection, and also at time (ta
                     
                     3) the tag might disappear. Events of “appearing” and “disappearing” establish the boundary constraint. These events could be determined by comparing the list of RFID tags detected by a specific reader at successive time stamps. Four or more readers simultaneously forming a boundary constraint with a specific tag lead to four BRPs to apply the BConTri algorithm to estimate the tag location. Field experiments with the prototype revealed that in order to obtain the four readers simultaneously forming a boundary constraint with the same tag, a large number of readers were required. However, if tags were static, the required number of RFID readers could be greatly reduced.

The visualization module takes the reader location and tag location information to visualize the location and movement of tags and readers. Fig. 6
                      provides a screenshot of one tag and four readers at two successive time stamps in a geographic information system (GIS). Both the tag and all four readers were moving.

An off the shelf handheld RFID reader and real time kinematic (RTK) GPS receiver, with four types of passive RFID tags were used in the field to collect data and validate the BConTri algorithm as well as the three additional boundary condition based algorithms outlined previously. Fig. 7
                      illustrates the hardware components of filed experiments. The GPS receiver used in this study is AshTech MobileMapper 100. It continuously receives real time corrections from Indiana continuously operating reference stations (InCORS). In field experiments, raw GPS data logging of the position of the tags to be tracked were observed for about 15–20min to establish accurate ground truth of the tag location for accuracy assessment. The positional accuracy of the ground truth tag location was at the centimeter level. Raw GPS data logging of the boundary positions were observed for about 3–5min. The positional accuracy of the boundary points was at the 10-cm level.

This study conducted a total of four field experiments. All experiments had similar setups, but at different geographic locations with varying terrain conditions. All experiments were conducted in open fields to ensure GPS tracking. The experiments were conducted in a roving reader, static tag mode, i.e. all tags were fixed to a static object while the reader was roving with the GPS receiver. The tag location was obtained by using the GPS receiver in advance to serve as the ground truth. When holding an RFID reader and moving around, the reader displays the IDs of detected tags. Under the scenario of an appearing or disappearing event a boundary condition was identified, i.e., the tag was located at the detection boundary of the reader. The specific reader location under the boundary condition/constraint is defined as the boundary reader point (BRP) in this study. The reader coordinates (x,
                     y,
                     z) were recorded. This process of finding boundary points is facilitated by the priori knowledge regarding the true tag location so that the field crew knows which direction to move to reach a boundary point. This same procedure was repeated till ten or more points that were spatially distributed were recorded for the reader. This procedure was repeated in three more experiments, leading to a total of four experiments. Fig. 8
                      illustrates the location of one test field, tags attached to a wood post, and field data collection using roving RFID reader and GPS. Fig. 9
                      illustrates the resulting boundary reader points, or BRPs identified in an experiment. These BRPs can be combined in many different ways to form four-point pairs to execute the boundary condition based algorithm to estimate the tag location. All four experiments were conducted in this open field for verifying the algorithm under the consistent boundary assumption. Additional experiments were conducted in complex environments with many barriers, detailed in the next section.

These BRPs were combined in various ways to apply the BConTri algorithm as well as other boundary condition based algorithms to estimate the tag location. There are no restrictions on which BRPs can be chosen. Theoretically ten BRPs in this experiment afford a total of 210 (i.e. (10*9*8*7)/(4*3*2*1) four-BRP combinations. However, different four-BRP combinations have different geometrical configurations that certainly affect the accuracy of the location estimate using the boundary condition based algorithm, which was investigated in this study. For the verification purpose, Table 1
                      illustrates two combinations only, each of which has four BRPs. X, Y, and Z dimensions are all in the unit of meter in the State Plan Indiana West Coordinate System. The two example combinations in Table 1 were randomly chosen. For the illustration purpose, Table 1 also compares the estimated tag location with its true location at the coordinates of (912,843.56, 574,187.33, 153.68) for the BConTri and the BConAvg algorithms for both combinations. While both the BConTri algorithm and the BConAvg algorithm can estimate the tag location quite accurately, the BConTri algorithm renders a higher accuracy than the BConAvg algorithm.


                     Table 2
                      provides an example of the accuracy verification of all four boundary condition based algorithms using a tag that is specifically designed for environments where metals and liquids are present. The coordinates of the four BRPs as well as the true tag location are provided in Table 3
                     . Table 2 further confirms the validity of the newly created BConTri algorithm. Among all four condition based algorithms, BConTri renders the highest accuracy. BConAvg and BConSigWeighted render accuracy at similar levels. BConSigDist renders huge errors. Similar observations were obtained for any other combinations in all four experiments.

A detailed investigation was conducted to determine the cause of the huge errors in the estimated tag location using the BConSigDist algorithm. Fig. 10
                      illustrates the RSSI-distance relationship based on Eq. (6) with an R
                     2 of 0.66. Table 4
                      used four sample points to highlight the magnificence of errors in the estimated tag-reader distance based on this RSSI-distance relationship. It was found that under the boundary condition, the RSSI-distance was very unreliable because the RSSI values are very close to each other and are all at the extreme narrow range that involved extensive extrapolation. The erroneous distance data, when used in Eq. (3) for four tag-reader pairs under boundary condition, leads to four second-order equations with three unknowns. By subtracting one equation from the remaining three transforms the problem into three first-order equations with three unknowns, which means there is exactly one solution. However, this solution (for Table 4 data) is the solution presented in Table 2. Unfortunately it is a false solution. We double-checked the potential of using intersection and geometric center approach when using RSSI-determined distances in computer aided engineering (CAD) software package by creating four spheres. Their intersection leads to a very large volume (as expected). The geometric center deviates 5.27m from the true tag location.

Unreliable RSSI-distance relationship also partially explain why the BConSigWeighted algorithm renders similar error magnitude to the BConAvg: RSSI values at the boundary condition are very close to each other and essentially each boundary point receives almost equivalent weight. This detailed investigation revealed that the BConSigDist algorithm did not work well under boundary condition. It also revealed that under boundary conditions the BConSigWeighted algorithm and the BConAvg algorithm always yielded similar error magnitude. Therefore, in the accuracy assessment section, only the BConAvg algorithm and the BConSigWeighted algorithm were compared to the BConTri algorithm to determine its accuracy enhancement, with the expectation that the BConAvg and BConSigWeighted algorithms yielding similar error magnitude.

To verify the consistent boundary assumption in complex and congested environments where exist barriers, metal interferences, and multiple-path of signals, two sets of experiments were conducted, one in a parking garage and the other in a stairway. Due to the difficulty of using GPS to determine locations in indoor environments, the emphasis has been on the consistent boundary – in a single environment, the maximum detection radii between a tag and a number of readers at a single time point are comparably consistent to each other. Only one four-boundary point combination from the garage experiments and one four-boundary point combination from the stairway experiments were used to estimate the tag location and compare the estimated location to its true location for the verification purpose.


                     Fig. 11
                      provides a sketch for the configuration of the experiments in a parking garage environment where exists concrete columns, floors, walls, and cars that could block and interfere the radio signal. Fig. 12
                      provides a couple of photos to show the actual parking garage environment for the experiments. An RFID tag was attached to a wood stick, held by one person, and another person who was roving around held an RFID reader. A total of eight boundary points (and eight maximum detection ranges) were identified with varying blocking and interfering scenarios. These eight tag-reader distances under the boundary constraint range from 7.9m to 11.7m with a mean of 9.81m, a standard deviation of 1.38m (14% of mean), and a range of 3.8m, revealing the relative consistency among these distances. The concepts of roundness measurement and error from the manufacturing area were adopted in this study to provide supplementary consistency measurement besides standard deviation. The roundness error was calculated by first determining the least square circle that minimizes the total of squared deviations of the boundary points from it, and then calculating the roundness error as the difference between the maximum and minimum distances from this circle [54,55]. For all boundary distances illustrated in Fig. 11, the roundness error is 1.8m.

A four-boundary point combination was randomly chosen to estimate the tag location and compare the estimated location to its true location for the verification purpose. A local coordinate system centered at the true tag location was established to facilitate the estimation. Table 5
                      illustrates the coordinates of the four boundary points and the estimate tag location, leading to a 3D positional error of 1.43m.

The second set of experiments was conducted in a stairway environment. The vertical distance between the tag and the reader was intentionally set at a 0.4m interval ranging from 1m to 4.2m. Given the space constraint (see Fig. 13
                      in which the tag is circled), only three boundary points were identified for each vertical distance. Table 6
                      illustrates the maximum detection ranges at difference vertical distances with mean and standard deviations. When all these maximum detection ranges are considered, the mean value is 9.81m and the standard deviation is 1.14m (12% of mean), both are very close to their counterparts in the parking garage experiments. The roundness error is 2.39m. The consistent boundary assumption holds reasonably well. Table 7
                      illustrates a verification case using experimental data from the stairway experiments with a 3D positional error of 2.09m.

A total of four experiments in the open field were conducted in this study, one for each RFID tag type: (1) STT tags – general purpose tags that are rugged and designed purposely for a variety of indoor and outdoor usability; (2) SMT tags – standard on metal tags that are designed to be utilized in environments where metals and liquids are present; (3) BAT tags – thin profile badge tags for personnel and asset tracking; and (4) TMT tags – temperature monitoring tags. Of the four experiments conducted in this study, three identified 12 BRPs while the experiment with the STT tag identified ten BRPs. Four-point combinations were generated to estimate the tag location.

Comparing the estimated tag location to the true tag location that was determined using the RTK GPS in advance determines the accuracy of individual four-point combination. Individual accuracy results within an experiment were pooled into a group to compute the overall accuracy of each experiment. Table 8
                      summarizes the 95% and 100% root mean square error (RMSE) measures for each experiment and algorithm. The BConTri algorithm yielded the lowest RMSE in all experiments regardless of the RFID tag type. The BConAvg and the BConSigWeighted algorithms yielded close RMSE measures in all experiments, as expected. The lowest RMSE measures, 2.47m in the case of 95% RMSE and 2.91m in the case of 100% RMSE, correspond to the BConTri algorithm applied in the SMT tag experiment. This is caused by the presence of metal attached to the same wood post, to which the tags were attached. Student’s t-tests were conducted to determine if the results from different boundary condition based algorithms were significantly different from each other. It was confirmed that at the 99% confidence level, the difference among different algorithms was significant in both one-tail and two-tail scenarios.

Slijepcevic et al. [56] suggested the use of the average location error method to assess the quality of a solution given the estimated location and true location of a tag. The average location error for a group of solutions is calculated by Eq. (7) below:
                        
                           (7)
                           
                              
                                 
                                    A
                                 
                                 
                                    LocError
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       N
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            e
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            e
                                                         
                                                      
                                                      -
                                                      y
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            z
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            e
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            z
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    1
                                    /
                                    2
                                 
                              
                           
                        
                     where ALocError
                      is the average location error of a group of solutions; N is the size of the group; 
                        
                           (
                           
                              
                                 x
                              
                              
                                 i
                              
                              
                                 e
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 i
                              
                              
                                 e
                              
                           
                           ,
                           
                              
                                 z
                              
                              
                                 i
                              
                              
                                 e
                              
                           
                           )
                        
                      is the estimated location of tag i; and (xi
                     ,
                     yi
                     ,
                     zi
                     ) is the true location of tag i. Table 9
                      provides the two-dimensional (2D) horizontal and 3D average location errors for the experiments conducted in this study. The ranking of the resulting accuracy among three algorithms differentiated by the tag type is similar to the RMSE assessment in Table 8. The highest accuracy, 2.59m in 2D and 2.48m in 3D, corresponds to the SMT experiment and the BConTri algorithm.

It is believed that the accuracy of the new algorithm is directly related to the spatial distribution of RFID readers. This section invested two measures of the spatial distribution of RFID readers as the potential indicator of accuracy via a statistical approach: (1) the Dilution of Precision (DOP) concept directly from GPS, and (2) the newly formulated concept of spatial dilution of RFID readers.

DOP is a concept in GPS to determine the strength of geometric distribution of four or more satellites above the receiver’s horizon [12]. These four or more satellites depend on the clock offset, i.e. signal travel time, to determine the distance between a GPS receiver and a satellite and consequently, to estimate the 3D coordinates of the receiver. When visible satellites are far apart the DOP is smaller and geometry is strong. When they are close to each other the DOP is high and geometry is weak. The accuracy of GPS position is subject to this geometric strength. The uncertainty of the GPS position increases as DOP value increases.

DOP can be calculated as P(osition)DOP, H(orizontal)DOP, V(ertical)DOP, and T(ime)DOP. This concept was applied to the RFID system, with the unknown tag serving as the receiver and the readers equipped with GPS serving as the satellites. Because an RFID system does not rely on clock offset for determining the distance, the concept of DOP could not be directly adopted.

A new measure of the spatial dilution of RFID readers was introduced in this study. Eqs. (8) and (9) illustrate how this measure is calculated for a four-point combination under a boundary scenario, i.e. all four points are BRPs. xi
                        , yi
                        , and zi
                         are the 3D coordinates of reader/boundary point i where i is from 1 to 4. 
                           
                              
                                 
                                    μ
                                 
                                 
                                    x
                                 
                              
                              ,
                              
                              
                                 
                                    μ
                                 
                                 
                                    y
                                 
                              
                              ,
                              
                              and
                              
                              
                                 
                                    μ
                                 
                                 
                                    z
                                 
                              
                           
                         are mean values of the coordinates of the four readers/BRPs in a four-point combination in the x, y, and z dimensions, respectively. 
                           
                              
                                 
                                    s
                                 
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                           
                        , 
                           
                              
                                 
                                    s
                                 
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                           
                        , 
                           
                              
                                 
                                    s
                                 
                                 
                                    z
                                 
                                 
                                    2
                                 
                              
                           
                         are the variances where n is the number of observing points and its value is 4.
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         x
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         y
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     x
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     x
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     3
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     x
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     4
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     x
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         n
                                                         -
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     y
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     y
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     y
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     y
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     y
                                                                  
                                                                  
                                                                     3
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     y
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     y
                                                                  
                                                                  
                                                                     4
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     y
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         n
                                                         -
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     z
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     z
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     z
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     z
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     z
                                                                  
                                                                  
                                                                     3
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     z
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     z
                                                                  
                                                                  
                                                                     4
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     μ
                                                                  
                                                                  
                                                                     z
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         n
                                                         -
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       s
                                    
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       s
                                    
                                    
                                       y
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       s
                                    
                                    
                                       z
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                     


                        Fig. 14
                         illustrates the relationship between the accuracy of the tag location estimate and the spatial dilution (SD). The cross symbol represents the accrual accuracy while the box symbol represents the predicted accuracy based on a linear regression model between the accuracy and the spatial dilution – SD. The correlation between the accuracy of the tag location estimated by the BConTri algorithm and the spatial dilution was found to be −0.62. Table 10
                         provides the results of the linear regression analysis. The linear relationship was determined to be accuracy=9.7672−0.0385*SD, with a regression R-square of 0.65 and a regression F test p-value of 3.84E−54. This indicates that the regression is statistically significant and a large portion of the error can be explained by this specified linear relationship. This finding enables that not only the tag location can be estimated using the BConTri algorithm created in this study, but also the associated accuracy could be reasonably accurately determined with the calculation of SD and the linear relationship between SD and the accuracy. Moreover, this finding also enables the quality control in RFID locating practices, i.e. given an accuracy requirement, the corresponding SD can be calculated and only those four-point combinations that meet this SD requirement will be used to estimate the tag location to ensure the desired accuracy level.

@&#DISCUSSION@&#

A boundary constraint is introduced to facilitate RFID-based localization applications to overcome the unknown tag-reader distance challenge. A boundary constraint is defined as the scenario of a tag being at the detection boundary (i.e. the maximum detection range) of a reader, reflected as either an “appearing tag” or a “disappearing tag” event. While the tag-reader distances remain unknown in trilateration algorithms, the maximum detection ranges of multiple readers in a single field environment are close to each other and it is reasonable to assume they are equivalent to each. Thus, by referring to four readers that form the boundary condition with the target tag, the number of variables in trilateration algorithms is reduced to equal the number of equations, that is, four equations for four unknowns. Theoretically the tag location can be estimated by solving this group of equations.

In addition to the open green field experiment, the consistency of the maximum detection range was verified in two complex environments (i.e. a parking garage and a building stairway) in which many barriers could cause metal interferences, block radio signals, and generate multipath errors. This consistency check reveals the feasibility of establishing bounds on a congested job site using readers, which makes us believe that the algorithm will work in congested environments as well.

This newly created boundary condition based approach yielded an average location error of 2.48m in validation experiments by introducing the boundary condition constraint that in turn, leads to the assumption of consistent maximum detection ranges in the same environment. Theoretically speaking, the consistency in the detection range reduces the number of unknowns to be equivalent to the number of equations, i.e. four equations with four unknowns in this study. The localization problem is transferred from estimating a solution for an underdetermined system of equations into finding an exact solution and thus, is expected to yield a higher level of accuracy. Notwithstanding the above discussion, it is worthwhile to consider that many factors, such as indoor versus outdoor, site configuration, cluttered versus sparse environment, RFID systems, and localization methods and algorithms, all affect the accuracy of RFID localization. Since the testing environment and the site configuration of this study is different from previous studies, a claim on the improvement expressed as either a percentage or an absolute value based on a direct number-to-number comparison might not be justified.

While the prototype and field experiments proved the concept, the boundary constraint certainly imposes a number of limitations on the applicability of this newly created approach from the practical deployment perspective. First, the assumption that an “appearing tag” or a “disappearing tag” event suggests the tag is on the detection boundary of the reader might not hold in cluttered environments, for instance, an indoor environment. Besides, the GPS receiver roving with the RFID reader relies on satellite signals to provide real time location of the reader. Therefore, this boundary condition based approach is only applicable to outdoor RFID localization applications such as road construction projects.

Second, to ensure the occurrence frequency of a tag being at the detection boundary of four readers at the same time, a dense deployment of readers is desired and tags shall not be too dynamic to allow time windows for detection. However, readers are desired to be dynamic, i.e. a high mobility, to increase the chance of forming the boundary condition with the tag. Considering the approximate 10-m average detection range, at least 100 readers are needed to cover the entire area for 100m*100m site. This limitation certainly is a barrier to the deployment and scalability of this algorithm in the construction domain. A worthy research direction could be the optimal configuration of an RFID reader network with a mix of mobile readers (carried by field crews and mobile equipment) and static readers (installed at strategic locations) to ensure frequent occurrences of tags-at-boundaries events. Smart phone is another technology that affords us the opportunity of bundling the RFID reader capabilities so that field crews equipped with such phones can serve as RFID readers without extra efforts to increase the occurrence frequency of a tag located at the detection boundary of four readers. These technological advances are expected to offer solutions to overcoming this limitation. Furthermore, the wireless communication capabilities of smart phones and RFID readers shall be explored so that data regarding tag detection is sent to a central computer in real-time. The computer processes data, executes localization algorithms, and reports results. Such a set up eliminates the need to physically check every reader and once an asset is located, the computer broadcasts its location to field crews in a real-time manner.

Third, this study assumed that the antenna profile is a sphere. However, it was noticed in the field experiments that the detection range is longer when the reader points to the tag than when the reader does not point to the tag. This indicates that the antenna profile is not always a sphere, particularly in congested scenarios, and consequently, the adoption of sphere antenna profiles in the algorithm might cause large errors. This observation made us believe that there is quite some room to further enhance the accuracy by incorporating the antenna profile into the algorithm, which warrants future studies.

This paper has presented a boundary condition based trilateration algorithm, BConTri, to estimate the RFID tag location in a 3D real world coordinate system and improve the accuracy of outdoor RFID localization. The boundary condition is defined as that an RFID reader and tag are at the detection boundary. This boundary condition could be identified by “appearing” and “disappearing” events, i.e. the tag literally appears in or disappears from the list of detected tags in successive time stamps. Four variants of trilateration algorithms, namely geometric center (BConTri), simple average (BConAvg), RSSI weighted average (BConSigWeighted), and RSSI-distance (BConSigDist), were created, tested, and validated through field experiments, in which, an off-the-shelf RFID system of four types of passive tags was used. A measure of the spatial dilution of reader distribution was formulated and a linear relationship between this measure and the locating accuracy was observed, forming the base for using this measure as a reliable indicator for the resulting locating accuracy. A prototype 3D RFID localization system based on the newly created BConTri algorithm was also presented.

Field experiments suggest that constraining RFID readers and tags into boundary conditions forced the consistency in the reader-tag distance. While the reader-tag distance remained unknown in trilateration, the forced consistency could reach a reasonably high accuracy. For instance, in the experiments with SMT tags that are specifically designed to handle an application environment where metals and water might exist, the BConTri algorithm achieved an average horizontal location error of 2.48m and an average 3D location error of 2.59m.

Field experiments revealed the unreliable nature of the RSSI-distance relationship under the boundary constraint. This is because under this constraint, all RSSI values are at a small range that is outside the extent of interpolation. It is believed that this is the reason why the BConSigDist algorithm yielded large errors while the BConSigWeighted algorithm yielded similar error magnitude to the BConAvg, a simple average algorithm.

A correlation coefficient of −0.62 and an R-square 0.65 in the linear regression model suggested a moderately strong linear relationship between the spatial dilution of distribution measure of RFID readers and the resulting locational accuracy of the estimated tag location. In other words, spatial dilution is a quality indicator so that every estimated tag location is associated with an uncertainty to facilitate error-aware modeling and manage risks associated with uncertain object locations. Furthermore, this spatial dilution measure can serve as a quality control mechanism to ensure the accuracy of estimated tag location meets a predefined accuracy level. However, the relationship between SD and accuracy might change for different application environments or different types of RFID. Calibrations might be necessary to establish the relationship for a specific application environment or a particular type of RFID.

The prototype 3D RFID localization system demonstrated the feasibility of real time locating and tracking construction site objects. Its application requirements and limitations imposed by the newly introduced boundary condition constraint lead to a number of worthy research directions. Ongoing research includes investigating factors such as the existence of large barriers that affect the detection range and incorporating such factors in the BConTri algorithm to further enhance the locating accuracy, the incorporation of non-sphere antenna profiles into the algorithm, the optimization of an RFID reader network to ensure the occurrence frequency of tags-at-boundaries events, and correlating accuracy to SD via non-linear regression models. Another worthy research topic is a systematic study on establishing protocols for matching RFID localization methods to construction applications.

@&#REFERENCES@&#

