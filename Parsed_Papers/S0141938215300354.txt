@&#MAIN-TITLE@&#An interactive and multi-functional refreshable Braille device for the visually impaired

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new Braille device was developed for blind people.


                        
                        
                           
                           The device features are readable, vocalized, refreshable and multi-functional.


                        
                        
                           
                           The usability rate of the device was found to be 97.16%.


                        
                        
                           
                           Blind people can read all magazines with their hands and listen all magazines with this device.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Refreshable Braille device

Braille

Braille display

Reading Braille device

Blind

@&#ABSTRACT@&#


               
               
                  Although visually impaired people are generally considered to be dependent and helpless people, they actually share the same characteristics as other people. Thanks to the Braille alphabet, which has been developed to reduce inequality of opportunity to minimum, their lives become a little bit easier. Besides Braille alphabet, there are many devices and software developed for visually impaired people. In this study, a readable, vocalized and refreshable Braille device, which can ease the lives of visually impaired people, has been developed. The results of the tests on this device with 20 visually-impaired people whose ages ranged between 5 and 15 and who do not know the Braille alphabet indicated the usability rate of this device to be 81.8%. The usability rate of the device was found to be 97.16% in the tests with 30 visually-impaired people whose ages ranged between 10 and 33 and who know the Braille alphabet. The durability test of the device indicated that Braille cells worked with 100% efficiency in the trials from 50 characters to 4000 characters. The device was superior both in terms of features and 35% cheaper compared to the ones available on the market. Besides, it was determined that USB connection transmitted data faster compared to the Bluetooth connection.
               
            

@&#INTRODUCTION@&#

The Braille alphabet, developed by Louis Braille [1], is used by visually-impaired people with special needs [2,3]. Visually-impaired people can live easier lives thanks to this alphabet. Each Braille character in the Braille alphabet is composed of 6 dots in 2 columns and 3 lines. Besides, some dots are made more dominant compared to other dots so that visually-impaired people can read by touching [4]. Visually-impaired individuals read by touching their fingers on the dots of Braille characters [5]. Many applications that can facilitate the lives of visually impaired people in the environments they live have been developed using the Braille alphabet.

Refreshable Braille Display is one of the most developed applications and transfers any text to Braille cells via computers to help visually-impaired individuals read by touching [6]. The Braille cells are developed for the Braille alphabet by using Braille displays as hardware. Many articles have been written on the Refreshable Braille Display and many applications have been developed in the industry. There are many commercially available devices like Power Braille, Braille Star, Brilliant BI, Alva, PacMateOmni, Focus Series. Besides, many different types with 10 cells, 20 cells and 40 cells are also available. The material used in the pins of Braille cells in the Refreshable Braille Displays is important because they need to transfer the desired information flawlessly and in the shortest time possible. The construction elements used include relay [7,8], polymer actuator [9], elastomer actuator [10], piezo electric actuator [11], flapper actuator [12], micro bobin actuators [13], bistable electroactive polymers [14,15], pneumatic balloon actuators [16], field-effect transistor and polymeric actuators [17].

In this study, a bookreader device with 96 Braille cells was developed to end visually-impaired individuals’ dependency for reading texts. They can both read and listen to texts in any book in the Braille alphabet form by touching with their hands on the tablet. Currently available bookreader machines can only export written texts in audio format. If one wants to read the book with the Braille alphabet, Braille display can be purchased to read by touching if the reading machine supports the Braille alphabet. However, if the bookreader machine purchased does not support Braille display, it can only be listened to. In this study, both place and money were saved by developing a device including both in one.

Initially the type of connection for communication with the device, which has been developed for visually-impaired individuals, is to be chosen automatically or manually. Later on, the document to be read is to be scanned using a scanner and necessary OCR processes are implemented to obtain the text in the image scanned. After the operating mode is determined, data can be transferred on the Braille cells or can be listened to. During these operations, data can be explored by continuously checking whether any information comes from the buttons. The operations steps for the device developed are shown in Fig. 1
                     .

USB and Bluetooth connection are used to achieve communication between the computer and the device. When sending information with USB and Bluetooth, band width is important because bandwidth determines how many bytes of data will be send. Bluetooth connection is preferred as default connection type as it does not cause cable mixing. If no device is seen when connected with Bluetooth, USB connection is checked.

USB is one of the most commonly used connection types [18]. When data are transferred with USB, transmission is done through 4 cables on the line. The red cable carries 5V signals, black cable carries 0V signals, green cable carries data and white cable carries CLK (Clock) signals. USB communication uses synchronized serial communication protocol. Synchronized serial communication protocol, receiver and transmitter work simultaneously. This simultaneous operation is controlled by CLK signal. CLK signal is send when each byte of data is transmitted. In other words, CLK signal is 1 when data is transmitted. Data transmission to the circuit and data reception from the circuit is realized in 8 bytes. There are a total of 96 Braille cells, so in order to achieve simultaneous writing process in all cells, 8 bytes are sent at once but after there are 96 bytes on the side of PIC, data is transmitted to Braille cells.

Bluetooth communication is preferred to achieve communication without cable mess. Bluetooth HC06 integrated circuit shown in Fig. 2
                            is used to achieve communication via Bluetooth.

When Bluetooth HC-06 module is used, it is important to know which comport is used. After the relevant comport is determined, data is transmitted at 9600baudrate to send 8 bytes at each time.

In serial communication, first of all it is stated that data transmission will be started with Start bit. Later on, data of 8 bytes is transmitted. If the parity bit, which checks whether data is transmitted accurately, is to be used, it is added to the data package. If it will not be used, Stop bit is added to the data package and data transmission is finalized.

The Braille alphabet is developed to help visually-impaired people to read. Braille cells were developed to electronically display the Braille alphabet on any type of electronic device like computers or Braille display. Piezo actuators, which convert electrical energy to pin movements [18], were used in the structure of the Braille cell used in this study and it is shown in Fig. 3
                        . The pins replaced according to the character, sentence or paragraph that are send via the software developed. In this study, 96 Braille cells were used.

If one wants to send more than one characters to the Braille cells, backpanels on which Braille cells in groups of 8 are mounted are used so that each Braille cell can be used actively at the same time. Slider registers are used in the structure of backpanels. After information is written on any Braille cell, the signal is transmitted to the next Braille cell and thus data is also written on that Braille cell. In this study, as 96 Braille cells are used, 12 backpanels with 8 Braille cells are used. The backpanels used are shown in Fig. 4
                        . The Braille cells mounted on the backpanels are shown in Fig. 5
                        .

Detailed information about Braille cells and backpanels can be found in our other studies [19,20].

A circuit, which transforms 5V to 200V to obtain 200V energy necessary to feed Braille cells, which enables them to make audio warning and which transmits information to Braille cells and a button circuit which enables exploration on texts have been designed. Such circuit designs are abundant on the market, but the design in this study belongs to us. The parts of the circuit are examined one by one.

Programmable PIC18F4550 with USB support which functions as microcontroller, which uses RISC (Reduced Instruction Set Computing) processer architecture, which is produced by Microchip Technology Corporation and which has USB support, has been used in this study. It is the circuit component which enables connection between the circuit developed and the computer, in other words, it enables data transmission to Braille cells or the communication between the buttons on the circuit and the computer.

Standard Buzzer circuit is developed so that visually-impaired individuals can be aurally warned when they upload files to the system or when the buttons are pressed. The circuit developed produces only beep sound. When the button is pressed on when sending data, the relevant leg of the PIC is set, the transistor turns on and the buzzer goes off.

It is the circuit developed to obtain 185V of energy necessary to supply Braille cells. With LM3488 integral switch mode, 5V DC voltage can be transformed into 185V DC voltage. Therefore, it is called DC to DC converter. In this boosting process the following elements are used:
                              
                                 1.
                                 Switching wave (for 8kHz PWM or square wave) producer.

Switching element (MOSFET or transistor).

Bobbin (10μH).

LM3488 integral triggers the MOSFET (IRF540N). There is a bobbin in the drain end of the MOSFET. The other end of the bobbin is connected to Vin
                            input voltage. The bobbin creates a magnetic area depending on the frequency and PWM (pulse wide modulation) pulse width, and as a result of this magnetic field high peak voltages are produced. By straightening these voltages with diodes and condensers, Vout
                            voltage is obtained. Vout
                            voltage is checked with feedback and PWM value is adjusted. For example, if it reaches to 180V, when it has been adjusted to 200V, PWM changes to adjust till it reaches to 200V. It controls the output voltage with feedback.

It is shown in detail in Fig. 6
                            together with the circuit parts developed. In part 6, there is a PIC microcontroller. By means of this, system programming processes such as checking the buttons and sending information to Braille cells are realized. In part 2, there is a connector, which is used to make changes in the software written in PIC. The part 3 enables the production of clock frequency necessary for PIC to function. In part 4, there is a circuit necessary to send data to Braille cells and to drive Braille cells with 185V. Part 5 transmits data that comes from the buttons. In part 7, there is a voltage booster circuit which boosts the voltage necessary for Braille cells. In part 1, there is a circuit which is necessary to establish communication via Bluetooth.

There are a total of 96 Braille cells on the device developed. If the number of characters is found to be more than 96 after it is scanned, buttons placed on the device are used to carry out some necessary operations on this text such as working with Bluetooth or USB, receiving file via the scanner, receiving data from SD card. The functions of these buttons are:
                              
                                 •
                                 Power button: The system is turned on or off.

Reset button: It resets all the settings or the software developed.

Forward–Backward buttons: When the “Forward” button is pressed, the next 96 characters are sent to the Braille cell and reading is performed by touching with hands. When “Backward” button is pressed on, the previous 96 characters from the text is sent to the Braille cell to enable reading by touching with hands.

Up-down buttons: Just like PageDown and PageUp buttons on the keyboard, these buttons enable users to scroll texts one page up or down.

Home–End Buttons: The “Home” button carries the cursor to the first character of the text and the “End” button takes it to the last 96 characters of the text.

Vocal button: The text is transferred to the outer environment only by vocalization.

Print button: The individual reads the information transmitted to the Braille cells by touching with his/her hands.

Vocalize and Print Button: The text is transmitted to the outer environment both vocally and through printing.

Download–Upload Buttons: “Download” button is used to get any file saved in the memory card. “Upload” is used to save the text obtained to the memory card after image procession.

Bluetooth/USB button: The position 1 enables data transmission via USB and 0 enables data transmission via Bluetooth.

Relevant button circuit is shown in Fig. 7
                            in detail. The appearance of printed circuit card and buttons are given in Fig. 8
                           . As it can be seen in Fig. 7, there are 8 legs that connect the buttons to the connector. For example, BTN1 and BTN9 are connected to input number 10. The other legs of these buttons are connected to input number 1 and 2. When button 1 is pressed on, data is sent both to the input number 10 and to the input number 2. When the button number 10 is pressed on, information is sent both to the input number 10 and number 1. Thus, the button pressed on is determined according to the information read.

The button under the reset button is used to program PIC18F4550. This button is connected to the MCLR leg of the PIC18F4550 and used to reset the system; that is, to upload new program codes to PIC via any software like Realterm.

Mustang brand accumulator with 6V operating voltage, which is necessary to activate the circuit, has been chosen. The circuit which charges the accumulator is shown in Fig. 9
                        .
                           
                              •
                              Area no 1 is the part that provides the output that feeds the scanner when the adaptor is plugged.

Area no 2 is the part that provides 6.5V accumulator charge output when the adaptor is plugged.

Area no 3 provides the scanner output.

Area no 4 provides 5V to be given to the circuit.

Thanks to LM2576 adjustable voltage regulator integral used in battery charge circuits, 5V can be received. However, 1N4007 diodes that can conduct current only in one direction, condensers of 100μF 16V, which store electricity for a short period of time, and B82422T1154J000 bobbins, which create a magnetic area around themselves when energy is provided, are used. Condensers and bobbins store electricity in the circuit. The important difference between these two circuit elements is that while condensers leave the voltage behind when they are connected to the circuit (phase difference), the bobbins transfer the voltage forward [21].

Circuits in which light emitting diodes (led) shown in Fig. 10
                         are used to show accumulator charge status, have been created. Besides, sound warning is used for visually-impaired individuals to understand that accumulator is out. Thanks to the LM3914 integral, the voltage is cut off when the accumulator is full. A total of 6 leds were connected to the LM3914 integral to which 10 leds can be connected. Thus, the leds are lighted according to the fullness condition of the accumulator.

The project, which has been developed to be the eyes of visually-impaired people, reduces the dependency of visually-impaired people to minimum and has many features which enable visually-impaired people to read from Braille cells by touching, to listen to the text, to control all system with its rechargeable battery, to transfer any text obtained from books, newspapers, magazines by means of the scanner via USB and Bluetooth and to explore texts. The device developed in this study is shown in Fig. 11
                     .

The functioning system of the device developed in stages includes the followings:

The user determines whether the connection to the device will be via USB or Bluetooth. After the connection type is chosen with the button, the pseudo codes necessary to understand whether USB connection or Bluetooth connection is used to connect the device when the program starts are given below. Bluetooth was preferred as default connection type as it did not cause cable mixing. If there is not any device available when connected with Bluetooth, USB connection is controlled.
                           
                              
                                 
                                 
                                    
                                       
                                          USB_Connection()
                                       
                                    
                                    
                                       
                                          {
                                          
                                          Connect the device with USB
                                       
                                    
                                    
                                       
                                          if there is any connection
                                       
                                    
                                    
                                       
                                          {
                                          
                                          
                                          Connect to the device
                                       
                                    
                                    
                                       
                                          Return true
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          else
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          Return false
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       
                                          Bluetooth_Connection()
                                       
                                    
                                    
                                       
                                          {
                                          
                                          Connect the device with Bluetooth
                                       
                                    
                                    
                                       
                                          if there is any connection
                                       
                                    
                                    
                                       
                                          {
                                          
                                          
                                          Connect to the device
                                       
                                    
                                    
                                       
                                          	
                                          
                                          Return true
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          else
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          Return false
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       
                                          Main()
                                       
                                    
                                    
                                       
                                          {
                                          
                                          if (Bluetooth_Connection() is true)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          …..
                                       
                                    
                                    
                                       
                                          
                                          
                                          Else
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          USB_Connection();
                                       
                                    
                                    
                                       
                                          
                                          ………
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                 
                              
                           
                        
                     

CP100 model by BENQ brand was used to receive any document from outer environment. After the image is taken from outer environment via the scanner, it is submitted to some preprocesses. These preprocesses include RGB to grayscale conversion, and the implementation of filters like mean and median. In this study, Median filter [3×3] was used. The aim of all preprocess techniques used in pattern recognition system is to purify the pattern from unwanted components to obtain similar key features from similar patterns [22]. After preprocesses, the best method (White [23], Sauvola [24], Niblack [25] and Otsu [26]) used to dynamically determine threshold value is determined and spelling process is realized. The Otsu Algorithm was preferred because of its performance and achieving best results [27]. Later on, Artificial Neural Networks algorithm was used for character identification.

To start the device, one of the following operation modes is chosen: “Print”, “Vocal”, “Print and Vocal”. When “Print” is chosen, the texts obtained are transmitted to Braille cells according to the type of connection (USB/Bluetooth). If “Vocal” mode is chosen, the texts are only vocalized. When “Print and Vocal” mode is chosen, the texts obtained are transmitted both to the Braille cells and vocalized according to the type of connection (USB/Bluetooth) chosen. Some analysis procedures are carried out on the characters obtained after image processing. In these analyses, first of all the total number of characters is determined. But while determining this number, capital letters, numbers and symbols are to be paid attention because while the character “a” is written with one Braille cell, the capital “A” character is written on 2 Braille cells, one for capitalization and one for “a” character. Then, secondly characters code are added to array. A value is set for each of the Braille cells dots. The Braille cell dot values are shown in Table 1
                         and character code values are shown in Table 2
                        . For example, when the character “a” is written, only “1” cell is moving so the code is 2, when the character “b” is written, “1” and “2” cells are moving so the code is 2+32, when the character “c” is written, “1” and “4” cells are moving so the code is 2+1, etc.

The pseudo code for this is given below [28].
                           
                              
                                 
                                 
                                    
                                       
                                          Procedure Clear_Braille_cells()
                                       
                                    
                                    
                                       
                                          {
                                          
                                          for (i
                                             =1 to Braille cell count)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Clear Braille cell
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       
                                          Int function Character_Control(char ch)
                                       
                                    
                                    
                                       
                                          {
                                          
                                          If (ch is number)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Piece of the character is 2;
                                       
                                    
                                    
                                       
                                          If (ch is capital letter)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Piece of the character is 2;
                                       
                                    
                                    
                                       
                                          
                                          If (ch is ∗, /, −, +, =)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Piece of the character is 2;
                                       
                                    
                                    
                                       
                                          
                                          Else
                                       
                                    
                                    
                                       
                                          Piece of the character is 1;
                                       
                                    
                                    
                                       
                                          
                                          Return piece of the character;
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       
                                          Procedure Character_Array(char ch)
                                       
                                    
                                    
                                       
                                          {
                                          
                                          If (ch is number)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Add the number code(1+4+8+64) to the array;
                                       
                                    
                                    
                                       
                                          
                                          If (ch is capital letter)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Add the capital letter(8) code to the array;
                                       
                                    
                                    
                                       
                                          
                                          Else
                                       
                                    
                                    
                                       
                                          
                                          
                                          Add the ch code to the array;
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          
                                       
                                    
                                    
                                       
                                          Main()
                                       
                                    
                                    
                                       
                                          {
                                          
                                          ……
                                       
                                    
                                    
                                       
                                          
                                          ……
                                       
                                    
                                    
                                       
                                          Clear_Braille_cells();
                                       
                                    
                                    
                                       
                                          
                                          Go to the first position of Braille cell;
                                       
                                    
                                    
                                       
                                          Int total=0;
                                       
                                    
                                    
                                       
                                          
                                          For (i
                                             =1 to length of the Textbox)
                                       
                                    
                                    
                                       
                                          {
                                          
                                          ch=Take only one character from the Textbox;
                                       
                                    
                                    
                                       
                                          total=total+Character_Control(ch);
                                       
                                    
                                    
                                       
                                          
                                          
                                          Add the Character_Array(ch);
                                       
                                    
                                    
                                       
                                          
                                          }
                                       
                                    
                                    
                                       
                                          
                                          If (total<96)
                                       
                                    
                                    
                                       
                                          
                                          
                                          Send the characters to the Braille display with USB/Bluetooth;
                                       
                                    
                                    
                                       
                                          
                                          Else
                                       
                                    
                                    
                                       
                                          {
                                          
                                          Find the how many pieces for the total characters
                                       
                                    
                                    
                                       
                                          
                                          Send the characters to the Braille display with USB/Bluetooth;
                                       
                                    
                                    
                                       
                                          
                                          }
                                       
                                    
                                    
                                       …
                                    
                                    
                                       }
                                    
                                 
                              
                           
                        
                     

As there are 96 Braille cells, only 96 characters are used when texts are transferred or vocalized. If the next 96 characters are to be transmitted to Braille cells or listened to, the “forward” button on the device is used to carry out the operation. If the previous 96 characters are to be transmitted to Braille cells or listened to, the “backward” button on the device is used to carry out this operation. Thanks to “Home”–“End”–“Down” and “Up” buttons, which fulfill the same functions as Home–End–PageDown–PageUp buttons on the keyboard, the cursor is positioned to the beginning and end of the text and the text is scrolled up and down.

If data from a different interface is to be received, the data can be uploaded from the “Upload” section and the operations mentioned above can be carried out. If the text obtained is to be saved to examine again later, it can be saved using the “Upload” button. When the text is saved, the file is named as follows: Year_Month_Day_Hour_Minute_Second.txt.

@&#CONCLUSION@&#

Thanks to Braille display developed in this study, visually-impaired individuals can read the texts on computers by touching with their hands and they can also listen to them. The software has been developed by considering the differences between the Braille alphabets used by visually-impaired people. When there are characters like numbers, capital letters, and mathematical symbols in the system, they represented with 2 Braille cells. Thanks to the software developed, such data are taken into consideration and data are accurately transmitted to visually-impaired people. Bluetooth was chosen as the default connection type. USB was preferred when there isn’t Bluetooth connection.

If Braille display supports bookreader, it can be connected to the Braille displays developed by different corporations. After the document is scanned with book reader device, it is transferred to the computer. The text is obtained after necessary OCR processes are performed and it is transferred to Braille cells. However, as these are separate devices, the cost is very high. On the market, the cost of Braille display and bookreader machines ranges between 3000€ and 10000€. The cost shows a great variance because the cost increases as the number of Braille cells increases. As 2 devices are in one in the system developed in this study, the cost decreased even more. Although there are 96 Braille cells in the device developed, it costs around 4000€. The device has been produced with a cost 35% cheaper than the total cost of a Braille display with 80 cells and a bookreader.

Thanks to the software developed, as shown in Table 3
                      data transmission speeds of Bluetooth and USB connection are tested and it is determined that data is transmitted faster when connected with USB.

The performance of Braille cells, which emerge as a result of trails, is shown in Fig. 12
                     . It was determined that for a 10-page text, one Braille cell works almost for 450 times and it has been determined that Braille cells work with 100% efficiency no matter how many characters there are in total.

The functionality of the system has been tested with 10 individuals who know Braille alphabet and it has proven to be faultless. Later on, the device has been tested on 20 individuals from different age groups who do not know the Braille alphabet and on 30 people who know Braille alphabet and the usability rate of the device is given in Table 4
                     . Usability and satisfaction tests were done on the availability of the device with blind people who were the participants in this project. The usability rate was calculated from these tests results.

As it can be seen from the usability rates in Table 4, while the device usability rate of the individuals who do not know the Braille alphabet is 81.8%, this rate increases up to 97.16% in individuals who know the Braille alphabet.

@&#ACKNOWLEDGEMENTS@&#

This study is supported by TÜBİTAK with Project number 113E778 and by Selcuk University Scientific Research Projects (BAP) Coordinatorship with Project number 14401107.

@&#REFERENCES@&#

