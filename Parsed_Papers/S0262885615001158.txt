@&#MAIN-TITLE@&#Robust face hallucination using ensemble of feature-based regression functions and classifiers

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Propose an example-based face hallucination framework.


                        
                        
                           
                           Proposed ensemble learning for face hallucination.


                        
                        
                           
                           Reconstruct both global and local facial features.


                        
                        
                           
                           Individual ambiguity of system low-resolution inputs is considered in this framework.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Principal component analysis (PCA)

Canonical correlation analysis (CCA)

Eigenfaces

Facial hallucination

@&#ABSTRACT@&#


               
               
                  An example-based face hallucination system is proposed, in which given a low-resolution facial image, a corresponding high-resolution image is automatically obtained. In practice, such a problem is extremely challenging since it is often the case that two discriminative high-resolution images may have similar low-resolution inputs. To address this issue, this study proposes an ensemble of image feature representations, including various local patch- or block-based representations, a one-dimensional vector image representation, a two-dimensional matrix image representation, and a global matrix image representation. Notably, some of these representations are designed to preserve the global facial geometry of the low-resolution input, while others are designed to preserve the local detailed texture. For each feature representation, a regression function is constructed to synthesize a high-resolution image from the low-resolution input image. The synthesis process is conducted in a layer-by-layer fashion, with the output from one layer serving as the input to the following layer. Importantly, each regression function is associated with a classifier in order to determine which regression functions are required in the synthesis procedure in accordance with the particular characteristics of the input image. Furthermore, these classifiers can also help to deal with the individual ambiguity of system low-resolution inputs. The experimental results show that the proposed framework is capable of synthesizing high-resolution images from low-resolution input images with a wide variety of facial poses, geometry misalignments and facial expressions even when such images are not included within the original training dataset.
               
            

@&#INTRODUCTION@&#

The images captured by a camera in the real-world are often affected by such factors as unfavorable occlusion, poor lighting conditions, low resolution, and so on. Consequently, the images are unsuitable for such applications as facial recognition, human–computer interaction, or image retrieval. Accordingly, the problem of super-resolution has emerged as a major research topic in the computer vision field. Among the various applications reliant on super-resolution technology, that of face hallucination, in which a low-resolution facial image is converted into an equivalent high-resolution image, is of particular interest since it serves as an important preprocessing step for many face-related applications, including face recognition [4,38] and facial animation [15,18,35].

Broadly speaking, super-resolution methods can be classified as either single-image-based super-resolution schemes or example-based schemes. Methods of the former type require just one low-resolution input image, and include such methods as the interpolation-based method [1], the high-frequency enhancement-based method [6,22], and the edge enhancement method [26,34]. By contrast, example-based methods require multiple training examples in order to construct the knowledge required to synthesize a high-resolution image for an unseen input. Typical methods of example-based approach include those proposed in [8,10,13]. Facial images have a specific structure, and consequently most existing face hallucination methods adopt an example-based approach. More specifically, through the assistance of multiple training examples, the synthesis system learns the global and local facial geometry and local detailed texture which characterize the human face and then uses this information to predict (synthesize) the high-resolution facial image for any unknown low-resolution image.

The proposed framework is the example-based facial hallucination method, where the aim is to synthesize a high-resolution image which resembles the original low-resolution image to the greatest extent possible. In practice, such a process is extremely challenging since it is often the case that two discriminative high-resolution images may have similar low-resolution inputs. To address this issue, our framework composes an ensemble of image feature representations to include both the global facial geometry and the local geometry/detailed texture information. Notably, that the global facial geometry describes the relative positions and sizes of the individual facial features and facial contours, while the local geometry/detailed texture information describes the skin texture or specific characteristics of the facial features, such as large eyes, double-fold eyelids, and so on. The proposed synthesis process is conducted in a layer-by-layer fashion, with the output from one layer serving as the input to the following layer. Here, each layer composes several regression functions, and each regression function is constructed based on a specified feature representation. Importantly, in order to deal with the individual ambiguity of system synthesized results, each regression function is associated with a classifier that determines if such regression function is required in the synthesis procedure in accordance with the particular characteristics of the input image.

@&#RELATED WORKS@&#

Our approach is related to several example-based methods proposed recently in computer vision. For instance, statistical techniques [31] and [30] use a number of training data to learn the relationship between facial image and sketch pairs, and then apply the Bayesian inference or the regression process to synthesize new sketches. Such approaches have also been applied to human faces in face hallucination [32]. We briefly review related work in example-based face hallucination before introducing our approach.

The correlation between the low-resolution image and the high-resolution image is typically highly complex. Consequently, the mapping function from the low-resolution image to the high-resolution image tends to have a one-to-many characteristic; that is, visually similar low-resolution input images can often be mapped to many different discriminative high-resolution outputs. Accordingly, multiple-step, multiple-layer, or iterative synthesis approaches are typically required to solve the super-resolution problem. The face hallucination method proposed in [17] applies a parametric-based PCA approach to construct the global facial geometry first, and then uses a non-parametric MRF method to complement the local detailed texture. Similarly, the method presented in [36] uses cubic B-spline interpolation to construct the facial geometry first, and then applies a simplified MRF model to obtain the correlation between the AC coefficients of the high-resolution and low-resolution images in the discrete cosine transform (DCT) domain. In all of the aforementioned studies, the aim is to synthesize images containing the global facial geometry first, and then to add the facial high-frequency detailed textures in order to obtain a more realistic synthesis outcome. However, the methods presented in [24,29] apply an eigen-transformation method and an error back-projection method, respectively, to iteratively complement the difference between the high-resolution and low-resolution images directly.

In addition to adopting multiple-layer synthesis frameworks in order to preserve both the global features of the input image and the local texture details, existing face hallucination methods also adopt different facial area positions or sizes to maintain the global or local facial geometry details or the local texture properties. For example, works [20] and [14] provided patch-based face hallucination methods; the method proposed in [24] processes both the entire facial region and the particular facial regions corresponding to the local facial features, respectively, and then combines the two synthesized images to obtain the final result. Similarly, the method presented in [33] processes the facial image using three specific areas, namely the facial feature (component) area, the edge area, and the smooth area. Furthermore, various facial features have been also considered for synthesis purposes, including the patch gray value [11,16,21] and the residual gray value (i.e., the gray value difference between the low-resolution image and the high-resolution image) [19,23,37]. Moreover, the methods proposed in [23,36] adopt the DCT coefficient for image representation purposes, while that in [33] uses the image gradient feature.

The face hallucination framework proposed in this study adopts an iterative (layer-by-layer) approach to incrementally reduce the complex correlation between the low-resolution image and the high-resolution image. The proposed framework has three main advantages over existing methods, including (i) the objective of proposed synthesis framework is to minimize the difference between the synthesized results and the ground-truth high-resolution images, and simultaneously decrease individual ambiguity of these synthesized system synthesized results. Accordingly, the resolutions of synthesized results are close to those of ground-truth images, and these results are easy to be recognized as their corresponding input subjects. (ii) The framework operates on ensembles of various image (or patch) representations, patch positions, and patch sizes. Accordingly, the robustness of the synthesis process in capturing the unique facial geometry, personal characteristics, and local detailed textures of the input image is significantly improved. (iii) For each feature representation, a corresponding regression function is reconstructed for transferring the low-resolution image into the high-resolution image. Especially, the proposed method uses an ensemble of classifiers to select suitable regression functions for synthesis purposes based on the particular characteristics of the system input. Thus, the proposed framework is capable of synthesizing high-resolution images from low-resolution input images with a wide variety of facial poses, geometry misalignments, and facial expressions even when such images do not appear within the original training dataset.

In the present study, the synthesis framework is trained by several pairwise interpolated low-resolution image and high-resolution image, and the quality of the synthesis results is enhanced through the use of an ensemble of image features. Fig. 1
                      shows the various feature representations for each pairwise image sample.
                        
                           1)
                           
                              Image representation types (Fig. 1(a)): two different image types are considered, namely the gray value-to-gray value type (Fig.1(a-1)) and the gray value-to-residual value type (Fig.1(a-2)). The gray value-to-gray value type is used to learn the gray value correlation of the pairwise sample, and this correlation is then used to synthesize the gray values of the high-resolution image for an unknown low-resolution input. Meanwhile, for the gray value-to-residual value type, the correlation between the gray values of the low-resolution image and the residual image (i.e., the difference between the high-resolution and low-resolution images) is learned, and this correlation is then applied to estimate the residual image for the unknown low-resolution input. Combining the estimated residual image with the low-resolution image, we have the synthesized high-resolution image.


                              Image patch representations with various sizes and arrangements (Fig. 1(b)–Fig. 1(c)): the gray value and residual value feature representations constitute the backbone of the proposed synthesis framework. However, as described in the following, several image block arrangements are also used for synthesis proposes. In order to retain both the global properties and the local facial properties of the input image, the framework proposed in the present study uses the following ensemble of image patch sizes and arrangements for feature representation purposes.


                              Equally-divided image patches of various sizes: the interpolated low-resolution/high-resolution image is divided into a regular grid of image patches. The proposed framework considers three different patch sizes, namely 20×20, 10×10, and 5×5pixels. Furthermore, each patch is represented as either a one-dimensional vector or a two-dimensional matrix utilizing either the gray value-to-gray value type or gray value-to-residual value type image representation. Consequently, each pairwise image sample yields 2×3×2=12 features, where the numbers 2, 3 and 2 respectively denote the one-dimensional vector or two-dimensional matrix, three patch sizes, and gray value-to-gray value or gray value-to-residual value image type, respectively.


                              Vertical/horizontal image partitions (Fig. 1(b.1) and Fig. 1(b.2)): the present framework proposed an arrangement which preserves both the local facial region details and the global facial structure. In this case, the image is divided as K row-based blocks or K row-based blocks, where the rows of the kth row or columns of the kth column-based block are sampled from the kth, (k
                              +
                              K)th, (k
                              +2
                              K)th,… rows/columns of the original image. For example, in the case that K
                              =4, it stands there are 4 row-based blocks and the first block is formed by where 1th, 5th, 11th, … rows. Notably, the column or row vectors of the column/row-based block representations are collected from different image column/row positions with an interval K, and thus the facial geometry is preserved within each block. In partitioning the original image into row or column blocks, parameter K is set as either 4, 8, 16 or 32. Furthermore, each pairwise image sample is represented using either the gray value-to-gray value image type or the gray value-to-residual value image type. Consequently, 2×4×2=16 features are obtained.


                              Glocal image patch representation (Fig. 1(c)): the glocal (global–local) image representation described in [5] is also used in the proposed framework for preserving both the global facial geometry and the local facial geometry. Each image is divided into a regular grid of image patches, and each patch is arranged as a one-dimensional column vector. The columns of glocal image matrix are then constructed by the overall vectors of these patches. Three different patch sizes are considered, namely 20×20, 10×10, and 5×5pixels. Again, each pairwise image sample is based on either the gray value-to- gray value image type or the gray value-to residual value type. Consequently, a total of 3×2=6 features are available.

In summary, a total of 2+12+16+6=36 features are available in the proposed ensemble, where the initial “2” represents the entire image and is represented as one two-dimensional matrix by using either the gray value-to-gray value image type or the gray value-to-residual value image, and the following numbers represent the number of features provided in (i)–(iii). In the proposed framework, each image representation is denoted as ϕ(•), and is used to derive various pairwise correlations and regression functions between the low-resolution and high-resolution images. As described in the following section, in performing the training and synthesis processes, the features are selected adaptively in accordance with the particular characteristics of the training samples and the input image in order to enhance the quality of the synthesis results.

As shown in Fig. 2
                        , the proposed framework consists of a training process and a synthesis process. In the training process, a set of pairwise examples is used to train T synthesis layers, where each layer comprises F regression functions. Notably, each regression function is based on a specific feature representation and serves to transform the low-resolution image into a high-resolution image in accordance with the image properties associated with that particular feature representation, e.g., the facial geometry or the high-frequency detailed texture. Furthermore, each regression function has an associated weight α and classifier, where the weight is used to quantify the relative importance of the regression function with regard to the final synthesis outcome, while the classifier is used to determine whether or not the regression function is required for the current input image. In the synthesis procedure, the low-resolution image is first interpolated, and is then taken as the input to the multiple-layer synthesis framework. Significantly, only those regression functions whose classifiers identify the layer input as a positive example are used for synthesis purposes in that layer. The synthesized results of each regression function selected at each layer are then linearly combined in accordance with the regression weight set {α}. Finally, the output of the (t-1)th layer is taken as the input to the tth layer. The procedure proceeds layer-by-layer in this way until the specified number of synthesis layers has been processed.

The training process consists of three main steps, namely 1) training dataset collection; 2) kernel-based regression function learning; and 3) multiple-layer synthesis framework learning. The details of each step are described in the following.
                           
                              1)
                              Training dataset

Assume that the training dataset consists of N high-resolution images from N different individuals, where each image is pre-processed using geometry and illumination normalization techniques. Let the ith normalized high-resolution image be denoted as Hi
                                 . Assume that a Gaussian smoothing process is applied to each Hi
                                  and the resulting image is then down-sampled by a factor of 4. Finally, assume that cubic B-spline interpolation is applied in order to obtain an interpolated low-resolution result, Li
                                 , with the same size as Hi
                                 .

The training dataset consists of two sets of pairwise examples, namely a positive set and a negative set. Let the positive dataset be denoted as {L
                                 
                                    i
                                 ,
                                 H
                                 
                                    i
                                 ,
                                 y
                                 
                                    i
                                 
                                 =+1}
                                    i
                                    =1
                                 
                                    N
                                  and the negative dataset be denoted as {L
                                 
                                    i
                                 ,
                                 H
                                 
                                    i
                                 ,
                                 y
                                 
                                    i
                                 
                                 =−1}
                                    i
                                    =1
                                 
                                    N
                                 , where yi
                                  is the labeled variable, and each set contains N pairwise examples. For the positive set (y
                                 =1), the interpolated low-resolution image corresponding to each high-resolution image is taken from the same individual. By contrast, for the negative set, the interpolated low-resolution image associated with each high-resolution image is randomly selected from another individual. Fig. 3
                                  shows typical pairwise examples in the positive and negative sets.

Kernel-based regression function learning

In the proposed framework, the low-resolution image is transformed into a high-resolution image using the direct combined model (DCM) described in [27]. The DCM method is a parametric-based approach similar to the joint-learning method in [8], and is deliberately selected for use in the proposed framework for following main reasons. In DCM, the pairwise examples are directly coupled (concatenated) to construct a combined subspace, thereby better preserving the correlation between the high-resolution and low-resolution images. Also, the derived DCM subspace has the ability to extract the significant facial structures. Consequently, the geometry structure of the synthesized results more closely resembles that of the low-resolution input.

In the learning process, only the positive training set is required, namely {(L
                                 
                                    i
                                 ,
                                 H
                                 
                                    i
                                 ),
                                 w
                                 
                                    i
                                 
                                 
                                    DCM
                                 }
                                    i
                                    =1
                                 
                                    N
                                 , where w
                                 
                                    i
                                 
                                 
                                    DCM
                                  is the importance (i.e., weight) of the ith example for the training process of DCM. Each image is represented by one of the feature representation functions ϕ(•) described in Section 2. Notably, for the feature representations based on image patches or blocks, DCM is separately applied to each image patch/block of the low-resolution image in order to estimate the corresponding high-resolution image patch/block. The synthesized image patches/blocks are then combined to form the final result, H. Assume that the image, image patch or image block feature representations of L and H are denoted as ϕ(L) and ϕ(H), respectively. The combination formulation of DCM is defined as
                                    
                                       (1)
                                       
                                          
                                             A
                                             i
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      ϕ
                                                      
                                                         
                                                            L
                                                            i
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      ϕ
                                                      
                                                         
                                                            H
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where an assumption is made that ϕ(L
                                 
                                    i
                                 )∈
                                 ℜ
                                 
                                    m
                                    ×
                                    n
                                  and ϕ(H
                                 
                                    i
                                 )∈
                                 ℜ
                                 
                                    m
                                    ×
                                    n
                                  (parameters m and n depend on the size of the image representation) and thus A
                                 
                                    i
                                 
                                 ∈
                                 ℜ
                                 2m
                                    ×
                                    n
                                 .

The aim of the DCM training process is to find the combined significant principal components which maximize the projection distribution of the A-covariance matrix. Here, the weighted covariance matrices, Cov, are defined as follows
                                    
                                       (2)
                                       
                                          C
                                          o
                                          v
                                          =
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                
                                                   w
                                                   i
                                                   
                                                      D
                                                      C
                                                      M
                                                   
                                                
                                                
                                                   
                                                      
                                                         A
                                                         i
                                                      
                                                      −
                                                      
                                                         A
                                                         ¯
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      A
                                                      i
                                                   
                                                   −
                                                   
                                                      A
                                                      ¯
                                                   
                                                
                                             
                                             T
                                          
                                       
                                    
                                 where Ā is the mean matrix of all the training combined matrices. Furthermore, w
                                 
                                    i
                                 
                                 
                                    DCM
                                  is the weight of the ith pairwise example, Ai
                                 , and is used to construct the weighted covariance matrices. For example, if w
                                 
                                    i
                                 
                                 
                                    DCM
                                 
                                 =1/N, each image is assigned an equal importance in constructing the combined subspaces. Applying the singular value decomposition (SVD) process, the significant principal components, i.e., subspaces U
                                 =[U
                                 
                                    L
                                 
                                 
                                    T
                                 
                                 U
                                 
                                    H
                                 
                                 
                                    T
                                 ]
                                    T
                                 , of Cov are derived as
                                    
                                       (3)
                                       
                                          CovU
                                          =
                                          Λ
                                          U
                                       
                                    
                                 where Λ is K
                                 
                                    PCA
                                 
                                 ×
                                 K
                                 
                                    PCA
                                  diagonal matrix corresponding to the eigenvalues of Cov; U contains K eigenvectors corresponding to the KPCA
                                  largest sorted eigenvalues in Λ.

From the PCA properties, it follows that
                                    
                                       (4)
                                       
                                          
                                             
                                                
                                                   
                                                      ϕ
                                                      
                                                         L
                                                      
                                                   
                                                
                                                
                                                   
                                                      ϕ
                                                      
                                                         H
                                                      
                                                   
                                                
                                             
                                          
                                          =
                                          U
                                          x
                                          +
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            A
                                                            ¯
                                                         
                                                         L
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            A
                                                            ¯
                                                         
                                                         H
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                          x
                                          =
                                          
                                             U
                                             T
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            ϕ
                                                            
                                                               L
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ϕ
                                                            
                                                               H
                                                            
                                                         
                                                      
                                                   
                                                
                                                −
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  A
                                                                  ¯
                                                               
                                                               L
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  A
                                                                  ¯
                                                               
                                                               H
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where Ā
                                 
                                    L
                                  and Ā
                                 
                                    H
                                  are the low-resolution part and high-resolution part of the mean matrices Ā, respectively; and the weight matrix, x
                                 ∈
                                 ℜ
                                 
                                    K
                                    ×
                                    n
                                 , controls the synthesized results of both ϕ(L) and ϕ(H). x can be obtained by solving the following optimization problem:
                                    
                                       (5)
                                       
                                          
                                             x
                                             *
                                          
                                          =
                                          
                                             
                                                arg
                                                min
                                             
                                             x
                                          
                                          
                                             
                                                
                                                   λ
                                                   U
                                                
                                                
                                                   t
                                                   r
                                                
                                                
                                                   
                                                      
                                                         x
                                                         T
                                                      
                                                      
                                                         Λ
                                                         
                                                            −
                                                            1
                                                         
                                                      
                                                      x
                                                   
                                                
                                                +
                                                
                                                   
                                                      
                                                         
                                                            U
                                                            L
                                                         
                                                         x
                                                         +
                                                         
                                                            
                                                               A
                                                               ¯
                                                            
                                                            L
                                                         
                                                         −
                                                         ϕ
                                                         
                                                            L
                                                         
                                                      
                                                   
                                                   2
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 where λ
                                 u is user-defined parameter. In the present study, λ
                                 u is assigned a constant value of 0.1. In Eq. (5), x
                                 
                                    T
                                 
                                 Λ
                                 −1
                                 x is used to constraint x to be similar to the variance of the training examples, i.e., the eigenvalue; and the second term is used to minimize the difference between ϕ(L) and the synthesized low-resolution image of the weight matrix x. Since the objective function has a quadratic form, the following closed-form solution can be obtained:
                                    
                                       (6)
                                       
                                          
                                             x
                                             *
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      U
                                                      L
                                                      T
                                                   
                                                   
                                                      U
                                                      L
                                                   
                                                   +
                                                   
                                                      λ
                                                      U
                                                   
                                                   
                                                      Λ
                                                      U
                                                      
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                −
                                                1
                                             
                                          
                                          
                                             U
                                             L
                                             T
                                          
                                          
                                             
                                                ϕ
                                                
                                                   L
                                                
                                                −
                                                
                                                   
                                                      A
                                                      ¯
                                                   
                                                   L
                                                
                                             
                                          
                                       
                                    
                                 
                              

Accordingly, the optimal synthesized high-resolution result is obtained as ϕ(H
                                 
                                    U
                                 )=
                                 Ā
                                 
                                    H
                                 
                                 +
                                 U
                                 
                                    H
                                 
                                 x*. The transformation (or regression matrix) of input L via the training DCM weight set is denoted as Reg(ϕ(L);
                                 W
                                 
                                    DCM
                                 ), where W
                                 
                                    DCM
                                 
                                 ={w
                                 
                                    i
                                 
                                 
                                    DCM
                                 }
                                    i
                                    =1
                                 
                                    N
                                 .

Multiple-layer synthesis framework learning

The proposed framework comprises T layers, where each layer contains F weak DCM regression functions and classifiers based on the feature set {ϕ(·)} defined in Section 2. Table 1
                                  presents the pseudo code for the learning process in the proposed framework, in which the objective is to determine the regression functions and classifiers which minimize both the synthesis error and the individual ambiguity in the low-resolution image space. The training algorithm is similar to the AdaBoost method and contains five major steps, as described in the following:
                                    
                                       (i)
                                       Training procedure initialization

Let the pairwise training set be denoted as {L
                                          
                                             i
                                          ,
                                          H
                                          
                                             i
                                          ,
                                          y
                                          
                                             i
                                          ,
                                          w
                                          
                                             i,c
                                          
                                          
                                             DCM
                                          ,
                                          w
                                          
                                             i
                                          }
                                             i
                                             =1,c
                                             =1
                                          2N,5, where L
                                          
                                             i
                                          , H
                                          
                                             i
                                          , y
                                          
                                             i
                                          , w
                                          
                                             i,c
                                          
                                          
                                             DCM
                                           and w
                                          
                                             i
                                          , are the interpolated low-resolution image, the high-resolution image, the example label, the cth type of DCM weight for learning the regression function, and the (importance) weight for the ensemble learning framework, respectively. In the present study, the number of positive and negative examples is equal. Note that, the framework contains two different types of weight, namely the example weight and the DCM weight. The set of example weights is denoted as W
                                          ={w
                                          
                                             i
                                          }
                                             i
                                             =1
                                          2N
                                          , where each element, w
                                          
                                             i
                                          , indicates the relative importance of the example, and is set initially to 1/2N. Meanwhile, the set of DCM weights is denoted as W
                                          
                                             DCM
                                          
                                          ={w
                                          
                                             i,c
                                          
                                          
                                             DCM
                                          }
                                             i
                                             =1,c
                                             =1
                                          2N,5, where each example is assigned five different updating types of DCM weight, but only the optimal type of weight is selected for the regression function learning process. The initial value of the DCM weight is set as
                                             
                                                (7)
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  w
                                                                  
                                                                     i
                                                                     ,
                                                                     c
                                                                  
                                                                  
                                                                     D
                                                                     C
                                                                     M
                                                                  
                                                               
                                                               =
                                                               
                                                                  1
                                                                  N
                                                               
                                                               ,
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                               =
                                                               +
                                                               1
                                                               ,
                                                               
                                                               c
                                                               =
                                                               1
                                                               …
                                                               5
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  w
                                                                  
                                                                     i
                                                                     ,
                                                                     c
                                                                  
                                                                  
                                                                     D
                                                                     C
                                                                     M
                                                                  
                                                               
                                                               =
                                                               0
                                                               ,
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                               =
                                                               −
                                                               1
                                                               ,
                                                               
                                                               c
                                                               =
                                                               1
                                                               …
                                                               5
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          where only the positive examples are used for the learning regression process.

Feature selection process

For the fth regression (f
                                          =1,…,
                                          F) of the tth layer (t
                                          =1,…,
                                          T), the aim of the learning process is to select the optimal feature m* from the feature pool containing M (M
                                          =36) features and the optimal DCM weight type c* which collectively minimize the difference between the synthesized result and the ground truth of the weighted training examples, i.e.,
                                             
                                                (8)
                                                
                                                   m
                                                   *
                                                   ,
                                                   c
                                                   *
                                                   =
                                                   
                                                      
                                                         arg
                                                         min
                                                      
                                                      
                                                         m
                                                         ,
                                                         c
                                                      
                                                   
                                                   
                                                      1
                                                      
                                                         2
                                                         N
                                                      
                                                   
                                                   
                                                      
                                                         ∑
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            2
                                                            N
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               1
                                                               +
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                         
                                                            w
                                                            i
                                                         
                                                         
                                                            
                                                               
                                                                  H
                                                                  i
                                                               
                                                               −
                                                               
                                                                  ϕ
                                                                  m
                                                                  
                                                                     −
                                                                     1
                                                                  
                                                               
                                                               
                                                                  
                                                                     R
                                                                     e
                                                                     g
                                                                     
                                                                        
                                                                           
                                                                              ϕ
                                                                              m
                                                                           
                                                                           
                                                                              
                                                                                 L
                                                                                 i
                                                                              
                                                                           
                                                                           ;
                                                                           
                                                                              W
                                                                              c
                                                                              
                                                                                 D
                                                                                 C
                                                                                 M
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          where ϕ
                                          
                                             m
                                          (L
                                          
                                             i
                                          ) is the low-resolution image represented using the mth feature; and Reg(·) is trained using the training set via the cth DCM weight type, W
                                          
                                             c
                                          
                                          
                                             DCM
                                          
                                          ={w
                                          
                                             i,c
                                          
                                          
                                             DCM
                                          }
                                             i
                                             =1
                                          2N
                                          . Note that ϕ
                                          
                                             m
                                          
                                          −1(·) is the inverse function of ϕ
                                          
                                             m
                                          (·) and is used to restore the estimated result to the original image coordinates.

Weak classifier construction

For both the positive pairwise examples and the negative pairwise examples, the feature value of the ith pairwise example can be calculated from the synthesis error as follows:
                                             
                                                (9)
                                                
                                                   V
                                                   a
                                                   
                                                      l
                                                      i
                                                   
                                                   =
                                                   
                                                      
                                                         
                                                            
                                                               H
                                                               i
                                                            
                                                            −
                                                            
                                                               ϕ
                                                               
                                                                  m
                                                                  *
                                                               
                                                               
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                               
                                                                  R
                                                                  e
                                                                  g
                                                                  
                                                                     
                                                                        
                                                                           ϕ
                                                                           
                                                                              m
                                                                              *
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              L
                                                                              i
                                                                           
                                                                        
                                                                        ;
                                                                        
                                                                           W
                                                                           
                                                                              c
                                                                              *
                                                                           
                                                                           
                                                                              D
                                                                              C
                                                                              M
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               H
                                                               i
                                                            
                                                            −
                                                            
                                                               L
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          where Reg(ϕ
                                          
                                             m
                                             ⁎(·);
                                          W
                                          
                                             c
                                             ⁎
                                          
                                             DCM
                                          ) is the regression function of the optimal feature m* trained via the optimal DCM weight type c*. For the positive pairwise examples, the pairwise interpolated low-resolution image and high-resolution image are from the same individual, and thus the synthesized low-resolution result, i.e., ϕ
                                          
                                             m
                                             ⁎
                                          −1(Reg(ϕ
                                          
                                             m
                                             ⁎(·);
                                          W
                                          
                                             c
                                             ⁎
                                          
                                             DCM
                                          )), should be similar to the corresponding high-resolution image Hi
                                          . Consequently, the Val-values of the positive pairwise examples should be relatively small. By contrast, for the negative examples, Li
                                           and Hi
                                           are from different individuals, and hence the synthesized results of Li
                                           should be dissimilar to the corresponding Hi
                                          . As a result, the Val-values of the negative pairwise examples should be relatively large. Subsequently, the classifier h
                                          
                                             m
                                             ⁎(L;
                                          θ) and corresponding threshold θ, i.e., the threshold and classifier which minimize the Val classification error of the weighted pairwise examples under the optimal feature m*, can be determined in accordance with
                                             
                                                (10)
                                                
                                                   
                                                      E
                                                      
                                                         θ
                                                         *
                                                         |
                                                         m
                                                         *
                                                      
                                                   
                                                   =
                                                   
                                                      min
                                                      θ
                                                   
                                                   
                                                      
                                                         ∑
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            2
                                                            N
                                                         
                                                      
                                                      
                                                         
                                                            w
                                                            i
                                                         
                                                         
                                                            
                                                               
                                                                  h
                                                                  
                                                                     m
                                                                     *
                                                                  
                                                               
                                                               
                                                                  
                                                                     L
                                                                     i
                                                                  
                                                                  θ
                                                               
                                                               ≠
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          where h
                                          
                                             m
                                             ⁎(L
                                          
                                             i
                                          ;
                                          θ) is a classifier which classifies the synthesized result of Li
                                           as a positive or negative example in accordance with its Val-value and classifier threshold θ.

Subsequently, the relative weight (importance) of the regression function that is based on the m*th feature, can be evaluated as
                                             
                                                (11)
                                                
                                                   
                                                      α
                                                      
                                                         m
                                                         *
                                                      
                                                   
                                                   =
                                                   log
                                                   
                                                      
                                                         1
                                                         −
                                                         
                                                            E
                                                            
                                                               θ
                                                               *
                                                               |
                                                               m
                                                               *
                                                            
                                                         
                                                      
                                                      
                                                         E
                                                         
                                                            θ
                                                            *
                                                            |
                                                            m
                                                            *
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

Eq. (11) shows that if the error, E
                                          
                                             θ
                                             ⁎|m
                                             ⁎, is small, i.e., an accurate synthesis result is obtained, the weight, α
                                          
                                             m
                                             ⁎, has a larger value. If the error of the fth feature selection (defined in (10)) is larger than that of the previous selected (i.e., f-1th) feature, no suitable feature exists for learning regression in the current (i.e., tth) layer. Accordingly, the training process for the current tth layer is terminated, and then go to the next layer.

Example weight updating process

During the learning process, any examples which are misclassified or have a poor synthesis result should be assigned a greater weight in the next feature selection round. Accordingly, the weight of the ith pairwise example is updated as
                                             
                                                (12)
                                                
                                                   
                                                      w
                                                      i
                                                   
                                                   ←
                                                   
                                                      w
                                                      i
                                                   
                                                   
                                                      e
                                                      
                                                         −
                                                         1
                                                         *
                                                         
                                                            h
                                                            
                                                               m
                                                               *
                                                            
                                                         
                                                         
                                                            
                                                               L
                                                               i
                                                            
                                                            θ
                                                         
                                                         *
                                                         
                                                            y
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

The DCM weights of the ith example, w
                                          
                                             i,c
                                          
                                          
                                             DCM
                                          , are also updated in accordance with the corresponding w
                                          
                                             i
                                           value and classification result. The five weights are updated as
                                             
                                                (13)
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    c
                                                                                    1
                                                                                 
                                                                                 :
                                                                                 
                                                                                    w
                                                                                    
                                                                                       i
                                                                                       ,
                                                                                       
                                                                                          c
                                                                                          1
                                                                                       
                                                                                    
                                                                                    
                                                                                       D
                                                                                       C
                                                                                       M
                                                                                    
                                                                                 
                                                                                 =
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             1
                                                                                             +
                                                                                             
                                                                                                y
                                                                                                i
                                                                                             
                                                                                          
                                                                                       
                                                                                       
                                                                                          
                                                                                             1
                                                                                             +
                                                                                             
                                                                                                h
                                                                                                
                                                                                                   m
                                                                                                   *
                                                                                                
                                                                                             
                                                                                             
                                                                                                
                                                                                                   L
                                                                                                   i
                                                                                                
                                                                                                θ
                                                                                             
                                                                                          
                                                                                       
                                                                                       
                                                                                          w
                                                                                          i
                                                                                          2
                                                                                       
                                                                                    
                                                                                    
                                                                                       ∑
                                                                                       
                                                                                          
                                                                                             
                                                                                                1
                                                                                                +
                                                                                                
                                                                                                   y
                                                                                                   i
                                                                                                
                                                                                             
                                                                                          
                                                                                          
                                                                                             
                                                                                                1
                                                                                                +
                                                                                                
                                                                                                   h
                                                                                                   
                                                                                                      m
                                                                                                      *
                                                                                                   
                                                                                                
                                                                                                
                                                                                                   
                                                                                                      L
                                                                                                      i
                                                                                                   
                                                                                                   θ
                                                                                                
                                                                                             
                                                                                          
                                                                                          
                                                                                             w
                                                                                             i
                                                                                             2
                                                                                          
                                                                                       
                                                                                    
                                                                                 
                                                                                 
                                                                              
                                                                           
                                                                           
                                                                              
                                                                                 
                                                                                    c
                                                                                    2
                                                                                 
                                                                                 :
                                                                                 
                                                                                    w
                                                                                    
                                                                                       i
                                                                                       ,
                                                                                       
                                                                                          c
                                                                                          2
                                                                                       
                                                                                    
                                                                                    
                                                                                       D
                                                                                       C
                                                                                       M
                                                                                    
                                                                                 
                                                                                 =
                                                                                 1
                                                                                 −
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             1
                                                                                             +
                                                                                             
                                                                                                y
                                                                                                i
                                                                                             
                                                                                          
                                                                                       
                                                                                       
                                                                                          
                                                                                             1
                                                                                             +
                                                                                             
                                                                                                h
                                                                                                
                                                                                                   m
                                                                                                   *
                                                                                                
                                                                                             
                                                                                             
                                                                                                
                                                                                                   L
                                                                                                   i
                                                                                                
                                                                                                θ
                                                                                             
                                                                                          
                                                                                       
                                                                                       
                                                                                          w
                                                                                          i
                                                                                          2
                                                                                       
                                                                                    
                                                                                    
                                                                                       ∑
                                                                                       
                                                                                          
                                                                                             
                                                                                                1
                                                                                                +
                                                                                                
                                                                                                   y
                                                                                                   i
                                                                                                
                                                                                             
                                                                                          
                                                                                          
                                                                                             
                                                                                                1
                                                                                                +
                                                                                                
                                                                                                   h
                                                                                                   
                                                                                                      m
                                                                                                      *
                                                                                                   
                                                                                                
                                                                                                
                                                                                                   
                                                                                                      L
                                                                                                      i
                                                                                                   
                                                                                                   θ
                                                                                                
                                                                                             
                                                                                          
                                                                                          
                                                                                             w
                                                                                             i
                                                                                             2
                                                                                          
                                                                                       
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           c
                                                                           3
                                                                        
                                                                        :
                                                                        
                                                                           w
                                                                           
                                                                              i
                                                                              ,
                                                                              
                                                                                 c
                                                                                 3
                                                                              
                                                                           
                                                                           
                                                                              D
                                                                              C
                                                                              M
                                                                           
                                                                        
                                                                        =
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    1
                                                                                    +
                                                                                    
                                                                                       y
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 
                                                                                    1
                                                                                    −
                                                                                    
                                                                                       h
                                                                                       
                                                                                          m
                                                                                          *
                                                                                       
                                                                                    
                                                                                    
                                                                                       
                                                                                          L
                                                                                          i
                                                                                       
                                                                                       θ
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 w
                                                                                 i
                                                                                 2
                                                                              
                                                                           
                                                                           
                                                                              ∑
                                                                              
                                                                                 
                                                                                    
                                                                                       1
                                                                                       +
                                                                                       
                                                                                          y
                                                                                          i
                                                                                       
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       1
                                                                                       −
                                                                                       
                                                                                          h
                                                                                          
                                                                                             m
                                                                                             *
                                                                                          
                                                                                       
                                                                                       
                                                                                          
                                                                                             L
                                                                                             i
                                                                                          
                                                                                          θ
                                                                                       
                                                                                    
                                                                                 
                                                                                 
                                                                                    w
                                                                                    i
                                                                                    2
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           c
                                                                           4
                                                                        
                                                                        :
                                                                        
                                                                           w
                                                                           
                                                                              i
                                                                              ,
                                                                              
                                                                                 c
                                                                                 4
                                                                              
                                                                           
                                                                           
                                                                              D
                                                                              C
                                                                              M
                                                                           
                                                                        
                                                                        =
                                                                        1
                                                                        −
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    1
                                                                                    +
                                                                                    
                                                                                       y
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 
                                                                                    1
                                                                                    −
                                                                                    
                                                                                       h
                                                                                       
                                                                                          m
                                                                                          *
                                                                                       
                                                                                    
                                                                                    
                                                                                       
                                                                                          L
                                                                                          i
                                                                                       
                                                                                       θ
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 w
                                                                                 i
                                                                                 2
                                                                              
                                                                           
                                                                           
                                                                              ∑
                                                                              
                                                                                 
                                                                                    
                                                                                       1
                                                                                       +
                                                                                       
                                                                                          y
                                                                                          i
                                                                                       
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       1
                                                                                       −
                                                                                       
                                                                                          h
                                                                                          
                                                                                             m
                                                                                             *
                                                                                          
                                                                                       
                                                                                       
                                                                                          
                                                                                             L
                                                                                             i
                                                                                          
                                                                                          θ
                                                                                       
                                                                                    
                                                                                 
                                                                                 
                                                                                    w
                                                                                    i
                                                                                    2
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  c
                                                                  5
                                                               
                                                               :
                                                               
                                                                  w
                                                                  
                                                                     i
                                                                     ,
                                                                     
                                                                        c
                                                                        5
                                                                     
                                                                  
                                                                  
                                                                     D
                                                                     C
                                                                     M
                                                                  
                                                               
                                                               =
                                                               
                                                                  
                                                                     
                                                                        
                                                                           1
                                                                           +
                                                                           
                                                                              y
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        w
                                                                        i
                                                                        2
                                                                     
                                                                  
                                                                  
                                                                     ∑
                                                                     
                                                                        
                                                                           
                                                                              1
                                                                              +
                                                                              
                                                                                 y
                                                                                 i
                                                                              
                                                                           
                                                                        
                                                                        
                                                                           w
                                                                           i
                                                                           2
                                                                        
                                                                     
                                                                  
                                                               
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          where the denominator in each case serves to normalize the value of w
                                          
                                             i
                                          
                                          
                                             DCM
                                           in the range of 0 to 1 such that the weight summation is equal to 1. (Note that the DCM weights of the negative examples defined in (13) are all equal to 0.)

As shown in Fig. 4
                                          , for the c1
                                           type weight, the DCM weights of the positive examples which are correctly classified are updated according to their weight value wi
                                          . For the c2
                                           type weight, the DCM weights of the correctly classified positive examples are updated with a value of 
                                             
                                                w
                                                
                                                   i
                                                   ,
                                                   
                                                      c
                                                      2
                                                   
                                                
                                                
                                                   D
                                                   C
                                                   M
                                                
                                             
                                          , where 
                                             
                                                w
                                                
                                                   i
                                                   ,
                                                   
                                                      c
                                                      2
                                                   
                                                
                                                
                                                   D
                                                   C
                                                   M
                                                
                                             
                                           is complementary to 
                                             
                                                w
                                                
                                                   i
                                                   ,
                                                   
                                                      c
                                                      1
                                                   
                                                
                                                
                                                   D
                                                   C
                                                   M
                                                
                                             
                                          . For the c1
                                           and c2
                                           type weights, only the correctly classified positive examples are used for training the next regression function (or the next f
                                          +1th feature selection process) since the ambiguity of the misclassified pairwise examples would inevitably degrade the performance of the regression learning process when these examples were included. The c
                                          3 and c
                                          4 type weights are updated in an analogous manner to that used for weights c1
                                           and c2
                                          . However, in this case, only the misclassified positive examples are used to train the next regression function. Finally, for the c5
                                           type weight, the DCM weights of the poorly synthesized examples are increased, and all of the positive examples are used to train the next regression process irrespective of whether or not they are correctly classified in the current round.

Low-resolution image updating process

After processing each layer, all of the positive and negative interpolated low-resolution images are updated such that their resolution approaches that of the target high-resolution set in the next layer. The updating process is performed in accordance with
                                             
                                                (14)
                                                
                                                   
                                                      L
                                                      i
                                                   
                                                   ←
                                                   
                                                      
                                                         ∑
                                                         
                                                            f
                                                            =
                                                            1
                                                         
                                                         F
                                                      
                                                      
                                                         α
                                                         
                                                            '
                                                            
                                                               m
                                                               *
                                                            
                                                            f
                                                         
                                                         
                                                            ϕ
                                                            
                                                               m
                                                               *
                                                            
                                                            
                                                               −
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         R
                                                         e
                                                         
                                                            g
                                                            f
                                                         
                                                         
                                                            
                                                               
                                                                  ϕ
                                                                  
                                                                     m
                                                                     *
                                                                  
                                                               
                                                               
                                                                  
                                                                     L
                                                                     i
                                                                  
                                                               
                                                               ;
                                                               
                                                                  W
                                                                  
                                                                     c
                                                                     *
                                                                  
                                                                  
                                                                     D
                                                                     C
                                                                     M
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          where F is the total number of features (i.e., the number of regression functions) for each layer; Reg
                                          
                                             f
                                           is the regression function for the current layer; and α
                                          '
                                          
                                             m
                                             ⁎
                                          
                                             f
                                           is the normalized coefficient of α
                                          
                                             m
                                             ⁎
                                          
                                             f
                                          , and is defined as
                                             
                                                (15)
                                                
                                                   
                                                      
                                                         α
                                                         ′
                                                      
                                                      
                                                         m
                                                         *
                                                      
                                                      f
                                                   
                                                   =
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               +
                                                               
                                                                  h
                                                                  
                                                                     m
                                                                     *
                                                                  
                                                                  f
                                                               
                                                               
                                                                  
                                                                     L
                                                                     i
                                                                  
                                                                  θ
                                                               
                                                            
                                                         
                                                         
                                                            α
                                                            
                                                               m
                                                               *
                                                            
                                                            f
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∑
                                                               
                                                                  f
                                                                  =
                                                                  1
                                                               
                                                               F
                                                            
                                                            
                                                               
                                                                  
                                                                     1
                                                                     +
                                                                     
                                                                        h
                                                                        
                                                                           m
                                                                           *
                                                                        
                                                                        f
                                                                     
                                                                     
                                                                        
                                                                           L
                                                                           i
                                                                        
                                                                        θ
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            α
                                                            
                                                               m
                                                               *
                                                            
                                                            f
                                                         
                                                      
                                                   
                                                
                                             
                                          where if the classification result is h
                                          
                                             m
                                             ⁎
                                          
                                             f
                                          (L
                                          
                                             i
                                          ;
                                          θ)=1, then α′
                                             m
                                             ⁎
                                          
                                             f
                                          
                                          >0; otherwise, α′
                                             m
                                             ⁎
                                          
                                             f
                                          
                                          =0. Note that in α′
                                             m
                                             ⁎
                                          
                                             f
                                           the latter case, the result indicates that the fth feature is not suitable for the low-resolution input Li
                                          , and hence the synthesized result of Reg
                                          
                                             f
                                           is ignored in constructing the final synthesis outcome.


                           Fig. 5(a) and (b) provides an analysis of the feature representation selection results in the different layers of the proposed training framework. It is observed that the number of weak regressions used in the first few layers of the framework is greater than that in the last few layers. For example, the first three layers contain 10 features, while the last three layers contain only 7 features. In addition, it is seen that the two-dimensional image matrix representation, M1, is chosen several times in different layers, particularly in the first few layers. This finding is reasonable since the two-dimensional feature representation preserves the global facial structure, and thus decreases the synthesis error (and classification error). By contrast, the image features represented by either a one-dimensional vector or a glocal representation with a larger patch size, which preserve the local detailed textures, are selected in the last few layers, e.g. M6 (image patch represented by one-dimensional vector) and M9 (glocal representation with patch size 10). Fig. 5(b) presents an analysis of the gray value or residual value image feature selection results. It is seen that in the last layer, most of the selected features are residual value representations. Again, this finding is reasonable since, in the last layer, the low-resolution images are close to the high-resolution images, and hence the residual value feature provides a more efficient means of enhancing the high-frequency components of the image. Fig. 5(c) provides an analysis of the DCM weight selection results. In general, it is seen that the c1
                            and c5
                            types are most commonly selected. However, it is observed that all five types are selected in the last layer. It is because, the features selected in the last layer are with varied properties (2D image matrix, glocal matrix, and 2D image patch are selected), and thus the varied DCM weight types are adopted.

The training process produces T strong regression functions distributed over T layers. More specifically, the trained framework consists of T layers, with each layer having one strong regression function formed by F weak regression functions defined with respect to F features. These weak regression functions are then applied to synthesize the high-resolution output of the system-interpolated low-resolution input in a layer-by-layer approach. For the tth layer, the weak regressions, {Reg
                        
                           t,f
                        }
                           f
                           =1
                        
                           F
                        , classifiers, {h
                        
                           t,f
                        }
                           f
                           =1
                        
                           F
                         and weights {α
                        
                           t,f
                        }
                           f
                           =1
                        
                           F
                         are used to synthesize a higher resolution output using a process similar to that described in Eqs. (14) and (15). The output is then taken as the input to the next (t
                        +
                        1)th layer. The process is repeated iteratively in this way until the Tth layer has been completed.

Our approach constructs an ensemble regression process, where each regression function is associated with a classifier. In our framework, classifiers are used for decreasing the individual ambiguous of the system synthesized results. In order to guarantee the classify error over the training set as well as the generalization error, the original AdaBoost algorithm seeks a weak classifier at each iteration that performs better than chance on a static distribution. The proposed approach, on the other hand, assumes layer-varying distributions, i.e., the resolutions of low-resolution images approach that of the target high-resolution set in the next layer. However, the positive and negative samples can be easily classified as the image resolution increases. We assume the distributions of positive and negative samples are more and more discriminative as the learning process proceeds; and thus, the past weak classifiers still perform better than chance on the new distributions, which gives error bounds on the test error of ensemble regression process. Fig. 6
                            presents some synthesized examples obtained using the proposed multiple-layer framework, where the system interpolation input is shown in Fig. 6(b). The images confirm that the system output gradually approaches the ground-truth image shown in Fig. 6(f) as the synthesis process proceeds.

@&#EXPERIMENTAL RESULTS@&#

In evaluating the synthesis performance of the proposed framework, the number of layers was set as T
                           =10, the number of selected weak classifiers (features) per layer was set as F
                           =10, and the number of feature representations was set as M
                           =36. The evaluation trials were performed using the FERET face dataset [25]. A total of 130 frontal-view images were selected randomly, where each training image was taken under normal light conditions and showed a neutral expression. Each image was aligned using an affine transformation process to generate a canonical high-resolution facial image with a size of 120×100pixels. The high-resolution image was then down-sampled using a factor of 4 in order to generate a corresponding low-resolution image with a size of 30×25pixels. The down-sampled image was then up-sampled via cubic B-spline interpolation to produce an interpolated low-resolution image with the same size as the original image (120×100pixels).

Of the 130 images selected for each dataset, 100 pairwise low-resolution and high-resolution images were used for training purposes, while the remaining images were used for testing purposes. For convenience, the training and testing datasets comprising images were denoted as Training DB1 and Testing DB1, respectively. To test the ability of the proposed framework to synthesize high-resolution images from input low-resolution facial images with a variety of poses and facial expressions, two further testing datasets (Testing DB2 and Testing DB3) were constructed containing 30 subjects from the FERET dataset with various poses and 30 subjects from the FERET dataset with various facial expressions, respectively. The low-resolution images in both testing datasets were again generated via down-sampling with a factor of 4. To explore the effect of the input image resolution on the synthesis performance, a testing dataset (denoted as Testing DB4) was compiled containing 30 frontal-view images selected from the FERET dataset, down-sampled using a factor of 8 (giving an image size of 15×10pixels) and then up-sampled to the original image size of 120×100pixels. Note that in every case, the testing subjects are unknown (unseen) to the trained framework.

The performance of the proposed framework was compared with that of the one-dimensional Canonical Correlation Analysis-based (1DCCA) method in [12], the two-dimensional CCA-based (2DCCA) method in [3], the eigen-transformation based method in [29], the two-step based face hallucination method in [17], and the 2DDCM-based method in [28] (without feature representation ensemble). These methods were specifically chosen since they are all based on a subspace learning approach (as in the proposed method). Moreover, we also compare our work with other non-subspace-based methods, such as the Gaussian Regression Process Model (GPR)-based method in [9], the Support Vector Regression (SVR)-based method in [2], and the Markov Random Field (MRF)-based method in [7]. Note that, all of these eight methods were trained by our Training DB1.

@&#EXPERIMENTAL RESULTS@&#


                           Fig. 7
                            shows the layer-by-layer variation of the Peak Signal-to-Noise Ratio (PSNR) and Structural Similarity (SSIM) values for the proposed framework. Note that the training and testing processes were performed using Training DB1 and Testing DB1, respectively. As shown, both performance metrics increase as the synthesis process proceeds. In other words, the quality of the synthesized results is progressively enhanced as the process proceeds from one layer to the next.

As described in Section 2, each layer of the proposed framework contains an ensemble of regression functions, where each function is applied in the synthesis process only if the corresponding classifier identifies the input as a positive example. Fig. 8
                            compares the synthesis results obtained using all of the regression functions (Fig. 8(a)) and using only those regression functions identified by the corresponding classifiers (Fig. 8(b)). It is evident that the synthesized results obtained using only an appropriate subset of the regressions are closer to the ground-truth images than those obtained using the full ensemble of regression functions.


                              Fig. 9
                               compares the synthesis results obtained from the various schemes for four images in the FERET database. Note that the testing and training processes were performed using Training DB1 and Testing DB1, respectively. Note also that Fig. 9(a) shows the low-resolution image in each case, Fig. 9(b) shows the corresponding cubic B-spline interpolated low-resolution input image, and Fig. 9(l) shows the corresponding ground-truth image. An inspection of the images presented in the figure yields the following observations and analysis:
                                 
                                    ■
                                    
                                       Fig. 9(c) shows the synthesis results obtained using the 1DCCA method [12]. Compared with the interpolation inputs, it is seen that the synthesized images contain more local detailed texture information. However, they also contain a significant amount of noise. In particular, the global facial geometry is destroyed in the synthesized output, and hence the facial image is dissimilar to the corresponding ground-truth image.


                                       Fig. 9(d) presents the synthesized images obtained using the 2DCCA approach [3]. Observing the images, it is clear that 2DCCA, which is based on a two-dimensional matrix representation, successfully preserves the facial geometry of the input image. However, the images contain aliasing effects; particularly in the facial contour regions, which are characterized by a larger geometry variance.


                                       Fig. 9(e) shows the synthesized images obtained using the eigen-transformation method [29]. In the current case (i.e., a factor of 4), each layer synthesizes an output image twice the size of the input image (it requires two iteration synthesis process). It is seen that even though the method is based on a one-dimensional vector feature representation, the synthesized results preserve the facial geometry structure of the original input image very well.


                                       Fig. 9(f) shows the synthesis results obtained using the two-step face hallucination method proposed in [17]. It is seen that the facial images contain visual artifacts; particularly around the mouth and other facial regions characterized by large appearance variances among the different training examples.


                                       Fig. 9(g) shows the results obtained using the 2DDCM method presented in [28], i.e., the kernel method used in the present framework, but with no ensemble structure (using the two-dimensional matrix representation). Compared with the eigen-transformation approach (Fig 9.(e)), the synthesized facial images are lacking in local detailed texture.


                                       Fig. 9(h) and (i) shows the results obtained using the non-subspace-based learning methods, i.e., the GPR-based method in [9] and the SVR-based method in [2]. In these frameworks, SVR and GPR are regression methods for transferring the local image patch of the interpolated low-resolution image into the pixel value of the high-resolution image at the same position. We adopt our training database for learning the parameters of SVR/GPR regression function. Since these frameworks are originally developed for natural images, their synthesized results are very similar to the original interpolated low-resolution input images.


                                       Fig. 9(j) shows the results obtained using the non-subspace-based MRF method [7]. MRF method models the correlation between the feature vectors (e.g. the image of interpolated low-resolution image after removed the low frequencies part) and the desired data (the high-frequency data, i.e., the difference between the high-resolution image and the interpolated low-resolution image) in a non-parametric way. Compared with the results provided by GPR and SVR methods, the results provided by MRF method are significantly different from the original interpolated inputs, but these results are blurred.


                                       Fig. 9(k) presents the synthesis results obtained using the method proposed in the present study. The synthesized images have a good visual similarity to the ground-truth images. Moreover the detailed facial features, e.g., the eyelid curves, the nostril contours, and so on, are characterized by clear and distinct edges.


                              Fig. 10(a) and (b) presents the PSNR and SSIM results of the various methods for the 30 subjects in the Testing DB1 dataset, respectively. As shown in Fig. 10(a), the PSNR values of the proposed method, 2DDCM method, eigen-transformation method, two-step face hallucination method, and 2DCCA method, respectively, remain approximately constant for all of the input subjects. However, those of the 1DCCA method vary from one subject to the next. In addition, it is seen that for all of the subjects, the proposed method achieves the highest PSNR value. As shown in Fig 10(b), the proposed method also achieves the highest SSIM value of the considered methods for each of the subjects. The 2DDCM, eigen-transformation and 2DCCA methods also achieve a relatively high SSIM value since these methods are based on a two-dimensional matrix representation or use a multiple-layer framework. However, the two-step face hallucination method and 1DCCA method, which are based on one-dimensional vector-based image representation, fail to preserve the facial geometry, and consequently result in a low SSIM value. Here, we do not include the results provided by the GPR, SVR, and MRF-based methods in this figures, sine their results are quite similar to that of cubic B-spline interpolation.


                              Fig. 11
                               shows the synthesis results obtained from the various schemes when using the Training DB1 dataset for training purposes and the Testing DB4 dataset for testing purposes. In the current case, the testing images are generated using a factor of 8, whereas the training images are generated using a factor of 4. It is seen that the synthesized results are all blurred to a greater or lesser extent. However, the eigen-transformation method, 2DDCM method and proposed method preserve the facial geometry, and consequently the synthesized outcomes are more readily identifiable as the corresponding ground-truth images.

The synthesis performance of the proposed approach was further evaluated using the images with out-of-plane rotations in the DB2 testing dataset and the images with facial expressions in the DB3 testing dataset. In both cases, the framework was trained using the full-frontal, neutral expression facial images in the DB1 training dataset. Fig. 12
                               shows the synthesis results obtained for the images with out-of-plane rotations, while Fig. 13
                               shows the results obtained for the images with facial expressions. It is observed that in both figures, the high-resolution images obtained using the proposed approach have a greater degree of accuracy (i.e., improved local texture details and global facial geometries) than those obtained using the other methods. The eigen-transformation approach, 1DCCA method, and two-step face hallucination method all represent the facial images as one-dimensional vectors. As a consequence, facial geometries with pose variance or expression variance cannot be correctly synthesized since such images are not present in the training dataset. The images synthesized using the 2DCCA, 2DDCM, GPR, SVR, and MRF methods have a reasonable global geometry, but lack local detailed texture.


                              Figs. 14 and 15
                              
                               show the synthesis results obtained from the various methods for real-world images collected from the Internet characterized by different resolutions, facial expressions, poses, lighting conditions, and degrees of misalignment. Note that the frameworks were all trained using the DB1 dataset in both cases. Moreover, the facial images were automatically detected by a face detector implemented in OpenCV and then roughly aligned to the canonical coordinates (see Figs. 14(a) and 15(a)). The low-resolution images of each face were then up-sampled (see Figs. 14(b) and 15(b)) and synthesized using each of the different methods.

@&#CONCLUSIONS@&#

This study has proposed a face hallucination framework in which the high-resolution image of an unseen input low-resolution image is synthesized using a multiple-layer structure based on an ensemble of facial regression functions. The experimental results have shown that the proposed approach has three major advantages compared to existing face hallucination schemes. First, the proposed framework preserves not only the global geometric structure of the face, but also the local detailed texture. Consequently, the synthesized high-resolution images more accurately resemble the corresponding ground-truth image. Second, the synthesized images are virtually immune to the presence of external factors such as variable misalignments, different input image resolutions, or dataset changes due to the use of an ensemble of feature representations and regression functions and the subsequent weighted linear combination of the synthesis results obtained using each function. Third, images with a wide variety of facial poses and facial expressions can be successfully synthesized even when such images are not present in the training dataset. In a future study, the capabilities of the proposed framework will be enhanced by cooperating with other robust kernel functions and more feature representations.

@&#ACKNOWLEDGEMENTS@&#

This work was supported by grant 103-2221-E-032-027-MY2.

@&#REFERENCES@&#

