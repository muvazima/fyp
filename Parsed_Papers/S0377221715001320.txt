@&#MAIN-TITLE@&#On the determination of European day ahead electricity prices: The Turkish case

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Developed a day ahead electricity market optimization model including all the practical considerations.


                        
                        
                           
                           Proposed an IP-based large neighborhood search to obtain an initial solution.


                        
                        
                           
                           Suggested aggregation and variable elimination techniques to solve the problem within the time limits.


                        
                        
                           
                           Compared solution performances using real Turkish Day Ahead Market data.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OR in energy

Combinatorial auctions

Electricity market

Mixed integer programming

Problem reduction techniques

@&#ABSTRACT@&#


               
               
                  Day ahead electricity prices in European markets are determined by double-blind auctions. That is, both buyers and sellers may place anonymous orders with different prices and quantities. The market operator has to solve an optimization problem within an hour to clear the auction and determine the prices for the Day Ahead Market (DAM) which are used as a reference point for the other electricity contracts. All electricity traded at the same time period is traded at the same price, called market clearing price. The market operator has to end the algorithm with a feasible solution if the algorithm could not find the optimal solution within the time limit. In this paper, we develop an optimization model to solve the problem with day ahead electricity prices including all the practical considerations in the Turkish DAM. We present a mixed integer formulation and provide methods based on aggregation techniques and variable elimination to solve the problem within the limits of the practical requirements. Using real market data, we show that, aggregation reduces the problem size approximately 60 percent whereas variable elimination provides another 30 percent reduction. We also propose an IP-based large neighborhood search to obtain an initial solution. Empirical evidences coming from the Turkish DAM data indicate the heuristic has a substantial solution quality and the overall suggestions deliver remarkable solution time improvements. This is the first paper in terms of formulating DAM problem in Turkey, developing new approaches to solve it within the time limits of the market, and using real data.
               
            

@&#INTRODUCTION@&#

Electricity energy can be seen as a tradable commodity. It differs from other commodities because it is difficult to store. Therefore electricity generation and consumption have to be in constant balance. This distinct feature of electricity energy makes the trading mechanism both technically and economically complicated. The supply-demand balancing problem and other system constraints require a central authority and a common market structure.

The liberalization politics around the world lead to fundamental changes in the electricity markets. Sioshansi and Pfaffenberger (2006) provide the liberalization experiences of several countries during early periods. Starting with liberalization of electricity markets, the traders are capable of buying and selling electricity energy for their needs. Electricity energy could be traded either bilaterally or via an exchange. In long-term trades, two participants – one buyer and one seller – negotiate and agree on the terms of bilateral contracts. The price and other detailed information are limited to the parties involved. Using an exchange system, traders offer their bids in the markets such as day-ahead and day-in (a few hour-ahead). Among these trading mechanisms, determination of the day ahead electricity prices is of central importance in all deregulated electricity markets.

In Europe, power exchanges organize a daily auction to determine the electricity prices for the delivery of electricity next day. The prices established in this market form a reference point for the transactions in the intra-day, futures, forwards, and over-the-counter markets. Power exchanges are synchronized with Transmission System Operators (TSOs) to get technical clearance over the grid. Exchanges provide transparency and help the traders to find a better market price and an appropriate counterpart for their transactions. Bichpuriya and Soman (2010) give a brief review on these exchanges worldwide and their trading mechanism. There is also a real-time market for balancing and ancillary services usually operated directly by the TSO.

A TSO is responsible for the physical operations of the electricity market and each country has a single national TSO (Meeus, 2011) that is responsible for its single zone. On the other hand, there is an increasing desire for trading electricity among the different zones to operate the electricity grid systems more efficiently (Serralles, 2006). This trade could happen either by participating competition among zones or by merging multiple zones into one complex-zone.

In Europe, independent power exchanges operate the financial markets under the physical network constraints. Some power exchanges split their markets into different zones so that each zone may lead to different market price. For instance European Power Exchange (EPEX) divides its network into three zones (France, Germany/Austria and Switzerland) so that different prices could appear in different zones after this market splitting procedure (Martin, Müller, & Pokutta, 2014). On the other hand, several exchange companies also act together to couple their markets. For instance, Nordic NPS region has coupled Denmark, Estonia, Finland, Lithuania, Norway, and Sweden markets by using SESAM coupling system since 2007 (SESAM, 2014) whereas CWE region has coupled Belgium, France, Germany, Luxembourg, and the Netherlands markets by using COSMOS coupling system since 2010 (COSMOS, 2010).

On top of these exchanges, European Market Coupling Company (EMCC) was founded in 2008 (EMCC, 2009) to control the flow between regions under the principles of ITVC (Interim Tight Volume Coupling). In addition, seven power exchanges (APX, Belpex, EPEX SPOT, GME, Nord Pool Spot, OMIE and OTE) have been working on PCR (Price Coupling of Regions) project since 2010. EMCC system closed down after its successor NWE region (Denmark, Finland, Norway, Sweden, Great Britain, Belgium, France, Germany, Luxemburg and the Netherlands) price coupling was launched in February 2014. Lastly, PCR solution was achieved for NWE and SWE (France, Spain and Portugal) regions by using EUPHEMIA (Pan-European Hybrid Electricity Market Integration Algorithm) in May 2014 (EUPHEMIA, 2014). However, market splitting and coupling problems are beyond the scope of this article.

Among electricity markets, the Day Ahead Market, which determines the electricity prices for the delivery of electricity next day, has the central attention. The prices coming from this market are usually accepted as a reference point for the other electricity markets and bilateral contracts. There are two main approaches to Day Ahead Market design: USA Pool Models and European Exchange Models. Maria (2010) provides advantages and disadvantages of these approaches as well as their pricing regimes.

In the Pool Models, typically demand is estimated and suppliers provide their capacities and cost information. Unit commitment and economic dispatch problems (Phan & Koc, 2013) are solved to maximize the amount of traded contracts. If the cost is not recovered for some agents, additional side payments (uplift, non-linear price regimes) are available for those agents (Gribik, Hogan, & Pope, 2007). Real life instances of unit commitment and economic dispatch problems generate large scale optimization problems. Industrial solutions of these problems typically concentrate on the Lagrangian relaxation methods (Araoz & Jornsten, 2011; Li & Shahidehpour, 2005; Phan, 2012). Recently, they also focused on the general purpose integer programming solvers by applying ingenious solution techniques. Carlson et al. (2012) describes the success story for the Midwest Independent Transmission System Operator, and it is a remarkable example for OR applications in energy markets. The problems appeared in the pool context are requiring different perspective with respect to exchange models so we will only focus on the exchange models to maintain the integrity of the paper. However, Van Vyve (2011) provides a noteworthy comparison of these models.

European Exchange Models include both demand and supply side into their combinatorial auction mechanisms. On these exchanges, orders are either accepted or rejected but no side-payment is available (linear price regimes). Some of the orders (e.g. block orders) cause the non-convexity in the mathematical model so the resulted auction problem is NP-Hard to solve (Bichpuriya & Soman, 2010). In most of the real instances, desired linear prices that maximize social welfare simply do not exist. The approaches developed for solving this issue is the main difference between US and the European markets. US markets prefer somewhat deviating from linear pricing whereas the European system solves true linear pricing but executes a suboptimal solution in terms of welfare (Van Vyve, 2011).

Finding an efficient pricing regime is the main challenge for the combinatorial auctions. When all the goods are divisible, the resulting auction problem is a linear programming problem (Xia, Koehler, & Whinston, 2004). The value of LP dual variables gives equilibrium prices. Similarly, strong duality holds if a constraint qualification is satisfied in convex optimization. In that case, the dual variables are also to be interpreted as equilibrium prices (Martin et al., 2014). One of the most important assumptions in a neoclassical economic model is the convexity assumption. Under convexity, it is well-known that the optimal dual variables (shadow prices) define the market clearing prices, where the social welfare is maximized (Araoz & Jornsten, 2011). However, electricity markets have several characteristics that are suffering from non-convexities. In this context, strong duality fails and market equilibrium with linear prices cannot be obtained (O'Neill, Sotkiewicz, Hobbs, Rothkopf, & Stewart, 2005; Ruiz, Conejo, & Gabriel, 2012). To deal with this non-convexity, O'Neill et al. (2005) proposes to take the dual variables of restricted primal problem after fixing integer variables to their optimal value and use optimal dual variables to form contracts yielding an equilibrium situation. Ruiz et al. (2012) minimizes the duality gap caused by integer constraints by using linear prices in such a way that producers recover their costs.

There are other models proposed in the literature to solve the day ahead problem but those models do not include all practical constraints used by current exchanges and there is no actual data provided to test these suggested models. Zak, Ammari, and Cheung (2012) develop their model based on bilevel programming where accept/reject decisions and price decisions are the levels. Meeus, Verhaegen, and Belmans (2009) investigate the restrictions of exchanges using MILP model under representative scenarios. Derinkuyu and Tanrisever (2013) analyze the matching algorithms for DAM in European Electricity Markets and show that those algorithms either heuristically solve the problem or even if optimization is intended, no public information are available about their time or gap performance.

Recently, European market coupling problem gets an attention. Martin et al. (2014) provide a full formulation of the market coupling problem between European day-ahead electricity exchanges. Madani and Van Vyve (2014) present a new formulation for the market coupling which avoids the use of complementarity constraints to express market equilibrium conditions. Both of the studies shows computational results based on real data. Lastly, Boomsma, Juul, and Fleten (2014) combine the day-ahead and day-in decisions, and formulate the bidding problem as a multi-stage stochastic program.

In the day-ahead market, next-day consists of non-overlapping time periods that could be 15 minutes, half an hour, an hour or several hours, and a clearing price is set by the auction for each time period. That is, all electricity traded at the same time period is traded at the same price, called market clearing price. Bidders can voluntarily participate in the market and give several types of orders (Fig. 1
                     ).

European Day Ahead Markets allow the market participants to place three different types of orders: single orders, block orders and flexible orders as explained below.


                     Single orders: Single orders are the buy or sell bids of the participants for one time period only. A single order is a price and quantity schedule determined by the bidder. Basically, the bidders tell the power exchange the price-quantity pair they are willing to trade for a particular hour of the next day. Fig. 2
                      demonstrates two single orders by a bidder for the first two periods of the day. For instance, in period 1, the bidder is willing to sell 200 megawatt hours if the clearing price is above 120 TL/megawatt hour; and willing to buy 400 megawatt hours if the clearing price is below 50 TL/megawatt hour. Each time period corresponds to an hour in the Turkish Market but different time lengths are also possible in other European Markets.

Single orders are linearly interpolated. If a clearing price falls between two price levels of a participant, corresponding quantities are interpolated. For example, in Fig. 2, if the clearing prices are 90 TL for both periods, the participant sells 50 megawatt hours for the period 0–1 and buys 150 megawatt hours for the period 1–2. The quantity is positive for the supply side and negative for the demand side. Note that each bidder may have a different set of price levels as they are offering quantities.


                     Block orders: Block orders cover for several consecutive time periods. These orders are either accepted or rejected fully, i.e., they are not interpolated. A block order could be linked to another block meaning the former one has to be accepted before accepting the linked one. Fig. 3
                      shows an example for two block orders. Basically, the bidder wants to sell 400 megawatt hours for each period between 0 and 6 (in total, 2400 megawatt hours) if the average clearing price of these periods is above 160, while wanting to buy 300 megawatt hours for each period between 12 and 24 if the average clearing price of these periods is below 120.


                     Flexible orders: Flexible orders have only a price-quantity tag and do not provide time period information. They are valid for every time period and could be accepted for only one time period to balance supply and demand. In Fig. 3, two
flexible orders are shown. If the maximum clearing price across all the planning periods exceeds 200 TL then the bidding agent is willing to sell 500 megawatt hours for one time period. Similarly, if minimum clearing price is below 50 TL, then the bidder is willing to buy 200 megawatt hours for one time period.

Given the order schedules of the bidders, the objective of the power exchange is to accept or reject the orders in such a way to balance supply and demand at any time period by either minimizing total clearing prices or maximizing social welfare value (i.e., consumers’ utility minus producers’ cost).

If each order of the participants is related to a single time period, the resulting problem is trivial to solve (see Section 3.2.1). However, many participants want to give orders related to either multiple time periods (block, flexible) or previous orders (linked). Some power plants, such as thermal or nuclear power plants, have to run continuously at least some amount of the time to be able to operate optimally. To handle this problem, power exchanges are offering block orders. Also, hydro plants with a small reservoir want to sell their water power as expensive as possible so they prefer flexible orders. These complex structures make the auction combinatorial and difficult to solve (Cramton, Shoham, & Steinberg, 2006; De Vries & Vohra, 2003).

Meanwhile, the market operator has to clear the market in 1 hour by solving the resulting optimization problem so the participants could prepare their production schedule on time. In European power exchange markets, complex price-based market rules appear and have to be considered on a daily basis.

This paper contributes to the literature along the following lines:

                        
                           •
                           
                              Formulation of the DAM problem with all the practical constraints: Even though there are considerable practical developments on the determination of day ahead prices, this problem had not yet received academic attention (Meeus et al., 2009). Practical methods had mostly focused on heuristics to solve this problem in a reasonable time. Although Meeus et al. model single and block orders, they do not consider neither flexible orders, nor linked block orders. However Martin et al. (2014), and Madani and Van Vyve (2014) recently provide the full formulation for market coupling problems. In this regard, this is the first paper providing a rigorous formulation of the problem and an optimal solution methodology for the single region case. We introduce constraints for flexible orders and linked block orders. Furthermore, we handle the prices that depend on the selected quantity for single orders due to the interpolation rule in the market.


                              Developing an effective solution methodology: We develop a methodology to solve the problem optimally.

                                 
                                    ○
                                    
                                       Problem reduction methods: We first exploit the structure of the optimization problem and develop a reduction technique which significantly reduces the problem size without affecting optimality. We provide aggregation and variable elimination techniques to achieve this goal. Our results show that the problem size reduces by approximately one tenth of its actual size.


                                       Initial solution calculation: In general, the problem at hand is a difficult problem to solve, so there is no guarantee to solve it effectively. Providing an initial solution would be helpful to decrease solution time and diminishes the stress on the power exchange institution.


                                       Computational results on real data: Martin et al. (2014), and Madani and Van Vyve (2014) provide results based on the real data for market coupling problem. Best to our knowledge, there is no result provided in the literature based on the actual data for the single region case. This paper provides computational results on the real data and fills this gap.

This paper aims to introduce a full size model with all practical constraints, and to develop methods to decrease solution time of the real size problem (appeared in the Turkish Day Ahead Market). In Section 2, we first introduce the auction model framework to formulate the Day Ahead problem. Section 3 is devoted to a solution methodology. Section 3.1 presents the problem reduction techniques whereas Section 3.2 generates initial solutions for upper bound calculations. Section 4 provides the numerical results obtained from the real market data, and Section 5 concludes with managerial insights.

We formulate the Turkish Day Ahead Market version of the European models. The Turkish Day Ahead Market is using a European Exchange type of model to operate its activities (Derinkuyu, Tanrisever, Baytugan, & Sezgin, 2015). The resulting Day Ahead problem is a single region problem which means single market clearing price exists all over the country for a particular time period. That is, all electricity traded in the auction at the same time period is traded at the same price, called market clearing price. The market allows its participants to offer single, block and flexible orders. Single orders are linearly interpolated. If a clearing price falls between the two price levels of a participant, then the corresponding quantities are interpolated. All participant orders are portfolio based. In other words, the participants are free to use any grid connection in the Turkish electricity network. Therefore, technical network constraints are not included in the Day Ahead Market optimization problem. In the Turkish electricity market, the effects of the transmission constraints are resolved in the imbalance market. No side payment is available in the market so a typical single zone European Day Ahead Market problem appears.

The objective function minimizes the total clearing prices for the next day. This objective is helpful for policy makers to deal with political stress on the electrical prices. In addition, policy makers could compare the electricity prices of different days and examine sensitivity of prices against chosen orders or constraints. In Turkey, policy makers prefer to minimize the total clearing prices instead of maximizing social welfare. Since desired linear prices that maximize social welfare simply do not exist in most of the real instances because of the non-convexity, the European system executes a suboptimal solution in terms of welfare such as minimizing maximum or total infeasibility. In our case, we minimize the total clearing prices and reorganize the flow balance constraints such that the both objectives are equal if there are only single orders available (convexity holds). This equivalence problem under the non-convexity case is a very interesting open problem worth to investigate in the future.

In the Day Ahead Market, the next day is divided into equal time periods that could be 15 minutes, half-hour, 1-hour or several hours, and for each time period t, market clearing price pt
                      is obtained. Participants both on the demand and the supply sides could place three types of orders: single, block and flexible orders. In what follows we first explain our notation before we present the optimization problem.


                     Problem definition
                  


                     
                        Sets and indices


                        
                           t, T
                        
                        
                           time period and set of time periods.

single order and set of single orders.

price level and set of price levels for single order i.

block order and set of block orders

set of supply and demand block orders

set of block orders linked to block order b, i.e., in order to accept order b all the orders in the set Λb
                               must be accepted.

flexible order and set of flexible orders

set of supply and demand flexible orders


                     
                        Parameters


                        
                           Pmin
                           
                        
                        
                           the lowest price for orders predetermined by the exchange.

the highest price for orders predetermined by the exchange.

the price for single order i, in period t, for level l.

the quantity for single order i, in period t, for level l.

the price for block order b and flexible order f.

the quantity for block order b and flexible order f.

number of time periods where block order b is active.

binary parameter equal to one if block order b is active in period t.

Given the definitions above we can describe the orders in more detail as follows:

                        
                           •
                           Single order i, in time period t, has a level set L(i), and each level l ∈ L represents price-quantity pairs (Pi,t,l, Qi,t,l
                              ) (as price increases, quantity decreases) that bidders are willing to trade. If a clearing price pt
                               is in between two price levels, then interpolation is used to determine the corresponding quantities. Under the same single order, both supply order with lower price and demand order with higher price can exist together. A positive quantity denotes a supply order while a negative quantity corresponds to a demand order.

Block order b is active for Nb
                               > 1 periods with a price Pb
                               and quantity Qb. δbt
                               is an indicator whether block b is active in time period t. A block order has to be accepted or rejected for all of its effective periods and with full quantity.

Flexible order f could be accepted for only one period with full quantity at price Pf
                               and quantity Qf
                              . “Flexible” refers to time flexibility, i.e., it is valid for every time period but has to be chosen at most for one period.

We formulate this problem as a Mixed Integer Linear Problem (MILP) with following decision variables:

                        
                           pt
                           
                        
                        
                           clearing price for period t, t ∈ T.

accepted fraction of single order i in period t for level l. At most two consecutive (xitl, xitl+1
                              ) variables could be nonzero with summation of one. In other words, these variables are special ordered set type 2 (SOS2) variables for each order i, i ∈ I, l ∈ L(i), t ∈ T.
                           

= 1 if block order b is accepted, b ∈ B.

= 1 if flexible order f is accepted in period t, f ∈ F, t ∈ T.
                           

In this paper, we consider the objective of minimizing the total electricity price across 24 hours as given in (1). The mathematical model is presented below:
                        
                           (1)
                           
                              
                                 m
                                 i
                                 n
                                 i
                                 m
                                 i
                                 z
                                 e
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    p
                                    t
                                 
                                 ,
                              
                           
                        
                     
                  

In what follows we explain the constraint sets in the problem. First of all, supply and demand for electricity should be in balance at each hour t. Eq. (2) ensures this requirement. The first term in (2) is the total quantity selected for single orders. Second and third term represent accepted supply and demand blocks, respectively. Finally, the last two terms denote the accepted supply and demand flexible orders.

                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          ∀
                                          t
                                          :
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                I
                                             
                                          
                                          
                                             ∑
                                             
                                                l
                                                ∈
                                                L
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                          
                                             Q
                                             
                                                i
                                                t
                                                l
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                t
                                                l
                                             
                                          
                                       
                                    
                                    
                                       +
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                b
                                                ∈
                                                
                                                   B
                                                   s
                                                
                                             
                                          
                                          
                                             Q
                                             b
                                          
                                          
                                             y
                                             b
                                          
                                          −
                                          
                                             ∑
                                             
                                                b
                                                ∈
                                                
                                                   B
                                                   d
                                                
                                             
                                          
                                          
                                             Q
                                             b
                                          
                                          
                                             y
                                             b
                                          
                                          +
                                          
                                             ∑
                                             
                                                f
                                                ∈
                                                
                                                   F
                                                   s
                                                
                                             
                                          
                                          
                                             Q
                                             f
                                          
                                          
                                             z
                                             
                                                f
                                                t
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       −
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                f
                                                ∈
                                                
                                                   F
                                                   d
                                                
                                             
                                          
                                          
                                             Q
                                             f
                                          
                                          
                                             z
                                             
                                                f
                                                t
                                             
                                          
                                          =
                                          0
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  


                     Constraints for interpolation: At each time period, each single order, i, has price constraints to reflect interpolation:

                        
                           (3)
                           
                              
                                 ∀
                                 i
                                 ,
                                 t
                                 :
                                 
                                    ∑
                                    
                                       l
                                       ∈
                                       L
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    P
                                    
                                       i
                                       t
                                       l
                                    
                                 
                                 
                                    x
                                    
                                       i
                                       t
                                       l
                                    
                                 
                                 =
                                 
                                    p
                                    t
                                 
                              
                           
                        
                     
                  


                     Constraints for linking block orders: Some of the block orders also have linking constraints. Linking constraints enable the market participants to place conditional bids in the market.

                        
                           (4)
                           
                              
                                 ∀
                                 λ
                                 
                                 ∈
                                 
                                    
                                       Λ
                                    
                                    b
                                 
                                 :
                                 
                                 
                                    y
                                    b
                                 
                                 ≤
                                 
                                    y
                                    λ
                                 
                              
                           
                        
                     
                  

Constraint (4) ensures that a block b would not be accepted if its linking block λ is not accepted.


                     Constraints for flexible orders: Flexible orders can be accepted for at most one time period:

                        
                           (5)
                           
                              
                                 ∀
                                 f
                                 ∈
                                 F
                                 :
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    z
                                    
                                       f
                                       t
                                    
                                 
                                 ≤
                                 1
                              
                           
                        
                     
                  


                     Forcing constraints: Lastly, the exchange has forcing constraints for block and flexible orders to ensure that a supply order price is not higher than clearing price and a demand order price is not lower than clearing price if they are accepted. Similarly, if they are rejected, the reverse logic has to be applied.

                        
                           (6)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          ∀
                                          b
                                          ∈
                                          
                                             B
                                             s
                                          
                                          :
                                          
                                          
                                             N
                                             b
                                          
                                          
                                             P
                                             b
                                          
                                          
                                             y
                                             b
                                          
                                          +
                                          
                                             N
                                             b
                                          
                                          
                                             P
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   y
                                                   b
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             ∑
                                             t
                                          
                                          
                                             δ
                                             
                                                b
                                                t
                                             
                                          
                                          
                                             p
                                             t
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          and
                                          
                                          ∀
                                          f
                                          ∈
                                          
                                             F
                                             s
                                          
                                          ,
                                          t
                                          :
                                          
                                          
                                             P
                                             f
                                          
                                          
                                             z
                                             
                                                f
                                                t
                                             
                                          
                                          +
                                          
                                             P
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   z
                                                   
                                                      f
                                                      t
                                                   
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             p
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          ∀
                                          b
                                          ∈
                                          
                                             B
                                             s
                                          
                                          :
                                          
                                          
                                             ∑
                                             t
                                          
                                          
                                             δ
                                             
                                                b
                                                t
                                             
                                          
                                          
                                             p
                                             t
                                          
                                          ≤
                                          
                                             N
                                             b
                                          
                                          
                                             (
                                             
                                                P
                                                b
                                             
                                             
                                                (
                                                
                                                   1
                                                   −
                                                   
                                                      y
                                                      b
                                                   
                                                
                                                )
                                             
                                             +
                                             
                                                P
                                                
                                                   m
                                                   a
                                                   x
                                                
                                             
                                             
                                                y
                                                b
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          and
                                          
                                          ∀
                                          f
                                          ∈
                                          
                                             F
                                             s
                                          
                                          ,
                                          t
                                          :
                                          
                                          
                                             p
                                             t
                                          
                                          ≤
                                          
                                             P
                                             f
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   z
                                                   
                                                      f
                                                      t
                                                   
                                                
                                             
                                             )
                                          
                                          +
                                          
                                             P
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          
                                             z
                                             
                                                f
                                                t
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          ∀
                                          b
                                          ∈
                                          
                                             B
                                             d
                                          
                                          :
                                          
                                          
                                             ∑
                                             t
                                          
                                          
                                             δ
                                             
                                                b
                                                t
                                             
                                          
                                          
                                             p
                                             t
                                          
                                          ≤
                                          
                                             N
                                             b
                                          
                                          
                                             P
                                             b
                                          
                                          
                                             y
                                             b
                                          
                                          +
                                          
                                             N
                                             b
                                          
                                          
                                             P
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   y
                                                   b
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          and
                                          
                                          ∀
                                          f
                                          ∈
                                          
                                             F
                                             d
                                          
                                          ,
                                          t
                                          :
                                          
                                          
                                             p
                                             t
                                          
                                          ≤
                                          
                                             P
                                             f
                                          
                                          
                                             z
                                             
                                                f
                                                t
                                             
                                          
                                          +
                                          
                                             P
                                             
                                                m
                                                a
                                                x
                                             
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   z
                                                   
                                                      f
                                                      t
                                                   
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          ∀
                                          b
                                          ∈
                                          
                                             B
                                             d
                                          
                                          :
                                          
                                          
                                             N
                                             b
                                          
                                          
                                             P
                                             b
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   y
                                                   b
                                                
                                             
                                             )
                                          
                                          +
                                          
                                             N
                                             b
                                          
                                          
                                             P
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          
                                             y
                                             b
                                          
                                          ≤
                                          
                                             ∑
                                             t
                                          
                                          
                                             δ
                                             
                                                b
                                                t
                                             
                                          
                                          
                                             p
                                             t
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          and
                                          
                                          ∀
                                          f
                                          ∈
                                          
                                             F
                                             d
                                          
                                          ,
                                          t
                                          :
                                          
                                          
                                             P
                                             f
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   z
                                                   
                                                      f
                                                      t
                                                   
                                                
                                             
                                             )
                                          
                                          +
                                          
                                             P
                                             
                                                m
                                                i
                                                n
                                             
                                          
                                          
                                             z
                                             
                                                f
                                                t
                                             
                                          
                                          ≤
                                          
                                             p
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Constraint (6) guarantees that supply block and flexible order prices are not higher than clearing price if they are accepted and the reverse logic is applied in constraint (7) if they are rejected. Similarly, constraint (8) guarantees that demand block and flexible order prices are not lower than the clearing price if they are accepted and the reverse logic is applied in constraint (9) if they are rejected.

Finally, there are nonnegativity, SOS2 and binary constraints:

                        
                           (10)
                           
                              
                                 
                                    p
                                    t
                                 
                                 ∈
                                 
                                    R
                                    +
                                 
                                 ;
                                 
                                 
                                    x
                                    
                                       i
                                       t
                                       l
                                    
                                 
                                 ∈
                                 S
                                 O
                                 S
                                 2
                                 
                                    (
                                    i
                                    )
                                 
                                 ;
                                 
                                 
                                    y
                                    b
                                 
                                 ,
                                 
                                    z
                                    
                                       f
                                       t
                                    
                                 
                                 ∈
                                 
                                    B
                                    +
                                 
                              
                           
                        
                     
                  

The market optimization problem proposed in (1)–(10) is solved each day to obtain reference prices for each time period. Next we present our solution methodology.

The market operator has only 1 hour to solve the Day Ahead Market optimization problem and to declare the market clearing prices to the participants in the auction. If the solution time decreases, market operators have more time to analyze the results before publishing them. If any suspicious data is found among the orders, there is a chance to correct it by contacting to the related participant before publishing the results. After 1-hour time limit, it is almost impossible to correct those order mistakes because of the market rules. According to market officers (PMUM, 2012), those errors could be as big as altering clearing prices. Due to the importance of solution times, we offer two problem reduction techniques and two methods to find an initial solution.

We offer two problem reduction algorithms to decrease solution time. First one aggregates the single orders and the second one eliminates unnecessary variables and orders.

Each single order i has L(i) levels and those levels construct a special ordered set. Therefore the problem has special ordered sets as many as the number of single orders and each set contains elements as many as the number of levels of related single order. In fact, each element in the special ordered set is represented with a binary variable so the reduction of those elements could be helpful on the solution time.

We offer an aggregated single order for each time period so that the number of special ordered sets would be decreased to total number of time periods. (If the period length is an hour, then the total number is 24.) The aggregation process organized according to following steps for each time period:

                              
                                 (a)
                                 Construct a set P that contains distinct prices of single orders given for that time period.

For each p ∈ P:

                                       
                                          •
                                          Calculate the corresponding quantity for each single order. If the single order does not contain p, then use interpolation to find the quantity.

Sum all corresponding quantities and assign as q.

Add a level (to each single order) whose price-quantity is (p, q).

The goal behind the aggregation process is to eliminate repeated prices. Since single orders usually contain the same prices, there could be more than one binary variable that represents the same price on the same time period. The aggregation process eliminates those unnecessary repetitions and reduces the problem size.

Aggregation of single orders might not change the problem size theoretically. For instance, if there exist only one single order at the given time period, there is no improvement for this time period. In addition, if all the orders have different price levels from each other, the problem size also does not change. However, in reality, all single orders are at least having same Pmin
                            and Pmax
                            pricing levels. Furthermore, the market participants that have similar electricity generation units have similar marginal costs. Therefore, it is very likely to bid with similar price levels. Empirical evidences coming from the Turkish Day Ahead Market data indicate this reality.

After the aggregation of single orders, there is only one single order for each time period. That's why, the constraints 2 and 3 could be written as follows:

                              
                                 (11)
                                 
                                    
                                       ∀
                                       t
                                       :
                                       
                                       
                                          ∑
                                          
                                             l
                                             ∈
                                             L
                                             
                                                (
                                                t
                                                )
                                             
                                          
                                       
                                       
                                          Q
                                          
                                             t
                                             l
                                          
                                       
                                       
                                          x
                                          
                                             t
                                             l
                                          
                                       
                                       +
                                       
                                          ∑
                                          
                                             b
                                             ∈
                                             
                                                B
                                                s
                                             
                                          
                                       
                                       
                                          Q
                                          b
                                       
                                       
                                          y
                                          b
                                       
                                       −
                                       
                                          ∑
                                          
                                             b
                                             ∈
                                             
                                                B
                                                d
                                             
                                          
                                       
                                       
                                          Q
                                          b
                                       
                                       
                                          y
                                          b
                                       
                                       +
                                       
                                          ∑
                                          
                                             f
                                             ∈
                                             
                                                F
                                                s
                                             
                                          
                                       
                                       
                                          Q
                                          f
                                       
                                       
                                          z
                                          
                                             f
                                             t
                                          
                                       
                                       −
                                       
                                          ∑
                                          
                                             f
                                             ∈
                                             
                                                F
                                                d
                                             
                                          
                                       
                                       
                                          Q
                                          f
                                       
                                       
                                          z
                                          
                                             f
                                             t
                                          
                                       
                                       =
                                       0
                                       ,
                                    
                                 
                              
                           
                           
                              
                                 (12)
                                 
                                    
                                       ∀
                                       t
                                       :
                                       
                                       
                                          ∑
                                          
                                             l
                                             ∈
                                             L
                                             
                                                (
                                                t
                                                )
                                             
                                          
                                       
                                       
                                          P
                                          
                                             t
                                             l
                                          
                                       
                                       
                                          x
                                          
                                             t
                                             l
                                          
                                       
                                       =
                                       
                                          p
                                          t
                                       
                                       .
                                    
                                 
                              
                           
                        


                           L(t) represents the set of price levels for the single order appeared in time period t. Similarly, Qtl
                            and Ptl
                            are the quantity and the price for the single order in period t, for level l.

The clearing prices cannot be lower than a priori defined lower limit Pmin
                            and higher than upper limit Pmax
                            (which are 0 and 2000 Turkish Liras for Turkish Market for 2014). However, one can narrow this range by using the data on hand. In practice, even if we accept all the block and flexible orders at demand side, the clearing prices are mostly under the upper limit Pmax
                           . Similarly, we cannot reach lower limit Pmin
                           , even if we accept all the block and flexible orders at supply side. Hence, actual lower and upper limits are much closer to each other in the practical instances.

As an illustration, Fig. 4 provides an example for aggregated single orders of 2 hours. If there are only single orders, the clearing price of period 0–1 is 100 TL whereas the clearing price of period 1–2 is 150 TL.

In this example, we also have two supply block orders and two demand block orders. Fig. 5
                            shows the price and quantity information of the block orders. All of these block orders cover these 2 hours.

Assume that we accept all demand block orders. There is 300 megawatt hours deficit (200 megawatt hours from DA block and 100 megawatt hours from DB block) for each period 0–1 and 1–2. Since there is no demand block left, maximum achievable price for period 0–1 could be as high as 150 TL whereas maximum achievable price for period 1–2 could be as high as 200 TL. Average price for these hours is 175 TL. However supply block SB asks for at least 200 TL so this block order cannot be acceptable in any circumstances. Therefore, we can eliminate the related variables of this block order without affecting the optimality.

Similarly, assume that we accept all supply block orders. Since we had eliminated the supply block SB, only the supply block SA is left. This block delivers 100 megawatt hours surplus for each period 0–1 and 1–2. Since there is no supply block left, minimum achievable price for period 0–1 could be as low as 50 TL whereas the minimum achievable price for period 1–2 could be as low as 100 TL. Average price for these hours is 75 TL. However demand block DA bids for at most 50 TL so this block order cannot be acceptable in any circumstances. We can therefore eliminate related variables of this block order.

If we continue on this process, accepting all demand block orders cause 100 megawatt hours deficit (since block DA is eliminated, only block DB left) for each period 0–1 and 1–2. In this round, maximum achievable price for period 0–1 could be as high as 110 TL whereas maximum achievable price for period 1–2 could be as high as 160 TL. Average price for these hours is 135 TL. However supply block SA asks for at least 150 TL so this block order cannot be acceptable in any circumstances. We can therefore eliminate related variables of this block order.

Finally, there is no supply block left. Therefore, minimum achievable price for period 0–1 could be as low as 100 TL whereas minimum achievable price for period 1–2 could be as low as 150 TL. Average price for these hours is 125 TL. However demand block DB bids for at most 100 TL so this block order cannot be acceptable in any circumstances. We can eliminate related variables of this final block order.

At the end, there are only aggregated single orders left. Therefore, the clearing price of period 0–1 is 100 TL whereas the clearing price of period 1–2 is 150 TL.

The variable elimination algorithm aims at minimum and maximum price limits to become closer to each other. Those strengthened limits could be used to accept or reject the block and flexible orders a priori. The variable elimination approach consists of the following rules:

                              
                                 1.
                                 For each time period t:

                                       
                                          (a)
                                          
                                             Calculation of lower bound of price: Accept all available supply flexible and block orders that contain time t and reject all demand orders. Find the minimum achievable price by looking at aggregated single order curve. Minimum achievable price for each time period is the smallest aggregated single order level where the total amount of supply flexible and block orders is higher than the supply-demand deficit for the given single order level.


                                             Calculation of upper bound of price: Accept all available demand flexible and block orders that contain time t and reject all supply orders. Find the maximum achievable price by looking at single order levels. Maximum achievable price for each time period is the highest aggregated single order level where the total amount of demand flexible and block orders is lower than the supply-demand surplus for the given single order level.

Eliminate all the price levels of single orders given for time period t which are below the lower bound and above the upper bound.

For each block order b:

                                       
                                          (a)
                                          If it is a supply order and its price is higher than the average upper bounds of related time periods, reject block order b. (Clearly, this block order cannot be acceptable in any feasible solution.)

If it is a supply order and its price is lower than the average lower bounds of related time periods, accept block order b.

If it is a demand order and its price is higher than the average upper bounds of related time periods, accept block order b.

If it is a demand order and its price is lower than the average lower bounds of related time periods, reject block order b.

For each flexible order f:

                                       
                                          (a)
                                          If it is a supply order and its price is higher than upper bounds of all time periods, reject flexible order f. (Clearly, this flexible order cannot be acceptable in any feasible solution.)

If it is a supply order and its price is lower than lower bounds of all time periods, accept flexible order f.

If it is a demand order and its price is higher than upper bounds of all time periods, accept flexible order f.

If it is a demand order and its price is lower than lower bounds of all time periods, reject flexible order f.

If any lower or upper bound of any time period is changed with respect to previous iteration, go to step 1. Otherwise, terminate the algorithm.

Formal representation of variable elimination algorithm is given in Fig. 6
                           . The algorithm uses the same notation as in the mathematical model section. Besides, let L(t) represents the set of price levels for the aggregated single order appeared in time period t. Similarly, Qtl
                            and Ptl
                            are the quantity and the price for the single order in period t, for level l.

The idea behind the algorithm is to eliminate all the extreme cases both in the price and the order sides which are not reachable in any feasible solution.

Initial solutions are helpful to provide an upper bound. They could potentially decrease the branch and bound tree, and narrow the searching space. Today's commercial solvers are capable of using initial solutions intelligently to decrease the optimality gap and terminate the algorithm. In the combinatorial auctions, it is usually hard to find a feasible solution. In fact, the commercial solver CPLEX 12.5 could not find a feasible solution within an hour for some of the instances coming from the Turkish Day Ahead Market data when we did not provide an initial solution.

The market needs a solution within an hour under all circumstances to execute daily operations and commercial MIP solvers sometimes spends long times just for finding a feasible solution. An initial solution at hand helps to reduce the solution time and guarantees to have a feasible solution at the end of an hour. This will also help to decrease the stress on the market operator. Therefore we develop two heuristics. The first one constructs a feasible solution and the second one searches for a better solution by using a reduced MIP formulation.

In most of the European markets, the orders and constraints are considered hierarchically to get a feasible solution. In this hierarchy, we first handle the single orders. Then, block orders and flexible orders are added to problem respectively. Lastly, practical constraints (like linking constraints) are checked to satisfy feasibility. Algorithm works as follows:

                              
                                 (a)
                                 
                                    Single orders only solution: The aggregation procedure could be used to get a solution. After getting one aggregated single order per time period, it is easy to find a clearing price for each time period by interpolating related prices where the quantity hits the zero. In fact, this solution is optimal if there are only single orders.


                                    Adding block orders: The procedure accepts blocks beginning from the most appropriate one and repeat the following steps until there is no block left or a specified number of iterations is reached:

                                       
                                          •
                                          For all block orders, calculate the price difference between the block price and the average clearing prices of related time periods.

Select a block order with the highest price difference (if it is appropriate) as a candidate block.

Calculate the clearing prices again. If a candidate block is still acceptable, then accept it; otherwise reject it.


                                    Adding flexible orders: The selection is similar to block orders. Sort all the supply orders from lowest to highest and demand orders from highest to lowest. If a supply order is lower than the highest clearing price or a demand order is higher than the lowest clearing price, then accept them one by one until no order left.


                                    Feasibility check: Finally block and flexible orders are checked for feasibility and subject to the necessary actions.

The quality of the solution could be improved by spending more time on steps (b) and (c) by changing their search algorithms with more advanced constructive heuristic methods. Instead, we use this solution as an initial solution to the following IP-based heuristic. Hence, this heuristic finds the feasible solution and the next one improves this solution before we begin to solve problem optimally.

The general goal of the problem is finding clearing prices of all time periods. Our studies show that as the price limits narrow, the solution time decreases drastically. Therefore we offer the following reduced MIP to solve the problem:

                              
                                 •
                                 For a given solution from Section 3.2.1 or previous reduced MIP, let pt
                                     be the clearing price of time period t. Then, pick a perturbation amount ɛ, and define lower and upper bounds on the clearing prices such that lower and upper bounds are equal to 
                                       
                                          
                                             p
                                             t
                                          
                                          −
                                          
                                             ɛ
                                          
                                       
                                     and 
                                       
                                          
                                             p
                                             t
                                          
                                          +
                                          
                                             ɛ
                                          
                                       
                                    .

Apply the variable elimination algorithm provided in Section 3.1.2. Apply this algorithm by starting at its step 1c.

Use given solution as an initial solution to solve the reduced MIP

We repeat the procedure until no improvement is observed. As an initialization, the solution from the constructive heuristic is used. For the following iteration, the solution of previous reduced MIP is considered.

Since all iterations have an initial solution, solution time and solution quality could be controlled by the operator by adjusting perturbation parameter ɛ.

In Turkey, Turkish
                     
                      Electricity Transmission Company (TEİAŞ) both serves as exchange and a TSO; and manages the financial and physical trade of electricity through the Center for Market Financial Settlement (PMUM) and the Directorate of National Load Dispatch (MYTM). Currently the Turkish Electricity Market is using closed-source software based on a heuristic approach to determine the prices. It is very difficult to obtain detailed analysis of the solutions with this software (Derinkuyu et al., 2015). Therefore, PMUM initiated a project for the development of software for the optimization of the day ahead prices. We are a part of the optimization division of this development team.

We test the effectiveness of our solution method using real data from the Turkish Day Ahead Market. In this study, we gather real data for 14 months from January, 2012 to February, 2013. We select 56 days of 13 months with 4 datasets from each month. We choose different weeks and days of the week of each month. Each day of the week (Monday, Tuesday, etc.) appears 8 times in the 56 instances.

Each day has on average 7500 single orders with 30,000 levels, 150 block orders with up to 15 linking blocks, and one or two flexible orders. We use a 2.30 gigahertz Laptop with 6 GB RAM to solve these instances. The algorithms are coded in JAVA with Concert Technology of CPLEX 12.5.

When we try to solve these 56 instances standalone without using any solution methodology offered in Section 3, the solver could not find a feasible solution at the end of an hour. At the next step, we applied the problem reduction techniques described in Section 3.1.


                     Table 1 provides the monthly and daily results for problem size reduction. Each monthly data is the average of 4 days and each daily data represents the average of 8 days. Both aggregation and variable elimination methods described in Section 4 are applied. On average, aggregation delivers 60 percent reduction and variable elimination achieves another 30 percent reduction in terms of nonzero coefficient numbers on the constraint matrix. Columns in Table 1 denote total number of levels in single bids, average number of levels in each SOS constraint, number of blocks and flexible bids, number of variables, number of constraints, and number of non-zero coefficients in the constraint matrix. 2012 January and Monday statistics are scaled to 100 in the actual problem (except for the average number of levels in each SOS constraint), and the other data are calculated in respect to it.

Problem size reduction techniques help to decrease total number of single levels by 94 percent on average whereas average number of levels in each SOS constraint increases 18 times. Furthermore, half of the block and flexible orders seem to be redundant because the prices of these orders are either higher than maximum achievable prices or lower than minimum achievable prices for their time periods. Hence, the reduced problem has fewer orders. The number of variables and constraints in the reduced problem are 27 percent and 3 percent of the actual one, respectively. As a result, we obtain 90 percent reduction in the problem size in terms of nonzero coefficient numbers on the constraint matrix.

In any instance, the original sized problem could not be solvable within an hour. In fact, the solver could not find a feasible solution. On the other hand, we find optimal solutions for most of the instances after the reduction techniques are applied. This shows the power of the reduction techniques without affecting optimality.


                     Tables 2 and 3 show the solution time statistics for the problems after the reduction techniques are applied. In these tables, we also show the solution time differences if we provide initial solution or not. Those initial solutions are obtained with the heuristic methods described in Section 3.2.


                     Table 2 contains 41 out of 56 instances that are solvable within an hour even if we do not provide any initial solution. Moreover, 34 out of 41 of them require less than a minute to solve under no initial solution case. If we provide an initial solution, only 3 of the instances need more than a minute and the average solution time is 19 percent of the no-initial solution case. Furthermore, provided heuristic finds the optimal solution in 37 out of 41 cases.


                     Table 3 provides the remaining 15 out of 56 instances that could not be solvable within an hour if we do not provide an initial solution. In fact, the solver could not find a feasible solution in either one of the instances. When we provide an initial solution, 12 out of 15 instances are solvable within an hour, and the heuristic solves 8 of them optimally. The worst gap in the remaining 3 instances is just 2.7 percent.


                     Tables 2 and 3 suggest that heuristics described in Section 3.2 are generating optimal or near optimal solutions in most of the cases, and providing heuristic solution as an initial solution decreases solution times considerably.

@&#CONCLUSIONS@&#

This work provides insights into the day ahead electricity market problem for the Turkish Market. We formulate the problem with all practical constraints that should be included into the model. Our model is tested and validated for 56 days in Turkish market.

We analyze the problem and identify possible reduction techniques without affecting optimality. On average, aggregation of single orders reduces the problem size approximately 60 percent whereas variable elimination provides another 30 percent reduction. Although the problem with original size could not be solvable within an hour, we find optimal solutions for 41 out of 56 instances in an hour. Furthermore, we develop constructive and IP based neighborhood heuristics to obtain initial solution. Our results show that, the resulting initial solution is optimal for 45 out of 56 instances. If the solver begins with an initial solution, the optimal solution could be found within an hour for 53 instances and the worst gap is 2.7 percent for the remaining 3 instances. In general, both reduction techniques and heuristics obtain substantial improvements on solution time and solution quality.

@&#ACKNOWLEDGMENTS@&#

We greatly thank TEİAS-PMUM for providing us historical data for computational purposes and Fehmi Tanrisever for his helpful suggestions. We also thank for the very useful comments provided by three anonymous referees.

@&#REFERENCES@&#

