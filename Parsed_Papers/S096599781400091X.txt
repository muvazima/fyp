@&#MAIN-TITLE@&#A CAD/CAE integrated framework for structural design optimization using sequential approximation optimization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An improved sequential approximation optimization algorithm is developed.


                        
                        
                           
                           An estimate of width of Gaussian kernel functions for surrogate models is proposed.


                        
                        
                           
                           An adaptive sampling strategy is developed based on the improved surrogate model.


                        
                        
                           
                           A framework that integrates CAD, CAE and SAO tools is developed.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Sequential approximation optimization

CAD/CAE integration

Integrated framework

Surrogate model

Adaptive sampling strategy

Structural design

@&#ABSTRACT@&#


               
               
                  This paper presents an open and integrated framework that performs the structural design optimization by associating the improved sequential approximation optimization (SAO) algorithm with the CAD/CAE integration technique. In the improved SAO algorithm, a new estimate of the width of Gaussian kernel functions is proposed to enhance the surrogate models for SAO. Based on the improved surrogate models, an adaptive sampling strategy is developed to balance the exploration/exploitation in the sampling process, which better balances between the competence to locate the global optimum and the computation efficiency in the optimization process. Fewer function evaluations are required to seek the optimum, which is of great significance for computation-intensive structural optimization problems. Moreover, based on scripting program languages and Application Programming Interfaces (APIs), integration between commercial CAD and CAE software packages is implemented to expand the applications of the SAO algorithm in mechanical practices. Two benchmark tests from simple to complex, from low-dimension to moderate-dimension were performed to validate the efficacy of the proposed framework. Results show that the proposed approach facilitates the structural optimization process and reduces the computing cost immensely compared to other approaches.
               
            

@&#INTRODUCTION@&#

Structural design optimization has been an important and challenging topic in the field of engineering design for obtaining more efficient and lighter structures [1]. The aim of the design optimization is to determine the optimal shape of a structure to maximize or minimize a given criterion, such as maximizing the stiffness or minimizing the weight subjected to the constraint conditions of the stress or displacement. Modern commercial CAD (Computer Aided Design) and CAE (computer Aided Engineering) tools have become a quintessential part of structural design processes, which always require a loop of model-evaluate-remodel. However, many of them are usually stand-alone systems that are not designed for collaborative use [2,3]. Mostly, these tools are confined to a single simulation because a designer usually has to work with two or more independent software packages for modeling and analysis, and the gap between the CAD and CAE domains is hard to get through. Hence an efficient CAD/CAE integrating approach is requisite to facilitate the structural design optimization [4,5].

In the CAD/CAE integrated framework for structural design, optimization techniques are important in that they affect the accuracy, reliability, usability, and computing cost [6]. Over the past decade a number of optimization algorithms from gradient-based algorithms to evolutionary algorithms (EAs) as well as approximate-based optimization algorithms [7] have been widely used in structural optimization problems. Every foregoing optimization approach has its own advantages and disadvantages.

Examples of gradient-based optimization applied to structural design problems can be found in the literatures [8,9]. Gradient-based optimization algorithms need the gradient information which is usually difficult to compute [10] or even unavailable. Moreover, they are prone to being trapped in local optima. A number of EAs such as genetic algorithm [11], simulated annealing [12], particle swarm optimization algorithm [13], immune algorithm [14], and artificial bee colony algorithm [15] have been widely used to solve structural design optimization problems. However, these methods require a huge number of function evaluations and the computational cost is extremely high [16,17], which makes it difficult to apply these optimization techniques to the structural design directly. In recent years, approximation techniques such as response surface method (RSM) [18,19], neural network (NN) [20,21], polynomial regression models [22], Kriging methods [23] and radial basis function (RBF) [24] method are explored and exploited intensively. These techniques in association with the EAs are able to improve the computational efficiency [25] in structural optimization problems, while the disadvantage is the error between the meta-model and the true model, which will reduce the reliability of approximation-based optimization methods.

Lower computational cost, generality, robustness, and accuracy are all required for structural optimization processes [26]. Thus, a sequential approximate optimization (SAO) approach [27,28] has gained popularity recently. Firstly, a small-size design of experiment (DOE) is employed to construct the surrogate model through various approximate techniques, then the global optimum of the response surface can be found by global optimization techniques such as EAs. If the termination criterion specified by the designer is satisfied, the SAO algorithm will be terminated. Otherwise, a few new sampling points will be added to improve the accuracy of the response surface. Through the iterative process, a highly accurate global optimum can be found with a small number of function evaluations in comparison with pure EAs. The high computational efficiency makes the SAO algorithm a promising optimization technique for the computation-intensive structural design problems.

However, the study of the SAO algorithm is still relatively young. A reliable and practical SAO algorithm is still lacking in the engineering design area. In SAO, the approximation technique and the sampling strategy are the two key elements for a successful optimization. In Section 2 the general formulation of the SAO approach is first presented, then a new method to determine the width of basis function for the RBF network and an adaptive sampling strategy are proposed to enhance the SAO algorithm. Furthermore, in order to exploit the SAO algorithm thoroughly in mechanical engineering, a framework that permits the integration between commercial CAD and CAE tools in conjunction with the SAO algorithm is developed. This approach widens the applications of the SAO method in structural design optimization problems. Moreover, this approach also facilitates the complex structural optimization process and makes it more convenient for engineering designers. Section 3 focuses on the general structural design optimization framework based on the SAO approach in association with CAD/CAE integration. Section 4 presents different case studies, which are used to demonstrate the efficacy of the integrated framework. Finally, the paper closes with some concluding remarks.

A general structural optimization problem with constraints is considered as follows:
                           
                              (1)
                              
                                 
                                    
                                       
                                          find
                                       
                                       
                                          X
                                       
                                    
                                    
                                       
                                          
                                             min
                                          
                                       
                                       
                                          f
                                          (
                                          X
                                          )
                                       
                                    
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                       
                                       
                                          
                                             
                                                g
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          X
                                          )
                                          â©½
                                          0
                                          
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          â¦
                                          ,
                                          l
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                h
                                             
                                             
                                                j
                                             
                                          
                                          (
                                          X
                                          )
                                          =
                                          0
                                          
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          â¦
                                          ,
                                          k
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                X
                                             
                                             
                                                L
                                             
                                          
                                          â©½
                                          X
                                          â©½
                                          
                                             
                                                X
                                             
                                             
                                                U
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Here 
                           X
                           L
                         and 
                           X
                           U
                         is the upper and lower bound of design variables, respectively. For structural design problems, the objective function and constraints are usually implicit functions of design variables, usually obtained by finite element analysis (FEA).

In the classical approximation-based optimization process summarized in [28], accuracy of the surrogate model could possibly be deteriorated by a particularly poor or unlucky initial sample, leading to a very deceptive optimum. Indeed, at any stage we take our optimum design to be the best result of the true function, not that from the surrogate. Results from the surrogate must be evaluated with the true function evaluations. Additional calls to the true function are not only used to validate the surrogate, but also to enhance its accuracy. Thus, a sequential approximation optimization (SAO) approach is developed. A general procedure of the SAO algorithm is presented in Fig. 1
                        . Applying a series of new infill points, based on some infill criteria which is also known as sampling strategy, we sample the objective function using a constantly changing surrogate model [29]. In SAO, the approximation technique and the sampling strategy are the key elements for a successful optimization. In this paper, an improved RBF network and an adaptive sampling strategy are employed to implement the SAO algorithm. SAO-based structural optimization can be mathematically expressed as
                           
                              (2)
                              
                                 
                                    
                                       
                                          for
                                       
                                       
                                          n
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          â¦
                                       
                                    
                                    
                                       
                                          find
                                       
                                       
                                          x
                                       
                                    
                                    
                                       
                                          
                                             min
                                          
                                       
                                       
                                          
                                             
                                                f
                                             
                                             
                                                (
                                                n
                                                )
                                             
                                          
                                          (
                                          x
                                          )
                                       
                                    
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                       
                                       
                                          
                                             
                                                g
                                             
                                             
                                                i
                                             
                                             
                                                (
                                                n
                                                )
                                             
                                          
                                          (
                                          x
                                          )
                                          â©½
                                          0
                                          
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          â¦
                                          ,
                                          l
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                h
                                             
                                             
                                                j
                                             
                                             
                                                (
                                                n
                                                )
                                             
                                          
                                          (
                                          x
                                          )
                                          =
                                          0
                                          
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          â¦
                                          ,
                                          k
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                (
                                                n
                                                )
                                             
                                          
                                          (
                                          x
                                          )
                                          â©½
                                          0
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                L
                                             
                                          
                                          â©½
                                          x
                                          â©½
                                          
                                             
                                                x
                                             
                                             
                                                U
                                             
                                          
                                       
                                    
                                 
                              
                           
                        the m-dimensional design variable 
                           X
                         is scaled into an m-dimensional unit hypercube 
                           x
                         by
                           
                              (3)
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                          
                                             L
                                          
                                       
                                    
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                          
                                             U
                                          
                                       
                                       -
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                          
                                             L
                                          
                                       
                                    
                                 
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 â¦
                                 ,
                                 m
                              
                           
                        where 
                           
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                                 
                                    U
                                 
                              
                           
                         and 
                           
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                                 
                                    L
                                 
                              
                           
                         denote the upper and lower bounds of the ith design variable, respectively.

Radial basis function (RBF) network [30], support vector regression (SVR) [31], and Kriging function [32], etc. are widely employed surrogate models in various areas. The equivalence between SVM and ordinary Kriging has been reported under the assumption that the covariance function is used as the kernel function [33]. The equivalence between SVM and RBF network can be established based on the suggestions of Poggio and Girosi [34]. Thus, the equivalence between Kriging and RBF network is naturally inferred.

Consider a function f observed without error, according to the sampling plan 
                              X
                           
                           ={
                              x
                           
                           1,
                           
                              x
                           
                           2,â¦ ,
                           
                              x
                              n
                           }
                              T
                           , yielding the responses 
                              Y
                           
                           ={y
                           1,
                           y
                           2,â¦ ,
                           yn
                           }
                              T
                           . The basic forms of RBF, Kriging and SVR predictions take the same form of the sum of kernel functions Ïi
                           , with weightings Ïi
                           , added to a base term b, which is outlined as follows [29]:
                              
                                 (4)
                                 
                                    
                                       
                                          f
                                       
                                       
                                          Ë
                                       
                                    
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             â
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          Ï
                                       
                                       
                                          i
                                       
                                    
                                    Ï
                                    (
                                    â
                                    x
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    â
                                    )
                                    +
                                    b
                                    =
                                    Î¦
                                    Â·
                                    Ï
                                    +
                                    b
                                 
                              
                           where 
                              x
                            is the vector of design variables, Ï is a basis function and Ïi
                            is the coefficient for the ith basis function, Î¦
                           =[Ï
                           1,
                           Ï
                           2,â¦ ,
                           Ïn
                           ](Ïj
                           
                           =
                           Ïâ
                              x
                           
                           â
                           
                              x
                              j
                           â), 
                              Ï
                           
                           =[Ï
                           1,
                           Ï
                           2,â¦ ,
                           Ïn
                           ]
                              T
                           .

The following Gaussian kernel is commonly employed as the basis function (basis function in RBF, covariance function in Kriging and kernel function in SVR, respectively) by the three predictions above:
                              
                                 (5)
                                 
                                    
                                       
                                          Ï
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    â
                                    x
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                    â
                                    )
                                    =
                                    exp
                                    
                                       
                                          
                                             -
                                             
                                                
                                                   
                                                      
                                                         (
                                                         x
                                                         -
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   (
                                                   x
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                                
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In Eq. (5), cj
                            is the width of the jth kernel function Ïj
                           . The physical meaning of c can be defined as the influence extent of the basis function Ï. As shown in Fig. 2
                           , a higher c means that the corresponding basis functionâs influence may extend further. Because every basis function corresponds to a sampling point, c can also be defined as the influence extent of the sampling point. It is believed that determination of the width of the basis function plays an important role in a good approximation [35].

In order to determine the width in a simple manner, Nakayama proposed the following estimate [36]:
                              
                                 (6)
                                 
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    â¯
                                    =
                                    
                                       
                                          c
                                       
                                       
                                          n
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                max
                                             
                                          
                                       
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             
                                                n
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                 
                              
                           where d
                           max represents the maximum distance between sampling points. Eq. (6) implies that all basis functions are assigned the same width. The above method suffer from two main disadvantages: (i) it cannot exploit the information of the sampling points thoroughly and usually requires redundant points to approximate the true model accurately and (ii) this estimate performs not so well with respect to the non-uniform sampling points. The above disadvantages are fatal for the surrogate models in the SAO algorithm. Hence, a more effective estimate of the width of the kernel functions is required.

Based on the local density of sampling points, a new determination method to estimate the width of the kernel function is proposed to enhance the surrogate models for the SAO algorithm. The density of sampling points is defined by the following equation:
                              
                                 (7)
                                 
                                    Ï
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             â
                                          
                                          
                                             j
                                             =
                                             0
                                          
                                          
                                             N
                                          
                                       
                                    
                                    
                                       
                                          e
                                       
                                       
                                          -
                                          
                                             
                                                â
                                                x
                                                -
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      j
                                                   
                                                
                                                â
                                             
                                             
                                                
                                                   
                                                      Ï
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where Ï is given by [36].
                              
                                 (8)
                                 
                                    Ï
                                    =
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                max
                                             
                                          
                                       
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             
                                                n
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                 
                              
                           
                           d
                           max represents the maximum distance between sampling points. The illustrative example of the density function is shown in Fig. 3
                           .


                           vi
                            is the influence volume of the ith sampling point. Based on the meaning of width of the kernel function ci
                           , vi
                            can be given by:
                              
                                 (9)
                                 
                                    
                                       
                                          V
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          c
                                       
                                       
                                          i
                                       
                                       
                                          m
                                       
                                    
                                 
                              
                           
                        

Summation of all sampling pointsâ influence volume should cover the whole m-dimensional unit hypercube, which leads to:
                              
                                 (10)
                                 
                                    
                                       
                                          
                                             â
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                    
                                    
                                       
                                          V
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          V
                                       
                                       
                                          t
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          V
                                       
                                       
                                          t
                                       
                                    
                                    â©¾
                                    1
                                 
                              
                           where vt
                            denotes the coupling effect of influence between sampling points. The determination of vt
                            is the crux of an approximation with high precision, which will be elaborated in the next section.

It is assumed that the influence volume of the sampling point located in the sparse area should be sufficiently great while in the intensive area relatively small, which is given by the following equation:
                              
                                 (11)
                                 
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                i
                                             
                                          
                                       
                                       
                                          
                                             
                                                V
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          1
                                          /
                                          Ï
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          1
                                          /
                                          Ï
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                    
                                    =
                                    
                                       
                                          Ï
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                       
                                          Ï
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

When vt
                            is determined, the estimate of cj
                            (i
                           =1,2,â¦ ,
                           
                              n
                           ) is implemented by solving the simultaneous Eqs. (7)â(11).

In the estimate of the width of Gaussian kernel above, Vt
                            is the key parameter. A lower Vt
                            predicates that the influence of sampling points is not exploited thoroughly, while a higher Vt
                            may aggrandize the influence coupling between sampling points and lead to a severe deviation. In this section, a method based on cross validation is proposed to determine the value of Vt
                           .

The procedure of cross validation is depicted as follows: (1) The surrogate model sampling data are split randomly into q roughly equal subsets. (2) Each of these subsets is removed in turn from the complete sampling data and the surrogate model is fitted to the remaining data. (3) The removed subset is predicted using the model which has been fitted to the remaining data.

The whole procedure repeats until all subsets have been removed, when n predictions 
                              
                                 (
                                 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             Ë
                                          
                                       
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             Ë
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 â¦
                                 ,
                                 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             Ë
                                          
                                       
                                    
                                    
                                       n
                                    
                                 
                                 )
                              
                            of the n observed data points (y
                           1,
                           y
                           2,â¦ ,
                           yn
                           ) will have been calculated. The cross-validation error is then calculated as
                              
                                 (12)
                                 
                                    
                                       
                                          Îµ
                                       
                                       
                                          CV
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          
                                             â
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      Ë
                                                   
                                                
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           With q
                           =
                           n, an almost unbiased error estimate can be obtained, but the variance can be very high. Thus somewhat larger subsets with q
                           =5 or 10 is suggested by Hastie et al. [37].

It is obvious that a perfect Vt
                            should be able to eliminate the cross-validation error ÉCV
                           . In the mathematical realization, determination of the value of Vt
                            is achieved by solving the following optimization problem:
                              
                                 (13)
                                 
                                    min
                                    :
                                    
                                       
                                          Îµ
                                       
                                       
                                          CV
                                       
                                    
                                    (
                                    
                                       
                                          V
                                       
                                       
                                          t
                                       
                                    
                                    )
                                    
                                    
                                       
                                          V
                                       
                                       
                                          t
                                       
                                    
                                    â©¾
                                    1
                                 
                              
                           
                        

The proposed method and the foregoing method by Nakayama are applied to the three surrogate models (RBF, Kriging and SVR), respectively, which are used to fit the test cases shown in Fig. 4
                           . The approximate accuracy of the surrogate models is assessed by the index of R-squared (R2
                           ), which is depicted as follows:
                              
                                 (14)
                                 
                                    
                                       
                                          R
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    1
                                    -
                                    
                                       
                                          
                                             
                                                â
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                n
                                             
                                          
                                          
                                             
                                                (
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            Ë
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                â
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                n
                                             
                                          
                                          
                                             
                                                (
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      Â¯
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           The index of R2
                            is between 0 and 1, where R2
                              
                           =1 means no error between observed and approximated values. To evaluate the efficacy of the proposed estimate method thoroughly, a special validation procedure is used. In the procedure, 15 points for test case 1 and 50 points for test case 2 are sampled randomly each time, and then the RBF, Kriging and SVR processes with both estimate methods of the width of kernel are performed, respectively. 1000 points are selected to calculate R2
                            between the approximation curve and the true curve. The whole process repeats for 50 times and the mean R2
                            (MR2) is calculated.

The fit accuracy comparison for both test cases by the index of MR2 is shown in Fig. 5
                           . With the proposed method, the indexes of MR2 for the three surrogate models including RBF, Kriging and SVR are all above 0.96 for both test cases while with Nakayamaâs method, the indexes of MR2 do not exceed 0.80, which indicates that the proposed method has an excellent performance and it is applicable to various surrogate models which satisfy the form of Eq. (4) and use Gaussian kernel as basis functions. The fluctuations of R2
                            for RBF processes in both test cases are demonstrated in Fig. 6
                           . Even in times that Nakayamaâs method deviates severely, the proposed method still presents a good fit, which indicates that it has an excellent and stable performance.

What distinguish the proposed estimate method from other methods is that the proposed one makes a difference among influences of the sampling points. Thus the width ci
                            of every kernel function Ïi
                            for a fit process is variable. The proposed method solves the variable ci
                            through a key parameter Vt
                           , which is handled with the cross validation method.

Since the advent of the SAO algorithm, a number of sampling strategies have been studied and applied [37â39]. These strategies can be divided into three categories: the exploitation technique, the exploration technique and the balanced exploitation/exploration technique. The exploitation-based sampling strategy is an attractive method for SAO. However, it is clear that this kind of sampling strategy is prone to being trapped in the local optimum [29]. Hence, an exploration sampling technique is proposed to build an accurate approximation of the entire design space to help the designer locate the global optimum [29]. However, exploration-based sampling requires a great deal of evaluations in the non-promising areas for global optimum which reduces the convergence efficiency. Exploiting the surrogate after the design space has been explored sufficiently may lead to the global optimum lying undiscovered, while over exploration is a waste of resources. Therefore Jones [38] proposed an error-based balanced exploration/exploitation sampling strategy to find the correct balance between them. However, Jonesâ method requires the error information on sampling points and thus is inapplicable to the RBF network and other error-free techniques, etc. In this section, we propose an adaptive sampling strategy to be acclimatized to various approximation techniques.

In the proposed sampling strategy, the simplest way of exploitation sampling is to find the optimum of the surrogate model s(
                              x
                           ) and the pure exploration is to maximize the minimum Euler distance d(
                              x
                           ) between sampling points, which is given by
                              
                                 (15)
                                 
                                    d
                                    (
                                    x
                                    )
                                    =
                                    
                                       min
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                               -
                                                               
                                                                  
                                                                     x
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     (
                                                                     n
                                                                     )
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            x
                                                            -
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  i
                                                               
                                                               
                                                                  (
                                                                  n
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                    (
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    â¦
                                    ,
                                    
                                       
                                          N
                                       
                                       
                                          (
                                          n
                                          )
                                       
                                    
                                    )
                                 
                              
                           where N
                           (
                           
                              n
                           
                           ) is the number of sampling points before the nth sequential sampling. The adaptive sampling method of solving the multi-objective optimization problem (16) is therefore proposed to balance the exploitation and exploration.
                              
                                 (16)
                                 
                                    
                                       
                                          
                                             max
                                             :
                                          
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             (
                                             x
                                             )
                                             ,
                                             
                                             d
                                             (
                                             x
                                             )
                                          
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   min
                                                
                                             
                                             â©½
                                             x
                                             â©½
                                             
                                                
                                                   x
                                                
                                                
                                                   max
                                                
                                             
                                          
                                       
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                          
                                          
                                             
                                                
                                                   g
                                                
                                                
                                                   i
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             (
                                             x
                                             )
                                             â©½
                                             0
                                          
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             â¦
                                             ,
                                             l
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   h
                                                
                                                
                                                   j
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             (
                                             x
                                             )
                                             =
                                             0
                                          
                                          
                                             j
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             â¦
                                             ,
                                             k
                                          
                                       
                                    
                                 
                              
                           where l is the number of inequality constraints and k is the number of equality constraints of the original optimization problems, s
                           (
                           
                              n
                           
                           )(
                              x
                           ) is the meta-model constructed before the nth sequential sampling. Then the optimal solution of (17) together with the real response evaluated by the original model will be regarded as a new sampling point to update the surrogate model.

To simplify the solving process and obtain a preferable solution, the objective d(
                              x
                           ) is turned into a constraint and the multi-objective problem is thus converted to a single-objective optimization problem as follows:
                              
                                 (17)
                                 
                                    
                                       
                                          
                                             max
                                             :
                                          
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             (
                                             x
                                             )
                                          
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   min
                                                
                                             
                                             â©½
                                             x
                                             â©½
                                             
                                                
                                                   x
                                                
                                                
                                                   max
                                                
                                             
                                          
                                       
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                          
                                          
                                             
                                                
                                                   g
                                                
                                                
                                                   i
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             (
                                             x
                                             )
                                             â©½
                                             0
                                          
                                          
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             â¦
                                             ,
                                             l
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   h
                                                
                                                
                                                   j
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                             
                                             (
                                             x
                                             )
                                             =
                                             0
                                          
                                          
                                             j
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             â¦
                                             ,
                                             k
                                          
                                       
                                       
                                          
                                          
                                             d
                                             (
                                             x
                                             )
                                             â©¾
                                             Î´
                                          
                                       
                                    
                                 
                              
                           
                        

In this paper, the determination of Î´ is given by:
                              
                                 (18)
                                 
                                    Î´
                                    =
                                    
                                       min
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                    (
                                    i
                                    ,
                                    j
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    â¦
                                    ,
                                    M
                                    ,
                                    
                                    i
                                    â 
                                    j
                                    )
                                 
                              
                           where M is the number of sampling points before the nth sequential sampling. It is concluded from Eq. (18) that when sampling points are sparse, the value of Î´ ought to be great. The knowledge about the response space is relatively inadequate. Hence, the sampling strategy will emphasize particularly on exploration. As more points are sampled, the value of Î´ will inevitably decrease. Meanwhile, the knowledge of the global response space is accumulating and the promising areas for global optimum will finally be located. Therefore, Î´ will take a relatively small value to bring exploitation over exploration. New sampling points are added around the promising areas in order to approximate them precisely for global optimum while the details of non-promising areas will be ignored. In this way, the number of true function calls will be remarkably reduced, which is of great significance for the computation-intensive structural design optimization tasks.

The validity of the adaptive sampling strategy is examined through the following problem.
                              
                                 (19)
                                 
                                    f
                                    (
                                    x
                                    )
                                    =
                                    
                                       
                                          
                                             4
                                             -
                                             2.1
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   x
                                                
                                                
                                                   1
                                                
                                                
                                                   4
                                                
                                             
                                             /
                                             3
                                          
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             4
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                                
                                                   2
                                                
                                             
                                             -
                                             4
                                          
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    â
                                    
                                       min
                                    
                                    -
                                    2
                                    â©½
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    â©½
                                    2
                                 
                              
                           
                        


                           Fig. 7
                            illustrates the contour line of the true objective function, and the global minimum xG
                            is f(0.02986,0.7613)=1.7395. In the implementation of the proposed sampling strategy, the method of Optimal Latin Hypercube Design is employed to select the initial five sampling points which are marked with circles in Fig. 6 and a genetic algorithm (GA) [11] is used to solve the optimization problem(17). Besides, the surrogate model is constructed based on the improved RBF network in Section 2.2. As shown in Fig. 8
                           , 24 sampling points are generated by the adaptive sampling method and distinguished in triangle. Sequence of the sampling points is shown in Table 1
                           . It is clear that the sampling points are exploring the response space in the beginning, when the promising area is located, exploiting strategy will take over control and new sampling points will gather around the promising area. The contour line of the final surrogate model is shown in Fig. 8 and it is clear that the promising area around xG
                            is captured precisely while other areas are relatively coarse.

SAO is proved to be a powerful optimization technique in solving structural optimization problems [40]. In mechanical practices, the structural analysis is usually based on the FEA in the high fidelity level (HFL), which is performed by professional CAE systems associated with specific CAD systems product design. However, CAD and CAE systems usually use different data formats to represent the design geometry [41,42]. Though the design and analysis models in essence describe the same object, the descriptions are so different that preparing a qualified CAE model from the CAD geometry is usually a laborious task. Therefore, the integration between CAD and CAE is requisite to enhance the application of the proposed SAO to engineering practices.

Several in-house integrated frameworks aimed to close the gap between CAD and CAE and reduce the product development cycle have been established. Park and Dang [6] presented a framework that performs the integration between the commercial CAD/CAE software, in which meta-modeling techniques including response surface methodology and radial basis function were applied to the structural optimization. Hamri et al. [43] introduced the HLT (High Level Topology) based on the mixed shape representation to simultaneously support the B-Rep and polyhedral model, which creates a robust link between CAD and CAE models, and finally a new software environment for CAD/CAE integration based on the HLT is presented. Hughes et al. [44] proposed the Isogeometric Analysis using complex NURBS (Non-Uniform Rational Basis Spline) geometry in the FEA applications directly, which allows models to be designed, calculated and adjusted in one step, using a common data set. By using splines in FEA instead of polynomial approximations, this method is the first computational approach offering the possibility of integrating FEA in conventional NURBS-based CAD design tools. Albers et al. [45] proposed a strategy for the development of the engine crankshaft with the integration for CAD, CAE and the genetic algorithm. Matin et al. [46] presents a knowledge-based, parametric, modular and feature-based integrated CAD/CAE system for the mold design. Xu and Chen [47] developed a completely automated product design system with the CAD/CAE integration and multi-objective optimization. Chang and Joo [48] presents an integrated system that supports optimization of general mechanical systems, including ground vehicles, which supports engineers to effectively search, in a CAD solid model, for a mechanism design with optimal kinematic and dynamic performance.

The most common and effective communication between CAD and CAE systems relies on external data exchange. A typical CAD/CAE integration process is that a CAD software package provides an exported geometry model in the standard formats such as IGES, STL or STEP, which can be parsed and divided into grids by the CAE analysis packages. But before the geometry can be fed to the CAE analysis, the original model has to be modified and enriched with some additional information to make it suitable to analysis. Most commercial CAD systems have provided special mechanisms that enable the users to implement repeated modeling procedures automatically. These automatic mechanisms can be executed based on the Application Programming Interfaces (APIs), such as the Pro/Toolkit of Pro/Engineer, the OpenAPI of Unigraphics and the CAA of CATIA. In addition, most of the high-end CAE packages are equipped with a parametric design language (PDL), e.g. the Adaptive Programming Design Language (APDL) of Ansys, the Patran Command Language (PCL) of Nastran et al. These PDLs are usually structured scripting languages by which the designers can import the model, assign materials, loads, and boundary conditions. Moreover, the required analysis results can be obtained from the output database automatically by programming as well. Based on these APIs and PDLs, the collaboration between CAD and CAE systems is greatly facilitated.

As shown in Fig. 9
                        , the structural design optimization framework is developed based on the SAO algorithm associating with the integration between CAD and CAE. The framework consists of two main parts: the proposed SAO algorithm and the CAD/CAE integration mechanism. The collaboration between these two parts contributes to an effective structural design optimization framework.

As shown in Fig. 9, the implementation of the proposed SAO is roughly divided into four stages including Initial stage, Approximation stage, Termination criteria and Sampling stage, which are elaborated as follows:

When the optimization problem is determined, the m-dimensional design variable is first scaled into an m-dimensional unit hypercube, then Optimal Latin Hypercube Design (OLHD) method is used to sample in the unit hypercube. The number n of sampling points is generally estimated based on the following rule:
                                 
                                    (20)
                                    
                                       n
                                       =
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         5
                                                         m
                                                         â¼
                                                         10
                                                         m
                                                      
                                                      
                                                         m
                                                         â©½
                                                         10
                                                      
                                                   
                                                   
                                                      
                                                         100
                                                      
                                                      
                                                         m
                                                         >
                                                         10
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              At last of this stage the objective function and constraints of the sampling points are evaluated by invoking the integration junction-box to run the CAD/CAE integration based FEA analysis. The responses and the corresponding sampling points constitute the initial sample set.

Based on the sample set, surrogate models of the objective function and constraints are constructed. Because of the high fit efficiency, the RBF network is utilized to construct the surrogate models. The proposed estimate of the width of basis function based on the local density of sampling points has good performance for both uniform and non-uniform sampling points. At last, GA algorithm [11] is employed to obtain the optimum of the surrogate-based optimization problem. The constraints are handled with the penalty method.

Termination of the proposed SAO is determined by the following criteria:
                                 
                                    (1)
                                    If the relative distance between the optimal solutions of two successive iterations is less than 1â°, then evaluate criterion (2). Otherwise, SAO will proceed to the Sampling stage.

If the relative error between the two successive iterationsâ optimal objective functions with the constraints imposed on using a penalty method is less than 0.0001, then evaluate criterion (3). Otherwise, SAO will proceed to the Sampling stage.

If the relative error between the objective functions of the surrogate model and the true model is less than 0.0001, the convergence is reached and the proposed SAO algorithm will be terminated. Otherwise, SAO will proceed to the Sampling stage.

In this stage, the minimum distance Î´ between points in the sample set is first calculated. Based on the surrogate model constructed in Approximation stage, the adaptive sampling is performed by solving the optimization problem (17) using the GA algorithm. Finally the objective function and constraints at the optimal solution are evaluated by invoking the integration junction-box to run the CAD/CAE integration based FEA analysis. The optimal solution together with its true response of the objective function and constraints is added to the sample set to update the surrogate model in the next iteration.

To facilitate the integration between CAD and CAE software packages and application of SAO, an integration junction-box is developed, as shown in Fig. 9.

On the one side, the proposed junction-box provides an integration mechanism to bridge the gap between CAD and CAE domains. The integration junction-box invokes the CAD package to generate the model according to the geometry parameters and export the model to the designated format suitable to CAE analysis in an automatic fashion based on the software APIs. The junction-box saves the exported geometry data file to the specified working directory, and then executes the CAE system to play the predefined journal file complied by its embedded PDL, which imports the exported geometry data file from the working directory, generates the FEA model automatically based on the setting parameters (Material, loads, B.C. and Mesh properties), this setting parameters are set up by designers manually beforehand and keep invariable during optimization process. After the FEA model is generated, the CAE solver is invoked and the predefined structural performance parameters are abstracted from the analysis results of the CAE solver. As an external controller, the integration junction-box controls the execution sequence of CAD and CAE activities and smooths the information transfer between them.

On the other side, the integration junction-box keeps the complicated integration process between CAD and CAE inside a âblack boxâ, which hides the implementation details from the user, and presents only the interfaces (input/output) to it, as shown in Fig. 10
                           . The integration junction-box provides a straightforward mechanism to link various optimization techniques with HFL structural analysis. When the proposed SAO is applied to the structural design problems, it only needs to designate design variables from the input interfaces and objectives as well as constraints from the output interfaces. The originally laborious task to integrate CAD and CAE software systems is now deposited to the junction-box, which handles it in an automatic fashion. Therefore, the association between the proposed SAO with HFL structural analysis is greatly facilitated by the integration junction-box.

In order to realize the proposed framework, the chosen CAD and CAE software packages should support automation, which means that all the tasks can be programmed in APIs and performed in batch mode [6]. Most modern high-end CAD and CAE software packages satisfy the functional requirements, and the engineering designers can implement the proposed integrated framework depending on their available tools and individual preference.

In this study, we choose the combination of Pro/ENGINEER and ANSYS to establish the proposed integration framework. The API library of Pro/Toolkit provided by Pro/ENGINEER helps users to compile a dynamic link library (dll) file, which extracts a couple of main geometry parameters to drive the modeling process automatically. The CAE analysis tasks can be recorded and replayed by APDL, a macro programming language provided by ANSYS. The neutral data format IGES is selected to transfer the geometric information from CAD to CAE. Besides, the SAO algorithm and the integration junction-box are developed using Java to make an open and automatic integration system for solving the structural optimization problems.

In this section, two case studies from simple to complex, from low dimension to moderate-dimension are taken from the engineering practices to investigate the efficacy of the proposed framework. The effectiveness and robustness of the proposed SAO algorithm is validated in comparison with other optimization techniques in this section as well.

The design of an automobile component [1] taken from the automotive industry is selected as the first test case. The proposed structural design optimization framework is used to perform the optimization problem. The CAD model generated in the CAD software Pro/Engineer is present in Fig. 11
                        . As shown in Fig. 12
                        , four geometry parameters including d1, d2, d3 and d4 are selected as design variables to drive the modeling process. The feasible range of the design variables is present in Table 2
                        . The FEA analysis in ANSYS is recorded by an APDL file, in which all analysis setting parameters are embedded. Fig. 13
                         depicts the corresponding CAE model from ANSYS. All degree of freedom on upper and lower connection regions are restricted. The component is subjected to the force F
                        =5.4kN. The materialâs Youngâs modulus and Poissonâs ratio are specified as 72GPa and 0.3. The objective function of the optimization problem is minimization of the volume while the maximum stress is constrained to be less than 280MPa.

The dll file for CAD modeling and APDL file for CAE analysis are deposited to the integration junction-box to construct the connection between them. To testify the efficacy of the presented approach, the proposed SAO algorithm as well as other optimization techniques including GA and PSO is connected to the integration junction-box in an easy way to carry out the test case, respectively. The number of initial sampling points for the SAO is set as 40. In addition, the number of individuals of the population for GA is 40 and the swarm for PSO is 20. Ten independent runs are performed for the three methods to eliminate statistical influence. The best and worst optimization results are elaborated in Table 3
                        . With respect to the best results, the optimal volumes of 320.99cm3 and 326.71cm3 are found after 55 iterations (2200 FEA evaluations) and 90 iterations (1800 FEA evaluations), respectively. Comparatively, the proposed approach requires only 157 FEA evaluations to find the optimal result of 312.89cm3. Figs. 14 and 15
                        
                         records the iteration histories of the convergence criterions and the objective of volume in the optimization process of the SAO algorithm, respectively. It is clear from Fig. 14 that the termination criteria are satisfied after 114 iterations and Fig. 15 shows that the minimal volume of 312.89cm3 is found. The total FEA evaluations during the optimization consist of three parts: 40 sampling points, 114 optimization iterations and 3 evaluations of the termination criterion 3. The stress distribution of the optimal structure is depicted in Fig. 16
                        .

It is clear from this test case that the proposed SAO algorithm is provided with the global optimizing ability as GA and PSO, but the number of computation-intensive FEA evaluation calls is reduced from the order of 103 by GA or PSO to 102 by SAO, thus the structural design efficiency is well improved. Moreover, the dedicated CAD/CAE integration junction-box facilitates the cooperation between optimizers with the HFL structural analysis and extends the application of SAO to engineering practices.

This section presents the design of a moderate-dimensional case study of a bracket structure based on the proposed structural design framework. The bracket serves as the connection structure in the satellites as shown in Fig. 17
                        . As depicted in Fig. 18
                        , eleven parameters that significantly affect the performance of the bracket are selected as design variables. Table 4
                         presents the feasible range of the design variables. The CAE model of the bracket is shown in Fig. 19
                        . Youngâs modulus and Poissonâs ratio are settled as 200GPa and 0.3. The bracket is subjected to a stretching force and a bending moment induced by the forces P1=4.7kN and P2=4.2kN loaded at the center of such screws as L1, L2, L3 and L4. In addition, the bracket is fixed at the screws including R1, R2, R3 and R4. The optimization objective is to minimize the volume while the maximum stress is constrained to be less than 200MPa and the total displacement less than 2cm.

The proposed structural design framework is used to solve this optimization problem and the number of initial sampling points is settled as 100. In this test case, the proposed approach is also benchmarked against other optimization techniques as shown in Table 5
                        . Pure GA with a population of 50 individuals and PSO with a swarm of 40 individuals are also used to solve the optimization problem. Due to the computation costs, the optimization processes by GA and PSO are terminated before convergence. As shown in Table 5, the optimal volume of 31493.33cm3 is found after 120 iterations (6000 FEA evaluations) by GA and 31510.26cm3 after 140 iterations (5600 FEA evaluations) by PSO. Ten independent runs are performed by the proposed SAO algorithm and the best and worst results obtained are listed in Table 5. Figs. 20 and 21
                        
                         record the iteration histories of the design optimization process for the best result, which indicates that the proposed SAO requires only 278 iterations to converge to the optimal result of 31081.48cm3. The number of FEA evaluations is 381 in sum (100 sampling points, 278 optimization iterations and 3 evaluations of the termination criterion 3). The deformation and stress distribution of the optimized bracket is depicted in Fig. 22
                        .

As for this test case, the FEA analysis is a bit time-consuming and more design variables are selected, which makes the optimization techniques such as GA and PSO hard to operate. Due to the advantages of the proposed SAO algorithm, it preserves the ability to find the global optimum at quite low costs, indicating the proposed SAO an effective optimization method for structural design optimization in mechanism practices.

@&#CONCLUSION@&#

Modern engineering design processes often rely on complex computer-aided simulations to evaluate candidate designs. This research presents a structural design optimization framework based on the improved SAO algorithm in conjunction with the CAD/CAE integration. The approximation technique and the sampling strategy are the two key factors for a successful SAO algorithm. In this paper, a new method based on the local density of sampling points and the technique of cross validation is proposed to determine the width of Gaussian kernel functions, which enhances the performance of the RBF network. Moreover, an adaptive sampling strategy is developed to make a balance between global exploration and local exploitation. The improved SAO algorithm offers such benefits as easy connections to simulation programs, ability to render a global optimum of the design space and high computational efficiency, which makes it an ideal optimization technique for structural design problems.

In order to widen the applications of the SAO algorithm in the mechanical practices, an open framework is developed to associate SAO with CAD/CAE integration, which allows the incorporation between popular commercial CAD and CAE packages in a collaborative environment. The CAD/CAE integration helps to exploit each of them thoroughly and expand the SAO algorithm to various complex structural design optimization problems. The feasibility, convenience and efficacy of the proposed structural design optimization framework have been investigated through two case studies. Furthermore, the effectiveness and computational efficiency of the improved SAO algorithm are benchmarked against other optimization approaches as well. The number of the time-consuming FEA evaluations to find the optimum is reduced by 1â2 orders of magnitude by the enhanced SAO algorithm. In a word, the proposed integrated framework proves to be an adequate strategy for handling structural design optimization problems effectively and efficiently.

@&#ACKNOWLEDGEMENTS@&#

The authors acknowledge Prof. Derek Ingham in College of Environmental and Materials Engineering of Leeds Uni. for his advices and comments throughout this work.

@&#REFERENCES@&#

