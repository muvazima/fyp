@&#MAIN-TITLE@&#Joint view-identity manifold for infrared target tracking and recognition

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a new joint view-identity manifold (JVIM) for multi-view shape modeling.


                        
                        
                           
                           JVIM is well-suited for target tracking and recognition (ATR) in infrared (IR) imagery.


                        
                        
                           
                           We propose a new GPLVM-based algorithm for JVIM learning and inference.


                        
                        
                           
                           Experimental results on both the synthetic CAD data and recent IR database demonstrate JVIM’s advantages over several recent shape models.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Automatic target tracking and recognition

Manifold learning for shape modeling

Generative models

GPLVM

Shape interpolation

@&#ABSTRACT@&#


               
               
                  We propose a new joint view-identity manifold (JVIM) for multi-view and multi-target shape modeling that is well-suited for automated target tracking and recognition (ATR) in infrared imagery. As a shape generative model, JVIM features a novel manifold structure that imposes a conditional dependency between the two shape-related factors, view and identity, in a unified latent space, which is embedded with one view-independent identity manifold and infinite identity-dependent view manifolds. A modified local linear Gaussian process latent variable model (LL-GPLVM) is proposed for JVIM learning where a stochastic gradient descent method is used to improve the learning efficiency. We also develop a local inference technique to speed up JVIM-based shape interpolation. Due to its probabilistic and continuous nature, JVIM provides effective shape synthesis and supports robust ATR inference for both known and unknown target types under arbitrary views. Experiments on both synthetic data and the SENSIAC infrared ATR database demonstrate the advantages of the proposed method over several existing techniques both qualitatively and quantitatively.
               
            

@&#INTRODUCTION@&#

With the ability to detect, track and recognize both known and unknown targets, automated target tracking and recognition (ATR) is widely used in a variety of military and civilian applications. Most ATR algorithms involve a motion (or dynamic) model and an appearance representation of the target-of-interest that can play complementary roles for ATR inference [1]. Particularly, appearance modeling is a critical issue in vision-based ATR methods since the target’s appearance can change dramatically due to the variation of viewpoints and its own 3D structures. An ideal model should have a few attributes. (1) It should be flexible enough to adapt to different imaging conditions (e.g., different viewpoints) and a wide range of possible target types; (2) It should be accurate to reflect detailed appearance variability; (3) It should be robust under noise and occlusion. In this work, we are primarily interested in the first aspect, and our research is conducted in the context of infrared (IR) ATR, which is challenging due to a host of factors including low target contrast, heavy clutter, low resolution, poor signal-to-noise ratios (SNR), and the variations of target appearance resulting from changing environmental and imaging conditions [2]. Specifically, we study multi-view shape-based target modeling due to its simplicity and robustness for most ATR applications.

There are three main approaches for handling view changes in IR appearance modeling. First, the single view-based methods usually require a learning mechanism to update the model “on-the-fly”, e.g., [3,4]. The tracking and recognition results could be sensitive to the viewpoint initialization and the learning strategy. Second, the multi-view methods use multiple snapshots to approximate or interpolate unknown or intermediate views from a given set of training samples. For example, templates [3,5], histograms [6], edge features [7], and SIFT [8], etc., are popular non-parametric representations for these snapshots. When needed, appearance interpolation can be performed in the high-dimensional data space or in a low-dimensional latent space [9]. This is theoretically supported by the psychophysical evidence presented in [10], which suggests that the human visual system is better described as recognizing objects by 2D view interpolation than by alignment or other methods that rely on object-centered 3D models. However, these methods can normally only deal with known objects by involving a discrete identity variable. Third, a 3D target model can also be used to handle the view-induced appearance changes, e.g., [11], and a 3D to 2D projection is generally required to project the 3D model onto the 2D image plane subject to the view angle. These methods are mainly focused on known targets and may require substantial memory and computational resources to operate on 3D models.

On the other hand, manifold learning has been proven to be a popular approach to shape modeling which creates a variety of meaningful shape priors to assist or constrain the inference process for both visible-band and infrared vision applications, e.g., [12]. Normally, a shape manifold embedding in a low-dimensional latent space can be learned from a set of shape exemplars which can effectively capture the shape variability due to different views, objects, poses or other shape-related factors. For example, in [13] a non-linear tensor decomposition method was used to learn an identity-independent view manifold for multi-view dynamic motion data modeling. In [9], a cylindrical manifold embedding was used to represent 1D hand pose variation and cyclic viewpoint variation and applied to IR hand modeling. In [14,15], a couplet of view and identity manifolds (CVIM) was applied to shape modeling where two manifolds were coupled independently into a compact shape generative model via non-linear tensor decomposition.

In this paper, we propose a new joint view-identity manifold (JVIM) for multi-view and multi-target shape modeling that is suited for a variety of ATR applications. In JVIM, the two shape related variables, identity and view, are jointly represented through a shared manifold structure which involve one view-independent identity manifold and infinite identity-dependent view manifolds in a unified latent space. JVIM is learned by a modified topologically constrained GPLVM (LL-GPLVM) [16] where two joint topology priors, one for view manifolds and the other for the identity manifold, were incorporated to encourage a sensible manifold in the low-dimensional latent space. Specifically, the issue of local neighborhood selection along the topology priors plays three important roles in JVIM learning and inference. First, the topology constraint is specified by using local linear embedding [17] that involves a set of neighbors for each reference point in the latent space. Second, inspired by the stochastic gradient descent method in [18], we develop a local model learning algorithm that involves topology-aware neighborhood selection. Third, in a similar spirit, a local inference technique is proposed to support fast shape interpolation where a new shape is synthesized by involving a small set of neighbors instead of the whole training set.

Essentially, the proposed JVIM is a new latent variable model that has some distinctions from it peers and precedents. First, compared with most GPLVM-based methods [19–21,16] where only one continuous-valued variable (e.g., the pose in human motion modeling) is explicitly defined in the latent space, JVIM supports multiple continuous-valued latent variables in a joint latent space (both view and identity). Also, different from non-linear tensor techniques [22,9,14] which provide a multi-factor deterministic representation via nonlinear mapping followed by tensor decomposition, JVIM is learned by an iterative probabilistic optimization that not only provides the uncertainty for each interpolated shape, but also can be used as a shape prior for statistical inference. Additionally, the stochastic gradient-based learning and local inference make JVIM efficient and practical for real-world ATR applications where a large number of training samples is usually involved. In this work, we evaluate JVIM against Nearest Neighbor (NN), GPLVM [19,20], LL-GPLVM [16] and CVIM [14] for multi-view shape modeling on synthetic CAD data, and examine its performance on the SENSIAC infrared ATR database [23] by comparing with NN, LL-GPLVM and CVIM.

The remainder of this paper is organized as follows. Related work in the area of manifold-based shape modeling is reviewed in Section 2. Some background materials are presented in Section 3. JVIM is discussed in detail in Section 4 and the results of shape interpolation and ATR experiments against real IR data are given in Section 5. Finally, we draw conclusions in Section 6.

@&#RELATED WORK@&#

ATR research has traditionally focused on three main issues: appearance representation, motion modeling, and filtering/inferencing. Our emphasis here is on the first issue, and more specifically, we are interested in shape-based appearance modeling that is efficient and robust for IR-based ATR applications. In view of the advantages of non-linear dimensionality reduction or manifold learning over the linear approaches [24], our review on shape modeling takes a manifold-based perspective where there are three main categories as illustrated in Fig. 1
                     : geometrically-inspired methods, latent variable models, and the hybrid approaches that combine the ideas of the previous two.

The geometrically-inspired methods, including IsoMap [25,26], Local Linear Embedding (LLE) [17], Diffusion maps [27,28], Laplacian Eigenmaps [29,30], seek to preserve the geometric relationships among the high-dimensional data in the low-dimensional space. Isomap is a quasi-isometric mapping method that finds a high-dimensional-to-low-dimensional transformation which approximately preserves a geodesic distance metric. In [26], Isomap was used to build a model for shape clustering where similar objects were clustered together, suggesting an approximate isometry between the shape space and the low-dimensional embedding. Diffusion maps accomplish dimensionality reduction by reorganizing data according to their underlying geometry. In [28], a diffusion maps method was used to model a group of similar shapes as a manifold which was used as a shape prior-based energy term to attract arbitrary shapes towards the pre-learned manifold. A Laplacian Eigenmaps method was used in [30] to learn a low-dimensional manifold as a shape prior for image segmentation.

Principal Components Analysis (PCA) is a linear dimensionality reduction approach that can be used to find a low-dimensional embedding for shape modeling. For example, PCA was used to represent a shape by a set of well-defined landmark points in [31], leading to the active shape model (ASM). A regularized ASM (R-ASM) model for shape alignment was proposed to improve the smoothness of the extracted shape contour. Probabilistic PCA (PPCA) is an extension of PCA. In [32], it was used to build a probabilistic shape model which not only reconstructs the full shape from partial information, but also provides the reconstruction confidence. Kernel PCA (KPCA), a nonlinear variant of PCA, is promising in revealing the complicated nonlinear correlation among input data. In [33], KPCA was combined with geometric active contours (GAC) to create a new shape-aware energy function that leads to promising segmentation results.

GPLVM is a nonlinear generalization of PPCA that provides a probabilistic representation of the high-dimensional data and the uncertainty in the latent space [19,20]. Relevant prior information can be added to this model to improve efficiency for data modeling. For example, the Gaussian Process Dynamical Model (GPDM) augments a dynamical model in the latent space to capture the temporal continuation of human motion data. In [34,35], GPLVM was used to learn a latent space for multi-view or multi-pose shape modeling where segmentation and tracking can be unified jointly in an image-driven optimization process in the latent shape space.

As a higher order extension of PCA, tensor decomposition can decouple multiple latent factors from high-dimensional data. For example, in [36], tensor decomposition was used to factorize multi-view face images by separating the view and identity factors along with corresponding subspaces. In [37], tensor decomposition was used to learn a subspace for appearance modeling, and an incremental learning method was developed to update this subspace. The tensor method was proposed in [38] to decompose the intrinsic body configuration (content) from the appearance (style) of a person. In [13,22], a kernelized nonlinear tensor decomposition was developed to represent multi-view dynamic motion data.

Recent research has provided interesting results by combing the two approaches above for more meaningful manifold learning. For example, in [14,15], CVIM was proposed to couple the view and identity manifolds for shape modeling, where a key issue is to determine the manifold topology of the identity manifold. A class-constrained shortest-closed-loop method was used to find an optimal topology for ensuring that similar targets and those in the same class are adjacent along the identity manifold. This is reminiscent of the idea in Isomap that employs the shortest-path to find the geodesic distance between two data points. Also, GPLVM (LL-GPLVM) in [16] incorporates an LLE-based topology constraint to learn a mixed motion model for both “walking” and “running”. This motion model not only reflects the common cyclic nature of two motion types, but also supports a smooth transition between them. LL-GPVLM takes advantage of the geometric intuition from LLE and the power of probabilistic optimization from GPLVM. However, LL-GPLVM is not directly applicable to high-dimensional shape data (i.e., silhouettes) due to its computational complexity.

In this paper, LL-GPLVM will be improved for multi-view and multi-target shape modeling for the first time. There are three main contributions in this work. First, by representing the two shape related variables, identity and view, jointly in a unified latent space and by providing a probabilistic mapping from the latent space to the shape space, JVIM provides more accurate and efficient shape interpolation as well as robust ATR inference, compared to its peers. Second, we incorporate three enhancements to make LL-GPVLM more applicable for shape modeling: DCT-based shape representation [34], the stochastic gradient descent algorithm [18] to speed up model learning and local inference for fast shape interpolation [39]. Third, we design a novel neighbor selection method that is essential to efficient and effective JVIM learning and inference by assigning a local neighborhood for each reference point along the topology prior in the latent space.

In this section, we first briefly review GPLVM and LL-GPLVM, then we discuss DCT-based shape representation and the CVIM proposed in [14].

GPLVM is a flexible, non-linear dimensionality reduction method that represents a set of high-dimensional data Y
                        ={y
                        1,…,
                        y
                        
                           N
                        }
                           T
                        , y
                        
                           i
                        
                        ∈
                        R
                        
                           d
                        , in a low-dimensional latent space X
                        ={x
                        1,…,
                        x
                        
                           N
                        }
                           T
                        ,x
                        
                           i
                        
                        ∈
                        R
                        
                           q
                        , along with a Gaussian process-based nonlinear mapping from the latent space to the data space. GPLVM is learned by maximizing the likelihood defined as
                           
                              (1)
                              
                                 p
                                 (
                                 Y
                                 ∣
                                 X
                                 ,
                                 β
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   2
                                                   π
                                                   )
                                                
                                                
                                                   Nd
                                                
                                             
                                             ∣
                                             K
                                             
                                                
                                                   ∣
                                                
                                                
                                                   d
                                                
                                             
                                          
                                       
                                    
                                 
                                 exp
                                 (
                                 -
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 tr
                                 (
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       YY
                                    
                                    
                                       T
                                    
                                 
                                 )
                                 )
                                 ,
                              
                           
                        where β denotes the kernel hyper-parameters used in the covariance matrix K
                        
                           Y
                        . In practice, a gradient descent method is used to optimize the negative log-likelihood function defined below with respect to X and β:
                           
                              (2)
                              
                                 L
                                 =
                                 -
                                 log
                                 p
                                 (
                                 Y
                                 ∣
                                 X
                                 ,
                                 β
                                 )
                                 =
                                 
                                    
                                       d
                                    
                                    
                                       2
                                    
                                 
                                 ln
                                 ∣
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                 
                                 ∣
                                 +
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 tr
                                 (
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       YY
                                    
                                    
                                       T
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       dN
                                    
                                    
                                       2
                                    
                                 
                                 ln
                                 (
                                 2
                                 π
                                 )
                                 .
                              
                           
                        In [35], GPLVM was used for learning a shape prior (with one factor, i.e., view or pose) for joint tracking and segmentation. Due to the lack of a topology prior, the GPLVM-based shape model is usually less structured. As shown in Fig. 2
                        a where a set of multi-view shapes (with changing azimuth and elevation angles) for a target type (i.e., SUV) was used for GPLVM learning, the learned multi-view shape manifold (i.e., view manifold) is weakly defined in the latent space.

Local linear GPLVM (LL-GPLVM) was proposed in [16] for complex motion modeling where a LLE-based topological constraint is incorporated to unify diverse motion data via a pre-defined cylinder topological prior in the latent space. The objective function for LL-GPLVM is given by
                           
                              (3)
                              
                                 
                                    
                                       
                                       
                                          
                                             L
                                             =
                                             -
                                             log
                                             p
                                             (
                                             Y
                                             ∣
                                             X
                                             ,
                                             β
                                             )
                                             p
                                             (
                                             X
                                             ∣
                                             w
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             =
                                             
                                                
                                                   d
                                                
                                                
                                                   2
                                                
                                             
                                             ln
                                             ∣
                                             
                                                
                                                   K
                                                
                                                
                                                   Y
                                                
                                             
                                             ∣
                                             +
                                             
                                                
                                                   1
                                                
                                                
                                                   2
                                                
                                             
                                             tr
                                             (
                                             
                                                
                                                   K
                                                
                                                
                                                   Y
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   YY
                                                
                                                
                                                   T
                                                
                                             
                                             )
                                             +
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                             ∥
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                             
                                                
                                                   w
                                                
                                                
                                                   ij
                                                
                                             
                                             
                                                
                                                   x
                                                
                                                
                                                   j
                                                
                                             
                                             
                                                
                                                   ∥
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             C
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where C is a constant, σ
                        2 adjusts the strength of the topology constraint, and w
                        ={w
                        
                           ij
                        } are the weights that best reconstruct each latent point x
                        
                           i
                         from its neighbors by minimizing 
                           
                              Φ
                              (
                              w
                              )
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                              ∥
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    ∥
                                 
                                 
                                    2
                                 
                              
                           
                        .

Compared with GPLVM in the context of motion modeling, LL-GPLVM can handle different subjects as well as multiple motion patterns. Here we extend LL-GPLVM for multi-view shape modeling by applying a hemisphere as the topology prior to reflect the azimuth and elevation angles (more details in Section 4). Fig. 2b shows the latent space learned by LL-GPLVM using the same training set as Fig. 2a. The topology prior makes the view manifold better structured and more importantly, preserve the neighborhood relationship which is corrupted in that of GPLVM. Still, LL-GPLVM in its current form can only handle the view factor and we have to learn a shape model for each target individually.

The signed distance transform is often used to represent silhouette-based shapes [13]. Let I(x) be a silhouette shape and x a pixel in I, T
                        ={t
                        
                           i
                        } the set of foreground pixels, while T
                        
                           C
                         the set of background pixels, and ∂T
                        ={a
                        
                           i
                        } the set of pixels along the object boundary, the signed distance transform of I(x), i.e., I
                        SDT(x), is
                           
                              (4)
                              
                                 
                                    
                                       I
                                    
                                    
                                       SDT
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            
                                                               
                                                                  a
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            ∈
                                                            ∂
                                                            I
                                                         
                                                      
                                                   
                                                   ∥
                                                   x
                                                   -
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∥
                                                
                                                
                                                   x
                                                   ∈
                                                   T
                                                
                                             
                                             
                                                
                                                   -
                                                   
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            
                                                               
                                                                  a
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            ∈
                                                            ∂
                                                            I
                                                         
                                                      
                                                   
                                                   ∥
                                                   x
                                                   -
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∥
                                                
                                                
                                                   x
                                                   ∈
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         C
                                                      
                                                   
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where ∥·∥ denotes the Euclidean distance between two pixels. To further reduce the dimensionality of I
                        SDT(x), a simple yet efficient DCT-based descriptor proposed in [34] is used here for GPLVM-based shape prior learning. As shown in Fig. 3a
                        , a target chip of size 120×80 pixels can be reconstructed from the quantized DCT by retaining only 30×30 (less than 10%) coefficients. Moreover, this DCT-based representation can be used to reconstruct a shape at arbitrary magnification factors by appropriately zero-padding DCT coefficients prior to inverse DCT, avoiding additional zooming or shrinking operations to accommodate the scaling factor.

CVIM proposed in [14] for ATR applies kernelized tensor decomposition followed by a new identity manifold learning technique, as shown in Fig. 3b, where the identity (i.e., α) and view (i.e., θ and ϕ for azimuth and elevation angles), are represented independently by a 1D closed-loop identity manifold and a hemisphere-shaped view manifold. It may not be intuitive to assume the identity manifold to be a 1D closed-loop. Three considerations lead to this heuristic simplification. First, all targets in ATR are man-made ground vehicles which have different degrees of similarity, thus a closed structure is more reasonable than an open one. Second, the 1D structure is more practical considering a relative small set of training targets. Third, a 1D closed loop facilitates statistical inference. A class-constrained shortest-closed-path method was proposed to find the optimal topology of the identity manifold (i.e., the ordering relationship among training targets) which ensures the targets of the same class or of similar shapes will stay closer along the identity manifold. For simplicity, the identity manifold is further mapped into a circle to ease computation. Thus α
                        ∈[0,2π), θ
                        ∈[0,2π), and ϕ
                        ∈[0,
                        π/2) are all an angular variable. As a shape generative model, CVIM defines a mapping from (α,
                        θ,
                        ϕ) to the shape space via a tensor product as:
                           
                              (5)
                              
                                 Φ
                                 (
                                 α
                                 ,
                                 θ
                                 )
                                 =
                                 A
                                 
                                    
                                       ×
                                    
                                    
                                       3
                                    
                                 
                                 i
                                 (
                                 α
                                 )
                                 
                                    
                                       ×
                                    
                                    
                                       2
                                    
                                 
                                 Ψ
                                 (
                                 θ
                                 ,
                                 ϕ
                                 )
                                 ,
                              
                           
                        where i(α) is a target-specific identity vector defined along the identity manifold in the tensor coefficient space, Ψ(θ,
                        ϕ) is a generalized radial basis function (GRBF)-based kernel mapping given a view point (θ and ϕ), A is the core tensor, and ×
                           j
                         denotes the mode-j tensor product. The continuous nature of the identity and view manifolds allows CVIM to handle both known and unknown targets observed under arbitrary viewpoints in the context of ATR applications.

We first provide an overview of JVIM, followed by the detailed problem formulation. Then three important computational issues are presented, with a discussion on neighbor selection in the latent space for JVIM learning and inference.

As shown in Fig. 4
                        , the proposed JVIM is learned by a modified LL-GPLVM from a set of shapes created from 3D CAD models and represented by the DCT-based shape descriptor, and it encapsulates one view-independent identity manifold and infinite identity-dependent view manifolds. As a shape generative model, JVIM provides a probabilistic GP mapping from the latent space to the shape space. For example, a new shape can be generated by (1) drawing a sample along the view-independent identity manifold, (2) creating an identity-dependent view manifold, (3) drawing another sample along the view manifold, (4) synthesizing a new shape via the GP mapping. JVIM has a few important attributes. First, JVIM imposes a conditional dependency between two shape-related factors (i.e., view and identity), in light of the fact that different targets need different view manifolds to reflect their distinct 3D structures. Second, JVIM is a probabilistic latent variable model that is amenable to statistical shape inference by providing useful priors via the semantically meaningful manifolds. Third, the JVIM learning incorporates two topology priors, i.e., a circle for the view-independent identity manifold where the manifold topology (i.e., the ordering relationship among all training targets) is obtained in the same way as that in CVIM (Section 3.3 hemisphere for each view manifold to represent the azimuth and elevation angles), but the distribution of latent points is optimized with respect to the training data.

JVIM is a 3D manifold embedded in a 5D latent space, and each latent point is denoted by x
                        
                           i
                        
                        ={θ
                        
                           i
                        ,
                        ϕ
                        
                           i
                        ,
                        α
                        
                           i
                        }. If α
                        
                           i
                        
                        =
                        α
                        
                           j
                        ,
                        x
                        
                           i
                         and x
                        
                           j
                         on the same identity-dependent view manifold. Also, x
                        
                           i
                         can be represented in its embedded space as
                           
                              (6)
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 [
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             θ
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             ϕ
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             α
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 ]
                                 ,
                              
                           
                        where
                           
                              (7)
                              
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             θ
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             ϕ
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 [
                                 cos
                                 (
                                 
                                    
                                       ϕ
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 cos
                                 (
                                 
                                    
                                       θ
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 cos
                                 (
                                 
                                    
                                       ϕ
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 sin
                                 (
                                 
                                    
                                       θ
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 sin
                                 (
                                 
                                    
                                       ϕ
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ]
                                 ,
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             α
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 [
                                 cos
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 sin
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ]
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         follows a 2D hemisphere for each target and 
                           
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         a circle due to the topological priors used. We use LLE to encode the topology constraints in the latent space, and we extend the LL-GPLVM algorithm to learn JVIM.

Given N training shapes, let X
                        ={x
                        
                           i
                        ∣i
                        =1,…,
                        N} and X
                        ={X
                        
                           θ,ϕ
                        ,
                        X
                        
                           α
                        } where 
                           
                              
                                 
                                    X
                                 
                                 
                                    θ
                                    ,
                                    ϕ
                                 
                              
                              =
                              {
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ∣
                              i
                              =
                              1
                              ,
                              …
                              ,
                              N
                              }
                           
                         and 
                           
                              
                                 
                                    X
                                 
                                 
                                    α
                                 
                              
                              =
                              {
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ∣
                              i
                              =
                              1
                              ,
                              …
                              ,
                              N
                              }
                           
                         are in the view and identity subspace, respectively. The LLE-based topology prior of X is represented by p(X∣w) where w
                        ={w
                        
                           i,j
                        ∣i,j
                        =1,…,
                        N} is the LLE weight matrix (Section 4.3). Thus w is a sparse matrix with most entries zero. According to the conditional dependency between X
                        
                           α
                         and X
                        
                           θ,ϕ
                        , we can re-write p(X∣w) as
                           
                              (9)
                              
                                 p
                                 (
                                 X
                                 ∣
                                 w
                                 )
                                 =
                                 p
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       α
                                    
                                 
                                 ,
                                 
                                    
                                       X
                                    
                                    
                                       θ
                                       ,
                                       ϕ
                                    
                                 
                                 ∣
                                 w
                                 )
                                 =
                                 p
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       θ
                                       ,
                                       ϕ
                                    
                                 
                                 ∣
                                 
                                    
                                       X
                                    
                                    
                                       α
                                    
                                 
                                 ,
                                 w
                                 )
                                 p
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       α
                                    
                                 
                                 ∣
                                 w
                                 )
                                 ,
                              
                           
                        where we assume X
                        
                           α
                         and X
                        
                           θ,ϕ
                         share the same LLE coefficients w. Similar to (3), the objective function for JVIM learning is the negative log posterior:
                           
                              (10)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   L
                                                
                                                
                                                   JVIM
                                                
                                             
                                             =
                                             -
                                             log
                                             p
                                             (
                                             Y
                                             ∣
                                             X
                                             ,
                                             β
                                             )
                                             p
                                             (
                                             
                                                
                                                   X
                                                
                                                
                                                   θ
                                                   ,
                                                   ϕ
                                                
                                             
                                             ∣
                                             
                                                
                                                   X
                                                
                                                
                                                   α
                                                
                                             
                                             ,
                                             w
                                             )
                                             p
                                             (
                                             
                                                
                                                   X
                                                
                                                
                                                   α
                                                
                                             
                                             ∣
                                             w
                                             )
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                             =
                                             
                                                
                                                   L
                                                
                                                
                                                   D
                                                
                                             
                                             +
                                             
                                                
                                                   L
                                                
                                                
                                                   T
                                                
                                             
                                             +
                                             C
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where C is a constant and L
                        
                           D
                         the data term defined in (2) and
                           
                              (11)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   L
                                                
                                                
                                                   T
                                                
                                             
                                             =
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                             ∥
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                             
                                                
                                                   w
                                                
                                                
                                                   ij
                                                
                                             
                                             
                                                
                                                   x
                                                
                                                
                                                   j
                                                
                                             
                                             
                                                
                                                   ∥
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             =
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            
                                                               N
                                                            
                                                         
                                                      
                                                      ∥
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            
                                                               
                                                                  θ
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  ϕ
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               j
                                                               =
                                                               1
                                                            
                                                            
                                                               N
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            ij
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            
                                                               
                                                                  θ
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  ϕ
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ∥
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            
                                                               N
                                                            
                                                         
                                                      
                                                      ∥
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            
                                                               
                                                                  α
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               j
                                                               =
                                                               1
                                                            
                                                            
                                                               N
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            ij
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            
                                                               
                                                                  α
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ∥
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        which is the topology constrain term that can be further decomposed into two separate constraints in two subspaces. Due to a relatively large training dataset, the training algorithm used in [16] may not be efficient to learn JVIM. Also, JVIM-based shape reconstruction that usually involves all training data needs a simpler implementation to support fast shape inference in time-constrained applications.

An important issue in JVIM learning is neighbor selection for each latent point, which is needed to compute w in (9) for LLE-based topology configuration. For a given latent point 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              [
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ]
                           
                        , we choose two sets of neighbors according to two topological priors. Let 
                           
                              
                                 
                                    η
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    η
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         represent the index sets of the neighbors of similar identities and those of similar views, respectively. In other words, the first set is 
                           
                              {
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              ∣
                              j
                              ∈
                              
                                 
                                    η
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              }
                           
                         where 
                           
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                              ≈
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                        , and the second set is 
                           
                              {
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                              
                              ∣
                              k
                              ∈
                              
                                 
                                    η
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              }
                           
                         where 
                           
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                              ≈
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                        . The neighborhood size affects the complexity and strength of the topology constraint, which must be balanced with the data term associated with GPLVM-based dimensionality reduction. If the topology constraint is too strong, (i.e., with a large neighborhood), JVIM learning becomes ineffective due to the under-treatment of the data term. Alternatively, a very weak topology constraint (i.e., with a small neighborhood) leads to an unorganized JVIM which is also undesirable.

Let 
                           
                              
                                 
                                    η
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    η
                                 
                                 
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ⋃
                              
                                 
                                    η
                                 
                                 
                                    
                                       
                                          θ
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          ϕ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         represent the index set of all neighbors for x
                        
                           i
                        . All neighbors 
                           
                              
                                 
                                    {
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                    }
                                 
                                 
                                    j
                                    ∈
                                    
                                       
                                          η
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         are used to calculate the LLE-based topological-constrained weights w
                        
                           ij
                         in (11) by solving the linear system
                           
                              (12)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 1
                                 ,
                              
                           
                        ∀j
                        ∈
                        η
                        
                           i
                        , where
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         )
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                                
                                                   if
                                                   
                                                   j
                                                   ,
                                                   k
                                                   ∈
                                                   
                                                      
                                                         η
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   otherwise
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The weights are then scaled to satisfy 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                              
                              =
                              1
                           
                        . Since JVIM is embedded in a 5D latent space, C
                        
                           kj
                         in (12) are computed from each of the five dimensions according to
                           
                              (13)
                              
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                 
                                 =
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             4
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       C
                                    
                                    
                                       kj
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             5
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where
                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         kj
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   (
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   cos
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   cos
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   )
                                                   ×
                                                   (
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   cos
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   cos
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         kj
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   (
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   sin
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   sin
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   )
                                                   ×
                                                   (
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   sin
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   cos
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   sin
                                                   (
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         kj
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               3
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   (
                                                   sin
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   sin
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   )
                                                   (
                                                   sin
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   sin
                                                   (
                                                   
                                                      
                                                         ϕ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         kj
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               4
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   (
                                                   cos
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   cos
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   )
                                                   (
                                                   cos
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   cos
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         kj
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               5
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   =
                                                
                                                
                                                   (
                                                   sin
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   sin
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   )
                                                   )
                                                   (
                                                   sin
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   sin
                                                   (
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where the first three dimensions are for the view subspace and the last two the identity subspace.

JVIM learning is to minimize the objective function (10) with respect to X and the hyper-parameters β in the GP mapping. A gradient-based iterative method is used for optimization, and the gradient of L
                        
                           JVIM
                         with respect to X is obtained by
                           
                              (15)
                              
                                 
                                    
                                       ∂
                                       
                                          
                                             L
                                          
                                          
                                             JVIM
                                          
                                       
                                    
                                    
                                       ∂
                                       X
                                    
                                 
                                 =
                                 
                                    
                                       ∂
                                       
                                          
                                             L
                                          
                                          
                                             D
                                          
                                       
                                    
                                    
                                       ∂
                                       X
                                    
                                 
                                 +
                                 
                                    
                                       ∂
                                       
                                          
                                             L
                                          
                                          
                                             T
                                          
                                       
                                    
                                    
                                       ∂
                                       X
                                    
                                 
                                 =
                                 -
                                 (
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       YY
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 -
                                 d
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 )
                                 ·
                                 
                                    
                                       ∂
                                       
                                          
                                             K
                                          
                                          
                                             Y
                                          
                                       
                                    
                                    
                                       ∂
                                       X
                                    
                                 
                                 +
                                 
                                    
                                       ∂
                                       
                                          
                                             L
                                          
                                          
                                             T
                                          
                                       
                                    
                                    
                                       ∂
                                       X
                                    
                                 
                                 ,
                              
                           
                        and for a given latent point 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    ∂
                                    
                                       
                                          L
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    ∂
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         in (15) can be written as
                           
                              (16)
                              
                                 
                                    
                                       ∂
                                       
                                          
                                             L
                                          
                                          
                                             T
                                          
                                       
                                    
                                    
                                       ∂
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 2
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   N
                                                
                                             
                                          
                                          ∥
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                
                                                   N
                                                
                                             
                                          
                                          
                                             
                                                w
                                             
                                             
                                                ij
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          ∥
                                          +
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                
                                                   N
                                                
                                             
                                          
                                          ∥
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   =
                                                   1
                                                
                                                
                                                   N
                                                
                                             
                                          
                                          
                                             
                                                w
                                             
                                             
                                                jk
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                k
                                             
                                          
                                          ∥
                                          
                                             
                                                w
                                             
                                             
                                                ji
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        which is readily available from the pre-computed weight matrix w. The main computation of (15) is from 
                           
                              
                                 
                                    ∂
                                    
                                       
                                          L
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    ∂
                                    X
                                 
                              
                           
                        , which is an O(N
                        3) operation required at each iteration to compute the inverse of the covariance matrix K
                        
                           Y
                        (N
                        ×
                        N). For a large training data set, this can be computationally prohibitive, and we need to simplify the computation of 
                           
                              
                                 
                                    ∂
                                    
                                       
                                          L
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    ∂
                                    X
                                 
                              
                           
                        . We will take advantage of the inherent topological structure of JVIM to approximate 
                           
                              
                                 
                                    ∂
                                    
                                       
                                          L
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    ∂
                                    X
                                 
                              
                           
                         and we only focus on 
                           
                              
                                 
                                    ∂
                                    
                                       
                                          L
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    ∂
                                    X
                                 
                              
                           
                         in (15). Considering K
                        
                           Y
                         is relatively sparse under appropriate RBF kernels, a full Gaussian process (GP) can be approximated by multiple smaller local GPs, each of which only involves a small neighborhood around the point under optimization [39]. Furthermore, we adopt the stochastic gradient descent proposed in [18] to approximate (15). Thus 
                           
                              
                                 
                                    ∂
                                    
                                       
                                          L
                                       
                                       
                                          D
                                       
                                    
                                 
                                 
                                    ∂
                                    X
                                 
                              
                           
                         in (15) can be estimated locally from a neighborhood X
                        
                           R
                         of size M
                        1 for a reference point x
                        
                           r
                         according to
                           
                              (17)
                              
                                 
                                    
                                       ∂
                                       
                                          
                                             L
                                          
                                          
                                             D
                                          
                                       
                                    
                                    
                                       ∂
                                       
                                          
                                             X
                                          
                                          
                                             R
                                          
                                       
                                    
                                 
                                 ≈
                                 -
                                 (
                                 
                                    
                                       K
                                    
                                    
                                       R
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       R
                                    
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       R
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       R
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 -
                                 d
                                 
                                    
                                       K
                                    
                                    
                                       R
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 )
                                 ·
                                 
                                    
                                       ∂
                                       
                                          
                                             K
                                          
                                          
                                             R
                                          
                                       
                                    
                                    
                                       ∂
                                       
                                          
                                             X
                                          
                                          
                                             R
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where K
                        
                           R
                        (M
                        1
                        ×
                        M
                        1) is the kernel matrix of X
                        
                           R
                        , and Y
                        
                           R
                         is the set of corresponding data points. The method in [18] is a data-driven GPLVM approach without any manifold prior, and the neighborhood for each latent point has to be updated during each iteration. On the other hand, X
                        
                           R
                         for each latent point is fixed in this work due to the pre-defined topology prior in JVIM.

The pseudo-code for JVIM learning is shown in Table 1
                        . At each iteration, a reference point x
                        
                           r
                         is chosen randomly, then its neighborhood X
                        
                           R
                         (including x
                        
                           r
                        ) are updated by computing (15) along with the kernel parameters that are shared by all latent points. Thus, the gradient is estimated stochastically, locally and efficiently. The details on neighbor selection will be discussed in Section 4.6.

After learning, although all identity-dependent view manifolds in JVIM share the same hemispherical-shaped topology, the distribution of latent points corresponding to different views are quite different. In other words, a target of a more complex 3D structure will have latent points more spread than the one with a simpler 3D structure. This is expected since a view manifold in JVIM should reflect the shape variability under different views that will enlarge as the complexity of the 3D structure increases. As for the identity manifold in JVIM that is circular-shaped, it is also conceivable that the targets with similar 3D structures will stay closer while those dissimilar ones will be more apart.

JVIM inference is to infer an optimal latent point that provides the best match for a given observation (i.e., a segmented shape). In the context of sequential ATR, the inference process usually involves a dynamic model in the latent space and an observation model to evaluate the similarity between the interpolated shape and the observed one. In this work, we adopt the particle filter-based tracking framework in [14], and we will focus on JVIM-based shape interpolation that is a GP mapping from the latent space to the shape space [19]:
                           
                              (18)
                              
                                 p
                                 (
                                 y
                                 ∣
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 Y
                                 ,
                                 X
                                 ,
                                 β
                                 )
                                 =
                                 N
                                 (
                                 y
                                 ∣
                                 ,
                                 
                                    
                                       μ
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       σ
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       I
                                    
                                    
                                       N
                                    
                                 
                                 )
                                 ,
                              
                           
                        where x′ is a hypothesized latent point. The mean 
                           μ
                        
                        
                           x′ is used as the interpolated shape and the variance 
                           
                              
                                 
                                    σ
                                 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ′
                                       
                                    
                                 
                                 
                                    2
                                 
                              
                           
                         indicates the uncertainty, which are defined below:
                           
                              (19)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 Y
                                 ,
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       σ
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 k
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       Y
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where k
                        
                           x′ is a vector made up of k(x′,
                        x
                        
                           i
                        )(i
                        =1,…,
                        N), and k
                        
                           x′x′
                        =
                        k(x′,
                        x′). Normally, 
                           
                              
                                 
                                    K
                                 
                                 
                                    Y
                                 
                                 
                                    -
                                    1
                                 
                              
                           
                         is required to be pre-computed and stored if the training data set is not too large [18]. However, when the training data set is large and of high-dimensionality (in this work, we use 5400 training samples each of which is 900 dimensional), the computational complexity of (18) prohibits real-time ATR processing, and it has to be approximated locally. In the same spirit of local JVIM learning, we develop a local JVIM inference technique for fast shape interpolation where a new neighborhood (different from the one used for topology constraint and the one used for local learning) is defined for each latent point.

As mentioned before, K
                        
                           Y
                         in (18) is sparse, so is k
                        
                           x′. Thus, only the latent points that are close to x′ contribute significantly to shape interpolation defined in (19) and (20). Inspired by [39] where a full GP was approximated by a set of local GPs, each with its own hyper-parameters. Therefore we perform only local estimation of K
                        
                           Y
                         and k
                        
                           x
                         for shape interpolation. However, unlike [39] where each local GP has its own kernel function, while all local GPs here share the same kernel function due to the integrity of JVIM. Thus, only one set of hyper-parameters obtained during learning is needed for shape interpolation.

Given an arbitrary point x′ in the latent space, we first find its closet training data point that is associated with a small neighborhood X′ of size M
                        2, and we use X′ and corresponding Y′ to compute the approximations to (19) and (20) as:
                           
                              (21)
                              
                                 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       k
                                    
                                    
                                       x
                                       ′
                                       X
                                       ′
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       
                                          
                                             Y
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 k
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                       
                                          
                                             X
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       
                                          
                                             Y
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ′
                                          
                                       
                                       
                                          
                                             X
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              
                           
                        where k
                        
                           x′X′ is a vector made of k(x′, x
                        
                           i
                        )(x
                        
                           i
                        
                        ∈
                        X′), and K
                        
                           Y′(M
                        2
                        ×
                        M
                        2) is the local covariance matrix computed from X′. Compared with (19) and (20), the computational load of (21) and (22) is significantly reduced. This local inference makes it possible to apply JVIM in real-time ATR applications. A trade-off is needed to determine an appropriate neighborhood size used for local inference. A small size may lead to inaccurate shape interpolation, while a large one may require more computational load. A detailed discussion is given below.

Neighbor selection plays an important role in three JVIM-related computations, viz., topology configuration, learning, and inference. Although there are some specific considerations, the way that neighbors are selected is similar in the three steps. Instead of directly using the distance in the latent space, we want to take advantage of the explicit structure of JVIM in order to preserve the compliance with the topology prior. Neighbor selection for a given latent point x
                        
                           i
                        
                        ={α
                        
                           i
                        ,
                        θ
                        
                           i
                        ,
                        ϕ
                        
                           i
                        }, is divided into two stages because of the conditional dependency among these two subspace, as shown in Fig. 5
                        a. At the first stage, by traveling along the view-independent identity manifold, we can choose some target types that are close to the reference identity α
                        
                           i
                         and each of which is associated with an identity-dependent view manifold. At the second stage, by traveling along each view manifold, a set of neighbors that are close to the reference view point {θ
                        
                           i
                        ,
                        ϕ
                        
                           i
                        } are selected. To balance the distances in two subspaces, the closer to the reference identity along the identity manifold, the more neighbors can be selected along the view manifold, or vice versa, as shown in Fig. 5b.

Given a latent point represented in the identity and view subspaces jointly, its neighbors can be divided into three groups according to their distances to the reference identity in the identity subspace. We use n
                        1, n
                        2 and n
                        3 to represent the numbers of training target types involved in Groups I, II and III, respectively. In the case of Fig. 5a (left), n
                        1
                        =1, n
                        2
                        =4 and n
                        3
                        =12. Specifically, neighbors in Group I have a relatively large coverage along the identity-dependent view manifold, while those in Groups II and III have less coverage on each identity-dependent view manifold, as shown in Fig. 5b. It is worth mentioning that the neighborhood size (mainly along the identity-dependent view manifolds) has to be chosen for each of the three computational steps. Our empirical analysis results in following findings. (1) For topology configuration, the neighborhood is used to calculate the LLE weight w, and its size should be relatively small considering the local linear assumption of LLE. (2) For JVIM learning, the neighborhood size should be relative large to ensure that the local GP learning can well approximate the global GP learning. (3) For JVIM inference, the neighborhood size should be moderate to balance the efficiency and accuracy of shape interpolation. The detailed neighborhood setting of this work is presented in Section 5.

@&#EXPERIMENTAL RESULTS@&#

In this section, we evaluate the proposed JVIM thoroughly in terms of its performance of shape modeling and its usefulness for infrared ATR applications. We first explain the experimental setups of JVIM and then discuss the two experiments in details where we compare JVIM with GPLVM [20], LL-GPLVM [16] and CVIM [14] as well as the traditional nearest neighbor shape interpolation (NN). Due to the nature of GPLVM and LL-GPLVM, we learn a set of target-specific view manifolds where GPLVM has no topology prior while LL-GPLVM involves a hemisphere as the topology constraint (Fig. 2). The NN method simply uses all training shapes where two shape factors are treated in a discrete way, while CVIM can deal with two shape factors explicitly and in a continuous way.

Also, we adopted a particle filter-based ATR algorithm used in [14] where JVIM, CVIM, LL-GPLVM, NN are evaluated. (GPLVM is not considered here due to the lack of an explicit manifold structure). In CVIM-based ATR algorithm, two independent dynamical models are used. In JVIM-based tracking, the dynamic model is a two-stage one where the first stage is along the identity manifold while the second stage along the identity-dependent view manifold. For LL-GPLVM-based ATR algorithm, one dynamic model is defined on each view manifold, and one on a circular-shaped identity manifold where NN is used for identity-based shape interpolation. For NN-based ATR algorithm, we still assume two manifolds like CVIM with two dynamic models, but shape interpolation is done via NN interpolation (i.e., just using the training shape).

As in [14], we considered six target classes, i.e., SUVs, mini-vans, cars, pick-ups, tanks, armored personnel carriers (APCs) each of which has six sub-classes, resulting in a total of 36 targets, as shown in Fig. 6
                        . These 36 targets were ordered along the view-independent identity manifold according to a unique topology optimized by the class-constrained shortest-closed-path method proposed in [14]. We considered azimuth and elevation angles in the ranges 0⩽
                        θ
                        <2π and 0⩽
                        ϕ
                        <
                        π/4, which are discredited in the interval of π/15 and π/18rad, respectively. A total of 150 training viewpoints were used for each target. The shape representation method in [34] was used here where a shape is represented by a quantized 2D discrete cosine transform (DCT) (30×30) for learning GPLVM, LL-GPLVM and JVIM. CVIM was learned in the same way as [14]. It worth noting that the shape representation method proposed in [34] is only used for JVIM, LL-GPLVM and GPLVM in this work.

With reference to Section 4.6 and Fig. 5, neighbor selection in the latent space plays an important but different role in each of three computational steps of JVIM. Specifically, we need to determine the neighborhood size along JVIM for each of three steps. Our empirical analysis had lead to the neighborhood settings shown in Table 2
                        , which ensure that JVIM can generate a valid shape at a similar level of uncertainty along the manifold. Also, it was found the shape modeling performance is not very sensitive to the neighborhood setting. In this sense, Table 2 can also serve as a general guideline for neighbor selection in JVIM.

All five shape models were first evaluated quantitatively in terms of their capability of shape interpolation along the identity-dependent view manifold with the interval of 1° for both the azimuth and elevation angles by comparing with the ground truth shapes generated from the 3D CAD models. Two metrics are used for shape matching, the overlap ratio [40] and the Chamfer distance [41].

The overlap ratio ζ quantifies the overlap between the interpolated shape A and the ground truth shape B. It is defined by
                              
                                 (23)
                                 
                                    ζ
                                    =
                                    
                                       
                                          #
                                          (
                                          A
                                          ∩
                                          B
                                          )
                                          ×
                                          2
                                       
                                       
                                          #
                                          (
                                          A
                                          )
                                          +
                                          #
                                          (
                                          B
                                          )
                                       
                                    
                                    ,
                                 
                              
                           where # denotes the number of pixels. A larger ratio ζ implies better interpolation performance. Overlap ratios ζ for shape interpolations performed by JVIM, CVIM, NN, GPLVM and LL-GPLVM on each of the six target classes are given in Table 3
                           . The results show that JVIM outperforms CVIM, NN and GPLVM with respect to both the average and the standard deviation of the overlap ratio, and JVIM is slightly better than LL-GPLVM.

The Chamfer distance [41] is a commonly used boundary-based shape matching metric that is often more sensitive than region-based metrics. Intuitively, the Chamfer distance between two shapes A and B is the average distance between a point on the boundary of A and the nearest point that lies on the boundary of B. Let A be an interpolated shape and B the corresponding ground truth shape, and ∂A
                           ={a
                           
                              i
                           } and ∂B
                           ={b
                           
                              j
                           } are two sets of boundary pixels of A and B, respectively. Then the Chamfer distance between A and B, i.e., d
                           
                              CM
                           (A,
                           B), is given by
                              
                                 (24)
                                 
                                    
                                       
                                          d
                                       
                                       
                                          CM
                                       
                                    
                                    (
                                    A
                                    ,
                                    B
                                    )
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          ∣
                                          ∂
                                          A
                                          ∣
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   a
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             ∂
                                             A
                                          
                                       
                                    
                                    
                                       
                                          
                                             min
                                          
                                          
                                             
                                                
                                                   b
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             ∂
                                             B
                                          
                                       
                                    
                                    ∥
                                    
                                       
                                          a
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          b
                                       
                                       
                                          j
                                       
                                    
                                    ∥
                                    .
                                 
                              
                           A smaller Chamfer distance implies better interpolation performance. Means and standard deviations of d
                           
                              CM
                           (A,
                           B) for JVIM, CVIM, NN, GPLVM and LL-GPLVM shape interpolation on all six target classes are given in Table 4
                           , where it is again seen that JVIM is better than CVIM, NN and GPLVM, but mildly worse than LL-GPLVM. Both JVIM and LL-GPLVM are much better than GPLVM, showing the value of adding the topology constraint. It is worth noting that LL-GPLVM learns 36 target-specific view manifolds, and JVIM only has one joint manifold for all targets. Thus LL-GPLVM-based shape interpolation has less ambiguity than one from JVIM, but JVIM defines an identity variable that allows it to deal with unknown targets more robustly and flexibly compared with LL-GPLVM, as shown in latter ATR experiments.

We qualitatively analyzed the shape interpolation performance of JVIM in the θ, ϕ, and α dimensions of the latent space as follows.
                              
                                 •
                                 
                                    Shape interpolation along the identity-dependent view manifold: We selected one exemplar target from each of the six target classes under consideration. Using the 3D CAD model of the selected target, we generated three ground truth shape observations corresponding to three training points in the latent space such that the first two share a common elevation angle while the second two share a common azimuth angle. These ground truth observations (shapes) are shown in red in Fig. 7
                                    a. For each target class, we then used JVIM shape interpolation to synthesize interpolated views lying between the three ground truth views as shown in black in Fig. 7a. The interpolated shapes show smooth and convincingly realistic transitions between the training views, demonstrating the power of JVIM for generating previously unseen views of known target types.


                                    Shape interpolation within the same target class: With the azimuth and elevation angles fixed, we selected three targets from each of the six classes and used the 3D CAD models to generate a single ground truth observation of each. These 18 ground truth observations, all of which correspond to JVIM training points in the latent space, are shown in color in Fig. 7(b). For each class, JVIM shape interpolation along the view-independent identity manifold was then performed to synthesize views of new interpolated target types lying between the ground truth points. These are shown in black in Fig. 7b. The transitions between known target types within a class are smooth and plausible for the most part (except most notably in the case of the Humvee), showing the powerful capability of JVIM for generalizing a training set to generate known views of previously unseen target types.


                                    Shape interpolation between two adjacent target classes: Again with the azimuth and elevation angles fixed, we consider a difficult problem of shape interpolation between two adjacent classes along the identity manifold. Six pairs of targets from adjacent classes were selected and the ground truth training views shown in color in Fig. 7c were generated from the 3D CAD models. New target shapes synthesized by JVIM shape interpolation between each pair are shown in black in Fig. 7c. Most of the interpolated shapes are strikingly realistic with the exception of the first four interpolated between the truck and tank, where the Humvee once again proved problematic due to the significant shape change between the two classes.

These results demonstrate that JVIM supports both accurate and semantically meaningful shape interpolation. This makes it possible to handle a variety of target shapes with respect to viewpoint changes for a known target as well as the generalization to previously unseen target types. Moreover, JVIM has a much lower computational complexity compared to CVIM. It only takes JVIM about 10ms for each shape interpolation using an un-optimized Matlab code on an Intel Core i3 computer, while it takes CVIM about 100ms using an optimized Maltab code. It is mainly owning to the low-dimensional nature of JVIM and the local inference used for shape interpolation. And the computing time for JVIM and LL-GPLVM based shape interpolation is almost the same.

We evaluated the tracking performance of JVIM, CVIM, LL-GPLVM and NN against midwave IR sequences from the SENSIAC ATR Database [23], where a few civilian and military ground vehicles maneuvering around a closed circular path were imaged from 1 to 3km ranges. For each sequence, tracking was performed on 500 frames. Background subtraction [42] was applied to each frame for clutter rejection. For each method, the particle filter was initialized with ground truth in the first frame and then run autonomously without further a priori information. Using the metadata provided with the database and a calibrated camera model, we computed 3D ground truth for the target position as described in [14]. Let (X,
                        Y,
                        Z) be the true 3D position of the target centroid with respect to a sensor-centered coordinate system where the Z axis lies along the optical axis of the sensor and the X and Y axes lie in a plane normal to the optical axis. Intuitively, the X and Y coordinates may be interpreted as horizontal and vertical position while the Z coordinate gives the slant range to the target. Tracking performance was evaluated with respect to three figures of merit: (1) horizontal position error (in meters), (2) range error (in meters), and (3) aspect angle error (in rad). 
                           1
                           Intuitively, the aspect angle is the angle between the target heading and a line that connects the center of the target to the center of the sensor. In this work, we use the heading direction with respect to the optical axis of the sensor that is directly available for the metadata. Because the distance from the target to the sensor is large and the difference between these two angles is very small. For convenience, we still call it aspect angle.
                        
                        
                           1
                        
                     

JVIM, CVIM, LL-GPLVM and NN were run against 24 SENSIAC sequences for eight different target types at ranges of 2.0km, 2.5km, and 3km (for a total of 24 test sequences in all). Quantitative tracking performance results are reported in Fig. 8
                        a–c which give the horizontal, slant range, and aspect angle tracking errors, respectively, averaged over the eight target types for each range. It is shown that JVIM gains 9%, 10% and 35% improvement over CVIM, LL-GPLVM and NN along horizon directions, 35%, 31% and 72% along slant range and 5%, 13% and 62% along aspect angle. The results demonstrate that JVIM delivers superior tracking performance with respect to all three figures of merit, with the advantage over CVIM, LL-GPLVM and NN being particularly significant for the range estimation. JVIM-based shape interpolation results in these experiments are also illustrated qualitatively in Fig. 9
                        , where the interpolated shapes are overlayed on the raw SENSIAC IR frames. The results in Fig. 9a are for targets at a range of 2km while those in Fig. 9b are for targets at a range of 3km. In each part of the figure, there are eight rows corresponding to the eight SENSIAC target types that were tested. The target type designations from the SENSIAC database are given in the leftmost column. For each target type, the two best matching types from the training set are pictured in the rightmost two columns.

We evaluated the target recognition performance of JVIM, CVIM, NN and LL-GPLVM against the same 24 SENSIAC sequences used for the tracking experiments. These sequences include targets from four classes: Tank, APC, SUV, and Pick-Up, all of which are in the training set. However, the exact target types in the SENSIAC database may not be the same as those in the training set. For example, the self-propelled gun in the SENSIAC data is a 2S3 Akatsiya whereas the training set includes only an AS90. The pickup in the SENSIAC data is a Ford but the training set has only Chevrolet. Therefore, for evaluating the target recognition performance we declare a correct recognition in any frame where the target class is correctly identified. For each of the four target classes represented in the test sequences (Tank, APC, SUV, and Pick-Up), we compared the recognition performance of the four methods quantitatively in terms of the correct recognition rate, defined, e.g., as the number of frames from all 24 test sequences where an APC was present and correctly recognized divided by the total number of frames where an APC was present. The correct recognition rates of all four methods are reported as percentages for each target class in Table 5
                        , where it is once again seen that JVIM outperforms the CVIM and NN, while LL-GPLVM is better than JVIM for most cases.

It worth noting that the recognition result of LL-GPLVM is much more sensitive to the initialization due to the lack of continuous-valued identity manifold. The results in Table 5 are obtained based on a good initialization for all algorithms to make a fair comparison. However, if the initialization is poor, the LL-GPLVM results will suffer while JVIM can still quickly converge to the correct results. For example, when the initialization for APCs and SUV at range 2.5km are poor, the recognition results of LL-GPLVM will fall to 85%, while JVIM results are almost unchanged (above 90%). Therefore, JVIM is more robust and stable than LL-GPLVM for ATR applications.

There are three limitations in the proposed algorithm which are related to our current and future research. First, due to the explicit shape matching involved in the particle filter, the performance of using JVIM for ATR could be affected by the quality of background subtraction which may be challenging for a moving sensor platform. To remedy this limitation, we have recently studied implicit shape matching where JVIM is integrated with a shape-aware level set and target segmentation becomes a by-product of the ATR inference process [43]. Secondly, the tracking results for the front/rear views could have some errors due to the ambiguity of observed target shapes. For example, some ATR results for BTR70 and T72 at range 3km are shown in Fig. 10
                        , where the horizontal axis is the aspect angle and vertical axis shows the estimated identity value 
                           2
                           The identity variable in JVIM is a circular one α
                              ∈[0,2π). In order to show identity estimation results in a linear way, we allow α
                              >2π for illustration purpose in Fig. 10a
                        
                        
                           2
                        . If the recognition result in a frame falls in the region bounded by two red lines (boundaries of the true class along the identity manifold), it is a correct frame-wise recognition. It is shown that misclassification usually occurs at the front/rear views when the aspect angle is around π or 2π. A better treatment of identity estimation is needed to avoid this problem. Thirdly, the computational complexity of this work (with 200 particles) is still relatively high. It takes about 4.2s per frame for the JVIM-based ATR algorithm using an un-optimized Matlab code on an Intel Core i3 computer, while it takes about 22.2s and 4.2s per frame for CVIM-based and LL-GPLVM based methods, respectively. The main computational load is caused by shape interpolation that is proportional to the particle number, and a more efficient JVIM inference algorithm is needed to expedite the ATR process.

@&#CONCLUSION@&#

We have proposed a new joint view-identity manifold (JVIM) for multi-view and multi-target shape modeling which represents shape related variables, identity and view angle jointly in a unified low-dimensional latent space. JVIM learning is accomplished by a modified LL-GPLVM algorithm that involves an LLE-based topological constraint for manifold learning and a stochastic gradient algorithm for efficient model training. A local inference technique was also developed to make it possible to use JVIM for real-time ATR and tracking applications. We also discussed the role of neighbor selection in three JVIM computational steps, including topology configuration, learning, and inference, which makes this model practically useful and computationally efficient. The joint view-identity modeling and probabilistic nature allow JVIM to support more accurate and efficient shape modeling as well as robust ATR inference than other existing manifold-based shape models, including CVIM, GPLVM and LL-GPLVM. We demonstrated these advantages both quantitatively and qualitatively in a series of experiments on both synthetic CAD data and real infrared sequences. It will also be promising to apply JVIM to other machine vision applications involving segmentation, tracking, recognition and pose estimation.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank the anonymous reviewers for their valuable comments and suggestions that improved this paper. This work was supported in part by the U.S. Army Research Laboratory and the U.S. Army Research Office under grants W911NF-04-1-0221 and W911NF-08-1-0293.

@&#REFERENCES@&#

