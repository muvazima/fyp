@&#MAIN-TITLE@&#Fast heuristics for the frequency channel assignment problem in multi-hop wireless networks


@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We develop novel heuristics for channel assignment in wireless mesh networks.


                        
                        
                           
                           They are the first such solution algorithm to consider cumulative interference.


                        
                        
                           
                           They consistently return near-optimum results.


                        
                        
                           
                           They are orders of magnitude faster than an exact solution method.


                        
                        
                           
                           They are also applicable to other kinds of multi-hop wireless networks.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Channel assignment

Heuristics

Minimum coloring

@&#ABSTRACT@&#


               
               
                  Communication links connect pairs of wireless nodes in a wireless network. Links can interfere with each other due to their proximity and transmission power if they use the same frequency channel. Given that a frequency channel is the most important and scarce resource in a wireless network, we wish to minimize the total number of different frequency channels used. We can assign the same channel to multiple different links if the assignment is done in a way that avoids co-channel interference. Given a conflict graph which shows conflicts between pairs of links if they are assigned the same frequency channel, assigning channels to links can be cast as a minimum coloring problem. However the coloring problem is complicated by the fact that acceptably small levels of interference between pairs of links using the same channel can accumulate to cause an unacceptable level of total interference at a given link. In this paper we develop fast and effective methods for frequency channel assignment in multi-hop wireless networks via new heuristics for solving this extended coloring problem. The heuristics are orders of magnitude faster than an exact solution method while consistently returning near-optimum results.
               
            

@&#INTRODUCTION@&#

It is desirable in wireless networks to use the smallest possible number of frequency channels for inter-device communication. Typically a given device will create a communication link with a neighboring node by transmitting on a particular frequency channel; this channel can be reused for other links provided it does not cause interference on any other link using the same channel due to its transmission power and proximity. This gives rise to the channel assignment problem of assigning frequency channels to communication links so as to minimize the total number of distinct channels used while avoiding interference. Solutions for this problem should be found quickly since wireless networks can change relatively quickly (wireless devices may join or leave the network at any time).

Given the location of the communicating wireless devices, a conflict graph can be created in various ways in which nodes represent the communication links between pairs of devices and undirected arcs connect nodes that will experience an unacceptable level of interference if assigned to the same frequency channel. The channel assignment problem requires the assignment of a channel to each node in the conflict graph so that the total number of distinct channels is minimized but no arc connects two nodes having the same channel. This is a standard minimum coloring problem in which colors represent frequency channels. The minimum coloring problem is well known to be NP-hard for general graphs (Karp, 1972).

However there is a further complication: “no interference” means that the amount of interference between two links using the same channel is below a certain threshold, but it is usually not zero. Hence when there are multiple links using the same frequency channel, the cumulative interference may be enough to cause an unacceptable level of interference on some link using that channel, even though the interference on each pair of links is below the tolerance. This complicates the coloring problem.

This paper addresses the frequency channel assignment problem in multi-hop wireless networks by developing fast heuristics for solving this extended coloring problem. We use randomized heuristic algorithms which find a sequence of weighted maximal independent sets (WMaISs) in the conflict graph and assign the same channel to all of the nodes in each WMaIS, while considering the cumulative interference constraint. We compare our results to an exact quadratically constrained binary programming (QCBP) formulation. Our heuristics return very good results (requiring at most two channels more than the true optimum solution) while being several orders of magnitude faster than the exact QCBP formulation. Preliminary work in this regard appears in Chaudhry, Hafez, and Chinneck (2015).

Exact methods guarantee an optimum solution for minimum coloring of the conflict graph but can require an excessive amount of computation time, whereas heuristics can find reasonable solutions much more quickly. Several greedy heuristics for the classical minimum coloring problem have been proposed in the literature. Some well-known examples include SEQ (Kucera, 1991), DSATUR (Brelaz, 1979), RLF (Leighton, 1979), and IGA (Culberson & Luo, 1996). SEQ is a very simple and commonly used greedy heuristic coloring algorithm. It takes each vertex of the graph sequentially and assigns to it the smallest indexed color that does not appear in one of its neighbors. DSATUR arranges the vertices in the decreasing order of degrees. A vertex with highest degree is colored with color 1. A vertex with highest saturation degree is chosen (ties are broken randomly) where the saturation degree of a vertex is defined as the number of different colors to which it is adjacent. The chosen vertex is colored with the lowest numbered color with which it does not conflict. The algorithm stops when all the vertices are colored.


                     RLF (Recursive Largest First) colors the vertices one class at a time using the following greedy process. Let C be the color class to be constructed which is initially empty. Let V′ be the set of uncolored vertices that can be placed in C; V′ initially contains all the currently uncolored vertices. Let U be the set of uncolored vertices that cannot be placed in C; U is initially empty. Choose the first vertex xo
                      from V′ that has the maximum number of adjacent vertices in V′. Place xo
                      in C and move all the vertices in V′ that are adjacent to xo
                      from V′ to U. While V′ remains nonempty: choose the first vertex x in V′ that has the maximum number of adjacent vertices in U; add x to C and move all the vertices in V′ that are adjacent to x from V′ to U. Considering only vertices in V
                     \
                     C, it constructs the next independent set as the second color class and so on.


                     IGA (Iterated Greedy Algorithm) iteratively colors the graph using the SEQ algorithm. At each iteration, the order of the color classes is changed according to some criteria which may lead to a reduction in the number of colors used. The various reordering heuristics include reversing the order of the color classes, placing the color classes in a random order, placing the classes with largest cardinality first or largest fit, placing the smallest cardinality classes first or smallest fit, placing the classes in increasing order by degree sum of the group, and placing the classes in decreasing order by degree sum of the group. The authors used a probabilistic choice of the reordering move to be performed. A ratio of 50:50:30 (largest first:reverse:random) was shown to be efficient. The algorithm in Bollobas and Thomason (1985) selects the maximum independent set from the set of uncolored vertices. The vertices of the selected set are assigned to a new color. This process is repeated until the whole graph is colored. A greedy randomized adaptive search procedure (Feo & Resende, 1989; Feo & Resende, 1995) (GRASP) was used in Laguna and Marti (2001) for coloring sparse graphs. It consists of two phases: construction phase and improvement phase. The construction phase uses a randomized version of RLF to generate initial colorings. The improvement phase applies a local search procedure to the initial solution in the hope of finding an improvement. GRASP is an iterative technique in which each iteration provides a solution. The incumbent solution over all GRASP iterations is the final result.

Our heuristic solutions belong to this class of constructive greedy minimum coloring heuristics, but are modified to handle the cumulative conflict in the wireless channel assignment problem. A quick solution is required due to the dynamic nature of wireless networks, so heuristic methods must be employed, but no existing heuristic for solving the minimum coloring stage of the wireless network channel assignment problem considers cumulative interference as is done in this paper (and in Chaudhry et al. (2015)).

An overview of the solution techniques for frequency assignment problems in infrastructure-based (single-hop) wireless networks is provided in Aardal, van Hoesel, Koster, Mannino, and Sassano (2007). Our heuristic and exact solution methods, on the other hand, deal with frequency channel assignment in multi-hop wireless networks, specifically wireless mesh networks. The models in Aardal et al. (2007) assume that each antenna is represented by a vertex in the interference graph whereas each vertex in our conflict graph represents a wireless link between a pair of wireless mesh nodes. The models in Aardal et al. (2007) deal with the requirement of assigning multiple frequency channels to the antenna of a wireless node whereas our heuristic and exact solution methods assign a single frequency channel to the half-duplex wireless link between a pair of wireless mesh nodes. It is also mentioned in Aardal et al. (2007) that formulations in which only one frequency is assigned to a vertex in the interference graph are not considered since they lead to non-linear programs which are hard to solve.

Given the potential locations of cellular base stations, demand nodes representing areas containing certain number of call requests per time unit, number of available frequency channels, coverage and interference information of base stations and channels,
Akella, Batta, Sudit, Rogerson, and Blatt (2008) deal with the problem of optimally locating the given number of base stations to maximally cover the demand nodes subject to interference constraints. A simpler case of this problem is considered where a base station can interfere with at most two other bases and the degree of the interference graph is limited to two. A heuristic solution based on simulated annealing is developed to solve this problem. Instead of constructing an interference graph based on a radio propagation model, the conflicts in the interference graph are randomly generated. The number of available frequency channels is assumed to be 41, 61, and 71 to generate results for three different problem sizes.

The problem of configuring the power levels of transmitters to provide service coverage to a set of receivers is considered in D'Andreagiovanni, Mannino, and Sassano (2011, 2013) such that a certain network utility, e.g. number of customers, or expected traffic demand, etc., is maximized. A 0–1 formulation of the problem is presented in D'Andreagiovanni et al. (2011) and a technique to identify a subset of the violated constraints is developed. The interference is approximated by assuming the desired signal to be received at the receiver if it is stronger than its strongest interferer. To reduce the numerical problems produced when transmitter powers are represented by continuous variables, a 0–1 formulation for the problem is proposed in D'Andreagiovanni et al. (2013) by considering a finite set of values for the power levels of transmitters. The SINR (signal-to-interference-plus-noise ratio) model is used to model interference, but the formulation is based on a special case where the desired signal at the receiver has interference from a single transmitter. An algorithm is developed that uses heuristics to search for violated constraints. These formulations (D'Andreagiovanni et al., 2011, 2013) are extended to include different frequency channels (D'Andreagiovanni & Mannino, 2009) in order to evaluate the performance of the proposed solutions in a WiMAX network scenario. Three 7 megahertz or six 3.5 megahertz frequency channels in the 3.4−3.6 gigahertz band are considered to generate experimental results.

The frequency assignment problem of minimizing a cost function based on SIRs (signal-to-interference ratios) at points where reception is required is considered in Graham, Montemanni, Moon, and Smith (2008). Algorithms based on simulated annealing and ant colony system are developed that combine the SIR-based cost function approach with the binary constraint approach to reduce the run time. A fixed number of frequency channels is used to test the algorithms in different scenarios. For example, Scenario 1 uses three frequency domains with 117, 72, and 72 frequencies; Scenario 3 has a single frequency domain consisting of 24 frequency channels; etc.

The fixed spectrum frequency assignment problem is considered in Montemanni and Smith (2010) where the spectrum is given and the target is to find an assignment of frequencies to the transmitters to minimize the total interference in the network. The authors apply a heuristic manipulation technique in combination with tabu search to solve this problem. A simple model similar to the protocol model (Gupta & Kumar, 2000) is used to model interference where only interference between pairs of transmitters is considered. Different problem instances of a test scenario are generated by changing the given number of frequency channels.

The problem of cellular network design is investigated in Kalvenes, Kennington, and Olinick (2005). Given a set of candidate cell locations with corresponding costs, the number of available frequency channels, the maximum demand for service in each geographical area, and the revenue potential in each customer area, the problem is to determine the size and location of cells, and the specific channels to be allocated to each cell. The problem is formulated as a large mixed integer program that is not solvable using standard optimization software. A method is proposed to generate tight upper bounds. The number of available frequency channels is taken as 500, and interference from multiple sources is not considered.

The frequency assignment problem considered in Akella et al. (2008), D'Andreagiovanni and Mannino (2009), D'Andreagiovanni et al. (2011, 2013), Graham et al. (2008), Kalvenes et al. (2005) and Montemanni and Smith (2010) involves assigning a set number of frequency channels to the wireless transmitters while satisfying interference constraints in infrastructure-based single-hop wireless networks. Unlike these works, we deal with the problem of finding the minimum number of frequency channels that is required while satisfying cumulative interference constraints on wireless links in multi-hop wireless networks. These are the first methods to solve this problem that use a more realistic SIR model which incorporates shadowing (Chaudhry et al., 2015), and a conflict graph/matrix with an unrestricted node-degree.

The protocol model (Gupta & Kumar, 2000) has been widely used to model interference for channel assignment in wireless mesh networks (Avallone & Akyildiz, 2008; Giannoulis et al., 2008; Li et al., 2009; Marina, Das, & Subramanian, 2010; Rad & Wong, 2008; Subramanian, Gupta, Das, & Jing, 2008; Wu, Luo, Yang, & Yang, 2012). This simple model assumes the interference to be a binary phenomenon that occurs within the interference range of the wireless nodes of any active link. The SINR model, also known as the physical model (Gupta & Kumar, 2000), is more accurate. It considers the cumulative effect of interference at the receiving node where the desired incoming signal is received correctly if its SINR is above a certain threshold (the SINR threshold). The study in Iyer, Rosenberg, and Karnik (2009) concludes that cumulative interference must be taken into account to obtain accurate performance results for multi-hop wireless networks and recommends the use of the SINR model.

Neither the protocol model nor the SINR model reflects the reality of signal propagation in wireless links. In a real wireless channel, the radio signal is reflected from and around nearby objects, which causes the signal strength to fluctuate in space. This is known as shadowing and is usually accounted for by adding a random component to the received signal strength. We refer to an improved physical model that accounts for shadowing as the SINR model with shadowing. The SIR can be used instead of the SINR since co-channel interference is generally much stronger than noise. We use the SIR model with shadowing (Chaudhry et al., 2015) while building the conflict graph, which lets us incorporate the cumulative interference constraints into our heuristics and find WMaISs in the conflict graph.

Given a set of wireless devices, their locations, and information about which devices generate messages and to which destination devices those messages are directed, it is normally a multi-stage process to establish the multi-hop wireless network. It involves (a) building the connectivity graph for the given wireless network, (b) routing the flows over the connectivity graph to achieve maximum network throughput, (c) interference modeling via building the conflict graph and matrix for the set of links involved in routing where the vertices of the conflict graph represent the wireless links between wireless nodes while the edges represent the conflicts between wireless links, and (d) computing a coloring of the vertices of the conflict graph using as few distinct colors as possible, i.e. finding the minimum number of frequency channels to use such that there is no interference. The goal is to assign the smallest number of frequency channels to the links involved in routing such that all of these links can be active simultaneously without any co-channel interference.

Given the location of the wireless nodes, the connectivity graph is built in the first stage using topology control. The topology control algorithm (Chaudhry, Ahmad, & Hafez, 2012) tries to build the connectivity graph by selecting the nearest nodes for each node in the network as its possible communication neighbors. Since transmit power is proportional to the distance between the nodes, the shorter the distance, the lower the transmit power. Less transmit power results in less interference which leads to better spatial channel reuse.

The second stage, routing, determines which pairs of devices must have direct communication links in order to establish a network that provides a path between each message-generating device and the destination devices that are to receive its messages. Given the connectivity graph, multi-path routing (Chaudhry, Chinneck, & Hafez, 2013) is used to select the subset of links in the connectivity graph that are involved in message routing. Once the routing solution has determined the communicating pairs of devices, the conflict graph can be created.

There are multiple different ways to carry out these two stages, but the main output in all cases is a conflict graph. This paper assumes that the conflict graph is provided, however it was derived.

If all of the co-channel interference in a multi-hop wireless network could be accurately represented as conflicts between pairs of network links, then the channel assignment problem could be directly cast as a minimum coloring problem. However this is not the case: acceptably small amounts of interference between pairs of links using the same frequency channel may accumulate to an unacceptable total amount of interference at a given link. Thus there can be a group conflict that cannot be represented by a simple conflict graph. For this reason we introduce a conflict matrix to represent all of the interference data needed to solve this extended coloring problem.

The conflict graph and matrix represent conflicts between the links involved in routing. They are constructed using the methods in Chaudhry, Hafez, and Chinneck (2014). Let L be the set of links involved in the routing; the size of the conflict matrix is |L| × |L| and all elements are non-zero. Vertices in the conflict graph F correspond to links in L. The elements of the conflict matrix are of one of two types: either (i) the value 1 representing a conflict between a pair of links (this appears as an edge in the conflict graph), or (ii) the maximum power received at a link from another link (these values are significantly different from 1.0 so there is no confusion).

The SIR for a pair of communication links is defined as the ratio of the power threshold in milliwatts (RxThresh_mwatts) that is needed to correctly understand the received signal at link lxy
                         to the maximum received power in milliwatts from link lpq
                        
                        . A conflict between link lxy
                         and link lpq
                         is indicated in the conflict matrix when the SIR is less than a stated threshold (SIRThresh). Otherwise the conflict matrix element is filled with the maximum power received at lxy
                         from lpq
                        .

The link transmission power or the received interference power is calculated using the Free Space model or the Two-Ray model, depending on the Euclidean distance between the nodes d in relation to the cross-over distance Cross_over_dist. If d ≤ Cross_over_dist, the Free Space propagation model is used, otherwise the Two-Ray propagation model is used. Using the Free Space model, transmission power is calculated as

                           
                              (1)
                              
                                 
                                    
                                       P
                                       t
                                    
                                    =
                                    
                                       
                                          R
                                          x
                                          T
                                          h
                                          r
                                          e
                                          s
                                          h
                                          
                                             
                                                (
                                                4
                                                π
                                                d
                                                )
                                             
                                             2
                                          
                                       
                                       
                                          
                                             G
                                             t
                                          
                                          
                                             G
                                             r
                                          
                                          
                                             λ
                                             2
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        and received power is calculated as

                           
                              (2)
                              
                                 
                                    
                                       P
                                       r
                                    
                                    =
                                    
                                       
                                          
                                             P
                                             t
                                          
                                          
                                             G
                                             t
                                          
                                          
                                             G
                                             r
                                          
                                          
                                             λ
                                             2
                                          
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   4
                                                   π
                                                   d
                                                
                                                )
                                             
                                          
                                          2
                                       
                                    
                                    ,
                                 
                              
                           
                        
                     

The transmission power using the Two-Ray model is

                           
                              (3)
                              
                                 
                                    
                                       P
                                       t
                                    
                                    =
                                    
                                       
                                          R
                                          x
                                          T
                                          h
                                          r
                                          e
                                          s
                                          h
                                          
                                             
                                                (
                                                d
                                                )
                                             
                                             4
                                          
                                       
                                       
                                          
                                             G
                                             t
                                          
                                          
                                             G
                                             r
                                          
                                          
                                             
                                                
                                                   h
                                                   t
                                                
                                             
                                             2
                                          
                                          
                                             
                                                
                                                   h
                                                   r
                                                
                                             
                                             2
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        and received power is

                           
                              (4)
                              
                                 
                                    
                                       P
                                       r
                                    
                                    =
                                    
                                       
                                          
                                             P
                                             t
                                          
                                          
                                             G
                                             t
                                          
                                          
                                             G
                                             r
                                          
                                          
                                             
                                                
                                                   h
                                                   t
                                                
                                             
                                             2
                                          
                                          
                                             
                                                
                                                   h
                                                   r
                                                
                                             
                                             2
                                          
                                       
                                       
                                          
                                             (
                                             d
                                             )
                                          
                                          4
                                       
                                    
                                    ,
                                 
                              
                           
                        where Pt
                         is the link transmission power, Gt
                         and Gr
                         are transmitter and receiver antenna gain, respectively, ht
                         and hr
                         are transmitter and receiver antenna height, respectively, and RxThresh is the power threshold required at the receiver to correctly understand the received signal (Rappaport, 2003). To construct the conflict matrix using the SIR model with shadowing, the link transmission power using the Free Space model with shadowing is calculated as

                           
                              (5)
                              
                                 
                                    
                                       P
                                       t
                                    
                                    =
                                    
                                       
                                          R
                                          x
                                          T
                                          h
                                          r
                                          e
                                          s
                                          h
                                          
                                             
                                                (
                                                4
                                                π
                                                d
                                                )
                                             
                                             2
                                          
                                       
                                       
                                          
                                             G
                                             t
                                          
                                          
                                             G
                                             r
                                          
                                          
                                             λ
                                             2
                                          
                                       
                                    
                                    ×
                                    
                                       10
                                       
                                          −
                                          x
                                          /
                                          10
                                       
                                    
                                    ,
                                 
                              
                           
                        where x is the lognormal random variable, and the link transmission power using the Two-Ray model with shadowing is calculated as

                           
                              (6)
                              
                                 
                                    
                                       P
                                       t
                                    
                                    =
                                    
                                       
                                          R
                                          x
                                          T
                                          h
                                          r
                                          e
                                          s
                                          h
                                          
                                             
                                                (
                                                d
                                                )
                                             
                                             4
                                          
                                       
                                       
                                          
                                             G
                                             t
                                          
                                          
                                             G
                                             r
                                          
                                          
                                             
                                                
                                                   h
                                                   t
                                                
                                             
                                             2
                                          
                                          
                                             
                                                
                                                   h
                                                   r
                                                
                                             
                                             2
                                          
                                       
                                    
                                    ×
                                    
                                       10
                                       
                                          −
                                          x
                                          /
                                          10
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

To check if lpq
                         conflicts with lxy
                        , we calculate Pr,xp
                         (power received at node x from node p), Pr,xq
                         (power received at node x from node q), Pr,yp
                         (power received at node y from node p), and Pr,yq
                         (power received at node y from node q) using (2) or (4). To calculate Pr,xp
                        , we calculate Pt,pq
                         using (5) or (6), which is the transmission power required when node p is transmitting to q. If the ratio of RxThresh_mwatts to the maximum of the four received powers at lxy
                         from lpq
                         is less than SIRThresh, a conflict is indicated between lxy
                         and lpq
                         by placing a one in the conflict matrix. If this ratio is above SIRThresh, the maximum of the four received powers at lxy
                         from lpq
                         is placed in the conflict matrix. Note that by using the maximum of the four received powers to determine the conflict, the computational complexity of checking for cumulative interference is reduced from O(m4
                        ) to O(m) where m is the number of vertices in the conflict graph.

The following equation represents the cumulative SIR at every wireless link using a given frequency channel, which is the ratio of RxThresh_mwatts to the sum of the maximum powers received at that link from all other links using the same frequency channel (Rappaport, 2003). For interference-free communication on links using the same frequency channel, this ratio must be greater than SIRThresh at every such link.

                           
                              (7)
                              
                                 
                                    
                                       (
                                       
                                          
                                             R
                                             x
                                             T
                                             h
                                             r
                                             e
                                             s
                                             h
                                             _
                                             m
                                             w
                                             a
                                             t
                                             t
                                             s
                                          
                                          /
                                          
                                             
                                                ∑
                                                k
                                             
                                             
                                                P
                                                
                                                   i
                                                   k
                                                
                                             
                                          
                                       
                                       )
                                    
                                    ≥
                                    S
                                    I
                                    R
                                    T
                                    h
                                    r
                                    e
                                    s
                                    h
                                 
                              
                           
                        where i and k are wireless links, and Pik
                         is the maximum power received at i from k.

Given the receiver threshold RxThresh_mwatts, the SIR threshold required at a particular data rate SIRThresh, and the conflict matrix, the objective in the extended coloring problem is to find the minimum number of frequency channels such that the cumulative SIR at every wireless link is above SIRThresh.

The rest of the paper is organized as follows. The QCBP formulation for the extended coloring problem with cumulative interference constraints is presented in Section 2. Section 3 presents our randomized greedy heuristics. Performance evaluation with results is given in Section 4. Conclusions are presented in Section 5.

The true minimum number of channels can be found by formulating the extended coloring problem as a quadratically constrained binary program. The standard binary linear programming formulation for the basic coloring problem represented by (8)−(12) is well-studied (Malaguti & Toth, 2010; Malaguti, Monaci, & Toth, 2011; Méndez-Díaz & Zabala, 2006, 2008). Additional constraints represented by (13) and (14) are added to this model to remove symmetrical solutions, which reduces the solution time (Méndez-Díaz & Zabala, 2006, 2008). Our QCBP formulation for the extended coloring problem follows below.

Given the conflict graph F, we define the following parameters and variables:

                        
                           •
                           
                              n is an input parameter representing an upper limit on the number of colors,


                              xih
                               is a binary variable such that xih
                               = 1 when vertex i is assigned the color h and 0 otherwise,


                              yh
                               is a binary variable such that yh
                               = 1 when color h is used in the solution and 0 otherwise,


                              RxThresh_mwatts is an input parameter which represents the power threshold required at the receiver in milliwatts to correctly receive the desired incoming signal,


                              SIRThresh is an input parameter which represents the SIR threshold (i.e. the SIR requirement for a particular link data rate) in linear scale, and


                              Pik
                               is an input parameter which represents the maximum power received in milliwatts at vertex i from vertex k and is an element of the conflict matrix at ith row and kth column.


                     Objective:
                  

Given a limit of n colors, the objective is to minimize the number of colors used:

                        
                           (8)
                           
                              
                                 min
                                 
                                    ∑
                                    
                                       h
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    y
                                    h
                                 
                              
                           
                        
                     
                  


                     Constraints:
                  

Each vertex is assigned exactly one color:

                        
                           (9)
                           
                              
                                 
                                    ∑
                                    
                                       h
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    x
                                    
                                       i
                                       h
                                    
                                 
                                 =
                                 1
                                 
                                 for
                                 
                                 all
                                 
                                 i
                                 
                                 ∈
                                 
                                 V
                                 .
                              
                           
                        
                     
                  

For an arc Eij
                      connecting vertices i and j, Vi
                      and Vj
                      cannot be assigned the same color:

                        
                           (10)
                           
                              
                                 
                                    x
                                    
                                       i
                                       h
                                    
                                 
                                 +
                                 
                                    x
                                    
                                       j
                                       h
                                    
                                 
                                 ≤
                                 
                                    y
                                    h
                                 
                                 
                                 for
                                 
                                 all
                                 
                                 h
                                 
                                 where
                                 
                                 
                                    E
                                    
                                       i
                                       j
                                    
                                 
                                 ∈
                                 E
                                 ,
                                 
                                 h
                                 =
                                 
                                 1
                                 …
                                 n
                                 .
                              
                           
                        
                     
                  

Whether or not to assign color h to vertex i is a binary decision:

                        
                           (11)
                           
                              
                                 
                                    x
                                    
                                       i
                                       h
                                    
                                 
                                 ∈
                                 
                                    {
                                    
                                       0
                                       ,
                                       1
                                    
                                    }
                                 
                                 
                                 where
                                 
                                 i
                                 
                                 ∈
                                 
                                 V
                                 ,
                                 
                                 h
                                 =
                                 1
                                 …
                                 n
                                 .
                              
                           
                        
                     
                  

Whether or not color h is used is a binary decision:

                        
                           (12)
                           
                              
                                 
                                    y
                                    h
                                 
                                 ∈
                                 
                                    {
                                    
                                       0
                                       ,
                                       1
                                    
                                    }
                                 
                                 
                                 where
                                 
                                 h
                                 =
                                 1
                                 …
                                 n
                                 .
                              
                           
                        
                     
                  

This formulation allows many equivalent solutions because colors are interchangeable. If a solution uses k out of the n available colors, then there are 
                        
                           (
                           
                              
                                 
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    
                                       k
                                    
                                 
                              
                           
                           )
                        
                      possible combinations of k colors. Once the k colors are chosen, they can be permutated in k! ways. For a solution consisting of k colors, there are 
                        
                           
                              (
                              
                                 
                                    
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       
                                          k
                                       
                                    
                                 
                              
                              )
                           
                           k
                           !
                        
                      equivalent solutions (Malaguti & Toth, 2010). The following constraints are used in Méndez-Díaz and Zabala (2006, 2008) to eliminate some of the equivalent solutions in a standard minimum coloring problem, thereby reducing the binary program's search space by ensuring that color h + 1 is used only if color h has already been assigned. This eliminates those symmetrical k-colorings for any feasible k-coloring that use colors with labels higher than k.

                        
                           (13)
                           
                              
                                 
                                    y
                                    h
                                 
                                 ≤
                                 
                                    ∑
                                    i
                                 
                                 
                                    x
                                    
                                       
                                       
                                          i
                                          h
                                       
                                    
                                 
                                 
                                 for
                                 
                                 all
                                 
                                 h
                                 
                                 where
                                 
                                 i
                                 ∈
                                 V
                                 ,
                                 
                                 h
                                 =
                                 1
                                 …
                                 n
                                 .
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    y
                                    h
                                 
                                 ≥
                                 
                                    y
                                    
                                       h
                                       +
                                       1
                                    
                                 
                                 
                                 
                                 
                                 
                                 for
                                 
                                 all
                                 
                                 h
                                 
                                 =
                                 1
                                 …
                                 n
                                 −
                                 1
                                 .
                              
                           
                        
                     
                  

We also improve the efficiency of the search by imposing a limit on n, the number of colors that can be used. This is obtained from the number of colors used in the heuristic solution (Section 3), which guarantees that an exact solution using no more than n colors is available. This reduces the run time of the exact method.

We extend model (8)−(14) to include the cumulative interference constraints. The term ∑
                        k
                     
                     Pikxkhxih
                      sums up the maximum powers received at vertex i when it is assigned the color h from all other vertices which are also assigned the color h. The following constraints ensure that the cumulative SIR at every vertex sharing the same frequency channel (color) is greater than the SIR threshold where the cumulative SIR is the ratio of the receiver threshold to the sum of the maximum powers received at that vertex from all other vertices using the same frequency, denoted here by the color h.

                        
                           (15)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   R
                                                   x
                                                   T
                                                   h
                                                   r
                                                   e
                                                   s
                                                   h
                                                   _
                                                   m
                                                   w
                                                   a
                                                   t
                                                   t
                                                   s
                                                
                                                /
                                                
                                                   
                                                      ∑
                                                      k
                                                   
                                                   
                                                      
                                                         P
                                                         
                                                            i
                                                            k
                                                         
                                                      
                                                      
                                                         x
                                                         
                                                            k
                                                            h
                                                         
                                                      
                                                      
                                                         x
                                                         
                                                            i
                                                            h
                                                         
                                                      
                                                   
                                                
                                             
                                             )
                                          
                                          ≥
                                          S
                                          I
                                          R
                                          T
                                          h
                                          r
                                          e
                                          s
                                          h
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          for
                                          
                                          all
                                          
                                          i
                                          
                                          and
                                          
                                          for
                                          
                                          all
                                          
                                          h
                                       
                                    
                                 
                              
                           
                        
                     where k ≠ i, and i, k ∈ V.

Constraints (15) can be re-written as:

                        
                           (16)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   
                                                      ∑
                                                      k
                                                   
                                                   
                                                      
                                                         P
                                                         
                                                            i
                                                            k
                                                         
                                                      
                                                      
                                                         x
                                                         
                                                            k
                                                            h
                                                         
                                                      
                                                      
                                                         x
                                                         
                                                            i
                                                            h
                                                         
                                                      
                                                   
                                                
                                                /
                                                
                                                   R
                                                   x
                                                   T
                                                   h
                                                   r
                                                   e
                                                   s
                                                   h
                                                   _
                                                   m
                                                   w
                                                   a
                                                   t
                                                   t
                                                   s
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             1
                                             /
                                             
                                                S
                                                I
                                                R
                                                T
                                                h
                                                r
                                                e
                                                s
                                                h
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          for
                                          
                                          all
                                          
                                          i
                                          
                                          and
                                          
                                          for
                                          
                                          all
                                          
                                          h
                                       
                                    
                                 
                              
                           
                        
                     
                  

Note that the introduction of these constraints to the model (8)−(14) transforms it into a QCBP. This extended coloring problem is much harder to solve as compared to the standard minimum coloring problem due to these quadratic constraints. We use IBM's commercial solver CPLEX (IBM ILOG CPLEX, 2010) to solve our QCBP formulation of the extended coloring problem due to its ability to handle quadratically constrained programs (QCPs).

We extend our existing greedy minimum-coloring heuristics (Chaudhry et al., 2013) to handle the cumulative interference constraint as described below. The main idea is to check this new constraint whenever a wireless link is considered for assignment to a particular color. This same check could be incorporated in any constructive minimum coloring heuristic; our particular heuristics are representative of the results that can be achieved.

Our randomized greedy heuristics for the solution of the extended minimum coloring problem for frequency channel assignment in multi-hop wireless networks have these steps: (1) find a WMaIS of vertices that satisfies the cumulative interference constraint and assign the members of this set to the same frequency channel, (2) remove these vertices from the conflict graph, and (3) repeat until all vertices are colored. The number of frequency channels needed for interference-free communication is equal to the number of WMaISs. Since finding a maximum independent set is itself NP-hard (Garey, Johnson, & Stockmeyer, 1976), we use heuristics for this step.

Given the conflict graph F = (V, E) where V is the set of vertices and E is the set of arcs in the conflict graph, Algorithm 1
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     
                      starts by selecting a vertex from the conflict graph with the maximum number of incident arcs and creates a new set of vertices LC
                      having this single entry. Another vertex Vj
                      in V is added to LC
                      provided it satisfies two conditions:

                        
                           •
                           it does not directly conflict with vertices already in LC
                               (Step 12), and

all vertices in LC
                               ∪ Vj
                               satisfy the cumulative interference constraint considering the power received from all other vertices in LC
                               ∪ Vj
                               (Step 13).

The conflict matrix contains the data needed to check this second condition, which is an extension of the simple coloring problem to handle group conditions.

Two additional variants of Algorithm 1 differ from it only in how the initial node is selected. The first variant starts by selecting a vertex from the conflict graph with the minimum number of incident arcs. The second variant starts by selecting a vertex at random from the conflict graph. It is usually true that there are multiple candidates for the initial node in Algorithm 1 and the first variant, in which case ties are broken randomly. We also investigated a variant of these algorithms in which the order of the links is randomized before Step 11; it was discarded because it worsened the results.

The worst case computational complexity of our algorithms is O(m
                     2) where m is the number of vertices in the conflict graph. These heuristics are very quick, so we run each variant 25 times on the conflict graph and take the best solution over all 75 runs.

Our heuristics may appear similar to RLF, but there are important differences. Both Algorithm 1 and RLF start by selecting a vertex from the conflict graph with the maximum number of incident arcs. Besides checking the cumulative interference constraint in Step 13, the major difference is in selecting vertices to add to the independent set under construction. RLF selects a vertex with the maximum number of incident arcs from among the remaining vertices, while our heuristics simply check each vertex in the conflict graph sequentially and put it in the weighted maximal independent set under construction if it does not conflict with any vertices already in the set, while also satisfying the cumulative interference constraint in Step 13.

@&#PERFORMANCE EVALUATION@&#

We evaluate the performance of our heuristics for the minimum coloring stage of our linear-array beamforming-based channel assignment (LAB-CA) method (Chaudhry et al., 2014) on conflict graphs generated from 25 different controlled random topologies (CRTs) based on a 500 m × 500 m physical terrain divided into 36 cells. Different networks are created by placing a wireless node randomly within each cell according to a uniform random distribution and then assigning different connectivity properties to each node. The node-degree of a wireless node is defined as the number of neighbors it can communicate with simultaneously for message transmission. For some CRTs, the node-degree of all wireless nodes is fixed at a homogeneous value of six (LAB-CA_HG), and for others the node-degree of each wireless node is assigned a heterogeneous random value between two and six using a uniform random distribution (LAB-CA_HT). We use different link data rates and multi-path routes (these affect the construction of the conflict graph).

The main metrics for evaluation of the heuristic are (i) the number of frequency channels used, (ii) solution time in seconds, and (iii) difference (or maximum possible difference) from the true minimum number of channels required. The true minimum value is provided by an exact QCBP formulation written in the AMPL modeling language (Fourer, Gay, & Kernighan, 2003) and solved using the CPLEX 12.2 solver (IBM ILOG CPLEX, 2010). MATLAB version 7.8 (The MathWorks Inc., 1992) was used to implement the heuristics. MATLAB, AMPL, and CPLEX were run on a desktop PC having an Intel Core 2 Quad Q8200 processor running at 2.33 gigahertz, and 8 gigabytes of memory. The operating system was Windows Vista Business with Service Pack 2.

Binary programming solutions can take a very long time, especially in problems such as this one that have a great deal of symmetry. To speed the solution we reduce the search space by setting the maximum number of colors that can be used equal to the number of frequency channels required (NCR) returned by our heuristic, which will be a close upper bound on the true minimum number of channels required. We also use a formulation given by constraints (13) and (14) that helps to limit the number of equivalent symmetric solutions in the search space (Méndez-Díaz & Zabala, 2006, 2008). All CPLEX parameters are set at their default values, and the solution time is limited to 3600 seconds. Where the QCP solver terminates successfully we are able to calculate the exact difference between the NCR for our heuristic and the optimum solution. When the QCP solver times out we use the best bounding function value at time-out to calculate the maximum possible difference between the NCR for our heuristic and the optimum solution. Note that the true difference may be much lower than the maximum possible difference, and in fact may be zero, however the QCP solver is not able to determine that within the time limit.

The conflict graph reflects only the direct conflicts between pairs of communication links (smaller interference quantities are captured in the conflict matrix). Still, the number of direct conflicts in the conflict graph is a measure of how difficult the channel assignment problem is. Table 1 shows the number of conflicts in the conflict graph (NCCG) for LAB-CA_HT and LAB-CA_HG. The average number of conflicts in the conflict graph for the twenty-five CRTs is 378, 538 and 876 for LAB-CA_HG at link data rates of 12 megabits per second, 24 megabits per second and 54 megabits per second, respectively; and 390, 627 and 1058 for LAB-CA_HT at link data rates of 12 megabits per second, 24 megabits per second and 54 megabits per second, respectively. The number of conflicts in the conflict graph increases as the link data rate increases for both LAB-CA_HT and LAB-CA_HG.

Many coloring instances are available in the literature, but cannot be used here since they lack the interference data needed to construct our conflict matrix. The conflict matrix is essential to solving the extended coloring problem because it allows us to detect a group conflict which cannot be represented by a simple conflict graph.

@&#RESULTS@&#

The evaluation of the heuristic in terms of NCR is presented in Tables 2, 3 and 4 for LAB-CA_HT at link data rates of 54 megabits per second, 24 megabits per second and 12 megabits per second, respectively; and in Tables 5, 6 and 7 for LAB-CA_HG at link data rates of 54 megabits per second, 24 megabits per second and 12 megabits per second, respectively.

In Table 2 for CRT #2, the optimum solution NCR is 18, the heuristic solution NCR is 19, and the exact difference between the heuristic and optimum solutions is 1 channel. Non-zero values of absmipgap and relmipgap are returned by the CPLEX QCP solver when it exceeds the time limit. Absmipgap is the absolute value of the difference between the best integer solution found by time-out and the lowest bound for any unsolved node remaining in the search tree at time-out. Relmipgap is the ratio between absmipgap and the best integer solution found by time-out. For example, in Table 2 for CRT #4, the best integer solution found by time-out is 14 (as shown in the QCBP NCR column), absmipgap is 2 and relmipgap × 100 is 14.29. This means that the NCR of 14 is within 2 channels (14.29%) of the optimum solution, i.e. the true optimum NCR could be 12 or 13 or 14. Since the heuristic NCR is 16, the maximum possible difference is 16 − 12 = 4.

As shown in Tables 2–7, there are no cases with a maximum possible difference of 4 or greater except for CRT #4 and CRT #8 in Table 2. The absmipgap was 2 in both cases. We re-ran these cases without any time limit and with n equal to 12 for CRT #4 and 11 for CRT #8. CPLEX found 12 to be infeasible for CRT #4 after 980.84 seconds and 11 to be infeasible for CRT #8 after 181072.26 seconds. This means that the optimum solution for CRT #4 cannot be 12 but could be 13 or 14. The heuristic solution for this CRT is 16, so the maximum possible error of the heuristic is only 3 channels. Similarly, the optimum solution for CRT #8 cannot be 11 but could be 12 or 13. The heuristic solution for this CRT is 15, so the maximum possible error of the heuristic solution is 3 channels.

The evaluation of the heuristic in terms of exact difference and maximum possible difference from the optimum solution is presented in Figs. 1 and 2 for LAB-CA_HT at different link data rates, and in Figs. 3 and 4 for LAB-CA_HG at different link data rates. As shown in these figures and Tables 2–7, our heuristics provide reasonable solutions for NCR in comparison with the true optimum. They find the true optimum solution for 11 CRTs for LAB-CA_HT and for 18 CRTs for LAB-CA_HG.

Where the optimum solution is known (i.e. CPLEX does not time out), the error of the heuristic is at most one channel more than the optimum solution for 33 out of 45 CRTs for LAB-CA_HT (Fig. 1), and for 45 out of 53 CRTs for LAB-CA_HG (Fig. 3). The maximum error is at most two channels for all CRTs (Figs. 1 and 3).

When the true optimum is not known, the maximum possible error is found by comparing to the bound returned by the QCP solver at time-out. The maximum possible heuristic error in this case is at most two channels for 63 out of 75 CRTs for LAB-CA_HT (Fig. 2), and for 66 out of 75 CRTs for LAB-CA_HG (Fig. 4). The maximum possible error for all CRTs is at most three channels (Figs. 2 and 4).

Our heuristic is significantly faster than the exact QCBP method, by about three orders of magnitude on average. The average time difference between the QCBP solution and our solution is around 1418 seconds over our test set. There is only a single instance in which the QCBP solution is faster (by 0.125 seconds).

The exact QCBP solution time increases with the increase in the number of conflicts in the conflict graph as this creates a larger problem that is more difficult to solve. This is seen as the link data rate increases for both LAB-CA_HT (Tables 2–4) and LAB-CA_HG (Tables 5–7).

@&#CONCLUSIONS@&#

The frequency channel assignment problem in multi-hop wireless networks is similar to the minimum coloring problem, except that interference is not neatly captured in a simple conflict graph because small amounts of interference at several links can accumulate to an unacceptable total. We thus augment the conflict graph with a conflict matrix that also lists the amount of potentially interfering signal power received at each wireless node from each other node. This power is then considered during our heuristic channel assignment to make sure that the total interfering power from other links assigned to the same channel does not cause an unacceptable level of interference at any link in this group of links assigned to this channel.

Our heuristic method for this extended coloring problem provides solutions of high quality in a very short amount of time as compared to an exact QCBP formulation, and is unaffected by the link data rate or whether the wireless nodes have heterogeneous or homogeneous node-degrees.

This is the first such solution algorithm for the minimum coloring stage of the channel assignment problem in wireless mesh networks that considers the effect of cumulative interference. The short heuristic solution times (in the range of 1–3 seconds) are essential for quick reconfiguration of dynamic wireless mesh networks. The algorithm can be applied to many kinds of multi-hop wireless networks, including wireless ad hoc networks, wireless sensor networks, etc.

Other constructive greedy minimum coloring heuristic algorithms can be modified for solving this extended coloring problem of frequency channel assignment in multi-hop wireless networks. Our results are representative of those likely to be obtained by similar heuristics. We plan to modify the RLF algorithm by adding the cumulative interference constraint and compare its performance with our heuristic in terms of number of frequency channels and solution time.

@&#REFERENCES@&#

