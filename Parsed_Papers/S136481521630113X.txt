@&#MAIN-TITLE@&#Toward improved simulation of river operations through integration with a hydrologic model

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The river/reservoir operations model MODSIM is coupled to MODFLOW.


                        
                        
                           
                           Models simulate physics based hydrology and priority/rule based water allocation.


                        
                        
                           
                           Coupling uses a Picard iteration and an implicit, mass conservative solution.


                        
                        
                           
                           Model simulates conjunctive use of surface water and groundwater.


                        
                        
                           
                           Helps evaluate groundwater sustainability resulting from alternative management.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Conjunctive use

Groundwater–surface water interaction

MODFLOW

MODSIM

River-operations modeling

Integrated environmental modeling (IEM)

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

MODSIM-MODFLOW

MODSIM-MODFLOW is the integration of two widely used and freely-available codes used within the field of water-resource planning and management. The nature of the coupling in MODSIM-MODFLOW sets it apart from other river-operations/hydrologic-model couplings in that the codes iterate at the time-step level and share information via computer memory. Users are required to construct working MODSIM and MODFLOW models prior to using the integrated code and must adhere to each code's input-file formatting requirements. Using the custom-code interface available with MODSIM, the models are integrated by mapping surface-water features represented in both models to one another.

Eric Morway (emorway@usgs.gov), with MODFLOW contributions from Rich Niswonger (rniswon@usgs.gov) and MODSIM contributions from Enrique Triana (Enrique.Triana@mwhglobal.com)

Research supported by grant (1360506/1360507) from the Water Sustainability & Climate Program jointly funded by the National Science Foundation and U.S. Department of Agriculture/National Institute of Food & Agriculture and by the U.S. Geological Survey's Groundwater Resources Program.

C#, C++, Fortran

Windows with.NET Framework 3.5 installed

Download MODSIM from http://modsim.engr.colostate.edu/. A version of MODFLOW compiled as dynamic-link library and required by the integrated code is available upon request from the corresponding author. Finally, users will need to download and install the C++ redistributable package for Microsoft Visual Studio 2012 available from Microsoft.


                  
                     “Inevitably, as each generation must learn, the land and the waters will instruct us in the ways of community.”
                     Justice Gregory J. Hobbs, Jr.
                  
               

@&#INTRODUCTION@&#

Efforts to address the growing divide between water supply and water demands are complicated by uncertain supplies resulting from climate variability, growing demands, shifting societal values, over-allocation of water resources, trans-boundary compacts, institutionalized inefficiencies, and complex legal entanglements rooted in conjunctive use, among others. The predictive capabilities of simulation models may be the only viable means by which to forecast the potential impacts of alternative management decisions (Singh, 2010). Thus, models are frequently relied upon for identifying potential trade-offs among alternative management strategies. Yet the potential complications resulting from an alternative management strategy can scarcely be appraised with a suitable level of accuracy if the hydrologic consequences caused by those decisions are over-simplified. An important example is the application of operations models that do not properly represent finite groundwater supplies and temporally varying groundwater and surface-water (GW-SW) exchanges. Due to the time delays of groundwater responses to surface-water and groundwater management actions, the effects of a new management decision may range from days to decades as it propagates through the connected river-aquifer system. Oversimplified assessment of the impacts of water-use decisions can interfere with meaningful reform of current water-use practices.

Two pertinent examples of the importance of groundwater return flow in the execution of river operations are found in Colorado, though many other examples are available (e.g., Pulido-Velázquez et al., 2006; Rassam, 2011; Rassam et al., 2013; Shannon et al., 2000; Valerio et al., 2010). In Kansas v. Colorado 
                     
                        1
                     
                     
                        1
                        Kansas v. Colorado 514 U.S. 675, 131 L.Ed.2d 759, 115 S.Ct. 1733 (1995).
                      (Abrams, 2004), the simplifying assumptions regarding GW-SW interaction were at the focal point of deliberations. The U.S. Supreme Court ruled that irrigation wells installed in Colorado (CO), located upstream of Kansas (KS), after the execution of the CO-KS interstate compact in the late 1940s did in fact “materially deplete” Arkansas River flows in direct violation of the governing compact (Colorado Revised Statutes, 1949), thereby injuring Kansas surface-water users (Hobbs, 2009; Willis et al., 2008). The Special Master's
                        2
                     
                     
                        2
                        The Special Master appointed by the U.S. Supreme Court was Arthur Littleworth, a Senior Partner at Best, Best & Krieger. The case lasted from 1990 until 2003, and his Fourth Report was argued before the U.S. Supreme Court.
                      findings, informed by the Hydrologic-Institutional (“H-I”) model simulations, were affirmed by the U.S. Supreme Court (Luecke, 2010) and scores of irrigators had their pumping curtailed (Littleworth, 2003, pgs. 8–9).

The second example is from the Platte River basin, which is the next major river basin to the north. A ‘substitute water supply plan’ (SWSP) approved by the Colorado State Legislature and implemented by the Colorado State Engineer's Office allowed junior-righted irrigation wells to operate provided they augment surface-water flows in sufficient amount to prevent injury to senior surface-water right holders, a calculation that acknowledges the influence of GW-SW connections and thereby requires a detailed hydrologic model (Howe, 2008). The SWSP had been operating successfully for nearly 30 years before the Colorado Supreme Court ordered the curtailment of pumping in nearly 400 irrigation wells starting in 2006, a move that recognized the impact irrigation wells were having on the already low surface-water flows, and, by extension, on the senior surface-water right holders (Ross, 2014). However, after the court order, water tables rebounded more than expected, negatively impacting home-owners by flooding basements and raising questions regarding curtailment of pumping in the irrigation wells (Waskom, 2014). In these and other examples, the influence of GW-SW exchange on in-stream flows, and therefore on the effective execution of river operations, cannot be overstated.


                     Rassam (2011) points out that failure to account for GW-SW interaction during periods of low flow limits the forecasting ability of an operations model. Heavy overdraft of the aquifer during average to dry conditions not only impacts GW-SW interaction in the near term, but may sap river water for years, especially during extended droughts. In most hydrogeologic systems, pumping will intercept regional groundwater flow that historically returned to the river, thereby resulting in reduced base flow and consequently reduced river flows that can persist for decades after pumping has ceased (Barlow and Leake, 2012). Conversely, conjunctive use of groundwater and surface-water resources during average to wet years may reduce senior surface-water users' reliance on surface water. As patterns in surface-water usage emerge in this context, the onset of dry conditions may give rise to conflict under the “use it, or lose it” principal that accompanies the prior appropriation doctrine (Wilds, 2010). Finally, though not the focus of this paper, a significant consideration for future integrated hydrologic and operations-modeling studies is the role GW-SW interaction plays on water quality (Sophocleous, 2002; Winter et al., 1998), a facet of river-operations modeling that will likely receive increased scrutiny in the future. Thus, accounting for the impact of pumping on river flows is critically important for river-operations modeling in the 21st century (Brooks et al., 2012; Simonovic, 2000).

In addition to the benefits that hydrologic models provide to operations models, operations models can greatly benefit common applications of hydrologic models, such as for water availability studies (Gleick, 1987). For example, where measurements of historical reservoir releases and river diversions are limited, operations models can be used to estimate anthropogenic components of water distribution. The ability to simulate river operations within basin-scale hydrologic models provides an accurate portrayal of the state of the basin in simulations of future conditions. That is, an integrated operations-hydrologic model requires no a priori specification of actual diversion amounts; the operational framework adhered to by the operation-side of the integrated code will dynamically allocate the yet unknown resource at model runtime, subject to all of the priorities and constraints specified by the user. Operations models provide a method to simulate the demand for water in conjunction with the hydrologic model that limits the availability of water supply within the hydrologic environment. If water users have supplemental groundwater rights, reasonable estimates of pumping can be calculated as the difference between the estimated water demand provided by the operations model and the surface-water shortfall provided by the hydrologic model (Schmid and Hanson, 2009). Historical conjunctive use of surface water and groundwater is typically unknown for many basins, and, as a result, simulation can improve the understanding of historical and projected supply versus demand within these systems.

A review of the literature indicates a lack of truly integrated operations-hydrologic codes. Currently, many simplifications are used within river operations models to approximate the underlying groundwater resource. Approaches for representing groundwater in operations models include response coefficients calculated using a calibrated groundwater model (Fredericks et al., 1998) or by simplified one-dimensional equations such as the Glover solution (Glover, 1977); a single feed-forward iteration with output calculated by a distributed-parameter model such as MODFLOW (Valerio et al., 2010), PARFLOW (Condon and Maxwell, 2013), or WEAP21 (Sieber and Purkey, 2007; Yates et al., 2005); analytical solutions that assume linearity to approximate the cumulative effect of individual stresses (Rassam, 2011; Welsh et al., 2013); and the use of surrogate models such as artificial neural networks (ANNs) trained by models such as MODFLOW for emulating GW-SW interactions under variable management (Triana, 2008). In the present work, we analyze the importance of integrating operations and hydrologic models, such that the models iterate multiple times within a time step to determine a balanced solution between the available water supply simulated by the hydrologic model and the subsequent distribution of that supply among the demands specified within the operations model. We demonstrate that without convergence between the operations and hydrologic models, erroneous diversion amounts are simulated and significant mass-balance errors are accumulated owing to inaccurate representation of GW-SW interaction.

An integrated operations-hydrologic model that iterates between the respective codes within each time step until specified convergences are attained provides a modeling platform that more accurately accounts for nonlinear feedbacks between water operations and water supply. Because groundwater is an integral component of most alluvial aquifer systems, it will strongly influence the predicted response to potential alternative management scenarios in many river systems, including operational changes (e.g., land fallowing), demand management (e.g., crop type), infrastructure changes (e.g., converting flood to sprinkler irrigation), and conjunctive-use strategies. Due to the profound impact that water operations have on water use and distribution, and, likewise, the impact that water supply has on water operations, integration of these aspects of water resources clearly points toward integrations of software that achieve these capabilities. Thus, an integrated approach to river operations and hydrologic modeling is provided here for exploring sustainable management of groundwater and surface-water supplies.

A ‘what-if’ scenario in the context of water-resources simulation is an approach that tries to evaluate both obvious and unforeseeable outcomes associated with changes in water use or water supply. The value of ‘what-if’ scenarios common to most river operations and planning simulations is diminished when these simulations do not represent the finite storage of aquifers, head dependent GW-SW exchanges, and capture of natural groundwater discharge, as these processes control flow in rivers (Winter et al., 1998). Although it is well recognized that groundwater plays a profound role on surface-water supplies, representation of groundwater in operations models has failed to keep up with technology developed in the GW-SW literature (Fairbanks et al., 2001; LaBolle et al., 2003; Markstrom et al., 2008; Panday and Huyakorn, 2004). Recent drought in the western US has exposed the limitations of water supplies, especially with regard to groundwater supplies (Castle et al., 2014). As drought continues to apply stress on finite groundwater supplies, it is clear that realistic representation of groundwater resources is necessary for managing water resources in the 21st century.

Therefore, the primary objective of this paper is to present a new approach wherein an operations/planning model is integrated with a hydrologic model capable of simulating GW-SW exchange at the time-step iteration level. An important distinction between the loosely-coupled (sometimes referred to as “sequentially-coupled”) models already available (Rassam, 2011; Sieber and Purkey, 2007; Valerio et al., 2010; Welsh et al., 2013) and the iteratively coupled models described here, is that in the iteratively coupled approach, neither model advances in time until differences in simulated values over an iteration fall below convergence criteria specified for each model individually and for quantities common to both models simultaneously. Using a hypothetical river basin modeled after a real river basin characteristic of semi-arid conditions in the western United States, scenarios are presented that highlight the value of integrating a river-planning/operations model (hereafter referred to as an operations model) with a GW-SW model as a tool for water-resources management. The integrated MODSIM-MODFLOW model is presented as an advancement over previously available codes because of its ability to simulate a much wider class of water-resources problems. We highlight the importance of iterative coupling over sequential coupling to achieve an accurate and mass-conservative solution that is robust over a wide range of management, climatic, and hydrologic conditions.

In this work, the Newton formulation (MODFLOW-NWT; Niswonger et al., 2011) of the groundwater-flow model MODFLOW (Harbaugh, 2005) is coupled to the operations/planning model MODSIM (Labadie, 2010a). Although there are a wide-array of hydrologic and river-operations models available in the literature, MODFLOW and MODSIM were chosen for the work presented herein because they are popular and freely available, are numerically efficient and stable, and have a software architecture that promotes enhancement, such as coupling to the watershed runoff model PRMS (GSFLOW; Markstrom et al., 2008). Other hydrologic models that might have been used include MODHMS (Panday and Huyakorn, 2004) and HydroGeoSphere (Therrien et al., 2006), whereas WaterWare (Jamieson and Fedra, 1996), RiverWare (Zagona et al., 1998) (reference), WEAP (Yates et al., 2005), or WRAP (Wurbs, 2013), might have been used to represent water-resource operations. MODSIM customization capabilities allow the user to write code that is compiled with the MODSIM solver, making possible low-level integration with other models. Moreover, widely-varying hydrogeologic settings coupled with disparate sets of legal doctrines necessitate the use of generalized tools that are both customizable and defensible. As to the former, both MODFLOW and MODSIM are offered as generalized software that can be customized to specific river systems. Because of this, both have found widespread acceptance and application to many of the world's most important river basins.

Management capabilities currently exist in MODFLOW; two examples are MODFLOW-GWM (Ahlfeld et al., 2005) and MODFLOW-FMP (Schmid and Hanson, 2009), with other versions of MODFLOW, such as MODFLOW-CDSS (Banta, 2011), compiled for use by river-operations models like StateMod (Alvarado and Bennett, 2005; Bennett, 2012). However, there are important distinctions between the MODSIM-MODFLOW model developed herein and these other MODFLOW based management codes. MODFLOW-GWM is a management tool that optimizes water use to achieve balances between meeting water demands and satisfying constraints related to water supply and other environmental factors. It is important to note that GWM does not include capabilities to represent rule and priority based water-allocation systems or reservoir operations. Conversely, MODSIM-MODFLOW is focused on representing laws that govern water use, which is distinct from the simulation-optimization capabilities of MODFLOW-GWM. This distinction also applies to the difference between MODSIM-MODFLOW and MODFLOW-FMP, which was recently re-released with added functionality as MODFLOW-OWHM (Hanson et al., 2014; Schmid et al., 2014). MODFLOW-FMP does not provide capabilities for representing rule and priority-based water allocation. Rather, water allocation is demand based. It should be noted that MODFLOW-GWM and MODFLOW-FMP offer capabilities that are not available in MODSIM-MODFLOW, and, as such, may be the most appropriate code for a particular water-management problem. MODSIM-MODFLOW is intended as a simulation tool for analyzing water-resources problems in basins that are governed by rule and priority controls on water allocation, as well as reservoir operations.

@&#METHODS@&#

MODSIM is a generic river-basin management decision-support system capable of simulating complex, large-scale surface-water networks, and excels in the area of administering water in systems governed by water rights, administrative constraints, and agreements. However, MODSIM standard functionality approximates stream capture by wells using simplified one-dimensional equations or estimated stream-depletion factors. Stream seepage rates can be specified prior to model execution, but must be determined outside of the simulation process and do not account for the transient behavior of GW-SW interactions or the effects of climate variability. A more robust approach for simulating changes in groundwater storage and GW-SW interaction affected by river-system management changes is to use a three-dimensional groundwater-flow model such as MODFLOW. Accordingly, weaknesses in MODSIM are bolstered by the strengths of MODFLOW, and vice versa. For example, MODSIM does not simulate spatially and temporally varying GW-SW interaction due to changes in pumping, climate, or other groundwater-recharge or groundwater-discharge processes. MODFLOW can simulate these processes through a wide variety of boundary-condition packages that account for interactions with surface-water features (Hughes et al., 2012; Merritt and Konikow, 2000; Niswonger and Prudic, 2005) and the unsaturated zone (Niswonger et al., 2006) and the effects of groundwater pumping (Harbaugh, 2005; Konikow et al., 2009) However, options currently available for simulating streamflow diversions with the SFR2 streamflow routing package (Niswonger and Prudic, 2005) and (or) releases from reservoirs with the LAK3 package (Merritt and Konikow, 2000) are not capable of accounting for prior-appropriation water rights and reservoir operations, and lack the functionality to divert water based on priorities (or rules) that are not in downstream order. Moreover, it is not possible to use MODFLOW alone to explore “what-if” water-management scenarios such as permanent or temporary water-right transfers from agriculture to municipal uses or among alternative agricultural uses, or the creation of reservoir storage accounts that affect river flows.

MODSIM is designed to allocate river flows and stored water based on physical and legal availability, while also capable of simulating complex operations such as river exchanges (i.e., water-market type trades), minimum instream-flow requirements, and multi-reservoir systems. Thus, MODSIM and MODFLOW are integrated such that they reach a converged solution for every time step by satisfying the water-right rules that are constrained by water availability simulated by MODFLOW. The newly developed code will provide water planners and managers in appropriated systems with a more robust decision-making support tool than either model could achieve when applied independently.

MODSIM is short for MODified SIMyld and is freely available for download at 
                           http://modsim.engr.colostate.edu/index.shtml
                        . Its predecessor, SIMYLD, was an open-source network-flow model developed in the early 1970s by the Texas Water Development Board (Shafer and Labadie, 1978). MODSIM uses a minimum-cost network-flow optimization algorithm to allocate run-of-the-river flows and stored volumes among a specified set of demands according to the institutional framework governing the distribution of water. Moreover, the solution technique to the network-flow problem solves the continuity equation and ensures conservation of water. Unregulated inflows to the model domain, consumptive and instream-flow demands, reservoir and channel evaporation, precipitation, exchanges with the groundwater system, reservoir storage rights and exchanges, and reservoir operating targets are each simulated as network elements within MODSIM (Shourian et al., 2008).

MODSIM takes advantage of the linear-network structure of the modeled system and minimizes the following objective function for each time period 
                           
                              t
                              =
                              1
                              ,
                              …
                              ,
                              T
                           
                         (Labadie, 2010a):
                           
                              (1)
                              
                                 
                                    M
                                    i
                                    n
                                    i
                                    m
                                    i
                                    z
                                    e
                                    
                                    
                                       ∑
                                       
                                          l
                                          ∈
                                          A
                                       
                                    
                                    
                                       
                                          c
                                          l
                                       
                                       
                                          q
                                          l
                                       
                                    
                                 
                              
                           
                        
                     

Subject to:
                           
                              (2)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          
                                             O
                                             i
                                          
                                       
                                    
                                    
                                       
                                          q
                                          j
                                       
                                    
                                    −
                                    
                                       ∑
                                       
                                          k
                                          ∈
                                          
                                             I
                                             i
                                          
                                       
                                    
                                    
                                       
                                          q
                                          k
                                       
                                    
                                    =
                                    
                                       b
                                       
                                          i
                                          t
                                       
                                    
                                    
                                       (
                                       
                                          
                                             q
                                             →
                                          
                                       
                                       )
                                    
                                    ;
                                    
                                    for
                                    
                                    all
                                    
                                    i
                                    ∈
                                    N
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       l
                                       
                                          l
                                          t
                                       
                                    
                                    
                                       (
                                       
                                          
                                             q
                                             →
                                          
                                       
                                       )
                                    
                                    ≤
                                    
                                       q
                                       l
                                    
                                    ≤
                                    
                                       u
                                       
                                          l
                                          t
                                       
                                    
                                    
                                       (
                                       
                                          
                                             q
                                             →
                                          
                                       
                                       )
                                    
                                    ;
                                    
                                    for
                                    
                                    all
                                    
                                    l
                                    ∈
                                    A
                                 
                              
                           
                        where 
                           
                              
                                 c
                                 l
                              
                           
                         are the costs, weighting factors, or water-right priorities per unit of flow rate within link l (unitless); 
                           
                              
                                 q
                                 l
                              
                           
                         is the integer-valued flow rate in link l (L3/T); A is the set of all links in the network; 
                           
                              
                                 O
                                 i
                              
                           
                         is the set of all links originating at node i (i.e., outflow links); 
                           
                              
                                 I
                                 i
                              
                           
                         is the set of all links terminating at node i (i.e., inflow links); 
                           
                              
                                 b
                                 
                                    i
                                    t
                                 
                              
                           
                         is gain (positive) or loss (negative) at node i in time step t; N is the set of all nodes; 
                           
                              
                                 l
                                 
                                    l
                                    t
                                 
                              
                           
                         and 
                           
                              
                                 u
                                 
                                    l
                                    t
                                 
                              
                           
                         are the lower and upper bounds on the flow in link l (L3/T) at time step t, respectively; and the vector 
                           
                              
                                 q
                                 →
                              
                           
                         is the unknown set of network flow rates (L3/T) determined at each model time step. Allowing the link constraints 
                           
                              
                                 l
                                 
                                    l
                                    t
                                 
                              
                           
                         and 
                           
                              
                                 u
                                 
                                    l
                                    t
                                 
                              
                           
                         and node supplies 
                           
                              
                                 b
                                 
                                    i
                                    t
                                 
                              
                           
                         to vary as functions of 
                           
                              
                                 q
                                 →
                              
                           
                         enables non-network constraints to affect the solution, including nonlinearities related to the interdependence of reservoir surface area on evaporation, precipitation, and reservoir exchange with groundwater. Equations (2) and (3) represent constraints on mass balance (continuity) and flow-dependent diversions, such as minimum in-stream flows or maximum conveyances. Although the magnitude of the costs, 
                           
                              
                                 c
                                 l
                              
                           
                        , are arbitrarily set by the user, their relative values must be ordered such that the most senior priority has the most negative cost. In this way, junior surface-water demands are the first to be curtailed during water limited periods.

Equations (1)–(3) are solved by the RELAX-IV Lagrangian relaxation algorithm (Bertsekas and Tseng, 1994), which provides a solution that is up to two orders of magnitude faster than the revised simplex method of linear programming (Labadie, 2010a). The set of flows 
                           
                              
                                 q
                                 →
                              
                           
                         found by the RELAX-IV algorithm are subsequently used to update the estimates of parameters 
                           
                              
                                 b
                                 
                                    i
                                    t
                                 
                              
                           
                        , 
                           
                              
                                 l
                                 
                                    l
                                    t
                                 
                              
                           
                        , and 
                           
                              
                                 u
                                 
                                    l
                                    t
                                 
                              
                           
                        , and the network-flow solution continues iterating until convergence is achieved. Additional explanation of advanced features as well as the solution algorithm can be found in the MODSIM manual, appendices, and tutorials (Labadie, 2010b), available from the MODSIM homepage. Detailed inter-model comparisons between MODSIM and other river operations models can be found in Winchester (2008), Wurbs (2012), Sulis and Sechi (2013), and Johnson (2015). In each of the four studies, MODSIM was well ranked among the other models considered in the study. Table 1
                         provides a list of selected MODSIM applications from around the world.

Developed and maintained by the U.S. Geological Survey and made freely available to the public, MODFLOW is a three-dimensional finite-difference groundwater-flow model. Through a robust modular structure that facilitates plug-in of new or enhanced functionality, additional simulation capabilities from a wide array of contributors has continually expanded upon its original scope.

MODFLOW solves a cell-centered finite-difference approximation of the groundwater-flow equation (Harbaugh, 2005):
                           
                              (4)
                              
                                 
                                    
                                       ∂
                                       
                                          ∂
                                          x
                                       
                                    
                                    
                                       (
                                       
                                          
                                             K
                                             
                                                x
                                                x
                                             
                                          
                                          
                                             
                                                ∂
                                                h
                                             
                                             
                                                ∂
                                                x
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       ∂
                                       
                                          ∂
                                          y
                                       
                                    
                                    
                                       (
                                       
                                          
                                             K
                                             
                                                y
                                                y
                                             
                                          
                                          
                                             
                                                ∂
                                                h
                                             
                                             
                                                ∂
                                                y
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       ∂
                                       
                                          ∂
                                          z
                                       
                                    
                                    
                                       (
                                       
                                          
                                             K
                                             
                                                z
                                                z
                                             
                                          
                                          
                                             
                                                ∂
                                                h
                                             
                                             
                                                ∂
                                                z
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    W
                                    =
                                    
                                       S
                                       s
                                    
                                    
                                       
                                          ∂
                                          h
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 K
                                 
                                    x
                                    x
                                 
                              
                           
                        , 
                           
                              
                                 K
                                 
                                    y
                                    y
                                 
                              
                           
                        , and 
                           
                              
                                 K
                                 
                                    z
                                    z
                                 
                              
                           
                         are values of hydraulic conductivity along the x, y, and z coordinate axes, (L/T); h is the groundwater head (L); W is a volumetric flux per unit volume representing sources and/or sinks of water, (T−1); Ss is the specific storage of the porous material (L−1); and t is time (T).

Streams and lakes/reservoirs having arbitrary geometry and are hydraulically connected with the underlying groundwater system are represented in MODFLOW using the SFR2 streamflow routing package (Niswonger and Prudic, 2004) and a modified version of the Lake (LAK3) Package (Markstrom et al., 2008; Merritt and Konikow, 2000; Prudic et al., 2004), respectively. Seepage from channels or lakes is calculated according to a Darcy-type formulation:
                           
                              (5)
                              
                                 
                                    
                                       Q
                                       
                                          g
                                          w
                                       
                                    
                                    =
                                    
                                       
                                          K
                                          w
                                          L
                                       
                                       m
                                    
                                    
                                       (
                                       
                                          
                                             h
                                             s
                                          
                                          −
                                          
                                             h
                                             
                                                a
                                                q
                                             
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        where 
                           
                              
                                 Q
                                 
                                    g
                                    w
                                 
                              
                           
                         is the seepage rate through a streambed or lake cell and may be positive (aquifer discharge to the stream or lake) or negative (stream or seepage loss to the aquifer) depending on the head differential between the groundwater and channel or lake; K is the hydraulic conductivity of the streambed or lakebed/aquifer sediments; w is a representative width of the stream or lake cell; L is the length of stream or lake cell corresponding to a volume of aquifer (sometimes taken as the length of meandering streams within a finite-difference cell); m is the thickness of the streambed or lake deposits; h
                        
                           s
                         is the head in the stream or the sum of the stream stage and the specified elevation of the streambed or lakebed; and h
                        
                           aq
                         is the calculated groundwater head in the finite-difference cell in which the stream reach or lake cell is simulated. Prudic et al. (2004) describe channel-geometry options that are available–for example, an 8-point cross-section or a user-supplied depth-discharge or width-discharge relationship. In addition, SFR2 accommodates any user-specified channel length within a grid cell, and can simulate steady or transient surface-flow conditions. Where the stream network flows in and out of lakes (or reservoirs), the LAK3 package may be used to exchange surface-water flows with the SFR2 package.

As discussed by Barlow and Leake (2012), the geology, basin and stream geometry, distribution of natural groundwater discharge, distribution of groundwater heads, and the location of wells all impact streamflow. Thus, the three-dimensional characterization of the hydrology and hydrogeology is important for realistically simulating the effects of GW-SW interactions on streamflow. In this work, the stream network is represented by the SFR2 package of MODFLOW and is made identical to its counterpart stream network represented in MODSIM to assure parallel representation of river-tributary-ditch connectivity in both MODFLOW and MODSIM. For the integration of MODSIM-MODFLOW, channel losses and gains passed to MODSIM are calculated by MODFLOW on the basis of surface-water stages relative to the calculated groundwater heads. Within the newly integrated MODSIM-MODFLOW code, diversions and releases (determined by MODSIM and sent to MODFLOW) and, conversely, GW-SW exchanges (calculated by MODFLOW and sent to MODSIM) are passed via computer memory, thereby allowing for a Picard nonlinear iterative-solution scheme to determine flows and potentiometric heads throughout the model domain and during each time increment. In summary, groundwater gains and losses affected by spatially and temporally varying pumping, riparian ET, and bank storage—that is, processes that influence surface flows—are fully accounted for when MODSIM solves for daily diversion amounts. Table 2
                         summarizes the role of each model regarding surface-water features that are common to both codes.

Integration at the time-step iteration level is easily accommodated using the MODSIM customization capabilities. That is, before MODSIM-MODFLOW advances to the next simulation time step, simulated flows by MODFLOW must be consistent with those simulated by MODSIM. Because MODSIM does not calculate potentiometric heads, calculated diversions (and lake or managed reservoir releases, when pertinent) are the sole quantities passed from MODSIM to MODFLOW. MODFLOW then re-solves the groundwater-flow equation and the GW-SW exchanges corresponding to the newest values of operationally compliant diversions and reservoir releases passed from MODSIM. The solution process for the integration of MODSIM-MODFLOW for a single time step is enumerated in the following steps:
                           
                              1.
                              Upon model initiation, MODSIM is run to calculate initial diversions and reservoir releases based on conditions specified in the MODSIM input file assuming no GW-SW exchanges among all elements in the link-node network

MODFLOW executes using diversions and reservoir releases calculated in step 1

MODSIM is rerun using updated GW-SW exchanges from the MODFLOW solution in the last iteration

MODFLOW is rerun using updated reservoir releases and diversions calculated in step 3

Steps 3 and 4 are repeated until convergence is reached

The simulation moves to the next time step, whereby the iterative process begins again at step 3, in which MODSIM uses the GW-SW exchanges calculated in the final MODSIM-MODFLOW iteration from the previous time step.

Prior to initiating the integrated code, it is recommended that the user develop a steady-state MODFLOW simulation using long-term average boundary conditions (Reilly and Harbaugh, 2004). Once satisfied that the steady-state solution roughly approximates aquifer conditions at the start of the transient solution, the steady-state groundwater head solution, soil-moisture distribution in the unsaturated zone, and lake stages should be inserted into the corresponding input files for use by the first transient time-step in the integrated code.

Model convergence is reached when changes in all diversion and reservoir-release rates (and/or flow in any additional stream segment, depending on user preferences) are below a specified tolerance between two successive iterations. The 
                           
                              
                                 L
                                 2
                              
                              N
                              o
                              r
                              m
                           
                         (Sun, 2013) is used for the convergence criteria:
                           
                              (6)
                              
                                 
                                    
                                       L
                                       2
                                    
                                    
                                    N
                                    o
                                    r
                                    m
                                    =
                                    
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            Q
                                                            
                                                               i
                                                               ,
                                                               k
                                                            
                                                         
                                                         −
                                                         
                                                            Q
                                                            
                                                               i
                                                               ,
                                                               k
                                                               −
                                                               1
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                          
                                       
                                    
                                    <
                                    δ
                                 
                              
                           
                        where 
                           
                              
                                 Q
                                 
                                    i
                                    ,
                                    k
                                 
                              
                           
                         is the MODSIM calculated flow rate for each managed diversion or release i and iteration k; 
                           
                              
                                 Q
                                 
                                    i
                                    ,
                                    k
                                    −
                                    1
                                 
                              
                           
                         is the MODSIM calculated flow rate for each diversion or release i and iteration k − 1; and 
                           δ
                         is the 
                           
                              
                                 L
                                 2
                              
                              
                                 
                                    
                                       
                                          N
                                          o
                                          r
                                          m
                                       
                                    
                                 
                              
                           
                         convergence criteria (Sun, 2013).

In this work, MODSIM and MODFLOW are called by the .NET integrator (Fig. 1
                        ). To facilitate the integration, MODFLOW is compiled as a dynamic-link library (DLL) and called multiple times within a given time step by the .NET integrator that implements the built-in custom-code interface (Fig. 2
                        ). Within Fig. 2, names appearing in the blue boxes on the left (e.g., “IterationTop” or “IterationConverge”, etc.) correspond to the ‘handlers’ within the MODSIM custom code module. Code written into the handlers is compiled with the MODSIM executable and subsequently executed as part of the MODSIM source code. It is through the custom-code interface that MODSIM users are able to access nearly all of the internal variables used by MODSIM to initialize, retrieve, and modify parameter values. Because of this, it is not necessary to access the full MODSIM source code for integration with MODFLOW.

There are seven handler locations within MODSIM: (1) OnInitialize, (2) OnMessage (3) OnError, (4) IterationTop, (5) IterationBottom, (6) IterationConverge, and (7) OnFinished. By their names, users can get a sense of when their custom code will be executed during the model run. However, for more information regarding the specific details of the custom-code functionality, readers are referred to the MODSIM manual and Tutorial C available with the MODSIM download (Labadie, 2010b).

Compiling MODFLOW as a DLL required that ‘themed’ sections of the MODFLOW code be wrapped (or bundled) in a unique function name, for example, ‘MFNWT_RUN,’ which contains all of the MODFLOW Formulate routines [that is, functions with “FM” appearing in their header within the MODFLOW source code (Harbaugh, 2005)] responsible for calculating the terms sent into the linear matrix solver. Once the code lying within MFNWT_RUN is completed, program control is returned to the. NET integrator, where subsequent calls to MODFLOW are made and checks for convergence are carried out. The code continues to iterate within a given time step as shown by Fig. 2, which shows the complete MODSIM-MODFLOW code flow.

The integrated MODSIM-MODFLOW code is applied to a hypothetical test model of an agricultural river basin located in a semi-arid environment (approximately 23 cm [9 in] of annual precipitation), where most of the water is supplied by upstream snowmelt. The test problems conceptually represent a shallow (37 m thick) alluvial aquifer underlain by an impermeable bedrock. Aquifer properties are uniform throughout the model domain and are summarized in Table 3
                     .

In the two scenarios presented below, the resulting impacts to both the hydrologic solution and operational decisions are assessed to highlight the advantages of an integrated operations-hydrologic simulation at the time-step level. For example, comparison of the changes in groundwater levels during the simulation period illustrates how river and reservoir operations affect groundwater sustainability in agricultural regions that conjunctively use groundwater and surface-water supplies.

Although the size and complexity of this example problem is simple relative to many real-world agricultural systems, it illustrates the complexities associated with conjunctive-use agricultural systems. Nonlinear processes that occur in this hypothetical test problem are consistent with those in larger real-world systems, and, as such, the problem provides an exploration of the feedbacks between water supply and water demand in an adjudicated river basin.

Although the MODSIM-MODFLOW integration offers many important advantages for a robust exploration of water resource allocation, there are some noteworthy challenges. Experienced river-operation modelers may be unfamiliar with MODFLOW and therefore find it difficult to navigate the myriad input files required by a MODFLOW simulation. Conversely, researchers and practitioners experienced with distributed-parameter hydrologic modeling may find representation of legal frameworks governing river administration in a modeling environment unfamiliar. That is, imparting real-world operating rules in a river-operations model may not be intuitive to newcomers of this field. Thus, it is important to recognize that water-resource investigations are increasingly multi-disciplinary, requiring a diverse set of expertise to design and implement complex solution strategies – the aforementioned ‘what-if’ scenarios (Brekke et al., 2009; Yates et al., 2005) – and should therefore be approached as a collaboration between river-operations specialists and experienced hydrologic modelers, as was done for this present work.

MODSIM attributes common to both investigated scenarios include four agricultural diversions from the main-stem river, sometimes referred to as “ditch-diversions.” Priorities are assigned to each of the four ditch-diversion locations; farm-level priorities are not represented, although the generalized nature of MODSIM and MODFLOW would allow representation of farm-level priorities. Each of the four diversions are hereafter referred to as ‘Command Area 1’ (CA1) through ‘Command Area 4’ (CA4), with CA1 being the most upstream, CA2 the next downstream diversion, and CA3 and CA4 the next two downstream diversions, respectively (Fig. 3
                        ). Each ditch was assigned two water rights of staggered priority. The tiered priorities are provided in Table 4
                        . The more negative a cost in MODSIM is, the more senior the priority (variable 
                           
                              
                                 c
                                 l
                              
                           
                         in Equation (1)); thus, the minimum instream-flow requirement mandated for the main-stem river just downstream of the confluence with the large tributary (Fig. 3) is the most senior right on the river, with a cost of −1100.

Due to its location, tributary flows at the confluence with the main river will, at times, satisfy the minimum instream-flow requirement. Under this circumstance, MODSIM will attempt to satisfy the maximum allocation allotment for each ditch, diverting all of the available river flow starting with the most senior priority. When tributary inflow fails to satisfy the minimum instream-flow requirement, ditch diversions will be curtailed, beginning with the lowest-priority ditch first. Depending upon water availability, MODSIM will turn off all diversions during the irrigation season in an attempt to satisfy the higher-priority minimum instream-flow requirement of 24,466 m3 d−1 (10 ft3 s−1).

One of the simulated scenarios, described in Section 4.3.2, takes advantage of reservoir storage capabilities provided by MODSIM. The LAK3 package simulates lake-aquifer interaction, but offers no functionality for simulating regulated operations (i.e., releases) from storage accounts within the reservoir other than a priori specification of releases. Thus, as streamflow, precipitation, overland runoff, and groundwater enters the reservoir, it is accrued in reservoir storage accounts specified by the user, provided senior water-right priorities elsewhere in the simulation are satisfied. Conversely, as water is removed from the reservoir (i.e., reservoir releases and/or direct withdrawals) and delivered to the owner through the surface-water network, it is deducted from the appropriate account(s). Other reservoir losses, including evaporation and seepage, are distributed equally among all of the storage accounts. That is, based on the feedback from MODFLOW regarding the interaction of the reservoir with the groundwater system, storage accounts are re-balanced in such a way that the losses are partitioned equally among all of the storage accounts, although user-specified preferences within MODSIM could direct the code to allocate these losses to a particular combination of accounts. Additional detail regarding the setup of storage accounts in the hypothetical test model is provided in Section 4.3.

The MODFLOW component of the test model spans the same period of time as the MODSIM model, from water year (WY) 1990 through WY 2006 (10/01/1989–09/30/2006). The MODFLOW-side of the simulation also uses the same daily stress periods as MODSIM, where a stress period in MODFLOW represents the period of time over which boundary conditions remain constant. Longer time steps could be chosen, so long as they are of equal length in both models. The total number of daily stress periods in the model is 6,210, and each stress period consists of a single daily time step. Spatially, the MODFLOW simulation is discretized into 64 rows, 133 columns, and 4 layers, representing the 37 m thick alluvial aquifer. The surface-water network is located within the upper model layer, which is a uniform 7 m across the model domain. Layers 2 through 4 are each 10 m thick. Horizontal discretization is 400 m square, resulting in 16 ha (∼40 acre) grid cells that correspond one-to-one with irrigated fields, as shown by the discretely shaded grid cells in Fig. 3. There are no specified-head boundaries within the model domain; lateral boundaries in all four layers of the model are specified as no-flow. A uniform, constant recharge of 9.6 m3 d−1 is applied to layer 4 grid cells that touch the upper (northern) and lower (southern) perimeter of the active domain and represents natural recharge from surrounding (non-modeled) lands. Total recharge, excluding recharge from agricultural inefficiencies and reservoirs and stream seepage losses, was set to 2870 m3 d−1 (1.2 ft3 s−1).

Streamflow entering the model domain occurs in the main channel (left-edge of the model domain) as well as in a tributary crossing midway along the lower-edge of the model domain (Fig. 3). At these two locations, the same inflow must be specified within both of the appropriate model-input files. Daily inflow hydrographs for the river and tributary are derived from continuously gaged records collected on the West Fork of the Carson River, located near Woodfords, CA, and Clear Creek, a tributary to the Carson River located near the south side of Carson City, respectively. Fig. 4
                            shows the annual total flow entering each of these locations. The simulation period roughly corresponds to a dry period (WY1990 – WY1994, with WY1993 the only exception), followed by five years of above average conditions (WY1995 – WY1999), followed by a five-year below average period (WY2000 – WY2004), and ends with a two year period of normal to above-average conditions (WY2005 – WY2006). All surface-water flow, including connections with the reservoir and alluvial aquifer, are simulated by use of the streamflow routing (SFR2) package (Niswonger and Prudic, 2005). More complex problems, including problems with overbank (2-dimensional) flow could be solved with the Surface-water Routing (SWR) package (Hughes et al., 2015) written for MODFLOW; however, the first release of MODSIM-MODFLOW does not facilitate use of the SWR package. Streambed hydraulic conductivities are 0.25 m d−1 in the river and its tributaries and 0.04 m d−1 in the delivery ditches. Hydraulic conductivity values for delivery ditches represented in the model are constant in time and the simulated seepage from them ranges between 10%–20% of the diverted amount, which is consistent with seepage values published for the region (Allander et al., 2014).

Once diverted, the SFR2 package calculates seepage (or groundwater return flow) using Equation (5) for each stream reach. Diverted water plus or minus ditch seepage is distributed among ‘cropped’ fields (i.e., MODFLOW grid cells) as irrigation water applied to land surface via the Unsaturated-Zone Flow (UZF1) package (Niswonger et al., 2006). Irrigation events are described in Section 4.3.3.

UZF1 partitions the applied irrigation water, whether derived from surface-water diversions or pumped groundwater, into ET, recharge, and unsaturated-zone storage changes. To accomplish this, the user specifies potential ET (pET), which varies by stress period (i.e., daily) within the UZF1 input file. pET arrays are based on values (i.e., solar radiation, dew point, wind speed, etc.) measured at a weather station situated in Carson Valley, Nevada, nearby where the streamflow hydrographs were recorded. Using guidelines described in ASCE-EWRI (2005) and Huntington and Allen (2010), the ASCE standardized grass reference ET (
                              
                                 E
                                 
                                    T
                                    o
                                 
                              
                           ) was calculated for each day (i.e., stress period) of the simulation. ET
                           
                              o
                            is resolved into actual ET (
                              
                                 E
                                 
                                    T
                                    a
                                 
                              
                           ) for five crop types typical of Carson Valley, NV, including (1) alfalfa, (2) corn, (3) grass hay, (4) highly managed pasture, and (5) lightly managed pasture, which are randomly assigned to the cropped cells within each command area (Fig. 3). To convert 
                              
                                 E
                                 
                                    T
                                    o
                                 
                              
                            to 
                              
                                 E
                                 
                                    T
                                    a
                                 
                              
                           , a dual crop coefficient approach is used:
                              
                                 (7)
                                 
                                    
                                       E
                                       
                                          T
                                          a
                                       
                                       =
                                       
                                          K
                                          c
                                       
                                       E
                                       
                                          T
                                          o
                                       
                                    
                                 
                              
                           
                           
                              
                                 (8)
                                 
                                    
                                       
                                          K
                                          c
                                       
                                       =
                                       
                                          K
                                          
                                             c
                                             b
                                          
                                       
                                       +
                                       
                                          K
                                          e
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    K
                                    c
                                 
                              
                            is the crop-specific coefficient for converting 
                              
                                 E
                                 
                                    T
                                    o
                                 
                              
                            to 
                              
                                 E
                                 
                                    T
                                    a
                                 
                              
                           , 
                              
                                 
                                    K
                                    
                                       c
                                       b
                                    
                                 
                              
                            is the basal crop coefficient and 
                              
                                 
                                    K
                                    e
                                 
                              
                            is the soil evaporation coefficient. 
                              
                                 
                                    K
                                    
                                       c
                                       b
                                    
                                 
                              
                            is the ratio of 
                              
                                 E
                                 
                                    T
                                    a
                                 
                              
                            to 
                              
                                 E
                                 
                                    T
                                    o
                                 
                              
                            when the soil surface is dry and transpiration is derived solely from root zone soil moisture under non-stressed conditions (Huntington and Allen, 2010). Fig. 5
                           A highlights the variation of 
                              
                                 
                                    K
                                    c
                                 
                              
                            in response to precipitation and irrigation, whereas Fig. 5B depicts the impact the dual crop coefficient approach has on 
                              
                                 E
                                 
                                    T
                                    o
                                 
                              
                           , resulting in 
                              
                                 E
                                 
                                    T
                                    a
                                 
                              
                           .

Precipitation (Fig. 5) is based on a rain-gage record collected in Carson Valley, Nevada, and varies with each stress period (i.e., daily). Because crop-water needs far exceed precipitation inputs, irrigation frequency for each cropped field is such that well-water conditions are maintained (i.e., crop-water stress is avoided). Crop water requirements are first satisfied by surface-water supplies delivered via the SFR2 package. When surface-water supplies fall short of maintaining well-watered conditions, pumping wells simulated using the well (WEL) package (Harbaugh, 2005) are activated by the integrated code to offset surface-water delivery shortfalls. Additionally, groundwater pumping is reduced or turned off as the groundwater head drops below the well screen (Niswonger et al., 2011). Approximately 62 pumping wells are located within each command area (Fig. 3); thus, roughly four fields (i.e., cells) are served by a single well. Within the MODFLOW framework, pumped volumes are amended to the applied water array in the UZF1 package (the parameter ‘FINF’), where it then flows back to the stream network as tail-water runoff, is lost as ET, contributes to deep percolation leading to recharge, or is stored in the unsaturated zone.

A broad and shallow reservoir with a capacity of 74 million m3 (60,000 ac∙ft) is simulated using the lake (LAK3) package (Merritt and Konikow, 2000). Prior to this integration, the ability to simulate distinct storage accounts within a MODFLOW lake (or reservoir) did not exist.

The reservoir is incised into layer 1 and, as such, is in hydraulic connection with both layer 1 (around the perimeter of the lake) when it is near full-stage and layer 2 (below the lakebed) during any stress period in which it is not empty. Lakebed conductance is set to a constant value of 0.01 m d−1 that is typical of fine sediment that settles at the bottom of reservoirs. In circumstances when the reservoir is at full stage and inflow exceeds the MODSIM determined release amount, reservoir water spills through an SFR2 segment with a bed elevation equal to the crest stage of the reservoir. A 151-point stage-capacity-surface area lookup table is provided in an ancillary support file used by MODFLOW to determine the amount of surface-area dependent inflow and outflow from precipitation and evaporation, respectively.

River operations simulated in the first scenario allocate run-of-the-river water into the ditches serving CA1-CA4. As the scenario name indicates, MODSIM does not simulate reservoir operations in this simulation, and the LAK package is not active in MODFLOW. Relative priorities among the ditches, as well as the minimum instream-flow requirement, are the only management features bearing upon the diversion amounts. As flow entering the model ebbs (i.e., spring runoff transitioning into lower summer flows), MODSIM curtails junior water-right diversions to deliver the available water supply to the senior water rights. In so doing, MODSIM simulates “calls on the river.” This scenario is hereafter referred to as NR (Table 5
                           ).

The second scenario investigates the impact of a reservoir on the total ditch deliveries and investigates hydrologic-operations feedback via the groundwater system. In this scenario, hereafter referred to as “WR” (Table 5), CA1 – CA3 are provided reservoir-storage accounts with junior storage rights, as summarized in Table 4. Owing to the junior status of the storage rights in this scenario, water rights senior to the storage rights (water rights 10 and 11 in Table 4) should not be injured by diversions to surface-water storage accounts. Thus, even though CA4 does not have reservoir storage, it should not be negatively impacted by reservoir-storage operations due to its senior status. It is possible that under this scenario, CA4 may benefit from additional groundwater returns caused by increased irrigation associated with storage releases. The WR scenario, and, specifically, the differences in CA4's diverted amount, serves as an important check that the MODSIM-MODFLOW coupling is working properly, as CA4 should not be negatively impacted by reservoir capture.

Model-input modifications for simulating the addition of a reservoir were minimal. Because the MODSIM GUI readily accommodates the insertion of new nodes anywhere in the network, a reservoir node was added to the stream-tributary-ditch network with no further modification anywhere else in the MODSIM model. Likewise, the LAK package was activated in MODFLOW for representing reservoir-aquifer interaction. Simulated gains and losses in the LAK3 package, including stream inflow, surface-area dependent values such as precipitation and evaporation, and GW-SW exchanges, are passed to MODSIM. MODSIM determines the release amount that is then passed back to MODFLOW and the two codes continue to iterate until convergence according to Equation (6).

In the prior-appropriation doctrine, storage rights facilitate accrual of run-of-the-river water to storage accounts according to their global priority. Storage rights are defined by annual limits and, in some cases, are accompanied by a flow-rate limit. Once the storage right has stored the annual limit, it is out of priority until the next water year. Water in storage accounts is available to its owners as a supplemental water source at any time based on the owner's needs. In this example, a dual-storage ownership is used to simulate shared storage ownership for the Global Priority 10 (Table 4) between CA1 and CA2. In this modeling construct, each owner is entitled to a portion of total storage. In this case, one-quarter of the storage is assigned to CA1 and three-quarters of the storage is assigned to CA2. MODSIM uses the percent of storage ownership to split the storage accrual among the storage accounts. Furthermore, MODSIM simulates storage releases as a supplemental supply source based on demand shortages that remain after allocation of the direct flows. Within this storage-ownership modeling mode, each storage account is operated independently, based on the supply needs for each owner. MODSIM operates releases from storage accounts and guarantees deliveries to the corresponding storage owners to meet supply needs.

@&#RESULTS AND DISCUSSION@&#

Because there is a computational cost due to iteration between MODSIM and MODFLOW, it is important to evaluate the degree of nonlinearity among diversions and GW-SW exchanges that are reflected by differences in the solution between the first and the last iteration. It is to be expected that the degree of nonlinearity, and therefore the sensitivity of the solution to iterations, would vary from one problem to the next. For example, Niswonger et al. (2014) found nonlinear feedbacks between reservoir releases, diversions, and water flowing to a terminal lake to be significant for the Walker Basin in Nevada. Nonetheless, as the example problem tested herein is typical of semi-arid alluvial basins, the degree of nonlinearity found in this example likely is representative of many agricultural settings around the world. The degree of nonlinearity expressed in this example also provides an evaluation of previous studies that have relied on explicit formulations (e.g., Valerio et al., 2010). To explore this question, iterative results (Fig. 6
                     ) are examined for three stream segments located near the center of the model (Fig. 3). We note here that neglecting nonlinearities results in incorrect simulated deliveries to farms, and is therefore indicative of overall mass-balance errors that arise in explicit, versus implicit, formulations.


                        Fig. 6 highlights changes in the diverted amounts as iterations progress. Surface flows are shown for the segment immediately upstream of the CA4 diversion (Fig. 6A, D), the flow diverted into CA4 (Fig. 6B, E), and the segment immediately downstream (Fig. 6C, F) of the CA4 diversion. Locations of the segments are highlighted in Fig. 3. Results are presented for both a wet year (Fig. 6A–C) and a dry year (Fig. 6D–F) for the NR scenario. An important difference between these two years is the nature of the GW-SW interaction in segments 36 (Fig. 6A, D) and 47 (Fig. 6C, F), upstream and downstream of the diversion, respectively. During the selected wet year (1998, 3rd wettest year of the simulation; Fig. 4), groundwater discharges to the stream, whereas during the selected dry year (2001, 3rd driest year of the simulation; Fig. 4), a net loss of surface water to groundwater in segments 36 and 47 occurs (note the cross-hatching in Fig. 6D, F). In addition to the GW-SW interaction, other sources of flow in the segments include total surface flow entering that segment from an upstream segment and runoff derived from irrigation events or excess precipitation. The relative contribution of each source of water is highlighted by the stacked bars. Horizontal red lines in Fig. 6 reflect the net surface-water outflow from that segment for every iteration. Thus, Fig. 6 qualitatively depicts MODSIM-MODFLOW model convergence when the value of the red line stabilizes for two consecutive iterations. Note that Fig. 6 shows flow conditions above, within, and below only one of the four diversion points within the NR scenario; the 
                           
                              
                                 L
                                 2
                              
                              
                                 
                                    
                                       
                                          N
                                          o
                                          r
                                          m
                                       
                                    
                                 
                              
                           
                         convergence criteria also was satisfied for the other three diversions. Also note that in Fig. 6 the displayed values may appear to have converged between two iterations that are not the last two iterations (e.g., time-step 3121, iterations 2 and 3 in Fig. 6A–C), yet the model continued to iterate. This is due to the influence of the other diversions not plotted in Fig. 6 that have not converged.

Over the entire simulated period, the integrated code required an average of approximately 3.2 MODSIM-MODFLOW iterations to converge each time step. Considering only the growing season (April 1st – October 31st), the only dates when diversions are allowed in either scenario, the integrated code used an average of 4.7 iterations to converge each time step. To contrast the integrated approach with a single-iteration feed-forward approach (Sieber and Purkey, 2007; Valerio et al., 2010; Yates et al., 2005), Table 6
                         provides statistics related to the percent change in the simulated diversions (CA1–CA4) between the first and last iterations for which diversions occur.Results from time steps such as 3120, 3122 (Fig. 6A–C), and 4295 (Fig. 6D–F) highlight the potential pitfall of using a single feed-forward approach. That is, had the lagged MODFLOW results been used by the river-operations model without further iteration, flow downstream (net surface-water outflow) of segment 47 would have been under predicted by 74% in time step 3120 (change between iterations 1 and 4) and over predicted by 74% in time step 3122 (change between iterations 1 and 6) and 560% in time step 4295 (change between iterations 1 and 6). Alternatively, had one iteration between the operations and hydrologic model been completed within each of these three time steps, outflow from segment 47 would have been over predicted by a more modest, but still substantial, 10%, 41%, and 149% in time steps 3120, 3122, and 4295, respectively. The need to iterate between an operations and hydrologic model is clearly demonstrated by the magnitude of the results reported in Table 6. In CA3, 5% of the time steps with non-zero diversions decreased (less than the 5th percentile) by as much as −35.7%, equating to reductions in flow equal to or below −0.21 m3 s−1 (−7.6 ft3 s−1). Conversely, 5% of CA3's time steps with non-zero diversions increased (greater than the 95th percentile) by 39.2%, a flow amount equal to or above 0.21 m3 s−1 (7.6 ft3 s−1). For CA4, the 5th and 95th percentile change in flows were −27.0% and 48.8%, respectively, meaning that 10% of the time steps (time steps below the 5th percentile and above the 95th percentile) with non-zero diversion amounts were reduced by at least −0.18 m3 s−1 (6.4 ft3 s−1) or increased by at least 0.26 m3 s−1 (9.2 ft3 s−1) between the first and last iterations. Were the differences between the first and last iterations accumulated as volumes, these differences would be equivalent to 5.0 million m3 (4060 ac·ft), 4.7 million m3 (3810 ac·ft), 17.3 million m3 (14,060 ac·ft), and 26.1 million m3 (21,120 ac·ft), in CA1–CA4, respectively. These volumes are equivalent to depths spread over the entire 4000-ha (9900-ac) irrigated area (agricultural fields) of each Command Area, CA1–CA4, of 0.13 m (0.4 ft), 0.12 m (0.4 ft), 0.43 m (1.4 ft), and 0.65 m (2.1 ft), respectively.

Results shown in Fig. 6B and E highlight the smoothly varying changes in the calculated diversion amounts between each iteration within a time step. While it cannot be mathematically proven that the final solution within each time step is the global optimum given the nonlinear feedbacks between the iterating models, the observed behavior (generally monotonic convergence) provides confidence that the solution space is dominated by a global solution.

The test model is representative of a typical basin in the semi-arid western United States. As these basins are typically supply limited due to the persistence of below-average years of precipitation separated by infrequent above-average precipitation, groundwater overdraft is becoming a growing problem as populations increase in the west (Dettinger et al., 2011). Developing additional water supplies will be an important component (although challenging) for increasing society's resilience to future drought. As demonstrated here, the new MODSIM-MODFLOW model provides a powerful tool for evaluating options for increasing water supply, changes in irrigation efficiency, and various administrative decisions including evaluation of the potential benefits of design options as well as possible negative impacts to subsets of the stakeholder community (e.g., third-party impacts). An important concept of the water-supply problem is the assessment of sustainability in conjunctive-use systems. For example, in regions where groundwater extraction is unsustainable, as illustrated by steady long-term downward trends in groundwater levels exhibited by many basins in the western United States (Faunt et al., 2009), it is important to evaluate how enhanced water supply increases sustainability of groundwater supply. However, in order to address this problem, aquifer storage must be represented in the modeling framework. Without explicit consideration of groundwater through a model such as MODFLOW, groundwater sustainability cannot be assessed in the context of operations modeling. Thus, a new and powerful capability is provided by the integrated MODSIM-MODFLOW model that allows practitioners to connect reservoir and river operations to groundwater sustainability. In the following examples, we present simulations that compare water resources within the test model for cases with no reservoir and with a reservoir, designated as NR and WR, respectively.

Design of the NR and WR scenarios (Table 5) facilitates a more robust exploration of the hydrologic impacts resulting from development of new water storage and change in irrigation practices. The input files for the investigated scenarios are very similar, with the notable exception that the reservoir capacity was set equal to zero in the MODSIM model in the NR scenario. Thus, despite being present in the NR scenario, the zero capacity assigned to the reservoir forced the network-flow optimization solution in MODSIM to ‘release’ all of the water flowing into the reservoir.

Among the most notable hydrologic impacts resulting from inclusion of the reservoir are the capture of excess streamflow during the irrigation off-season months of November through March (Fig. 7
                        A), the build-up of storage within the reservoir that generally occurs from November through March (Fig. 7B), and subsequent release of stored water during the spring recession from April through June (Fig. 7A). In Fig. 7A, the red hydrograph generated by the NR scenario is representative of natural flow at the location identified by the red dot in Fig. 3, whereas the blue hydrograph reflects the capture (zero flow) and release (blue cross-hatching) of stored water. Owing to the model set up, 100% of the natural streamflow is captured during winter, hence the zero flow associated with the blue hydrograph in winter. Despite the unrealistic nature of the simulated conditions, a minimum instream-flow requirement downstream of the dam was not enforced to provide a convenient check of the integrated code (that is, zero wintertime releases). During these periods, storage in the two reservoir accounts is accrued (Fig. 7B) based on the storage priority shown in Table 4. Because no storage targets were used, flows will bypass the reservoir (spill) when the storage accounts are full (Fig. 7B). Although reporting specific flows like these has little meaning in this hypothetical context, it points to the importance of runtime decision-making by a river-operations model integrated with a hydrologic model. That is, comparison of these two scenarios would be nearly impossible in a hydrologic-model only (i.e., MODFLOW-only) simulation due to the fact that storage releases and diversions require a priori specification when total storage volumes are not yet known.

The WR scenario highlights an important aspect of river operations that is not typical of hydrologic models, with important implications for large real-world problems: Even though a single flow rate is calculated for each stream reach, two classifications of water are routed downstream by the integrated model. The first, previously alluded to as run-of-the river water, is perhaps more commonly referred to as “natural flow.” The second class of water, sometimes referred to as “storage water,” is water that is stored in an account, owned by a water user, and delivered based on that owner's need. As such, this stored water is divorced from the prior-appropriation rules governing allocation of natural flows. Thus, in the WR scenario, MODSIM directs MODFLOW to release stored water to be routed along with natural flows, and guarantees that storage water is delivered to its owner through manipulation of flows at diversion points, regardless of its location in the basin.

Many additional hydrologic effects resulting from river operations are experienced downstream. For example, simulating the dynamically-operated reservoir within the hydrologic model to capture, store, and release peak flows during hot summer months when natural flows typically wane led to the increased diversions shown in Fig. 8
                        . Boxplots to the right of each time series summarize the annual residuals between the two scenarios. In general, appreciable increases, averaging roughly 35%, 52%, and 26% in CA1, CA2, and CA3, respectively, result from the inclusion of the reservoir. This, in turn, leads to additional seepage losses along the delivery ditches, more recharge from surface water, and less supplementary pumping. The larger increases in CA1 and CA2 result from their senior storage water rights relative to the account assigned to CA3. The lack of increase in the CA4 diversion amounts is due to the assumption that CA4 does not take stake in the reservoir storage, which is something to be expected from a senior water-right holder. Interestingly, the addition of a reservoir resulted in an average reduction of 2% by the CA4 diversion, with the largest delivery decreases occurring in the first five years of the simulation, a relatively dry period (Fig. 4). An un-anticipated result like this, commonly referred to as a ‘third-party effect’ (Gould, 1988; Pease, 2012), may be enough to stop a new reservoir project from launching owing to the injuries caused to senior rights not involved in the project. A closer examination of the flows upstream of the CA4 diversion showed the integrated code attempting to deliver just enough water to meet the full right of CA4 while also filling reservoir accounts during the spring runoff, thereby preventing peak flows from moving through the system. Under this type of management, the integrated hydrologic model resulted in slightly smaller river flows reaching CA4 from the beginning of July through the end of the irrigation season, possibly due to altered GW-SW interaction upstream of CA4 following consistently lower flows associated with reservoir capture (i.e., altered bank storage and release associated with diminished peak flows).

To reinforce the importance of accurately accounting for GW-SW exchange within river-operations modeling, Fig. 9
                         shows the GW-SW interaction on the same arbitrary day for two very different years in the NR scenario. Upward pointing blue bars highlight cells with groundwater discharge; downward pointing red bars show cells with seepage that recharges the alluvial aquifer. Bar height depicts the relative magnitude of the GW-SW exchange. Among the most noticeable differences between the two years is along the tributary stream segment, where significantly more groundwater discharged during the wet year (Fig. 9A). As a result, greater groundwater discharge in the tributary bolsters streamflow at the confluence of the main stem and tributary, the site of the minimum instream-flow requirement. With the additional streamflow from the tributary satisfying the minimum instream-flow requirement, flows in the main stem previously designated for satisfying the minimum instream-flow requirement can instead be diverted to support irrigation demands. Thus, the impacts of climate on GW-SW interactions that are accounted for in MODFLOW provide a more realistic representation of climate impacts on water operations. The increased seepage and recharge associated with the enhanced diversions will in turn bolster future groundwater discharge to streams, and in this way, the ‘memory’ of the groundwater system is more accurately and appropriately accounted for in the simulation of river operations.

Increased groundwater discharge in the upstream area of the model during the dry year (Fig. 9B) is likely a result of lower river stage during the dry year, thereby allowing more groundwater to discharge back to the river. Very similar seepage losses between the wet and dry years are seen just downstream of the reservoir. Because these results are from the NR scenario, the reservoir accounts for boosting CA1 and CA2 diversions are not available. Limitations in surface-water supplies lead to increased supplementary pumping in the upper reaches of the model, which in turn leads to the relatively large surface-flow losses seen in both Fig. 9A and B. Streamflow capture by wells is significant even during wet years when supplementary pumping is low owing to the long-term effects of pumping on streamflow capture. Alluvial basins, as represented in the test model, often exhibit multi-decadal cumulative response to groundwater pumping, and drawdown recovery is similarly a very slow process (Barlow and Leake, 2012; Konikow and Kendy, 2005). Accordingly, it is important to represent these aquifer systems using the three-dimensional groundwater flow equation (e.g., MODFLOW).


                        Fig. 10
                         highlights the spatio-temporal interdependence between the hydrologic system and the water-management operations. Whereas both of the simulated scenarios start out with the same average depth to the water table (D
                        
                           wt
                        ) under each of the four command areas, the effects of increased supplementary pumping in the NR scenario versus additional recharge with surface-storage supplies in the WR scenario on the average D
                        
                           wt
                         are immediately recognized in CA1–CA3. While these results illustrate the benefits of reservoir storage, they also highlight the ability of the integrated code to simulate both surface and groundwater supplies. As the preponderance of below-average years of precipitation stack up during the latter part of the simulation period, downward trends in groundwater storage develop, and suggest that this system, similar to many basins in the west, cannot sustain historical water use without a significant increase in precipitation above what has occurred during the period 2000–2006. Under the NR scenario, for example, the average pumping increase for CA1–CA4 with respect to the WR scenario was 27%, 51%, 29%, and −2%, respectively. As a result, groundwater levels under CA3 clearly switched from an apparently sustainable ‘dynamic equilibrium’ to an unsustainable downward trend in groundwater levels. Similarly, groundwater-level declines in CA1 and CA2 are accelerated during the second half of the simulation period due to increased pumping in the NR scenario. Under CA4, the D
                        
                           wt
                         remained relatively the same in both scenarios. The slight increase in pumping under the WR scenario is related to the slight decreases in delivered surface water as shown in Fig. 8. An interesting aspect of Fig. 10 is that the pumping rates, as well as the D
                        
                           wt
                         levels, are the synchronized response based on the simulated river operations. We note here that the results shown in Fig. 10 could not be attained without the integrated code, and that these results illustrate, in a way that previous codes could not, the benefits to the sustainability of groundwater of developing a surface reservoir in this conjunctive-use basin. Thus, the integrated MODSIM-MODFLOW code facilitates a fuller assessment of the hydrologic response to any arbitrary management decisions made with surface-water or groundwater supplies, and associated feedbacks.

Another aspect of this simulation that is important is the assumption that groundwater pumping is reduced as groundwater levels fall below the well screens, which are assumed to extend to the bottom of the layer from which each well pumps. Thus, within these simulations, groundwater pumping is curtailed as wells dry, and the simulations do not consider drilling of new deeper wells. However, in some regions, such as the Central Valley of California, water users have drilled deeper wells to continue pumping after their original wells have become dry. Thus, groundwater depletion by wells in these simulations is conservative relative to regions where wells are drilled to accommodate deeper groundwater levels. Fig. 11
                         shows the cumulative pumping curtailment for both scenarios and for each CA. In the NR scenario (Fig. 11A), pumping curtailment in CA1 was approximately 23 million m3 [∼18,000 ac ft, approximately enough water to cover CA1 in 0.6 m (2 ft) of water] by the end of the simulation. With the benefits of reservoir storage, however, pumping curtailment within CA1 was lowered by roughly 87% to 3 million m3 (∼3000 ac ft) in the WR scenario (Fig. 11B). In addition to reducing supplemental pumping requirements, recharge is increased by virtue of the increased surface-water supply. In both scenarios, pumping in CA4 was curtailed by roughly 18 million m3 (15,000 ac ft) owing to CA4's lack of access to surface water storage. Although this is only a hypothetical example, results such as this further demonstrate the benefit of integrating river-operations and hydrologic models at the time-step level. That is, assessments regarding the state of the hydrologic system, particularly the groundwater system, reflect the management of the river that was heretofore strained by explicit-type coupling between operations and hydrologic models or simpler representations of systems where surface water and groundwater is used conjunctively.

@&#CONCLUSIONS@&#

While this analysis emerges from a hypothetical test model, it demonstrates the impact that physically-based distributed-parameter modeling has on river-operations modeling, and vice versa. The spatio-temporal representation of GW-SW exchanges as simulated by a hydrologic model, in this case MODFLOW, has a clear impact on simulated river operations. Previously, less accurate approximations of GW-SW exchanges, including loosely-coupled models (e.g., “feed-forward” approaches), analytical solutions with their various assumptions, complete omission of groundwater, or simply lumping GW-SW exchanges in with all other unmeasured gains and losses and assuming the same GW-SW exchanges for different management conditions, were commonly applied. However, through simulation of GW-SW interaction with a physically-based distributed-parameter hydrologic model, a river-operations model is equipped to more accurately account for finite water resources, and in particular, finite groundwater resources in conjunctive-use systems. Other approaches, such as those named above, are in many situations unsuitable for examining water resources in water-scarce, over-appropriated, conjunctive-use basins that water-resource engineers must now manage.

A distinct advantage of the MODSIM-MODFLOW integration, beyond the fact that it takes advantage of two long established models within their respective genres, is that the movement of information between the codes is via computer memory in compiled codes and can occur several times within each simulated time step, making the tool presented computationally efficient. Thus, simulated operational decisions are based on surface flows that are synchronized with GW-SW interactions resulting from the current, as well as all previous, management (i.e., diversions and releases) decisions. Through the synchronized solutions, ‘what-if’ scenarios and/or future forecasts run with an integrated operations-hydrologic model like MODSIM-MODFLOW more accurately account for the non-linear feedbacks and the cumulative effects of those feedbacks on yet unrealized operational decisions. Measured or inferred aquifer property heterogeneities, spatially and temporally variable stresses such as pumping, and, finally, their collective impact on river operations are vetted without relying on analytical approximations or loosely-coupled (i.e., out-of-synchronization) approaches.

In addition, the particular code pairing adopted herein provides the MODFLOW community with access to new and novel functionality, allowing existing MODFLOW applications to be readily expanded to include the prior-appropriation framework (or a similar rule-based system). Conversely, MODSIM users can readily expand applications with the world's most widely used groundwater-modeling software for more accurate representation of GW-SW exchange based on simulated conjunctive use practices.

While this integration effectively integrates hydrologic and operational considerations with detailed accounting of GW-SW interactions by the operations model, this effort does not address integration with economic, social, ecological, or other dimension of water-resource planning and management. However, given the integrated approach described herein, it is possible that one of the aforementioned modeling platforms (e.g., economic, ecological, etc.) could be integrated with MODSIM-MODFLOW such that the within time-step iteration includes a third type of model (e.g., an economic or ecologic model).

@&#ACKNOWLEDGEMENTS@&#

We wish to thank Toby Welborn and Sue Buto with U.S. Geological Survey at the Nevada Water Science Center for their assistance helping to set up the hypothetical test model. We also wish to thank Wil de Jong and Stuart Mentzer for their help sorting out Fortran/C# communications. We would like to thank Paul Barlow with the U.S. Geological Survey Office of Groundwater, and three anonymous reviewers, for their timely and insightful colleague review. We gratefully acknowledge the assistance of Justin Huntington with the Desert Research Institute for providing sensor-based estimates of ET for use by the hypothetical test model and Josh Lee of the Nevada Water Science Center for assisting with the graphics. Research supported by grant from the Water Sustainability & Climate Program jointly funded by the National Science Foundation (1360506) and U.S. Department of Agriculture/National Institute of Food & Agriculture (1360507). Support was also provided by the U.S. Geological Survey's Groundwater Resources Program.

@&#REFERENCES@&#

