@&#MAIN-TITLE@&#An improved hybrid optimization algorithm for vibration based-damage detection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A modification of the P-NMA algorithm is proposed for damage detection.


                        
                        
                           
                           IP-NMA speeds up the convergence of the damage detection problem.


                        
                        
                           
                           IP-NMA is more accurate than its original version and the harmony search algorithm.


                        
                        
                           
                           The results encourage its application for optimization based damage identification.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Damage detection

Hybrid optimization algorithm

Pincus-Nealder-Mead algorithm

Representation formula of Pincus

Structural health monitoring

Global optimization

@&#ABSTRACT@&#


               
               
                  In this paper, an improvement in the hybrid stochastic/deterministic Pincus-Nelder-Mead optimization algorithm (P-NMA) which enables to solve the target optimization problem of vibration-based damage detection is proposed. The proposed modification consists in reducing the sampling domain of the Pincus formula by assigning a maximum number of damaged elements, i.e., by allowing only a few elements of the sampling vector to be different from 1. Consequently, a new parameter which determines the maximum number of damaged elements (npmax
                     ) is introduced and must be choose by the designer. Such a modification attempts to speed up the convergence of the original version of the P-NMA and thus, reducing its computational cost. A series of numerical examples, all selected from literature, was performed. To test the accuracy and efficiency of the proposed improved optimization algorithm (IP-NMA), its results were compared to those obtained by the P-NMA and the metaheuristic harmony search algorithm (HS). A statistical analysis was also performed in order to test the robustness of the three algorithms. The proposed improved optimization algorithm showed better performance (more accurate and required lower computational cost than the original version of the P-NMA and the metaheuristic HS), emphasizing its capacity in damage diagnosis and assessment.
               
            

@&#INTRODUCTION@&#

It is recognized that efficient methods to detect and quantify structural damage generate a wide interest in the civil, mechanical and aerospace fields. Thus, the application of robust procedures in programs to restore the reliability of engineering structures to initial design levels is highly desired. One method that may fulfill those requirements is dynamic non-destructive testing, which consists of monitoring the modal properties (e.g., natural frequencies, vibration modes and damping) during the lifetime of a structure. Several strategies have been reported in the vibration-based damage detection field.

For instance, local damage detection using dynamic SOFO experimental data and damage assessment from SOFO dynamic measurements were used by Casciati et al [1,2], from responses recorded on the structure before and after a seismic event, damage detection through Micro-Electro-Mechanical System (MEMS) and Operational Deformed Shapes (ODS) were used by Domaneschi et al. [3,4], damage detection under ambient vibration by Miguel et al. [5], to name just a few. Even considering the recent developments of vibration-based damage detection techniques and the results of numerous studies with different degrees of success, this problem cannot be considered fully addressed and remains a challenging task. Special attention and additional work should be dedicated to develop robust and accurate techniques that are able to minimize numerical errors, thus smoothing false positive damage diagnoses.

Vibration-based damage detection may be treated as a bounded nonlinear optimization problem. The basic idea is to change the properties of the numerical model to fit the values provided by experimental data, identifying damaged regions and the extent of damage on the structure. In other words, the optimization algorithm seeks the optimal reduction factors of element stiffness to achieve a pre-defined performance in terms of the modal parameters defined by the experimental data. This procedure leads to a target performance optimization problem, which is usually very complex to solve, generally leading to nonconvex and multimodal objective functions [6,7]. Under these conditions, deterministic optimization algorithms such as gradient methods, Newton methods or Nelder-Mead algorithms (NMA) may not converge to the global minimum of the problem due to their dependence on the quality of the starting point of the search. That is, if a given starting point is not on a basin of attraction of the global optimum, these methods will not converge to the global solution. Hence, the use of a global optimization algorithm is required. In this framework, stochastic methods are often employed, for example, genetic algorithms (GA) and simulated annealing methods, among others. Recently, the damage detection problem was also solved using other metaheuristics such as the bee algorithm (BA) [8], the Particle Swarm Optimization (PSO) [9], and the Harmony Search algorithm (HS) [5].

However, metaheuristic algorithms present some drawbacks, which include the following: (i) they require the tuning of many parameters by trial and error to maximize efficiency; (ii) the a priori estimation of their performance is an open mathematical problem; and (iii) an extremely large number of evaluations of the objective function is required to achieve global optimization, especially for continuous design variables. That is, they find in a reasonable time the region where the global solution is, yet they require a significant amount of computation to converge to the precise value of the global optimum, or sometimes they simply do not reach the exact solution. Hence, the use of these stochastic methods leads to a very high computational cost. Thus, to overcome this drawback, several classes of global optimization algorithms have been developed to increase the efficiency of the search. One such a class consists of hybrid stochastic/deterministic methods in which a local optimizer, such as the deterministic methods cited above, is combined with a global optimizer, such as the stochastic methods previously mentioned. For example, in vibration-based damage detection, Friswell et al. [10], Koh et al. [11], Au et al. [12] and Meruane and Heylen [13] employed the GA coupled with different local optimization procedures. Begambre and Laier [14] and Vakil-Baghmisheh et al. [15] hybridized the PSO with the NMA. Kaveh et al. [16] combined on the other hand, two stochastic algorithms, PSO and HS, where the PSO was used as the main machine and the HS as a local optimizer.

To avoid the use of metaheuristic algorithms for the solution of damage detection problems, Miguel et al. [17] proposed the hybrid stochastic/deterministic Pincus-Nelder-Mead algorithm (P-NMA). This optimization method employed a numerical approximation of the representation formula of Pincus [18,19] as the stochastic step of the algorithm and the NMA [20] as the local optimizer. The P-NMA reached promising results, especially regarding computational cost when compared to metaheuristic algorithms. For instance, for the same damage identification problem (portal frame shown in Fig. 10 of this paper), using GA, Gomes and Silva [21] required 1,000,000 objective function evaluation (OFE) to identify the damage, while Miguel et al. [17] employing the P–NMA required only 38,600 OFE. Also, Miguel et al. [5], for the same damage identification problem (cantilever beam shown in Fig. 2), employing the HS algorithm required 200,000 OFE to identify the structural damage, while Miguel et al. [17] employing the P-NMA required only 6000 OFE.

Within this context, the main contribution of this paper is to propose an improvement in the P-NMA to speed up its convergence keeping or increasing its accuracy. From here on, we name the proposed algorithm Improved Pincus-Nealder-Mead algorithm (IP-NMA).

The remaining of the paper is organized as follows: Section 2 presents the formulation of the damage identification problem as an optimization problem. The P-NMA and the proposed IP-NMA are presented in Section 3. The efficiency and accuracy of the proposed algorithm IP-NMA is investigated in Section 4 by comparing its results to the solutions of the P-NMA and HS algorithm. Finally, the main conclusions drawn from this work are summarized in Section 5.

One classical approach to represent damage is to consider the reduction of the stiffness properties of the structure. Thus, it is useful to introduce the damage in the structure through the consideration of an elemental stiffness reduction factor (αi
                     ), which enables the preservation of the original structural connectivity. In this approach, the global stiffness matrix can be formulated as the summation of damaged and undamaged element stiffness matrices, where the local element stiffness is multiplied by the reduction factor (αi
                     ), such as

                        
                           (1)
                           
                              
                                 
                                    [
                                    K
                                    ]
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    N
                                 
                                 
                                    α
                                    i
                                 
                                 
                                    
                                       [
                                       
                                          k
                                          e
                                       
                                       ]
                                    
                                    i
                                 
                                 .
                              
                           
                        
                     
                  

In this equation, N is the total number of elements of the structure, and [K] is the global stiffness matrix, which is assembled from the element stiffness matrices [k
                     
                        e
                     ]
                        i
                     . The reduction factor 
                        α
                      ∈ C ⊂ ℜN can be defined as the ratio of the element stiffness reduction to the initial stiffness. The set C ranges from 0 to 1, where 1 signifies no damage in the element and 0 means that the element loses its stiffness completely. In damage detection techniques, through the solution of an optimization problem, structural damage is estimated from a model update process using damage-induced changes in the modal features. A numerical model is continuously updated until its difference from the experimental model is minimized. This process is formulated as the following optimization problem:

                        
                           (2)
                           
                              
                                 
                                    
                                       α
                                    
                                    *
                                 
                                 =
                                 a
                                 r
                                 g
                                 m
                                 i
                                 n
                                 
                                    (
                                    
                                       J
                                       
                                          (
                                          α
                                          )
                                       
                                       :
                                       
                                       α
                                       
                                       ϵ
                                       
                                       C
                                    
                                    )
                                 
                                 ,
                              
                           
                        
                     where J is the objective function to be minimized. To solve this problem, J must be formulated in terms of differences between numerical and experimental values. A correct choice of this objective function is of paramount importance in the finite element model updating. Different objective functions are available in the literature and have been applied, usually adopting frequency and mode shape residuals. Next, we present the strategies that are employed in this paper to construct J.

Fractional changes in natural frequencies before and after damage can be used to construct J. For example

                           
                              (3)
                              
                                 
                                    J
                                    
                                       (
                                       
                                          α
                                       
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                          M
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            δ
                                                            
                                                               ω
                                                               i
                                                            
                                                            
                                                               (
                                                               α
                                                               )
                                                            
                                                         
                                                         
                                                            ω
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                
                                                D
                                             
                                             −
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            δ
                                                            
                                                               ω
                                                               i
                                                            
                                                         
                                                         
                                                            ω
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                
                                                E
                                             
                                          
                                          )
                                       
                                       2
                                    
                                    .
                                 
                              
                           
                        in which NM is the number of modes analyzed, the superscripts D and E represent numerical and experimental quantities, respectively, ωi
                         is the natural frequency for the ith mode of the undamaged or healthy condition for both the experimental and analytical conditions, and, finally, δωi
                         is a fractional change of the experimental and analytical natural frequencies for the ith mode of the structure. A finite element model should be used to represent the reference or healthy state of the target structure. Then, the stiffness reduction factor (
                           α
                        ) of the finite element model should be updated until the differences of the numerical frequencies in the healthy and damaged states converge to the observed experimental frequencies in the pre- and post-damaged states. It is worth to mention that Eq. (3) is useful for damage detection in asymmetric structures. On the other hand, for symmetric structures, it is necessary to include, in some manner, mode shape information in the objective function. Hence, in the next subsection, an approach based on the flexibility matrix is presented.

The modal flexibility error residual may also be employed as objective function. The modal flexibility matrix may be expressed as

                           
                              (4)
                              
                                 
                                    
                                       [
                                       F
                                       ]
                                    
                                    =
                                    
                                       [
                                       ϕ
                                       ]
                                    
                                    
                                       
                                          [
                                          Λ
                                          ]
                                       
                                       
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          [
                                          ϕ
                                          ]
                                       
                                       T
                                    
                                 
                              
                           
                        where [ϕ] is a mode shape matrix, and [
                           Λ
                        ] represents a diagonal matrix containing the squares of the modal frequencies. The difference between the experimental model and the numerical model can then be employed as the objective function for damage quantification

                           
                              (5)
                              
                                 
                                    J
                                    
                                       (
                                       α
                                       )
                                    
                                    =
                                    
                                       
                                          [
                                          F
                                          ]
                                       
                                       E
                                    
                                    −
                                    
                                       
                                          
                                             
                                                [
                                                
                                                   F
                                                   
                                                      (
                                                      α
                                                      )
                                                   
                                                
                                                ]
                                             
                                             D
                                          
                                       
                                       
                                          Fro
                                       
                                       2
                                    
                                    ,
                                 
                              
                           
                        in which 
                           
                              
                                 ∥
                                 ·
                                 ∥
                              
                              
                                 Fro
                              
                              2
                           
                         represents the Frobenius norm of the residual matrix, [F]E indicates the modal flexibility matrix from the experimental results, and [F(
                           α
                        )]
                           D
                         is the modal flexibility matrix calculated from the numerical model with the stiffness reduction factor. It is not possible in practice to construct the flexibility matrix for all the degrees of freedom (DOF) because only a limited number of measurements are available. Thus, the flexibility matrix may be obtained from only a few low-frequency modes in accordance with the measured DOF. As commented in the previous subsection, Eq. (5) is especially useful for damage identification of symmetric structures.

In this section, we first present the original version of the P-NMA and then the IP-NMA, detailing the modification proposed in this paper.

The P-NMA is comprised by a stochastic part given by the numerical solution of the representation formula firstly proposed by Pincus [18] and reformulated by de Cursi [19], and a deterministic part given by the NMA, which pursues the local part of the search. As detailed below, the main goal of the stochastic part is to provide a starting point, which is expected to be close to the global solution of Eq. (2), to the deterministic counterpart of the algorithm so that the local optimizer converges to the global solution. Both the stochastic and deterministic parts of the algorithm are detailed in the following.

Consider that 
                              α
                           * is the global solution of the optimization problem given in Eq. (2). As demonstrated by [17], the solution of such an optimization problem may be represented by the following relation:

                              
                                 (6)
                                 
                                    
                                       
                                          
                                             α
                                          
                                          *
                                       
                                       =
                                       
                                          lim
                                          
                                             λ
                                             →
                                             +
                                             ∞
                                          
                                       
                                       
                                          
                                             E
                                             
                                                [
                                                
                                                   A
                                                   g
                                                   
                                                      (
                                                      
                                                         λ
                                                         ,
                                                         J
                                                         
                                                            (
                                                            A
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                                ]
                                             
                                          
                                          
                                             E
                                             
                                                [
                                                
                                                   g
                                                   
                                                      (
                                                      
                                                         λ
                                                         ,
                                                         J
                                                         
                                                            (
                                                            A
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                                ]
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           in which g is a continuous and strictly decreasing function, λ is a real-valued deterministic parameter, and A is a convenient random variable, such as a random variable uniformly distributed on the domain C. The function g may be chosen as suggested by Pincus [17]: 
                              
                                 g
                                 (
                                 
                                    λ
                                    ,
                                    
                                    J
                                    (
                                    A
                                    )
                                 
                                 )
                                 =
                                 exp
                                 [
                                 
                                    −
                                    λ
                                    J
                                    (
                                    
                                       
                                       A
                                    
                                    )
                                 
                                 ]
                              
                           . It means that if it is possible to evaluate the limit and the expectation operators of Eq. (7), the global optimum 
                              α
                           * of Eq. (2) can be obtained, even in the case where the objective function J is nonconvex. However, the analytical evaluation of these quantities is not possible for real engineering problems. Hence, the application of the representation of the optimal solution 
                              α
                           * established above requires the numerical approximation of Eq. (6). Such an approximation may be based on the generation of a finite sample of A to approximate the expected value operator and an approximation of the limit by setting the value of λ large enough. For example, as described in de Cursi [19], we may generated a sample 
                              
                                 
                                    A
                                    ^
                                 
                                 
                                 =
                                 
                                 
                                    {
                                    
                                       
                                          A
                                          1
                                       
                                       ,
                                       …
                                       
                                       ,
                                       
                                          A
                                          nr
                                       
                                    
                                    }
                                 
                              
                            comprising nr variates of A and thus,

                              
                                 (7)
                                 
                                    
                                       
                                          
                                             α
                                          
                                          *
                                       
                                       ≈
                                       
                                          
                                             
                                                α
                                                ^
                                             
                                          
                                          *
                                       
                                       =
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                nr
                                             
                                             
                                                A
                                                i
                                             
                                             g
                                             
                                                (
                                                
                                                   λ
                                                   ,
                                                   J
                                                   
                                                      (
                                                      
                                                         A
                                                         i
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                nr
                                             
                                             g
                                             
                                                (
                                                
                                                   λ
                                                   ,
                                                   J
                                                   
                                                      (
                                                      
                                                         A
                                                         i
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       ,
                                    
                                 
                              
                           which corresponds to the approximations

                              
                                 (8)
                                 
                                    
                                       
                                          
                                             
                                                E
                                                
                                                   [
                                                   
                                                      A
                                                      g
                                                      
                                                         (
                                                         
                                                            λ
                                                            ,
                                                            J
                                                            
                                                               (
                                                               A
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   ]
                                                
                                             
                                          
                                          
                                             ≈
                                          
                                          
                                             
                                                
                                                   1
                                                   nr
                                                
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   nr
                                                
                                                
                                                   A
                                                   i
                                                
                                                g
                                                
                                                   (
                                                   
                                                      λ
                                                      ,
                                                      J
                                                      
                                                         (
                                                         
                                                            A
                                                            i
                                                         
                                                         )
                                                      
                                                   
                                                   )
                                                
                                                
                                                   
                                                   e
                                                   
                                                   E
                                                
                                                
                                                   [
                                                   
                                                      g
                                                      
                                                         (
                                                         
                                                            λ
                                                            ,
                                                            J
                                                            
                                                               (
                                                               A
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   ]
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             ≈
                                          
                                          
                                             
                                                
                                                
                                                   1
                                                   nr
                                                
                                                
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   nr
                                                
                                                g
                                                
                                                   (
                                                   
                                                      λ
                                                      ,
                                                      J
                                                      
                                                         (
                                                         
                                                            A
                                                            i
                                                         
                                                         )
                                                      
                                                   
                                                   )
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

As already noted, this approximation is able to locate a region on the domain close to the global solution. Thus, the approximation given by Eq. (7) may be employed as the starting point for a local optimizer, such as any gradient-based algorithm or the NMA, to obtain a more refined solution. This approach has been tested in some engineering problems. For example, Lopez et al. [7] employed this approximation to supply the starting point for the random perturbation of the gradient algorithm in a stochastic programming problem. Gonçalves and de Cursi [6] applied this strategy in the calibration of a transportation system.

The NMA 0 is one of the most standard direct search methods for unconstrained minimization problems. It is based on the comparison of function values at the n+1 vertices 
                              α
                           
                           
                              i
                            of a simplex. In this section, only the main aspects of the NMA are given, for a complete description the reader is referred to [20] or the text book by Haftka and Gürdal [22]. A simplex of size s is initialized at 
                              α
                           
                           0 following the rule:

                              
                                 (9)
                                 
                                    
                                       
                                          α
                                          i
                                       
                                       =
                                       
                                          α
                                          0
                                       
                                       +
                                       p
                                       
                                          e
                                          i
                                       
                                       +
                                       
                                          ∑
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            k
                                                            =
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            k
                                                            ≠
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          n
                                       
                                       q
                                       
                                          e
                                          k
                                       
                                       ,
                                       
                                          
                                          
                                       
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       n
                                    
                                 
                              
                           where e
                           
                              i
                            are unit base vectors and

                              
                                 (10)
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                      =
                                                      
                                                         s
                                                         
                                                            n
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  n
                                                                  +
                                                                  1
                                                               
                                                            
                                                            +
                                                            n
                                                            −
                                                            1
                                                         
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      p
                                                      =
                                                      
                                                         s
                                                         
                                                            n
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  n
                                                                  +
                                                                  1
                                                               
                                                            
                                                            −
                                                            1
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In order to find an improving point, the simplex vertices are changed through reflection, expansion and contraction operations. The algorithm terminates when the vertices function values become similar, which may be measured with the inequality:

                              
                                 (11)
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   n
                                                   +
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               Π
                                                               i
                                                            
                                                            −
                                                            
                                                               Π
                                                               ¯
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   2
                                                
                                                n
                                             
                                          
                                       
                                       <
                                       
                                          ɛ
                                       
                                       ,
                                       
                                       
                                          Π
                                          ¯
                                       
                                       =
                                       
                                          1
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       
                                          Π
                                          
                                             i
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           where  ɛ is a small positive scalar. The effect of the operations on the simplex is to “stretch” its shape along the descent directions. As the size of the simplex decreases, the algorithm becomes local. Thus, it is expected to find at least a local optimum at the end of its search. The original NMA was conceived for unconstrained optimization problems. Since the optimization problem given by Eq. (2) is bounded by the upper and lower limits of α ∈ C, the points of the simplex may leave the domain after either the reflection or the expansion operation. It is straightforward to account for variables bounds by projection:

                              
                                 (12)
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   i
                                                   f
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            α
                                                            i
                                                         
                                                         <
                                                         
                                                            α
                                                            i
                                                            
                                                               m
                                                               i
                                                               n
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      α
                                                      i
                                                   
                                                   =
                                                   
                                                      α
                                                      i
                                                      
                                                         m
                                                         i
                                                         n
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   i
                                                   f
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            α
                                                            i
                                                         
                                                         >
                                                         
                                                            α
                                                            i
                                                            
                                                               m
                                                               a
                                                               x
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      α
                                                      i
                                                   
                                                   =
                                                   
                                                      α
                                                      i
                                                      
                                                         m
                                                         a
                                                         x
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

It should be remarked here that the point of initialization of the simplex 
                              α
                           
                           0 is furnished by the numerical approximation of the representation formula of Eq. (6) given by Eq. (7).

The modification of the P-NMA proposed in this paper is based on the information that we normally have about the damage scenario of a structure. Taking into account that a structure under analysis is discretized into finite elements, it is expected that only a few of these elements are damaged. Thus, the values of αi
                         of the remaining elements (undamaged elements) are equal to one. Consequently, most of the components of 
                           α
                        * are equal or very close to 1. Therefore, instead of generating a finite sample 
                           
                              
                                 A
                                 ^
                              
                              
                           
                         in Eq. (7) with all its components randomly varying from 0 to 1, 
                           
                              
                                 A
                                 ^
                              
                              
                           
                         is generated so that most of its components are equal to one and only a few of them assume random values between 0 and 1. Consequently, a new parameter which determines the maximum number of damaged elements npmax
                         is introduced.

Let A
                        
                           
                              m
                           
                           od
                         be the sample with the characteristics mentioned above; a pseudo algorithm which may be implemented in Matlab programming to generate A
                        
                           
                              m
                           
                           od
                         is shown in Fig. 1.
                        
                     

Thus, Eq. (7) is written in the following form:

                           
                              (13)
                              
                                 
                                    
                                       
                                          α
                                       
                                       *
                                    
                                    ≈
                                    
                                       
                                          
                                             α
                                             ^
                                          
                                       
                                       *
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             nr
                                          
                                          
                                             
                                                
                                                   A
                                                   i
                                                
                                             
                                             mod
                                          
                                          g
                                          
                                             (
                                             
                                                λ
                                                ,
                                                J
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            A
                                                            i
                                                         
                                                      
                                                      mod
                                                   
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             nr
                                          
                                          g
                                          
                                             (
                                             
                                                λ
                                                ,
                                                J
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            A
                                                            i
                                                         
                                                      
                                                      mod
                                                   
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

This new numerical solution is then coupled with the NMA to find the final solution of the problem. It is important to highlight here that the proposed modification in the generation of the sample A
                        
                           
                              m
                           
                           od
                         is very simple to implement and does not bring any additional computational cost for the solution of Eq. (2).

Since the computational code of the NMA is widely available, the implementation of the IP-NMA resumes, for instance, to the implementation of the pseudo algorithm described in Fig. 1 and its coupling to an existing NMA code, which is quite simple. This fact shows the easiness in using and implementing the proposed scheme. Besides, any other local optimizer may be employed instead of the NMA, e.g. if it is easy to obtain the gradient information about the objective function under analysis, the user of the proposed algorithm could employ a gradient based optimization method, such as the interior point or sequential quadratic programming methods (see references [6] and [7]).

As already pointed out, the IP-NMA requires the user to set the input parameter npmax
                        . The proposed modification in the P-NMA was mainly based on the fact that usually only a few elements of the structure are damaged (as most of the examples analyzed in the literature). Thus, the IP-NMA is especially useful in this situation. One fact must be taken into account to set npmax
                        : in theory, for the representation formula of Pincus to work, the random vector A
                        
                           
                              m
                           
                           od
                         must contain the solution of the problem. In practical terms it means that npmax
                         must be equal to or higher than the actual number of damaged elements. From all the numerical analysis we pursued, it was reasonable to set the value of npmax
                         between 10% and 20% of the total number of elements of the model. In this manner, we take advantage of the characteristic of the problem (few damaged elements) and at the same time make it difficult not to fulfill the requirement that npmax
                         must be equal to or higher than the actual number of damaged elements. Finally, the value of λ must be chosen so that it is not so small that it cannot approximate the limit of Eq. (6) and not so high that it renders numerical instability.

In the next section, a series of damage detection benchmark problems taken from the literature are studied to show the robustness and efficiency of the IP-NMA over its original version and metaheuristic algorithms such as the GA and HS.

The main goal of this section is to compare the robustness and effectiveness of the IP-NMA to its original version (P-NMA) and the HS algorithm. In order to pursue a fair comparison among them, not only the best design found using each method should be compared, but also the statistics of each algorithm due to their stochastic nature. Normally, each algorithm is run independently several times for a given problem and some statistics of these runs are computed, such as the optimum mean value and standard deviation [24–27]. However, comparing the mean value or standard deviation of the objective function given by Eq. (2) does not represent the real quality of the results for the problems at hand. That is, it would not be clear for the reader the direct relation between the value of J and the quality of α. Hence, we propose here a different strategy to compare the results of the independent runs: for each element i of the finite element model, we take the minimum and maximum values of α
                     i found over the independent runs, and then, we plot the percentage difference between these values and the true damage scenario of the structure. One may see this analysis as the evaluation of the worst case scenario presented by each algorithm. Eq. (14) was employed to calculate the percentage difference for a given element i of the structure,

                        
                           (14)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          error
                                          
                                          
                                             from
                                             
                                          
                                          
                                          
                                             exact
                                             
                                          
                                          
                                          damage
                                          
                                             (
                                             %
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                          =
                                          
                                             
                                                max
                                                
                                                   (
                                                   
                                                      
                                                         α
                                                         i
                                                         1
                                                      
                                                      ,
                                                      
                                                         α
                                                         i
                                                         2
                                                      
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         α
                                                         i
                                                         
                                                            N
                                                            I
                                                            R
                                                         
                                                      
                                                   
                                                   )
                                                
                                                −
                                                
                                                   α
                                                   i
                                                   
                                                      e
                                                      x
                                                      a
                                                      c
                                                      t
                                                   
                                                
                                             
                                             
                                                α
                                                i
                                                
                                                   e
                                                   x
                                                   a
                                                   c
                                                   t
                                                
                                             
                                          
                                          100
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     in which max is the maximum operator, 
                        
                           α
                           i
                           
                              e
                              x
                              a
                              c
                              t
                           
                        
                      is the exact damage value of the ith element, NIR is the number of independent runs employed in this analysis, the values inside the maximum operator are the ith component of optimal solution for each independent run of the algorithm (the upper-scripts refers to the number of the independent run). Thus, the closer to zero the value of Eq. (14) for a given algorithm is, the better the approximation is. To evaluate the percentage difference of the minimum values of α found by each algorithm, one needs only to replace the maximum operator in Eq. (14) by the minimum operator.

In all the examples, except declared otherwise, npmax
                      was set equal to 5, and λ was assumed to be 10. As commented in Section 3.3, the value of npmax
                      was chosen to be between 10% and 20% of the total number of elements of the structure, and of course, higher than the actual number of damaged elements. At the end of Section 4.2, we present a study about the influence of npmax
                      on the accuracy and robustness of the IP-NMA. This value of λ was chosen based on the numerical experiments developed in references [6,7,17] and in this work. Normally, any value between 2 and 15 does not affect the results presented in this paper.

The stopping criterion for all the algorithms is the number of objective function evaluations (OFE). Also, the NIR for the analysis commented above is fixed in 20 for all the examples. This section starts with a cantilever beam used by Miguel et al. [17]. Next, a plane truss analyzed by Seyedpoor [23] is investigated, and a portal plane frame previously studied by Gomes [21] was studied. Finally, the influence of noise is investigated in the last example of this section. It is important to point out that, as commented in Section 2, we employ Eq. (3) for the damage identification of the cantilever beam, since it is an asymmetric structure, and for a direct comparison with [17]. On the other hand, Eq. (5) is used in the other examples, in which the structures are symmetric.

The structure adopted here is 750 mm long, and it has a square box cross section with external dimensions of 25.4 mm and a wall thickness of 1 mm. It was modeled with 25 Timoshenko beam elements, as shown in Fig. 2
                        . The specific weight, elastic modulus of the material, Poisson's coefficient and Timoshenko's shear factor of the beam are 28 kN/m3, 68.6 GPa, 0.3 and 0.5, respectively. Also, a concentrated mass of 18.2 g is also included in all DOF of the numerical model in order to correctly represent the presence of accelerometers.

Three different damage scenarios are considered to assess the capability of the optimization algorithms to locate and quantify damage. Scenario 1 was represented by reducing the stiffness of element from 20% to 80% of the initial value. Scenario 2 also used member 20, but it reduced its stiffness to 30% of the initial value. Finally, Scenario 3 was represented by reducing the original stiffness of element from 8% to 70% of the initial value. The objective function employed in this example is described by Eq. (3). The eigenproblem is solved by an in-house finite element code to obtain the frequencies necessary to employ Eq. (3). It is assumed that only the first 8 modes are available and that measurements are only obtained from the translational DOF of the model. The identified frequencies for all damaged scenarios are shown in Table 1.
                        
                     

In this example, the number of OFE employed as stopping criterion for each algorithm is:

                           
                              •
                              IP-NMA 2250 OFE: 1000 OFE were employed to approximate numerically the representation formula Eq. (14) and the other 1250 OFE to run the NMA;

P-NMA 6000 OFE: 1000 OFE were employed to approximate numerically the representation formula Eq. (8) and the other 5000 OFE to run the NMA;

HS 200,000 OFE.

The best results of damage identification obtained by the IP-NMA, P-NMA and HS algorithm are shown in Figs. 3–5
                        . From these results one may see that the IP-NMA and P-NMA accurately identified the damage (location and extent) in all scenarios. However, the P-NMA required a computational cost higher than the improved algorithm to achieve the same level of accuracy. Furthermore, it can be seen from Figs. 3a, 4
                        a and 5
                        a that using the IP-NMA, the location and extent of damage was determined in the stochastic part of the algorithm, i.e., the starting point given by Eq. (13) is very close to the solution of the problem.

It is important to point out that despite the much higher computational cost, the HS algorithm was not able to determine the extent of damage for all scenarios, e.g. perturbations can be seen near to damaged elements in Figs. 3e, 4e and 5e. This fact clearly shows that the IP-NMA and its original version are more precise than this metaheuristic algorithm.

In order to pursue the analysis over 20 independent runs using Eq. (14), we propose an additional case: we run the P-NMA using as stopping criterion 2250 OFE (1000 OFE were employed to approximate numerically the representation formula Eq. (7) and the other 1250 OFE to run the NMA) to directly compare its results with the IP-NMA.

The results of the proposed analysis over the 20 independent runs are in Fig. 6
                        , which shows the plot of Eq. (14) for each of them. It is worth to remind here that the more distant from zero these plots are, the worse the performance of a given algorithm is. One may see from this figure that the results for the IP-NMA and P-NMA (6000 OFE) are not shown. It is due to the fact that the percentage difference found in these 2 cases is low, i.e. of the order of 1%. Thus, the proposed algorithm was able to accurately approximate the true damage scenario for all the independent runs, showing the IP-NMA robustness in finding a solution.

However, from Fig. 6, we see that the P-NMA (2250 OFE) was not able to reach a good approximation and that its performance is slightly worse than the HS algorithm. For example, in Fig. 6a (damage scenario 1), the error from exact damage (%) of the maximum values of α
                        20 were around 16% and 20% for the HS and P-NMA, respectively. Since the P-NMA (2250 OFE) and the IP-NMA have the same computational cost, it shows that the proposed modification implemented in the IP-NMA really improved the efficiency of the original version of the algorithm. It is important to highlight here that this modification does not bring any additional complexity or computational cost for the search.

Scenario 2 was the most critical one in this example since the HS and the P-NMA (2250 OFE) provided results whose percentage difference to the true scenario were higher than 50%. For instance, see elements 19 and 20 for the minimum and maximum αi
                         values, respectively. It is also important to highlight that the HS is not robust in terms of find a good solution, even for a high computational cost (200,000 OFE).


                        
                           
                              Consider the 31-bar planar truss shown in Fig. 7 selected from [23]. In this example, the first 5 vibrating modes are utilized for damage detection. The material density and elasticity modulus are 2770 kg/m3 and 70 GPa, respectively. Damage in the structure is also simulated as a relative reduction in the elasticity modulus of individual bars. In this study, only one damage case was considered. This case damage is represented by 30% stiffness reduction on element 16.

The objective function employed in this example is described by Eq. (5) and the eigenproblem is also solved by an in-house finite element code to obtain the frequencies and mode shapes that are necessary to such an equation. In this example, it is assumed that only the first 5 modes are available and all nodal displacement were adopted for the mode shapes. The identified frequencies for the healthy and damage cases are shown in Table 2.
                     

The number of OFE employed as stopping criterion is 22,400, 59,600 and 200,000 for the IP-NMA, P-NMA and HS algorithm, respectively. The results of damage identification obtained are shown in Fig. 8. From this figure, we may see that the solution of the representation formula – Eq. (13) – provided by IP-NMA almost accurately identify the damage scenario of this problem. That is, the local optimizer had only to slightly refine the solution given by the stochastic part of the proposed algorithm. Whereas the initial solution provided by the P-NMA is still far from the true damage scenario of the structure. Thus, the computational cost require by the IP-NMA was lower than half the cost of the P-NMA to reach the same level of accuracy.

Again, despite its much higher number of OFE, the HS was not able to determine the extent of damage of the investigated scenario, and also, spurious values appeared in a considerably number of undamaged elements, leading to an erroneous diagnostic of the structure.

For the analysis of the independent runs of the algorithms, we also propose an additional situation in this section: in order to evaluate the effectiveness of the proposed algorithm, we run the P-NMA with the same computational cost of the IP-NMA, i.e. 22,400 OFE (10,000 OFE for Pincus and 12,400 for the NMA). The analysis of the independent runs is shown in Fig. 9. Once more the results of the IP-NMA and the P-NMA (59,600 OFE) are not shown because the percentage difference of their results and the true damage scenario was lower than 1%. This fact shows the robustness of the proposed algorithm in finding a solution.

From Fig. 9, we see that P-NMA (22,400 OFE) was not able to provide the extension of damage of element 16, presenting a percentage difference of the order of 16%. The performance of the HS algorithm was worse, several elements presented spurious damage values thorough the structure and the maximum error of element 16 was about 27%.

This example showed once more the robustness and effectiveness of the proposed algorithm the IP-NMA over original version P-NMA. Also, the results indicate that even for a much higher computational cost the metaheuristic algorithm employed is not able to find a reasonable solution.

In this example, a study of npmax
                         was carried out to investigate its influence on the quality of the damage identification results. In this study, we developed the statistical analysis described by Eq. (14) for different values of npmax
                         (1, 10, 15, 20, 31), i.e., for each npmax
                         value, we executed 20 independent runs of the IP-NMA and computed the maximum error for each element (all the other parameters of the algorithm were kept constant). The results of this analysis are shown in Fig. 10a–e.

A general conclusion from these results is that the larger the gap between the real number of damaged elements and npmax
                         is, the worse the approximation of the damage scenario becomes. For example, in the problems that only a few elements are damaged (as the ones presented in this paper), the efficiency of the IP-NMA tends to the one of the P-NMA, as npmax
                         tends to the number of the elements of the structure (N). It is important to comment, however, that even for npmax
                         equal to about 65% of the number of elements of the structure (npmax
                         = 20), the approximation still was reasonable. That is, the algorithm was able to located the damaged element (element 16), and the maximum error of the damage extent, in 20 runs of the algorithm, was inferior to 5%.

The portal plane frame shown in Fig. 11 was selected from [21]. The structure has a rectangular cross-sectional area with height h = 0.24 m, width b = 0.14 m and lengths of L = 2.4 m and H = 1.6 m. The material has a Young's Modulus of E = 2.5 × 1010 N/m2 and a material density of ρ = 2.5 × 103 kg/m3. In the structural model, 56 plane frame elements were employed (Figs. 12,13, and 15).

The example attempts to reproduce two damage scenarios in order to evaluate the improvement in performance of the algorithm proposed in this paper: (1) the static moment of inertia about the z-axis of element 24 is reduced by 10% and, (2) the static moments of inertia about the z-axis of elements 10, 28 and 52 are reduced by 10%. The objective function employed in this example is described by Eq. (5). The eigenproblem is solved by an in-house finite element code. To represent the truncated mode shapes at the sensor locations, only the first 5 natural frequencies and 17 nodal displacements were adopted in the mode shapes. Thus, there are 56 updating parameters (i.e., N = 56), which represent each element of the portal frame.

The number of OFE employed as stopping criterion for each algorithm is detailed in Table 3.
                        
                        
                     

As it can be seen in Figs. 11 and 14, the IP-NMA precisely identified the damaged elements and the extent of the damage for both scenarios. Moreover, the proposed algorithm identified the damage on the pre-optimization stage for the single damage scenario. On the other hand, the P-NMA was able to reach the same level of accuracy only on scenario 1. Indeed, Fig. 16b shows that the P-NMA located only the region of the damaged element, but not the exact element nor the extent of damage.

Analyzing Figs. 14 and 17
                        
                        , we see that these were the most critical cases of this paper for the HS algorithm. Even for 200,000 OFE, it could not provide a reasonable solution for the problem. It is important to mention that the GA developed by Gomes [21] was applied to this same problem and also reached poor damage identification results, even though 1,000,000 OFE were employed.

Similar to the previous examples, for the analysis of the independent runs, we include the results of the P-NMA using the same number of OFE as the IP-NMA, i.e. P-NMA (16,200 OFE) and P-NMA (53,600 OFE) for the damages scenarios 1 and 2, respectively. Fig. 18 shows the analysis performed for 20 independent runs of the algorithms. Just like the previous two examples, the IP-NMA results are not shown since the percentage difference between them and the true damage scenarios was around 1%. In this section, however, the same is not true for the P-NMA (38,600 OFE) and P-NMA (87,200 OFE) results (scenarios 1 and 2, respectively), which presented some errors. These two cases are not plotted only to allow the results of the P-NMA (16,200 OFE) and P-NMA (53,600 OFE) be directly compared to those of the IP-NMA, since they have the same computational cost. Thus, analyzing Fig. 18, one may easily see that the P-NMA was not able to provide the same level of accuracy than the IP-NMA for the same computational cost. Thus, the modification proposed in this paper increases the robustness and effectiveness of the resulting algorithm. Once more, the HS algorithm could not provide reasonable damage identification for this problem.

An important aspect
                        
                        
                        
                        
                        
                         in the development of any model update algorithm is its sensitivity to uncertainty in the measurements. Indeed, experimental modal testing is always associated with some kinds of measurement noise or error. Hence, we analyze in this example the behavior of the proposed algorithm in the presence of noise in the measurements. To assess accomplish this goal, a beam of 6 m length selected from [28] and equally divided into 15 two-dimensional beam elements was considered (Fig. 19). The density and elastic modulus of the material of the beam are 2500 kg/m3 and 3.2E + 10 N/m2, respectively. Similarly, the area of the cross section and moment of inertia of this beam are 0.05 m2 and 1.66E−04 m4, respectively. The objective function employed in this example is described by Eq. (5) and the eigenproblem is solved by an in-house finite element code. A multi-damage scenario was considered by reducing the elastic modulus of elements 3, 8 and 10 in 20%, 50% and 30%, respectively.

In this example, the following parameter perturbation and measurement noise are considered:

(i) Perturbation of the elastic modulus: it is done by adding a uniform perturbation to the theoretical value of the elastic modulus (E), simulating
                        
                        
                         variability in the stiffness along the beam. In the finite element scheme, the elastic modulus of each element is perturbed in the following manner: a set of M values of E is generated for each element, and then, the mean value of such a set is considered in the damage identification procedure. Each perturbed sample and the mean value are given by,

                           
                              (15)
                              
                                 
                                    
                                       
                                          (
                                          
                                             E
                                             p
                                          
                                          )
                                       
                                       i
                                    
                                    =
                                    E
                                    
                                       (
                                       
                                          1
                                          +
                                          
                                             R
                                             u
                                          
                                          
                                             γ
                                             E
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       E
                                       
                                          A
                                          v
                                          ,
                                          p
                                       
                                    
                                    =
                                    
                                       1
                                       M
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       M
                                    
                                    
                                       
                                          (
                                          
                                             E
                                             p
                                          
                                          )
                                       
                                       i
                                    
                                    ,
                                 
                              
                           
                        where E
                        
                           p
                         is the ith sample of the vector comprised by the perturbed values of the elastic modulus of each element, R
                        
                           u
                         is a uniform random vector in the range −1 to 1 and of the same dimension as E
                        
                           p
                        , γE
                         is the level of disturbance and E
                        
                           Av, p
                         is the perturbed average elastic modulus corresponding to M samples (assumed to be 100 in this example).

(ii) Addition of noise to the frequency and mode shape measurements: it is accomplished by adding a Gaussian noise to the theoretical value of the frequencies and mode shapes of the structure. Similar to (i), a set of M perturbed frequency and mode shape measurements is generated, and their mean values are considered in the damage identification scheme. The perturbed samples are generated by

                           
                              (17)
                              
                                 
                                    
                                       f
                                       
                                          n
                                          r
                                       
                                    
                                    =
                                    
                                       f
                                       n
                                    
                                    
                                       (
                                       
                                          1
                                          +
                                          
                                             R
                                             g
                                          
                                          
                                             γ
                                             f
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       ϕ
                                       
                                          i
                                          
                                             j
                                             
                                                n
                                                r
                                             
                                          
                                       
                                    
                                    =
                                    
                                       ϕ
                                       
                                          i
                                          
                                             j
                                             n
                                          
                                       
                                    
                                    
                                       (
                                       
                                          1
                                          +
                                          
                                             R
                                             g
                                          
                                          
                                             γ
                                             ϕ
                                          
                                       
                                       )
                                    
                                    ,
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    
                                       NM
                                       ,
                                    
                                    
                                    and
                                    
                                    j
                                    =
                                    
                                       1
                                       ,
                                    
                                    …
                                    ,
                                    
                                    
                                       NP
                                       ,
                                    
                                 
                              
                           
                        where fn
                         and 
                           
                              ϕ
                              
                                 i
                                 
                                    j
                                    n
                                 
                              
                           
                         are the theoretical natural frequencies and nodal amplitudes of the vibration modes, respectively, while fnr
                         and 
                           
                              ϕ
                              
                                 i
                                 
                                    j
                                    
                                       n
                                       r
                                    
                                 
                              
                           
                         are the perturbed values of the same parameters; Rg
                         is a random number that follows the Gaussian distribution with mean zero and standard deviation equal to 1; γf
                         and γϕ
                         are the noise levels for natural frequencies and mode shapes, respectively; NM and NP represent the number of nodal amplitudes and vibration modes, respectively.

We then consider here two cases:

                           
                              (1)
                              Case 1: only the perturbation of the elastic modulus.

Case 2: perturbation of the elastic modulus and measurement noise on frequencies and mode shapes.

In the analysis pursued in this example, we considered 3% perturbation of the elastic modulus (γE
                         = 0.03), and the frequencies and mode shapes were perturbed at 2% and 3%, respectively (γf
                        = 0.02, γϕ
                        = 0.03). Table 4
                        
                         shows the theoretical and perturbed elastic modulus (Case 1), while Table 5 shows the first 5 computed frequencies with and without perturbed elastic modulus and measurement noise (Case 2).

The IP-NMA and the P-NMA were employed in this example for the damage identification procedure of Cases 1 and 2 as well as the situation without any perturbation or noise. The parameters of these algorithms were the same as the previous examples. The number of OFE employed as stopping criterion for each algorithm is detailed in Tables 6
                         and 7
                        , together with the results of the analysis.

As seen from Tables 6 and 7, the IP-NMA was able to locate and quantify the damage more accurately than the P-NMA for all simulations. Also, we see that Case 2 was the situation in which the identification was the hardest, presenting more spurious damage values than the other cases, especially for the P-NMA. Indeed, P-NMA presented several spurious damage values even in elements 1 (0.937) and 15 (0.941), while the results provided by the improved algorithm were much closer to the real damage scenario. Thus, in this example with perturbation and measurement noise addition, the IP-NMA was able to provide more accurate results than its preceding version for the computational cost.

In this paper, an improvement on the hybrid stochastic/deterministic optimization algorithm P-NMA for vibration-based damage detection was proposed. The proposed modification was based on the information that one has about the damage scenario of the structure: it is expected that only a few elements of the structure are damaged and consequently, the values of αi
                      of most of the elements are equal to or close to one. As described in Section 3, on the one hand, such a modification is very simple to be implemented and does not bring any additional computational cost. On the other hand, a new parameter was introduced: the maximum number of damaged elements (npmax
                     ).

The proposed algorithm (IP-NMA) was investigated in a series of numerical examples to compare its performance to the original algorithm (P-NMA) and the metaheuristic HS algorithm. All examples were selected from the literature, including a cantilever beam, a planar truss, a portal plane frame and a simply supported beam with influence of noise. From the results of these examples, it was clear that the IP-NMA improved the performance of the P-NMA. For instance, for the same computational cost, the results of the P-NMA were less accurate than the ones of the IP-NMA in all the analyzed cases. Also, the most critical situation was verified in the damage scenario 2 of the portal plane frame, in which the P-NMA was not able to provide the same level of accuracy of the IP-NMA even for a higher computational cost. Moreover, the improved algorithm identified in some cases the damage or potentially damaged regions in the stochastic part of the search (pre-optimization stage).

It is also worth to point out that the IP-NMA was much more efficient than the HS algorithm, which provided in several cases poor results despite of its much higher computational cost. For instance, the HS algorithm presented several spurious damage regions in Sections 4.1 and 4.2 and it could not identify even the damage location for both single and multi-damage scenarios in Section 4.3. It is worth to mention that the proposed algorithm may be applied to other damage detection schemes based on optimization, not only to the ones presented in Section 2, i.e., other objective functions. The results shown in this paper encourage the application of the IP-NMA for the solution of optimization based damage identification problems.

@&#ACKNOWLEDGMENTS@&#

The authors acknowledge the financial support of the Brazilian agency CNPq (grant number 474199/2012-6).

@&#REFERENCES@&#

