@&#MAIN-TITLE@&#Chaotic swarming of particles: A new method for size optimization of truss structures

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new combination of swarm intelligence and chaos theory is presented for optimal design of truss structures.


                        
                        
                           
                           This method is a kind of multi-phase optimization technique which employs chaos theory.


                        
                        
                           
                           Results are compared to those of the other meta-heuristic algorithms showing the efficiency of the new method.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Meta-heuristic algorithm

Swarm intelligence

Particle swarm optimizer

Chaos theory

Truss structures

Size optimization

@&#ABSTRACT@&#


               
               
                  A new combination of swarm intelligence and chaos theory is presented for optimal design of truss structures. Here the tendency to form swarms appearing in many different organisms and chaos theory has been the source of inspiration, and the algorithm is called chaotic swarming of particles (CSP). This method is a kind of multi-phase optimization technique which employs chaos theory in two phases, in the first phase it controls the parameter values of the particle swarm optimization (CPVPSO) and the second phase is utilized for local search (CLSPSO). Some truss structures are optimized using the CSP algorithm, and the results are compared to those of the other meta-heuristic algorithms showing the effectiveness of the new method.
               
            

@&#INTRODUCTION@&#

Truss structures form a broad category of man-made structures, including bridges, towers, cranes, roof support trusses, building exoskeletons, and temporary construction frameworks. Trusses derive their utility and distinctive look from their simple construction: rod elements (bars) which exert only axial forces, connected concentrically with welded, pinned or bolted joints. These utilitarian structures are ubiquitous in the industrialized world and can be extremely complex and thus difficult to model. For example, the Eiffel Tower, perhaps the most famous truss structure in the world, contains over 15,000 girders connected at over 30,000 points [1] and even simpler structures, such as railroad bridges, routinely contain hundreds of members of varying lengths [2]. Therefore due to the increasing tendency on the prices of materials, the utilization of the modern design optimization tools becomes a necessity. In engineering the main objective of optimization is to comply with basic standards but also to achieve good economic results. Design variables involved in optimum design of truss structures can be considered as sizing (finding the optimal sections for elements), lay out (the optimum location of the joints in the structure), and topology (finding the number of members of the structure and the way in which these members are connected to each other) variables.

On the other hand, optimal design of (minimizing the weight) a structure while at the same time satisfying various requirements on structural response, cost, aesthetics, and manufacturing is a complicated task. Experienced engineers may be able to come up with solutions that fulfill some of the requirements, but they will seldom be able to come up with the optimal structure [3]. In order to both optimize the structure and meet the given requirements, researchers use various techniques. One of them is design optimization with meta-heuristic algorithms. Meta-heuristics are developed to tackle complex optimization problems where other optimization methods have failed to be either effective or efficient. Meta-heuristic algorithms which are created by the simulation of the natural processes try to find the optimal solution in a stochastic manner and avoid local optimum solutions. These algorithms impose fewer mathematical requirements and they do not require very well defined mathematical models.

Among these phenomenon-mimicking methods, algorithms inspired from the collective behavior of species such as ants, bees, wasps, termite, fishes, and birds are referred as swarm intelligence algorithms [4]. Here, we introduce a new combination of chaos theory and swarm intelligence which is called the chaotic swarming of particles (CSP) for optimum design of truss structures which can be considered as a suitable field to investigate the efficiency of this algorithm. One of these swarm intelligence algorithms is particle swarm optimization (PSO) which is a population-based meta-heuristic discovered through simulation of social models of bird flocking, fish schooling, and swarming able to find optimal solution(s) to the non-linear numeric problems. PSO was first introduced in 1995 by Eberhart and Kennedy [5], and has attracted much attention in various fields. However, PSO can easy be trapped in local optimal point when dealing with some complex and multi-modal functions.

Recently, chaos and PSO have been combined in different studies for different purposes. Some of the works have intended to show the chaotic behaviors in the PSO process. In some of the works, chaos has been used to overcome the limitations of PSO [6]. Hence previous research can be categorized into two types. In the first type, chaos is embedded into the PSO velocity updating equation, i.e., a chaotic map is used to control the value of parameters in the velocity updating equation [7–12]. In the second type, chaotic search is inserted in the PSO formulation [13–16]. In this article, we combined the two types of improvements to control the value of the parameters and to increase the local PSO search capability. This enhances search behavior and allows to avoid local optima.

The present article consists of five sections. After the introduction in Section 1, the proposed method is described in Section 2. The formulation of truss sizing problems is presented in Section 3. Benchmark examples are studied in Section 4 and the results of the proposed method are compared with literature. The paper is concluded in Section 5.

PSO involves a number of particles, which are initialized randomly in the space of the design variables. These particles fly through the search space and their positions are updated based on the best positions of individual particles and the best position among all particles in the search space which in truss sizing problems corresponds to a particle with the smallest weight [5]. In PSO, a swarm consists of N particles moving around in a D-dimensional search space. The position of the jth particle at the kth iteration is used to evaluate the quality of the particle and represents candidate solution(s) for the search or optimization problems. The update moves a particle by adding a change velocity 
                           
                              
                                 
                                    V
                                 
                                 
                                    j
                                 
                                 
                                    k
                                    +
                                    1
                                 
                              
                           
                         to the current position 
                           
                              
                                 
                                    X
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         as follows:
                           
                              (1)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   wV
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             +
                                             
                                                
                                                   c
                                                
                                                
                                                   1
                                                
                                             
                                             ×
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             ⊗
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             -
                                             
                                                
                                                   X
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                             +
                                             
                                                
                                                   c
                                                
                                                
                                                   2
                                                
                                             
                                             ×
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             ⊗
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   g
                                                
                                                
                                                   k
                                                
                                             
                                             -
                                             
                                                
                                                   X
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   X
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             +
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where w is an inertia weight to control the influence of the previous velocity; 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         and 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         are random numbers uniformly distributed in the range of (0,1); c
                        1 and c
                        2 are two acceleration constants namely called cognitive and social parameter, respectively; 
                           
                              
                                 
                                    P
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                         is the best position of the jth particle up to iteration k; 
                           
                              
                                 
                                    P
                                 
                                 
                                    g
                                 
                                 
                                    k
                                 
                              
                           
                         is the best position among all particles in the swarm up to iteration k. In order to increase PSO’s exploration ability, the inertia weight is now modified during the optimization process with the following equation:
                           
                              (2)
                              
                                 
                                    
                                       w
                                    
                                    
                                       k
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       w
                                    
                                    
                                       k
                                    
                                 
                                 ×
                                 
                                    
                                       D
                                    
                                    
                                       r
                                    
                                 
                                 ×
                                 rand
                              
                           
                        where Dr
                         is the damping ratio which is a constant number in the interval (0,1); and rand is a uniformly distributed random number in the range of (0,1).

In standard PSO algorithm, the information of local best and global best were shared by next generation particles. In this paper we use an improved PSO, which uses the dynamic inertia weight that decreases according to iterative generation increasing (Eq. (2)). A larger inertia weight facilitates global exploration and a smaller inertia weight tends to facilitate local exploration to fine-tune the current search area. The inertia weight, w, controls the momentum of the particle by weighing the contribution of the previous velocity: basically it controls how much memory of the previous flight direction should influence the new velocity [17]. Fig. 1
                         shows the flowchart of standard PSO.

Chaos and random signals share the property of long term unpredictable irregular behavior. Many random generators in programming softwares as well as the chaotic maps are deterministic. However, chaos can help order to arise from disorder. Similarly, many optimization algorithms are inspired from biological systems where order arises from disorder. In these cases disorder often indicates both non-organized patterns and irregular behavior, whereas order is the result of self-organization and evolution and often arises from a disorder condition or from the presence of dissymmetry [18]. On the other hand self-organization and evolution are two key factors of many stochastic optimization techniques such as PSO. Due to these common properties between chaos and optimization algorithms, simultaneous use of these concepts seems to improve the performance of the optimizer. Utilizing chaotic sequences for particle swarm optimization [7], harmony search algorithm [19], artificial bee colony [20], Big Bang–Big Crunch [21], imperialist competitive algorithm [18,22], and charged system search [23] are some familiar examples of this combination. Seemingly the benefit of such combination is a generic for other stochastic optimization and experimental studies have confirmed this; however, this has not yet mathematically been proven.

In this phase, when a random number is needed by PSO algorithm, it can be generated by iterating one step of the chosen chaotic map (cm) being started from a random initial condition of the first iteration of PSO. One-dimensional non-invertible maps are the simplest systems with capability of generating chaotic motion [24]. One of the well-known chaotic maps is the Logistic map. Logistic map is a polynomial map [25]. It is often cited as an example of how complex behavior can arise from a very simple non-linear dynamics equation. This map is defined by,
                           
                              (3)
                              
                                 
                                    
                                       cm
                                    
                                    
                                       k
                                       +
                                       1
                                    
                                 
                                 =
                                 α
                                 ×
                                 
                                    
                                       cm
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 1
                                 -
                                 
                                    
                                       cm
                                    
                                    
                                       k
                                    
                                 
                                 )
                              
                           
                        where cmk
                         is the kth chaotic number, with k denoting the iteration number. It is trivial to show that if 0<
                        α
                        ⩽4 then the interval (0,1) is mapped into itself, i.e. if cm
                        0 ∊ (0,1) then cmk
                         ∊ (0,1). It is proven that when α
                        =4, Eq. (3) is totally in chaos state. The mathematical explanation is that all values between 0 and 1 except the fixed points (0.25, 0.5, 0.75) are produced randomly by iteration. Utilizing the chaos characteristic, which is sensitive to the initial value and setting n different initial values between 0 and 1 (except the fixed point) to cmk
                         in Eq. (3), one can get n chaos variables of different orbits.

In order to control values of PSO parameters by using chaotic maps, the approach described in [7] is followed in this research; 
                           
                              
                                 
                                    r
                                 
                                 
                                    1
                                    j
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                    j
                                 
                                 
                                    k
                                 
                              
                           
                        , and rand are generated from the iterations of chaotic map instead of using classical random number generator.
                           
                              (4)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   w
                                                
                                                
                                                   k
                                                
                                             
                                             ×
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             +
                                             
                                                
                                                   c
                                                
                                                
                                                   1
                                                
                                             
                                             ×
                                             
                                                
                                                   cm
                                                
                                                
                                                   k
                                                
                                             
                                             ⊗
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             -
                                             
                                                
                                                   X
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                             +
                                             
                                                
                                                   c
                                                
                                                
                                                   2
                                                
                                             
                                             ×
                                             
                                                
                                                   cm
                                                
                                                
                                                   k
                                                
                                             
                                             ⊗
                                             (
                                             
                                                
                                                   P
                                                
                                                
                                                   g
                                                
                                                
                                                   k
                                                
                                             
                                             -
                                             
                                                
                                                   X
                                                
                                                
                                                   j
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   w
                                                
                                                
                                                   k
                                                
                                             
                                             ×
                                             
                                                
                                                   D
                                                
                                                
                                                   r
                                                
                                             
                                             ×
                                             
                                                
                                                   cm
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In this phase, chaotic search is introduced in the PSO formulation. This is a kind of multi-phase optimization technique [14] because chaotic optimization and PSO coexist and are switched to each other according to certain conditions. Here, chaotic local search (CLS) that uses Logistic map for the particle is incorporated to enhance search behavior and skip local optima.


                        Fig. 2
                         shows the ergodic property and the probability distribution of the Logistic map when cm
                        0
                        =0.3 (iteration number is 2000). The figure indicates that the chaotic iteration is more random and chaotic search can more easily escape from local minima than other stochastic optimization algorithms. In other word, due to the non-repetition of chaos, it can carry out global searches at higher speeds [26]. Statistical properties of the logistic map are provided in Appendix A. The main drawback of this approach is that chaotic search works well in a small search space but generates unacceptable optimization time in a large search space [27]. The CLSPSO process is now described.
                           
                              •
                              
                                 First chaotic search process (CLSPSO1):


                                 Step 1: Set t
                                 =0. Initialize the number of the first chaotic search N
                                 1, initial value of chaos variables (cm
                                 0), the lower and upper bound of the decision variables (X
                                 min and X
                                 max), and the number of particles. Determine the initial design variables for the jth particle as


                        
                           
                              
                                 Step 2: Evaluate the objective function and determine 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             g
                                          
                                          
                                             0
                                          
                                       
                                    
                                  by finding 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             ∗
                                          
                                       
                                       =
                                       min
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             j
                                          
                                          
                                             0
                                          
                                       
                                       )
                                    
                                 .


                                 Step 3: Map chaotic variables cmt
                                  into the variance range of the optimization variables by the following equation:


                        
                           
                              
                                 Step 4: Evaluate the new position 
                                    
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             j
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       )
                                    
                                 .


                                 Step 5: If the new solution is better than the initial solution 
                                    
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             j
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       )
                                       ⩽
                                       
                                          
                                             f
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                 , then 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             ∗
                                          
                                       
                                       =
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             j
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       )
                                    
                                 .


                                 Step 6: Generate the next values of the chaotic variables by a chaotic map and set t
                                 =
                                 t
                                 +1.


                                 Step 7: If t
                                 <
                                 N
                                 1 go to step 3, else stop the first chaotic search process and obtain the output Xg
                                  and f
                                 * as the result of the CLSPSO1.


                                 Step 8: Set Xg
                                  as the global best (Pg
                                 ).


                                 Second chaotic search process (CLSPSO2):


                                 Step 1: Initialize the number of the second chaotic search N
                                 2 and set i
                                 =1.


                                 Step 2: Using the PSO algorithm, generate the global best 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             g
                                          
                                          
                                             k
                                          
                                       
                                    
                                 .


                                 Step 3: Set 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       =
                                       
                                          
                                             P
                                          
                                          
                                             g
                                          
                                          
                                             k
                                          
                                       
                                    
                                 .


                                 Step 4: Update the global best position of the particles using the chaotic map by the following equation:


                        
                           
                              
                                 Step 5: If the new solution is better than the initial solution 
                                    
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             g
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       )
                                       ⩽
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             g
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 , then 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             ∗
                                          
                                       
                                       =
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             g
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       )
                                       
                                       and
                                       
                                       
                                          
                                             P
                                          
                                          
                                             g
                                          
                                          
                                             k
                                          
                                       
                                       =
                                       
                                          
                                             X
                                          
                                          
                                             g
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                    
                                 .


                                 Step 6: Generate the subsequent values of the chaotic variables by a chaotic map and set i
                                 =
                                 i
                                 +1.


                                 Step 7: If i
                                 <
                                 N
                                 2 go to step 4, else stop the second chaotic search process and obtain the output 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             g
                                          
                                          
                                             k
                                          
                                       
                                    
                                  and f
                                 * as the result of the CLSPSO2.

The framework of the CSP is illustrated in Fig. 3
                        . In the CLSPSO1 phase, the initial positions of the particles are determined chaotically in the search space. Also the values of the fitness function for the particles are calculated. The best particle among the entire set of particles is treated as a global best (Xg
                        ). The first step is actually a special form of the “Scatter Search” method proposed already in 1977. There are a lot of algorithms using the same idea, such as “Self-Organizing Migration Algorithm”.

After reaching a pre-defined number of iterations (N
                        1), the CLSPSO1 is stopped and switched to PSO while CPVPSO applies for controlling the value of parameters in the velocity updating equation. In the second phase, the CLSPSO2 (updating process) is activated if PSO stops moving. CLSPSO2 causes the particles to escape from local minima using the logistic map. After a better solution is found by the CLSPSO2 or after a fixed number of iterations (N
                        2), the PSO will continue. The algorithm is terminated when the termination criterion has been met: that is, if there is no significant improvement in the solution.

For many heuristic algorithms it is a common feature that if all the agents get gathered in a small space, i.e., if the agents are trapped in part of the search space, escaping from this may be very difficult. In order to further understand how CSP can solve this problem, let us consider the following mathematical minimization problem:
                           
                              (8)
                              
                                 f
                                 (
                                 x
                                 )
                                 =
                                 4
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 -
                                 2.1
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                    
                                       4
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             1
                                          
                                          
                                             6
                                          
                                       
                                    
                                    
                                       3
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 -
                                 4
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 4
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                    
                                       4
                                    
                                 
                              
                           
                        
                     

The objective function is the Six-Hump Camelback function which is one of the standard test functions in optimization. This function has six local optima, two of which are global and are located at either Xg
                        
                        =(−0.08984, 0.71266) or Xg
                        
                        =(0.08984, −0.71266), each with a corresponding function value equal to f(Xg
                        )=−1.0316285. Possible value bounds between −10.0 and 10.0 are used for the two design variables, x
                        1 and x
                        2, shown in Eq. (8). The total number of particles is 5, and the w
                        0 (inertia weight) and the Dr
                         (damping ratio) are 0.9 and 0.99, respectively. Also c
                        1
                        =1.31 and c
                        2
                        =4−
                        c
                        1. After 50 searches, the CLSPSO1 was stopped with a function value of −1.0315957, and switched to the PSO. After 200 searches when f
                        =−1.0316279, CLSPSO2 is activated. CSP finally found a near-optimal vector, X
                        =(−0.08984, 0.71265), that has a function value of −1.0316284. In Fig. 4
                         a plot of trajectory is presented that is obtained using the CSP for this example. This figure shows the chaotic behavior of the particle. Notice how the oscillations increase in amplitude, but then rapidly decrease. Near the end of the sample (k
                        =300) the amplitude increases again, but it eventually decreases. The observed increase in amplitude is caused by the chaotic nature of the parameters. In short, this implies that the trajectory of the particle will converge most of the time, occasionally taking divergent steps. The plot shows that this system “recovers” after taking large divergent steps. The recovery is caused by the fact that approximately 50% of the time the particle takes a step along a convergent trajectory. Therefore, chaotically divergent behavior can have a positive influence on the diversity of the solutions. This property is especially valuable when optimizing functions that contain many local minima. In designing the CSP algorithm, two opposing criteria are taken into account: exploration of the search space and exploitation of the best solutions found. In exploration, new regions must be searched to make sure that all regions of the search space are fairly explored and that the search is not limited to only a reduced number of regions. In exploitation, the smaller regions are explored more thoroughly to find better solutions. Thus in order to have a reasonable balance between the exploration and exploitation, we use the CPVPSO and CLSPSO mechanisms.

Size optimization of truss structures involves determining optimum values for member cross-sectional areas, Ai
                     , that minimize the structural weight W. This minimum weight design should also satisfy the inequality constraints that limit design variable sizes and structural responses. The optimal design of a truss can be formulated as:
                        
                           (9)
                           
                              minimize
                              
                              W
                              (
                              {
                              x
                              }
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    γ
                                 
                                 
                                    i
                                 
                              
                              ·
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                              ·
                              
                                 
                                    L
                                 
                                 
                                    i
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              subject to
                              
                              
                                 
                                    
                                       
                                          
                                             δ
                                          
                                          
                                             min
                                          
                                       
                                       ⩽
                                       
                                          
                                             δ
                                          
                                          
                                             i
                                          
                                       
                                       ⩽
                                       
                                          
                                             δ
                                          
                                          
                                             max
                                          
                                       
                                       
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       m
                                    
                                 
                                 
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             min
                                          
                                       
                                       ⩽
                                       
                                          
                                             σ
                                          
                                          
                                             i
                                          
                                       
                                       ⩽
                                       
                                          
                                             σ
                                          
                                          
                                             max
                                          
                                       
                                       
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       n
                                    
                                 
                                 
                                    
                                       
                                          
                                             A
                                          
                                          
                                             min
                                          
                                       
                                       ⩽
                                       
                                          
                                             A
                                          
                                          
                                             i
                                          
                                       
                                       ⩽
                                       
                                          
                                             A
                                          
                                          
                                             max
                                          
                                       
                                       
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       ng
                                    
                                 
                              
                           
                        
                     where W({x})=weight of the structure; n
                     =number of members making up the structure; m
                     =number of nodes; ng
                     =number of groups (number of design variables); γi
                     
                     =material density of member i; Li
                     
                     =length of member i; Ai
                     
                     =cross-sectional area of member i chosen between A
                     min and A
                     max; min=lower bound and max=upper bound; σi
                      and δi
                      are the element stress and nodal displacement, respectively.

To handle the side constraints if the solutions are not in the allowable limits, the particles positions are determined as
                        
                           (11)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      i
                                                   
                                                
                                                >
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      max
                                                   
                                                
                                                ⇒
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      new
                                                   
                                                
                                                =
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      max
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      i
                                                   
                                                
                                                <
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      min
                                                   
                                                
                                                ⇒
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      new
                                                   
                                                
                                                =
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      min
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

An appropriate penalty function was utilized to handle non-linear constraints: if the design is feasible, the penalty is zero. Conversely, the amount of penalty is computed by normalizing constraint violation with respect to the corresponding allowable limit. Nodal displacements and element stresses can be obtained from structural analysis. These values are compared to the allowable limits to calculate the penalty functions as
                        
                           (12)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      min
                                                   
                                                
                                                <
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                <
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      max
                                                   
                                                
                                                ⇒
                                                
                                                   
                                                      Φ
                                                   
                                                   
                                                      δ
                                                   
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      min
                                                   
                                                
                                                >
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                or
                                                
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      max
                                                   
                                                
                                                <
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ⇒
                                                
                                                   
                                                      Φ
                                                   
                                                   
                                                      δ
                                                   
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                
                                                =
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     δ
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     δ
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     min
                                                                     /
                                                                     max
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     δ
                                                                  
                                                                  
                                                                     i
                                                                  
                                                                  
                                                                     min
                                                                     /
                                                                     max
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                              i
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              m
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      min
                                                   
                                                
                                                <
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                <
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      max
                                                   
                                                
                                                ⇒
                                                
                                                   
                                                      Φ
                                                   
                                                   
                                                      σ
                                                   
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      min
                                                   
                                                
                                                >
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                or
                                                
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      max
                                                   
                                                
                                                <
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ⇒
                                                
                                                   
                                                      Φ
                                                   
                                                   
                                                      σ
                                                   
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                
                                                =
                                                |
                                                
                                                   
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            min
                                                            /
                                                            max
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            min
                                                            /
                                                            max
                                                         
                                                      
                                                   
                                                
                                                |
                                             
                                          
                                       
                                    
                                 
                              
                              
                              i
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              n
                           
                        
                     where Φσ
                      and Φδ
                      are the values of stress penalty and nodal deflection penalty, respectively.

The objective function and optimization constraints are merged into the following pseudo-cost function that must be minimized:
                        
                           (14)
                           
                              
                                 
                                    f
                                 
                                 
                                    cost
                                 
                              
                              (
                              {
                              x
                              }
                              )
                              =
                              
                                 
                                    (
                                    1
                                    +
                                    
                                       
                                          ε
                                       
                                       
                                          1
                                       
                                    
                                    ·
                                    
                                       ∑
                                    
                                    Φ
                                    )
                                 
                                 
                                    
                                       
                                          ε
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              ×
                              W
                              (
                              {
                              x
                              }
                              )
                           
                        
                     
                  

The penalty function method has some limitations. For example, penalty parameters are problem dependent and proper tuning of parameters is needed. If penalty parameters are large, penalty functions tend to become ill-conditioned near the boundary of the feasible domain and this may result in a local optimal solution or an infeasible solution. In this case, repeated runs are suggested by varying the penalty parameter until satisfactory results are obtained. Here, constants ε
                     1 and ε
                     2 are selected considering the exploration and the exploitation rate of the search space. Thus ε
                     1 is set to unity, and ε
                     2 is selected in a way that it decreases the penalties and reduces the cross-sectional areas. In the first steps of the search process ε
                     2 is set to 1.5, and ultimately increased to 3 [18]. Since CSP is independent of the type of penalty function, one can easily utilize another approach in the application of the CSP.

In order to test the efficiency of the proposed method, some test problems previously treated by other investigators are studied: the weight minimization of 25-bar truss, 72-bar truss, 200-bar, and 942-bar truss. For all test cases, after a sensitivity analysis, the CSP internal parameters are set to: w
                     0
                     =0.9, damping ratio (Dr
                     )=0.99, number of the first chaotic search (N
                     1)=50 and number of the second chaotic search (N
                     2)=10. Also for the first two examples, the maximum number of iteration is set to 1200, number of particles (N)=50, and c
                     1
                     =1.31, c
                     2
                     =2.69. For the last two examples the maximum number of iteration is set to 2500, number of particles (N)=100, and c
                     1
                     =1, c
                     2
                     =3. Therefore the maximum number of structural analyses is 63,000 for the first two examples, and 256,000 for the last two examples if all chaotic search iterations were completed in each optimization cycle. The algorithms were implemented in Matlab and optimization runs were carried out on a computer with an Intel Core i5 CPU, 2.53GHz processor, and 3.00GB RAM. Also a direct stiffness method is utilized to analyze the structures.

Sensitivity analysis was performed for internal parameters of the CSP algorithm including Dr
                     , c
                     1, c
                     2, N
                     1, N
                     2 and N (number of particles). In order to avoid the possible randomness of the search process due to the use of different initial solutions (i.e. initial populations and initial values of cm
                     0), each problem was solved 10 times. Because of the large computational time, only sensitivity analysis of the 25-bar truss and 200-bar truss problems were carried out and best combination of parameters obtained for these problems were used for the 72-bar truss and 942-bar truss problems, respectively.

The spatial 25-bar truss structure is schematized in Fig. 5
                        . The material density is 0.1lb/in.3 (2767.990kg/m3) and the modulus of elasticity is 10Msi (68.950GPa). Elements can be divided into eight groups, as: (1) A
                        1, (2) A
                        2–5, (3) A
                        6–9, (4) A
                        10–11, (5) A
                        12–13, (6) A
                        14–17, (7) A
                        18–21, and (8) A
                        22–25. This spatial truss is subjected to two loading conditions as shown in Table 1
                        . Maximum displacement limitations of ±0.35in. (±8.89mm) are imposed on all nodes in all coordinate directions. Stress constraints set for each element group are presented in Table 2
                        . The range of cross sectional areas varies from 0.01in.2 (0.0645cm2) to 3.4in.2 (21.94cm2).

In Table 3
                        , the optimum cross sectional areas and statistical information of the solution obtained by the CSP and the different methods containing ACO [28], BB-BC [29], PSO [30], HPSACO [31], and CSS [32] are presented. The best weight obtained by the CSP is 545.0977lb after 350 iterations and 17,500 analyses which is about 28% of the maximum number of analyses. CSP outperforms standard PSO and BB-BC. The best weight optimized by CSP is consistent with literature but the average weight is slightly lower. It should be added that the CSP violates displacement constraints by a small amount of 0.657%. The results of the sensitivity analysis carried out to find the best combination of the parameters for CSP are presented in Table 4
                        .

The spatial 72-bar truss structure shown in Fig. 6
                         has material density of 0.1lb/in.3 (2767.990kg/m3) and modulus of elasticity of 10Msi (68.950GPa). The members are subjected to the stress limits of ±25ksi (±172.375MPa). The uppermost nodes are subjected to the displacement limits of ±0.25in. (±0.635cm) in both the x and y directions. Elements are divided into 16 groups using symmetry: (1) A
                        1–A
                        4, (2) A
                        5–A
                        12, (3) A
                        13–A
                        16, (4) A
                        17–A
                        18, (5) A
                        19–A
                        22, (6) A
                        23–A
                        30, (7) A
                        31–A
                        34, (8) A
                        35–A
                        36, (9) A
                        37–A
                        40, (10) A
                        41–A
                        48, (11) A
                        49–A
                        52, (12) A
                        53–A
                        54, (13) A
                        55–A
                        58, (14) A
                        59–A
                        66, (15) A
                        67–A
                        70, (16) A
                        71–A
                        72. The minimum permitted cross-sectional area for each member is 0.10in.2 (0.6452cm2), and the maximum cross-sectional area of each member is 4in.2 (25.81cm2). Table 5
                         lists the different load cases applied to the structure.


                        Fig. 7
                         compares the convergence characteristic curve of the CSP, PSO with that of the CPVPSO, and standard PSO. For this spatial truss structure, it takes about 210, 450, and 100 iterations for the CSP, CPVPSO, and PSO algorithms to converge, respectively. Therefore, after 17%, 36%, and 8% of maximum number of analyses, the CSP, CPVPSO, and PSO are found as the best solutions, respectively. The best weight obtained by the PSO and CPVPSO is 416.21lb and 390.14lb while the best result of the CSP is 379.97lb. These results demonstrate the performance of the CLSPSO mechanism in CSP. The best weight of GA [33], PSO [34], and SAHS [37] is 383.12, 381.91, and 380.62lb, respectively. In addition, the average weight of CSP is 381.56lb, while it is 381.85 and 382.42lb for BB-BC and SAHS [29]. Table 6
                         compares CPS with other meta-heuristic algorithms presented in literature: the new algorithm is absolutely competitive with the other optimization methods.

The planar 200-bar truss structure shown in Fig. 8
                         is designed for minimum weight. Truss elements are divided into 29 groups (design variables) All members are made of steel: the material density and modulus of elasticity are 0.283lb/in.3 (7933.410kg/m3) and 30Msi (206GPa), respectively. Element stresses must not exceed ±10ksi (68.95MPa). There are three independent loading conditions: (1) 1.0kip (4.45kN) acting in the positive x-direction at nodes 1, 6, 15, 20, 29, 34, 43, 48, 57, 62, and 71; (2) 10kips (44.5kN) acting in the negative y-direction at nodes 1, 2, 3, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24,…,71, 72, 73, 74, and 75; and (3) conditions 1 and 2 acting together.

The minimum weight and the values of the cross sectional area obtained by CSP and some other previous studies reported in the literature such as a modified simulated annealing algorithm (CMLPSA) [35], an improved genetic algorithm (GA) [36], and self adaptive harmony search algorithm (SAHS) [37] are presented in Table 7
                        . It can be seen that the CSP algorithm found an optimum weight of 25467.95lb after approximately 317 iterations and 31,700 analyses which is about 12% of the maximum number of analyses. The optimal design obtained using the CSP algorithm showed an excellent agreement with the previous designs reported in the literature. The results of the sensitivity analysis carried out to find the best combination of the parameters for CSP are presented in Table 8
                        .

The 26-story-tower space truss shown in Fig. 9
                         has 942 elements and 244 nodes. Fifty-nine design variables are used to represent the cross-sectional areas of 59 element groups in this structure, employing the symmetry of the structure. Fig. 9 shows the geometry and the 59 element groups. The material density is 0.1lb/in.3 (2767.990kg/m3) and the modulus of elasticity is 10Gsi (68.950GPa). The members are subjected to the stress limits of ±25ksi (172.375MPa) and the four nodes of the top level in the x, y and z directions are subjected to the displacement limits of ±15.0in. (38.10cm) (about 1/250 of the total height of the tower). The allowable cross-sectional areas in this example are selected from 0.1 to 200.0in.2 (from 0.6452 to 1290.32cm2). Loading conditions are presented in Table 9
                        .

After 485 iterations and 48,500 analyses (about 19% of the maximum number of analyses) CSP found an optimum weight corresponding to the design listed in Table 10
                        . The best weights are 56,343lb, 60,385lb, 53,201lb, and 52,401lb for the GA, PSO, BB-BC and HBB-BC [29], respectively. In addition, CSP is more efficient in terms of average weight and standard deviation of optimized weight. The average weight obtained by CSP is 53,147lb which is 15.94%, 29.36%, 3.73% and 0.72% lighter than GA, PSO, BB-BC, and HBB-BC, respectively. Table 11
                         provides the statistic information for this example.

@&#CONCLUSIONS@&#

Many meta-heuristic approaches are inspired by natural phenomena. This paper presented a new nature based algorithm. The method is called chaotic swarming of particles, and it is inspired from the chaotic and collective behavior of species such as bees, fishes, and birds. Here chaos theory is used to control the value of the parameters of PSO and to increase the local search capability of the PSO in order to enhance search behavior and skip local optima. The proposed approach not only performs exploration by using the population-based evolutionary searching ability of PSO, but also performs exploitation by using the chaotic local searching behavior.

@&#ACKNOWLEDGEMENT@&#

The first author is grateful to the Iran National Science Foundation for the support.

(The content of this section is based on Refs. [38,39]).

The logistic map is a transformation g: [0,1]→[0,1] defined by g(y, a)=
                     ay(1−
                     y), where a is a control parameter taking on values in the interval [0;4]. For the purpose of this article, the logistic map with a
                     =4 is used. In this case, the map has good qualities as a pseudo-random number generator.

For a
                     =4, trajectories determined by g(y, 4) behave chaotically for almost all y
                     0 in [0,1]. Thus, in spite of the sensitivity of trajectories to initial states, this is not usually reflected in the distribution of states within long-term trajectories. In general, it is well-known that for maps exhibiting chaotic dynamics, the precise long-term predictions of individual trajectories are impossible due to sensitive dependence of trajectories on initial conditions. Therefore, it is natural to investigate the statistical properties of deterministic maps with chaotic dynamical behavior. The statistical properties of the logistic map with a
                     =4 are now described.

Let ([0,1], 
                        B
                     , μ) be a measure space where 
                        B
                      is the Borel σ-algebra on [0,1] and μ is the Lebesgue measure on ([0,1], 
                        B
                     ). Then the measure
                        
                           (A1)
                           
                              ν
                              (
                              A
                              )
                              =
                              
                                 ∫
                                 
                                    A
                                 
                              
                              
                                 
                                    1
                                 
                                 
                                    π
                                    
                                       
                                          y
                                          (
                                          1
                                          -
                                          y
                                          )
                                       
                                    
                                 
                              
                              μ
                              (
                              dy
                              )
                           
                        
                     is invariant under the transformation g(y, 4), that is, ν(A)=
                     ν(g
                     −1(A)) for all A in 
                        B
                     . The density of ν, given by
                        
                           (A2)
                           
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              (
                              y
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    π
                                    
                                       
                                          y
                                          (
                                          1
                                          -
                                          y
                                          )
                                       
                                    
                                 
                              
                              ,
                              
                              y
                              ∈
                              [
                              0
                              ,
                              1
                              ]
                           
                        
                     is the stationary density of the Frobenius–Perron operator P corresponding to the transformation g(y, 4). This operator is defined by
                        
                           (A3)
                           
                              P
                              ρ
                              (
                              x
                              )
                              =
                              
                                 
                                    d
                                 
                                 
                                    dy
                                 
                              
                              
                                 ∫
                                 
                                    
                                       
                                          f
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    (
                                    [
                                    0
                                    ,
                                    1
                                    ]
                                    )
                                 
                              
                              ρ
                              (
                              u
                              )
                              du
                              =
                              
                                 
                                    1
                                 
                                 
                                    4
                                    
                                       
                                          1
                                          -
                                          y
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       ρ
                                       
                                          
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                                -
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      1
                                                      -
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                       +
                                       ρ
                                       
                                          
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      1
                                                      -
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

A few elementary calculations confirm that:
                        
                           
                              •
                              
                              μ
                              =
                              〈
                              y
                              〉
                              =
                              
                                 ∫
                                 
                                    0
                                 
                                 
                                    1
                                 
                              
                              y
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              (
                              y
                              )
                              dy
                              =
                              1
                              /
                              2
                           
                        
                     
                     
                        
                           
                              •
                              
                              〈
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                              〉
                              =
                              
                                 ∫
                                 
                                    0
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              (
                              y
                              )
                              dy
                              =
                              3
                              /
                              8
                           
                        
                     
                     
                        
                           
                              •
                              
                              〈
                              
                                 
                                    y
                                 
                                 
                                    2
                                 
                              
                              〉
                              -
                              〈
                              y
                              
                                 
                                    〉
                                 
                                 
                                    2
                                 
                              
                              =
                              1
                              /
                              8
                           
                        
                     
                     
                        
                           
                              •
                              
                              σ
                              =
                              
                                 
                                    
                                       
                                          〈
                                          
                                             
                                                y
                                             
                                             
                                                2
                                             
                                          
                                          〉
                                          -
                                          〈
                                          y
                                          
                                             
                                                〉
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    1
                                    /
                                    2
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    2
                                    
                                       
                                          2
                                       
                                    
                                 
                              
                              =
                              0.35
                           
                        
                     
                     
                        
                           
                              •
                              
                              ‖
                              
                                 
                                    P
                                 
                                 
                                    n
                                 
                              
                              ρ
                              -
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              ‖
                              →
                              0
                              
                              as
                              
                              n
                              →
                              ∞
                           
                        
                     
                  

The logistic map g(y, 4) is an ergodic transformation. As a consequence
                        
                           (A4)
                           
                              
                                 
                                    Q
                                 
                                 
                                    ¯
                                 
                              
                              =
                              
                                 
                                    
                                       lim
                                    
                                    
                                       n
                                       →
                                       ∞
                                    
                                 
                              
                              
                                 
                                    1
                                 
                                 
                                    n
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       0
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                              
                              Q
                              (
                              
                                 
                                    g
                                 
                                 
                                    k
                                 
                              
                              (
                              x
                              )
                              )
                              =
                              ∫
                              Q
                              (
                              y
                              )
                              γ
                              (
                              dy
                              )
                              =
                              〈
                              y
                              〉
                           
                        
                     for any integrable function Q, where gk
                     (y)=
                     g(gk
                     
                     −1(y)). This result is the famous Birkhoff’s ergodic theorem.

@&#REFERENCES@&#

