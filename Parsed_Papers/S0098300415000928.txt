@&#MAIN-TITLE@&#A method for generating volumetric fault zone grids for pillar gridded reservoir models

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The generation of discrete grids for explicit fault zone modeling is presented.


                        
                        
                           
                           The method provides robust handling of grids with pillar faults.


                        
                        
                           
                           The grid accommodates handling of 3D properties and structures in fault zones.


                        
                        
                           
                           The method is compatible with existing reservoir modeling and simulation tools.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D fault zone grid

Explicit fault zone modeling

Fault zone properties

Fault facies

@&#ABSTRACT@&#


               
               
                  The internal structure and petrophysical property distribution of fault zones are commonly exceedingly complex compared to the surrounding host rock from which they are derived. This in turn produces highly complex fluid flow patterns which affect petroleum migration and trapping as well as reservoir behavior during production and injection. Detailed rendering and forecasting of fluid flow inside fault zones require high-resolution, explicit models of fault zone structure and properties. A fundamental requirement for achieving this is the ability to create volumetric grids in which modeling of fault zone structures and properties can be performed. Answering this need, a method for generating volumetric fault zone grids which can be seamlessly integrated into existing standard reservoir modeling tools is presented. The algorithm has been tested on a wide range of fault configurations of varying complexity, providing flexible modeling grids which in turn can be populated with fault zone structures and properties.
               
            

@&#INTRODUCTION@&#

Faults are encased in three-dimensional bodies of deformed rock known as fault zones. Shape and size of the fault zone may vary according to tectonic style, displacement magnitude and mechanical properties of the host rock, but generally it can be subdivided into a fault core, accommodating the bulk of deformation, and a surrounding damage zone, both displaying structural elements such as lenses, slip surfaces, fractures and deformation bands (Braathen et al., 2009; Caine et al., 1996; Chester and Logan, 1986; Peacock et al., 2000). The inherent structural and petrophysical complexity of fault zones produces correspondingly complex flow patterns inside and across the fault zone (Antonellini and Aydin, 1994, 1995; Caine et al., 1996; Fisher and Knipe, 2001; Fowles and Burley, 1994; Odling et al., 2004); thus faults can act both as pathways and obstacles to sub-surface fluid flow (Caine et al., 1996; Chester and Logan, 1986; Manzocchi et al., 2008, 1999; Seront et al., 1998) and considerably influence petroleum migration, accumulation and recovery.

Characterizing fault properties and understanding fault impact on flow paths and reservoir dynamics through modeling remain key issues for optimizing production and exploration strategies (Fisher and Jolley, 2007). However, these efforts are hampered by the inherent difficulty of describing structural complexity and petrophysical heterogeneity of entire fault zones based on spatially constrained outcrops representing a limited range of scales compared to those observed in the subsurface, and a lack of unified classification systems adapted to the needs of 3D modeling and simulation (Braathen et al., 2009). Limitations related to modeling conventions, grid types, grid resolution and computational cost further constrain the level of detail that can be included in field-sized simulation models. The pragmatic solution to these issues has been to simplify the way in which faults and fault properties are implemented in geo- and simulation-models (Manzocchi et al., 2010, 2008).

Traditional 3D reservoir models incorporate faults as planes with grid-split offsets capturing interpreted fault position and displacement. Faults are commonly treated as pillars or stair steps in 3D grids (by RMSTM, PETRELTM). Some modeling tools (SKUA-GOCADTM, JewelSuiteTM) split grid blocks exactly at the position of faults to honor the structural model (Thom and Hocker, 2009). Initial attempts to implement effects caused by petrophysical heterogeneities known to occur in faults involved heuristic iterative adjustment of fault plane transmissibility in the simulation model during history matching of dynamic well data. This often produces geologically unrealistic results, and runs the danger of compensating for effects within the simulation model which are not related to faults (Fisher and Jolley, 2007).

The need to provide more accurate fault property models based on geological observation and reasoning rather than history matching alone, has produced several modeling methods. Typically these focus on individual aspects or characteristics observed in faults (e.g. juxtaposition relations, clay smear etc.) while adapting to the constraint that faults are represented as planes in the model. Well known methods include Allan diagrams (Allan, 1989; Knipe, 1997), clay smear potential (CSP) (Bouvier et al., 1989), shale smear factor (SSF) (Lindsay et al., 1993) and shale gouge ratio (SGR) (Yielding et al., 1997). Combined with fault rock thickness estimation methods (Childs et al., 1997; Walsh et al., 1998) and appropriate permeability algorithms (Manzocchi et al., 2010, 2008, 1999), these methods can be used to calculate permeability across the fault plane at any given point, and are presently employed in most industrial reservoir modeling software suites.

Although offering a pragmatic solution to a complex problem, the fundamental shortcomings and limitations of this approach have been pointed out by several workers (Fredman et al., 2008; Manzocchi et al., 2010, 2008; Tueckmantel et al., 2012; Tveranger et al., 2005). These methods are restricted by the convention of representing complex fault zones, which are essentially 3D geological features, as membranes.

As pointed out by previous studies (Manzocchi et al., 2008; Rivenæs and Dart, 2002; Tveranger et al., 2005), representing fault zones as volumetric entities with explicit fault rock grid blocks could potentially facilitate improved handling, and thus also forecasting of fluid flow in fault zones. However, efforts towards producing explicit fault zone models have been fraught by four key problems: 1) A lack of systematically quantified descriptions of the spatial distribution of fault rock facies (Braathen et al., 2009), 2) a lack of key petrophysical data such as two-phase flow properties of fault rocks (Al-Busafi et al., 2005; Al-Hinai et al., 2008; Tueckmantel et al., 2012), 3) a high computation cost related to the necessity of using high-resolution grids, and 4) a lack of robust upscaling techniques for highly heterogeneous rocks.

Providing a platform where 3D fault zone architectures can be implemented in reservoir models will in our mind encourage further research on all four issues. The aim of the present work is to describe a method for generating 3D fault zone grids enclosing fault traces in corner-point grids with pillar fault representation which can subsequently be populated with fault zone structural elements and their petrophysical properties. This has also been addressed in previous works (Fachri et al., 2011; Fredman et al., 2008, 2007; Soleng et al., 2007; Syversveen et al., 2006). As not all reservoir modeling tools support facies and petrophysical modeling on locally refined grids (e.g. PETRELTM and RMSTM cannot), our fault zone grid generation method generates two grid files (both in corner-point format): a discrete fault zone grid and a merged grid of the entire reservoir model where the fault zone grid is incorporated as LGRs. Thus, this method could work in conjunction with various reservoir modeling tools regardless of whether the tools support property modeling on LGRs or not. The method presented has been tested to work seamlessly with the reservoir modeling tool RMSTM and industry standard fluid flow simulator ECLIPSETM, and should also work in conjunction with other reservoir modeling tools which can handle corner-point grids, thus making it accessible to a broad range of users.

The workflow for generating fault zone grids and its integration with existing reservoir modeling tools is illustrated in 
                     Fig. 1. It consists of three steps. Step 1 and step 3 are performed by our algorithm which is implemented in the fault modeling tool Havana; step 2 is performed in RMSTM.

The fault zone grid is generated using grid and fault data exported from reservoir models which use conventional fault rendering. The resulting fault zone grid is a discrete corner-point grid, which can be refined according to user requirements. In addition to the discrete fault zone grid, the output also includes a merged grid file where the fault zone grid exists as LGRs.

The fault zone grid can be populated with fault zone structural elements and their petrophysical properties using existing reservoir modeling tools (e.g. RMSTM, PetrelTM). Property modeling is carried out separately for the fault zone grids since their grid resolution commonly is higher than the surrounding parts of the reservoir model. If the fault zone grid is larger than the extent of fault zone, the cells outside the actual fault zone can be populated with host-rock properties. The resulting fault zone models can then either be examined separately or merged back into the original reservoir model.

Merging the fault zone models back into the original reservoir model produces an updated model with explicitly rendered fault zones and their petrophysical properties at the given scale of resolution. The merging is performed by identifying and matching common grid pillars in the original grid and the fault zone grid. As shown in Fig. 1, the fault surface and the volume surrounding the fault surface in the original model has been replaced by a volumetric fault zone grid in the updated model. The fault zone grids form a series of local grids in the final merged grid. The merged model can be visualized in the geo-modeling tools and exported to a fluid flow simulator.

This paper focuses on the algorithm for fault zone grid generation. Property modeling inside the fault zone grid is outside the scope of the present paper, but will be the subject of future works.


                     
                     Fig. 2 schematically illustrates the algorithm for fault zone grid (FZG) generation visualized along a cross-section of a fault trace. The fault zone is rendered as a globally refined grid symmetrically straddling both hanging wall and footwall side of the fault (Fig. 2d). The top and bottom surfaces of the FZG are levelled out across the faults; cell layering is continuous within the FZG across the faults. There will, however, still be misalignments in the layering where faults link. The FZG is defined by adding a series of user-defined local grid refinements (LGRs) along the fault traces in the original global grid. The final FZG is generated as a global refined grid based on the generated LGRs while keeping the areas outside the LGRs inactive.

The algorithm for defining LGRs for the FZG is illustrated in 
                     Fig. 3. Each LGR is defined as a regular sub-grid spanning a fixed number of cells in the x and y directions in the original grid. In the current implementation, the LGRs span the whole grid in the z direction, meaning that only pillar gridded faults are supported. The algorithm does not currently support stair-stepped fault traces and vertically intersecting faults. A series of LGRs are needed to encompass curving or intersecting fault traces. The LGRs are identified by iteratively checking all fault trace segments, and identifying grid columns positioned inside the intended FZG (width is defined by the user). For each fault segment, LGRs are generated that encompass all the identified columns not already added to a LGR. Usually it is enough to add one LGR for each fault trace segment, but near fault link, as can be seen in Fig. 3e and f, a single segment of the fault trace may be the source of multiple LGRs.

The next step involves gridding the individual LGRs. To find the top and bottom surfaces for the individual LGRs, the top and bottom surfaces of all the fault blocks are extrapolated across the bordering fault zones (Fig. 2b), and for each grid column in the LGRs, the top-most surface and the bottom-most surface are used as the top and bottom surfaces of the column (Fig. 2c). This ensures that the top and bottom surfaces of the final fault zone grid are continuous except at fault links. The fault zone is then gridded (according to user specification) by adding new, regularly spaced pillars between the original pillars, and new, regularly spaced layers between the top and bottom surfaces (Fig. 2d).

The surface extrapolation algorithm for the individual top and bottom surfaces of the fault blocks is illustrated in 
                     Fig. 4. The first step is to identify the region inside the given FZG width where the surface should be extended. The surface grid nodes inside this region are then assigned an extrapolation order given by the red numbers in Fig. 4a, based on the number of extrapolation steps needed for each node. The nodes are then given new depth values according to this order. The first and last steps of the extrapolation of the depth values are shown in Fig. 4b and c, respectively. If there is only one neighbor node, the depth value is just copied. However, when there are two neighbor nodes, i.e. the nodes with two arrows pointing towards them in Fig. 4b and c, the average of these two depth values is used.

The Emerald field reservoir model, a conventional, field-sized demo project supplied by Roxar, is here used to test if the method works on reservoir models constructed by commercial reservoir modeling tools (RMSTM in this case) and illustrate how the algorithm handles a complex fault network (
                     Fig. 5).The model measures 7700m×7700m×80m and contains seven faults (
                     Table 1); some intersecting (F1&F2, F2&F3, F3&F1, F3&F4) and some entirely contained in the model.

In order to set an appropriate width for the FZG, the fault zone width needs to be estimated first. It is the user's choice to decide how to estimate the fault zone width properly. The width of the FZG also depends on what the users want to include in the reservoir model: fault core, fault damage zone or both. We here use a scaling relationship between fault damage zone width and fault throw (Schueller et al., 2013) for illustration.
                        
                           (1)
                           
                              
                                 W
                                 =
                                 3.67
                                 
                                    
                                       T
                                    
                                    
                                       0.46
                                    
                                 
                              
                           
                        
                     
                  

where W is the half-width of the fault damage zone, and T is the throw of the corresponding fault. Table 1 lists the theoretical fault damage zone widths estimated using this equation. The largest fault, F1, has a maximum fault throw of 478m and a theoretical fault damage zone width of 125m. The other faults have maximum fault throws of between 30m and 80m, and theoretical fault damage zone widths ranging from 30m to 60m.

The user specified input for generating the fault zone grids includes:

i) Grid model data exported from the Emerald model, including grid data, fault data and parameters specifying the fault blocks. The grid exported from RMSTM is in corner-point format. The Emerald model has 729,270 cells in total, with a grid resolution of 35m×35m×5m, and 8 fault blocks (Fig. 5b).

ii) Width of the FZG stated as a number of cells in the global grid measured from the fault trace into the hanging wall and footwall. Based on the theoretical size of the fault zones, the width of the FZG is set to two cells extending from the fault surface into each fault block, giving a total width of 140m (70m×2) which is wider than the average theoretical fault zone width. This ensures that the FZG is large enough to enclose the damage zone that we want to model.

iii) A definition of the resolution of the FZG. A separate refinement is given for each of the x, y and z directions, which means it is possible to set a different grid refinement in different directions in consideration of fault orientation. For example, in fault-perpendicular direction, petrophysical properties change significantly from the fault plane towards the undeformed host rock, while along the strike of the fault, properties are relatively more homogeneous, thus choosing elongated cells parallel to the fault might be a good idea to decrease the number of cells, but this only applies to the situation where faults are aligned to the grid.

The output includes a discrete FZG (Fig. 5c), and a merged grid (Fig. 5d), both in Corner-Point format. In this example, the FZG is globally refined to 3.5m×7m horizontally, with only fault zone cells active (Fig. 5c). The total number of cells is 20,797,700 (20 million), with 6,722,100 active fault zone cells and 14,075,600 inactive cells. The FZG in the merged model (Fig. 5d) is composed of 638 LGRs, representing seven fault zones.


                     
                     Fig. 6 illustrates the handling of fault intersections. It shows the continuous cell layering within the FZG across the faults, and misalignments occurring at fault intersections. 
                     Fig. 7 highlights the handling of fault tips ending inside the grid. The FZG is extended ahead of the fault tip. Further examples showing the application of the FZG algorithm on various fault geometries are shown in 
                     Fig. 8.

The time it takes to generate a FZG depends on the model dimension and grid resolution. The fault zone grids shown in Fig. 8 were generated instantaneous. For the Emerald field model, it took six minutes to generate the FZG.

The integration of the FZG with reservoir modeling tools is described in the workflow overview section. The generated FZG file is in Corner-Point format. Tests have demonstrated that the FZG file can be imported into RMSTM directly without any post-processing. After property modeling has been performed on the FZG using reservoir modeling tools, the FZG along with its properties can be merged with the original reservoir model. In the merging step, the input files include a global grid file, a FZG file, a global property (e.g. porosity and permeability) file and a fault zone property (e.g. porosity and permeability) file. Among these four files, only the FZG file is generated by the algorithm presented in this work, the other three files are generated by RMSTM in this test, but could be generated by any other existing reservoir modeling tools that can handle Corner-Point grids. The output merged file includes information regarding the merged grid and merged property, which can be handled by the EclipseTM flow simulator.

@&#DISCUSSION@&#

The key benefit of using FZG is that it provides a discrete, volumetric modeling space for fault zone properties. FZG scaling and resolution is flexible and can be adapted by the user as required. The output of the FZG generation method includes two grid files, a discrete fault zone grid and a merged grid. For some reservoir modeling tools (e.g. RMSTM and PetrelTM) which do not support property modeling on grids with LGRs, fault zone property modeling can be carrried out separately in the high-resolution FZGs prior to merging with a coarser grid, otherwise the property modeling can be performed on the merged grid directly if there are some tools supporting property modeling on grids with LGRs.

The FZGs exist as LGRs in the final merged reservoir model which can be imported into simulators for flow simulation. Since the computing time and storage space requirements of a run primarily depend on the number of active cells (ECLIPSE Reference Manual, 2012, p.1468), the advantage of using LGRs is that it limits the number of active cells and obviates the need to refine the entire model. The implementation of FZGs populated with realistic fault zone architectures and properties allows flow inside and along fault zones to be rendered in detail.

@&#LIMITATIONS@&#

The current implementation only works on grids with pillar faults. Extending the algorithm to stair-stepped faults as well as vertically intersecting faults should be attempted. The flexibility of the FZG generation should be further improved to allow different grid dimensions and refinements dependent on fault displacement as well as different fault zone widths on the hanging wall and the footwall side. Misalignments in layering occur where faults link (Fig. 6). Although the presence of non-neighbor connections may influence the flow computation for simulators employing two point flux approximations(e.g. ECLIPSETM), the misalignment occurring at fault links should not be a problem as it only affects relatively few cell interfaces (Pettersen 2006, p. 107).

Fault zone property modeling using the FZG is outside the scope of this paper. But we find it useful to briefly discuss some issues which need to be considered when populating the grid with properties and performing subsequent fluid flow simulation. The feasibility of using pixel-based and object-based simulation methods to populate fault zone grids with fault facies has been demonstrated in several previous studies (e.g. Fachri et al., 2013a, 2013b, 2011; Fredman et al., 2008; Soleng et al., 2007; Syversveen et al., 2006).

The vertical stretching procedure performed to generate the FZG preserves the vertical ordering of the global grid which eases handling, but expands the volume of the grid at the base of the footwall and at the top of the hanging wall. This additional volume can be filled according to user preference, e.g. with non-permeable properties or lithology and petrophysical properties related to the layers overlying and underlying the interval of interest (Fredman et al., 2008).

The extent of the FZG is generally larger than the exact spatial extent of the fault zone envelope, which may vary in terms of width, while the width of the FZG is constant along the direction of fault strike. Furthermore, the width of the FZG is defined by a fixed number of cells in the input grid. This may cause the FZG width to vary according to the variation of cell dimensions along the fault. For example, FZGs along inclined faults would display different cell dimensions which in turn could lead to artificial differences in FZG width in z direction (Fig. 8e). The solution here is to ensure that the FZG is wide enough to include the entire fault zone or the volume of interest to be modeled, and populate the FZG cells outside it with un-deformed host-rock stratigraphy. There have been studies concerned with the empirical relationship between the fault zone width and fault throw (e.g. Barnett et al., 1987; Beach et al., 1997; Childs et al., 1997; Fossen and Hesthammer, 2000; Foxford et al., 1998; Knott et al., 1996; Robertson, 1983; Schueller et al., 2013; Shipton and Cowie, 2001). Note that the term fault zone is used inconsistently, some refer to the zone composed of a fault core and surrounding damage zone, whereas others refer to the central part of the fault where most or all of the original structures of the rock are obliterated (Fossen, 2010). Thus “fault zone thickness” in some works refers to fault core thickness (e.g. Beach et al., 1997; Childs et al., 1997; Foxford et al., 1998; Robertson, 1983), whereas damage zone thickness is addressed in Fossen and Hesthammer (2000), Knott et al. (1996), Schueller et al. (2013) and Shipton and Cowie (2001). A review of the current understanding of fault dimensions and their scaling laws, with special focus on faults in siliciclastic rocks can be found in Torabi and Berg (2011).

@&#CONCLUSIONS@&#

The aim of this study has been to provide a gridding algorithm for performing explicit modeling of fault zone properties in standard reservoir models which use corner-point grids with pillar fault representation. The method presented here provides volumetric fault zone grids which can subsequently be populated with fault zone properties and merged with the global model. The method provides robust handling of grids with pillar faults and can be seamlessly incorporated into existing industrial reservoir modeling and simulation tools.

We hope the procedures outlined here will encourage further research into explicit modeling of fault zone properties, such as the systematically quantified description of the spatial distribution of fault rock properties, multiphase flow properties of fault rocks, computation-cost limitations and robust up-scaling techniques for highly heterogeneous rocks.

@&#ACKNOWLEDGMENTS@&#

Two anonymous reviewers are gratefully acknowledged for providing valuable and constructive comments. The authors gratefully acknowledge the joint financial support received from the MatMoRA (Mathematical and Risk Assessment) Project (Norwegian Research Council Grant no. 178013), the SUCCESS (Subsurface CO2 Elements and Superior Strategy) Project (Norwegian Research Council Grant no. 193825) and the SEISBARS (Seismic Expression of Fault and Fracture Zones in Barents Sea Petroleum Reservoirs) Project (Norwegian Research Council Grant no. 233646). The China Scholarship Council is acknowledged for providing a study scholarship to the first author. The study was carried out as part of the Fault Facies research effort at Uni CIPR.

@&#REFERENCES@&#

