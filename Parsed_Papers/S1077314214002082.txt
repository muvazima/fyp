@&#MAIN-TITLE@&#Continuous rotation invariant features for gradient-based texture classification

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Four highly discriminative and continuous rotation invariant methods are proposed.


                        
                        
                           
                           We use the Hessian matrix and Gaussian derivative filters.


                        
                        
                           
                           Verified on the CUReT, KTH-TIPS, KTH-TIPS2-a, UIUC and Brodatz texture datasets.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

HOG

CoHOG

Hessian matrix

Eigen analysis

Rotation invariance

Texture classification

@&#ABSTRACT@&#


               
               
                  Extracting rotation invariant features is a valuable technique for the effective classification of rotation invariant texture. The Histograms of Oriented Gradients (HOG) algorithm has been proved to be theoretically simple, and has been applied in many areas. Also, the co-occurrence HOG (CoHOG) algorithm provides a unified description including both statistical and differential properties of a texture patch. However, HOG and CoHOG have some shortcomings: they discard some important texture information and are not invariant to rotation. In this paper, based on the original HOG and CoHOG algorithms, four novel feature extraction methods are proposed. The first method uses Gaussian derivative filters named GDF-HOG. The second and the third methods use eigenvalues of the Hessian matrix named Eig(Hess)-HOG and Eig(Hess)-CoHOG, respectively. The fourth method exploits the Gaussian and means curvatures to calculate curvatures of the image surface named GM-CoHOG. We have empirically shown that the proposed novel extended HOG and CoHOG methods provide useful information for rotation invariance. The classification results are compared with original HOG and CoHOG algorithms methods on the CUReT, KTH-TIPS, KTH-TIPS2-a and UIUC datasets show that proposed four methods achieve best classification result on all datasets. In addition, we make a comparison with several well-known descriptors. The experiments of rotation invariant analysis are carried out on the Brodatz dataset, and promising results are obtained from those experiments.
               
            

@&#INTRODUCTION@&#

Texture is an important characteristic of the appearance of objects and is a powerful visual cue, used in describing and recognizing object surfaces [1]. Texture analysis plays an important role in image processing, pattern recognition, and computer vision [2–8]. Texture classification methods usually consist of two steps of feature extraction and classification. Feature extraction involves simplifying the amount of resources required to describe a large set of data accurately. To enhance the overall quality of texture classification, both the quality of the texture features and the quality of the classification algorithm must be improved [9–14].

There has been intensive research in developing robust features for texture classification with strong invariance to rotation, scale, translation, illumination changes [15–23]. Rotation invariant feature extraction is a difficult problem, thus many algorithms were proposed to achieve the rotation invariance [24,25].

The pioneer works to achieve rotation-invariant texture classification include generalized co-occurrence matrices (GCM) [26], polarograms [27], texture anisotropy [28], the methods based on Markov random field (MRF) [29] and autoregressive model. The wavelet based algorithms achieved effective classification performance [30–37]. Recently, the statistical based approaches have attracted considerable attention [38–40]. However, many of these approaches achieve the rotation invariance by shifting the discrete orientations. For example, the method of local binary pattern (LBP) [18] is proposed to achieve rotation invariance [41].

The gradient based features such as edges or orientation angles are widely used as feature descriptors in image processing. In order to identify objects in images effectively, gradient based edge features have been developed, which are edge orientation histogram [42], Histograms of Oriented Gradients (HOG) [43,44], co-occurrence HOG (CoHOG) [45], multilevel edge energy features [46], shapelets [47], and edge density [48]. The HOG method distributes the gradients into several orientation bins. HOG encapsulates changes in the magnitude and orientation of contrast over a grid of small image patches. HOG features have shown satisfactory performance in their ability to recognize a range of different object types including natural objects as well as artificial objects. CoHOG (Co-Occurrence Histograms of Oriented Gradients), an extension of HOG to represent the spatial relationship between gradient orientations, has been proposed and its effectiveness for pedestrian detection, human detection and medical image analysis has been demonstrated in [49–51].

According to a review [52], the extraction of basic features in images is based on two mathematical concepts: differential geometry and scale-space theory. The differential geometry approach uses the assumption that features can be obtained from the image based on local anisotropic variations of pixel intensities. This concept is strong and effective. Recently, the differential feature extraction approaches have attracted more attentions [53,54]. Among the different feature extraction methods, gradient-based methods were widely used in the past. These methods are effective in defining and describing significant image features. Hessian matrix information is a robust differential method and it has been widely used in many publications to extract the image features [55,56]. Compared with the conventional gradient, the Hessian matrix and its Eigen analysis are more reliable and robust in revealing the fundamental directions in data. In this study, we propose four novel methods to improve the classification performance of the HOG and CoHOG algorithms. The proposed four methods are based on Gaussian derivatives filters and Hessian matrix. Instead of using the conventional gradient operator in HOG and CoHOG algorithms, the second-order partial derivatives in Gaussian derivatives filters and Hessian matrix are more proper and stable to calculate the intensity and texture variations of image surface.

The rest of this paper is organized as follows. In Section 2, we will give a review of the original HOG and CoHOG algorithms. Section 3 presents the proposed new HOG and CoHOG algorithms based on Gaussian derivatives filters, Hessian matrix and Gaussian–mean curvatures. In Section 4, we test the performance of novel feature extraction algorithms on four standard texture datasets and discuss the effect of the normalization step on the classification performance. In Section 5, a series of rotation analysis experiments are performed. Furthermore, the characteristics of proposed descriptors are discussed in detail. The comparison results with the state-of-the-art the texture classification methods performed on Brodatz and UIUC datasets are shown in Section 6. The conclusions are given in Section 7.

@&#RELATED WORKS@&#

This section gives an overview of the HOG feature extraction process. The basic concepts of the HOG are the local object appearance and shape, which can be characterized by the distribution of the local intensity gradients or edge directions [57,58]. The gradients orientations are strong against lighting changes since the forming histogram provides rotational invariance.

For each key point, a local HOG descriptor from a block is computed. The block size is not restricted to construct an extensive set of texture features, which allow extracting high-discriminated features in order to improve classification accuracy and reduce computational time of classification algorithms [59,60]. HOG is a window based algorithm computed local to a detected interest point. The window is centered upon the point of interest and divided into a regular square grid (n
                        ×
                        n) [43,44]. This method consists of several steps.

First, the grayscale image was filtered to obtain x and y derivatives of pixels. The filter kernels were used to compute discrete derivative in the x and y direction. The gradient values at every image pixel were computed as follows:
                           
                              (1)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   x
                                                
                                             
                                             (
                                             x
                                             ,
                                             y
                                             )
                                             =
                                             I
                                             (
                                             x
                                             +
                                             1
                                             ,
                                             y
                                             )
                                             -
                                             I
                                             (
                                             x
                                             -
                                             1
                                             ,
                                             y
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   x
                                                
                                             
                                             (
                                             x
                                             ,
                                             y
                                             )
                                             =
                                             I
                                             (
                                             x
                                             ,
                                             y
                                             +
                                             1
                                             )
                                             -
                                             I
                                             (
                                             x
                                             ,
                                             y
                                             -
                                             1
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        where fx
                         and fy
                         denotes x and y components of image gradient respectively. I(x,
                        y) denotes the pixel intensity at position (x,
                        y). The magnitude and orientation is computed in Eqs. (2) and (3):
                           
                              (2)
                              
                                 m
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             x
                                          
                                       
                                       
                                          
                                             (
                                             x
                                             ,
                                             y
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             f
                                          
                                          
                                             y
                                          
                                       
                                       
                                          
                                             (
                                             x
                                             ,
                                             y
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 θ
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       tan
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      y
                                                   
                                                
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      x
                                                   
                                                
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Second, the image intensity gradients are divided into layers based on their orientation. The original HOG descriptor uses unsigned gradients in conjunction with 9 bins (a bin corresponds to 20°) to construct the histograms of oriented gradients. Therefore, there are 9 layers of orientated gradient.

Finally, orientation histogram of every cell and larger spatial blocks n
                        ×
                        m are normalized. To normalize the cells’ orientation histograms, they should be grouped into blocks. Since a cell has k orientations, the feature dimension of each block is n
                        ×
                        m
                        ×
                        k for each block. v denotes feature vector in a block h
                        (
                        
                           i
                        
                        ,
                        
                           j
                        
                        ) denotes unnormalized histogram of the cell in the position (i,
                        j) in a block. Although there are three different methods for block normalization, L1-Norm normalization is implemented as:
                           
                              (4)
                              
                                 
                                    
                                       h
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          
                                             ‖
                                             v
                                             
                                                
                                                   ‖
                                                
                                                
                                                   1
                                                
                                             
                                             +
                                             ε
                                          
                                       
                                    
                                 
                                 (
                                 ε
                                 =
                                 1
                                 )
                              
                           
                        where ε is the small constant [43]. Here, ε is set to 1 empirically.

The CoHOG feature descriptor is based on a co-occurrence matrix which is obtained from a 2D histogram of pairs of gradient orientations [45]. It performs on grayscale images. The co-occurence matrix expresses the distribution of gradient orientations at given offset over an image as shown in Fig. 1
                        .

The combinations of neighbor gradient orientations provide reliable features of objects in images and this is very advantageous for object classification problems. The co-occurrence matrix C is obtained from n
                        ×
                        m image of gradient orientations, and formulated in Eq. (5);
                           
                              (5)
                              
                                 
                                    
                                       C
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          p
                                          =
                                          0
                                       
                                       
                                          n
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          q
                                          =
                                          0
                                       
                                       
                                          m
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   if
                                                   
                                                   I
                                                   (
                                                   p
                                                   ,
                                                   q
                                                   )
                                                   =
                                                   i
                                                   
                                                   and
                                                   
                                                   I
                                                   (
                                                   p
                                                   +
                                                   x
                                                   ,
                                                   q
                                                   +
                                                   y
                                                   )
                                                   =
                                                   j
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where I indicates a gradient orientation image, i and j indicates gradient orientations and x, y denotes vertical and horizontal offsets. The gradient orientations from I are calculated in Eq. (6);
                           
                              (6)
                              
                                 θ
                                 =
                                 
                                    
                                       tan
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                v
                                             
                                             
                                                h
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where v and h are the vertical and the horizontal components of gradient calculated by appropriate filters. Then, the orientations in the range (0,2π) are quantized into eight labels. Each label is used for representing an orientation. Thus, the size of the co-occurrence matrix C becomes 8×8. Six offsets are used in experiments. The co-occurrence matrix contains information on the local textures by using short-range offsets and the global textures by using long-range offsets [45,61].

The co-occurrence matrices are computed for each tiled regions with all offsets. Hence, the number of CoHOG descriptor features is m
                        ×
                        n
                        ×
                        d
                        2 where d is the number of gradient orientation bins, m is the number of tiled regions and n is the number of offsets. Finally, the CoHOG descriptor is determined as a vector by concatenating the components of all the co-occurrence matrices. The size of the original CoHOG descriptor is 2×2×6×82
                        =1536.

In this section, we introduce four novel derivative methods to improve the HOG and CoHOG feature extraction algorithms. In original HOG algorithm, the gradient orientations of the pixels are calculated by using gradient information of the input image. In original CoHOG algorithm, in the same way, the labeling process of the pixels is performed in the specified offset by using pixel orientations obtained from gradient information. This labeling process directly affects the quality and distinctiveness of the information contained in the co-occurrence matrix created in the next step. Therefore, the calculation of gradient information is the most basic and important step in both algorithms. In this study, we propose an efficient global derivative scheme that uses Gaussian derivative filter and Hessian matrix for feature extraction. Thus, by obtaining distinctive and robust characteristics of the images, significant improvement has been provided in the classification performances of algorithms. In this paper, the first gradient calculation method proposed to improve HOG algorithm uses x–y separable Gaussian derivative filters. In addition, the other proposed method uses the eigenvalues of the Hessian matrix. The proposed first descriptor to strengthen the gradient step of CoHOG algorithm uses eigenvalues of the Hessian matrix. Instead of directly using the responses of gradient, our second descriptor uses the Gaussian curvature and mean curvature informations. Furthermore, for the developed new CoHOG algorithm, a new formulation is used in labeling process. For brevity, novel HOG algorithm using proposed separable Gaussian derivative filters is named as GDF-HOG. Also, novel HOG algorithm using the eigenvalues of the Hessian matrix is named as the Eig(Hess)-HOG. The proposed novel Co-HOG algorithm using the eigenvalues of the Hessian matrix is named as the Eig(Hess)-CoHOG. Finally, the novel Co-HOG algorithm using Gaussian and mean curvature information is named as GM-CoHOG.

HOG is a well-known feature descriptor which computes the features through a gradient orientation histogram within the local region. The original HOG algorithm uses a gradient computation method which is based on calculation difference of neighboring pixels. The primary weak point of original HOG is that it cannot describe the characteristics of textures efficiently and distinctively. Another weak point of HOG is that it is mathematically weak and sensitive to noise since the label of a local histogram is easy to change in terms of the definition of uniform histogram. To overcome the most prominent shortcoming of the definition of ‘‘uniform” histogram in HOG, we propose a novel extension in which the local texture patterns are subjected to further treatment and then computed in Gaussian derivative filters way. We can find the continuous rotation invariant features via Gaussian function. Therefore, we employ the Gaussian derivative filters approach to represent and classify texture images. Since the rotation, scaling and translation operations are each a linear transformation, they retain the shape of the image. So, even though the coordinates of the image change, the exact state of shape does not change. Gaussian function is a continuous and linear-dependent function. Thus this function can be used in the calculation of first and second-order rotation invariant derivative. The Gaussian first and second derivative filters could be rotated at any angle by linear combination of two basis filters [62].

The gradient computation which is calculated via the Gaussian function and two-dimensional convolution provides more prominent texture and intensity information than conventional gradient. Thus the Gaussian derivative filters are usually an appropriate model to extract the basic features of the texture patterns. The Gaussian function can be formulated as:
                           
                              (7)
                              
                                 G
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       
                                          
                                             -
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   y
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The primary first-order differential quantity for an image is the gradient. Gradient is a 2-D vector quantity. It has both direction and magnitude informations which vary at each point [63]. Image derivatives can be calculated as follows:
                           
                              (8)
                              
                                 ∇
                                 I
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         x
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where ∗ denotes the convolution, Gx
                         and Gy
                         are the first partial derivatives of G with regard to x and y respectively. The responses of the oriented Gaussian first derivative filter Gθ
                         in Eq. (9):
                           
                              (9)
                              
                                 
                                    
                                       I
                                    
                                    
                                       θ
                                    
                                 
                                 =
                                 I
                                 ∗
                                 
                                    
                                       G
                                    
                                    
                                       θ
                                    
                                 
                                 =
                                 I
                                 ∗
                                 (
                                 cos
                                 (
                                 θ
                                 )
                                 
                                    
                                       G
                                    
                                    
                                       x
                                    
                                 
                                 +
                                 sin
                                 (
                                 θ
                                 )
                                 
                                    
                                       G
                                    
                                    
                                       y
                                    
                                 
                                 )
                                 =
                                 cos
                                 (
                                 θ
                                 )
                                 I
                                 ∗
                                 
                                    
                                       G
                                    
                                    
                                       x
                                    
                                 
                                 +
                                 sin
                                 (
                                 θ
                                 )
                                 I
                                 ∗
                                 
                                    
                                       G
                                    
                                    
                                       y
                                    
                                 
                              
                           
                        
                     

Since the two basic filters are x–y separable, the response of each filter could be calculated by twice one-dimensional convolutions [41]. Also, the computation cost of two-dimensional convolution is more than twice one-dimensional convolutions. The four basic one-dimensional Gaussian derivative filters are given by
                           
                              (10)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   -
                                                   2
                                                   t
                                                
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   e
                                                
                                                
                                                   
                                                      
                                                         -
                                                         
                                                            
                                                               t
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             
                                                
                                                   e
                                                
                                                
                                                   
                                                      
                                                         -
                                                         
                                                            
                                                               t
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   3
                                                
                                             
                                             =
                                             
                                                
                                                   -
                                                   2
                                                   t
                                                
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            2
                                                            
                                                               
                                                                  t
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  σ
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      -
                                                      1
                                                   
                                                
                                             
                                             
                                                
                                                   e
                                                
                                                
                                                   
                                                      
                                                         -
                                                         
                                                            
                                                               t
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   4
                                                
                                             
                                             =
                                             
                                                
                                                   2
                                                   t
                                                
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   e
                                                
                                                
                                                   
                                                      
                                                         -
                                                         
                                                            
                                                               t
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where t controls the length of the derivative filter.

The generation step of five basic Gaussian filter responses is shown in Table 1
                        . In this section, we focus on novel gradient computation method for the HOG algorithm. So, we only used Gx
                         and Gy
                         filters for novel gradient computation. The other filters are used for the second-order derivative calculation. The standard deviation (σ) of the Gaussian derivatives filters is selected as 1.

For the calculation of the gradient in the proposed GDF-HOG algorithm, we used Gx
                         and Gy
                         filters based on the convolution with the derivatives of the Gaussian according to the Eq. (10). In GDF-HOG algorithm, gradient information is calculated as follows:
                           
                              (11)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   x
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   x
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   y
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   y
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

From Eq. (11), we can obtain the gradient magnitude of image I with regard to θ in Eq. (12):
                           
                              (12)
                              
                                 
                                    
                                       I
                                    
                                    
                                       θ
                                    
                                 
                                 =
                                 cos
                                 (
                                 θ
                                 )
                                 I
                                 ∗
                                 
                                    
                                       G
                                    
                                    
                                       x
                                    
                                 
                                 +
                                 sin
                                 (
                                 θ
                                 )
                                 I
                                 ∗
                                 
                                    
                                       G
                                    
                                    
                                       y
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   x
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   y
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          cos
                                          θ
                                          
                                             
                                                I
                                                ∗
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      x
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      I
                                                      ∗
                                                      
                                                         
                                                            G
                                                         
                                                         
                                                            x
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      (
                                                      I
                                                      ∗
                                                      
                                                         
                                                            G
                                                         
                                                         
                                                            y
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                          +
                                          sin
                                          θ
                                          
                                             
                                                I
                                                ∗
                                                
                                                   
                                                      G
                                                   
                                                   
                                                      y
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      I
                                                      ∗
                                                      
                                                         
                                                            G
                                                         
                                                         
                                                            x
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      (
                                                      I
                                                      ∗
                                                      
                                                         
                                                            G
                                                         
                                                         
                                                            y
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   x
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   y
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 sin
                                 (
                                 θ
                                 +
                                 φ
                                 )
                              
                           
                        where 
                           
                              φ
                              =
                              arctan
                              
                                 
                                    I
                                    ∗
                                    
                                       
                                          G
                                       
                                       
                                          y
                                       
                                    
                                 
                                 
                                    I
                                    ∗
                                    
                                       
                                          G
                                       
                                       
                                          x
                                       
                                    
                                 
                              
                           
                        . Thus, when 
                           
                              θ
                              =
                              
                                 
                                    π
                                 
                                 
                                    2
                                 
                              
                              -
                              φ
                              ,
                           
                         gradient magnitude of input image Iθ
                         obtains
                           
                              (13)
                              
                                 
                                    
                                       I
                                    
                                    
                                       mag
                                       -
                                       gradient
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   x
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   y
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     

To calculate gradient magnitude in proposed GDF-HOG algorithm, Eq. (13) is used. It should be noted that there are major mathematical differences between classical gradient computation and the proposed gradient computation. The proposed gradient computation is invariant to image rotation at any angle. In addition, the proposed gradient method is mathematically strong and robust to noise. Classification results of the GDF-HOG obtained on various datasets are higher than the original HOG method.

Instead of using the Gaussian derivative filters in original HOG and CoHOG algorithms, our second method uses the Hessian matrix to calculate the eigenvalues of image surface. In order to analyze the local behavior of an image Ix
                        , we apply local analysis of an image by using Hessian matrix (second fundamental form represented in Appendix A). The Hessian matrix is a square and symmetric matrix, and consists of second-order partial derivatives of the function [64]. According to differential geometry concepts, the information about maximum, minimum and saddle points of the function have been obtained by looking at the minor determinants of Hessian matrix. The Hessian of an image is defined as second-order partial derivative matrix of gray level image. The Hessian matrix H, as a real-valued matrix, has real-valued eigenvalues. Hessian matrix of one point in a gray image I for a scale σ is computed as
                           
                              (14)
                              
                                 
                                    
                                       H
                                    
                                    
                                       σ
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         D
                                                      
                                                      
                                                         xx
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         D
                                                      
                                                      
                                                         xy
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         D
                                                      
                                                      
                                                         yx
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         D
                                                      
                                                      
                                                         yy
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         xx
                                                      
                                                   
                                                
                                                
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         xy
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         xy
                                                      
                                                   
                                                
                                                
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         yy
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where ∗ denotes the convolution, Dxx
                        , Dyy
                        , Dxy
                         are the second-order derivative of the image along direction of x, y,
                        xy respectively. Gxx
                        , Gyy
                        , Gxy
                         are the second-order derivative filter of the image along direction of x, y, xy respectively. The generation of these three filters is detailed in the former section. In Eq. (14), σ is implicitly included in the calculation of second-order derivatives.

The Hessian matrix contains more differential information than the gradient computation. Especially, first order operations (i.e. gradient) are insufficient to describe the behavior of nonlinear functions. But the second order differential operations (i.e. Hessian) enable a more accurate analysis in detail about function curves [64]. From this viewpoint, the state-of-the-art geometry-based operators try to estimate the shape of the underlying image region by estimating second-order partial derivatives such as Laplacian and Hessian approaches [41,65]. In many state-of-the-art studies, the object edges, corners, and shape information are obtained by the Hessian matrix [65,66].

The basic idea behind eigenvalue and eigenvector analysis of the Hessian matrix is to extract the principal directions and principal curvatures in image surface. Thus, the local second-order structure of the image can be examined. Since this directly gives the direction of the smallest curvature in image. The eigenvalues of the Hessian are called principal curvatures and invariant under rotation.

The eigenvalues of the Hessian matrix can be defined as follows [41]:
                           
                              (15)
                              
                                 λ
                                 =
                                 ±
                                 
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         xx
                                                      
                                                   
                                                   -
                                                   I
                                                   ∗
                                                   
                                                      
                                                         G
                                                      
                                                      
                                                         yy
                                                      
                                                   
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             4
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   xy
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       I
                                       ∗
                                       
                                          
                                             G
                                          
                                          
                                             xx
                                          
                                       
                                       -
                                       I
                                       ∗
                                       
                                          
                                             G
                                          
                                          
                                             yy
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where 
                           
                              λ
                           
                         are the eigenvalues of the Hessian matrix. Fig. 2
                         presents the procedure for computing eigenvalues of the Hessian matrix at a specific Gaussian standard deviation. The Eq. (15) allows the extraction of the principal directions in image. So, the local second-order structure of the image is examined. In this paper, we focus on the novel derivative method for the HOG and CoHOG algorithms. Thus, 
                           
                              
                                 
                                    λ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    λ
                                 
                                 
                                    2
                                 
                              
                           
                         can be used instead of gradient calculation step of the original algorithms. In original HOG algorithm, gradient orientation and magnitude of the pixels are calculated by using conventional gradient. Instead of using the conventional gradient, gradient magnitude and orientations can be calculated by using the eigenvalues 
                           
                              
                                 
                                    λ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    λ
                                 
                                 
                                    2
                                 
                              
                           
                        .

In proposed Eig(Hess)-HOG algorithm, the gradient magnitude is calculated as:
                           
                              (16)
                              
                                 
                                    
                                       I
                                    
                                    
                                       θ
                                       
                                       gradient
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   λ
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             
                                                
                                                   λ
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 θ
                                 =
                                 arctan
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Then we calculated the gradient orientations of proposed algorithm as in Eq. (17). The obtained gradient orientations are labeled in the range (0–180°) with eight different labels as mentioned in Section 2. In the experimental analysis, the novel Eig(Hess)-CoHOG algorithm performs this labeling process for seven groups, while the original method pixels using the gradient often label eight different groups. Discarding high order derivatives can simplify computation, but loss of high order information leads to reduction of classification accuracy. Since the first order derivatives cannot comprehensively characterize a complex texture image, more order derivatives should be included. Thus, the co-occurrence matrix in novel Eig(Hess)-CoHOG has more distinctive texture information. Owing to discriminative capability of co-occurrence matrix, the novel CoHOG algorithm reduces the size of feature vector from 1536 to 1176. The extraction of a high-dimensional feature descriptor, such as the original CoHOG and LBP, is time consuming, especially when the operation is applied to a whole image with an exhaustive block-based search [18,41]. The novel CoHOG approach helps reduce the computational load especially when it is of interest to carry out real-time operations. Despite the lower feature vector dimensionality, the classification performance of the algorithm is substantially increased.

In Section 3.2, to improve gradient calculation of original HOG and CoHOG algorithms, the Hessian matrix is used instead of gradient computation. These second-order differential operations enable us to obtain distinctive information of pixel and texture orientation about the image surfaces. In addition, Hessian matrix and its eigenvalues give us edge informations in the image as well as corner point details of objects in the image. Edge and corner points are important to obtain important image features accurately. Therefore, very high classification ratio is obtained in the developed Eig(Hess)-HOG and Eig(Hess)-CoHOG algorithms. In rotation analysis on Brodatz dataset, obtained positive results by the use of Hessian matrix and eigenvalues revealed the strength of second-order differential analysis techniques. The success of second-order differential analysis has urged us to use different second-order differential analyses. Starting from this point, the Gaussian curvature and mean curvature data used in the calculation of the curvature of the functions in differential geometry have been integrated into the gradient computation step of the original CoHOG algorithm.

In the original CoHOG algorithm, the gradient orientations are calculated based on the conventional gradient information. More robust gradient orientations are obtained with the use of Gaussian and mean curvature of image. In Section 3.1, first and second-order partial derivatives of the image are calculated. Since the Gaussian derivatives filters could be treated as special difference operators, the first and second partial derivatives of the image I are calculated as:
                           
                              (18)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   x
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   x
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   y
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   y
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   xx
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   xx
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   xy
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   xy
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   yy
                                                
                                             
                                             =
                                             I
                                             ∗
                                             
                                                
                                                   G
                                                
                                                
                                                   yy
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where Ix
                         and Iy
                         are the first partial derivatives of I with regard to x and y respectively, and Ixx
                        , Iyy
                         and Ixy
                         are the second partial derivatives of I with regard to x and y. The Gaussian curvature K and the mean curvature H of the image surface I can be calculated in Eqs. (19) and (20) 
                        [64]:
                           
                              (19)
                              
                                 H
                                 =
                                 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             xx
                                          
                                       
                                       (
                                       1
                                       +
                                       
                                          
                                             I
                                          
                                          
                                             y
                                          
                                          
                                             2
                                          
                                       
                                       )
                                       +
                                       
                                          
                                             I
                                          
                                          
                                             yy
                                          
                                       
                                       (
                                       1
                                       +
                                       
                                          
                                             I
                                          
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                       )
                                       +
                                       2
                                       
                                          
                                             I
                                          
                                          
                                             x
                                          
                                       
                                       
                                          
                                             I
                                          
                                          
                                             y
                                          
                                       
                                       
                                          
                                             I
                                          
                                          
                                             xy
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         I
                                                      
                                                      
                                                         x
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         I
                                                      
                                                      
                                                         y
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   3
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 K
                                 =
                                 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             xx
                                          
                                       
                                       
                                          
                                             I
                                          
                                          
                                             yy
                                          
                                       
                                       -
                                       
                                          
                                             I
                                          
                                          
                                             xy
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          
                                             (
                                             1
                                             +
                                             
                                                
                                                   I
                                                
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   I
                                                
                                                
                                                   y
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Labeling process of the pixels is performed by using the Gaussian and mean curvature data. In the labeling process, Eq. (21) is used.
                           
                              (21)
                              
                                 Ol
                                 =
                                 1
                                 +
                                 3
                                 (
                                 1
                                 +
                                 sign
                                 (
                                 H
                                 )
                                 +
                                 1
                                 +
                                 sign
                                 (
                                 K
                                 )
                                 )
                              
                           
                        
                     

Through these detailed and advanced geometric derivative calculations, the most detailed pixel analysis is made by calculating the Gaussian and mean curvature data of each image. Thanks to the two curvature information of each pixel, even the most distinguishing characteristics of the two neighboring pixels could be detected. The proposed method has the best discriminating ability for texture images. The classification results of GM-CoHOG algorithm reveal the power of the proposed method. Fig. 3
                         presents the procedure for computing Gaussian and mean curvatures of an image at a specific Gaussian standard deviation.

In this section, the novel HOG and CoHOG methods using our proposed four novel derivative computation model are tested and compared with the original HOG and CoHOG methods in terms of classification rate and feature vector size. Our algorithms are coded by Matlab. All the experiments in this section are run in a release version of our code on an Intel(R) Core(TM) 2 Duo CPU 2.93GHz, 8GB RAM personal computer.

The dissimilarity of training and test histogram is a test of goodness-of-fit, which can be measured with a nonparametric statistic test. There are many metrics for measuring the fit between two image histograms, such as Euclidean distance, log-likelihood ratio, and chi-square statistic. In this paper, a test sample S is assigned to the class of model M that minimizes the chi-square distance:
                           
                              (21)
                              
                                 D
                                 (
                                 S
                                 ,
                                 M
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          L
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   S
                                                
                                                
                                                   k
                                                
                                             
                                             -
                                             
                                                
                                                   M
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          
                                             S
                                          
                                          
                                             k
                                          
                                       
                                       +
                                       
                                          
                                             M
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           
                        where L is the number of bins. Sk
                         and Mk
                         are the values of the sample and model images at the k th bin, respectively. To evaluate the effectiveness of the proposed new HOG and CoHOG methods, we use the nearest neighborhood (NN) classifier with chi-square distance kernel rather than other classifiers such as artificial neural network and support vector machines which have been obtained to produce perfect results [41,67,68].

We tested the new HOG and CoHOG methods by classifying images from CUReT dataset [69], KTH-TIPS dataset [17,70], KTH-TIPS2-a [70,71], UIUC [15] and Brodatz datasets [72]. Brodatz dataset is only used to show the rotation invariance properties of the proposed methods.

The CUReT dataset contains 61 different texture classes, and each texture class includes 205 images of a physical texture sample photographed under a range of viewing and illumination angles. For fair comparison with other HOG and CoHOG studies using CUReT dataset, the 92 images per class are chosen with the size of 200×200. Some examples of CUReT dataset are given in Fig. 4
                        a.

The KTH-TIPS dataset includes 10 different texture classes of sandpaper, crumpled aluminum foil, linen, sponge, corduroy, styrofoam, cracker, brown bread, orange peel and cotton. This dataset consists of texture images that variation in scale as well as pose and illumination. Images were captured at nine different scales spanning two octaves, viewed under three different illumination directions and different poses, thus giving a total of nine images per scale. Sample images from the KTH-TIPS dataset are given in Fig. 4b.

The KTH-TIPS2-a ensures a considerable extension to previous KTH-TIPS dataset. The KTH-TIPS2 includes four physical samples of 11 different materials. The images of each sample texture have various poses, illumination conditions and scales. The images which are not 200×200pixels in size are deleted, thus there are 4395 images in all. Sample images from the KTH-TIPS2-a dataset are given in Fig. 4c.

The UIUC dataset includes 25 classes, as shown in Fig. 4d and 40 images in each texture class. The resolution of each image is 640×480. The dataset includes materials imaged under significant view-point variations.

The Brodatz dataset includes 112 different textures images. It is composed of 112 grayscale images representing a large variety of natural grayscale textures. This dataset has been widely used with different levels of complexity in texture classification and texture segmentation. In this paper, a rotation invariant version of the Brodatz dataset is used for texture classification. Some examples of Brodatz datasets are given in Fig. 4e.

The normalization of texture images is a considerable pre-processing step for texture classification methods. The texture images are generally normalized to have zero means and unit standard deviations. This normalization process provides invariance to global affine transformations in the illumination intensity [19]. For all methods with the normalization step, higher classification accuracies are obtained on the CUReT, KTH-TIPS, KTH-TIPS2-a, UIUC datasets. Table 2
                         shows the classification results for the proposed GDF-HOG, Eig(Hess)-HOG, Eig(Hess)-CoHOG and GM-CoHOG algorithms with normalization and without normalization.

For all algorithms with the normalization step, higher classification accuracies are obtained on the on the CUReT, KTH-TIPS, KTH-TIPS2-a and UIUC datasets. Here, following question may arise: Why does image normalization affect the classification performance positively on the four texture datasets? The question might be answered in the following explanations [41]:
                           
                              •
                              The images are normalized to have unit standard deviation which adjusts the global contrast of the images to a standard level. The normalization process is only invariant to global transformation of the illumination intensity. Therefore, in the dataset in which the intensity of illumination changed locally, the impact of the normalization process on the classification accuracy may not be at the expected level. As, in KTH-TIPS2-a dataset, the illumination intensity often changes locally, positive effect of the normalization process is limited compared to other datasets.

The use of Gaussian local derivative filters to obtain the first and second derivative information already has the strength of local illumination invariance. For all the proposed methods, feature vectors are normalized to have an average intensity of 0 and a standard deviation of 1. This process provides local brightness and contrast invariance. Global normalization process is thus unnecessary.

Different features of the dataset show that a single normalization process cannot be applied to them all. In this study, although a positive influence is obtained for the entire datasets with the normalization operation on classification accuracy, suitable normalization process should be applied for different dataset characteristics. KTH-TIPS, KTH-TIPS2-a and UIUC datasets contain materials imaged under significant pose variations, various poses, illumination conditions and scales. Therefore, the differences between the above-mentioned histogram of the images in the three datasets and histogram of the images in CUReT dataset are noticed. Fig. 5
                         demonstrates the texture images and their histogram distributions for the CUReT and KTH-TIPS2-a datasets. All of the texture images are from the same class in the CUReT and KTH-TIPS2-a datasets. The histograms denote that the images in the CUReT dataset usually have different mean values and standard deviations. However, images histograms from the KTH-TIPS2-a dataset do not have such features. Thus, the normalization step eliminates such effects, and it provides higher classification performance on various datasets.

In this paper, to evaluate the effects of the proposed first and second-order derivatives on the original HOG and CoHOG algorithms, a series of experiments are conducted on large and comprehensive texture datasets. The first experiment is conducted on the proposed GDF-HOG, Eig(Hess)-HOG algorithms and the original HOG algorithm. The experiments are conducted on CUReT, KTH-TIPS, KTH-TIPS2-a and UIUC datasets. In order to show the best classification results, the image normalization step is adopted for the all datasets. Table 3
                         shows that the proposed GDF-HOG and Eig(Hess)-HOG algorithms achieve best classification results on CUReT, KTH-TIPS, KTH-TIPS2-a and UIUC datasets. The GDF-HOG algorithm uses the magnitudes of Gaussian first derivatives but achieving continuous rotation invariance. On the CUReT dataset, the classification accuracy of original HOG algorithm is 89.39%, and GDF-HOG achieves 94.52%. The development is considerable. On the KTH-TIPS dataset, the classification accuracy of original HOG algorithm is 82.75%, and the proposed Eig(Hess)-HOG achieves 95.58%. The improvement in the classification accuracy is utterly incredible. The similar results are true for KTH-TIPS2-a and UIUC datasets as well. Since the UIUC dataset contains big affine and scale variation, GDF-HOG and Eig(Hess)-HOG algorithms cannot get very high classification results. Classification results show that the pair of eigenvalues of image surface is a significant property which describes local structures distinctively and it is more robust on all datasets. Furthermore the major advantage of our proposed Eig(Hess)-HOG algorithm is its continuous rotation invariance. Generally, the rotation invariant feature extraction may not achieve superior performance than the original HOG without rotation invariance. The Hessian matrix-based feature extraction achieves best classification accuracy on all datasets. According to experimental results, it is also seen that the proposed Gaussian derivative filters and eigenvalues of Hessian matrix achieve excellent results compared with the original HOG algorithm.

The second experiment is done between the novel CoHOG algorithms and the original CoHOG algorithm. Pixel labeling process of the proposed Eig(Hess)-CoHOG algorithms and the original CoHOG algorithm is made with the same formula. So, though feature vector is expected to be the same size in both algorithms, the lower dimensional feature vector is obtained in the proposed Eig(Hess)-CoHOG algorithm. Because images are characterized with the second-order differential analysis more detailed, co-occurrence matrix is composed of distinctive and sensitive derivative information. Therefore, the distinctive information contained in the co-occurrence matrix led to reducing in the size of the feature vector. Another important aspect to be emphasized here is that: since Eig(Hess)-CoHOG algorithm has low-dimensional feature vector and a very high classification rate, it is suitable for real-time applications. Pixel labeling process in the proposed GM-CoHOG algorithm is performed with Gaussian and mean curvature information and a new formula that enabled labeling. Feature vector size of this algorithm is in the same size with the original CoHOG algorithm and more larger than Eig(Hess)-CoHOG we proposed. However, it has the highest classification success on UIUC and KTH-TIPS datasets. The classification results are listed in Table 4
                        . Table 4 shows that the proposed Eig(Hess)-CoHOG and GM-CoHOG algorithms achieves best classification accuracies on all datasets. On the CUReT dataset, the classification accuracy of original CoHOG algorithm is 87.93%, the proposed Eig(Hess)-CoHOG achieves 99.67%, and the proposed GM-CoHOG achieves 99.38%. The highest classification rate is obtained for the proposed CoHOG algorithms. Eig(Hess)-CoHOG algorithm achieves 99.34% classification success, while the GM-CoHOG algorithm achieves 99.09% on the KTH-TIPS2-a dataset on which a lot of classification methods achieved an accuracy rate of only 70%. The fundamental challenge of the KTH-TIPS and KTH-TIPS2-a texture datasets lies on its large intra-class differences, so Eig(Hess)-CoHOG and GM-CoHOG algorithms which have powerful intra-class congregate capability could achieve best classification performance. However, the CUReT dataset has opposite properties. The texture images from the same texture class are very alike, while the texture images from different class are also similar. That means the CUReT dataset has both small inter-class and intra-class differences. Eig(Hess)-CoHOG and GM-CoHOG have presented their superiority on CUReT dataset due to their good inter-class distinguish capability. In the experiments carried out on UIUC and KTH-TIPS datasets, very high classification results have been obtained compared to the original CoHOG algorithm. In particular, it must be emphasized that; the KTH-TIPS2-a dataset is obtained under different lighting, poses and scaling. The classification success of the Eig(Hess)-CoHOG algorithm is an indication of how powerful eigenvalues of Hessian matrix are in feature extraction process. On the other hand, the excellent classification rate achieved by GM-CoHOG algorithm shows the value added to the original CoHOG algorithm by the Gaussian and mean curvature calculations.

Moreover the important advantage of our proposed Eig(Hess)-CoHOG and GM-CoHOG algorithms are their continuous rotation invariance. This property of both of the developed algorithms is analyzed in detail in the following sections.

In order to show the rotation invariant performance of the proposed algorithms clearly, we carry out various implementations on three datasets based on Brodatz dataset [72]. To make an objective comparison with the other methods, the production of testing and training images are performed as described in the literature [35].

Each texture image with the size of 512×512 in Brodatz album is divided into four 256×256 non-overlapping image regions. The center 128×128 subimage from each region is used for training process. For the generate test set, each 256×256 image region is rotated at angles of 10–160° with 10° increments and, from each rotated image, a 128×128 subimage is selected. In this way, the training set is 4×25 subimages and the test set is 4×16×25 subimages.

The dataset 2 includes 60 texture of from Brodatz album also used in [14]. The 60 texture images are D01, D04, D05, D06, D08, D09, D10, D11, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D34, D37, D46, D47, D48, D49, D50, D51, D52, D53, D55, D56, D57, D64, D65, D66, D68, D74, D75, D76, D77, D78, D81, D82, D83, D84, D85, D86, D87, D92, D93, D94, D98, D101, D103, D105, D110 and D111. The training and test sets are generated in the same way as dataset 1. Therefore, the training set is 4×60 subimages and the testing set is 4×16×60 subimages. In this way, an objective comparison is performed with other methods in the literature.

The dataset 3 contains 12 Brodatz texture classes, and each texture class included seven rotation images of size 512×512 rotated by different angles (0°, 30°, 60°, 90°, 120°, 150°, and 200°).


                     Table 5
                      shows the classification results for the original HOG and Eig(Hess)-HOG algorithms. The proposed GDF-HOG algorithm obtained poor performance, thus its classification results are not presented. For dataset 1, 2 and 3, the Eig(Hess)-HOG algorithm achieves remarkable classification results. Because the original HOG algorithm does not have the property of rotation invariance, it has a very low classification rate on three of the datasets.

The very high classification rate of Eig(Hess)-HOG algorithm that we proposed can be explained as follows:
                        
                           •
                           Eig(Hess)-HOG algorithm is a method developed by modifying the gradient calculation step of the original HOG algorithm. In this method, firstly the Hessian matrix of the image is calculated. Secondly, the 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          2
                                       
                                    
                                 
                               eigenvalues of the Hessian matrix are calculated. The main characteristic of eigenvalues of Hessian is invariant under rotation. Therefore, the Eig(Hess)-HOG algorithm developed by using the magnitude of the eigenvalues has the property of rotation invariance. Therefore, the Eig(Hess)-HOG algorithm achieved high classification accuracy in all datasets. Each image from the Brodatz dataset is rotated at angles of 0–1600 with 100 increments. The proposed method achieves a remarkable classification rate for all angle values. Figs. 6 and 7
                               show the classification accuracy of subimages with different rotated angles in dataset 1, 2 and 3. The result of the original HOG algorithm is too low along with the rotation angles, while the Eig(Hess)-HOG algorithm with continuous rotation invariance achieves more stable and accurate classification results.

The second experiment about rotation analysis is done among original CoHOG, Eig(Hess)-CoHOG and GM-CoHOG algorithms. Table 6
                      shows the classification results for the original CoHOG, Eig(Hess)-CoHOG and GM-CoHOG algorithms. For the datasets 1, 2, and 3, the classification results of the original CoHOG algorithm vary from 9% to 68%. These results are very low. The proposed Eig(Hess)-CoHOG and GM-CoHOG algorithms achieve incredible success. In both methods, a high and stable classification results are obtained on the all the datasets. Fig. 7
                      shows the classification accuracy of subimages with different rotated angles in dataset 1, 2 and 3 for all CoHOG algorithms. The result of the original CoHOG algorithm is unsuccessful along with the rotation angles, while the Eig(Hess)-HOG and GM-CoHOG algorithms with continuous rotation invariance obtain more robust and high classification results.

Suggested reasons underlying the success of both methods can be expressed substantially as follows:
                        
                           (1)
                           The gradient calculation of the original CoHOG algorithm heavily relies on simple pixel difference. However, the eigenvalues of the Hessian matrix are used in the Eig(Hess)-CoHOG algorithm that we proposed. The eigenvalues of an image surface represent the principal curvature details in the image and are rotation invariant. These eigenvalues are also used in the analysis of the non-linear function curvatures in differential geometry. Orientation information of pixels calculated by 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          2
                                       
                                    
                                 
                               eigenvalues of the matrix obtained in the Eig(Hess)-CoHOG algorithm directly affects accuracy and quality of the pixel labeling process in the next step of the algorithm. Eig(Hess)-CoHOG algorithm, containing higher order differential analysis, reaches high classification rate by pixel labeling process independent of the rotation angle. In addition to all these, Eig(Hess)-CoHOG algorithm that we proposed has the highest classification rate in spite of having smaller feature vector size than two the other methods.

There are two fundamental novelties in GM-CoHOG algorithm that we proposed. Firstly, in the pixel labeling process, the second-order horizontal, vertical and diagonal derivatives of image are used instead of the first-order derivative. Instead of using first-order derivative, Gaussian and mean curvatures are used. In the literature, there are almost no studies depending on curvature information in gradient orientations and texture classification. Finally, novel labeling formulation is used as the best strategy to label texture pixels. Another important novelty developed in this algorithm is the labeling formula. This formulation used in proposed algorithms is also used in the analysis of function curves in differential geometry. Therefore, precise measurements and calculations are performed on images.

In this section, the novel developed HOG and CoHOG algorithms are compared with the texton dictionary-based methods in terms of their classification accuracy and feature vector size. The texton dictionary methods are learned from the training images by clustering the local descriptors, and the representation of each image is the frequency histogram of the textons. Guo et al. [13] propose two types of local descriptors based on Gaussian derivatives filters, both of them have the property of continuous rotation invariance. The first local descriptor directly uses the maximum of the filter responses named continuous maximum responses (CMR). The second local descriptor rectifies the Gaussian filter responses to calculate principal curvatures (PC) of the image surface. The other study to which we compare the algorithms we developed is Joint_Sort texton dictionary-based techniques developed by Guo et al. [13]. The idea of the Joint_Sort method could be extended to other local patch based methods. In order to compare them with the proposed four new HOG and CoHOG algorithms, we conducted the same texture classification experiments of paper [41]. Classification results of CMR, PC and Joint_Sort methods were taken from their own paper [13,41]. The classification results for the texton number of CMR and PC methods are considered as 40. In addition, the texton number of Joint_Sort method is considered as 100, because the highest classification results in the related articles are achieved with these numbers of textons. The feature vector sizes used by the texton dictionary-based methods are calculated with the text on number
                        ×
                        class number formulation used in articles. Thus, during the test process of PC and CMR methods, feature vector sizes are found to be 1000 for UIUC dataset, and 4480 for Brodatz album. In the same way, as in Joint_Sort method texton number is 100, they are calculated as 2500 for the UIUC dataset, and 11,200 for Brodatz album.


                        Tables 7 and 8
                        
                         show the classification results for UIUC and Brodatz datasets. The first experiment is carried out on the Brodatz album of 112 textures, each of which is divided into nine equally sized regions, giving 999 texture samples. The proposed Eig(Hess)-CoHOG algorithm obtained the highest classification rate with a ratio of 98.21% on Brodatz dataset. GM-CoHOG algorithm has a success rate of 97.25%, leaving behind CMR, PC and Joint_Sort techniques. The second experiment is performed on the UIUC dataset. Our proposed Eig(Hess)-CoHOG and GM-CoHOG algorithms achieve better classification results on the UIUC dataset, and CMR, PC and Joint_Sort methods achieve better performance on the UIUC dataset.

Here, there are two important differences between the methods we proposed and other texton dictionary-based methods. First, in texton dictionary-based methods, the number of textons used during the training process significantly affects classification performance. For example, in experiments on the UIUC dataset, CMR method has a success rate of 91.51% for 10 texton. Also, it has a classification success rate of 93.03% for 40 texton. This situation is also true for the PC and Joint_Sort methods. The second important difference is K-means algorithm used in the training stage of the texton dictionary-based methods. During the training stage of the texton dictionary methods, feature vectors obtained in original image size are divided into subsets equal to the number of textons determined using K-means algorithm. This process increases the computational time of the algorithm in a very significant rate. To analyze this situation in a more concrete form.

Let us briefly examine only the training phase of PC method regarding texton number to be 40. This method performs the first and second derivative calculations for each of σ
                        =1,2,4,8 values with the purpose of extraction of the feature vector of a single image with 200×200 sizes within CUReT dataset. It calculates principal curvature information in the same size with two original images by using the derivative information obtained for each of σ values. For four different σ values, a total of eight basic curvature data is calculated. Eventually, for each training set image, a feature vector of 8×40,000 size is calculated. When the number of training images for each class is taken 20 for CUReT dataset, training information in size of 160×40,000 shall be given to K-means algorithm. When the histogram of this information is prompted to separate into a set of 40 textons with K-means algorithm, significant time requirements will occur. Training image histograms obtained in the training phase by such processes and labeled as 40 textons are used in the testing phase. Texton dictionary-based methods are time-consuming and awkward with the K-means algorithm and they also require sufficient training texture images to construct texton dictionary. When considering the computational cost of the each texture class in the datasets, it will be understood how slow the texton dictionary-based methods work. Note that the above-mentioned texton-dictionary based methods do not provide us with information about the computation time. Therefore, any computational comparison could not be made with our algorithms. However, K-means and any other similar algorithms are not used in the four novel texture classification algorithms we proposed. The obtained feature vectors are directly given to the NN classifier. Especially owing to the principal curvature information of each pixel computed by eigenvalues in Eig(Hess)-CoHOG, time performance of the algorithm is improved algorithm through considerably minimizing feature vector size. Although proposed algorithms have lower dimensional feature vector, they generally have higher classification performance.

In this experiment we make a brief comparison between novel CoHOG algorithms and the several rotation invariant descriptors including rapid-transform based rotation invariant descriptor (RTRID) [11], V2-RTRID [11] and LBP [18]. The RTRID and V2-RTRID are based on the local circular neighborhood and the local feature vector is obtained by means of Rapid-transform. This experiment is conducted on the Brodatz album. This set consists of 16 Brodatz texture classes, and each texture class includes seventeen rotation images of size 128×128 rotated by different angles (0°, 10°, 20°,…,160°). The single pattern (16,2) is used for the three neighborhood based methods LBP, RTRID, V2-RTRID. To evaluate the robustness of methods under the condition of additive Gaussian noise, we tested the performance of classifying texture images which were added Gaussian noise with zero mean and a variance dependent on specific texture to obtain required signal-to-noise ratio (SNR). Table 9
                         lists the comparative results. It can be seen that the proposed CoHOG algorithm achieves excellent classification performance under rotation conditions. From Table 9, it can be seen that single descriptors RTRID and V2-RTRID obtain better classification accuracy than LBP method. Their good performance should be contributed to feature selection processing. The RTRID method obtains poor performance due to its global rotation invariance. The textures of the same texture class have large intra-class dissimilarity, thus the directions selected by Radon transform are no longer stable. In many image processing applications we need to deal with noisy texture images. As a result, robustness to noise is considered as one of the most significant factors to assess texture classification methods. It is obvious that LBP method has a good result under ideal condition; however it is not as robust as the other methods under noise and rotation conditions. Our CoHOG algorithms also have the best correct classification rates of 93.54% and 95.08% among them. Due to usage of Hessian and principal curvatures, novel CoHOG descriptors have a good average classification rate. The experimental results show that higher order directional derivatives can obviously improve classification accuracy. So it is important to take into account the higher order directional derivatives (i.e. principal curvatures) for the improvement of accuracy.

@&#CONCLUSION@&#

Designing an effective and robust feature extraction algorithm for texture classification under non-ideal conditions is a challenging task. In this paper we have proposed rotation invariant feature extraction algorithms which are robust to illumination and pose variations. The developed four novel feature extraction algorithms are based on the strengthening of the calculation of the gradient orientations in the original HOG and CoHOG algorithms. The classical HOG and CoHOG algorithms directly use the gradient information, which will discard the useful information in texture images. Therefore, we have presented four novel extensions of HOG and CoHOG, the key idea is to make efficient and reasonable use of derivative information in the local texture patterns, especially in the nonuniform patterns. In four novel algorithms we developed, Gaussian derivative filters, eigenvalues of the Hessian matrix and Gaussian–mean curvatures are used. Thanks to robust and powerful mathematical methods, rotation invariant and qualified texture features are obtained. Very high classification performance is obtained on well-known and widely used texture datasets without increasing feature vector dimension of the algorithms. Moreover, in the Eig(Hess)-CoHOG algorithm that we developed, higher classification performance is obtained by reducing the size of feature vector of the original CoHOG algorithm to the ratio of 23.43%. Rotation invariant classification experiments are carried out on the Brodatz dataset and promising results are obtained from experiments. Finally, the superiority of the proposed algorithms is analyzed by a comprehensive comparison with the state-of-the-art the texture classification methods.

The image behavior in a local neighborhood of a point can be expressed by the Taylor expansion. Therefore, the local neighborhood can be simplified as an expansion of functions. The Taylor expansion of a local neighborhood of a point 
                        
                           
                              
                                 
                                    
                                       x
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 0
                              
                           
                        
                      is defined in Eq. (A1),
                        
                           (A1)
                           
                              f
                              (
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              +
                              
                                 
                                    h
                                 
                                 
                                    →
                                 
                              
                              )
                              =
                              f
                              (
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              )
                              +
                              ∇
                              f
                              (
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              )
                              
                                 
                                    h
                                 
                                 
                                    →
                                 
                              
                              +
                              
                                 
                                    1
                                 
                                 
                                    2
                                    !
                                 
                              
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ⇀
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    ∇
                                 
                                 
                                    2
                                 
                              
                              f
                              (
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    0
                                 
                              
                              )
                              
                                 
                                    h
                                 
                                 
                                    →
                                 
                              
                              +
                              r
                              (
                              
                                 
                                    h
                                 
                                 
                                    →
                                 
                              
                              )
                           
                        
                     where 
                        
                           r
                           (
                           
                              
                                 h
                              
                              
                                 →
                              
                           
                           )
                        
                      is a residual.

Differential geometry, in general, allows extracting properties and features of points by means of first and second-order terms of the Taylor expansion. While first order terms in Taylor expansion contain information about gradient distribution in a local neighborhood, second-order terms include information about the local shape.

Given a point p,the first-order terms of the Taylor expansion correspond to its so-called Jacobian matrix is defined in Eq. (A2),
                           
                              (A2)
                              
                                 J
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         ∂
                                                         p
                                                      
                                                      
                                                         ∂
                                                         x
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ∂
                                                         p
                                                      
                                                      
                                                         ∂
                                                         y
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   0
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where first partial derivatives fx
                         and fy
                         are estimated applying Gaussian derivative kernels on the image. The first fundamental form I for the point p on an image f is defined in Eq. (A3):
                           
                              (A3)
                              
                                 I
                                 =
                                 J
                                 ∗
                                 
                                    
                                       J
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                      
                                                   
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                      
                                                   
                                                
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         y
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The normal vector N to the point p on an image f is defined in Eq. (A4),
                           
                              (A4)
                              
                                 N
                                 =
                                 
                                    
                                       
                                          
                                             ∂
                                             p
                                          
                                          
                                             ∂
                                             x
                                          
                                       
                                       ×
                                       
                                          
                                             ∂
                                             p
                                          
                                          
                                             ∂
                                             y
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∂
                                                      p
                                                   
                                                   
                                                      ∂
                                                      x
                                                   
                                                
                                                ×
                                                
                                                   
                                                      ∂
                                                      p
                                                   
                                                   
                                                      ∂
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             1
                                             +
                                             
                                                
                                                   f
                                                
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   f
                                                
                                                
                                                   y
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   -
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         x
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   -
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Second-order terms of the Taylor expansion conform the Hessian matrix H, which is similar to the second fundamental form. Eq. (A2) is derived from the normal curvature estimation and it is calculated using the second-order partial derivatives and the normal vector N for each point p. So the second fundamental form for images is described in Eq. (A5),
                           
                              (A5)
                              
                                 H
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         p
                                                      
                                                      
                                                         ∂
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   N
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         p
                                                      
                                                      
                                                         ∂
                                                         x
                                                         ∂
                                                         y
                                                      
                                                   
                                                   N
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         p
                                                      
                                                      
                                                         ∂
                                                         x
                                                         ∂
                                                         y
                                                      
                                                   
                                                   N
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         p
                                                      
                                                      
                                                         ∂
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   N
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   0
                                                
                                                
                                                   0
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         xx
                                                      
                                                   
                                                   )
                                                   N
                                                
                                             
                                             
                                                
                                                   (
                                                   0
                                                
                                                
                                                   0
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         xy
                                                      
                                                   
                                                   )
                                                   N
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   0
                                                
                                                
                                                   0
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         xy
                                                      
                                                   
                                                   )
                                                   N
                                                
                                             
                                             
                                                
                                                   (
                                                   0
                                                
                                                
                                                   0
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         yy
                                                      
                                                   
                                                   )
                                                   N
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             1
                                             +
                                             
                                                
                                                   f
                                                
                                                
                                                   x
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   f
                                                
                                                
                                                   y
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         xx
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         xy
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         yx
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         yy
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             det
                                             (
                                             I
                                             )
                                          
                                       
                                    
                                 
                                 H
                              
                           
                        where second partial derivatives fxx
                        ,
                        fxy
                        , fyy
                         are estimated applying Gaussian derivative kernels on the image and det(I) is the determinant of the first fundamental form.

@&#REFERENCES@&#

