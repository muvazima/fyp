@&#MAIN-TITLE@&#Nonlinear analysis of EEGs of patients with major depression during different emotional states

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This is the first work defining emotional changes in complexity in MDDs’ brains.


                        
                        
                           
                           Higher complexity values were generated by MDD patients relative to controls


                        
                        
                           
                           The patients had higher complexities during noise than did the controls’ brains.


                        
                        
                           
                           Patients’ negative emotional bias was showed by their higher brain complexities.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

EEG

Major depressive disorder

Complexity

Emotion

Music

Noise

Entropy

Fractal dimension

@&#ABSTRACT@&#


               
               
                  Background
                  Although patients with major depressive disorder (MDD) have dysfunctions in cognitive behaviors and the regulation of emotions, the underlying brain dynamics of the pathophysiology are unclear. Therefore, nonlinear techniques can be used to understand the dynamic behavior of the EEG signals of MDD patients.
               
               
                  Methods
                  To investigate and clarify the dynamics of MDD patients׳ brains during different emotional states, EEG recordings were analyzed using nonlinear techniques. The purpose of the present study was to assess whether there are different EEG complexities that discriminate between MDD patients and healthy controls during emotional processing. Therefore, nonlinear parameters, such as Katz fractal dimension (KFD), Higuchi fractal dimension (HFD), Shannon entropy (ShEn), Lempel-Ziv complexity (LZC) and Kolmogorov complexity (KC), were computed from the EEG signals of two groups under different experimental states: noise (negative emotional content) and music (positive emotional content) periods.
               
               
                  Results
                  First, higher complexity values were generated by MDD patients relative to controls. Significant differences were obtained in the frontal and parietal scalp locations using KFD (p<0.001), HFD (p<0.05), and LZC (p=0.05). Second, lower complexities were observed only in the controls when they were subjected to music compared to the resting baseline state in the frontal (p<0.05) and parietal (p=0.005) regions. In contrast, the LZC and KFD values of patients increased in the music period compared to the resting state in the frontal region (p<0.05). Third, the patients׳ brains had higher complexities when they were exposed to noise stimulus than did the controls׳ brains. Moreover, MDD patients׳ negative emotional bias was demonstrated by their higher brain complexities during the noise period than the music stimulus. Additionally, we found that the KFD, HFD and LZC values were more sensitive in discriminating between patients and controls than the ShEn and KC measures, according to the results of ANOVA and ROC calculations.
               
               
                  Conclusion
                  It can be concluded that the nonlinear analysis may be a useful and discriminative tool in investigating the neuro-dynamic properties of the brain in patients with MDD during emotional stimulation.
               
            

@&#INTRODUCTION@&#

Major depressive disorder (MDD) is a very common psychiatric mood disorder that affects 15–20% of the population [1]. The major signs of MDD are loss of interest, energy and pleasure; a depressed mood; disturbances in sleep; and recurrent suicidal thoughts [2]. Moreover, depressed patients exhibit some symptoms related to cognition, such as low concentration, difficulty in decision making and focusing, according to the Diagnostic and Statistical Manual of Mental Disorders (DSM-IV) diagnostic criteria for MDD [3]. However, the underlying neural activities of these types of functional or cognitive impairments are still under investigation [4].

Therefore, there have been many electroencephalogram (EEG) studies in groups of patients diagnosed with MDD to compare them with healthy controls. Most of these studies have investigated resting state brain activity in MDD patients with the help of conventional linear techniques, such as spectral domain analysis or waveform investigations [5-8]. However, the complex dynamic variations in an EEG time series cannot be discriminated by linear techniques [9]. Moreover, because EEG is a complex and irregular signal with nonlinear behaviors and without a linear relation between cause and effect, a significant number of complexity estimators, such as largest Lyapunov exponents (L1), correlation dimension (D2), mutual information, Shannon entropy (ShEn), sample entropy, approximate entropy (ApEn), Lempel-Ziv complexity (LZC), fractal dimension (FD), and Kolmogorov complexity (KC), have been proposed as more appropriate techniques for understanding the underlying dynamics of brain activity with unknown parameters [4]. These estimators are known as nonlinear measures because they reconstruct an attractor from an EEG by characterizing its dynamic behaviors using the dimension of a signal, which gives the degrees of freedom of system, or using entropies that reflect the unpredictability of the signals׳ dynamics [10].Therefore, over the past 40 years, these measures have been applied to EEG data for characterizing random-appearing series of patterns across time in different physiological states, such as Alzheimer׳s disease [11-13], dementia [14], epilepsy [15-17], schizophrenia [18-20] and obsessive–compulsive disorder [21].

It must be taken into account that all of these estimators reflect the complexity with different approaches, such as dimensional complexity, regularity and predictability [22,23]. While the D2 and Higuchi FD are related to dimensional complexity, the ApEn is a statistical calculation of regularity of a signal. Some other complexity measures, such as the L1 and entropies, focus on determining the irregularity and predictability of signals. The randomness or degree of irregularity (chaoticness) of finite sequences can be investigated by the LZC and KC. Among all of these complexity estimators, traditional estimators (D2 and L1) are the oldest and have limitations because of their requirement for a noise-free, long and stationary time series [24]. Alternatively, entropy-based complexity estimators calculated in either frequency domain (spectral entropy) or a time series (ShEn, ApEn) have the advantage of anti-noise ability [25]. On the other hand, Katz fractal dimension (KFD), Higuchi׳s fractal dimension (HFD) and Petrosian FD algorithms simply and quickly estimate the self-similarity of a time interval directly in the time series [26].

Although most of the attention has been paid to analyses of EEGs in MDD patients based on linear techniques [5-8], there have been a small number of studies on nonlinear EEG analysis of patients [4,19,27-29]. To the best of our knowledge, Nandrino et al. [27] conducted the first nonlinear EEG analysis study of MDD patients. They calculated the D2 and found a negative correlation between the symptoms of MDD and its complexity. Li et al. [19] reported that MDD patients exhibited increased LZC values in anterior brain regions when the values were compared with corresponding values in controls. Ahmadlou et al. [28] applied HFD and KFD analyses to both the full band and sub-bands of EEG data in patients with depression and in controls. According to their reports, elevated complexities in patients were particularly observed in the beta and gamma sub-bands of the frontal area in EEG recordings. The same authors proposed a new nonlinear measure called spatiotemporal analysis of relative convergence (STARC) for investigating brain dynamics based on relative EEG convergence in different loci [29]. They found significant STARC differences between male and female MDD patients. Puthankattil and Joseph [30] used signal entropy values to classify the EEG signals of patients with depression and control subjects. In another of their works, the ApEn values of MDD patients and healthy controls were compared [31]. They reported decreased ApEn values, indicating the predictability and regularity of EEG recordings in patients with depression. In another study, Hosseinifard et al. [32] compared the performance of different classification algorithms that used some EEG nonlinear features, such as detrended fluctuation analysis (DFA), HFD, D2, and L1 for discriminating MDD patients from controls. They reported high classification accuracy when the linear discriminant analysis was used with extracted nonlinear features. Similarly, probabilistic neural network-based high classification accuracy in the discrimination of MDD patients and control subjects was obtained by Faust et al. [33]. They used entropy values estimated from the EEG signals of two groups. To compare the depression-detecting ability of linear and nonlinear EEG features, Bachmann et al. [34] calculated the HFD values of EEG signals and found high discrimination accuracy when nonlinear methods were used. To show complex dynamic variations in the EEG signals, computer-aided diagnosis of depression using EEG signals has been proposed for psychiatrists as a tool to confirm their clinical diagnosis [9]. Finally, in a very recent study, Bachmann et al. [4] investigated the LZC values in MDD patients. Their results revealed increased complexities in MDD patients compared to normal controls in all of the investigated brain regions.

Although all of these studies imply that nonlinear methods can be useful for analyzing EEG signals in patients with depression, the reported complexity results are restricted only to the analysis of resting EEG recordings. Complexity approaches have not yet been applied to the EEG signals of MDD patients during emotional processing. It is known that depressed patients have impairments in cognitive functions and the regulation of emotions [35]. However, the underlying factors of the relationship between depression and these impairments are largely unknown. This issue has been investigated in previous studies that explored facial emotion recognitions [35-37]. The processing of emotional stimuli was found to be negatively biased in MDD patients, meaning that patients focus more on negative facial expressions than on neutral or positive expressions and produce more rapid and prominent responses during negative ones [35-38]. These findings are consistent with the results of neuroimaging studies that showed decreased brain activation (in ventral striatum and putamen) to positive stimuli in MDD patients relative to control subjects [39-41]. In MDD patients, attenuated emotional reactivity to positive emotional stimuli is called positive attenuation hypothesis, and increased emotional reactivity to negative emotional stimuli is known as negative potentiation hypothesis [42]. Most of these previous studies investigated emotional processing in MDD patients using neuroimaging findings or self-report evaluations. However, it has been reported that temporal dynamics play an important role in understanding the neural structure of emotional processing [43]. To evaluate the impairments in emotional responses of MDD patients in the present study, which is the first of this kind to our knowledge, EEG data were recorded and analyzed by nonlinear techniques during both rest and different emotional auditory stimulation periods, such as listening to classical Turkish music (CTM) and listening to noise. The primary goals of this research were to determine whether complexity measures, such as ApEn, ShEn, KFD, HFD and KC, can be used to discriminate MDD patients from control subjects and whether the emotional processing in the EEG signals can be measured by complexity differences between patients and controls. The originality of this research was to investigate several complexity and entropy features in the EEG signals, obtained from different brain regions, of MDD patients during different emotional states. We designed a new study protocol to test the hypothesis that MDD patients have differences in brain complexities during different emotional stimulations and show a bias toward negative emotional stimuli. In particular, we hypothesized that patients would have increased brain complexities both at rest and during noise stimulation periods.

@&#METHODS@&#

The groups in this study were healthy control subjects and MDD patients. There were 15 control subjects, who had no history of any neurological, psychiatric, or psychological disorder or substance abuse. There were also 15 age- and gender-matched MDD patients diagnosed by an expert psychiatrist according to the DSM-IV criteria. The degree of their symptoms was assessed by the 17-item Hamilton Rating Scale for Depression (HAM-D). The MDD patients were being treated with a variety of medications (beta blockers and other standard drugs) at the time of the experiments. All participants reported that they were right-handed, had hearing in the normal range, and had no previous formal music training (
                        Table 1).

The experimental protocol was approved by the Institutional Ethical Board of Fatih University. All participants were aware of the purpose and details of the study and gave their written informed consent before the experiments. The EEG signals were recorded in the Psychiatry Department of Sema Hospital at Fatih University. The individuals were instructed to close their eyes, sit comfortably in a chair without moving, breathe normally and suppress blinking as much as possible. The experiments began after a pre-adaptation period of 2min, in which patients sat on a chair in a quiet and dark room. The EEG data were acquired from 16 electrodes (Fp1, Fp2, Fpz, F3, F4, F7, F8, C3, C4, Cz, P3, P4, P7, P8, T7, and T8) mounted on the subject׳s scalp according to the International 10–20 system. The EEG signals were recorded using a BrainAmp DC acquisition system (Brain Products, Munich, Germany) and an electrode cap (Easy cap), and they were sampled with 250Hz. Impedance values of all electrodes were checked by online monitoring in the system software to adjust values under 10kΩ. The experimental protocol consisted of five sequential periods for a total data recording duration of 15min. First, EEG signals were recorded from each subject for a 3min resting state (resting 1, R1). Second, during another 3min period, the EEGs were collected from subjects listening to music (M). Third, the data acquisition continued with a second resting (R2) period of 3min. In the following periods, data were recorded from participants during exposure to noise (N) and then during the third resting period (R3). Each participant was instructed to listen to auditory stimuli via earphones with 75dB intensity. A special form/mode (Rast makam) of CTM was chosen for the sedative musical stimulation period. This music was instrumental and had been shown to induce cheerfulness, happiness and pleasure. The effects of different modes of Turkish music on the emotions were defined by the Turkish philosopher Farabi [44,45]. The sound of a broken washing machine was selected for the alerting and disturbing noise stimulation period. Moreover, in this study, subjective ratings of participants in terms of the emotions induced by noise and music stimuli were obtained for standardization of the stimuli. After the experimental protocol, questionnaires were given to all subjects. The participants rated the auditory stimulation periods on a 1–5 scale for valence, with 1 being very negative or disturbing and 5 being very positive or sedative. MDD patients rated the noise period (mean±std=1.13±0.35) as more negative than the music period (mean±std=4.13±0.74). Similarly, the control subjects found the noise period (mean±std=1.27±0.46) to be more negative than the music period (mean±std=4.47±0.64).

In this study, we investigated the EEG data of participants using various complexity measures, such as ShEn, LZC, KC, KFD and HFD, using MATLAB (The MathWorks, Natick, MA, USA). The general block diagram of the procedure is shown in 
                        Fig. 1. The data were first filtered using a 0.5–50Hz band-pass filter for preprocessing. Then, any artifact sources in terms of eye-blink and movement in each EEG recording were eliminated automatically by the recording system interface and by visual inspection by the expert. Then, based on the results of previous studies [46], EEG data in each period (180s) were divided into 20 second segments, giving 9 segments for nonlinear processing. Next, the complexity measures were calculated for each segment. For calculating the LZC and KC, each EEG data segment was converted into new binary sequences by median thresholding. After that, the average values of each complexity measure over all segments were computed for each subject at each EEG electrode. Finally, the average complexity values of the frontal, central, temporal and parietal regions were calculated for each group and the differences between MDD patients and controls in mean complexity measure during the experimental protocol were statistically evaluated.

The first definition of entropy was developed by Shannon and Weaver for information theory [47]. It is a time domain complexity estimator and can be calculated using the set of finite discrete random variables, 
                              
                                 X
                              
                              
                                 =
                              
                              
                                 {
                                 
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    
                                       ,
                                    
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    
                                       ,
                                    
                                    
                                       …
                                    
                                    
                                       ,
                                    
                                    
                                       
                                          x
                                       
                                       
                                          m
                                       
                                    
                                 
                                 }
                              
                           ,
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 
                                    ∈
                                 
                                 
                                    
                                       R
                                    
                                    
                                       d
                                    
                                 
                              
                           , as follows [48]
                           
                              
                                 (1)
                                 
                                    
                                       H
                                    
                                    
                                       (
                                       
                                          X
                                       
                                       )
                                    
                                    
                                       =
                                       −
                                    
                                    
                                       c
                                    
                                    
                                       ∑
                                       
                                          
                                             i
                                          
                                          
                                             =
                                             0
                                          
                                       
                                       
                                          m
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          )
                                       
                                       
                                          ln
                                       
                                       
                                          
                                             p
                                          
                                          
                                             (
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          
                                             )
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 c
                              
                            shows a positive constant, 
                              
                                 m
                              
                            is the possible amplitude values number, and 
                              
                                 p
                              
                              
                                 (
                              
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              
                                 )
                              
                            shows the probability of 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                            signal.

The FD of a signal can be calculated using Katz׳s algorithm in the time domain. This method depends on a simple calculation of the FD of a planar curve as follows [49]
                           
                              
                                 (2)
                                 
                                    
                                       
                                          FD
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                log
                                             
                                             
                                                
                                                   (
                                                
                                                
                                                   L
                                                
                                                
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                log
                                             
                                             
                                                
                                                   (
                                                
                                                
                                                   d
                                                
                                                
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       L
                                    
                                    =
                                    sum
                                    (
                                    dist
                                 
                                 
                                    (
                                    
                                       
                                          a
                                       
                                       ,
                                       
                                          b
                                       
                                    
                                    )
                                 
                                 
                                    )
                                 
                              
                            and shows the total curve length or sum of distances between successive points (
                              
                                 
                                    a
                                 
                                 ,
                                 
                                    b
                                 
                              
                           ) in the curve (time series), and 
                              
                                 d
                              
                            indicates the diameter. The average KFD can be calculated using the following formula
                              
                                 (3)
                                 
                                    
                                       
                                          FD
                                          =
                                       
                                       
                                          
                                             log
                                             (
                                             
                                                L
                                             
                                             /
                                             
                                                a
                                             
                                             )
                                          
                                          
                                             log
                                             (
                                             
                                                d
                                             
                                             /
                                             
                                                a
                                             
                                             )
                                          
                                       
                                       
                                          =
                                          
                                       
                                       
                                          
                                             log
                                             (
                                             
                                                n
                                             
                                             )
                                          
                                          
                                             
                                                log
                                             
                                             
                                                (
                                                
                                                   n
                                                
                                                )
                                             
                                             
                                                +
                                                log
                                                (
                                                
                                                   d
                                                
                                                /
                                                
                                                   L
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       n
                                    
                                    =
                                 
                                 
                                    
                                       L
                                    
                                    
                                       a
                                    
                                 
                              
                            shows the step׳s number in the curve or the time series.

Higuchi׳s algorithm estimates the FD of signals directly in the time domain. 
                              
                                 
                                    X
                                 
                                 
                                    (
                                    
                                       1
                                    
                                    )
                                 
                                 
                                    ,
                                    X
                                 
                                 
                                    (
                                    
                                       2
                                    
                                    )
                                 
                                 
                                    ,
                                 
                                 
                                    …
                                 
                                 
                                    ,
                                    X
                                 
                                 
                                    (
                                    
                                       N
                                    
                                    )
                                 
                              
                            shows the EEG time sequence with 
                              
                                 N
                              
                            total samples. The algorithm sets up a new time series from this given one as follows
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             m
                                          
                                          
                                             k
                                          
                                       
                                       
                                          =
                                       
                                       
                                          {
                                          
                                             
                                                x
                                             
                                             
                                                (
                                                
                                                   m
                                                
                                                )
                                             
                                             
                                                ,
                                                
                                             
                                             
                                                x
                                             
                                             
                                                (
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      +
                                                   
                                                   
                                                      k
                                                   
                                                
                                                )
                                             
                                             
                                                ,
                                                
                                             
                                             
                                                x
                                             
                                             
                                                (
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      +
                                                      2
                                                   
                                                   
                                                      k
                                                   
                                                
                                                )
                                             
                                             
                                                ,
                                                …
                                             
                                             
                                                x
                                             
                                             
                                                (
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      +
                                                   
                                                   
                                                      ⌊
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  −
                                                               
                                                               
                                                                  m
                                                               
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      ⌋
                                                   
                                                   
                                                      ∙
                                                   
                                                   
                                                      k
                                                   
                                                
                                                )
                                             
                                          
                                          }
                                       
                                       
                                          
                                       
                                       
                                          m
                                       
                                       
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           where 
                              
                                 m
                              
                            is the initial time, and 
                              
                                 k
                              
                            is the interval time between successive points in the 
                              
                                 
                                    
                                       x
                                    
                                    
                                       m
                                    
                                    
                                       k
                                    
                                 
                              
                            sequence. The average normalized sum of absolute values of each sequence can be calculated as
                              
                                 (5)
                                 
                                    
                                       
                                          
                                             L
                                          
                                          
                                             m
                                          
                                       
                                       
                                          (
                                          
                                             k
                                          
                                          )
                                       
                                       
                                          =
                                       
                                       
                                          {
                                          
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            =
                                                            1
                                                         
                                                      
                                                      
                                                         [
                                                         
                                                            
                                                               
                                                                  
                                                                     N
                                                                  
                                                                  
                                                                     −
                                                                  
                                                                  
                                                                     m
                                                                  
                                                               
                                                               
                                                                  
                                                                     k
                                                                  
                                                               
                                                            
                                                         
                                                         ]
                                                      
                                                   
                                                   
                                                      |
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  m
                                                               
                                                               
                                                                  +
                                                               
                                                               
                                                                  ik
                                                               
                                                            
                                                            )
                                                         
                                                         
                                                            −
                                                         
                                                         
                                                            x
                                                         
                                                         
                                                            (
                                                         
                                                         
                                                            m
                                                         
                                                         
                                                            +
                                                            (
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            −
                                                            1
                                                            )
                                                         
                                                         
                                                            k
                                                         
                                                         
                                                            )
                                                         
                                                      
                                                      |
                                                   
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   
                                                      [
                                                      
                                                         
                                                            
                                                               
                                                                  N
                                                               
                                                               
                                                                  −
                                                               
                                                               
                                                                  m
                                                               
                                                            
                                                            
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                      ]
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          }
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       
                                          N
                                       
                                       
                                          −
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      −
                                                   
                                                   
                                                      m
                                                   
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          ]
                                       
                                       
                                          ∙
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                            is the normalization factor for the curve length of the time series. Therefore, the average curve length for 
                              
                                 k
                              
                            sets of 
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                                 
                                    (
                                    
                                       k
                                    
                                    )
                                 
                              
                            can be calculated as
                              
                                 (6)
                                 
                                    
                                       L
                                    
                                    
                                       (
                                       
                                          k
                                       
                                       )
                                    
                                    
                                       =
                                    
                                    
                                       ∑
                                       
                                          
                                             m
                                          
                                          
                                             =
                                             1
                                          
                                       
                                       
                                          k
                                       
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             m
                                          
                                       
                                       
                                          (
                                       
                                       
                                          k
                                       
                                       
                                          )
                                       
                                    
                                 
                              
                           
                        

The FD value of Higuchi׳s method is then computed by a linear fitting procedure based on the least squares as 
                              
                                 
                                    
                                       L
                                    
                                    (
                                    
                                       k
                                    
                                    )
                                 
                                 
                                    ∝
                                 
                                 
                                    
                                       k
                                    
                                    
                                       
                                          −
                                       
                                       
                                          D
                                       
                                    
                                 
                              
                           , which indicates that the curve is fractal with 
                              
                                 D
                              
                            dimension [50].

The LZC is a non-parametric estimator to assess the randomness of finite sequences [51]. To calculate the LZCs, time domain data are converted into a binary sequence (0 and 1 values) as follows
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             S
                                          
                                          =
                                          
                                             s
                                          
                                       
                                       
                                          (
                                          
                                             1
                                          
                                          )
                                       
                                       
                                          ,
                                          
                                             s
                                          
                                       
                                       
                                          (
                                          
                                             2
                                          
                                          )
                                       
                                       
                                          ,
                                          
                                          …
                                          ,
                                          s
                                       
                                       
                                          (
                                          
                                             r
                                          
                                          )
                                       
                                    
                                 
                              
                           where 
                              
                                 s
                              
                            shows the binary sequence and is obtained by
                              
                                 (8)
                                 
                                    
                                       
                                          s
                                       
                                       
                                          (
                                          
                                             i
                                          
                                          )
                                       
                                       
                                          =
                                       
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      
                                                         0
                                                         ,
                                                         x
                                                      
                                                      
                                                         (
                                                         
                                                            i
                                                         
                                                         )
                                                      
                                                      
                                                         <
                                                      
                                                      
                                                         
                                                            T
                                                         
                                                         
                                                            d
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         1
                                                         ,
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

The 
                              
                                 
                                    x
                                 
                                 
                                    (
                                    
                                       i
                                    
                                    )
                                 
                              
                            time series value is defined as one if it is greater than a threshold (
                              
                                 
                                    
                                       T
                                    
                                    
                                       d
                                    
                                 
                              
                           ) and as zero if it is lower than or equal to 
                              
                                 
                                    
                                       T
                                    
                                    
                                       d
                                    
                                 
                              
                            
                           [19]. After this transformation process, the binary sequence 
                              
                                 
                                    s
                                 
                                 (
                                 
                                    i
                                 
                                 )
                              
                            is scanned from left to right to count the number of new occurring patterns. When a new subsequence pattern is observed, the 
                              
                                 
                                    c
                                 
                                 (
                                 
                                    n
                                 
                                 )
                              
                            complexity measure is increased by one unit. Therefore, the LZC shows the number of diverse patterns in a n-length binary sequence and the final complexity of the sequence 
                              
                                 
                                    b
                                 
                                 (
                                 
                                    n
                                 
                                 )
                              
                            can be computed as 
                              
                                 (9)
                                 
                                    
                                       
                                          
                                             lim
                                          
                                          
                                             
                                                n
                                             
                                             →
                                             
                                                ∞
                                             
                                          
                                       
                                       
                                          
                                             c
                                          
                                          
                                             (
                                             
                                                n
                                             
                                             )
                                          
                                          
                                             =
                                             
                                                b
                                             
                                             (
                                             
                                                n
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           where
                              
                                 (10)
                                 
                                    
                                       
                                          b
                                       
                                       
                                          (
                                          
                                             n
                                          
                                          )
                                       
                                       
                                          =
                                       
                                       
                                          
                                             n
                                          
                                          
                                             log
                                             2
                                             (
                                             
                                                n
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        

To overcome the problem in length dependence of time series, the LZC can be normalized by 
                              
                                 
                                    b
                                 
                                 (
                                 
                                    n
                                 
                                 )
                              
                            as [52]
                           
                              
                                 (11)
                                 
                                    
                                       LZC
                                       =
                                       
                                          c
                                       
                                       (
                                       
                                          n
                                       
                                       )
                                       /
                                       
                                          b
                                       
                                       (
                                       
                                          n
                                       
                                       )
                                    
                                 
                              
                           
                        

Suggested by Kolmogorov [53] and Chaitin [54], KC, or algorithmic complexity, can be used for predicting the randomness or degree of irregularity of symbolic sequences. The KC can be calculated as [55]
                           
                              
                                 (12)
                                 
                                    
                                       
                                          
                                             
                                                K
                                             
                                             
                                                U
                                             
                                          
                                       
                                       
                                          (
                                          
                                             x
                                          
                                          )
                                       
                                       
                                          =
                                       
                                       
                                          
                                             min
                                          
                                          
                                             
                                                p:U
                                             
                                             
                                                (
                                                
                                                   p
                                                
                                                )
                                             
                                             
                                                =
                                                
                                                   x
                                                
                                             
                                          
                                       
                                       
                                          
                                             l
                                          
                                          (
                                          
                                             p
                                          
                                          )
                                       
                                    
                                 
                              
                           where p indicates the computer program, and 
                              
                                 
                                    l
                                 
                                 (
                                 
                                    p
                                 
                                 )
                              
                            shows the length of output string (x) of the 
                              
                                 U
                              
                            universal Turing machine (computer). For calculating the KC of a time series, first, data must be transformed into discrete binary sequences as in LZC.

Statistical data analysis was performed using SPSS 20.0 software® (SPSS Inc., Chicago, Illinois, USA). First, the data were checked for normality and homogeneity of variance using the Shapiro–Wilks test. A three-way repeated measures (mixed) analysis of variance (ANOVA) was used to investigate significant group differences in each of the complexity measures for the different experimental periods (R1, M, R2, N, R3) and four brain regions (frontal, central, temporal and parietal) and between the patients and controls. The within-group factors were the experimental periods and electrode locations, and the between-group factor was the groups (the depressed and the control groups). To control Type-1 error of F ratios, Greenhouse–Geisser corrections were also performed. Bonferroni post-hoc tests were performed to assess the sources of significant results of ANOVA. When a significant group x region or group x region x emotional period interaction were detected in each complexity value by mixed ANOVA, a one-way ANOVA was performed to clarify the significance of difference between patients and controls for each of the regions. Therefore, the most distinctive complexity values and corresponding brain areas and emotional states between the MDD patients and control subjects were assessed. To investigate how these complexity measures change from the resting baseline period to the emotional condition related to noise and music stimuli in each group, paired sample Student׳s t-tests were used by pairing each set of sequential periods. The statistical analysis results were accepted as significant when the p value was less than 0.05.

@&#RESULTS@&#

In this study, average EEG signal complexity values (KFD, HFD, ShEn, LZC and KC) of MDD patients and healthy controls were investigated during different emotional states for channels in the frontal (Fp1, Fp2, Fpz, F3, F4, F7, F8), central (C3, Cz, C4), temporal (T7, T8) and parietal (P3, P4, P7, P8) regions. To evoke an emotional condition, two different auditory stimuli (noise and music) were used, and their effects on nonlinear brain dynamics of patients and controls were evaluated. A remarkable change in EEG complexity values between patients and controls was observed in association with emotional stimulation.

Significant complexity (KFD, HFD, and LZC) differences between patients and controls were obtained in the resting baseline period (R1). Consistent with the hypothesis, patients with MDD had higher EEG complexities than control subjects during all periods of the procedure, as shown in 
                        
                        
                        Figs. 2–4. Repeated measures ANOVA exhibited significant main effects of group in KFD [F(1,17) =40.667, p<0.001], HFD [F(1,17)=12.730, p=0.002], and LZC [F(1,17)=6.791, p=0.018] values. To understand which analyses have a significant effect, p-values obtained from one-way ANOVA for each complexity measure for each stimulation period are listed in 
                        
                        Tables 2 and 3. p-values of each complexity measure in any period lower than those in the other periods indicate the most distinctive complexity values and corresponding brain areas and emotional states between the MDD and control groups. The significant differences between the two groups were obtained mostly in the parietal and frontal scalp areas by the KFD, HFD and LZC measures. In the first baseline (R1) period, it was found that the complexity values obtained by the KFD, HFD and LZC measures of patients׳ frontal and parietal brain regions were higher than those of controls.

A three-way repeated measures ANOVA showed that significant brain region effects were evident in all complexity measures as KFD [F(3,51)=14.089, p=0.002], HFD [F(3,51)=112.144, p=0.001], ShEn [F(3,51)=3.702, p=0.017], LZC [F(3,51)=2.874, p=0.045] and KC [F(3,51)=3.580, p=0.020] values. Post-hoc comparisons indicated that the KFD values of the frontal and parietal regions were significantly higher than the values of other areas. Similarly, the HFD, ShEn, LZC and KC values found to be higher in the frontal area than in the other three regions. The group x region interactions in complexity values were also significant in KFD [F(3,51)=38.446, p<0.001], HFD [F(3,51)=13.533, p<0.001] and ShEn [F(3,51)=3.981, p=0.013] values. Finally, significant region x group x period interactions were observed in KFD [F(12, 204)=2.098, p=0.018] and LZC [F(12, 204)=1.876, p=0.039] values.

The control subjects showed reduced complexity values especially in the frontal and parietal regions, elicited by M stimulus. Namely, this significant difference in the KFD measure from resting state to M stimulus was obtained in both the frontal (p=0.039) and parietal (p=0.005) scalp regions. Moreover, the HFD complexity values in the MDD group were not significantly lower in the M period compared to the baseline period over the parietal region. Interestingly, the MDD group displayed the opposite trend as the LZC and KFD values increased in the M period compared to the first baseline state (R1) over the frontal region (p<0.05). In contrast, the results indicated that during exposure to the noise, the randomness or the complexity by KFD in the EEG signals of MDD patients was increased in the frontal (p<0.001) and parietal (p<0.05) regions. This significant difference was not present for the central and temporal regions. Moreover, the LZC values of MDD patients increased from baseline to noise period in the parietal region. Similarly, according to the paired sample t-test results, the KFD and LZC values during the N period were significantly higher than those of the resting states in the control group (p<0.05). However, the amount of increase in the groups was different. The results showed that the MDD group had the largest overall KFD increase during the noise period compared to the resting baseline state in the frontal brain region. There was not a statistically significant difference in the complexity values between the two groups during the resting period (R3) after the stimulation periods, except in the LZC values of the frontal region. The complexity values generally tended to revert to the levels observed before the stimulation periods in both groups. The EEG complexities decreased, especially in the frontal (by KFD) and parietal (by HFD) regions, when the results of the R1 and R3 periods were compared.

Overall, we also found that the LZC values of the MDD and control groups were closer after the stimulation periods (R3) than at first baseline (R1). This finding might be related to increased complexities in control subjects during noise stimulus. Moreover, according to the paired sample t-test results, LZC values decreased from noise to the R3 period. Therefore, the difference between groups diminished when looking at R3 compared to R1. ANOVA exhibited a significant effect of periods in the KFD values [F(4,68)=11.866, p=0.001]. The highest KFD values were obtained in the N stimulation period. ANOVA revealed significant results for the stimulation period x group interaction in KFD [F(4,68)=5.974, p<0.001] and LZC [F(4,68)=5.443, p=0.001] values. Multiple comparisons showed that while significant differences in KFD values between the MDD and control groups were observed only during the N stimulation (p<0.05), the LZC differences between the two groups were found in all periods. A topographical map of average LZC complexity values at each brain site not only shows these differences between patients and controls but also indicates the general trends in terms of complexity in each group (
                        
                        Figs. 5 and 6). The average LZC values in all recorded regions in the MDD patients also tended to be higher than those in the control subjects.

To investigate the effectiveness of EEG complexity results for discriminating MDD patients from healthy controls, ROCs (receiver operating curves) of each complexity measure were obtained during each experimental period in each region (
                        Fig. 7). This figure shows the most distinctive complexity measures as a combination of period and brain regions. It was found that areas under the ROC curve (AUC) values of KFD and HFD measures were higher during emotional stimulation periods in only two brain regions (frontal and parietal) when compared to resting baseline states.

@&#DISCUSSION@&#

Cognitive disturbances and emotional impairments are common characteristics of MDD patients [56]. A growing number of studies have investigated the emotional processing of MDD patients in vocabulary stimulation or in recognition of emotional facial expressions [38,57-59]. According to these studies, MDD patients showed impaired emotional processing during positive and negative stimuli. In another study, Punkanen et al. [35] found that MDD patients showed a negative bias in emotional evaluations of applied musical stimuli when compared to control subjects, meaning that they demonstrated higher scores for unpleasant stimuli (fear, anger, and sadness) and lower scores for pleasant (happy) stimuli. Although Punkanen et al. suggested that depression affects the evaluating process of emotions in patients, they used only subjective rating scores. The present study investigates different complexity estimators, such as ShEn, LZC, KC, KFD and HFD, in discriminating the MDD patients from healthy controls both at rest and during emotional periods. 
                     Table 4 presents a brief summary of EEG studies with more than ten nonlinear features in MDD patients in the literature. To our knowledge, this is the first study describing emotion-induced changes in EEG complexity in MDD patients.

The main findings in the present work were that MDD patients showed increased EEG complexities (KFD, HFD and LZC) compared to controls both at rest and during emotional stimulation periods. This result is consistent with the findings of past studies, which reported increased complexities in the brain of patients in a resting condition [4,28]. According to previous neuro-imaging studies, this higher complexity has been reported to be related to the changes in brain dynamics caused by decreased white matter and increased gray matter in the frontal region of MDD patients [28,60,61]. Moreover, the increased complexities in MDD patients may be related to the increased variability, or “irregularity”, of their EEG data. Second, it has been found that the complexities are lower when only control subjects receive musical stimulation compared to the resting baseline period. This means that the EEG signals become less complex/random when the participant is subjected to musical stimulation. This decrease in EEG dynamic complexities might be explained by strongly coupled oscillators or the inactivation of previously active neurons and interacting networks [14,62]. In other words, the displayed values of KFD, HFD and LZC suggest that listening to CTM reduces the related region complexities of EEG dynamics in controls in terms of degrees of randomness or degrees of freedom. A similar conclusion was drawn by a previous study that investigated the effect of Mozart׳s music in learning [63]. In that study, less complex EEG activities were observed in healty controls who were solving spatial rotation tasks while listening to Mozart׳s music. These finding suggest that this type of music enhances the learning of applied tasks by reducing the brain complexity. Furthermore, Lamberts et al. [64] and Natarajan et al. [65] showed that subjects had lower EEG complexities when their brains went to a passive or relaxed state. Considering these findings, it may be inferred that the applied musical stimulation causes a decrease in the complexity level of healthy controls׳ brains, which indicates that the subjects are more relaxed during this period. Furthermore, this result can be explained by the self-rating scores of participants for evaluating the emotional content of both stimuli after the experiments. According to results of Pearson׳s Correlation analysis, LZC complexities during the music stimulus showed a significant negative correlation with the self-rated emotion data of the control subjects (p<0.05). It means that brain complexities of subjects decrease significantly as the subjects rate the music to be more positive. On the other hand, we determined that as the rating scores during noise stimulation decreased, the KFD complexities increased in the frontal cortex. This finding may be related to the negative potentiation hypothesis, which suggests an increased emotional reactivity to negative emotional stimuli in MDD patients. According to the results of an extensive meta-analysis of fMRI studies in MDD patients [66], it is believed that multiple levels of emotional processing, including the amygdale, striatum, and prefrontal cortex, are altered in patients׳ brain. MDD patients showed generally increased KFD, HFD and LZC complexity values from baseline into the musical stimulation period, especially in the frontal cortex. In contrast, these measures in control subjects showed similar values from baseline to the music period. Therefore, they may show an emotion-specific condition. The decreased regularities and increased complexities in the EEG signals of MDD patients during music stimulation could be explained by an increase in the dynamic complexity of neural activity in this region. On the other hand, this result might be explained by the observed cognitive impairment of patients, which is associated with the regulation and processing of emotional and cognitive information [67]. Several studies have indicated that patients with MDD display hyperactivity in the brain regions that is critical for cognitive control (prefrontal and frontal cortices) during cognitive tasks in comparison with healthy controls [68,69]. Therefore, the increase in complexity in patients could be due to the increased neural activation in the brain regions implicated in emotional processing, and this result may be related to the deficits in cognitive performance that were reported by Papazacharias and Nardini [67]. These differences between patients and controls in the frontal region are consistent with the findings of the effects of listening to music on neural activity, especially in the prefrontal and frontal cortices [70,71]. Moreover, the HFD complexity values in the MDD group were not significantly lower in the M period compared to the baseline period over the parietal region.

Third, we found an increase in EEG complexities in both groups when subjects listened to noise compared to musical stimulation. It has been reported that the complexities of EEGs are mostly associated with the cognitive activity of the brain [72,73]. In our study, as a cognitive source or task, auditory periods with emotional content were used. MDD patients exhibited significantly higher EEG complexities during the noise period than the music period compared to control subjects. This might be related to the previous hypothesis suggesting that MDD patients have a negative emotional bias and exhibit stronger emotional behaviors/ratings when processing negative emotional stimuli [36,74,75]. In our case, we used the noise period as a disturbing, annoying and negative emotional stimulus. Therefore, this interpretation could also be accepted as being in line with the cognitive theory of depression, introduced by Beck [76], that clarified the patients׳ dysfunctional behaviors during stressful/negative conditions. A previous study by Gotlib et al. [38] found that MDD patients paid more attention to negative emotional faces than positive ones. Therefore, the reasons for this increased brain complexity during noise might be related to the neurophysiological deficits of patients in attention or emotional processing. Moreover, it is in line with the findings of a previous study that reported intensified emotional responses of MDD patients to negative musical stimulus [77]. Additionally, the increase in EEG complexity may be explained by the increased cognitive activity in patients׳ brains during the noise period. Furthermore, we found higher degrees of EEG complexities in patients while listening to noise than in healthy controls. Although MDD patients had significantly different EEG complexities than control subjects during emotional periods, there was not a statistically significant difference in complexity values (except the LZC values of the frontal region) between the two groups during the resting period (R3). After the emotional periods, the complexity values generally tended to revert to the levels observed before the stimulation periods in both groups. That is, after the noise period, EEG complexities decreased. Moreover, the EEG complexities particularly decreased in the frontal (by KFD) and parietal (by HFD) regions when the results of the R1 and R3 periods were compared in MDD patients. In contrast, there were no significant complexity differences between the R1 and R3 periods in the control subjects. Overall, we also found that the LZC values of the MDD and control groups were closer after the stimulation periods (R3) than at first baseline (R1). This finding might be related to increased complexities (LZC and HFD) in control subjects during the noise stimulus.

When the two groups were compared, it was found that patients with MDD showed significantly higher KFD, HFD and LZC values in the frontal and parietal areas. The importance of the frontal lobes in the pathophysiology of depression has been well documented by previous neuro-imaging studies [78-80]. It has been found that the frontal cortex is dysfunctional in depression, and patients have reduced prefrontal and frontal lobe volumes [81]. Studies have also shown that the parietal lobes contribute to the pathology of MDD [82-85]. Previous studies reported decreased volumes of the parietal regions in patients [83,85,86]. In addition, some of these studies found abnormalities in the white matter structures of the parietal cortex in patients with MDD [82,84]. Considering all of these findings, it may be hypothesized that the changes in brain dynamics found in the nonlinear EEG analysis result from neurological variances among some cortical regions of patients with MDD [28]. In a previous thesis study that investigated the nonlinear dynamics of brain signals in healthy musician and non-musician participants, higher complexity values in musicians compared to non-musicians were reported [87]. The author proposed a possible relationship between these findings and anatomical differences between the two groups, which were observed as increased grey and white matter volumes in musicians [88,89]. On the other hand, patients and control subjects did not differ in terms of EEG complexities in the temporal and central lobes (Tables 2 and 3). For example, Table 2 shows the p-values of extracted five EEG features (ShEn, KFD, HFD, LZC, and KC) of the frontal and central regions for discriminating between the two groups. As shown in this table, there is no significant p-value in the central region. Similarly, none of the obtained p-values are significant in the temporal region (Table 3). Therefore, it can be reported that, regardless of the nonlinear method applied, no significant complexity differences were found between the EEGs of MDD patients and controls in the temporal and central regions.

In a previous comprehensive study on schizophrenia patients [20], the successes of different complexity estimators, such as ShEn, ApEn, spectral entropy, LZC, and HFD, were compared to obtain an optimum discrimination between patients and control subjects. These authors found that the LZC, ApEn, and HFD measures of EEG were more optimal for discrimination. In our study, the high AUC values of the ROC curve confirmed the ability of the KFD and HFD predictors in the frontal and parietal regions for distinguishing between patients and controls.

@&#CONCLUSION@&#

In this paper, we have calculated different EEG complexity measures both at rest and during emotional states in MDD patients and in control subjects to better understand the underlying brain dynamics. We found that the KFD, HFD and LZC values were more sensitive in detecting EEG complexities and in discriminating between two groups than the ShEn and KC values, according to the results of ANOVA. We conclude that there were differences in the EEG complexities between resting and emotional stimulation periods; that both the groups presented an increase in the EEG complexities while listening to noise; and that there was a decrease in brain complexity when control subjects receive musical stimulation compared to the resting baseline period. In terms of EEG complexities, better discrimination rate were obtained using the KFD, HFD and LZC algorithms than the KC and ShEn methods. Therefore, it can be reported that the ShEn and KC methods might not be good nonlinear features for the EEG data in our study. It was found that the emotional processing in the patients׳ brains were quantitatively more complicated and complex. The brains of MDD patients had higher complexities than healthy controls when they were expose to noise stimulus as a negative and stressful period. MDD patients׳ negative emotional bias was shown in the nonlinear EEG analysis.

Although we found that the nonlinear EEG analysis showed significant differences between patients with MDD and controls during both resting and emotional stimulation states, some limitations must be taken into account when planning future studies. First, the sample size of the participants in our research was small. To prove the usefulness of these complexity measures in EEG signals as a diagnostic tool for MDD, these analyses should be performed on much larger populations. Moreover, further studies must be carried out to investigate whether the observed complexity variances in the EEG during different emotional periods are specific to MDD patients. In particular, it will also be important to compare observed findings in different pathological or psychological disorders such as bipolar depression, schizophrenia, and epilepsy. Moreover, the complexity changes produced by emotional periods should be studied by taking into account the symptom severities, gender effects, and medication status of patients with MDD.

Future classification studies need to investigate and confirm these results using different complexity estimators, such as sample entropy, ApEn, Hurst׳s exponent, recurrence quantification analysis and higher-order spectra. The experimental results in this study show the effectiveness of some nonlinear measures for investigating the dynamical behavior of patients׳ brains during emotional periods. Because an increasing number of studies have investigated the diagnostic ability of different nonlinear EEG features in MDD patients, all findings, including ours, for clarifying the underlying dynamical activity of the brain may provide objective criteria in clinical practice.

There is no conflict of interest for this study.

@&#ACKNOWLEDGMENTS@&#

This study was funded by TÜBİTAK (The Scientific and Technical Research Council of Turkey) under project number 112E317.

Supplementary data associated with this article can be found in the online version at 10.1016/j.compbiomed.2015.09.019.


                     
                        
                           
                              Supplementary material
                           
                           
                        
                     
                  

@&#REFERENCES@&#

